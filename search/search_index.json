{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Inici","text":""},{"location":"index.html#recursos-docencia-xavier-sastre","title":"Recursos Doc\u00e8ncia Xavier Sastre","text":""},{"location":"index.html#curs-2025-2026","title":"Curs 2025-2026","text":"<ul> <li> <p> DAW DWES Desenvolupament Web Entorn Servidor</p> <p> UT01 Arquitectures Web</p> <p> Diapositives UT01</p> <p> Col\u00b7lecci\u00f3 exercicis PHP</p> <p> UT02 Llenguatge PHP </p> <p> UT03 Llenguatge PHP Orientat a objectes</p> <p> Col\u00b7lecci\u00f3 exercicis PHP Orientat a objectes</p> </li> <li> <p> DAW DWEC Desenvolupament Web Entorn Client</p> <p> UT01 Arquitectures Web</p> <p> Diapositives UT01 </p> <p> UT02 Llenguatge Javascript (revisat) </p> <p> Diapositives UT02 </p> <p> UT03 Model d\u2019objectes predefinits a JavaScript </p> <p> Diapositives UT03 </p> </li> </ul> <ul> <li> <p> Normativa de ciberseguretat </p> <p> UT01 Compliment normatiu </p> <p> UT02 Disseny de sistemes de gesti\u00f3 de compliment normatiu </p> </li> <li> <p> Projecte Intermodular </p> <p> Acc\u00e9s als continguts  En revisi\u00f3 </p> </li> </ul>"},{"location":"Moduls/CECNC/index.html","title":"Introducci\u00f3 i index","text":""},{"location":"Moduls/CECNC/index.html#normativa-de-ciberseguretat","title":"Normativa de Ciberseguretat","text":"<p>Curs d'Especialitzaci\u00f3 en Ciberseguretat - 2025 / 26</p> <p>Benvingudes i benvinguts</p> <p>En aquest m\u00f2dul explorarem el marc normatiu, les lleis i les bones pr\u00e0ctiques que regulen la ciberseguretat a nivell nacional i internacional. Comprendre la normativa \u00e9s clau per dur a terme qualsevol tasca professional en el sector digital.</p>"},{"location":"Moduls/CECNC/index.html#que-aprendrem","title":"Qu\u00e8 aprendrem?","text":"<ul> <li>Lleis i regulacions sobre ciberseguretat (LOPDGDD, RGPD, NIS2, etc.)</li> <li>Normes t\u00e8cniques i est\u00e0ndards (ISO/IEC 27001, ENS...)</li> <li>Responsabilitats legals i \u00e8tiques en l'\u00fas i protecci\u00f3 de la informaci\u00f3&lt;</li> <li>Protocols d\u2019actuaci\u00f3 en incidents de seguretat</li> <li>Marc competencial professional i deontologia</li> </ul>"},{"location":"Moduls/CECNC/index.html#objectius-del-modul","title":"Objectius del m\u00f2dul","text":"<ul> <li>Identificar les normatives aplicables a entorns digitals</li> <li>Interpretar obligacions i responsabilitats de l\u2019organitzaci\u00f3 i de l\u2019usuari</li> <li>Aplicar protocols i normes en casos pr\u00e0ctics</li> <li>Garantir el compliment legal i \u00e8tic en projectes de seguretat</li> </ul>"},{"location":"Moduls/CECNC/UT01.html","title":"Material te\u00f2ric","text":""},{"location":"Moduls/CECNC/UT01.html#ut01-punts-principals-sobre-el-compliment-normatiu","title":"UT01.- Punts principals sobre el compliment normatiu","text":"<p>Al llarg d'aquesta unitat desenvoluparan una s\u00e8rie de conceptes sobre el compliment normatiu de l'objectiu de:</p> <ol> <li>Identificar les bases del compliment regulador a tenir en compte a les organitzacions.</li> <li>Con\u00e8ixer els principis del bon govern i la seva relaci\u00f3 amb l\u2019\u00e8tica professional.</li> <li>Construir un conjunt de pol\u00edtiques i procediments, aix\u00ed com una estructura organitzativa que estableixi la cultura de compliment normatiu dins de les organitzacions.</li> <li>Descriure les funcions i compet\u00e8ncies del responsable de compliment normatiu.</li> <li>Establir les relacions amb tercers per a un correcte compliment normatiu.</li> </ol> <p>Aquesta unitat est\u00e0 enfocada en elements introductoris, per la qual cosa es desenvoluparan, en concret, els continguts seg\u00fcents:</p> <ol> <li>Introducci\u00f3 al compliment normatiu (Compliance: objectiu, definici\u00f3 i conceptes principals).</li> <li>Principis del bon govern i \u00e8tica empresarial.</li> <li>Compliance Officer: funcions i responsabilitats.</li> <li>Relacions amb terceres parts dins del Compliance.</li> </ol>"},{"location":"Moduls/CECNC/UT01.html#1-introduccio-al-compliment-normatiu","title":"1 - Introducci\u00f3 al compliment normatiu","text":""},{"location":"Moduls/CECNC/UT01.html#definicio-objectiu-i-funcio-del-compliment-normatiu","title":"Definici\u00f3, objectiu i funci\u00f3 del compliment normatiu.","text":"<p>El compliment consisteix a establir una s\u00e8rie de processos en una organitzaci\u00f3, que, acompanyats d'un conjunt de pol\u00edtiques i procediments aconsegueixin assegurar que es respectin tots els requeriments legals, normatius i compromisos interns i amb tercers que siguin d'aplicaci\u00f3 a l'organitzaci\u00f3.</p> <p>El principal objectiu del compliment -tamb\u00e9 denominat compliance- \u00e9s, en definitiva, el de garantir que una organitzaci\u00f3 compleix amb les seves obligacions adquirides com a conseq\u00fc\u00e8ncia del funcionament del seu negoci..</p> <p>La funci\u00f3 de compliance implica l'adopci\u00f3 dins de l'organitzaci\u00f3 de diferents components que suporten la seva funci\u00f3, com ara:</p> <ul> <li>Un codi \u00e8tic, com un conjunt de principis i pautes de conducta que conformen la cultura organitzacional d'una empresa.</li> <li>Un conjunt de bones pr\u00e0ctiques, que, essent ja adoptades i provades d'ocasionar beneficis en organitzacions, estan demostrades i reconegudes per proporcionar beneficis en organitzacions similars.</li> <li>Una identificaci\u00f3 de compromisos a dividir en: legals, normatius, contractuals, organitzacionals.</li> <li>L'exist\u00e8ncia d'un responsable de compliment, encarregat d'assegurar que es respectin, les normes, lleis, i en general, compromisos adquirits per l'organitzaci\u00f3, i, que supervisi el bon funcionament del sistema de gesti\u00f3 de compliment.</li> <li>L'exist\u00e8ncia d'un canal de den\u00fancies, per articular la comunicaci\u00f3 an\u00f2nima de qualsevol tipus de violaci\u00f3 de les normes existents.</li> <li>Activitats de formaci\u00f3 per conscienciar l'organitzaci\u00f3 sobre els deures i obligacions sobre el compliment i per a la creaci\u00f3 d'una cultura organitzacional de compliment.</li> <li>L'exist\u00e8ncia d'un sistema de gesti\u00f3 de compliment, per operar i assegurar la millora cont\u00ednua del proc\u00e9s de compliment.</li> </ul> <p>Com s'ha comentat, el compliment normatiu implica el disseny d'una s\u00e8rie de pol\u00edtiques, processos i procediments que s'hauran de respectar durant el funcionament del negoci per impedir actuacions delictives i sancions per infringir la llei, no obstant aix\u00f2, no s'ha de limitar \u00fanicament a les lleis aplicables, sin\u00f3 que ha de tenir en compte diferents elements com pol\u00edtiques internes,  compromisos contractuals amb clients, prove\u00efdors o tercers, a m\u00e9s, tamb\u00e9 ha de comptar amb un enfocament \u00e8tic, ja que el funcionament negoci d'acord amb la legislaci\u00f3 no sempre \u00e9s d'acord amb un codi \u00e8tic.</p>"},{"location":"Moduls/CECNC/UT01.html#compromisos-de-les-organitzacions","title":"Compromisos de les organitzacions","text":"<p>Els compromisos adquirits per una organitzaci\u00f3, es poden classificar en dues categories diferents, d\u2019una banda, aquells que poden ser d\u2019obligat compliment, com pot ser la legislaci\u00f3 vigent, sent\u00e8ncies d\u2019un tribunal o un jutge, o imposicions sota contracte amb un tercer. D\u2019altra banda, es podria definir una categoria de compromisos voluntaris que l\u2019empresa decideix assumir, com ara codis \u00e8tics, est\u00e0ndards, normatives o bones pr\u00e0ctiques.</p> <p>A continuaci\u00f3, es presenten alguns dels compromisos possibles que poden ser adquirits per una organitzaci\u00f3:</p> <p>Compromisos d\u2019obligat compliment:</p> <p>En aquest tipus de compromisos implica un alt nivell de risc m\u00e9s elevat per a la companyia, ja que en cas d'incompliment, poden existir sancions econ\u00f2miques i penals, es podrien posar en risc contractes signats amb clients, amb la conseg\u00fcent p\u00e8rdua de negoci, aix\u00ed com ocasionar p\u00e8rdues en la imatge i reputaci\u00f3 de la companyia.</p> <p>Legislaci\u00f3 vigent:</p> <p>Qualsevol empresa est\u00e0 sotmesa a una legislaci\u00f3 pel sol fet de mantenir la seva funci\u00f3. El compliment legislatiu est\u00e0 tamb\u00e9 associat a un dels principals riscos als quals es veu sotm\u00e8s una organitzaci\u00f3, el risc penal, financer i reputacional. Aquest haur\u00e0 de ser tingut en compte a l\u2019hora d\u2019identificar, analitzar i gestionar els riscos dins del pla de gesti\u00f3 de compliment.</p> <p>Qualsevol empresa que tingui la seva activitat a Espanya ha de respectar, per exemple, les lleis seg\u00fcents:</p> <ul> <li>Llei de Societats de Capital: \u00e9s la llei que regula les societats a Espanya. Totes les persones que cre\u00efn una societat empresa han de con\u00e8ixer que drets i obligacions tenen com a socis i administradors, i les conseq\u00fc\u00e8ncies sobre el seu propi patrimoni podria tenir el no actuar d\u2019acord amb la legislaci\u00f3.</li> <li>Llei d\u2019impost de societats: \u00e9s la legislaci\u00f3 sobre la tributaci\u00f3 de les activitats econ\u00f2miques d\u2019una societat. Regula els impostos sobre els rendiments de negoci i les deduccions, bonificacions i tipus impositius, una cosa similar a l\u2019IRPF, per\u00f2 per a empreses.</li> <li>Llei de l'Impost sobre el Valor Afegit: es tracta de la llei que regula els impostos sobre els productes i serveis que presta l'empresa cap al consumidor final, aquesta llei estableix que, com a prove\u00efdora i consumidora de productes i serveis, una organitzaci\u00f3 ha de suportar i repercutir l'Impost de Valor Afegit (IVA), en cas que l'IVA repercutit sigui m\u00e9s gran que el suportat,  l\u2019empresari ha de pagar a hisenda la difer\u00e8ncia en concepte d\u2019IVA.</li> <li>Llei de marques: \u00e9s la legislaci\u00f3 per a la protecci\u00f3 dels elements distintius d\u2019una empresa, a trav\u00e9s d\u2019ella es regiran els drets sobre les marques i els noms comercials de productes i serveis d\u2019una empresa espanyola. La sol\u00b7licitud i tramitaci\u00f3 de les marques a Espanya, es realitza a trav\u00e9s de l'Oficina Espanyola de Patents i Marques, i han d'especificar les tipologies de productes i serveis que es vol identificar. Aquestes, poden ser renovades de manera indefinida o per per\u00edodes de deu anys.</li> <li>Llei de Serveis de la Societat de la Informaci\u00f3 i de comer\u00e7 electr\u00f2nic (LSSI-CE): Es tracta de la llei que regula les activitats comercials realitzades a trav\u00e9s d'internet. Principalment defineix els requisits que han de complir els llocs web de comer\u00e7 electr\u00f2nic de totes aquelles empreses registrades a Espanya. En ella, s'estableix que en els llocs de comer\u00e7 electr\u00f2nic ha de constar el nom del domini d'Internet, oferir informaci\u00f3 sobre l'empresa, col\u00b7laborar amb les autoritats i retenir les dades concernents a comunicacions electr\u00f2niques.</li> <li>Reglament General de Protecci\u00f3 de Dades (RGPD): Estableix les normes relatives a la protecci\u00f3 de les persones f\u00edsiques pel que fa al tractament de les dades personals i les normes relatives a la lliure circulaci\u00f3 d'aquestes dades. A m\u00e9s, protegeix els drets i llibertats fonamentals de les persones f\u00edsiques i, en particular, el seu dret a la protecci\u00f3 de les dades personals. Finalment, regula la lliure circulaci\u00f3 de les dades personals a la Uni\u00f3, que no podr\u00e0 ser restringida ni prohibida per motius relacionats amb la protecci\u00f3 de les persones f\u00edsiques pel que fa al tractament de dades personals.</li> <li>Llei Org\u00e0nica de Protecci\u00f3 de Dades i Garantia dels Drets Digitals (LOPD): \u00c9s l'adaptaci\u00f3 a la normativa local espanyola al Reglament Europeu de Protecci\u00f3 de Dades (RGPD), l'objectiu d'aquesta llei \u00e9s proporcionar una base legal per al tractament de les dades personals de les persones f\u00edsiques, a m\u00e9s, en la normativa nacional s'inclouen articles enfocats en la garantia dels drets digitals com ara la desconnexi\u00f3 digital,  dret a l\u2019oblit, seguretat digital, protecci\u00f3 de menors.</li> </ul> <p>Obligacions per manament judicial, tribunals o sent\u00e8ncies judicials:</p> <p>En aquest tipus d\u2019obligacions, implica una acci\u00f3 per part de l\u2019organitzaci\u00f3 que els rep, aquestes accions podrien ser, des de la proporci\u00f3 de certa informaci\u00f3 a un judgat o a forces i cossos de seguretat de l\u2019estat, fins al pagament de multes o sancions, fins i tot la modificaci\u00f3 del seu model de negoci, fins al punt de la rescissi\u00f3 de les llic\u00e8ncies que permeten executar l\u2019activitat de l\u2019organitzaci\u00f3. Aquest tipus d\u2019obligacions poden implicar grans riscos per a les organitzacions i han de ser tingudes en compte en el moment de construir els sistemes de gesti\u00f3 de compliment.</p> <p>Obligacions per contracte de tercers:</p> <p>En ocasions, les organitzacions es comprometen en el compliment de certes normes com a forma de garantir els seus serveis, en general es tracta de condicions que podrien classificar-se com a compromisos voluntaris, per\u00f2, en ser incloses en els contractes de prestaci\u00f3 de serveis, esdevenen compromisos d\u2019obligat compliment.</p> <p>Una mostra d\u2019aquest tipus d\u2019obligacions poden ser els compromisos contractuals de certificaci\u00f3 en normes ISO, com pot ser la 9001 sobre sistemes de gesti\u00f3 de la qualitat, 14001 sobre sistemes de gesti\u00f3 ambiental, 20001 sobre gesti\u00f3 de serveis de TI, i ISO 27001 sobre sistemes de gesti\u00f3 de seguretat de la informaci\u00f3.</p> <p>Compromisos voluntaris:</p> <p>Els compromisos voluntaris tenen un menor nivell de risc quant a les conseq\u00fc\u00e8ncies directes derivades del seu incompliment, ja que en el curt termini aquestes seran molt lleus i podrien limitar-se a danys reputacionals, no obstant aix\u00f2, aquest tipus compromisos signifiquen un millor funcionament per a l\u2019organitzaci\u00f3, podent implicar en funci\u00f3 dels esfor\u00e7os realitzats, un funcionament m\u00e9s eficient,  segur i respectu\u00f3s amb la societat i medi ambient. Aquests poden ser:</p> <ul> <li> <p>Pol\u00edtiques i procediments:</p> <p></p> <p></p> <p>Les pol\u00edtiques i procediments integren les normes, regles i directrius a trav\u00e9s de les quals s\u2019ha de regir una organitzaci\u00f3.</p> <p>Les pol\u00edtiques han de ser espec\u00edfiques per a cada organitzaci\u00f3 i establir-ne els principis i el mode de comportament. Aquests documents, s\u00f3n en general escrits en llenguatge d\u2019alt nivell sense incloure detalls t\u00e8cnics ja que s\u00f3n directrius, estrat\u00e8gics. Les pol\u00edtiques d'una organitzaci\u00f3 tenen diversos objectius, principalment ajuden a aconseguir els objectius estrat\u00e8gics d'una organitzaci\u00f3, estalviar temps i costos en la presa de decisions rutin\u00e0ries, implementar sistemes normatius de gesti\u00f3 empresarial (qualitat, medi ambient, seguretat de la informaci\u00f3), redueixen els riscos empresarials i ajuden a millorar el control directiu, administratiu i operatiu de la companyia.</p> <p>Si b\u00e9 les pol\u00edtiques s\u00f3n documents estrat\u00e8gics, els procediments, s\u00f3n els documents que defineixen les t\u00e0ctiques a trav\u00e9s de les quals s'aconseguiran els objectius de la companyia. En general s\u00f3n documents amb un nivell de detall m\u00e9s elevat, que descriuen una manera d\u2019executar una activitat o un proc\u00e9s dins de l\u2019empresa.  El procediment pot descriure un proc\u00e9s empresarial complet, descrivint pas a pas les activitats que el comprenen.</p> </li> <li> <p>Normes i est\u00e0ndards:</p> <p>Una norma \u00e9s una forma comunament acceptada de dur a terme una activitat.  En general, pot tractar-se de qualsevol proc\u00e9s empresarial, no obstant aix\u00f2, en relaci\u00f3 amb tecnologies d\u2019informaci\u00f3, es poden definir com a formes de gestionar els sistemes i tecnologies d\u2019informaci\u00f3 i comunicacions d\u2019una organitzaci\u00f3.</p> <p>L'exemple m\u00e9s conegut s\u00f3n les ISO (International Organization for Standardization), que, encara que no estiguin limitades a la gesti\u00f3 de processos d'IT si s\u00f3n les m\u00e9s generalitzades, per exemple, la norma ISO 20000 de gesti\u00f3 de serveis TI, la ISO 27001 de gesti\u00f3 de seguretat de la informaci\u00f3 o la ISO 22301 sobre continu\u00eftat de negoci. A Espanya, la transposici\u00f3 a aquests est\u00e0ndards s\u00f3n les normes UNE ( Una Norma Espanyola), publicades per l'Associaci\u00f3 Espanyola per a la NORmalitzaci\u00f3 i Certificaci\u00f3 (AENOR).</p> </li> <li> <p>Bones Pr\u00e0ctiques i Millors pr\u00e0ctiques:</p> <p>Les bones pr\u00e0ctiques s\u00f3n accions recomanades per dur a terme una activitat que han resultat satisfact\u00f2ries per a l\u2019organitzaci\u00f3, aquestes activitats, han de ser documentades per tal de crear guies, procediments, directrius o manuals d\u2019execuci\u00f3 d\u2019un proc\u00e9s.</p> <p>Les millors pr\u00e0ctiques s\u00f3n accions, que, si b\u00e9 han demostrat ser satisfact\u00f2ries per a l\u2019organitzaci\u00f3, han estat monitoritzades i optimitzades per obtenir els millors resultats en execuci\u00f3 i efici\u00e8ncia en els objectius d\u2019una organitzaci\u00f3. Les millors pr\u00e0ctiques s\u00f3n fruit de l\u2019an\u00e0lisi i aplicaci\u00f3 de coneixements i processos empresarials dels resultats obtinguts dels mateixos, del que s\u2019ha identificat \u00e9s benefici\u00f3s per a l\u2019organitzaci\u00f3, de les lli\u00e7ons apreses despr\u00e9s d\u2019incid\u00e8ncies, i en definitiva despr\u00e9s de la reflexi\u00f3 sobre resultats i aprenentatge continu.</p> </li> <li> <p>Marcs de treball o Frameworks:</p> <p>Els marcs de treball s\u2019enfoquen en el com implementar una s\u00e8rie de processos en una organitzaci\u00f3, aquests poden ser constru\u00efts basant-se en normes existents, per\u00f2 desenvolupant un conjunt de processos i bones pr\u00e0ctiques que marquen els passos per desenvolupar certes funcions dins d\u2019una companyia. Establint t\u00e8cniques estandarditzades d\u2019operaci\u00f3 incrementant el valor i l\u2019efici\u00e8ncia dels processos TI i per tant, del negoci. Exemple de marcs de treball s\u00f3n:</p> <ul> <li>ITIL: Acr\u00f2nim en angl\u00e8s de \"Biblioteca d'Infraestructura per a les Tecnologies de la Informaci\u00f3\", consisteix en una s\u00e8rie de llibres que recullen els processos i bones pr\u00e0ctiques per a la gesti\u00f3 de les tecnologies d'informaci\u00f3 obtingudes de diverses fonts. L'\u00faltima versi\u00f3 d'ITIL (v4) publicada el 2019, s'enfoca en l'automatitzaci\u00f3 de serveis IT, la gesti\u00f3 dels serveis, i la integraci\u00f3 de les \u00e0rees d'IT en el negoci de l'organitzaci\u00f3.</li> <li> <p>Objectius de Control per a Tecnologies de la Informaci\u00f3 i Relacionades (COBIT, per les seves sigles en angl\u00e8s): \u00c9s un marc desenvolupat per ISACA l'objectiu de desenvolupar estrat\u00e8gies de gesti\u00f3 i govern de la informaci\u00f3 i a m\u00e9s inclou eines per construir, supervisar i millorar processos IT despr\u00e9s de la seva implementaci\u00f3 i proveir de solucions per a la gesti\u00f3 de riscos.  Cobit inclou 40 objectius de gesti\u00f3 per ajudar les organitzacions, per aconseguir els seg\u00fcents objectius:</p> </li> <li> <p>Alinear els objectius empresarials amb els objectius inform\u00e0tics</p> </li> <li>Establir un marc de governan\u00e7a s\u00f2lid</li> <li>Navegar pel govern de la informaci\u00f3, la gesti\u00f3 de riscos i la seguretat</li> </ul> </li> <li> <p>Codi \u00e8tic:</p> <p>El codi \u00e8tic \u00e9s el conjunt de valors, principis i pautes a trav\u00e9s de les quals s\u2019ha de regir la cultura d\u2019una organitzaci\u00f3. Associat al codi \u00e8tic de l\u2019organitzaci\u00f3, podem trobar el codi de conducta, en el qual s\u2019establiran les directrius comportamentals que han de regir la manera d\u2019actuar dels professionals que componen l\u2019organitzaci\u00f3.</p> <p>Sota l\u2019\u00e0mbit del codi \u00e8tic de l\u2019empresa, es poden establir elements com les relacions entre persones, la discriminaci\u00f3, el medi ambient, el suborn i l\u2019\u00fas d\u2019informaci\u00f3 privilegiada i la responsabilitat social corporativa. El codi \u00e8tic permet prendre decisions als integrants de l\u2019organitzaci\u00f3 en relaci\u00f3 a la realitzaci\u00f3 del seu treball i en les seves relacions amb altres persones i organitzacions, establint quin ha de ser el seu comportament m\u00e9s apropiat.</p> <p>El codi \u00e8tic va m\u00e9s enll\u00e0 de la legislaci\u00f3 i dels compromisos obligatoris d\u2019una organitzaci\u00f3. Les activitats d\u2019una empresa poden ser considerades legals, i tanmateix, aquestes mateixes activitats, poden de dubtosa eticitat.  Per exemple: \u00c9s legal que un esportista que participa en un torneig pugui cobrar una comissi\u00f3 per l\u2019organitzaci\u00f3 d\u2019aquest torneig en un pa\u00eds estranger, per\u00f2, no \u00e9s \u00e8tic el cobrament d\u2019aquesta comissi\u00f3 degut principalment a: 1) la participaci\u00f3 de l\u2019esportista en la competici\u00f3 que ha ajudat a organitzar, 2) dur a terme una acci\u00f3 que t\u00e9 impacte sobre un o diversos grups per aconseguir un benefici individual o de molt pocs individus, 3) cobrar una comissi\u00f3 elevada, 4) el greuge comparatiu en la remuneraci\u00f3 de la resta d\u2019esportistes, 5) l\u2019impacte que pot ocasionar en costos log\u00edstics per a la resta d\u2019esportistes i clubs que formen part de la competici\u00f3, 6) el cost mediambiental que implica traslladar una competici\u00f3 a un altre pa\u00eds a diversos milers de quil\u00f2metres de dist\u00e0ncia.</p> </li> </ul>"},{"location":"Moduls/CECNC/UT01.html#2-principis-del-bon-govern-i-etica-empresarial","title":"2 -Principis del bon govern i \u00e8tica empresarial","text":""},{"location":"Moduls/CECNC/UT01.html#el-bon-govern-corporatiu","title":"El bon govern corporatiu","text":"Image by  Mariakray from Pixabay <p>El govern corporatiu t\u00e9 a veure amb la presa de decisions per part de la direcci\u00f3 de l'empresa i de la seva estrat\u00e8gia corporativa.</p> <p>Per obtenir suport a aquest tipus de decisions, s\u2019estableixen processos de bon govern corporatiu que consisteixen en el conjunt de regles, processos i principis utilitzats pels consells de govern de les empreses per prendre decisions que afectin l\u2019empresa i la seva relaci\u00f3 amb tots els actors involucrats i parts interessades.</p> <p>Les decisions preses per les empreses de gran grand\u00e0ria poden tenir una gran repercussi\u00f3 en la societat, per aquest motiu conv\u00e9 tenir unes normes i pautes d\u2019actuaci\u00f3 que ajudin a prendre decisions en les organitzacions, i especialment pel que fa a elements com estrat\u00e8gia de la companyia i inversions, per\u00f2 tamb\u00e9 en altres elements com fusions i adquisicions.</p> <p>Els processos de bon govern corporatiu tenen com a objectiu principal millorar la credibilitat de les organitzacions introduint elements que garanteixin la veracitat, transpar\u00e8ncia i responsabilitat social corporativa en les decisions de gesti\u00f3 empresarial preses per les c\u00fapules directives.</p> <p>Dins d\u2019aquestes pautes, hi ha l\u2019exist\u00e8ncia d\u2019eines de control corporatiu, que siguin utilitzades per mesurar les decisions de l\u2019organitzaci\u00f3 des del punt de vista econ\u00f2mic, social o estrat\u00e8gic.</p> <p>Un altre element del bon govern implica el concepte de compliment normatiu, i com a conseq\u00fc\u00e8ncia, el compliment de la llei vigent i la reducci\u00f3 del risc de qualsevol conseq\u00fc\u00e8ncia penal o econ\u00f2mica per a la companyia i la seva direcci\u00f3.</p> <p>Aix\u00ed mateix, un altre objectiu consisteix a vigilar i controlar els comportaments de la companyia, de les \u00e0rees de negoci i dels seus integrants, establint drets i obligacions de les mateixes i vigilant el seu compliment.</p> <p>Les activitats relacionades amb el bon govern corporatiu poden ser interpretades pel mercat com un avantatge competitiu, per aix\u00f2, s\u00f3n utilitzades com una m\u00e8trica de situaci\u00f3 respecte a la compet\u00e8ncia, i una manera de dur a terme accions de millora que principalment estaran relacionades amb els majors beneficis generats pel bon govern, com l\u2019augment de la confian\u00e7a del mercat,  la millora dels processos interns de la companyia i la garantia de funcionament dins dels marges de la llei, com a exemple, un dels elements que m\u00e9s es realitza dins de les pol\u00edtiques de bon govern corporatiu s\u00f3n la prevenci\u00f3 de delictes fiscals i blanqueig de capitals, existint-ne d'altres m\u00e9s relacionats amb l'estricte compliment normatiu m\u00e9s enfocats a la prevenci\u00f3 del finan\u00e7ament del terrorisme.</p> <p>Durant els \u00faltims anys, totes les companyies s'han vist immerses d'alguna o altra forma en processos de digitalitzaci\u00f3. L\u2019\u00fas d\u2019eines digitals, de tecnologies de comunicaci\u00f3 i d\u2019obertura a internet, comporta inevitablement un augment dels riscos de les organitzacions.  Per aix\u00f2, i cada vegada m\u00e9s, les organitzacions centren els seus esfor\u00e7os en el control dels seus sistemes d\u2019informaci\u00f3, i per tant la protecci\u00f3 de la seva infraestructura tecnol\u00f2gica contra ciberincidents que puguin tenir impacte en la confidencialitat, integritat i disponibilitat de la seva informaci\u00f3 i per tant en els seus processos de negoci.</p> <p>En l'actualitat, una de les normatives amb major impacte per a les empreses \u00e9s la Llei Org\u00e0nica de Protecci\u00f3 de Dades nacional (LOPD), i a nivell europeu la Regulaci\u00f3 General de Protecci\u00f3 de Dades (RGPD), la finalitat principal de la qual \u00e9s augmentar el control de les companyies respecte a la informaci\u00f3 que manegen, i en especial el de les dades dels seus clients.</p> <p>El bon govern corporatiu t\u00e9 part tamb\u00e9 en elements m\u00e9s relacionats amb l\u2019\u00e8tica i no tant amb les limitacions legals o normatives, com poden ser les retribucions dels seus consellers. Les empreses cotitzades han de realitzar un informe de retribuci\u00f3 dels seus consellers amb car\u00e0cter anual. Aquesta retribuci\u00f3 ha de ser sotmesa a votaci\u00f3 i aprovada en junta d\u2019accionistes per evitar que els comit\u00e8s de direcci\u00f3 de les companyies tinguin retribucions allunyades de la realitat del mercat i a m\u00e9s garantir la transpar\u00e8ncia en encabir els seus clients i actors relacionats.</p> <p>Com a part de les activitats relacionades amb el bon govern corporatiu, s\u2019ha de realitzar un informe anual d\u2019avaluaci\u00f3 de compliment d\u2019objectius, la finalitat d\u2019aquest proc\u00e9s \u00e9s establir un pla de compliment, mesurant les accions realitzades i establint plans d\u2019acci\u00f3 correctiva en cas necessari, l\u2019informe cobreix de manera anual les activitats d\u2019un proc\u00e9s de revisi\u00f3,  com s\u00f3n:</p> <ul> <li> <p>Disseny:</p> <ul> <li>An\u00e0lisi del negoci i aspectes que cal avaluar.</li> </ul> </li> <li> <p>Avaluaci\u00f3:</p> <ul> <li>Q\u00fcestionari d\u2019avaluaci\u00f3.</li> <li>An\u00e0lisi de la documentaci\u00f3 interna i externa de l\u2019organitzaci\u00f3.</li> <li>Entrevistes amb la direcci\u00f3.</li> </ul> </li> <li> <p>Diagn\u00f2stic:</p> <ul> <li>Conclusions i recomanacions.</li> </ul> </li> <li> <p>Resposta:</p> <ul> <li>Pla d\u2019accions correctives.</li> </ul> </li> </ul> <p>El bon govern corporatiu est\u00e0 \u00edntimament relacionat amb el compliment normatiu at\u00e8s que un dels principals elements que ha de tenir en compte el bon govern, t\u00e9 a veure amb la bona execuci\u00f3 d\u2019un proc\u00e9s de compliment normatiu. Aquesta relaci\u00f3 es fa cada vegada m\u00e9s necess\u00e0ria a partir de l\u2019any 2010 en el qual, el codi penal recull responsabilitats penals per a persones jur\u00eddiques. A m\u00e9s, la llei de societats de capital, tamb\u00e9 requereix des d'aquest mateix any la introducci\u00f3 de pol\u00edtiques de bon govern corporatiu tant a companyies cotitzades com a companyies que no ho estan.</p> <p>Precisament, hi ha diverses funcions que tenen a veure tant amb el bon govern corporatiu com amb el compliment normatiu, entre elles:</p> <ul> <li>L\u2019aprovaci\u00f3 dels plans estrat\u00e8gics, plans de negoci, pressupostos corporatius, i la pol\u00edtica de responsabilitat social corporativa, entre d\u2019altres.</li> <li>Definici\u00f3 de pol\u00edtiques de gesti\u00f3 de riscos que cobreixin a m\u00e9s dels riscos del propi negoci, aquells relacionats amb l\u2019incompliment legal, fiscal, i sancions penals.</li> <li>Establiment dels governs corporatius, i funcions relacionades amb la presa de decisions sobre</li> <li>Definici\u00f3 de codis \u00e8tics, pol\u00edtiques de transpar\u00e8ncia i de compliment legal que donin suport a la presa de decisions.</li> <li>Presa de decisions relacionades amb els sistemes de gesti\u00f3 de compliance.</li> </ul> <p>Elements amb els quals ha de comptar una pol\u00edtica de bon govern corporatiu:</p> <ul> <li> <p>Cultura, valors i principis de l\u2019organitzaci\u00f3.</p> <ul> <li>Exist\u00e8ncia de missi\u00f3 i visi\u00f3 de l\u2019organitzaci\u00f3.</li> <li>Exist\u00e8ncia d'un codi de conducta.</li> <li>Canal de den\u00fancies obert i an\u00f2nim.</li> <li>R\u00e8gim sancionador davant d\u2019incompliments del codi de conducta.</li> <li>Principis \u00e8tics de comportaments i presa de decisions.</li> </ul> </li> <li> <p>Supervisi\u00f3 de l\u2019entorn de control de l\u2019organitzaci\u00f3.</p> <ul> <li>Definici\u00f3 dels equips de supervisi\u00f3 del sistema de control intern (auditoria interna, reportant directament al comit\u00e8 de direcci\u00f3).</li> <li>Exist\u00e8ncia de consellers externs i independents.</li> <li>Independ\u00e8ncia dels consellers en funci\u00f3 amb rols o negocis previs.</li> <li>Formaci\u00f3 dels consellers en pol\u00edtiques de control intern i gesti\u00f3 de riscos.</li> </ul> </li> <li> <p>Estructura organitzativa de l\u2019empresa:</p> <ul> <li>Exist\u00e8ncia d\u2019un organigrama amb el detall de l\u00ednies de negoci, funcionals, geogr\u00e0fiques, auxiliars i divisions per entitats legals.</li> <li>Definici\u00f3 de rols i responsabilitats per a cada funci\u00f3.</li> <li>Segregaci\u00f3 de rols i responsabilitats.</li> <li>Report coherent a l\u2019estructura organitzativa.</li> </ul> </li> <li> <p>Pol\u00edtiques i procediments de recursos humans:</p> <ul> <li>Procediments d\u2019altes i baixes d\u2019empleats i documentaci\u00f3 de formaci\u00f3 per a les noves incorporacions que introdueixi la cultura corporativa de l\u2019organitzaci\u00f3.</li> <li>Establiment de programes formatius, d\u2019avaluaci\u00f3 d\u2019acompliment, remuneraci\u00f3 i pol\u00edtiques sancionadores.</li> <li>Definici\u00f3 de programes de mesurament d\u2019acompliment i alineament amb els objectius de l\u2019organitzaci\u00f3.</li> <li>Identificaci\u00f3 les funcions cr\u00edtiques de l\u2019organitzaci\u00f3.</li> <li>Exist\u00e8ncia d\u2019un pla de successi\u00f3 per a les funcions cr\u00edtiques.</li> <li>Definici\u00f3 de plans formatius que cobreixin els aspectes sense successi\u00f3 en funcions cr\u00edtiques.</li> </ul> </li> <li> <p>Models d\u2019assignaci\u00f3 d\u2019autoritat i responsabilitat per a la presa de decisions.</p> <ul> <li>Exist\u00e8ncia d\u2019un model formal d\u2019assignaci\u00f3 d\u2019autoritat segons objectius de l\u2019organitzaci\u00f3.</li> <li>Definici\u00f3 de protocols d\u2019assignaci\u00f3 d\u2019autoritzar en funci\u00f3 de la criticitat de la decisi\u00f3 a prendre.</li> <li>Definici\u00f3 de procediment de revisi\u00f3 peri\u00f2dica del model de decisi\u00f3 en funci\u00f3 de canvis en l\u2019organitzaci\u00f3 i la inclusi\u00f3 de noves casu\u00edstiques a integrar.</li> <li>Exist\u00e8ncia de processos de validaci\u00f3 per part d\u2019auditoria interna.</li> </ul> </li> <li> <p>Sistemes de gesti\u00f3 del canvi.</p> <ul> <li>Definici\u00f3 de processos d\u2019estrat\u00e8gia empresarial a mitj\u00e0 i llarg termini.</li> <li>Establiment de recursos i eines per al monitoratge del canvi i les seves conseq\u00fc\u00e8ncies.</li> <li>Exist\u00e8ncia de processos de monitoratge de factors externs (legislaci\u00f3, compet\u00e8ncia, mercat, economia, geopol\u00edtica) i an\u00e0lisi dels impactes en el negoci per a establiment de processos d'innovaci\u00f3.</li> <li>Revisi\u00f3 de canvis en l\u2019organitzaci\u00f3 i les funcions clau en l\u2019organitzaci\u00f3.</li> <li>Exist\u00e8ncia de pol\u00edtiques de gesti\u00f3 de riscos i de continu\u00eftat de negoci davant de canvis.</li> </ul> </li> </ul>"},{"location":"Moduls/CECNC/UT01.html#principis-de-letica-empresarial","title":"Principis de l\u2019\u00e8tica empresarial","text":"<p>L\u2019\u00e8tica empresarial \u00e9s el codi que segueix una organitzaci\u00f3 a l\u2019hora de realitzar la seva activitat, prendre decisions, gestiona els seus recursos humans i desenvolupar-se en una comunitat. Defineix els l\u00edmits que una empresa decideix posar-se, directrius a seguir, metes a assolir a nivell social i mediambiental, essent aquests generalment m\u00e9s restrictius que les normes i lleis.  Tot aquest conjunt d\u2019elements conforma una s\u00e8rie de valors i principis que alhora constitueixen la cultura de l\u2019empresa.</p> <p>Aix\u00ed mateix, l\u2019\u00e8tica empresarial regeix la manera com l\u2019organitzaci\u00f3 es relaciona amb els seus clients, prove\u00efdors, i treballadors amb l\u2019objectiu d\u2019exercir un impacte positiu en la societat.</p> <p>L'\u00e8tica empresarial \u00e9s una manera d'atraure talent i generar un ambient laboral benefici\u00f3s per als empleats de l'organitzaci\u00f3, a m\u00e9s, generar\u00e0 m\u00e9s confian\u00e7a tant en clients com en inversors, la qual cosa indirectament repercutir\u00e0 en un augment de la rendibilitat. Aquest tipus d\u2019activitats genera atracci\u00f3 cap a les empreses d\u2019un major volum i qualificaci\u00f3 de professionals que volen cr\u00e9ixer en organitzacions en les quals confien i que compten en projectes en els quals creuen.</p> <p>Tot i que els objectius de les organitzacions poden ser diferents, l\u2019\u00e8tica gira entorn d\u2019aspectes que en general tenen a veure amb la millora de l\u2019entorn i clima laboral, promoure la igualtat, el respecte als drets, etc.</p> <p>Aquest tipus d\u2019activitats no nom\u00e9s es limiten a destinar part del pressupost anual a una iniciativa espec\u00edfica, sin\u00f3 que tamb\u00e9 suposen una s\u00e8rie d\u2019actuacions en les quals l\u2019organitzaci\u00f3 pot millorar en aspectes no directament relacionats amb el negoci, per exemple, en diversitat en el lloc de treball, en reciclatge, conciliaci\u00f3, etc...</p> <p>Les iniciatives relacionades amb \u00e8tica empresarial poden tenir multitud d\u2019objectius, no obstant aix\u00f2, els seg\u00fcents es plantegen com els m\u00e9s rellevants, o freq\u00fcents:</p> <ul> <li>Respecte al medi ambient. Totes les empreses tenen d\u2019alguna manera o altra un impacte mediambiental a causa del consum energ\u00e8tic, emissions o producci\u00f3 de deixalles, per aix\u00f2, la majoria de les organitzacions tracten d\u2019optimitzar els seus models de producci\u00f3 per reduir els seus impactes mediambientals, per exemple, fent m\u00e9s eficient el seu consum energ\u00e8tic o utilitzant energies renovables.</li> <li>Responsabilitat social corporativa. Consisteix en iniciatives que tindran impacte actual o futur en la societat, es tracta de dur a terme accions que millorin les condicions de vida de les zones en les quals treballa l\u2019organitzaci\u00f3, impulsant iniciatives que afavoreixin el creixement de la comunitat. Tamb\u00e9 fa refer\u00e8ncia a iniciatives que solucionin problemes existents en la societat que no tenen necess\u00e0riament a veure amb el producte o servei que presta la companyia.</li> <li>Compet\u00e8ncia deslleial. L\u2019\u00e8tica empresarial tamb\u00e9 t\u00e9 en compte iniciatives que evitin la compet\u00e8ncia deslleial entre organitzacions, com pot ser, la venda per sota de cost, la comparaci\u00f3, les comunicacions agressives, la cr\u00edtica o la desinformaci\u00f3.</li> <li>Tot i que aquest \u00e9s un aspecte directament relacionat amb el producte, la qualitat t\u00e9 tamb\u00e9 un component \u00e8tic, evidentment les empreses han de complir uns est\u00e0ndards de qualitat m\u00ednims, no obstant aix\u00f2, es tracta de posar atenci\u00f3 en l'augment dels nivells d'excel\u00b7l\u00e8ncia dels clients per millorar-hi la confian\u00e7a, a m\u00e9s de,  per exemple, s'aconsegueixi evitar que aquests siguin substitu\u00efts en un curt espai de temps, amb els impactes que aix\u00f2 pugui comportar.</li> <li>Publicitat enganyosa, fent de la comunicaci\u00f3 cap als clients una eina per a la generaci\u00f3 de confian\u00e7a sense utilitzar arguments de venda inv\u00e0lids o incorrectes. Millorar la transpar\u00e8ncia de l\u2019organitzaci\u00f3 a trav\u00e9s de la publicaci\u00f3 dels comptes econ\u00f2mics de l\u2019empresa.</li> <li>Gesti\u00f3 dels recursos humans, fomentant un bon ambient laboral desenvolupant valors positius de respecte pels empleats i les seves fam\u00edlies, com la conciliaci\u00f3.</li> <li>Creaci\u00f3 i innovaci\u00f3, com a eina de millora d\u2019efici\u00e8ncia i millora en impactes ambientals i rendibilitat, millora en la imatge de l\u2019organitzaci\u00f3 i en la competitivitat.</li> </ul> <p>Motius per construir un codi \u00e8tic empresarial:</p> <ol> <li>Millora de la imatge i reconeixement empresarial entre empleats, clients, prove\u00efdors compet\u00e8ncia, la qual cosa es tradueix en un augment de la confian\u00e7a en totes les parts interessades.</li> <li>Reducci\u00f3 dels riscos per incompliment legal i per tant de sancions econ\u00f2miques i penals. L\u2019\u00e8tica empresarial posa el llist\u00f3 del compliment en una posici\u00f3 m\u00e9s elevada que la de les obligacions legals.</li> <li>Obtenci\u00f3 de beneficis fiscals per l\u2019execuci\u00f3 d\u2019activitats relacionades amb l\u2019\u00e8tica empresarial. Per exemple, a trav\u00e9s de proporci\u00f3 d'assegurances m\u00e8diques i plans de pensions a empleats.</li> <li>Augment de la lleialtat dels treballadors a trav\u00e9s de la creaci\u00f3 d\u2019iniciatives de conciliaci\u00f3 i generaci\u00f3 d\u2019ambients segurs despr\u00e9s de la definici\u00f3 de normes de conviv\u00e8ncia i respecte als treballadors.</li> <li>M\u00e9s atracci\u00f3 a inversi\u00f3 a causa d\u2019un augment de la imatge corporativa en la societat.</li> </ol> <p>Arribats a aquest punt ja coneixem els objectius i motius d'una organitzaci\u00f3 per definir un codi \u00e8tic empresarial, per\u00f2, Qu\u00e8 ha de contenir aquest codi? A continuaci\u00f3, es presenten una s\u00e8rie de caracter\u00edstiques amb la qual ha de comptar una pol\u00edtica d\u2019\u00e8tica empresarial.</p> <p>El codi \u00e8tic sempre ha de comptar amb els valors corporatius com a base.</p> <p>A m\u00e9s, ha de girar al voltant de principis \u00e8tics universals, com s\u00f3n la just\u00edcia, igualtat, legalitat, responsabilitat i solidaritat.</p> <p>Ha de contenir una enumeraci\u00f3 de les obligacions legals a les quals est\u00e0 sotmesa l\u2019empresa.</p> <p>En ell, s\u2019han de tenir en compte possibles aspectes conflictius de l\u2019organitzaci\u00f3 que permetin prendre decisions, com per exemple una pol\u00edtica de retribuci\u00f3 justa i equitativa, aix\u00ed mateix, ha d\u2019establir el codi comportamental dels empleats de l\u2019organitzaci\u00f3.</p> <p>Ha d\u2019estar descrita en un llenguatge accessible per a tots els destinataris de la mateixa tant a nivell intern com extern i ha d\u2019aplicar a tots els empleats de l\u2019organitzaci\u00f3.</p> <p>La seva construcci\u00f3 ha de comptar amb personal de diferents parts de l\u2019organitzaci\u00f3 per obtenir el major volum d\u2019informaci\u00f3 i representaci\u00f3 possible.</p> <p>I, finalment ha de ser un document viu, que es revisi i actualitzi amb certa freq\u00fc\u00e8ncia.</p>"},{"location":"Moduls/CECNC/UT01.html#3-compliance-officer-funcions-i-responsabilitats","title":"3 - Compliance Officer: Funcions i responsabilitats","text":""},{"location":"Moduls/CECNC/UT01.html#el-compliance-officer","title":"El Compliance Officer","text":"<p>El compliance officer \u00e9s la persona encarregada de vetllar pel compliment dels requisits legals i normatius d\u2019una organitzaci\u00f3, s\u2019encarrega d\u2019identificar els riscos regulatoris i assegura l\u2019exist\u00e8ncia de controls interns per al mesurament i gesti\u00f3 dels mateixos.</p> <p>Ha de promoure una conducta \u00e8tica i una cultura de compliment normatiu i ha de treballar per garantir que l\u2019activitat de l\u2019empresa de realitzi d\u2019acord amb la llei, els compromisos adquirits amb clients i la normativa interna.</p> <p>Com a responsable de compliment, ha d\u2019estar al tant de les darreres lleis, normatives i reglaments que s\u2019han de complir, i ha d\u2019aconseguir transformar-los a requisits i procediments dins de l\u2019organitzaci\u00f3.</p> <p>Si b\u00e9 la figura de compliance officer no est\u00e0 definida en la legislaci\u00f3 espanyola, aquest, pot arribar a tenir responsabilitat penal sobre qualsevol tipus d'activitat il\u00b7l\u00edcita desenvolupada dins de l'organitzaci\u00f3, ja sigui per la seva participaci\u00f3 en la mateixa, o de manera indirecta, \u00fanicament amb el coneixement de les activitats il\u00b7legals de l'organitzaci\u00f3, o,  per desconeixement per l\u2019omissi\u00f3 en les seves responsabilitats com a supervisor del compliment en l\u2019organitzaci\u00f3. Les funcions de supervisi\u00f3 i vigil\u00e0ncia si estan contemplades en la legislaci\u00f3.</p> <p>Despr\u00e9s de la reforma del Codi Penal operada per la Llei Org\u00e0nica 1/2015, s'estableix:</p> <p>\" 2a la supervisi\u00f3 del funcionament i del compliment del model de prevenci\u00f3 implantat ha estat confiada a un \u00f2rgan de la persona jur\u00eddica amb poders aut\u00f2noms d\u2019iniciativa i de control o que tingui encomanada legalment la funci\u00f3 de supervisar l\u2019efic\u00e0cia dels controls interns de la persona jur\u00eddica;\" (\u2026)</p> <p>\" 4a no s\u2019ha produ\u00eft una omissi\u00f3 o un exercici insuficient de les seves funcions de supervisi\u00f3, vigil\u00e0ncia i control per part de l\u2019\u00f2rgan a qu\u00e8 es refereix la condici\u00f3 2a\"</p> <p>Si b\u00e9 l'article 2 no fa refer\u00e8ncia expl\u00edcita al compliance officer, es pot interpretar la seva figura en la definici\u00f3 d'\u00f2rgan de la persona jur\u00eddica amb poders aut\u00f2noms d'iniciativa i de control, aix\u00ed com les eines i obligacions amb qu\u00e8 ha de comptar aquesta figura per exercir la seva funci\u00f3, com s\u00f3n:</p> <p>Poders per realitzar de manera aut\u00f2noma i proactiva controls sobre el negoci, o una funci\u00f3 legalment establerta de supervisi\u00f3 sobre aquest.</p> <p>Que no existeixi una omissi\u00f3 o insufici\u00e8ncia de les funcions de compliance officer. Ha d\u2019executar les seves funcions amb dilig\u00e8ncia i determinaci\u00f3.</p> <p>Que informi obligat\u00f2riament de possibles incompliments legals i els riscos associats.</p> <p>Dins de l\u2019organitzaci\u00f3 tant el responsable de compliment com el comit\u00e8 d\u2019administraci\u00f3 tenen dins de les seves funcions el compliment legal i normatiu, no obstant aix\u00f2, mentre la funci\u00f3 del comit\u00e8 se centra en la consecuci\u00f3 dels objectius comercials respectant la llei per\u00f2 defensant els interessos de l\u2019empresa, el compliance officer t\u00e9 com a objectiu el com respectar la llei,  dissenyant processos organitzacionals per complir-la, fomentant la cultura i conscienciaci\u00f3 en compliment, i establint objectius m\u00e9s estrictes a trav\u00e9s dels codis \u00e8tics i de bona conducta.</p> <p>Aix\u00ed mateix, cal destacar la figura del responsable de compliment respecte a la del delegat de protecci\u00f3 de dades. Si b\u00e9 el primer s\u2019encarrega del compliment de la normativa a nivell general, el segon s\u2019enfoca \u00fanicament en el compliment normatiu en mat\u00e8ria de protecci\u00f3 de dades i en els processos associats a aquest compliment tals, com el registre d\u2019activitats de tractament, l\u2019an\u00e0lisi de riscos de privacitat, les avaluacions d\u2019impacte en privacitat,  els compromisos de confidencialitat i els documents de requisits de seguretat.</p> <p>Ambdues figures estan estretament relacionades ja que la normativa de protecci\u00f3 de dades \u00e9s una de les m\u00e9s rellevants i de les quals majors riscos i sancions suposa a les organitzacions.</p>"},{"location":"Moduls/CECNC/UT01.html#funcions-del-compliance-officer","title":"Funcions del compliance officer","text":"<p>A continuaci\u00f3, es descriuen les funcions principals que s\u00f3n desenvolupades pel responsable de compliment d\u2019una organitzaci\u00f3:</p> <ul> <li> <p>Entendre el funcionament de l\u2019organitzaci\u00f3 i del negoci:</p> <p>La primera funci\u00f3 del compliance officer \u00e9s la d\u2019entendre el negoci de l\u2019organitzaci\u00f3 i els processos i procediments de l\u2019empresa, de tal manera que pugui identificar els requisits i obligacions dels mateixos i integrar-los en el sistema de compliment normatiu.</p> </li> <li> <p>Operaci\u00f3 dels sistemes de gesti\u00f3 de compliment:</p> <p>Cal definir i assegurar el desplegament de les mesures i controls que permetin identificar i gestionar els riscos i incid\u00e8ncies relacionades amb el compliment, b\u00e9 sigui a trav\u00e9s del personal o a trav\u00e9s d\u2019eines internes o externes a l\u2019organitzaci\u00f3, tals com:</p> <ul> <li>Sistemes de den\u00fancies.</li> <li>Reunions amb responsables de processos.</li> <li>Reports d\u2019incid\u00e8ncies.</li> <li>Comunicaci\u00f3 i suport cap a empleats davant el dubte que una activitat suposi un risc per a l\u2019organitzaci\u00f3.</li> <li>Revisi\u00f3 de nous processos de l\u2019organitzaci\u00f3 o modificaci\u00f3 dels existents.</li> <li>M\u00e8triques i indicadors d\u2019acompliment i compliment.</li> </ul> </li> <li> <p>Desenvolupar una cultura de compliment en l\u2019organitzaci\u00f3:</p> <p>El compliance officer ha de promoure els processos de compliment dins de l\u2019organitzaci\u00f3, comunicar-los i supervisar-los, amb l\u2019objectiu que els seus integrants els coneguin i els prenguin en compte. Han de ser comunicats i recordats amb freq\u00fc\u00e8ncia. En cas que existeixi maduresa quant a la cultura de compliment de l\u2019organitzaci\u00f3, el compliance officer ser\u00e0 consultat a l\u2019hora d\u2019establir nous processos de negoci en l\u2019organitzaci\u00f3, i aquest ajudar\u00e0 a dissenyar-los dins del l\u00edmits legals.</p> </li> <li> <p>Assessorament legal i regulatori:</p> <p>S\u2019ha d\u2019encarregar de con\u00e8ixer les lleis i regulacions que afecten el negoci de l\u2019organitzaci\u00f3 i s\u2019ha de mantenir actualitzat sobre totes les modificacions o noves regulacions que puguin sorgir. A m\u00e9s, han de con\u00e8ixer els possibles impactes que pot ocasionar el seu incompliment, per la qual cosa s\u00f3n consultats davant el llan\u00e7ament de nous productes o serveis.</p> </li> <li> <p>Supervisi\u00f3 dels processos de l\u2019organitzaci\u00f3:</p> <p>Cal assegurar del monitoratge proactiu dels processos de l\u2019organitzaci\u00f3 pel que fa al compliment legal o normatiu. Per a aquest tipus de seguiments es realitzaran revisions peri\u00f2diques amb una freq\u00fc\u00e8ncia determinada avaluant el proc\u00e9s i als seus integrants.</p> </li> <li> <p>Contacte amb el regulador:</p> <p>El responsable de compliment ha de ser el punt de contacte a trav\u00e9s del qual es duguin a terme les comunicacions amb regulador. \u00c9s l\u2019encarregat de comunicar a l\u2019empresa qualsevol tipus de requeriment amb origen en alguna llei o en el propi regulador, aix\u00ed mateix, tamb\u00e9 \u00e9s el responsable de transmetre informaci\u00f3 cap al regulador, comunicant requeriments, sol.licituds d\u2019informaci\u00f3, suggeriments, dubtes i consultes.</p> </li> <li> <p>Gesti\u00f3 d'incid\u00e8ncies:</p> <p>Com a responsable d'un proc\u00e9s de risc per a les organitzacions, el compliance officer ha de ser capa\u00e7 de reaccionar a qualsevol incid\u00e8ncia relacionada amb el compliment, b\u00e9 a trav\u00e9s de den\u00fancies o a trav\u00e9s de sancions, ha de tenir les eines necess\u00e0ries per poder aturar una situaci\u00f3 de risc per a la companyia i mitigar qualsevol vulnerabilitat que pugui ocasionar sancions o multes.</p> </li> <li> <p>Conscienciaci\u00f3:</p> <p>Ha de tenir la capacitat de comunicar els processos de gesti\u00f3 de compliance, per\u00f2 a m\u00e9s ha de dur a terme activitats de conscienciaci\u00f3 sobre compliment normatiu als empleats amb freq\u00fc\u00e8ncia, l\u2019objectiu d\u2019aquestes formacions \u00e9s principalment mitigar els riscos d\u2019incompliment, per\u00f2 tamb\u00e9 actualitzar els empleats davant l\u2019aparici\u00f3 de noves normatives o requisits legals i mantenir la comunicaci\u00f3 entre el negoci i l\u2019\u00e0rea de compliment.</p> </li> <li> <p>Assegurar el compliment en terceres parts:</p> <p>El compliance officer ha de tenir en compte tamb\u00e9 el compliment legal i normatiu en els productes i serveis contractats a terceres parts, i ser capa\u00e7 d\u2019identificar i gestionar els riscos que sorgeixen de la relaci\u00f3 amb els seus clients, prove\u00efdors i en general amb qualsevol tercer relacionat amb l\u2019organitzaci\u00f3.</p> </li> </ul> <p>S\u2019ha de tenir especial atenci\u00f3 a les responsabilitats de compliment, ja que, en cas d\u2019externalitzar un servei, i s\u2019esdevingui una incid\u00e8ncia per algun tipus d\u2019incompliment legal amb el prove\u00efdor, l\u2019empresa contractant, no est\u00e0 eximida de responsabilitat sobre aquest servei, aquests casos s\u00f3n especialment rellevants, per exemple, en processos relacionats amb la protecci\u00f3 de dades.</p>"},{"location":"Moduls/CECNC/UT01.html#4-relacions-amb-terceres-parts-en-compliance","title":"4 - Relacions amb terceres parts en compliance","text":""},{"location":"Moduls/CECNC/UT01.html#riscos-de-compliment-amb-tercers","title":"Riscos de compliment amb tercers","text":"<p>Avui dia totes les empreses tenen relaci\u00f3 amb tercers que formen part de manera directa o indirecta del seu negoci. Els tercers relacionats, poden ser entre d'altres, prove\u00efdors, socis, distribu\u00efdors, intermediaris, empreses col\u00b7laboradores, i tamb\u00e9 clients.</p> <p>Com hem vist en l'apartat anterior, el codi penal estableix que una empresa (persona jur\u00eddica) \u00e9s responsable dels actes delictius comesos pels seus representants legals o pels qui ostentin facultats d'organitzaci\u00f3 i control dins d'aquesta. En aquest punt estem incloent \"els seus representants legals\", \u00e9s a dir, els tercers relacionats. Per aquest motiu, cobra tanta rellev\u00e0ncia la gesti\u00f3 del compliment en terceres parts i els riscos associats als serveis prestats per terceres parts.</p> <p>Per aquest motiu el compliance no s\u2019ha de limitar a l\u2019organitzaci\u00f3, sin\u00f3 que es tracta que tots els tercers relacionats amb l\u2019empresa respectin tamb\u00e9 els seus compromisos. En cas contrari, la seva activitat econ\u00f2mica es pot veure afectada, i tamb\u00e9 la seva reputaci\u00f3.</p> <p>El risc de corrupci\u00f3 relacionat amb tercers \u00e9s estad\u00edsticament elevat, ja que, en la majoria dels casos, els pagaments de suborns s\u00f3n gestionats a trav\u00e9s de tercers, sent aquest focus en la identificaci\u00f3 dels riscos relacionats amb suborns i corrupci\u00f3 en les transaccions comercials.</p> <p>De quina manera es pot controlar el compliment en terceres parts?</p> <p>Per a aquesta tasca existeixen procediments denominats de \"dilig\u00e8ncia deguda\" l'objectiu dels quals \u00e9s dur a terme una adequada selecci\u00f3 i supervisi\u00f3 de les empreses que col\u00b7laboren amb l'organitzaci\u00f3, de tal manera que s'ajustin als principis, valors i conductes de l'organitzaci\u00f3. Aix\u00ed mateix, serveix per con\u00e8ixer el nivell de comprom\u00eds \u00e8tic i de compliment legal dels tercers.</p> <p>Tal \u00e9s la import\u00e0ncia d'aquest tipus de processos que organismes com l'Organitzaci\u00f3 per a la Cooperaci\u00f3 i el Desenvolupament Econ\u00f2mic (OCDE) ha publicat una guia de dilig\u00e8ncia deguda per a una conducta empresarial responsable, tenint en compte especialment els seg\u00fcents elements a analitzar, que formen part de la Conducta Empresarial Responsable.</p> <ul> <li>Drets humans.</li> <li>Ocupaci\u00f3 i relacions laborals.</li> <li>Medi ambient.</li> <li>Lluita contra la corrupci\u00f3, suborn i extorsi\u00f3.</li> <li>Interessos dels consumidors.</li> <li>Divulgaci\u00f3 d\u2019informaci\u00f3.</li> </ul>"},{"location":"Moduls/CECNC/UT01.html#processos-de-diligencia-deguda","title":"Processos de dilig\u00e8ncia deguda","text":"<p>Els processos de dilig\u00e8ncia deguda es poden articular a trav\u00e9s de tres fases:</p> <ol> <li>Avaluaci\u00f3 del comportament del tercer a contractar, a trav\u00e9s de l\u2019an\u00e0lisi dels seus antecedents, valorant informaci\u00f3 financera, responsables de les organitzacions, relacions amb l\u2019administraci\u00f3 p\u00fablica, problemes amb l\u2019administraci\u00f3 o problemes legals previs o exist\u00e8ncia de not\u00edcies negatives pr\u00e8vies.</li> <li>Formalitzaci\u00f3 detallada de la relaci\u00f3 amb el tercer, servei a proveir, element que ha de ser objecte d\u2019una transacci\u00f3 econ\u00f2mica, o qualsevol que sigui l\u2019objecte del contracte, ha de quedar clarament definit i delimitat. En el contracte s\u2019han d\u2019establir clausules relacionades amb el compliment, la legalitat dels productes o serveis prove\u00efts, la veracitat de la informaci\u00f3 prove\u00efda pel tercer, els valors de l\u2019organitzaci\u00f3, i l\u2019exist\u00e8ncia de processos de gesti\u00f3 de compliment tals com vigil\u00e0ncia i control, a m\u00e9s de possibilitat de ser auditat.  Aix\u00ed mateix, s\u2019han d\u2019avaluar els pagaments a realitzar, els motius dels mateixos i la raonabilitat de les quantitats relacionades amb els serveis o productes objecte del contracte.</li> <li>Monitoratge dels tercers relacionats amb l\u2019organitzaci\u00f3, no limitant l\u2019estudi al proc\u00e9s de contractaci\u00f3, sin\u00f3 analitzant els tercers de manera com a part d\u2019un proc\u00e9s, amb una freq\u00fc\u00e8ncia determinada la informaci\u00f3 prove\u00efda pels tercers en relaci\u00f3 al compliance i el compliment dels compromisos definits en el contracte.</li> </ol> <p>\u2795 informaci\u00f3</p> <p>Es pot consultar la guia de l'OCDE sobre dilig\u00e8ncia deguda en el seg\u00fcent link: Guia de l'OCDE de deguda dilig\u00e8ncia per a una conducta empresarial responsable</p> <p>Els seg\u00fcents elements representen informaci\u00f3 addicional estesa sobre l\u2019exposat a la unitat. Aquests continguts s\u00f3n d\u2019estudi opcional i no formaran part de l\u2019avaluaci\u00f3.</p> <p>Codis de bon govern corporatiu per a societats cotitzades. https://www.cnmv.es/portal/Publicaciones/CodigosGovCorp.aspx</p> <p>Llei org\u00e0nica de protecci\u00f3 de dades i drets digitals (LOPD-DD): https://www.boe.es/boe/dias/2018/12/06/pdfs/BOE-A-2018-16673.pdf</p> <p>Regulaci\u00f3 general de protecci\u00f3 de daus (GDPR): https://www.boe.es/doue/2016/119/L00001-00088.pdf</p> <p>Reforma de codi penal 2015: https://www.boe.es/diario_boe/txt.php?id=BOE-A-2015-3439</p> <p>Guia de dilig\u00e8ncia deguda per a una conducta empresarial responsable, per l'Organitzaci\u00f3 per a la Cooperaci\u00f3 i el Desenvolupament Econ\u00f2mic (OCDE): https://mneguidelines.oecd.org/Guia-de-la-OCDE-de-debida-diligencia-para-una-conducta-empresarial-responsable.pdf</p>"},{"location":"Moduls/CECNC/UT01autoavaluacio.html","title":"UNITAT 1: Punts principals sobre el compliment normatiu","text":""},{"location":"Moduls/CECNC/UT01autoavaluacio.html#unitat-1-punts-principals-sobre-el-compliment-normatiu","title":"UNITAT 1: Punts principals sobre el compliment normatiu","text":""},{"location":"Moduls/CECNC/UT01autoavaluacio.html#autoavaluacio","title":"Autoavaluaci\u00f3","text":"Autoavaluaci\u00f3 Test d'autoavaluaci\u00f3 Quin dels seg\u00fcents elements est\u00e0 considerat sempre dins del compliance? Codis \u00e8tics Legislaci\u00f3 vigent Qualitat Quin dels seg\u00fcents \u00e9s un comprom\u00eds obligatori per a una organitzaci\u00f3? Les pol\u00edtiques i procediments interns Les condicions establertes en la cl\u00e0usula d' un contracte Els est\u00e0ndards ISO Dels seg\u00fcents elements. Quin suposa un major esfor\u00e7 en compliment per a una empresa? Els codis \u00e8tics. Legislaci\u00f3 vigent Les obligacions contractuals Els processos de bon govern corporatiu... (Selecciona totes les opcions correctes) Poden servir per definir plans formatius per als empleats Poden servir per establir els horaris dels empleats Poden servir per regular el salari dels empleats Veure Retroalimentaci\u00f3 Reiniciar Pregunta Puntuaci\u00f3: Justificaci\u00f3: <p>En els codis de bon govern corporatiu es pot regular els salaris dels empleats amb l' objectiu de guanyar en transpar\u00e8ncia per la seva publicaci\u00f3 i en responsabilitat a l' hora de no establir salaris desproporcionats.</p> <p>Els codis de bon govern corporatiu, han d' establir plans de successi\u00f3 per als llocs cr\u00edtics de l' organitzaci\u00f3. En cas de detectar-se faltes en la formaci\u00f3 de la plantilla existent, es podrien recollir plans de formaci\u00f3 gen\u00e8rics que han de ser coberts pels empleats amb funcions cr\u00edtiques per garantir la continu\u00eftat de les operacions de l' organitzaci\u00f3.</p> <p>En cap cas, els codigos de bon govern corporatiu regularan especificament l' horari dels empleats.</p> <p></p>"},{"location":"Moduls/CECNC/UT02.html","title":"Material te\u00f2ric","text":""},{"location":"Moduls/CECNC/UT02.html#disseny-de-sistemes-de-gestio-de-compliment-normatiu","title":"Disseny de sistemes de gesti\u00f3 de compliment normatiu.","text":"isftic[CC BY-NC-SA] <p>Suposit</p> <p>Una companyia s'encarrega de proveir serveis de telecomunicacions enfocats en comunicacions internacionals tant a particulars com a empreses.</p> <p>T\u00e9 una cartera molt amplia de clients a Espanya als quals ofereix aquests serveis i pels quals cobra una tarifa mitjana de 23,5 \u20ac mensuals.</p> <p>L'empresa \u00e9s present a 32 pa\u00efsos, i s'aprofita d'aquesta situaci\u00f3 per donar servei a multinacionals. Durant l'any 2024 ha aconseguit adjudicar-se el servei de telecomunicacions de totes les ambaixades a Espanya.</p> <p>Un dels seus clients multinacionals \u00e9s una entitat banc\u00e0ria, amb un nivell de maduresa en seguretat elevat, un dels requisits que estableix \u00e9s la certificaci\u00f3 ISO27001 en els serveis de comunicacions.</p> <p>La seu central de la corporaci\u00f3 es troba al Parc Bit, va ser oberta l'any 2022, les seves oficines compten amb climatitzaci\u00f3 intel\u00b7ligent, jardins als terrats per millorar la climatitzaci\u00f3 i aprofitar l'aigua de la pluja per als regs de les seves zones verdes i panells solars per millorar l'efici\u00e8ncia energ\u00e8tica.</p> <p>A m\u00e9s, part dels terrenys de l'organitzaci\u00f3, han estat convertits en parcs p\u00fablics que poden ser utilitzats pels residents de la zona, i els accessos per carretera a la zona han estat condicionats, millorats i reasfaltats.</p> <p>La direcci\u00f3 de l\u2019organitzaci\u00f3 \u00e9s conscient que \u00e9s subjecte obligat per a multitud de lleis i normatives. A m\u00e9s d\u2019un codi \u00e8tic recentment desenvolupat, i compromisos adquirits amb els seus \u00faltims clients. Tots aquests requeriments fan que la millor opci\u00f3 de gestionar la situaci\u00f3 i satisfer totes les parts interessades sigui el desplegament d\u2019un sistema de gesti\u00f3 de compliance.</p> <p>En aquesta unitat actuarem com a oficial de compliment, i desenvoluparem un sistema de gesti\u00f3 de compliance basat en la metodologia proposada per est\u00e0ndards internacionals reconeguts.</p> <p>Al llarg d\u2019aquesta unitat desenvoluparan una s\u00e8rie de compet\u00e8ncies sobre el desenvolupament de sistemes de gesti\u00f3 de compliment normatiu amb l\u2019objectiu de:</p> <ol> <li>Recollir les principals normatives que afecta els diferents tipus d\u2019organitzacions.</li> <li>Establir recomanacions v\u00e0lides per a diferents tipus d\u2019organitzacions d\u2019acord amb la normativa vigent.</li> <li>Realitzar an\u00e0lisis i avaluacions de riscos de diferents tipus d\u2019organitzacions.</li> <li>Documentar un sistema de compliment normatiu.</li> </ol> <p>Aquesta unitat est\u00e0 enfocada als sistemes de gesti\u00f3 de compliment desenvolupar\u00e0 els continguts seg\u00fcents:</p> <ol> <li>Sistemes de Gesti\u00f3 de Compliance.</li> <li>Entorn regulatori d\u2019aplicaci\u00f3.</li> <li>An\u00e0lisi i gesti\u00f3 de riscos, mapes de riscos.</li> <li>Documentaci\u00f3 del sistema de compliment normatiu dissenyat.</li> </ol>"},{"location":"Moduls/CECNC/UT02.html#1-sistemes-de-gestio-de-compliance","title":"1.- Sistemes de Gesti\u00f3 de compliance.","text":"<p>Cas pr\u00e0ctic</p> <p></p> Direct Media (Domini Public) <p></p> <p>La pressi\u00f3 regulat\u00f2ria de les empreses ha anat augmentant durant els \u00faltims anys. A m\u00e9s, els compromisos que adquireixen les empreses s\u00f3n cada vegada m\u00e9s grans, de diferent \u00edndole i amb diferent nivell de risc. La regulaci\u00f3, les pol\u00edtiques i les normatives, els contractes, els codis \u00e8tics, suposen un esfor\u00e7 per a les organitzacions i el seu incompliment comporta diferents riscos en funci\u00f3 de la tipologia dels requisits i de l\u2019ens que els requereixi.</p> <p>Per aquest motiu, la direcci\u00f3 de l'empresa que estam tractant ha decidit ara analitzar tots els requisits amb origen en les seves diferents normes, regulacions i en general en compromisos, avaluar els riscos associats i desplegar un sistema de gesti\u00f3 que minimitzi el seu incompliment i que fomenti la cultura del compliance en l\u2019organitzaci\u00f3.</p> <p>En els propers ep\u00edgrafs avaluarem en qu\u00e8 consisteix, i que t\u00e9.</p>"},{"location":"Moduls/CECNC/UT02.html#definicio-dun-sistema-de-gestio-de-compliance","title":"Definici\u00f3 d\u2019un sistema de gesti\u00f3 de compliance.","text":"Foto de Pixabay[CC0] <p>El compliment \u00e9s un element indispensable per al correcte funcionament d\u2019un negoci ja que ajuda a desenvolupar-lo dins dels l\u00edmits de la llei, per\u00f2 tamb\u00e9 estableix compromisos m\u00e9s elevats que poden ser utilitzats com un argument de venda per a l\u2019empresa.</p> <p>Com ja hem vist en la unitat anterior s\u00f3n diversos els tipus de compromisos que una companyia pot adquirir, podent ser tant voluntaris com obligatoris i anant des dels m\u00e9s obvis com s\u00f3n els legals fins als m\u00e9s valorats per clients com poden ser les pol\u00edtiques de responsabilitat social corporativa, medi ambient i \u00e8tica.</p> <p>Atesa la volumetria d\u2019aquests compromisos, l\u2019heterogene\u00eftat dels seus or\u00edgens i el grau d\u2019exig\u00e8ncia dels mateixos, \u00e9s important comptar amb eines que permetin avaluar els impactes de tots ells, realitzar diagn\u00f2stics, establir plans de millora i prioritzar esfor\u00e7os.</p> <p>Un sistema de gesti\u00f3 de Compliance \u00e9s un proc\u00e9s integrat en l\u2019organitzaci\u00f3 que permet identificar i garantir el compliment d\u2019aquella legislaci\u00f3, normativa, reglament, codi de bona conducta, o codi d\u2019\u00e8tica i transpar\u00e8ncia que l\u2019afecti amb l\u2019objectiu principal d\u2019evitar els riscos que puguin donar-se en un moment donat pel seu incompliment. Aquests s\u00f3n cada vegada m\u00e9s dif\u00edcils de preveure atesa la dificultat i la cont\u00ednua actualitzaci\u00f3 de la normativa aplicable a les empreses.</p>"},{"location":"Moduls/CECNC/UT02.html#beneficis-dun-sistema-de-gestio-de-compliance","title":"Beneficis d\u2019un sistema de gesti\u00f3 de compliance.","text":"<p>El principal objectiu del compliment normatiu, \u00e9s minimitzar les conseq\u00fc\u00e8ncies per dur a terme activitats fora dels marges de la llei. En aquests escenaris, tant els comit\u00e8s d\u2019administraci\u00f3 de les empreses com els compliance officers, poden arribar a tenir responsabilitat penal sobre les seves activitats, entre altres coses si es demostra omissi\u00f3 en la seva tasca de compliment.</p> <p>El desenvolupament d'un Sistema de Gesti\u00f3 de compliment (SGC) es converteix en una de les maneres de demostrar la dilig\u00e8ncia i determinaci\u00f3 d'una companyia en el seu \u00e0nim de complir amb la legislaci\u00f3 i per la qual cosa la seva exist\u00e8ncia es converteix en una de les principals raones per evitar o minimitzar responsabilitat legal i quantia de sancions.</p> <p>A m\u00e9s d\u2019aquesta, hi ha altres raons i beneficis de desenvolupar i operar un sistema de gesti\u00f3 de compliment, per exemple:</p> Foto d'Andrea Piacquadio[CC0] <ul> <li>Per a les empreses:<ul> <li>Evitar condemnes penals per als integrants de l\u2019organitzaci\u00f3 en prevenir la comissi\u00f3 de delictes.</li> <li>Evitar sancions judicials, administratives o econ\u00f2miques.</li> <li>Millora la reputaci\u00f3, la imatge i competitivitat de l\u2019organitzaci\u00f3 davant potencials clients i inversors cada vegada m\u00e9s conscienciats amb l\u2019\u00e8tica, el bon govern i la responsabilitat social.</li> <li>Redueix o elimina el frau intern en augmentar el control sobre els processos de l\u2019organitzaci\u00f3.</li> <li>Contribuci\u00f3 a la igualtat i just\u00edcia social, potenciant l\u2019esfor\u00e7 i m\u00e8rits personals de totes les persones que conformen l\u2019organitzaci\u00f3.</li> <li>Suport en la identificaci\u00f3 de riscos penals, fiscals, laborals, de propietat intel\u00b7lectual i en general de compliment que puguin donar-se com a conseq\u00fc\u00e8ncia de l'activitat de l'empresa.</li> <li>Creaci\u00f3 de cultura \u00e8tica en l\u2019organitzaci\u00f3 a trav\u00e9s d\u2019activitats comunicatives, formatives, de conscienciaci\u00f3, pol\u00edtiques, procediments i codis \u00e8tics.</li> <li>Millora els processos de detecci\u00f3 de nous requisits legals i normatius que puguin sorgir.</li> <li>Disminueix el cost de les assegurances de protecci\u00f3 penal.</li> <li>Suposa un avantatge competitiu davant d\u2019altres organitzacions que no disposin d\u2019un programa de compliment normatiu.</li> </ul> </li> <li>Per als clients:<ul> <li>Permet treballar amb prove\u00efdors amb certes garanties de respectar i no comprometre la seva imatge de marca.</li> <li>Redueix els riscos de compliance en tercers, en poder comptar amb l\u2019evid\u00e8ncia d\u2019un sistema de gesti\u00f3 de compliment.</li> </ul> </li> <li>Per al mercat i la societat:<ul> <li>Proveeix de certa confian\u00e7a les institucions.</li> <li>Fomenta la igualtat i la just\u00edcia social.</li> <li>Suposa una millora en el funcionament dels mercats en establir regles de compet\u00e8ncia lleial.</li> </ul> </li> </ul>"},{"location":"Moduls/CECNC/UT02.html#evolucio-de-lestandard-de-sistema-de-gestio-de-compliment-normatiu-de-iso19600-a-iso-37301","title":"Evoluci\u00f3 de l\u2019est\u00e0ndard de sistema de gesti\u00f3 de compliment normatiu, de ISO19600 a ISO 37301.","text":"<p>L'Organitzaci\u00f3 Internacional de Normalitzaci\u00f3 (ISO) ha constru\u00eft un est\u00e0ndard per al desenvolupament de sistemes de gesti\u00f3 de compliment, aquesta norma que va ser batejada com a ISO 19600, definia una guia sobre compliance.  La seva proposta es tractava del desenvolupament de pol\u00edtiques i procediments dissenyats per assegurar el compliment legal, normatiu, del sector i en general dels compromisos de l'organitzaci\u00f3, utilitzant la formula del cicle de Deming (P-D-C-A) Pla \u2013 Do \u2013 Check \u2013 Act / Planificar \u2013 Fer \u2013 Verificar \u2013 Actuar.</p> <p>No obstant aix\u00f2, diversos anys despr\u00e9s d\u2019haver-la publicat, es va fer evident la necessitat d\u2019una nova norma que establ\u00eds el proc\u00e9s de desenvolupament d\u2019un sistema de gesti\u00f3 de compliment, i que ho fes certificable. La nova norma, publicada el 2021 es va denominar ISO 37301:2021 i es va convertir en l'est\u00e0ndard de refer\u00e8ncia reempla\u00e7ant la norma ISO19600 del 2014.</p> <p>Aquesta nova ISO venia acompanyada de novetats \u00f2bvies com la possibilitat de ser certificada, per\u00f2 tamb\u00e9 era adaptable a un ampli marc d'objectius i riscos de compliment per a les organitzacions. Defineix requisits i estableix directrius per poder desenvolupar, mantenir, avaluar i millorar un sistema de gesti\u00f3 de compliance efica\u00e7 dins d\u2019una organitzaci\u00f3, i a m\u00e9s \u00e9s adaptable a tot tipus d\u2019organitzacions amb independ\u00e8ncia de la seva mida, tipologia i sector, podent ser fins i tot organitzacions del sector p\u00fablic o sense \u00e0nim de lucre.</p> <p>Els requisits establerts en la norma, igual que altres molts altres sistemes de gesti\u00f3 en altres normes ISO, fan refer\u00e8ncia a un \u00f2rgan de govern amb el qual les organitzacions han de comptar per prendre decisions estrat\u00e8giques sobre l\u2019operaci\u00f3 del pla de gesti\u00f3 de compliment.</p>"},{"location":"Moduls/CECNC/UT02.html#lestandard-iso-37301","title":"L\u2019est\u00e0ndard ISO 37301.","text":"<p>La norma ISO 37301: 2021 \u00e9s l\u2019est\u00e0ndard de l\u2019Organitzaci\u00f3 Internacional d\u2019Estandarditzaci\u00f3 que especifica els requisits i estableix una guia per implementar, desenvolupar, avaluar, mantenir, auditar i millorar un Sistema de Gesti\u00f3 de Compliment efica\u00e7 en una organitzaci\u00f3.</p> <p>Aquest est\u00e0ndard per a gesti\u00f3 de Compliance compta en total amb 10 dominis i un annex amb fins a 10 apartats m\u00e9s, que s\u00f3n els seg\u00fcents:</p> <ol> <li>Abast: En aquest apartat es defineix l\u2019objectiu i la finalitat de la norma com una guia que s\u2019implementa per establir, desenvolupar, mantenir i millorar un sistema de gesti\u00f3 de compliance.</li> <li>Refer\u00e8ncies normatives: Fa refer\u00e8ncia a les normes en qu\u00e8 es basa l\u2019est\u00e0ndard, en el cas de la ISO 37301, no existeixen normes de refer\u00e8ncia.</li> <li>Termes i definicions: En aquest apartat s\u2019especifica un glossari de termes que s\u2019anir\u00e0 repetint al llarg de tot l\u2019est\u00e0ndard i que ajuden a la seva entesa.</li> <li>Context de l\u2019organitzaci\u00f3: En aquesta part del document s\u2019estableixen guies per aconseguir una entesa de l\u2019organitzaci\u00f3, de la seva funci\u00f3 i negoci. A m\u00e9s, s\u2019inclou informaci\u00f3 sobre possibles aspectes d\u2019afectaci\u00f3 com la situaci\u00f3 geopol\u00edtica i econ\u00f2mica del pa\u00eds en el qual actua i una altra s\u00e8rie de caracter\u00edstiques internes que permet tenir una comprensi\u00f3 de la situaci\u00f3 i riscos de l\u2019organitzaci\u00f3. En aquest apartat tamb\u00e9 s\u2019estableixen les expectatives i necessitats de les parts interessades i l\u2019\u00e0mbit d\u2019aplicaci\u00f3 del sistema de gesti\u00f3 de compliance.</li> <li>Lideratge:  Apartat en el qual es defineixen els aspectes organitzacionals i de gesti\u00f3 amb els quals ha de comptar un sistema de gesti\u00f3 de compliment, en el qual s\u2019estableixen requisits sobre l\u2019exist\u00e8ncia d\u2019un \u00f2rgan de govern i alta direcci\u00f3, exist\u00e8ncia d\u2019una cultura de compliment, una pol\u00edtica de compliance i per \u00faltim estableix la necessitat de definir els rols i responsabilitats de tots els actors de l\u2019organitzaci\u00f3.</li> <li>Planificaci\u00f3: Amb la informaci\u00f3 obtinguda de l'apartat de context (Objectius, necessitats, riscos identificats), en aquest apartat es defineixen una s\u00e8rie d'accions per donar resposta a aquests elements i una planificaci\u00f3 per assolir-los.</li> <li>Suport: En aquest element s\u2019estableixen necessitats de recursos per a la implementaci\u00f3 del sistema de gesti\u00f3 de compliance tals com finan\u00e7ament i personal, per\u00f2 a m\u00e9s tamb\u00e9 s\u2019estableix la formaci\u00f3 amb la qual han de comptar els empleats, com i quan es comunicar\u00e0 el SGC, i que informaci\u00f3 del mateix ha d\u2019estar documentada.</li> <li>Operaci\u00f3: Defineix com es mantindr\u00e0 el SGC, que processos es desplegaran per assolir els objectius de compliment, que controls s\u2019han de definir coure els processos definits, l\u2019establiment d\u2019un mecanisme de den\u00fancia i l\u2019exist\u00e8ncia de processos d\u2019investigaci\u00f3 de situacions de no compliment.</li> <li>Avaluaci\u00f3 d\u2019acompliment: Establir\u00e0 processos per realitzar el seguiment dels processos, mesurar-ne el rendiment, eines per realitzar les avaluacions tals com la definici\u00f3 d\u2019indicadors o exist\u00e8ncia d\u2019informes de compliment. Aix\u00ed mateix, s\u2019establiran directrius per a l\u2019execuci\u00f3 de processos d\u2019auditoria interna i revisi\u00f3 per part de la direcci\u00f3.</li> <li>Millora: En aquest ep\u00edgraf es definiran activitats de millora cont\u00ednua identificades despr\u00e9s de les activitats de mesurament i avaluaci\u00f3 d\u2019acompliment, i accions correctives sobre observacions i troballes identificades durant els processos d\u2019auditoria interna i revisi\u00f3 per part de la direcci\u00f3.</li> </ol> <p>Annex A: Aquest apartat s\u2019amplia les explicacions sobre els punts anteriors del sistema de gesti\u00f3 de compliment per fer m\u00e9s senzilla la seva implementaci\u00f3.</p> <p>En el seg\u00fcent diagrama es representa de manera gr\u00e0fica un sistema de gesti\u00f3 de compliment basat en el cicle de Deming.</p> Elaboraci\u00f3 font Ministerio  **Autoavaluaci\u00f3**   **Pregunta**  Quin est\u00e0ndard ISO estableix una guia per al desenvolupament de sistemes de gesti\u00f3 de compliment normatiu?  **Respostes**  Opci\u00f3 1   ISO 27001  Opci\u00f3 2   ISO 19600  Opci\u00f3 3   ISO 37301  Opci\u00f3 4   ISO 37001  **Retroalimentaci\u00f3**"},{"location":"Moduls/CECNC/UT02.html#11-entorn-regulatori-daplicacio","title":"1.1.- Entorn regulatori d\u2019aplicaci\u00f3.","text":""},{"location":"Moduls/CECNC/UT02.html#tipologia-de-documents-juridics","title":"Tipologia de documents jur\u00eddics:","text":"<p>Una llei es defineix com una norma jur\u00eddica dictada per un legislador, en qu\u00e8 s\u2019obliga o prohibeix alguna cosa en conson\u00e0ncia amb la just\u00edcia i l\u2019incompliment de la qual comporta una sanci\u00f3.</p> <p>Les lleis s\u00f3n documents jur\u00eddics el compliment dels quals t\u00e9 m\u00e9s prioritat que qualsevol font normativa. Estan considerades com a conseq\u00fc\u00e8ncia de la voluntat popular, ja que la seva publicaci\u00f3 i aprovaci\u00f3 dep\u00e8n del poder legislatiu conformat per les corts generals, aix\u00f2 \u00e9s, congr\u00e9s dels diputats i senat, que alhora s\u00f3n elegits pel poble.</p> <p>Aquests documents legals, una vegada estan aprovades passen a formar part de l\u2019ordenament jur\u00eddic, la jerarquia del qual  repassem a continuaci\u00f3:</p> Elaboraci\u00f3 font Ministerio"},{"location":"Moduls/CECNC/UT02.html#constitucio-de-1978-i-tractats-internacionals","title":"Constituci\u00f3 de 1978 i Tractats Internacionals:","text":"<p>La Constituci\u00f3 \u00e9s la norma suprema de l\u2019ordenament jur\u00eddic espanyol, preval sobre totes les altres lleis. Tots els ciutadans i els poders p\u00fablics hi estan subjectes i a partir d\u2019aquesta es desenvolupa la resta de documents legislatius. Va ser aprovada per refer\u00e8ndum entre tots els espanyols el 6 de desembre de 1978 i el 29 de desembre es va publicar al BOE i va entrar en vigor. Estableix els conceptes que ordenen el funcionament de la naci\u00f3, com poden ser la definici\u00f3 de l\u2019estat com a monarquia parlament\u00e0ria, la divisi\u00f3 de poders, i l\u2019establiment d\u2019autonomies.</p> <p>Un Tractat Internacional \u00e9s un acord celebrat per escrit entre Estats, o entre Estats i altres subjectes de dret internacional, com les organitzacions internacionals, i regit pel Dret Internacional.</p> <p>La Constituci\u00f3, els tractats internacionals i tota la normativa comunit\u00e0ria, es troben al mateix nivell en la pir\u00e0mide de prioritat legal, depenent de qui parli de la mat\u00e8ria podr\u00e0 dir que un est\u00e0 sobre l\u2019altre. No obstant aix\u00f2, conviuen en el mateix nivell.</p>"},{"location":"Moduls/CECNC/UT02.html#lleis-organiques","title":"Lleis org\u00e0niques:","text":"<p>Les lleis org\u00e0niques venen regulades en l'article 81 de la Constituci\u00f3 Espanyola, desenvolupen els drets fonamentals i llibertats p\u00fabliques, s\u00f3n aquest tipus de lleis en les quals s'aproven els estatuts d'autonomia, es defineixen les normes sobre el r\u00e8gim electoral general (LOREG) o la protecci\u00f3 de dades de car\u00e0cter personal (LOPD).</p> <p>L\u2019aprovaci\u00f3, modificaci\u00f3 o derogaci\u00f3 de les lleis org\u00e0niques exigir\u00e0 majoria absoluta del Congr\u00e9s, en una votaci\u00f3 final sobre el conjunt del projecte.</p> <p>A m\u00e9s de totes aquelles que estiguin previstes a la Constituci\u00f3, per exemple, la regulaci\u00f3 dels estats d'alarma, excepci\u00f3 i lloc, la regulaci\u00f3 del defensor del poble, entre d'altres. La seva aprovaci\u00f3, modificaci\u00f3 o derogaci\u00f3 es dur\u00e0 a terme per majoria absoluta dels membres del Congr\u00e9s.</p>"},{"location":"Moduls/CECNC/UT02.html#lleis-ordinaries","title":"Lleis ordin\u00e0ries:","text":"<p>Les lleis ordin\u00e0ries s\u2019encarreguen de regular mat\u00e8ries que no estiguin reservades a llei org\u00e0nica i per a la seva aprovaci\u00f3 es necessita majoria simple de cadascuna de les cambres. S\u00f3n aprovades per les corts generals per majoria simple i no afecten les mat\u00e8ries pr\u00f2pies de les lleis org\u00e0niques. Es troben al mateix nivell que les lleis org\u00e0niques, tot i que es poden veure per sota en la jerarquia legislativa. S\u00f3n lleis ordin\u00e0ries, per exemple:</p> <ul> <li>Les lleis que estan encarregades de regular l\u2019exercici de professions i gremis d\u2019un pa\u00eds.</li> <li>Els codis civils, regulant tot el referent a dret civil.</li> <li>Lleis de tr\u00e0nsit, abocades al transport terrestre, per\u00f2 abracen tamb\u00e9 l'aeron\u00e0utica i altres tipus de transport.</li> <li>Lleis que regulen el comer\u00e7, i per tant formen el dret mercantil.</li> <li>Lleis d\u2019ascens militar.</li> <li>Alguns aspectes involucrats en el dret penal tal com sancions monet\u00e0ries, o procediments jur\u00eddics en cas de cometre algun crim.</li> </ul>"},{"location":"Moduls/CECNC/UT02.html#normes-reglamentaries","title":"Normes reglament\u00e0ries:","text":"<p>Hi ha normes que no s\u00f3n elaborades pel poder legislatiu a trav\u00e9s de les corts generals, per\u00f2 el seu valor s'equipara a la llei. Aquestes normes es creen pel poder executiu a trav\u00e9s del govern o Assemblees Legislatives i desenvolupen mat\u00e8ries que no estan reservades a llei org\u00e0nica. Fonamentalment es tracta de decrets legislatius i decrets llei.</p> <p>Decrets Legislatius: Els decrets legislatius desenvolupen mat\u00e8ries delegades, que no guardi la Constituci\u00f3 a les lleis org\u00e0niques. Aquest tipus de normes les crea el govern, a trav\u00e9s de la potestat legislativa atorgada pel poder legislatiu mitjan\u00e7ant les lleis ordin\u00e0ries.</p> <p>Decret Llei: En cas d\u2019extraordin\u00e0ria i urgent necessitat, el Govern podr\u00e0 dictar disposicions legislatives provisionals, que prendran la forma de Decrets llei, i que no podran afectar l\u2019ordenament de les institucions b\u00e0siques de l\u2019Estat, els drets, deures i llibertats dels ciutadans regulats en el T\u00edtol I de la Constituci\u00f3, el r\u00e8gim de les Comunitats Aut\u00f2nomes ni el Dret electoral general.</p>"},{"location":"Moduls/CECNC/UT02.html#reglaments-de-govern","title":"Reglaments de govern:","text":"<p>Es tracta d\u2019una s\u00e8rie d\u2019instruccions o normatives que s\u2019utilitzen per evitar la subjectivitat en els processos. Aquests tenen diferents funcions, segons el que s'esperi aconseguir amb ells.</p> <p>Lleis Org\u00e0niques, per exemple, no tenen l'oportunitat d'especificar al detall tots els procediments a seguir. A causa d\u2019aix\u00f2, \u00e9s all\u00e0 on sorgeixen els reglaments com a estrat\u00e8gia de suport per a la seva correcta aplicaci\u00f3 i \u00fas.</p> <p>Els reglaments poden tenir forma de Reials Decrets, les Ordres de les Comissions delegades del Govern, les Ordres Ministerials, etc.</p> <p>S\u00f3n exemples de reglaments:</p> <ul> <li>Reglament General de protecci\u00f3 de dades.</li> <li>Reglament General de recaptaci\u00f3.</li> <li>Reglament General de la seguretat social.</li> <li>Reglament General de circulaci\u00f3.</li> </ul>"},{"location":"Moduls/CECNC/UT02.html#lleis-i-reglaments-de-les-comunitats-autonomes","title":"Lleis i reglaments de les comunitats aut\u00f2nomes:","text":"<p>Finalment, tenim les lleis i els reglaments de les Comunitats Aut\u00f2nomes. La seva funci\u00f3 \u00e9s exactament la mateixa que les de r\u00e8gim estatal, per\u00f2 les compet\u00e8ncies s\u00f3n variables entre autonomies, per la qual cosa, encara que estiguin col\u00b7locades en aquesta posici\u00f3, la relaci\u00f3 entre les normes auton\u00f2miques i les estatals dep\u00e8n de les compet\u00e8ncies de cadascuna en els diferents temes.</p>"},{"location":"Moduls/CECNC/UT02.html#jurisdiccions","title":"Jurisdiccions:","text":"<p>En aquesta secci\u00f3 es presenten tots els \u00f2rgans pertanyents al poder judicial i que s\u2019encarreguen de garantir el compliment de la llei per part de les institucions i ciutadans. Es divideixen en diferents institucions segons la funci\u00f3 que s\u2019encarregui de regular cadascun d\u2019ells.</p> Tribunal Suprem M\u00e0xim \u00f2rgan judicial. Audi\u00e8ncia Nacional Tall d'Apel\u00b7lacions, Cort Penals Superior, Cort Superior per a Casos Administratius Contenciosos (terrorisme, falsificaci\u00f3 de moneda i crim organitzat). Tribunals Superiors de Just\u00edcia Corts Regionals Supremes Audi\u00e8ncies provincials Civil (Cort de Magistrats) i Criminal (investigaci\u00f3, penal, menors, seguiment de l'empresonament) Jutjats de Primera Inst\u00e0ncia i Instrucci\u00f3 Delicte flagrant i registre civil. Jutjats Mercantils Litigis relacionats amb la llei empresarial. Jutjats Penals Casos en qu\u00e8 l\u2019empresonament \u00e9s menor a 5 anys i altres c\u00e0stigs inferiors a 10 anys. Jutjats Contenciosos Administratius. Litigis relacionats amb la gesti\u00f3 de l\u2019Administraci\u00f3 i autoritzaci\u00f3 d\u2019aplanament de morada. Jutjats Socials Litigis relacionats amb el treball o la seguretat social. Jutjats de Vigil\u00e0ncia Penitenci\u00e0ria Execuci\u00f3 de l'empresonament (excepte per a menors). Jutjats de Menors Delictes comesos per menors que tenen entre 14 i 18 anys i, en certs casos, majors que tenen entre 18 i 21 anys. Jutjats de Viol\u00e8ncia sobre la Dona A m\u00e9s del que indica el seu nom, s\u00f3n jutjats de fam\u00edlia en un sentit ampli. Jutjats de Pau. Els jutges d'aquestes corts no s\u00f3n professionals sin\u00f3 ciutadans importants amb drets civils i sense antecedents criminals. S\u2019ocupen de controv\u00e8rsies en ve\u00efnats, protecci\u00f3 animal, etc. Tribunal Constitucional Jutja la naturalesa constitucional dels textos legislatius votats per l\u2019Estat o les comunitats aut\u00f2nomes. S\u2019ocupa de tots els conflictes de jurisdicci\u00f3 entre l\u2019Estat i les comunitats aut\u00f2nomes. Tribunal de Comptes Monitoratge de l\u2019activitat econ\u00f2mica i financera de l\u2019Estat. Cada comunitat aut\u00f2noma t\u00e9 una cort regional similar. <p>Legislaci\u00f3 nacional i acords internacionals:</p> <p>Com hem vist, el compliment \u00e9s un element indispensable per al correcte funcionament d\u2019un negoci, ja que un dels seus principals objectius \u00e9s que aquest sigui desenvolupat dins dels l\u00edmits de la llei, tot i que tamb\u00e9 estableix compromisos m\u00e9s elevats que poden ser utilitzats com un argument de venda per a l\u2019empresa.</p> <p>En qualsevol cas, s\u2019ha de tenir en compte quines s\u00f3n les principals lleis que afecten les organitzacions i que s\u2019han de tenir en compte per part dels sistemes de gesti\u00f3 de compliment.</p> <p>A continuaci\u00f3, es presenten una s\u00e8rie de lleis amb impacte sobre empreses i organitzacions, unes enfocades pel que fa a l\u2019\u00fas de la tecnologia.</p> <p>Regulaci\u00f3 amb impacte en empreses i organitzacions vinculada amb l\u2019\u00fas de tecnologies:</p> <p>El Reglament General de Protecci\u00f3 de Dades (RGPD, o GDPR per les seves sigles en angl\u00e8s) i la Llei Org\u00e0nica de Protecci\u00f3 de Dades (LOPD). S\u00f3n les dues principals normes que vetllen per la privacitat de les dades personals. Totes les empreses les han de tenir en compte i complir-les escrupolosament.</p> <p>Llei de Propietat Intel\u00b7lectual (LPI). Protegeix les creacions originals, en qualsevol format i mitj\u00e0: enregistraments, emissions de r\u00e0dio, etc. S\u2019ha de tenir en compte, per\u00f2, que no inclou idees, processos ni conceptes de matem\u00e0tiques.</p> <p>Lleis de Propietat Industrial. Similars a l\u2019anterior, per\u00f2, en aquest cas, destinades a la protecci\u00f3 de dissenys industrials, marques, noms comercials, patents, etc. S\u00f3n diverses normatives diferents: de marques, de patents...</p> <p>Llei de Serveis de la Societat de la Informaci\u00f3 i de Comer\u00e7 Electr\u00f2nic (LSSI-CE). Regula tots els intercanvis comercials realitzats a trav\u00e9s d\u2019Internet. Si tens o penses muntar una botiga online, t'interessa especialment.</p> <p>Reglament Europeu d'Identificaci\u00f3 Electr\u00f2nica i Serveis de Confian\u00e7a en el Mercat Interior (eIDAS). T\u00e9 com a objectiu refor\u00e7ar la seguretat i la confian\u00e7a de les transaccions electr\u00f2niques realitzades dins del marc del Mercat \u00danic Digital Europeu.</p> <p>Per saber-ne m\u00e9s Sigui quin sigui l\u2019impacte, tota la regulaci\u00f3 existent pot trobar-se i ser consultada al web del Butllet\u00ed Oficial de l\u2019Estat, amb especial atenci\u00f3 als ep\u00edgrafs sobre el dret mercantil i les societats mercantils de l\u2019enlla\u00e7 a continuaci\u00f3: Biblioteca Jur\u00eddica Digital</p> <p>Aix\u00ed mateix, es presenta un altre recurs relacionat amb la regulaci\u00f3 espec\u00edfica en diferents \u00e0mbits relacionats amb la pime, que engloba les principals lleis d'impacte en les petites i mitjanes empreses: iPYME - Normativa relacionada amb la PiME</p>"},{"location":"Moduls/CECNC/UT02.html#12-analisi-i-gestio-de-riscos-mapes-de-riscos","title":"1.2.- An\u00e0lisi i gesti\u00f3 de riscos, mapes de riscos.","text":""},{"location":"Moduls/CECNC/UT02.html#la-gestio-de-risc-amb-iso-31000","title":"La gesti\u00f3 de risc amb ISO 31000","text":"Foto d'Enrico Perini[CC BY-NC-SA] <p>Qualsevol activitat relacionada amb el negoci de l\u2019empresa comporta l\u2019exist\u00e8ncia de riscos. La presa de decisions relacionada amb els riscos \u00e9s un aspecte diferencial en la manera de gestionar una organitzaci\u00f3. Existeixen diverses fonts de risc en cada organitzaci\u00f3, fins ara el contingut d\u2019aquest m\u00f2dul s\u2019ha centrat en aquells relacionats amb compliment normatiu, per\u00f2 n\u2019hi ha d\u2019altres, com poden ser aquells relacionats amb l\u2019\u00fas de les tecnologies, o relacionats amb la seguretat f\u00edsica, la salut, etc...</p> <p>L'Organitzaci\u00f3 Internacional d'Estandarditzaci\u00f3 (OSI), ha dissenyat una guia que defineix les directrius per a la gesti\u00f3 d'aquests. Aquesta guia \u00e9s la ISO 31000, publicada en la seva primera versi\u00f3 l'any 2009, s'ha actualitzat l'any 2018 en una segona versi\u00f3. L\u2019objectiu de la norma \u00e9s que organitzacions de tots tipus i mides puguin gestionar qualsevol tipus de risc en l\u2019empresa de forma efectiva, essent de recomanaci\u00f3 que totes les empreses integrin aquest tipus d\u2019est\u00e0ndards en els seus processos de negoci.</p> <p>Els objectius de la norma ISO 31000 per a la gesti\u00f3 de riscos s\u00f3n els seg\u00fcents:</p> <ul> <li>Crear i protegir el valor, contribuir als objectius de l\u2019organitzaci\u00f3, aix\u00ed com millorar certs aspectes com poden ser la seguretat, el compliment o la protecci\u00f3 ambiental.</li> <li>Ajudar en la presa de decisions avaluant diferents or\u00edgens i alternatives d\u2019informaci\u00f3.</li> <li>Donar suport per a la gesti\u00f3 d\u2019incerteses. La gesti\u00f3 del risc ajuda a gestionar situacions en les quals l\u2019organitzaci\u00f3 es troba amb manca d\u2019informaci\u00f3 o incertesa, considerant la incertesa i la manera de gestionar-la.</li> <li>Fomentar la millora cont\u00ednua en l\u2019organitzaci\u00f3 i reducci\u00f3 de riscos negatius per a la mateixa de manera din\u00e0mica, iterativa i amb atenci\u00f3 al canvi, responent davant de noves situacions que puguin esdevenir en una organitzaci\u00f3 i el seu entorn.</li> </ul>  **Autoavaluaci\u00f3**   **Pregunta**  La norma ISO 31000 serveix per gestionar els riscos....  **Respostes**  Opci\u00f3 1   A) De Seguretat de la Informaci\u00f3.  Opci\u00f3 2   B) Penals.  Opci\u00f3 3   C) De compliment normatiu."},{"location":"Moduls/CECNC/UT02.html#conceptes-relacionats-amb-la-gestio-de-risc","title":"Conceptes relacionats amb la gesti\u00f3 de risc","text":"<p>A l\u2019hora de parlar de gesti\u00f3 riscos, s\u2019han de tenir en compte una s\u00e8rie de conceptes b\u00e0sics que tenen a veure i conformen els riscos.</p> <p>Actiu: Qualsevol recurs de l\u2019empresa necessari per desenvolupar les activitats di\u00e0ries i la no disponibilitat o deteriorament de les quals suposa un greuge o cost. La naturalesa dels actius dependr\u00e0 de l\u2019empresa, per\u00f2 la seva protecci\u00f3 \u00e9s la finalitat \u00faltima de la gesti\u00f3 de riscos. La valoraci\u00f3 dels actius \u00e9s important per a l\u2019avaluaci\u00f3 de la magnitud del risc.</p> <p>Esdeveniment: Ocurr\u00e8ncia d\u2019una circumst\u00e0ncia o canvi en un conjunt de circumst\u00e0ncies.</p> <p>Vulnerabilitat: Debilitat que presenta un actiu o un proc\u00e9s.</p> <p>Amena\u00e7a: Circumst\u00e0ncia desfavorable que, si s\u2019esdevindr\u00e0, tindr\u00e0 conseq\u00fc\u00e8ncies negatives en l\u2019organitzaci\u00f3.</p> <p>Conseq\u00fc\u00e8ncia: Efecte d\u2019un esdeveniment que afecta un objectiu.</p> <p>Impacte: materialitzaci\u00f3 d\u2019una amena\u00e7a sobre un actiu aprofitant una vulnerabilitat.</p> <p>La conseq\u00fc\u00e8ncia o l\u2019impacte es poden ser enteses com a sin\u00f2nims en funci\u00f3 de la tipologia de regs sobre les quals es tracti, i aquests, poden ser de diferents tipus:</p> <ul> <li>Danys personals.</li> <li>P\u00e8rdues financeres.</li> <li>Interrupci\u00f3 de servei.</li> <li>P\u00e8rdua d\u2019imatge.</li> <li>P\u00e8rdua de reputaci\u00f3.</li> <li>Disminuci\u00f3 de rendiment.</li> <li>Sancions.</li> <li>Penes judicials.</li> </ul> <p>Probabilitat: Possibilitat que succeeixi un fet, succ\u00e9s o esdeveniment.</p> <p>Risc: Efecte de la incertesa sobre un objectiu.</p> <p>El risc est\u00e0 calculat com el producte de l\u2019impacte per la probabilitat.</p> <p>Control: Mesura que mitiga un risc, reduint la probabilitat o l\u2019impacte.</p>"},{"location":"Moduls/CECNC/UT02.html#la-gestio-del-risc","title":"La gesti\u00f3 del risc","text":"<p>Un cop s\u2019han vist aquests conceptes b\u00e0sics, s\u2019ha d\u2019entendre en qu\u00e8 consisteix el proc\u00e9s de gesti\u00f3 del risc.</p> INCIBE(CC BY-NC-SA) <p>La gesti\u00f3 de riscos b\u00e0sicament implica processos diferents, la identificaci\u00f3 de riscos, l\u2019avaluaci\u00f3 de riscos, i el tractament de riscos.</p> <p>La identificaci\u00f3 de riscos consisteix a trobar situacions que puguin tenir efectes negatius en l\u2019organitzaci\u00f3, b\u00e0sicament aquest proc\u00e9s es duu a terme mitjan\u00e7ant la identificaci\u00f3 d\u2019amenaces i l\u2019associaci\u00f3 de probabilitat que n\u2019esdevingui donada una.</p> <p>Per identificar els riscos, cal tenir en compte els actius o processos del negoci que poden funcionar com a fonts de risc, amb cadascuna de les amenaces que poden esdevenir amb ells. La identificaci\u00f3 de les amenaces i la valoraci\u00f3 dels danys que poden produir es pot obtenir preguntant als propietaris dels actius, usuaris, experts, etc.</p> <p>L \u2018an\u00e0lisi de riscos, com a pas posterior, tracta d \u2018avaluar el nivell del risc identificat i tenint en compte aix\u00ed mateix el nivell d\u2019impacte i probabilitat associats al risc.</p> <p>Hi ha dues maneres d\u2019avaluar els riscos, la primera \u00e9s la manera qualitativa en qu\u00e8 s\u2019identifiquen els nivells a trav\u00e9s d\u2019adjectius construint una escala, o b\u00e9, de manera quantitativa assignant un valor num\u00e8ric tant a la probabilitat com a l\u2019impacte.</p> INCIBE(CC BY-NC-SA) <p>El tractament de riscos consisteix  a prendre una decisi\u00f3 sobre el mode d\u2019actuaci\u00f3 contra el risc identificat, generalment duent a terme alguna acci\u00f3 enfront d\u2019aquests. A continuaci\u00f3, es presenten les possibles decisions que es poden prendre en relaci\u00f3 als riscos:</p> <ul> <li>Evitar o eliminar el risc: Substituint un actiu o proc\u00e9s eliminant l\u2019amena\u00e7a o activitat que el produeix.</li> <li>Reduir-lo o mitigar-lo: Dur a terme accions sobre un actiu o proc\u00e9s per reduir la probabilitat o l\u2019impacte.</li> <li>Transferir-lo, compartir-lo o assignar-lo a tercers: a trav\u00e9s de la contractaci\u00f3 d\u2019una asseguran\u00e7a, o l\u2019execuci\u00f3 d\u2019un proc\u00e9s compartit amb una altra organitzaci\u00f3.</li> <li>Acceptar-ho: No realitzar cap tipus d\u2019activitat, en general, donat un nivell baix de risc, o b\u00e9, despr\u00e9s d\u2019una an\u00e0lisi de cost de les activitats de mitigaci\u00f3, at\u00e8s el seu alt cost de mitigaci\u00f3.</li> </ul> <p>La decisi\u00f3 sobre dur a terme una opci\u00f3 o una altra dependr\u00e0 de diversos factors, complexitat, cost, etc...  el nivell de risc que una empresa est\u00e0 disposada a assumir o acceptar es denomina \"apetit de risc\".</p>  **Autoavaluaci\u00f3**   **Pregunta**  Una organitzaci\u00f3 ha detectat una amena\u00e7a que de materialitzar-se tindria un impacte sobre el 10% del pressupost de l'organitzaci\u00f3. A m\u00e9s, la probabilitat d'ocurr\u00e8ncia d'aquesta amena\u00e7a \u00e9s del 82%.  De quin nivell ser\u00e0 el risc resultant?   **Respostes**  Opci\u00f3 1   Baix  Opci\u00f3 2   Mitj\u00e0  Opci\u00f3 3   Alt"},{"location":"Moduls/CECNC/UT02.html#13-documentacio-del-sistema-de-compliment-normatiu-dissenyat","title":"1.3.- Documentaci\u00f3 del sistema de compliment normatiu dissenyat.","text":""},{"location":"Moduls/CECNC/UT02.html#documentacio-de-suport-sobre-el-sistema-de-gestio-de-compliance","title":"Documentaci\u00f3 de suport sobre el sistema de gesti\u00f3 de compliance","text":"<p>Com ja s\u2019ha comentat, la norma ISO 37301 defineix les guies per al desenvolupament d\u2019un sistema de gesti\u00f3 de compliance.</p> <p>Segons aquesta, el sistema de gesti\u00f3 de comptar amb una documentaci\u00f3 de suport m\u00ednima perqu\u00e8 es pugui demostrar la seva correcta operaci\u00f3, i, per tant, pugui ser certificable. A continuaci\u00f3, es presenten els diferents documents amb els quals ha de comptar:</p> <p>Els primers dominis (1,2,3) de norma s\u00f3n dominis explicatius de la norma, es refereixen al seu propi funcionament, per la qual cosa no requereixen de documentaci\u00f3 espec\u00edfica.</p> <p>4. Context de l'organitzaci\u00f3</p> <p>En l\u2019ep\u00edgraf 4, es parla del context de l\u2019organitzaci\u00f3, per a aix\u00f2 s\u2019ha de desenvolupar un document de context en el qual s\u2019especifiqui informaci\u00f3 b\u00e0sica sobre el funcionament de l\u2019empresa, el seu negoci, estrat\u00e8gia, tipologia i mida.  En aquest document es deu el context intern de l\u2019organitzaci\u00f3 indicant si situaci\u00f3 econ\u00f2mica, la seva estructura de pol\u00edtiques i procediments, tecnologies i recursos interns. A m\u00e9s, tamb\u00e9 s\u2019ha de fer refer\u00e8ncia al context extern de l\u2019organitzaci\u00f3, identificant relacions comercials amb tercers i la seva naturalesa, el context regulatori i legal, la situaci\u00f3 geopol\u00edtica, social, cultural i ambiental de la regi\u00f3 o del pa\u00eds que pogu\u00e9s afectar l\u2019organitzaci\u00f3.</p> Intef(CC BY-NC-SA) <p>Com a segon lliurable del quart ep\u00edgraf de la norma s\u2019han d\u2019identificar les parts interessades, que s\u00f3n tots els actors que tenen algun tipus de repercussi\u00f3 positiva o negativa de manera directa en l\u2019organitzaci\u00f3, com, per exemple: Clients, empleats, accionistes, prove\u00efdors, distribu\u00efdors, etc...</p> <p>La identificaci\u00f3 de les parts interessades, servir\u00e0 per completar el tercer document necessari, que reflecteix quins s\u00f3n els requisits i necessitats que identifiquen cadascuna de les parts cap a l\u2019organitzaci\u00f3. Per exemple, en la majoria de les ocasions, totes les parts interessades establiran com a requisit el compliment legal. Hi haur\u00e0 clients que requeriran el compliment de la norma ISO 37301, o que es compleixin espec\u00edficament amb exig\u00e8ncies relacionades amb blanqueig de capitals, protecci\u00f3 de dades, etc...</p> <p>Haur\u00e0 d\u2019existir suport documental de l\u2019abast del Sistema de Gesti\u00f3 de Compliment, aquest ha de ser molt espec\u00edfic i identificar que empreses, o l\u00ednies de negoci dins de l\u2019empresa hi estan afectats.</p> <p>L\u2019organitzaci\u00f3 ha d\u2019identificar aix\u00ed mateix identificar de manera cont\u00ednua qualsevol comprom\u00eds relacionat amb el compliment de qualsevol requisit legal, pol\u00edtica o normativa, aix\u00ed mateix, s\u2019ha de comptar amb una avaluaci\u00f3 d\u2019impacte dels canvis en l\u2019organitzaci\u00f3 i implementar qualsevol canvi requerit en els compromisos obligatoris de compliment.</p> <p>Ha d\u2019existir documentaci\u00f3 sobre les an\u00e0lisis de riscos de compliment en l\u2019organitzaci\u00f3, aix\u00ed com una avaluaci\u00f3 dels mateixos que ajudi a determinar el seu posterior tractament. Aquesta avaluaci\u00f3 de riscos ha de ser realitzada amb suficient freq\u00fc\u00e8ncia com per no passar per alt cap nou risc que pugui sorgir.</p> <p>els compromisos identificats han de comptar aix\u00ed mateix amb una avaluaci\u00f3 de riscos de compliment per a l\u2019organitzaci\u00f3, i avaluar els impactes que ocasiona en l\u2019organitzaci\u00f3.</p> <p>5. Lideratge i comprom\u00eds de la direcci\u00f3</p> <p>L\u2019ep\u00edgraf 5 tracta sobre el lideratge i comprom\u00eds de la direcci\u00f3 per part de la direcci\u00f3, que ha d\u2019estar demostrada establint una pol\u00edtica de compliance, aix\u00ed com una definici\u00f3 de rols i responsabilitats dins de l\u2019organitzaci\u00f3, i recursos humans, financers, tecnol\u00f2gics o en general, de qualsevol tipus, que donin suport a la funci\u00f3 de compliance. Aix\u00ed mateix, s\u2019ha de nomenar un responsable del proc\u00e9s i establir una estructura organitzativa en la qual s\u2019incloguin que activitats han de dur a terme.</p> <p>La direcci\u00f3 o \u00f2rgan de govern, s\u2019ha de responsabilitzar de donar seguiment al sistema i prendre decisions davant l\u2019estrat\u00e8gia d\u2019aquest i la gesti\u00f3 dels riscos derivats del compliment. De cara a l\u2019organitzaci\u00f3 la direcci\u00f3 ha de demostrar el seu comprom\u00eds fomentant la comunicaci\u00f3 i la cultura de compliance entre els seus integrants.</p> <p>De tot aquest ep\u00edgraf, s\u2019han de deixar evid\u00e8ncies de les activitats relacionades pel que fa al lideratge. L\u2019\u00fanic document que la norma requereix expl\u00edcitament \u00e9s la pol\u00edtica de compliance, la qual ha de ser adequada als objectius del negoci, ha de funcionar com a marc de refer\u00e8ncia per a la gesti\u00f3 del compliance, ha de descriure la funci\u00f3 de compliance, resumir les conseq\u00fc\u00e8ncies de fallar al compliment ha d\u2019incloure compromisos de complir amb els requisits aplicables i la millora cont\u00ednua del proc\u00e9s de gesti\u00f3 de compliance.</p> <p>6. Planificaci\u00f3 del sistema de gesti\u00f3 de compliment</p> <p>Per donar resposta a l\u2019ep\u00edgraf 6, s\u2019han de determinar les accions i recursos s\u00f3n necessaris per dur a terme que cobreixin els riscos i oportunitats identificats en l\u2019ep\u00edgraf 4, durant la definici\u00f3 del context.</p> <p>Aix\u00ed mateix, s\u2019han d\u2019establir els objectius del compliment. Aquests han d\u2019estar alineats amb la pol\u00edtica, ser mesurables, estar monitoritzats, ser comunicats a l\u2019organitzaci\u00f3, actualitzats i documentats.  Per establir la seva planificaci\u00f3 s\u2019ha de formalitzar que accions s\u2019han de dur a terme, recursos associats, qui ser\u00e0 el responsable de l\u2019actuaci\u00f3, quan seran duts a terme i com s\u2019avaluar\u00e0 el seu compliment.</p> <p>En el cas que hi hagi algun canvi en el sistema de gesti\u00f3 de compliment, s\u2019ha de tenir en compte el prop\u00f2sit del canvi i les seves conseq\u00fc\u00e8ncies, l\u2019efic\u00e0cia del canvi, recursos necessaris i assignaci\u00f3 o reassignaci\u00f3 de rols i responsabilitats.</p> <p>7. Suport al Sistema de Gesti\u00f3 de Compliance</p> <p>L\u2019Ep\u00edgraf 7 tracta d\u2019elements de suport al SGC. Com a element inicial, s\u2019han de determinar que recursos s\u00f3n necessaris per a l\u2019establiment, operaci\u00f3 i millora cont\u00ednua del sistema de compliment.</p> <p>S\u2019han d\u2019establir les compet\u00e8ncies amb qu\u00e8 han de comptar els integrants del sistema, per a aix\u00f2 l\u2019organitzaci\u00f3 ha de determinar les compet\u00e8ncies necess\u00e0ries per operar el sistema, assegurar que les persones que operen el sistema de gesti\u00f3 siguin competents per formaci\u00f3, educaci\u00f3 o experi\u00e8ncia, i, prendre accions necess\u00e0ries per aconseguir la compet\u00e8ncia necess\u00e0ria i avaluar-ne l\u2019efectivitat.</p> <p>Aix\u00ed mateix, tamb\u00e9 s\u2019ha de tenir en compte el proc\u00e9s d\u2019ocupaci\u00f3, establint processos en els quals es requereixi activitats de compliment, proporcionant al personal les pol\u00edtiques de compliance i establint procediments sancionadors als empleats que no compleixin.</p> <p>Tots els rols de l\u2019organitzaci\u00f3 que exerceixin alguna tasca amb impacte en compliance han de ser conscients de les seves funcions i responsabilitats en relaci\u00f3 al compliance rebent almenys la pol\u00edtica de compliance i fent-los conscients dels beneficis i impactes que pot ocasionar el compliment a l\u2019organitzaci\u00f3.</p> Foto de Canva Studio[CC0] <p>L\u2019organitzaci\u00f3 ha de comptar amb un procediment de comunicacions internes i externes rellevants per al compliment del sistema entre les quals s\u2019inclou, que es comunicar\u00e0, quan s\u2019ha de comunicar, cap a qui i a trav\u00e9s que canals i modes.</p> <p>Pel que fa a la informaci\u00f3 documentada, aquest ep\u00edgraf estableix que el sistema ha d\u2019incloure obligat\u00f2riament els documents definits com a m\u00ednims en la norma que s\u2019especifiquen en aquest tema, aix\u00ed com qualsevol tipus d\u2019informaci\u00f3 que l\u2019organitzaci\u00f3 trobi rellevant per al sistema de gesti\u00f3 de compliment. Tota la informaci\u00f3 ha d\u2019estar correctament documentada, formatejada, revisada i aprovada. Ha d\u2019existir un control documental disponible i adequat per al seu \u00fas. Per al control de la informaci\u00f3 l\u2019organitzaci\u00f3 ha de controlar la distribuci\u00f3, acc\u00e9s, recuperaci\u00f3 i \u00fas, emmagatzematge i conservaci\u00f3, control de canvis, retenci\u00f3 i disposici\u00f3 de la informaci\u00f3.</p> <p>8. Operaci\u00f3 del Sistema de Gesti\u00f3 de Compliment</p> <p>L\u2019organitzaci\u00f3 ha de planificar i controlar els processos necessaris per complir amb els requisits i accions de l\u2019apartat de planificaci\u00f3. Per a aix\u00f2 ha d\u2019establir uns criteris de prioritzaci\u00f3 per a la implementaci\u00f3 i control de processos de compliance.</p> <p>Aquests criteris poden ser factors econ\u00f2mics, de recursos humans, temps de durada de projecte, nivell de reducci\u00f3 de risc, import\u00e0ncia del requisit o de l\u2019objectiu, etc... Sigui quin sigui, aquests criteris han d\u2019estar establerts i els processos del sistema controlats segons els mateixos.</p> <p>Aix\u00ed mateix, l\u2019organitzaci\u00f3 ha d\u2019implantar controls per gestionar les obligacions de compliment i els seus riscos, que s\u2019han de revisar i provar de manera peri\u00f2dica.</p> <p>L\u2019organitzaci\u00f3 tamb\u00e9 ha d\u2019establir un canal de comunicaci\u00f3 perqu\u00e8 qualsevol persona relacionada amb l\u2019organitzaci\u00f3 pugui comunicar qualsevol tipus d\u2019informaci\u00f3 sobre sospites de violacions de les pol\u00edtiques de compliment.</p> <p>L\u2019organitzaci\u00f3 ha de comptar amb processos per investigar possibles incid\u00e8ncies, casos reals o sospites de violacions de compliment, que garanteixin la presa de decisions imparcials.</p> <p>En cas d\u2019exist\u00e8ncia de qualsevol recerca, s\u2019ha de conservar la informaci\u00f3 documentada.</p> <p>9. Avaluaci\u00f3 d'acompliment</p> <p>Les organitzacions han de monitoritzar el sistema de gesti\u00f3 de compliment, per a aix\u00f2, l\u2019empresa ha de definir, que necessita ser mesurat, m\u00e8todes de seguiment i mesurament, quan es realitzen els mesuraments i se\u2019n porta a terme el seguiment. S\u2019ha de deixar evid\u00e8ncia documental dels resultats del monitoratge.</p> <p>L\u2019organitzaci\u00f3 ha d\u2019identificar fonts que permetin la retroalimentaci\u00f3 del sistema de gesti\u00f3 de compliment, obtenir informaci\u00f3 que permeti identificar causes d\u2019un incompliment i que garanteixin mesures adequades, reflectint, en cas necessari la informaci\u00f3 en la taula de riscos establerta en l\u2019an\u00e0lisi de riscos de l\u2019ep\u00edgraf 4 de context.</p> <p>Una de les fonts d\u2019informaci\u00f3, pot ser el desenvolupament d\u2019indicadors que permetin a l\u2019empresa avaluar l\u2019assoliment d\u2019objectius, avaluar compliments i actuar en cas de ser necessari.</p> Foto d'Andrea Piacquadio[CC0] <p>Aix\u00ed mateix, tamb\u00e9 cal establir, implantar i mantenir processos de generaci\u00f3 d\u2019informes que permeti comunicar la situaci\u00f3 sobre l\u2019estat de compliment i de qualsevol element relacionat amb el sistema de gesti\u00f3 a l\u2019alta direcci\u00f3.</p> <p>S\u2019ha d\u2019emmagatzemar registre i evid\u00e8ncia de qualsevol activitat de compliment de l\u2019empresa que permeti ajudar a monitorar i revisar el proc\u00e9s i conformitat del sistema de gesti\u00f3 de compliment.</p> <p>S\u2019han d\u2019establir un programa d\u2019auditoria interna que a intervals planificats que permeti avaluar si el sistema de gesti\u00f3 s\u2019ajusta als requisits de l\u2019empresa i si aquest s\u2019implanta i mant\u00e9 de forma efectiva. Per cada auditoria, l\u2019organitzaci\u00f3 ha de definir objectius, criteri i abast, seleccionar auditors i realitzar auditoria, aix\u00ed com assegurar-se que els resultats de les auditories s\u2019informin els actors rellevants.</p> <p>La direcci\u00f3 de l\u2019organitzaci\u00f3 ha de revisar el sistema de gesti\u00f3 de compliment a intervals planificats, per a assegurar-hi l\u2019ajust a les necessitats de l\u2019organitzaci\u00f3.</p> <p>Per a aix\u00f2, ha de comptar amb informaci\u00f3 pr\u00e8via com l\u2019estat de revisions anteriors, canvis en el context intern i extern de l\u2019organitzaci\u00f3, canvi en requisits i expectatives de les parts interessades, informaci\u00f3 de compliment i riscos relacionats i oportunitats de millora cont\u00ednua.</p> <p>La direcci\u00f3 ha de tenir en compte l\u2019adequaci\u00f3 de la pol\u00edtica de compliment, la independ\u00e8ncia de la funci\u00f3, la mesura en qu\u00e8 s\u2019han complert objectius, l\u2019adequaci\u00f3 de recursos, l\u2019efici\u00e8ncia dels controls i indicadors de compliment, la comunicaci\u00f3 inversa amb l\u2019organitzaci\u00f3 i les investigacions.</p> <p>S\u2019ha de deixar const\u00e0ncia formalitzada dels informes de revisi\u00f3 per part de la direcci\u00f3.</p> <p>10. Millora</p> <p>L\u2019organitzaci\u00f3 ha de millorar de manera cont\u00ednua el sistema de gesti\u00f3 de compliment, per a aix\u00f2 es poden utilitzar diferents or\u00edgens d\u2019informaci\u00f3 tals com les m\u00e8triques sobre els processos, les no-conformitats i accions correctives sobre auditories internes o externes executades i fins i tot d\u2019accions que sorgeixin com a conseq\u00fc\u00e8ncia de la revisi\u00f3 per la direcci\u00f3.</p> <p>S\u2019ha de deixar informaci\u00f3 documentada sobre els no compliments detectats, origen i tipologia d\u2019incompliment, aix\u00ed com accions correctives dutes a terme i resultats de les mateixes.</p>  **Autoavaluaci\u00f3**   **Pregunta**  En quin proc\u00e9s del sistema de gesti\u00f3 de compliment cal definir les iniciatives i projectes a implantar per a la millora del compliment?  **Respostes**  Opci\u00f3 1   8\\. Operaci\u00f3 del sistema de gesti\u00f3 de compliment  Opci\u00f3 2   5\\. Lideratge i comprom\u00eds de la direcci\u00f3  Opci\u00f3 3   4\\. Context de l'organitzaci\u00f3  Opci\u00f3 4   9\\. Avaluaci\u00f3 d'acompliment  **Retroalimentaci\u00f3**  **Autoavaluaci\u00f3**   **Pregunta**  En qu\u00e8 el sistema de gesti\u00f3 de compliment cal dur a terme l'an\u00e0lisi de regs?  **Respostes**  Opci\u00f3 1   8.- Operaci\u00f3 del sistema de gesti\u00f3 de compliment  Opci\u00f3 2   5.- Lideratge i comprom\u00eds de la direcci\u00f3  Opci\u00f3 3   4.- Context de l\u2019organitzaci\u00f3  Opci\u00f3 4   9.- Avaluaci\u00f3 d\u2019acompliment  **Retroalimentaci\u00f3**"},{"location":"Moduls/CECNC/UT02.html#a1-continguts-addicionals","title":"A1.- Continguts Addicionals","text":"<p>Articles rellevants:</p> <p>Escola europea d'excel\u00b7l\u00e8ncia - 7 elements clau d'un programa de compliment ISO 37301</p> <p>EQS group - El sistema de gesti\u00f3 de compliance</p> <p>Quaderns Legals - KPMG:</p> <p>Sistemes de Gesti\u00f3 de Compliment - Part 1</p> <p>Sistemes de Gesti\u00f3 de compliment - Part 2</p> <p>Ebook compliance - AENOR: 15 claus per implementar un programa de compliance.</p> <p>Blog Qualitat i gesti\u00f3: Sistemes de Gesti\u00f3 de compliance</p> <p>UNE ISO 37301: Extracte de la norma</p> <p>INCIBE: Guia de gesti\u00f3 de riscos</p>"},{"location":"Moduls/CECNC/UT02_old.html","title":"UT02.- Disseny de sistemes de gesti\u00f3 de compliment normatiu.","text":""},{"location":"Moduls/CECNC/UT02_old.html#ut02-disseny-de-sistemes-de-gestio-de-compliment-normatiu","title":"UT02.- Disseny de sistemes de gesti\u00f3 de compliment normatiu.","text":"<p>En aquesta unitat actuarem com a oficial de compliment, i desenvoluparem un sistema de gesti\u00f3 de compliance basat en la metodologia proposada per est\u00e0ndards internacionals reconeguts.</p> <p>Al llarg d'aquesta unitat desenvoluparan una s\u00e8rie de compet\u00e8ncies sobre el desenvolupament de sistemes de gesti\u00f3 de compliment normatiu amb l' objectiu de:</p> <ol> <li>Recollir les principals normatives que afecta els diferents tipus d' organitzacions.</li> <li>Establir recomanacions v\u00e0lides per a diferents tipus d' organitzacions d' acord amb la normativa vigent.</li> <li>Realitzar an\u00e0lisis i avaluacions de riscos de diferents tipus d' organitzacions.</li> <li>Documentar un sistema de compliment normatiu.</li> </ol> <p>Aquesta unitat est\u00e0 enfocada als sistemes de gesti\u00f3 de compliment desenvolupar\u00e0 els continguts seg\u00fcents:</p> <ol> <li>Sistemes de Gesti\u00f3 de Compliance.</li> <li>Entorn regulatori d' aplicaci\u00f3.</li> <li>An\u00e0lisi i gesti\u00f3 de riscos, mapes de riscos.</li> <li>Documentaci\u00f3 del sistema de compliment normatiu dissenyat.</li> </ol>"},{"location":"Moduls/CECNC/UT02_old.html#diagrama-conceptual","title":"Diagrama conceptual","text":"Mapa conceptual Mapa conceptual unitat 2"},{"location":"Moduls/CECNC/UT02_old.html#1-sistemes-de-gestio-de-compliance","title":"1.- Sistemes de gesti\u00f3 de compliance","text":""},{"location":"Moduls/CECNC/UT02_old.html#definicio-dun-sistema-de-gestio-de-compliance","title":"Definici\u00f3 d'un sistema de gesti\u00f3 de compliance","text":"Foto de Pixabay(CC0)"},{"location":"Moduls/CECNC/testprova.html","title":"UNITAT 1: Punts principals sobre el compliment normatiu","text":""},{"location":"Moduls/CECNC/testprova.html#unitat-1-punts-principals-sobre-el-compliment-normatiu","title":"UNITAT 1: Punts principals sobre el compliment normatiu","text":""},{"location":"Moduls/CECNC/testprova.html#autoavaluacio","title":"Autoavaluaci\u00f3Pregunta 1: Quins dels seg\u00fcents s\u00f3n llenguatges utilitzats en el desenvolupament web del costat del client? (Selecciona totes les opcions correctes)Pregunta 2: Quin protocol s'utilitza per transferir p\u00e0gines web de manera segura? (Selecciona nom\u00e9s una opci\u00f3)","text":"Autoavaluaci\u00f3 Q\u00fcestionari de Desenvolupament Web JavaScript PHP HTML CSS Python HTTP HTTPS FTP SMTP Veure Retroalimentaci\u00f3 Reiniciar Q\u00fcestionari Puntuaci\u00f3 Final: Justificaci\u00f3 Pregunta 1: <p>                     Les respostes correctes s\u00f3n JavaScript, HTML i CSS:                 </p> <ul> <li>JavaScript: Llenguatge de programaci\u00f3 que s'executa al navegador per afegir interactivitat.</li> <li>HTML: Llenguatge de marcat per estructurar el contingut de les p\u00e0gines web.</li> <li>CSS: Llenguatge d'estils per definir l'aparen\u00e7a visual dels elements HTML.</li> </ul> <p>Respostes incorrectes:</p> <ul> <li>PHP: \u00c9s un llenguatge del costat del servidor, no del client.</li> <li>Python: Encara que pot usar-se en web, s'executa principalment al servidor, no al client.</li> </ul> Justificaci\u00f3 Pregunta 2: <p>                     La resposta correcta \u00e9s HTTPS:                 </p> <ul> <li>HTTPS: Extensi\u00f3 segura d'HTTP que utilitza TLS/SSL per encriptar les comunicacions entre el client i el servidor.</li> </ul> <p>Respostes incorrectes:</p> <ul> <li>HTTP: Protocol per transferir p\u00e0gines web, per\u00f2 sense encriptaci\u00f3.</li> <li>FTP: Protocol per transferir fitxers, no espec\u00edficament per p\u00e0gines web.</li> <li>SMTP: Protocol per enviar correus electr\u00f2nics, no per p\u00e0gines web.</li> </ul> <p></p>"},{"location":"Moduls/DWEC/UT01.html","title":"Material te\u00f2ric","text":""},{"location":"Moduls/DWEC/UT01.html#1-introduccio-a-les-arquitectures-de-desenvolupament-web","title":"1. Introducci\u00f3 a les Arquitectures de Desenvolupament Web","text":""},{"location":"Moduls/DWEC/UT01.html#11-introduccio","title":"1.1. Introducci\u00f3","text":"<p>Comprendre l'arquitectura client-servidor \u00e9s fonamental per a qualsevol iniciativa de desenvolupament a la web moderna. Aquest model constitueix la base sobre la qual s'erigeixen pr\u00e0cticament totes les aplicacions i serveis digitals. Aquest informe t\u00e8cnic t\u00e9 com a objectiu principal analitzar i comparar les tecnologies, responsabilitats i millors pr\u00e0ctiques inherents als entorns del costat del client (client-side) i del costat del servidor (server-side) .</p> <p>La finalitat \u00e9s proporcionar una guia clara i estrat\u00e8gica per a la presa de decisions t\u00e8cniques en projectes de desenvolupament web, assegurant que les solucions adoptades siguin robustes, segures i eficients. En el context acad\u00e8mic actual, aquesta comprensi\u00f3 \u00e9s especialment rellevant per a estudiants que s'inicien en el desenvolupament web i necessiten una base s\u00f2lida sobre la qual construir les seves compet\u00e8ncies t\u00e8cniques.</p>"},{"location":"Moduls/DWEC/UT01.html#12-evolucio-historica-de-la-web","title":"1.2. Evoluci\u00f3 Hist\u00f2rica de la Web","text":"<p>La Web va ser inventada per Tim Berners-Lee al CERN el 1989, fonamentant-se en el concepte d'hipertext. El World Wide Web Consortium (W3C) \u00e9s l'organitzaci\u00f3 responsable de desenvolupar i mantenir els est\u00e0ndards web (incloent HTML, CSS i JavaScript) amb l'objectiu de garantir que la Web sigui oberta i accessible .</p> <p>El desenvolupament d'aplicacions web ha evolucionat significativament:</p> <p>P\u00e0gines Web Est\u00e0tiques: Simples p\u00e0gines HTML amb hipervincles</p> <p>P\u00e0gines Web Generades pel Servidor: HTML generat al servidor (PHP, Node, Java)</p> <p>Introducci\u00f3 d'AJAX: Permet carregar o pujar dades al servidor de manera as\u00edncrona, millorant la interactivitat sense recarregar la p\u00e0gina</p> <p>Single Page Application (SPA): Aplicacions d'una sola p\u00e0gina que es comuniquen amb el servidor usant JSON o XML, oferint una experi\u00e8ncia d'App</p> <p>Progressive Web Apps (PWA): Combinen les millors caracter\u00edstiques de les webs i les aplicacions m\u00f2bils  </p>"},{"location":"Moduls/DWEC/UT01.html#13-definicio-del-model-client-servidor","title":"1.3. Definici\u00f3 del Model Client-Servidor","text":"<p>El model client-servidor \u00e9s l'estructura fonamental que permet la comunicaci\u00f3 a la World Wide Web . Es compon de tres elements essencials que treballen de manera coordinada:</p> <p>El costat del client (client-side): Fa refer\u00e8ncia a l'entorn on l'usuari final interactua amb l'aplicaci\u00f3. En la gran majoria dels casos, aquest entorn \u00e9s el navegador web (com ara Firefox, Google Chrome o Microsoft</p> <p>Edge) que s'executa a l'ordinador o dispositiu m\u00f2bil de l'usuari </p> <p>El costat del servidor (server-side): Correspon a l'entorn remot que allotja el lloc web i gestiona la seva l\u00f2gica central. Inclou el maquinari (servidors f\u00edsics, m\u00e0quines virtuals), el programari de servidor web (com Apache o NGINX), els llenguatges de programaci\u00f3 del backend i les bases de dades on s'emmagatzema la informaci\u00f3 de manera persistent </p> <p>La xarxa: \u00c9s el teixit connectiu que comunica el client i el servidor. Aquesta comunicaci\u00f3 es realitza mitjan\u00e7ant protocols est\u00e0ndard, principalment el Protocol de Transfer\u00e8ncia d'Hipertext (HTTP), que defineix com s'estructuren i es transmeten els missatges entre ambd\u00f3s extrems </p>"},{"location":"Moduls/DWEC/UT01.html#2-analisi-de-larquitectura-del-costat-del-client-client-side","title":"2. An\u00e0lisi de l'Arquitectura del Costat del Client (Client-Side)","text":""},{"location":"Moduls/DWEC/UT01.html#21-introduccio","title":"2.1. Introducci\u00f3","text":"<p>L'arquitectura del costat del client \u00e9s responsable de tot all\u00f2 que l'usuari veu i amb qu\u00e8 interactua directament al seu navegador. El seu rol estrat\u00e8gic \u00e9s crucial, ja que determina la qualitat de l'experi\u00e8ncia d'usuari (UX), la interactivitat i el dinamisme de la interf\u00edcie. Tot el codi client-side s'executa \u00edntegrament en el dispositiu de l'usuari, la qual cosa permet respostes immediates a les seves accions sense necessitat de comunicar-se constantment amb el servidor .</p>"},{"location":"Moduls/DWEC/UT01.html#22-principals-tecnologies","title":"2.2. Principals Tecnologies","text":"<p>El desenvolupament en el costat del client s'estructura en capes tecnol\u00f2giques ben definides, cadascuna amb una responsabilitat espec\u00edfica per construir una experi\u00e8ncia web completa  :</p>"},{"location":"Moduls/DWEC/UT01.html#221-contingut-html","title":"2.2.1. Contingut (HTML)","text":"<p>L'HTML (HyperText Markup Language) \u00e9s l'esquelet de qualsevol p\u00e0gina web. Defineix l'estructura sem\u00e0ntica del contingut, organitzant la informaci\u00f3 en elements com t\u00edtols, par\u00e0grafs, llistes, imatges i formularis. HTML5 introdueix elements sem\u00e0ntics m\u00e9s espec\u00edfics com <code>&amp;lt;section&amp;gt;</code>, <code>&amp;lt;nav&amp;gt;</code>, <code>&amp;lt;article&amp;gt;</code>, <code>&amp;lt;aside&amp;gt;</code>, <code>&amp;lt;header&amp;gt;</code>, i <code>&amp;lt;footer&amp;gt;</code> que milloren l'accessibilitat i el SEO  .</p>"},{"location":"Moduls/DWEC/UT01.html#222-presentacio-css","title":"2.2.2. Presentaci\u00f3 (CSS)","text":"<p>El CSS (Cascading Style Sheets) s'encarrega de l'aspecte visual i l'estil. Controla la disposici\u00f3 (layout), els colors, la tipografia i les plantilles, separant de manera efectiva la presentaci\u00f3 de l'estructura del contingut . Aquesta separaci\u00f3 entre contingut i presentaci\u00f3 \u00e9s una pr\u00e0ctica fonamental del desenvolupament web modern</p> <p>.</p>"},{"location":"Moduls/DWEC/UT01.html#223-comportament-javascript","title":"2.2.3. Comportament (JavaScript)","text":"<p>JavaScript \u00e9s el llenguatge de programaci\u00f3 principal del client. Aporta interactivitat i dinamisme a les p\u00e0gines, permetent executar l\u00f2gica directament al navegador per respondre a les accions de l'usuari i modificar el contingut de la p\u00e0gina en temps real .</p>"},{"location":"Moduls/DWEC/UT01.html#23-funcionalitats-i-casos-dus","title":"2.3. Funcionalitats i Casos d'\u00das","text":"<p>La programaci\u00f3 del costat del client, principalment a trav\u00e9s de JavaScript, habilita un conjunt de funcionalitats clau per a les aplicacions web modernes  :</p> <p>Reacci\u00f3 a la Interacci\u00f3 de l'Usuari: Gestiona esdeveniments com clics en enlla\u00e7os, enviaments de formularis o moviments del ratol\u00ed</p> <p>Modificaci\u00f3 Din\u00e0mica de Contingut i Estil: Permet alterar l'estructura (DOM) i l'estil de la p\u00e0gina en temps real</p> <p>Preprocessament de Dades: S'utilitza per realitzar validacions en formularis abans que les dades siguin enviades al servidor</p> <p>Comunicaci\u00f3 As\u00edncrona (AJAX): Permet actualitzar parts espec\u00edfiques d'una p\u00e0gina sense interrompre l'experi\u00e8ncia de navegaci\u00f3 de l'usuari</p>"},{"location":"Moduls/DWEC/UT01.html#24-lecosistema-de-desenvolupament-javascript","title":"2.4. L'Ecosistema de Desenvolupament JavaScript","text":"<p>El desenvolupament amb JavaScript es pot abordar des de diferents nivells de complexitat i abstracci\u00f3</p>"},{"location":"Moduls/DWEC/UT01.html#241-javascript-vanilla","title":"2.4.1. JavaScript 'Vanilla'","text":"<p>Es refereix a l'\u00fas de JavaScript pur, sense cap biblioteca o framework extern. \u00c9s una opci\u00f3 ideal per a projectes petits o per afegir interactivitat simple, ja que no introdueix depend\u00e8ncies addicionals i ofereix un control m\u00e0xim sobre el codi .</p>"},{"location":"Moduls/DWEC/UT01.html#242-biblioteques","title":"2.4.2. Biblioteques","text":"<p>S\u00f3n conjunts de codi que faciliten tasques espec\u00edfiques i repetitives, com la manipulaci\u00f3 del DOM o la gesti\u00f3 d'esdeveniments. Exemples populars inclouen:</p> <p>jQuery: Una biblioteca r\u00e0pida i rica en caracter\u00edstiques que simplifica la manipulaci\u00f3 del DOM</p> <p>React.js: Biblioteca desenvolupada per Facebook per construir interf\u00edcies d'usuari interactives i reutilitzables  </p>"},{"location":"Moduls/DWEC/UT01.html#243-frameworks","title":"2.4.3. Frameworks","text":"<p>Ofereixen una estructura completa i un paradigma de programaci\u00f3 definit per construir aplicacions complexes des de zero</p> <p>Angular: Framework robust desenvolupat per Google, ideal per a aplicacions web de gran escala</p> <p>Vue.js: Framework progressiu conegut per la seva simplicitat i flexibilitat</p> <p>Svelte: Es diferencia en compilar el codi a JavaScript optimitzat, eliminant l'\u00fas del Virtual DOM</p>"},{"location":"Moduls/DWEC/UT01.html#25-limitacions-i-restriccions-de-seguretat","title":"2.5. Limitacions i Restriccions de Seguretat","text":"<p>L'execuci\u00f3 de codi al navegador del client comporta limitacions i restriccions de seguretat inherents  :</p>"},{"location":"Moduls/DWEC/UT01.html#251-limitacions-funcionals","title":"2.5.1. Limitacions Funcionals","text":"<p>Per disseny, JavaScript executat en un navegador no pot realitzar les seg\u00fcents accions:</p> <ol> <li> <p>Escriure fitxers directament al servidor</p> </li> <li> <p>Llegir o escriure fitxers o directoris a l'ordinador del client (excepte cookies)</p> </li> <li> <p>Llan\u00e7ar l'execuci\u00f3 d'aplicacions externes</p> </li> <li> <p>Modificar les prefer\u00e8ncies del navegador</p> </li> <li> <p>Accedir a informaci\u00f3 d'una p\u00e0gina web allotjada en un domini diferent</p> </li> </ol>"},{"location":"Moduls/DWEC/UT01.html#252-model-de-seguretat","title":"2.5.2. Model de Seguretat","text":"<p>La seguretat de JavaScript al client es basa en dos pilars fonamentals:</p> <p>\"Espai segur d'execuci\u00f3\" (Sandbox): El codi JavaScript s'executa en un entorn a\u00efllat dins del navegador</p> <p>\"Pol\u00edtica de mateix origen\" (Same-Origin Policy): Impedeix que un script carregat des d'un domini pugui accedir a dades d'un altre domini</p>"},{"location":"Moduls/DWEC/UT01.html#3-analisi-de-larquitectura-del-costat-del-servidor-server-side","title":"3. An\u00e0lisi de l'Arquitectura del Costat del Servidor (Server-Side)","text":""},{"location":"Moduls/DWEC/UT01.html#31-introduccio","title":"3.1. Introducci\u00f3","text":"<p>L'arquitectura del costat del servidor constitueix el nucli central de qualsevol aplicaci\u00f3 web robusta. \u00c9s on resideix la l\u00f2gica de negoci, es gestiona la persist\u00e8ncia de les dades i s'implementen les mesures de seguretat fonamentals. A difer\u00e8ncia del client, el servidor \u00e9s un entorn controlat pel desenvolupador, la qual cosa li permet executar tasques privilegiades i accedir a recursos protegits .</p>"},{"location":"Moduls/DWEC/UT01.html#32-tecnologies-i-components","title":"3.2. Tecnologies i Components","text":"<p>L'entorn del servidor est\u00e0 format per una pila de tecnologies que treballen conjuntament per processar les sol\u00b7licituds dels clients i generar respostes adequades :</p>"},{"location":"Moduls/DWEC/UT01.html#321-programari-de-servidor-web","title":"3.2.1. Programari de Servidor Web","text":"<p>\u00c9s el programari que rep les peticions HTTP dels navegadors i serveix els fitxers corresponents. Exemples destacats inclouen Apache, NGINX i Microsoft IIS.</p>"},{"location":"Moduls/DWEC/UT01.html#322-llenguatges-de-programacio","title":"3.2.2. Llenguatges de Programaci\u00f3","text":"<p>El servidor executa codi escrit en una \u00e0mplia varietat de llenguatges dissenyats per a la web:</p> <p>Llenguatges de scripting: PHP, Perl (CGI), Python o Node.js (JavaScript al servidor)</p> <p>Llenguatges compilats: Java o C++</p> <p>Tecnologies propiet\u00e0ries: ASP.NET i plataformes com ColdFusion</p>"},{"location":"Moduls/DWEC/UT01.html#323-bases-de-dades","title":"3.2.3. Bases de Dades","text":"<p>S\u00f3n sistemes d'emmagatzematge organitzat on l'aplicaci\u00f3 guarda i recupera la informaci\u00f3 de manera permanent.</p> <p>El servidor actua com a intermediari segur entre l'aplicaci\u00f3 i la base de dades.</p>"},{"location":"Moduls/DWEC/UT01.html#33-funcionalitats-i-responsabilitats","title":"3.3. Funcionalitats i Responsabilitats","text":"<p>Les tasques seg\u00fcents s\u00f3n responsabilitat exclusiva o principal de l'arquitectura del servidor :</p> <p>Emmagatzematge Permanent de Dades: El servidor \u00e9s l'\u00fanic component capa\u00e7 d'interactuar de manera segura amb les bases de dades</p> <p>L\u00f2gica de Negoci i Acc\u00e9s a Dades: Processa les sol\u00b7licituds rebudes i aplica les regles de negoci de l'aplicaci\u00f3</p> <p>Autenticaci\u00f3 i Seguretat: La gesti\u00f3 d'usuaris, la validaci\u00f3 de credencials i l'aplicaci\u00f3 de permisos d'acc\u00e9s s\u00f3n tasques cr\u00edtiques que han de residir al servidor</p>"},{"location":"Moduls/DWEC/UT01.html#4-comparativa-client-vs-servidor","title":"4. Comparativa Client vs. Servidor","text":""},{"location":"Moduls/DWEC/UT01.html#41-introduccio","title":"4.1. Introducci\u00f3","text":"<p>Moltes funcionalitats en el desenvolupament web no tenen una \u00fanica ubicaci\u00f3 d'implementaci\u00f3; es poden realitzar tant al client com al servidor. La decisi\u00f3 correcta dep\u00e8n d'un equilibri estrat\u00e8gic entre factors com l'experi\u00e8ncia d'usuari, el rendiment de l'aplicaci\u00f3, la integritat de les dades i la seguretat .</p>"},{"location":"Moduls/DWEC/UT01.html#42-comparativa-de-tasques-comunes","title":"4.2. Comparativa de Tasques Comunes","text":"Tasca Implementaci\u00f3 Client-Side Implementaci\u00f3 Server-Side Validaci\u00f3 de Formularis Recomanable per a UX: Proporciona retroalimentaci\u00f3 instant\u00e0nia sense sobrecarregar el servidor. Tanmateix, \u00e9s vulnerable ja que es pot eludir Obligat\u00f2ria per a Seguretat: \u00c9s l'\u00fanica validaci\u00f3 fiable. El servidor ha de verificar sempre totes les dades rebudes Acc\u00e9s i Emmagatzematge de Dades Acc\u00e9s per a Visualitzaci\u00f3: Ideal per presentar dades rebudes del servidor. No pot emmagatzemar dades de manera permanent Emmagatzematge Centralitzat: Responsabilitat exclusiva del servidor. Gestiona la interacci\u00f3 amb la base de dades Execuci\u00f3 de C\u00e0lculs Apropiat per a C\u00e0lculs d'Interf\u00edcie: \u00datil per a operacions simples que milloren la interactivitat Necessari per a C\u00e0lculs Cr\u00edtics: Essencial per a c\u00e0lculs complexos que requereixen dades segures Manipulaci\u00f3 d'Elements de la P\u00e0gina Tasca Inherent del Client: \u00c9s la seva funci\u00f3 principal. Operacions com eliminar elements o canviar estils No Aplicable: El servidor no t\u00e9 acc\u00e9s directe al DOM un cop la p\u00e0gina ha estat enviada al client"},{"location":"Moduls/DWEC/UT01.html#43-complementarietat-entre-client-i-servidor","title":"4.3. Complementarietat entre Client i Servidor","text":"<p>La conclusi\u00f3 final \u00e9s que les tecnologies client-side i server-side s\u00f3n complement\u00e0ries, no advers\u00e0ries . Una aplicaci\u00f3 web ben dissenyada aprofita els punts forts de cada arquitectura per oferir la millor soluci\u00f3 possible. L'exemple de la validaci\u00f3 de formularis \u00e9s paradigm\u00e0tic: la millor pr\u00e0ctica consisteix a implementar una validaci\u00f3 inicial al client per millorar l'experi\u00e8ncia d'usuari i una validaci\u00f3 final i exhaustiva al servidor per garantir la seguretat i la integritat de les dades.</p>"},{"location":"Moduls/DWEC/UT01.html#5-navegadors-i-la-web","title":"5. Navegadors i la Web","text":""},{"location":"Moduls/DWEC/UT01.html#51-definicio-i-funcionament-dels-navegadors","title":"5.1. Definici\u00f3 i Funcionament dels Navegadors","text":"<p>Un navegador web \u00e9s un programari que permet l'acc\u00e9s a Internet, interpretant la informaci\u00f3 d'arxius i llocs web per a la seva visualitzaci\u00f3. La seva funci\u00f3 b\u00e0sica \u00e9s obtenir documents HTML i interpretar-los .</p>"},{"location":"Moduls/DWEC/UT01.html#511-components-clau","title":"5.1.1. Components Clau","text":"<p>Hipervincles i Navegaci\u00f3: Els documents posseeixen hipervincles que enllacen porcions de text o imatges a altres documents</p> <p>Protocols i URLs: S'utilitza el protocol HTTP per a la comunicaci\u00f3, aix\u00ed com HTTPS (versi\u00f3 xifrada basada en SSL)</p> <p>Est\u00e0ndards: \u00c9s imprescindible comprovar que el desenvolupament funcioni correctament en els principals navegadors i que el codi s'ajusti als est\u00e0ndards HTML i XHTML</p>"},{"location":"Moduls/DWEC/UT01.html#52-principals-navegadors","title":"5.2. Principals Navegadors","text":"<p>Els navegadors moderns suporten JavaScript i els est\u00e0ndards web :</p> Navegador Motor de Renderitzat Caracter\u00edstiques Clau Microsoft Edge Motor de codi obert Substitueix l'antic Internet Explorer; dissenyat per ser lleuger Mozilla Firefox Gecko Lliure i de codi obert. Existeix Firefox Developer Edition per a desenvolupadors Google Chrome Blink (fork de WebKit) Compilat amb base en components de codi obert Safari WebKit Navegador d'Apple (Mac OS, iOS) Opera Blink Disposa de versions per a escriptori, tel\u00e8fon i tauleta <p>Recomanaci\u00f3: Es recomana utilitzar Mozilla Firefox o Google Chrome per la seva quota de mercat i la gran quantitat d'eines per a la depuraci\u00f3 disponibles .</p>"},{"location":"Moduls/DWEC/UT01.html#6-eines-de-desenvolupament-i-millors-practiques","title":"6. Eines de Desenvolupament i Millors Pr\u00e0ctiques","text":""},{"location":"Moduls/DWEC/UT01.html#61-importancia-de-lentorn-de-desenvolupament","title":"6.1. Import\u00e0ncia de l'Entorn de Desenvolupament","text":"<p>La qualitat i l'efici\u00e8ncia en el desenvolupament web no depenen nom\u00e9s de l'arquitectura escollida, sin\u00f3 tamb\u00e9 de l'entorn de treball i de l'adhesi\u00f3 a bones pr\u00e0ctiques. Un entorn de desenvolupament ben configurat, equipat amb les eines adequades, i el seguiment d'est\u00e0ndards de la ind\u00fastria s\u00f3n crucials per accelerar el proc\u00e9s, minimitzar errors i garantir la qualitat del producte final .</p>"},{"location":"Moduls/DWEC/UT01.html#62-seleccio-deines-essencials","title":"6.2. Selecci\u00f3 d'Eines Essencials","text":""},{"location":"Moduls/DWEC/UT01.html#621-editors-de-codi-i-ides","title":"6.2.1. Editors de Codi i IDEs","text":"<p>L'elecci\u00f3 d'eines d'edici\u00f3 de codi abasta un espectre que va des d'editors simples fins a entorns de desenvolupament integrats (IDEs) complets :</p> <p>Editors simples: Ideals per a modificacions r\u00e0pides (Notepad, Gedit)</p> <p>Editors de text avan\u00e7ats: Ofereixen equilibri entre rendiment i funcionalitat amb ressaltat de sintaxi i autocompletat</p> <p>Entorns de Desenvolupament Integrats (IDEs): Solucions completes per a projectes grans i complexos</p> <p>Per a la majoria de projectes de desenvolupament web modern, es recomana expl\u00edcitament l'\u00fas de Visual Studio Code (gratu\u00eft) o WebStorm .</p>"},{"location":"Moduls/DWEC/UT01.html#63-webstorm-leina-de-desenvolupament-del-curs","title":"6.3. WebStorm: L'Eina de Desenvolupament del Curs","text":"<p>Durant el curs utilitzarem WebStorm com a entorn de desenvolupament integrat principal. WebStorm \u00e9s un IDE multiplataforma desenvolupat per JetBrains, especialitzat en JavaScript, TypeScript i altres tecnologies web relacionades </p> <p>.</p> <p>6.3.1. Caracter\u00edstiques Principals de WebStorm Asist\u00e8ncia de Codi Intel\u00b7ligent:</p> <p>Ofereix autocompletat de codi contextual i intelligent</p> <p>Detecci\u00f3 d'errors en temps real</p> <p>Suger\u00e8ncies contextuels que acceleren l'escriptura de codi </p> <p>Depuraci\u00f3 Integrada:</p> <p>Facilita la depuraci\u00f3 d'aplicacions tant del client com del servidor</p> <p>Eines de depuraci\u00f3 avan\u00e7ades directament des de l'IDE</p> <p>Suport per a JavaScript, Node.js i altres tecnologies web </p> <p>Integraci\u00f3 amb Sistemes de Control de Versions:</p> <p>S'integra perfectament amb Git, SVN i altres sistemes</p> <p>Facilita la gesti\u00f3 de canvis i la col\u00b7laboraci\u00f3 en equip </p> <p>Suport per a Frameworks:</p> <p>Suport extens per a frameworks populars com React, Angular, Vue.js</p> <p>Plantilles i eines espec\u00edfiques per a cada framework</p> <p>Assist\u00e8ncia de codi especialitzada per a JSX i altres sintaxis </p> <p>Navegaci\u00f3 i Cerca R\u00e0pides:</p> <p>Funcionalitat \"Search Everywhere\" per buscar accions, arxius i s\u00edmbols</p> <p>Navegaci\u00f3 intel\u00b7ligent per la base de codi</p> <p>Capacitat de saltar r\u00e0pidament a definicions i usos </p>"},{"location":"Moduls/DWEC/UT01.html#632-llicencies-destudiant","title":"6.3.2. Llic\u00e8ncies d'Estudiant","text":"<p>WebStorm ofereix llic\u00e8ncies educatives gratuites per a estudiants i professors. Els estudiants poden utilitzar el All Products Pack de JetBrains (que inclou WebStorm, IntelliJ IDEA Ultimate, i totes les altres eines de JetBrains) de forma gratu\u00efta amb fins educatius </p> <p>.</p> <p>Beneficis de la Llic\u00e8ncia Educativa:</p> <p>Acc\u00e9s complet a totes les funcionalitats de WebStorm</p> <p>Renovaci\u00f3 anual mentre es mantingui l'estatus d'estudiant</p> <p>40% de descompte en llic\u00e8ncies personals despr\u00e9s de la graduaci\u00f3</p> <p>Acc\u00e9s a eines professionals sense cost </p> <p>Com Obtenir la Llic\u00e8ncia:</p> <ol> <li> <p>Dirigir-se a la p\u00e0gina de llic\u00e8ncies educatives de JetBrains</p> </li> <li> <p>Sol\u00b7licitar amb el correu electr\u00f2nic institucional</p> </li> <li> <p>Verificar l'estatus d'estudiant</p> </li> <li> <p>Descarregar i activar WebStorm amb la llic\u00e8ncia educativa </p> </li> </ol>"},{"location":"Moduls/DWEC/UT01.html#633-avantatges-de-webstorm-per-a-laprenentatge","title":"6.3.3. Avantatges de WebStorm per a l'Aprenentatge","text":"<p>Entorn Professional: Permet als estudiants familiaritzar-se amb eines utilitzades en la ind\u00fastria</p> <p>Productivitat Millorada: Les eines intel\u00b7ligents acceleren l'aprenentatge i redueixen errors comuns</p> <p>Suport Multi-llenguatge: Ideal per aprendre HTML, CSS, JavaScript i frameworks moderns</p> <p>Integraci\u00f3 amb Git: Facilita l'aprenentatge del control de versions des de l'IDE </p>"},{"location":"Moduls/DWEC/UT01.html#64-navegadors-i-eines-de-depuracio","title":"6.4. Navegadors i Eines de Depuraci\u00f3","text":"<p>\u00c9s imprescindible provar el codi en m\u00faltiples navegadors per assegurar la compatibilitat. Es recomana centrar-se en Firefox i Google Chrome per la seva quota de mercat i les seves excel\u00b7lents eines per a desenvolupadors </p> <p>.</p>"},{"location":"Moduls/DWEC/UT01.html#641-la-consola-web-f12","title":"6.4.1. La Consola Web (F12)","text":"<p>La majoria de navegadors incorporen eines natives per facilitar el desenvolupament. La Consola Web, accessible prement F12, inclou diverses pestanyes per a la depuraci\u00f3 :</p> <p>Red (Xarxa): Registre de peticions HTTP</p> <p>CSS: An\u00e0lisi i errors CSS</p> <p>JS: An\u00e0lisi i errors JavaScript</p> <p>Seguridad: Advert\u00e8ncies de seguretat</p> <p>Registro: Missatges enviats a window.console</p>"},{"location":"Moduls/DWEC/UT01.html#65-control-de-versions","title":"6.5. Control de Versions","text":"<p>L'\u00fas d'un sistema de control de versions \u00e9s una pr\u00e0ctica est\u00e0ndard i ineludible en el desenvolupament professional. Git \u00e9s l'eina de facto del sector per gestionar l'historial de canvis del codi, facilitar la col\u00b7laboraci\u00f3 en equip i mantenir un registre de les versions del projecte  </p> <p>.</p>"},{"location":"Moduls/DWEC/UT01.html#651-beneficis-del-control-de-versions","title":"6.5.1. Beneficis del Control de Versions","text":"<p>Seguiment de Canvis: Registre complet de modificacions al llarg del temps</p> <p>Col\u00b7laboraci\u00f3: Facilita el treball en equip i la gesti\u00f3 de conflictes Recuperaci\u00f3: Capacitat de recuperar versions anteriors del codi Branching: Permet desenvolupar funcionalitats en paral\u00b7lel </p>"},{"location":"Moduls/DWEC/UT01.html#66-millors-practiques","title":"6.6. Millors Pr\u00e0ctiques","text":""},{"location":"Moduls/DWEC/UT01.html#661-adhesio-als-estandards-web","title":"6.6.1. Adhesi\u00f3 als Est\u00e0ndards Web","text":"<p>\u00c9s fonamental garantir que el codi HTML sigui v\u00e0lid segons les especificacions del W3C. L'\u00fas del validador del W3C (https://validator.w3.org/) ajuda a detectar errors estructurals que poden provocar problemes de compatibilitat entre navegadors .</p>"},{"location":"Moduls/DWEC/UT01.html#662-integracio-de-codi-javascript","title":"6.6.2. Integraci\u00f3 de Codi JavaScript","text":"<p>Encara que \u00e9s possible inserir codi JavaScript directament dins dels fitxers HTML, la pr\u00e0ctica recomanada \u00e9s utilitzar fitxers externs amb extensi\u00f3 .js. Aquest enfocament millora la modularitat, permet la reutilitzaci\u00f3 del codi i augmenta la mantenibilitat del projecte .</p>"},{"location":"Moduls/DWEC/UT01.html#663-disseny-funcional-sense-javascript","title":"6.6.3. Disseny Funcional Sense JavaScript","text":"<p>Un principi de disseny robust, conegut com a \"progressive enhancement\" (millora progressiva), dicta que una p\u00e0gina web hauria de ser completament funcional encara que JavaScript estigui desactivat. JavaScript s'hauria d'utilitzar per millorar l'experi\u00e8ncia d'usuari, per\u00f2 no hauria de ser un requisit absolut per accedir al contingut b\u00e0sic .</p>"},{"location":"Moduls/DWEC/UT01.html#664-separacio-de-contingut-presentacio-i-comportament","title":"6.6.4. Separaci\u00f3 de Contingut, Presentaci\u00f3 i Comportament","text":"<p>Una de les millors pr\u00e0ctiques fonamentals del desenvolupament web modern \u00e9s la separaci\u00f3 clara entre </p> <p>:</p> <p>Contingut (HTML): Estructura i significat sem\u00e0ntic</p> <p>Presentaci\u00f3 (CSS): Aspecte visual i disseny</p> <p>Comportament (JavaScript): Interactivitat i funcionalitat din\u00e0mica</p> <p>Aquesta separaci\u00f3 facilita el manteniment, millora l'accessibilitat i permet una major flexibilitat en el desenvolupament.</p>"},{"location":"Moduls/DWEC/UT01.html#7-tecnologies-modernes-i-tendencies","title":"7. Tecnologies Modernes i Tend\u00e8ncies","text":""},{"location":"Moduls/DWEC/UT01.html#71-progressive-web-apps-pwa","title":"7.1. Progressive Web Apps (PWA)","text":"<p>Les Progressive Web Apps representen una evoluci\u00f3 natural de les aplicacions web tradicionals, combinant les millors caracter\u00edstiques de les webs i les aplicacions m\u00f2bils </p> <p>.</p>"},{"location":"Moduls/DWEC/UT01.html#711-principis-de-les-pwa","title":"7.1.1. Principis de les PWA","text":"<p>Progressives: Funcionen per a tots els usuaris, sense importar l'elecci\u00f3 de navegador</p> <p>Adaptables: S'adapten a qualsevol factor de formulari (escriptori, m\u00f2bil, tauleta)</p> <p>Independents de la connectivitat: Funcionen offline o amb xarxes de mala qualitat</p> <p>Actualitzades: Sempre actualitzades gr\u00e0cies als service workers</p> <p>Segures: Emeses via HTTPS per garantir la seguretat </p>"},{"location":"Moduls/DWEC/UT01.html#72-ecosistema-javascript-modern","title":"7.2. Ecosistema JavaScript Modern","text":"<p>L'ecosistema de JavaScript ha crescut exponencialmente, oferint una \u00e0mplia varietat d'eines i frameworks per a diferents necessitats </p> <p>:</p>"},{"location":"Moduls/DWEC/UT01.html#721-frameworks-frontend-populars","title":"7.2.1. Frameworks Frontend Populars","text":"<p>React.js: Biblioteca per a interfaces d'usuari desenvolupada per Facebook</p> <p>Angular: Framework complet desenvolupat per Google</p> <p>Vue.js: Framework progressiu conegut per la seva simplicitat</p> <p>Svelte: Enfocament innovador que compila a JavaScript optimitzat</p>"},{"location":"Moduls/DWEC/UT01.html#722-ecosistema-backend","title":"7.2.2. Ecosistema Backend","text":"<p>Node.js: Entorn d'execuci\u00f3 JavaScript per al servidor</p> <p>Express.js: Framework minimalista per a aplicacions web</p> <p>Nest.js: Framework escalable inspirat en Angular</p>"},{"location":"Moduls/DWEC/UT01.html#8-conclusions","title":"8. Conclusions","text":""},{"location":"Moduls/DWEC/UT01.html#81-sintesi-dels-conceptes-clau","title":"8.1. S\u00edntesi dels Conceptes Clau","text":"<p>L'arquitectura client-servidor constitueix el fonament del desenvolupament web modern, proporcionant un marc s\u00f2lid per a la creaci\u00f3 d'aplicacions escalables i eficients. La comprensi\u00f3 profunda d'aquesta arquitectura \u00e9s essencial per a qualsevol desenvolupador web, ja que permet prendre decisions informades sobre la distribuci\u00f3 de responsabilitats entre el client i el servidor.</p>"},{"location":"Moduls/DWEC/UT01.html#82-importancia-de-lentorn-de-desenvolupament","title":"8.2. Import\u00e0ncia de l'Entorn de Desenvolupament","text":"<p>L'elecci\u00f3 d'eines adequades, com WebStorm, i l'adopci\u00f3 de millors pr\u00e0ctiques s\u00f3n factors determinants per a l'\u00e8xit en el desenvolupament web. La integraci\u00f3 d'eines professionals des de l'etapa d'aprenentatge prepara els estudiants per a un entorn de treball real i millora significativament la seva productivitat.</p>"},{"location":"Moduls/DWEC/UT01.html#83-perspectiva-de-futur","title":"8.3. Perspectiva de Futur","text":"<p>El desenvolupament web continua evolucionant amb noves tecnologies com les Progressive Web Apps, frameworks moderns de JavaScript i eines de desenvolupament cada vegada m\u00e9s sofisticades. La formaci\u00f3 en aquests conceptes fonamentals proporciona una base s\u00f2lida per adaptar-se a futures innovacions tecnol\u00f2giques.</p>"},{"location":"Moduls/DWEC/UT01.html#84-recomanacions-per-a-laprenentatge","title":"8.4. Recomanacions per a l'Aprenentatge","text":"<ol> <li> <p>Dominar els Fonaments: HTML, CSS i JavaScript vanilla abans de passar a frameworks</p> </li> <li> <p>Practicar amb Eines Professionals: Utilitzar WebStorm per familiaritzar-se amb IDEs industrials</p> </li> <li> <p>Adoptar el Control de Versions: Integrar Git des del principi en tots els projectes</p> </li> <li> <p>Seguir les Millors Pr\u00e0ctiques: Aplicar la separaci\u00f3 de contingut, presentaci\u00f3 i comportament</p> </li> <li> <p>Mantenir-se Actualitzat: Seguir l'evoluci\u00f3 de l'ecosistema JavaScript i les noves tecnologies web</p> </li> </ol> Refer\u00e8ncies <ol> <li>https://www.supermicro.com/es/glossary/client-server-architecture</li> <li>https://ioc.xtec.cat/materials/FP/Recursos/fp_a3d_m06_/web/fp_a3d_m06_htmlindex/WebContent/u4/a1/continguts.html</li> <li>https://cursos.frogamesformacion.com/pages/blog/desarrollo-web-5-buenas-pr\u00e1cticas-para-escribir-c\u00f3digo-html-css-y-javasc ript-de-calidad</li> <li>https://www.youtube.com/watch?v=3fLAhenpvQg</li> <li>https://docencia.xaviersastre.cat/Moduls/AW/03CSS.html</li> <li>https://www.swhosting.com/ca/blog/principals-llenguatges-de-programacio-web</li> <li>https://dev.to/deveg4/explorando-el-ecosistema-de-javascript-un-mapa-completo-de-frameworks-y-librerias-41ek</li> <li>https://es.linkedin.com/pulse/frameworks-de-javascript-top-5-mejores-para-el-desarrollo-web-aw3ec</li> <li>https://thebridge.tech/blog/framework-javascrip/</li> <li>https://www.godaddy.com/resources/es/crearweb/webstorm-jetbrains-ide-que-es</li> <li>https://www.jetbrains.com/es-es/webstorm/features/</li> <li>https://www.tencentcloud.com/techpedia/103411</li> <li>https://sales.jetbrains.com/hc/es/articles/207241195--Ofrecen-licencias-educativas-gratuitas-para-estudiantes-y-profesores</li> <li>https://intconsultoria.com/licencias-de-jetbrains-estudiantes-optimiza-tu-desarrollo-de-software/</li> <li>https://sales.jetbrains.com/hc/es/categories/11557780144658-Licencias-educativas-gratuitas-para-estudiantes-y-profesores</li> <li>https://www.youtube.com/watch?v=1NDeqDTXiV0</li> <li>https://www.getapp.es/software/2048273/webstorm</li> <li>https://frontendleap.com/fundamentales/introduccion-webstorm</li> <li>https://helpdesk.cdmon.com/portal/ca/kb/articles/com-activar-els-clients-de-control-de-versions-svn-git</li> <li>https://ioc.xtec.cat/materials/FP/Recursos/fp_daw_m08_/web/fp_daw_m08_htmlindex/WebContent/u4/a2/continguts.html</li> <li>https://canigo.ctti.gencat.cat/howtos/2018-10-Howto-Gitflow-desenvolupament-SIC/</li> <li>https://www.youtube.com/watch?v=owktvzEgTHI</li> <li>https://openaccess.uoc.edu/bitstream/10609/132928/11/josepmonjoTFM0621mem\u00f2ria.pdf</li> <li>https://ddd.uab.cat/pub/tfg/2020/tfg_243120/InformeFinalV3.pdf</li> <li>https://gooapps.cat/aplicaciones-web-progresivas-pwas-para-empresas/</li> <li>https://www.jetbrains.com/es-es/webstorm/webstorm-2010.html</li> <li>https://www.ujaen.es/servicios/sinformatica/catalogo-de-servicios-tic/software/software-instalable-web/software-de-jetbrains</li> <li>https://pablomonteserin.com/curso/webstorm/</li> <li>https://www.youtube.com/watch?v=PY_HVcJ4h1A</li> <li>https://www.jetbrains.com/es-es/webstorm/download/</li> <li>https://www.bestnetsoft.com/webstorm/</li> <li>https://www.jetbrains.com/es-es/academy/student-pack/</li> <li>https://www.youtube.com/watch?v=cJOO5lEjlFg</li> <li>https://www.jetbrains.com/es-es/webstorm/</li> <li>https://www.reddit.com/r/javascript/comments/1gb65hc/webstorm_is_now_free_for_noncommercial_use/</li> <li>https://www.daemon4.com/empresa/noticias/arquitectura-cliente-servidor/</li> <li>https://www.youtube.com/watch?v=p85dXRGwJBQ</li> <li>https://www.atlassian.com/git/tutorials/what-is-version-control</li> <li>https://www.freecodecamp.org/espanol/news/practica-html-css-y-javascript-en-espanol-creando-7-proyectos/</li> <li>https://es.wikipedia.org/wiki/Cliente-servidor</li> <li>https://xarxanet.org/informatic/recursos/control-de-versions-de-documents-amb-github</li> <li>https://blogs.uoc.edu/informatica/ca/javascript-per-aprendre-programar/</li> <li>https://www.arsys.es/blog/todo-sobre-la-arquitectura-cliente-servidor</li> <li>https://git-scm.com/book/ms/v2/Getting-Started-About-Version-Control</li> <li>https://www.youtube.com/watch?v=BA328RQa08M</li> <li>https://www.graphon.com/es/blog/client-server-applications-in-2025</li> <li>https://ioc.xtec.cat/materials/FP/Recursos/fp_dam_m05_/web/fp_dam_m05_htmlindex/WebContent/u2/a2/continguts.html</li> <li>http://ceipturodeguiera.xtec.cat/formacio/cd2005_informatica/materials/td108/nucli/guia.htm</li> <li>https://www.unimedia.tech/ca/descobriu-el-millor-ide-per-a-c-les-millors-tendencies-en-desenvolupament-web-personalitzat/</li> <li>https://burjcdigital.urjc.es/bitstreams/aaaafb35-6411-450c-a688-16650ae4e3b2/download</li> <li>https://kinsta.com/es/blog/bibliotecas-javascript/</li> <li>https://moltweb.com</li> <li>https://weareshifta.com/estado-del-arte-de-los-frameworks-de-javascript-en-2024/</li> <li>https://itequia.com/ca/6-consells-per-millorar-el-rendiment-daplicacions-a-angular/</li> <li>https://ioc.xtec.cat/materials/FP/Recursos/fp_daw_m09_/web/fp_daw_m09_htmlindex/WebContent/u1/a3/continguts.html</li> <li>https://eduardofierro.pro/blog/el-ecosistema-de-javascript-en-2023</li> <li>https://millora.caib.es</li> <li>https://mosaic.uoc.edu/ac/le/ca/m1/ud3/index.html</li> <li>http://multimedia.uoc.edu/blogs/pw/2013/04/16/webstorm/</li> </ol>"},{"location":"Moduls/DWEC/UT01_old.html","title":"UT01. Arquitectures i eines de desenvolupament","text":""},{"location":"Moduls/DWEC/UT01_old.html#ut01-arquitectures-i-eines-de-desenvolupament","title":"UT01. Arquitectures i eines de desenvolupament","text":""},{"location":"Moduls/DWEC/UT01_old.html#1-navegadors-i-la-web","title":"1. Navegadors i la Web","text":""},{"location":"Moduls/DWEC/UT01_old.html#11-introduccio-a-la-web","title":"1.1. Introducci\u00f3 a la Web","text":"<p>La Web, inventada per Tim Berners-Lee al CERN el 1989, es fonamenta en el concepte d'hipertext. El World Wide Web Consortium (W3C) \u00e9s l'organitzaci\u00f3 responsable de desenvolupar i mantenir els est\u00e0ndards web (incloent HTML, CSS i JavaScript) amb l'objectiu de garantir que la Web sigui oberta i accessible.</p> <p>Quan es parla de Web, es fa refer\u00e8ncia a l'espai d'informaci\u00f3 format per tots els servidors interconnectats.</p>"},{"location":"Moduls/DWEC/UT01_old.html#12-definicio-i-funcionament-dels-navegadors","title":"1.2. Definici\u00f3 i Funcionament dels Navegadors","text":"<p>Un navegador web \u00e9s un programari que permet l'acc\u00e9s a Internet, interpretant la informaci\u00f3 d'arxius i llocs web per a la seva visualitzaci\u00f3. La seva funci\u00f3 b\u00e0sica \u00e9s obtenir documents HTML i interpretar-los.</p> <ul> <li>Hipervincles i Navegaci\u00f3: Els documents (p\u00e0gines web) posseeixen hipervincles que enllacen porcions de text o imatges a altres documents. El seguiment d'aquests enlla\u00e7os es coneix com a navegaci\u00f3, d'on prov\u00e9 el nom navegador.</li> <li>Protocols i URLs: Per accedir als recursos, s'utilitza un identificador \u00fanic anomenat URL (Uniform Resource Locator). La comunicaci\u00f3 entre el servidor web i el navegador es realitza principalment mitjan\u00e7ant el protocol HTTP, tot i que tamb\u00e9 se suporten FTP i HTTPS (una versi\u00f3 xifrada d'HTTP basada en SSL).</li> <li>Est\u00e0ndards: \u00c9s imprescindible comprovar que qualsevol desenvolupament web funcioni correctament en els principals navegadors, i que el codi s'ajusti als est\u00e0ndards HTML i XHTML. Es pot validar el compliment dels est\u00e0ndards W3C mitjan\u00e7ant l'eina <code>https://validator.w3.org/</code>.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#13-principals-navegadors-2020","title":"1.3. Principals Navegadors (2020)","text":"<p>Els navegadors moderns suporten JavaScript i els est\u00e0ndards web.</p> Navegador Motor de Renderitzat / Base Caracter\u00edstiques clau Microsoft Edge Motor de renderitzat de codi obert Substitueix l'antic Internet Explorer; dissenyat per ser lleuger. Mozilla Firefox Gecko Lliure i de codi obert. Existeix la versi\u00f3 Firefox Developer Edition per a desenvolupadors. Google Chrome Blink (fork de WebKit) Compilat amb base en components de codi obert. Safari (Sense especificar) Navegador de codi tancat d'Apple (Mac OS, iOS, Windows\u2014sense suport des del 2012). Opera Blink Creat per Opera Software. Disposa de versions per a escriptori, tel\u00e8fon i tauleta. <p>Recomanaci\u00f3: Es recomana utilitzar Mozilla Firefox o Google Chrome per la seva quota de mercat i la gran quantitat d'eines per a la depuraci\u00f3 disponibles.</p>"},{"location":"Moduls/DWEC/UT01_old.html#2-arquitectura-i-arees-del-desenvolupament-web","title":"2. Arquitectura i \u00c0rees del Desenvolupament Web","text":""},{"location":"Moduls/DWEC/UT01_old.html#21-arquitectura-client-servidor","title":"2.1. Arquitectura Client-Servidor","text":"<p>El desenvolupament web es basa en el model client-servidor:</p> <ul> <li>Costat del Servidor (Server-side): Inclou el hardware i software (servidors web com Apache, IIS, NGINX) i les tecnologies de programaci\u00f3 incrustades (com CGI, PERL, PHP, Node.js).</li> <li>Costat del Client (Client-side): Fa refer\u00e8ncia als navegadors web (clients web) i les tecnologies que suporten, com HTML, CSS i llenguatges com JavaScript, utilitzats per a la presentaci\u00f3 i les caracter\u00edstiques interactives.</li> </ul> <p>La tria entre tecnologia client-side i server-side dep\u00e8n de la tasca; s\u00f3n complement\u00e0ries. Per exemple, la validaci\u00f3 de formularis \u00e9s m\u00e9s efectiva al costat del client, mentre que l'emmagatzematge de dades es gestiona millor al costat del servidor.</p>"},{"location":"Moduls/DWEC/UT01_old.html#22-arees-del-disseny-i-desenvolupament-web","title":"2.2. \u00c0rees del Disseny i Desenvolupament Web","text":"<p>El desenvolupament web abasta diverses facetes:</p> <ol> <li>Contingut: Forma i organitzaci\u00f3 del contingut del lloc, estructurat amb tecnologies de marcat com HTML.</li> <li>Visual (Disseny): Plantilla, aparen\u00e7a i elements gr\u00e0fics, utilitzant tecnologies com CSS.</li> <li>Tecnologia: Tipus d'elements interactius, sovint constru\u00efts mitjan\u00e7ant t\u00e8cniques de programaci\u00f3.</li> <li>Distribuci\u00f3: Velocitat i fiabilitat amb qu\u00e8 el lloc web es distribueix (hardware/software i arquitectura de xarxa).</li> <li>Prop\u00f2sit: La ra\u00f3 per la qual existeix el lloc web (sovint de tipus econ\u00f2mic).</li> </ol>"},{"location":"Moduls/DWEC/UT01_old.html#3-llenguatges-de-scripting-javascript","title":"3. Llenguatges de Scripting (JavaScript)","text":"<p>El focus del m\u00f2dul se centra en els llenguatges de scripting que aporten dinamisme a les p\u00e0gines, principalment JavaScript.</p>"},{"location":"Moduls/DWEC/UT01_old.html#31-rol-i-caracteristiques-de-javascript","title":"3.1. Rol i Caracter\u00edstiques de JavaScript","text":"<p>JavaScript se situa a la capa superior del desenvolupament web en el costat del client, gestionant el Comportament de la p\u00e0gina. Les 4 capes s\u00f3n: Comportament (JavaScript), Presentaci\u00f3 (CSS), Estructura (DOM / HTML), i Contingut.</p> <p>Usos t\u00edpics de JavaScript: *   Fer que la p\u00e0gina web respongui a la interacci\u00f3 de l'usuari. *   Pre-processar dades al client abans d'enviar-les al servidor. *   Modificar estils i contingut din\u00e0micament. *   Utilitzar AJAX per sol\u00b7licitar dades XML al servidor de forma as\u00edncrona (background) i transparent.</p>"},{"location":"Moduls/DWEC/UT01_old.html#32-limitacions-i-seguretat","title":"3.2. Limitacions i Seguretat","text":"<p>JavaScript \u00e9s interpretat pel client, per\u00f2 presenta limitacions que reforcen la seguretat:</p> <ul> <li>No tots els clients executen JavaScript; per tant, la p\u00e0gina hauria de ser funcional fins i tot amb JavaScript desactivat.</li> <li>No pot escriure fitxers directament al servidor (aquesta tasca recau en el llenguatge de servidor).</li> <li>S'executa en un \"espai segur d'execuci\u00f3\" i est\u00e0 restringit per la pol\u00edtica de \"mateix origen\" (same-origin), impedint l'acc\u00e9s a informaci\u00f3 d'altres webs (usuaris, contrasenyes, cookies).</li> <li>No pot modificar les prefer\u00e8ncies del navegador, llan\u00e7ar aplicacions en l'ordinador del client, ni llegir o escriure fitxers locals (amb l'excepci\u00f3 de les cookies).</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#33-integracio-de-codi-javascript-amb-html","title":"3.3. Integraci\u00f3 de Codi JavaScript amb HTML","text":"<p>El codi JavaScript es pot inserir utilitzant l'etiqueta <code>&lt;script&gt;&lt;/script&gt;</code>.</p> <ul> <li>Ficher Extern: La forma m\u00e9s recomanable \u00e9s incrustar un fitxer extern (<code>.js</code>) mitjan\u00e7ant l'atribut <code>src</code>. Aix\u00f2 permet la separaci\u00f3 de codi i estructura, la centralitzaci\u00f3 de codi per a depuraci\u00f3 i millora la rapidesa de c\u00e0rrega (gr\u00e0cies a la mem\u00f2ria cau del navegador).<ul> <li>Exemple: <code>&lt;script type=\"text/javascript\" src=\"tucodigo.js\"&gt;&lt;/script&gt;</code>.</li> </ul> </li> <li>XHTML: En XHTML, s'utilitzen les seccions CDATA per encapsular les instruccions de JavaScript i evitar conflictes amb car\u00e0cters com <code>&lt;</code> i <code>&amp;</code>.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#4-entorn-de-desenvolupament-i-eines","title":"4. Entorn de Desenvolupament i Eines","text":""},{"location":"Moduls/DWEC/UT01_old.html#41-eines-i-entorns-recomanats","title":"4.1. Eines i Entorns Recomanats","text":"<p>Es recomana l'\u00fas de Visual Studio Code (VSC) com a entorn de desenvolupament per la seva pot\u00e8ncia i el seu gran ecosistema de plugins. Els editors de codi han de facilitar la programaci\u00f3 amb caracter\u00edstiques com sintaxi amb codificaci\u00f3 de colors i verificaci\u00f3 de sintaxi.</p> <p>Control de Versions: Durant el curs s'utilitzaran repositoris Git per al lliurament de pr\u00e0ctiques i el control de versions.</p>"},{"location":"Moduls/DWEC/UT01_old.html#42-la-consola-web-f12","title":"4.2. La Consola Web (F12)","text":"<p>La majoria de navegadors incorporen eines natives per facilitar el desenvolupament. La m\u00e9s destacada \u00e9s la Consola Web, accessible prement la tecla F12 a Firefox i Google Chrome.</p> <p>La consola web inclou diverses pestanyes per a la depuraci\u00f3: *   Red (Xarxa): Registre de peticions HTTP. *   CSS: An\u00e0lisi i errors CSS (mostrat en color blau). *   JS: An\u00e0lisi i errors Javascript (mostrat en color groc). *   Seguridad (Seguretat): Advert\u00e8ncies o fallades de seguretat (mostrat en color vermell). *   Registro (Registre): Missatges enviats a l'objecte <code>window.console</code> (mostrat en color gris).</p>"},{"location":"Moduls/DWEC/UT01_old.html#5-evolucio-i-tipus-daplicacions-web","title":"5. Evoluci\u00f3 i Tipus d'Aplicacions Web","text":"<p>El desenvolupament d'aplicacions web ha evolucionat significativament:</p> <ol> <li>P\u00e0gines Web Est\u00e0tiques: Simples p\u00e0gines HTML amb hipervincles.</li> <li>P\u00e0gines Web Generades pel Servidor: HTML generat al servidor (PHP, Node, Java).</li> <li>Introducci\u00f3 d'AJAX: Permet carregar o pujar dades al servidor de manera as\u00edncrona, millorant la interactivitat sense recarregar la p\u00e0gina.</li> <li>Single Page Application (SPA): Aplicacions d'una sola p\u00e0gina que es comuniquen amb el servidor usant JSON o XML, oferint una experi\u00e8ncia d'App.</li> </ol>"},{"location":"Moduls/DWEC/UT01_old.html#51-tecnologies-de-frontend-javascript","title":"5.1. Tecnologies de Frontend (JavaScript)","text":"<p>Es pot programar utilitzant:</p> <ul> <li>JavaScript 'Vanilla': JavaScript pur, sense biblioteques.</li> <li>Biblioteques: Faciliten tasques complexes sense canviar el paradigma de programaci\u00f3 (e.g., JQuery, React, Vue.js).</li> <li>Frameworks: Canvien totalment el paradigma de programaci\u00f3, facilitant la creaci\u00f3 r\u00e0pida de p\u00e0gines (e.g., Angular, Vue.js).</li> <li>Frameworks Full Stack / MetaFrameworks: S'encarreguen tant del backend com del frontend, utilitzant t\u00e8cniques com el Server Side Rendering (SSR) o l'Hydration (que permet que les aplicacions generades al servidor continu\u00efn sent din\u00e0miques al client).</li> </ul> <p>Altres tipus d'aplicacions web inclouen les Progressive Web Apps (PWA), que combinen les millors caracter\u00edstiques de les webs i les aplicacions m\u00f2bils, i les Apps H\u00edbrides.</p>"},{"location":"Moduls/DWEC/UT01_old.html#52-produccio-i-optimitzacio","title":"5.2. Producci\u00f3 i Optimitzaci\u00f3","text":"<p>Per a la posada en producci\u00f3, es necessita un servidor web que serveixi els fitxers HTML, CSS i Javascript de forma est\u00e0tica. Sovint s'utilitzen eines de construcci\u00f3 (JavaScript Build Tools), com Vite o Webpack, que compilen, minifican i optimitzen el codi per millorar la velocitat de c\u00e0rrega i evitar incompatibilitats entre navegadors.</p>"},{"location":"Moduls/DWEC/UT01_old.html#informe-tecnic-analisi-comparativa-darquitectures-web-client-servidor","title":"Informe T\u00e8cnic: An\u00e0lisi Comparativa d'Arquitectures Web Client-Servidor","text":""},{"location":"Moduls/DWEC/UT01_old.html#10-introduccio-a-les-arquitectures-de-desenvolupament-web","title":"1.0 Introducci\u00f3 a les Arquitectures de Desenvolupament Web","text":""},{"location":"Moduls/DWEC/UT01_old.html#11-analisi-del-context-estrategic","title":"1.1. An\u00e0lisi del Context Estrat\u00e8gic","text":"<p>Comprendre l'arquitectura client-servidor \u00e9s fonamental per a qualsevol iniciativa de desenvolupament a la web moderna. Aquest model constitueix la base sobre la qual s'erigeixen pr\u00e0cticament totes les aplicacions i serveis digitals. Aquest informe t\u00e8cnic t\u00e9 com a objectiu principal analitzar i comparar les tecnologies, responsabilitats i millors pr\u00e0ctiques inherents als entorns del costat del client (client-side) i del costat del servidor (server-side). La finalitat \u00e9s proporcionar una guia clara i estrat\u00e8gica per a la presa de decisions t\u00e8cniques en projectes de desenvolupament web, assegurant que les solucions adoptades siguin robustes, segures i eficients.</p>"},{"location":"Moduls/DWEC/UT01_old.html#12-definicio-del-model-client-servidor","title":"1.2. Definici\u00f3 del Model Client-Servidor","text":"<p>El model client-servidor \u00e9s l'estructura fonamental que permet la comunicaci\u00f3 a la World Wide Web. Es compon de tres elements essencials que treballen de manera coordinada:</p> <ul> <li>El costat del client (client-side): Fa refer\u00e8ncia a l'entorn on l'usuari final interactua amb l'aplicaci\u00f3. En la gran majoria dels casos, aquest entorn \u00e9s el navegador web (com ara Firefox, Google Chrome o Microsoft Edge) que s'executa a l'ordinador o dispositiu m\u00f2bil de l'usuari.</li> <li>El costat del servidor (server-side): Correspon a l'entorn remot que allotja el lloc web i gestiona la seva l\u00f2gica central. Inclou el maquinari (servidors f\u00edsics, m\u00e0quines virtuals), el programari de servidor web (com Apache o NGINX), els llenguatges de programaci\u00f3 del backend i les bases de dades on s'emmagatzema la informaci\u00f3 de manera persistent.</li> <li>La xarxa: \u00c9s el teixit connectiu que comunica el client i el servidor. Aquesta comunicaci\u00f3 es realitza mitjan\u00e7ant protocols est\u00e0ndard, principalment el Protocol de Transfer\u00e8ncia d'Hipertext (HTTP), que defineix com s'estructuren i es transmeten els missatges entre ambd\u00f3s extrems.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#13-transicio","title":"1.3. Transici\u00f3","text":"<p>Amb aquest marc conceptual establert, l'informe procedir\u00e0 a una an\u00e0lisi detallada de cada component, comen\u00e7ant per l'arquitectura i les tecnologies que defineixen el costat del client.</p>"},{"location":"Moduls/DWEC/UT01_old.html#20-analisi-de-larquitectura-del-costat-del-client-client-side","title":"2.0 An\u00e0lisi de l'Arquitectura del Costat del Client (Client-Side)","text":""},{"location":"Moduls/DWEC/UT01_old.html#21-visio-general-estrategica","title":"2.1. Visi\u00f3 General Estrat\u00e8gica","text":"<p>L'arquitectura del costat del client \u00e9s responsable de tot all\u00f2 que l'usuari veu i amb qu\u00e8 interactua directament al seu navegador. El seu rol estrat\u00e8gic \u00e9s crucial, ja que determina la qualitat de l'experi\u00e8ncia d'usuari (UX), la interactivitat i el dinamisme de la interf\u00edcie. Tot el codi client-side s'executa \u00edntegrament en el dispositiu de l'usuari, la qual cosa permet respostes immediates a les seves accions sense necessitat de comunicar-se constantment amb el servidor.</p>"},{"location":"Moduls/DWEC/UT01_old.html#22-analisi-de-les-tecnologies-fonamentals","title":"2.2. An\u00e0lisi de les Tecnologies Fonamentals","text":"<p>El desenvolupament en el costat del client s'estructura en capes tecnol\u00f2giques ben definides, cadascuna amb una responsabilitat espec\u00edfica per construir una experi\u00e8ncia web completa:</p> <ul> <li>Contingut (HTML): L'HTML (HyperText Markup Language) \u00e9s l'esquelet de qualsevol p\u00e0gina web. Defineix l'estructura sem\u00e0ntica del contingut, organitzant la informaci\u00f3 en elements com t\u00edtols, par\u00e0grafs, llistes, imatges i formularis.</li> <li>Presentaci\u00f3 (CSS): El CSS (Cascading Style Sheets) s'encarrega de l'aspecte visual i l'estil. Controla la disposici\u00f3 (layout), els colors, la tipografia i les plantilles, separant de manera efectiva la presentaci\u00f3 de l'estructura del contingut.</li> <li>Comportament (JavaScript): JavaScript \u00e9s el llenguatge de programaci\u00f3 principal del client. Aporta interactivitat i dinamisme a les p\u00e0gines, permetent executar l\u00f2gica directament al navegador per respondre a les accions de l'usuari i modificar el contingut de la p\u00e0gina en temps real.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#23-avaluacio-de-funcionalitats-i-casos-dus","title":"2.3. Avaluaci\u00f3 de Funcionalitats i Casos d'\u00das","text":"<p>La programaci\u00f3 del costat del client, principalment a trav\u00e9s de JavaScript, habilita un conjunt de funcionalitats clau per a les aplicacions web modernes:</p> <ul> <li>Reacci\u00f3 a la Interacci\u00f3 de l'Usuari: Gestiona esdeveniments com clics en enlla\u00e7os, enviaments de formularis o moviments del ratol\u00ed, permetent que la p\u00e0gina respongui de manera immediata a les accions de l'usuari.</li> <li>Modificaci\u00f3 Din\u00e0mica de Contingut i Estil: Permet alterar l'estructura (DOM - Document Object Model) i l'estil de la p\u00e0gina en temps real, sense necessitat de recarregar-la. Aix\u00f2 \u00e9s fonamental per a funcionalitats com mostrar o amagar seccions, actualitzar dades o aplicar efectes visuals.</li> <li>Preprocessament de Dades: S'utilitza per realitzar validacions en formularis abans que les dades siguin enviades al servidor. Aquesta pr\u00e0ctica millora significativament l'experi\u00e8ncia de l'usuari, ja que proporciona una retroalimentaci\u00f3 instant\u00e0nia sobre possibles errors.</li> <li>Comunicaci\u00f3 As\u00edncrona (AJAX): Mitjan\u00e7ant tecnologies com AJAX (Asynchronous JavaScript and XML), el client pot sol\u00b7licitar o enviar dades al servidor en segon pla. Aix\u00f2 permet actualitzar parts espec\u00edfiques d'una p\u00e0gina (com un feed de not\u00edcies o un mapa) sense interrompre l'experi\u00e8ncia de navegaci\u00f3 de l'usuari.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#24-analisi-de-lecosistema-de-desenvolupament","title":"2.4. An\u00e0lisi de l'Ecosistema de Desenvolupament","text":"<p>El desenvolupament amb JavaScript es pot abordar des de diferents nivells de complexitat i abstracci\u00f3, cadascun amb els seus propis avantatges estrat\u00e8gics:</p> <ul> <li>JavaScript 'Vanilla': Es refereix a l'\u00fas de JavaScript pur, sense cap biblioteca o framework extern. \u00c9s una opci\u00f3 ideal per a projectes petits o per afegir interactivitat simple, ja que no introdueix depend\u00e8ncies addicionals i ofereix un control m\u00e0xim sobre el codi.</li> <li>Biblioteques (p. ex., JQuery, React): S\u00f3n conjunts de codi que faciliten tasques espec\u00edfiques i repetitives, com la manipulaci\u00f3 del DOM o la gesti\u00f3 d'esdeveniments. S'integren en projectes existents per resoldre problemes concrets, oferint eines per augmentar la productivitat sense imposar una estructura completa a l'aplicaci\u00f3.</li> <li>Frameworks (p. ex., Angular, Vue.js): Ofereixen una estructura completa i un paradigma de programaci\u00f3 definit per construir aplicacions complexes des de zero. Canvien completament la manera de programar, facilitant un desenvolupament r\u00e0pid i organitzat, per\u00f2 creen una depend\u00e8ncia tecnol\u00f2gica m\u00e9s forta. Eines com React i Vue.js difuminen aquesta distinci\u00f3, ja que, tot i ser t\u00e8cnicament biblioteques, sovint s'utilitzen com a base fonamental d'aplicacions complexes, adoptant un rol similar al d'un framework.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#25-examen-de-limitacions-i-restriccions-de-seguretat","title":"2.5. Examen de Limitacions i Restriccions de Seguretat","text":"<p>L'execuci\u00f3 de codi al navegador del client comporta limitacions i restriccions de seguretat inherents. Aquestes limitacions funcionals s\u00f3n una conseq\u00fc\u00e8ncia directa del model de seguretat dissenyat per protegir l'usuari i la integritat del seu sistema operatiu.</p>"},{"location":"Moduls/DWEC/UT01_old.html#limitacions-funcionals","title":"Limitacions Funcionals","text":"<p>Per disseny, JavaScript executat en un navegador no pot realitzar les seg\u00fcents accions:</p> <ol> <li>Escriure fitxers directament al servidor.</li> <li>Llegir o escriure fitxers o directoris a l'ordinador del client (a excepci\u00f3 de les cookies).</li> <li>Llan\u00e7ar l'execuci\u00f3 d'aplicacions externes a l'ordinador del client.</li> <li>Modificar les prefer\u00e8ncies del navegador o accedir a elements de la interf\u00edcie del sistema operatiu.</li> <li>Accedir a informaci\u00f3 d'una p\u00e0gina web allotjada en un domini diferent.</li> </ol>"},{"location":"Moduls/DWEC/UT01_old.html#model-de-seguretat","title":"Model de Seguretat","text":"<p>La seguretat de JavaScript al client es basa en dos pilars fonamentals:</p> <ul> <li>\"Espai segur d'execuci\u00f3\" (Sandbox): El codi JavaScript s'executa en un entorn a\u00efllat (sandbox) dins del navegador. Aquest entorn restringeix el seu acc\u00e9s al sistema operatiu i als recursos del sistema, limitant les seves accions a tasques relacionades exclusivament amb la p\u00e0gina web.</li> <li>\"Pol\u00edtica de mateix origen\" (Same-Origin Policy): Aquesta pol\u00edtica de seguretat impedeix que un script carregat des d'un domini pugui accedir a dades (com cookies o informaci\u00f3 d'usuari) d'un altre domini. Aix\u00f2 \u00e9s crucial per prevenir atacs on un lloc malici\u00f3s intenti robar informaci\u00f3 d'un altre lloc obert al navegador.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#26-transicio","title":"2.6. Transici\u00f3","text":"<p>Aquestes limitacions intr\u00ednseques del costat del client, especialment la incapacitat d'emmagatzemar dades de forma permanent i segura, posen de manifest la necessitat d'una contrapartida al servidor per a gestionar la l\u00f2gica de negoci cr\u00edtica i la persist\u00e8ncia de la informaci\u00f3.</p>"},{"location":"Moduls/DWEC/UT01_old.html#30-analisi-de-larquitectura-del-costat-del-servidor-server-side","title":"3.0 An\u00e0lisi de l'Arquitectura del Costat del Servidor (Server-Side)","text":""},{"location":"Moduls/DWEC/UT01_old.html#31-perspectiva-estrategica-del-servidor","title":"3.1. Perspectiva Estrat\u00e8gica del Servidor","text":"<p>L'arquitectura del costat del servidor constitueix el nucli central de qualsevol aplicaci\u00f3 web robusta. \u00c9s on resideix la l\u00f2gica de negoci, es gestiona la persist\u00e8ncia de les dades i s'implementen les mesures de seguretat fonamentals. A difer\u00e8ncia del client, el servidor \u00e9s un entorn controlat pel desenvolupador, la qual cosa li permet executar tasques privilegiades i accedir a recursos protegits.</p>"},{"location":"Moduls/DWEC/UT01_old.html#32-analisi-de-les-tecnologies-i-components","title":"3.2. An\u00e0lisi de les Tecnologies i Components","text":"<p>L'entorn del servidor est\u00e0 format per una pila de tecnologies que treballen conjuntament per processar les sol\u00b7licituds dels clients i generar respostes adequades:</p> <ul> <li>Programari de Servidor Web: \u00c9s el programari que rep les peticions HTTP dels navegadors i serveix els fitxers corresponents. Exemples destacats inclouen Apache, NGINX i Microsoft IIS.</li> <li>Llenguatges de Programaci\u00f3: El servidor executa codi escrit en una \u00e0mplia varietat de llenguatges dissenyats per a la web. Aquests inclouen llenguatges de scripting com PHP, Perl (CGI), Python o Node.js (JavaScript al servidor), o llenguatges compilats com Java o C++. Tamb\u00e9 s'inclouen tecnologies propiet\u00e0ries com ASP.NET i plataformes com ColdFusion.</li> <li>Bases de Dades: S\u00f3n sistemes d'emmagatzematge organitzat on l'aplicaci\u00f3 guarda i recupera la informaci\u00f3 de manera permanent. El servidor actua com a intermediari segur entre l'aplicaci\u00f3 i la base de dades.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#33-avaluacio-de-funcionalitats-i-responsabilitats-clau","title":"3.3. Avaluaci\u00f3 de Funcionalitats i Responsabilitats Clau","text":"<p>Les tasques seg\u00fcents s\u00f3n responsabilitat exclusiva o principal de l'arquitectura del servidor:</p> <ul> <li>Emmagatzematge Permanent de Dades: El servidor \u00e9s l'\u00fanic component capa\u00e7 d'interactuar de manera segura amb les bases de dades per guardar, modificar i consultar informaci\u00f3 (com perfils d'usuari, productes o comandes).</li> <li>L\u00f2gica de Negoci i Acc\u00e9s a Dades: Processa les sol\u00b7licituds rebudes, aplica les regles de negoci de l'aplicaci\u00f3 i determina quines dades s'han de consultar o modificar. Garanteix que les operacions es realitzin de manera consistent i segura.</li> <li>Autenticaci\u00f3 i Seguretat: La gesti\u00f3 d'usuaris, la validaci\u00f3 de credencials i l'aplicaci\u00f3 de permisos d'acc\u00e9s s\u00f3n tasques cr\u00edtiques que han de residir al servidor. La validaci\u00f3 final de qualsevol dada provinent del client es realitza aqu\u00ed per prevenir vulnerabilitats.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#34-transicio","title":"3.4. Transici\u00f3","text":"<p>Un cop definits els rols i capacitats de cada arquitectura, \u00e9s essencial comparar directament com certes tasques comunes es poden abordar des de cada costat per prendre decisions d'implementaci\u00f3 informades.</p>"},{"location":"Moduls/DWEC/UT01_old.html#40-analisi-comparativa-dimplementacio-client-vs-servidor","title":"4.0 An\u00e0lisi Comparativa d'Implementaci\u00f3: Client vs. Servidor","text":""},{"location":"Moduls/DWEC/UT01_old.html#41-introduccio-a-la-presa-de-decisions-tecniques","title":"4.1. Introducci\u00f3 a la Presa de Decisions T\u00e8cniques","text":"<p>Moltes funcionalitats en el desenvolupament web no tenen una \u00fanica ubicaci\u00f3 d'implementaci\u00f3; es poden realitzar tant al client com al servidor. La decisi\u00f3 correcta dep\u00e8n d'un equilibri estrat\u00e8gic entre factors com l'experi\u00e8ncia d'usuari, el rendiment de l'aplicaci\u00f3, la integritat de les dades i la seguretat. Escollir el lloc adequat per a cada tasca \u00e9s clau per construir una aplicaci\u00f3 eficient i robusta.</p>"},{"location":"Moduls/DWEC/UT01_old.html#42-matriu-comparativa-de-tasques-comunes","title":"4.2. Matriu Comparativa de Tasques Comunes","text":"Tasca Implementaci\u00f3 Client-Side (An\u00e0lisi) Implementaci\u00f3 Server-Side (An\u00e0lisi) Validaci\u00f3 de Formularis Recomanable per a UX: Proporciona retroalimentaci\u00f3 instant\u00e0nia a l'usuari sense sobrecarregar el servidor. Millora la usabilitat i redueix la frustraci\u00f3. Tanmateix, \u00e9s vulnerable, ja que es pot eludir. Obligat\u00f2ria per a Seguretat: \u00c9s l'\u00fanica validaci\u00f3 fiable. El servidor ha de verificar sempre totes les dades rebudes per garantir la integritat i prevenir atacs maliciosos, ja que la validaci\u00f3 del client pot ser desactivada o manipulada. Acc\u00e9s i Emmagatzematge de Dades Acc\u00e9s per a Visualitzaci\u00f3: Ideal per presentar dades rebudes del servidor (p. ex., en una presentaci\u00f3 de diapositives) i manipular-les a la interf\u00edcie. No pot emmagatzemar dades de manera permanent i segura. Emmagatzematge Centralitzat:Responsabilitat exclusiva del servidor. Gestiona la interacci\u00f3 amb la base de dades per garantir la persist\u00e8ncia, la seguretat i la integritat de la informaci\u00f3. Execuci\u00f3 de C\u00e0lculs Apropiat per a C\u00e0lculs d'Interf\u00edcie: \u00datil per a operacions simples que milloren la interactivitat (p. ex., calcular el total d'un carret de la compra en temps real). L'execuci\u00f3 \u00e9s r\u00e0pida, ja que utilitza els recursos del client. Necessari per a C\u00e0lculs Cr\u00edtics: Essencial per a c\u00e0lculs complexos, que requereixen dades segures o que formen part de la l\u00f2gica de negoci principal. L'execuci\u00f3 al servidor garanteix la precisi\u00f3 i la seguretat del resultat. Manipulaci\u00f3 d'Elements de la P\u00e0gina Tasca Inherent del Client: \u00c9s la seva funci\u00f3 principal. Operacions com eliminar un par\u00e0graf, afegir un element a una llista o canviar un estil es realitzen manipulant el DOM directament al navegador, proporcionant una resposta immediata. No Aplicable: El servidor no t\u00e9 acc\u00e9s directe al DOM de la p\u00e0gina un cop ha estat enviada al client. La seva funci\u00f3 \u00e9s generar l'HTML inicial o proporcionar dades perqu\u00e8 el client realitzi les manipulacions."},{"location":"Moduls/DWEC/UT01_old.html#43-analisi-de-la-complementarietat","title":"4.3. An\u00e0lisi de la Complementarietat","text":"<p>La conclusi\u00f3 clau d'aquesta an\u00e0lisi \u00e9s que les tecnologies client-side i server-side s\u00f3n complement\u00e0ries, no advers\u00e0ries. Una aplicaci\u00f3 web ben dissenyada aprofita els punts forts de cada arquitectura per oferir la millor soluci\u00f3 possible. L'exemple de la validaci\u00f3 de formularis \u00e9s paradigm\u00e0tic: la millor pr\u00e0ctica consisteix a implementar una validaci\u00f3 inicial al client per millorar l'experi\u00e8ncia d'usuari i una validaci\u00f3 final i exhaustiva al servidor per garantir la seguretat i la integritat de les dades. Aquesta col\u00b7laboraci\u00f3 \u00e9s el pilar del desenvolupament web modern.</p>"},{"location":"Moduls/DWEC/UT01_old.html#44-transicio","title":"4.4. Transici\u00f3","text":"<p>Un cop enteses les arquitectures i la seva interrelaci\u00f3, el pas seg\u00fcent \u00e9s examinar les eines i les pr\u00e0ctiques recomanades per implementar aquestes solucions de manera efectiva i professional.</p>"},{"location":"Moduls/DWEC/UT01_old.html#50-eines-de-desenvolupament-i-millors-practiques","title":"5.0 Eines de Desenvolupament i Millors Pr\u00e0ctiques","text":""},{"location":"Moduls/DWEC/UT01_old.html#51-importancia-de-lentorn-de-desenvolupament","title":"5.1. Import\u00e0ncia de l'Entorn de Desenvolupament","text":"<p>La qualitat i l'efici\u00e8ncia en el desenvolupament web no depenen nom\u00e9s de l'arquitectura escollida, sin\u00f3 tamb\u00e9 de l'entorn de treball i de l'adhesi\u00f3 a bones pr\u00e0ctiques. Un entorn de desenvolupament ben configurat, equipat amb les eines adequades, i el seguiment d'est\u00e0ndards de la ind\u00fastria s\u00f3n crucials per accelerar el proc\u00e9s, minimitzar errors i garantir la qualitat del producte final.</p>"},{"location":"Moduls/DWEC/UT01_old.html#52-seleccio-deines-essencials","title":"5.2. Selecci\u00f3 d'Eines Essencials","text":"<ul> <li>Editors de Codi i IDEs: L'elecci\u00f3 d'eines d'edici\u00f3 de codi abasta un espectre que va des d'editors simples fins a entorns de desenvolupament integrats (IDEs) complets. Es poden classificar en tres categories principals:<ul> <li>Editors simples: Ideals per a modificacions r\u00e0pides i casuals (p. ex., Notepad, Gedit). S\u00f3n lleugers per\u00f2 manquen de funcionalitats avan\u00e7ades.</li> <li>Editors de text avan\u00e7ats: Ofereixen un equilibri excel\u00b7lent entre rendiment i funcionalitat, amb caracter\u00edstiques com ressaltat de sintaxi, autocompletat i un ampli ecosistema d'extensions.</li> <li>Entorns de Desenvolupament Integrats (IDEs): Solucions completes dissenyades per a projectes grans i complexos, que integren depuradors, compiladors i altres eines (p. ex., Eclipse, NetBeans).</li> </ul> </li> <li>Per a la majoria de projectes de desenvolupament web modern, es recomana expl\u00edcitament l'\u00fas de Visual Studio Code, un editor de text avan\u00e7at que destaca per la seva pot\u00e8ncia, versatilitat i extensibilitat. Les extensions clau per a un flux de treball eficient inclouen:<ul> <li><code>Prettier</code>: Per a un formatatge autom\u00e0tic i consistent del codi.</li> <li><code>ESLint</code>: Per a la detecci\u00f3 d'errors de programaci\u00f3 i d'estil en JavaScript.</li> <li><code>Live Server</code>: Per llan\u00e7ar un servidor de desenvolupament local que recarrega autom\u00e0ticament la p\u00e0gina en desar els canvis.</li> <li><code>html-in-template-string</code>: Per facilitar l'edici\u00f3 de literals de plantilla (template literals) en JavaScript.</li> </ul> </li> <li>Navegadors i Eines de Depuraci\u00f3: \u00c9s imprescindible provar el codi en m\u00faltiples navegadors per assegurar la compatibilitat. Es recomana centrar-se en Firefox i Google Chrome per la seva quota de mercat i les seves excel\u00b7lents eines per a desenvolupadors. Aquestes eines, accessibles prement la tecla <code>F12</code>, inclouen la \"Consola Web\", que \u00e9s fonamental per registrar missatges, inspeccionar errors de JavaScript i analitzar el tr\u00e0nsit de xarxa.</li> <li>Control de Versions: L'\u00fas d'un sistema de control de versions \u00e9s una pr\u00e0ctica est\u00e0ndard i ineludible en el desenvolupament professional. Git \u00e9s l'eina de facto del sector per gestionar l'historial de canvis del codi, facilitar la col\u00b7laboraci\u00f3 en equip i mantenir un registre de les versions del projecte.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#53-guia-de-millors-practiques-dimplementacio","title":"5.3. Guia de Millors Pr\u00e0ctiques d'Implementaci\u00f3","text":"<ul> <li>Adhesi\u00f3 als Est\u00e0ndards Web: \u00c9s fonamental garantir que el codi HTML sigui v\u00e0lid segons les especificacions del W3C. L'\u00fas del validador del W3C (<code>https://validator.w3.org/</code>) ajuda a detectar errors estructurals que, si no es corregeixen, poden provocar un funcionament incorrecte del CSS i del JavaScript. Un HTML inv\u00e0lid \u00e9s una font comuna de problemes de compatibilitat entre navegadors.</li> <li>Integraci\u00f3 de Codi JavaScript: Encara que \u00e9s possible inserir codi JavaScript directament dins dels fitxers HTML, la pr\u00e0ctica recomanada \u00e9s utilitzar fitxers externs amb extensi\u00f3 <code>.js</code>. Aquest enfocament millora significativament la modularitat, permet la reutilitzaci\u00f3 del codi en m\u00faltiples p\u00e0gines, optimitza el rendiment gr\u00e0cies a la mem\u00f2ria cau del navegador i augmenta la claredat i mantenibilitat del projecte.</li> <li>Disseny Funcional Sense JavaScript: Un principi de disseny robust, conegut com a \"progressive enhancement\" (millora progressiva), dicta que una p\u00e0gina web hauria de ser completament funcional i accessible encara que JavaScript estigui desactivat. JavaScript s'hauria d'utilitzar per millorar l'experi\u00e8ncia d'usuari i afegir interactivitat, per\u00f2 no hauria de ser un requisit absolut per accedir al contingut o a les funcionalitats b\u00e0siques.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#54-transicio","title":"5.4. Transici\u00f3","text":"<p>La combinaci\u00f3 d'una comprensi\u00f3 clara de les arquitectures, l'\u00fas d'eines adequades i l'adopci\u00f3 d'aquestes millors pr\u00e0ctiques permet als equips de desenvolupament prendre decisions informades i construir productes web de la m\u00e0xima qualitat per a cada projecte espec\u00edfic.</p>"},{"location":"Moduls/DWEC/UT01_old.html#60-conclusions-i-recomanacions-estrategiques","title":"6.0 Conclusions i Recomanacions Estrat\u00e8giques","text":""},{"location":"Moduls/DWEC/UT01_old.html#61-sintesi-final","title":"6.1. S\u00edntesi Final","text":"<p>Aquest informe ha demostrat que les arquitectures del costat del client i del costat del servidor no s\u00f3n opcions excloents, sin\u00f3 components d'un sistema integrat i complementari. El client excel\u00b7leix en la creaci\u00f3 d'interf\u00edcies d'usuari interactives i amb una resposta r\u00e0pida, mentre que el servidor ostenta un rol insubstitu\u00efble en la gesti\u00f3 de la l\u00f2gica de negoci, la persist\u00e8ncia de dades i la seguretat. La clau de l'\u00e8xit en el desenvolupament web rau en entendre les fortaleses i limitacions de cada entorn per assignar cada tasca al lloc on s'executar\u00e0 de manera m\u00e9s eficient i segura.</p>"},{"location":"Moduls/DWEC/UT01_old.html#62-guia-per-a-la-presa-de-decisions","title":"6.2. Guia per a la Presa de Decisions","text":"<p>Una de les decisions arquitect\u00f2niques m\u00e9s rellevants avui dia \u00e9s si optar per una Single Page Application (SPA), que delega gran part de la l\u00f2gica de presentaci\u00f3 al client. L'an\u00e0lisi suggereix que una SPA pot ser considerada \"sobreenginyeria\" si no es justifica adequadament. Els seg\u00fcents criteris ajuden a prendre una decisi\u00f3 informada:</p> <ul> <li>Freq\u00fc\u00e8ncia d'\u00das: Una SPA \u00e9s m\u00e9s adequada per a aplicacions que l'usuari mant\u00e9 obertes i utilitza constantment (com una eina de gesti\u00f3 de projectes o un client de correu electr\u00f2nic). Per a llocs web d'\u00fas espor\u00e0dic (com un blog o una p\u00e0gina corporativa), una arquitectura tradicional generada al servidor sol ser m\u00e9s eficient, lleugera i favorable per al SEO.</li> <li>Complexitat de la Interf\u00edcie: Una SPA es justifica quan l'aplicaci\u00f3 requereix un alt grau d'interactivitat, components que comparteixen estat entre si i rutes gestionades al client. Si la interf\u00edcie \u00e9s principalment informativa i amb interaccions simples, una SPA pot complicar innecess\u00e0riament el desenvolupament.</li> </ul>"},{"location":"Moduls/DWEC/UT01_old.html#63-recomanacio-final","title":"6.3. Recomanaci\u00f3 Final","text":"<p>La millor arquitectura web no \u00e9s una f\u00f3rmula universal, sin\u00f3 aquella que s'alinea estretament amb el prop\u00f2sit de l'aplicaci\u00f3. Ha d'equilibrar de manera intel\u00b7ligent les necessitats d'una experi\u00e8ncia d'usuari fluida i moderna amb els requisits no negociables de seguretat i rendiment del servidor. La implementaci\u00f3 d'aquesta arquitectura ha de basar-se en l'\u00fas d'eines de desenvolupament modernes, l'adopci\u00f3 de millors pr\u00e0ctiques i una adhesi\u00f3 rigorosa als est\u00e0ndards oberts que garanteixen la interoperabilitat i la longevitat de la soluci\u00f3.</p>"},{"location":"Moduls/DWEC/UT02.html","title":"Material te\u00f2ric","text":""},{"location":"Moduls/DWEC/UT02.html#dwec-ut02-sintaxis-javascript-es6","title":"DWEC UT02. Sintaxis Javascript ES6","text":"<p>\u00cdndex de contingut</p> <ol> <li> <p>Introducci\u00f3 </p> </li> <li> <p>Hola m\u00f3n i comentaris</p> </li> <li> <p>Variables, constants i arrays</p> </li> <li> <p>Entrada i sortida en navegadors</p> </li> <li> <p>Operadors</p> </li> <li> <p>Estructures de control</p> </li> <li> <p>Estructura repetitives (Bucles) </p> </li> <li> <p>Funcions</p> </li> <li> <p>Funcions fletxa (arrow functions) </p> </li> <li> <p>Classes a Javascript</p> </li> <li> <p>M\u00e9s coses interessants de Javascript ES6</p> </li> <li> <p>Introducci\u00f3 a la manipulaci\u00f3 del DOM</p> </li> <li> <p>Material addicional</p> </li> <li> <p>Bibliografia</p> </li> <li> <p>Autors (en ordre alfab\u00e8tic)</p> </li> </ol>"},{"location":"Moduls/DWEC/UT02.html#introducci\u00f3","title":"1. Introducci\u00f3","text":"<p>Javascript \u00e9s un llenguatge de programaci\u00f3 que inicialment va n\u00e9ixer com un llenguatge que permetia executar codi al nostre navegador (client), ampliant la funcionalitat dels nostres llocs web.</p> <p>Una de les versions m\u00e9s esteses de Javascript modern, \u00e9s la anomenada per molts Javascript ES6 (ECMAScript 6), tamb\u00e9 anomenat ECMAScript 2015 o fins i tot per alguns anomenat directament Javascript 6. En crear aquesta petita guia ens hem basat en aquesta versi\u00f3.  Si ja saps Javascript per\u00f2 vols con\u00e8ixer novetats de Javascript ES6, et recomanem aquest curs https://didacticode.com/curso/curso-javascript-es6/</p> <p>Actualment aquesta \u00e9s una de les seves principals funcions, per\u00f2 atesa la seva popularitat el llenguatge ha estat portat a altres \u00e0mbits, entre els quals destaca el popular NodeJS  https://nodejs.org/ que permet l'execuci\u00f3 de Javascript com a llenguatge escriptori i llenguatge servidor.</p> <p>Tot i que en aquest m\u00f2dul ens centrem en l'execuci\u00f3 de Javascript al navegador, l'apr\u00e8s pot ser utilitzat per a altres implementacions de Javascript.</p>"},{"location":"Moduls/DWEC/UT02.html#hola-m\u00f3n-i-comentaris","title":"2. Hola m\u00f3n i comentaris","text":"<p>Per afegir JavaScript es fa servir l'etiqueta SCRIPT.</p> <p>Aquest pot estar en qualsevol lloc de la p\u00e0gina. El codi s'executa en el lloc on es troba de forma seq\u00fcencial a com el navegador el va trobant.</p> <pre><code>&lt;script LANGUAGE=\"JavaScript\"&gt;\n    Aqu\u00ed va el codi \n    //Aix\u00f2 \u00e9s un comentari a Javascript d'una l\u00ednia\n&lt;/script&gt;\n</code></pre> <p>A Javascript els comentaris es poden fer amb // per a una l\u00ednia i amb / / per a diverses l\u00ednies.</p> <p>Aix\u00ed mateix des de Javascript \u00e9s possible escriure missatges a la consola de desenvolupament mitjan\u00e7ant l'ordre <code>console.log(text)</code>.</p> <p>Aquest exemple podria ser un petit hola m\u00f3n que en executar-se es mostrar\u00e0 a la consola de desenvolupament. Exemple amb \"console.log\" i comentari multil\u00ednia.</p> <pre><code>&lt;script LANGUAGE=\"JavaScript\"&gt;\n    console.log(\"Hola M\u00f3n\");\n    /* Aix\u00f2 \u00e9s un comentari\n    en Javascript multil\u00ednia*/\n&lt;/script&gt;\n</code></pre> <p>Una altra via per mostrar informaci\u00f3 a l'usuari des d'una finestra, \u00e9s el comandament \"alert(text)\".</p> <pre><code>&lt;script LANGUAGE=\"JavaScript\"&gt;\n    alert(\"Hola M\u00f3n\");\n&lt;/script&gt;\n</code></pre> <p>Hi ha una forma molt m\u00e9s pr\u00e0ctica i ordenada d'usar codi Javascript. Es poden incloure un o diversos fitxers amb codi Javascript en el nostre document HTML. Se'n pot incloure tants com es desitja. Aquesta \u00e9s la forma m\u00e9s adequada per treballar amb codi Javascript.</p> <p>Un exemple d'inclusi\u00f3 de fitxers.</p> <pre><code>&lt;script type=\"text/javascript\" src={\"rutaDelArxiu1.js\"}&gt;\n&lt;script type=\"text/javascript\" src={\"rutaDelArxiu2.js\"}&gt;\n&lt;script type=\"text/javascript\" src={\"rutaDelArxiu3.js\"}&gt;\n&lt;script type=\"text/javascript\" src={\"rutaDelArxiu4.js\"}&gt;\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#variables,-constants-i-arrays","title":"3. Variables, constants i arrays","text":"<p>En aquest punt parlarem de variables, constants i arrays. Abans de comen\u00e7ar, comentar que \u00e9s recomanable mantenir un estil de nomenament de variables. Aqu\u00ed un enlla\u00e7 sobre formes de nomenar variables:</p> <p>https://medium.com/@alonsus91/convenci%C3%B3n-de-nombres-desde-el-camelcase-hasta-el-kebab-case-787e56d6d023</p> <p>Durant el curs, farem servir l'estil \"CamelCase\" https://es.wikipedia.org/wiki/Camel_case</p>"},{"location":"Moduls/DWEC/UT02.html#\u00e0mbit-de-variables-i-constants","title":"3.1 \u00c0mbit de variables i constants","text":"<p>Abans de comen\u00e7ar, vam parlar de l'\u00e0mbit de variables (tamb\u00e9 anomenat \"scope\" en angl\u00e8s). L'\u00e0mbit de variables en un llenguatge de programaci\u00f3 indica en quins llocs del programa pot ser accedida una variable/constant. En comentar cadascun dels tipus, definirem en quin \u00e0mbit existeixen.</p>"},{"location":"Moduls/DWEC/UT02.html#variables","title":"3.2 Variables","text":"<p>Les variables s\u00f3n elements del llenguatge que permeten emmagatzemar diferents valors en cada moment. Es pot emmagatzemar un valor en una variable i consultar aquest valor posteriorment. Tamb\u00e9 podem modificar el seu contingut sempre que vulguem.</p> <p>Per declarar les variables a JavaScript podem utilitzar let o var, segons l'\u00e0mbit on vulguem que sigui accessible.</p> <ul> <li>let: let permet declarar una variable que sigui accessible \u00fanicament dins del bloc on s'ha declarat (anomenem bloc a l'espai delimitat per { }).</li> <li>var: var permet declarar una variable que sigui accessible per tots els llocs de la funci\u00f3 on ha estat declarada. Si una variable amb var es declara fora de qualsevol funci\u00f3, l'\u00e0mbit d'aquesta s\u00f3n totes les funcions del codi.</li> <li>Variables sense declarar: Javascript ens permet usar variables no declarades. Si fem aix\u00f2, ser\u00e0 equivalent a declarar-les amb var fora del codi, \u00e9s a dir, seran variables accessibles per qualsevol funci\u00f3.</li> </ul> <pre><code>function exemple() {\n    exemple = 3;  //Equival a declarar-la fora de la funciocom a var\n    if (exemple === 3) {\n        var variable1 = 1;\n        let variable2 = 2;\n    }\n    console.log(variable1);   // variable1 existeix aqu\u00ed\n    console.log(variable2);   // variable2 no existeix aqu\u00ed\n}\n</code></pre> <p>\ud83d\udcd6 Important</p> <p>En general, recomanem usar let. Hauries de tenir una bona ra\u00f3 per fer servir var, ja que el seu \u00fas \u00e9s perill\u00f3s ja que podria modificar-se una variable des d'un lloc que no controls per accident. Aquests problemes no ocorren \u00fanicament a Javascript, sin\u00f3 en altres llenguatges i poden fer que el teu programa sigui complicat de depurar.</p>"},{"location":"Moduls/DWEC/UT02.html#tipus-de-dades","title":"3.3 Tipus de dades","text":"<p>Els principals tipus de dades que pot contenir variables a Javascript s\u00f3n:</p> <ul> <li>Num\u00e8rics (tipus \"number\"): pot contenir qualsevol tipus de nombre real (0.3, 1.7, 2.9) o sencer (5, 3, -1).</li> <li>Enters grans (tipus \"bigint\"): poden contenir enters amb valors superiors a 2^53 -1. Es poden nomenclar escrivint una lletra \"n\" al final de l'enter. No es poden utilitzar amb la majoria d'operadors matem\u00e0tics de Javascript.</li> <li>Booleans (tipus \"boolean\") : pot contenir un dels seg\u00fcents valors: true, false, 1 i 0.</li> <li>Cadenes (tipus \"string\"): qualsevol combinaci\u00f3 de car\u00e0cters (lletres, n\u00fameros, signes especials i espais). Les cadenes es delimiten mitjan\u00e7ant cometes dobles o simples (\"Lolo\",\"lalO\").  Per concatenar cadenes es pot fer servir l'operador \"+\".</li> </ul> <p>El tipus d'una variable es pot comprovar usant l'estructura typeof variable ===\"tipus\".</p> <pre><code>let edat = 23, nova_edat, increment = 4;\nconst nom=\"Rosa Garc\u00eda\"; \nconsole.log(typeof === \"number\")\nnova_edat = edat + increment;\nconsole.log(nom+ \" despr\u00e9s de \"+increment +\" anys tindr\u00e0 \"+ nova_edat;\n</code></pre> <p>Aix\u00ed mateix existeixen altres tipus que Javascript considera primitius: \"undefined\", \"null\", \"symbol\", \"object\" i \"function\".</p> <p>Tots els valors que NO s\u00f3n d'un tipus b\u00e0sic s\u00f3n considerats objectes: arrays, funcions, valors compostos, etc. Aquesta distinci\u00f3 \u00e9s molt important perqu\u00e8 els valors primitius i els valors objectes es comporten de diferent forma quan s\u00f3n assignats i quan s\u00f3n passats com a par\u00e0metre a una funci\u00f3.</p> <p>M\u00e9s informaci\u00f3 a  https://developer.mozilla.org/es/docs/Web/JavaScript/Data_structures</p>"},{"location":"Moduls/DWEC/UT02.html#coerci\u00f3","title":"3.4 Coerci\u00f3","text":"<p>Javascript \u00e9s un llenguatge de tipat tou (\u00e9s a dir, en declarar una variable no se li assigna un tipus), tot i que internament Javascript si manegi tipus de dades.</p> <p>En determinats moments, resulta necessari convertir un valor d'un tipus a un altre. Aix\u00f2 en JS s'anomena \"coerci\u00f3\", i pot oc\u00f3rrer de forma impl\u00edcita o podem for\u00e7ar-ho de forma expl\u00edcita.</p> <p>Per exemple</p> <pre><code>let numero = 5;\nconsole.log(numero);\n</code></pre> <p>En aquest codi, ocorre una coerci\u00f3 impl\u00edcita de n\u00famero (que \u00e9s de tipus number) a un tipus string, de manera que pot ser impr\u00e8s per consola. Podr\u00edem realitzar la conversi\u00f3 de forma expl\u00edcita de la manera seg\u00fcent:</p> <pre><code>console.log(numero.toString());\n</code></pre> <p>Les coercions impl\u00edcites ocorren molt sovint en JS, encara que moltes vegades no en siguem conscients. Resulta molt important entendre com funcionen per poder deduir quin ser\u00e0 el resultat d'una comparaci\u00f3.</p> <pre><code>let a = \"2\", b = 5;\nconsole.log( typeof a + \" \" + typeof b); // string number\nconsole.log( a + b );  //ens mostra 15 \n</code></pre> <p>En els llenguatges de tipat dur (per exemple, Java) se'ns prohibeix realitzar operacions entre diferents tipus de dades. No obstant aix\u00f2, Javascript, no fa aix\u00f2, ja que permet operar entre diferents tipus, seguint una s\u00e8rie de regles:</p> <ul> <li> <p>Javascript t\u00e9 l'operador === i !=== per realitzar comparacions estrictes, per\u00f2 no posseeix aquests operadors per a desigualtats (&gt;, &lt;, &gt;=, &lt;=).</p> </li> <li> <p>Si \u00e9s possible, JS prefereix fer coercions a tipus number per sobre d'altres tipus b\u00e0sics. Per exemple, l'expressi\u00f3 (\"15\" &lt; 100) es resoldr\u00e0 com a true perqu\u00e8 JS canviar\u00e0 \"15\", de tipus string, per 15 de tipus number.</p> <ul> <li>Tingues en compte que si converteixes \"15\" a string, en comparar-ho amb \"100\" l'expressi\u00f3 es resoldria com a false.</li> </ul> </li> <li> <p>A l'hora de fer coerci\u00f3 a boolean, els seg\u00fcents valors es convertiran en false: undefined, null, 0, \"\", NaN. La resta de valors es convertiran en true.</p> </li> </ul> <p>Exemple coerci\u00f3 a number . </p><pre><code>// &lt;, &lt;=, &gt;, &lt;= tamb\u00e9 fan coercion. No existeix &gt;== ni &lt;==\nlet arr = [ \"1\", \"10\", \"100\", \"1000\"];\nfor (let i = 0; i &lt; arr.length &amp;&amp; arr[i] &lt; 500; i++) {\n    console.log(i);\n} // 0,1,2\n</code></pre><p></p> <p>Exemple on no es fa coerci\u00f3.</p> <pre><code>var x = \"10\";\nvar i = \"9\";\nconsole.log(x &lt; i); // true, tots dos s\u00f3n String i els compara com a cadena \n</code></pre> <p>Exemple de coerci\u00f3 amb undefined</p> <pre><code>let altura;  // variable no definida\nconsole.log(altura ? true : false); // En no estar definit, false\n</code></pre> <p>Interessant:</p> <p>En realitzar comparacions, si fas servir == o != per comparar les dades, Javascript realitza coerci\u00f3. Si vols que la comparaci\u00f3 no converteixi tipus i nom\u00e9s sigui certa si s\u00f3n del mateix tipus, has de fer servir === o !==. Aquesta \u00e9s una bona pr\u00e0ctica molt recomanada perqu\u00e8 aquestes conversions no ens juguin males passades.</p> <p>Per a m\u00e9s informaci\u00f3 https://www.etnassoft.com/2011/04/06/coercion-de-datos-en-javascript/</p>"},{"location":"Moduls/DWEC/UT02.html#arrays","title":"3.5 Arrays","text":"<p>Un array (tamb\u00e9 anomenat vector o arranjament) \u00e9s una variable que cont\u00e9 diversos valors. Ho creiem simplement amb \"[]\" o amb \"new Array()\" o inicialitzant els elements. Podem referenciar els elements d'un vector indicant la seva posici\u00f3.</p> <p>Els arrays posseeixen una propietat anomenada \"length\" que podem utilitzar per con\u00e8ixer el nombre d'elements del vector.</p> <pre><code>// Array definit 1 a 1\nlet elMeuVector=[]; // let elMeuVector=new Array(); \u00e9s equivalent \nelMeuVector[0]=22;\nelMeuVector[1]=12;\nelMeuVector[2]=33;\n// Array definit en una l\u00ednia inicialitzant elements\nlet unltreVector=[1,2,\"Cancamusa\"];  Valors dins del vector\nconsole.log(elAltreVector[1]);\nconsole.log(unAltreVector[2]);\nconsole.log(elMeuVector + \" \"+elMeuVector.length );  // vector i mida\n// Matriu bidimensional 5x4 declarada sense omplir\n// Per saber m\u00e9s de map, mirar seccion de funcions fletxa\nlet vectorBi = new Array(5).fill().map(x =&gt; new Array(4));\n// Un altre vector bidimensional 3x5, farcit de zeros\nlet unAltreVectorBi = [... Array(3)].map(x=&gt;Array(5).fill(0));\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#clonant-arrays-(i-objectes)","title":"3.6 Clonant arrays (i objectes)","text":"<p>Els arrays a Javascript internament emmagatzemen refer\u00e8ncies on est\u00e0 allotjat cada objecte en mem\u00f2ria, per la qual cosa copiar un array no \u00e9s tan simple com fer elMeuVector=elMeuAltreVector.</p> <p>A Javascript ES6, es pot fer una c\u00f2pia senzilla dels valors d'un vector unidimensional aix\u00ed:</p> <pre><code>let elMeuVector= { ... elMeuAltreVector }; |\n</code></pre> <p>Aquesta c\u00f2pia nom\u00e9s funciona amb arrays unidimensionals, ja que amb multidimensionals, nom\u00e9s copiar\u00e0 les refer\u00e8ncies de mem\u00f2ria de cadascun d'aquests.</p> <p>Es poden fer c\u00f2pies completes amb m\u00e8todes com aquest, que es basa a convertir el vector a JSON i tornar a obtenir-lo des de JSON:</p> <pre><code>let elMeuVectorMultidimensional = JSON.parse(JSON.stringify(elMeuAltreVectorMultidimensional));\n</code></pre> <p>M\u00e9s informaci\u00f3 a https://www.samanthaming.com/tidbits/70-3-ways-to-clone-objects/</p>"},{"location":"Moduls/DWEC/UT02.html#conversions-entre-tipus","title":"3.7 Conversions entre tipus","text":"<p>Javascript no defineix expl\u00edcitament el tipus de dades de les seves variables. Segons s'emmagatzemen, poden ser cadenes (Entre Comillas), sencers (sense part decimal) o decimals (amb part decimal).</p> <p>Elements com la funci\u00f3 \"prompt\" per llegir de teclat amb una finestra emergent del navegador, llegeixen els elements sempre com a cadena. Per a aquests casos i altres, mereix la pena usar funcions de conversi\u00f3 de dades.</p> <pre><code>let num =\"100\";     // \u00c9s una cadena\nlet num2=\"100.13\";  // \u00c9s una cadena\nlet num3=11;        // \u00c9s un sencer\nlet n=parseInt(num);// Emmagatzema un sencer. Si hi hagu\u00e9s hagut part decimal l'hagu\u00e9s truncat\nlet n2 =parseFloat(num);    // Emmagatzema un decimal\nlet n3 =num3.toString();    // Emmagatzema una cadena\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#constants","title":"3.8 Constants","text":"<p>Les constants s\u00f3n elements que permeten emmagatzemar un valor, per\u00f2 aquest valor un cop emmagatzemat \u00e9s invariable (roman constant). Per declarar constants s'utilitza la instrucci\u00f3 \"const\". Solen ser \u00fatils per definir dades constants, com el n\u00famero PI, el n\u00famero d'Euler, etc...</p> <p>El seu \u00e0mbit \u00e9s el mateix que el de let, \u00e9s a dir, nom\u00e9s s\u00f3n accessibles en el bloc que s'han declarat.</p> <pre><code>const PI = 3.1416;\nconsole.log(PI); \nPI = 3;  // Aix\u00f2 falla\n</code></pre> <p>Tot i que resulta possible definir arrays i objectes usant const, no \u00e9s recomanable fer-ho, ja que \u00e9s possible que el seu \u00fas no sigui el que pensem.</p> <p>Per exemple, en declarar un array/objecte, realment el que passa \u00e9s que la variable emmagatzema la direcci\u00f3 de mem\u00f2ria de l'objecte/array. Si ho declarem fent servir const, el que farem \u00e9s que no es pugui canviar aquesta direcci\u00f3 de mem\u00f2ria, per\u00f2 ens permetr\u00e0 canviar els seus valors.</p> <pre><code>const elMeuVector=[1,2,3];\nconsole.log(elMeuVector[0]);    // Mostra el valor 1\nelMeuVector[0]=4;\nconsole.log(elMeuVector[0]);    // Mostra el valor 4\nelMeuVector=[];  Aix\u00f2 falla\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#mode-estricte-\"use-strict\"","title":"3.9 Mode estricte <code>use strict</code>","text":"<p>Javascript ES6 incorpora l'anomenat \"mode estricte\". Si en algun lloc del codi s'indica la sent\u00e8ncia <code>use strict</code> indica que aquest codi s'executar\u00e0 en mode estricte:</p> <ul> <li>Escriure <code>use strict</code> fora de qualsevol funci\u00f3 afecta tot el codi.</li> <li>Escriure <code>use strict</code> dins d'una funci\u00f3 afecta aquesta funci\u00f3.</li> </ul> <p>Entre les principals caracter\u00edstiques d'<code>use strict</code> hem d'obligar que totes les variables siguin declarades.</p> <p><code>use strict</code> \u00e9s ignorat per versions anteriors de Javascript, en prendre'l com una simple declaraci\u00f3 de cadena.</p> <p>Les principals caracter\u00edstiques d'<code>use strict</code> s\u00f3n:</p> <ul> <li>No permet usar variables/objectes no declarats (els objectes s\u00f3n variables).</li> <li>No permet eliminar (usant <code>delete</code>) variables/objectes/funcions.</li> <li>No permet noms duplicats de par\u00e0metres en funcions.</li> <li>No permet escriure en propietats d'objectes definides com a nom\u00e9s lectura.</li> <li>Evita que determinades paraules reservades siguin usades com a variables (eval, arguments, this, etc...)</li> </ul> <p>Exemple 1:</p> <pre><code>\"use strict\"; \npi = 3.14;        // Dona error\nfuncioProva();\n\nfunction funcioProva() { \n    piBIS=3.14;     // Dona error\n</code></pre> <p>Exemple 2:</p> <pre><code>pi = 3.14;  // Dona error, use strict nom\u00e9s s'aplica a la funci\u00f3\nfuncioProva();\n\nfunction funcioProva() {\n    \"use strict\"`;\n    piBIS = 3.14;    // Dona error\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#entrada-i-sortida-en-navegadors","title":"4. Entrada i sortida en navegadors","text":""},{"location":"Moduls/DWEC/UT02.html#alert","title":"4.1 alert","text":"<p>El m\u00e8tode alert() permet mostrar a l'usuari informaci\u00f3 literal o el contingut de variables en una finestra independent. La finestra contindr\u00e0 la informaci\u00f3 a mostrar i el bot\u00f3 Acceptar.</p> <pre><code>alert(\"Hola m\u00f3n\");\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#console.log","title":"4.2 console.log","text":"<p>El m\u00e8tode console.log permet mostrar informaci\u00f3 a la consola de desenvolupament. En versions de Javascript d'escriptori tipus NodeJS, permet mostrar text \"per pantalla\".</p> <p>console.log(\"Un altre hola m\u00f3n\");</p>"},{"location":"Moduls/DWEC/UT02.html#confirm","title":"4.3 confirm","text":"<p>A trav\u00e9s del m\u00e8tode confirm() s'activa un quadre de di\u00e0leg que cont\u00e9 els botons Acceptar i Cancel\u00b7lar. Quan l'usuari pitja el bot\u00f3 Acceptar, aquest m\u00e8tode retorna el valor true; Cancel\u00b7lar retorna el valor false. Amb ajuda d'aquest m\u00e8tode l'usuari pot decidir sobre preguntes concretes i influir d'aquesta manera directament a la p\u00e0gina.</p> <pre><code>let resposta; \nresposta=confirm (\"Desitja cancel\u00b7lar la subscripci\u00f3?\");\nalert(\"Vost\u00e8 ha contestat que \"+resposta);\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#prompt","title":"4.4 prompt","text":"<p>El m\u00e8tode prompt() obre un quadre de di\u00e0leg en pantalla en qu\u00e8 es demana a l'usuari que introdueixi alguna dada. Si es polsa el bot\u00f3 Cancel\u00b7lar, el valor de devoluci\u00f3 \u00e9s false/null. Polsant en Acceptar s'obt\u00e9 el valor true i la cadena de car\u00e0cters introdu\u00efda es guarda per al seu posterior processament.</p> <pre><code>let provincia; \nprovincia = prompt(\"Introdueixi la prov\u00edncia\",\"Murcia\");\nalert(\"Vost\u00e8 ha introdu\u00eft la seg\u00fcent informaci\u00f3 \"+provincia);\nconsole.log(\"Operaci\u00f3 realitzada amb \u00e8xit\");\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#operadors","title":"5. Operadors","text":"<p>Combinant variables i valors, es poden formular expressions m\u00e9s complexes. Les expressions s\u00f3n una part clau en la creaci\u00f3 de programes. Per formular expressions utilitzem els anomenats operadors. Passem a comentar els principals operadors de Javascript.</p>"},{"location":"Moduls/DWEC/UT02.html#operadors-d'-assignaci\u00f3","title":"5.1 Operadors d'assignaci\u00f3","text":"<p>Els operadors d'assignaci\u00f3 s'utilitzen per assignar valors a les variables. Alguns d'ells, a m\u00e9s d'assignar el valor, tamb\u00e9 inclouen operacions (Exemple += assigna i suma).</p> Operador Descripci\u00f3 = Assigna a la variable de la part esquerra el valor de la part dreta. += Suma els operands esquerre i dret i assigna el resultat a l'operant esquerre. -= Resta l'operant dret de l'operant esquerre i assigna el resultat a l'operant esquerre. *= Multiplica ambd\u00f3s operands i assigna el resultat a l'operant esquerre. /= Divideix ambd\u00f3s operands i assigna el resultat a l'operant esquerre. <pre><code>let num1 = 3;\nlet num2 = 5; \nnum2 += num1; \nnum2 -= num1; \nnum2 *= num1; \nnum2 = num1; \nnum2 %= num1;\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#operadors-aritm\u00e8tics","title":"5.2 Operadors aritm\u00e8tics","text":"<p>Els operadors aritm\u00e8tics s'utilitzen per realitzar c\u00e0lculs aritm\u00e8tics.</p> Operador Descripci\u00f3 + Suma. - Resta. * Multiplicaci\u00f3. / Divisi\u00f3. % Calcula la resta d'una divisi\u00f3 sencera. <p>A m\u00e9s d'aquests operadors, tamb\u00e9 hi ha operadors aritm\u00e8tics unitaris: increment (++), disminuci\u00f3 (--) i la negaci\u00f3 unit\u00e0ria (-).</p> <p>Els operadors d'increment i disminuci\u00f3 poden estar tant davant com darrere d'una variable, amb diferents matisos en la seva execuci\u00f3. Aquests operadors augmenten o disminueixen en 1, respectivament, el valor d'una variable.</p> Operador Descripci\u00f3 (Suposant x=5) y = + + x Primer l'increment i despr\u00e9s l'assignaci\u00f3. x = 6, i = 6. y = x + + Primer l'assignaci\u00f3 i despr\u00e9s l'increment. x = 6, i = 5. y = --x Primer el decrement i despr\u00e9s l'assignaci\u00f3. x = 4, i = 4. i = x-- Primer l'assignaci\u00f3 i despr\u00e9s el decrement x = 4, i = 5. i =-x S'assigna a la variable \"i\" el valor negatiu de \"x\", per\u00f2 el valor de la variable \"x\" no varia. x = 5, y = -5. <pre><code>let num1 = 5, num2 = 8,resultat1, resultat2; \nresultat1 =((num1 + num2)*200)/100; \nresultat2 = resultat1%3; \nresultat1 = ++num1; \nresultat2 = num2++;\nresultat1 =--num1; \nresultat2 =num2--; \nresultat1 =-resultat2;\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#operadors-de-comparaci\u00f3","title":"5.3 Operadors de comparaci\u00f3","text":"<p>Operadors utilitzats per comparar dos valors entre si. Com a valor de retorn s'obt\u00e9 sempre un valor boole\u00e0: true o false.</p> Operador Descripci\u00f3 === Compara dos elements, incloent-hi el seu tipus intern. Si s\u00f3n de diferent tipus, no realitza conversi\u00f3 i retorna false ja que sempre els considera diferents. \u00das recomanat. !== Compara dos elements, incloent-hi el seu tipus intern. Si s\u00f3n de diferent tipus, no realitza conversi\u00f3 i retorna true ja que sempre els considera diferents. \u00das recomanat. == Retorna el valor true quan els dos operands s\u00f3n iguals. Si els elements s\u00f3n de diferents tipus, realitza una conversi\u00f3. No est\u00e0 recomanat el seu \u00fas. != Retorna el valor true quan els dos operands s\u00f3n diferents. Si els elements s\u00f3n de diferents tipus, realitza una conversi\u00f3. No est\u00e0 recomanat el seu \u00fas. &gt; Retorna el valor true quan l'operant de l'esquerra \u00e9s m\u00e9s gran que el de la dreta. &lt; Retorna el valor true quan l'operant de la dreta \u00e9s menor que el de l'esquerra. &gt;= Retorna el valor true quan l'operant de l'esquerra \u00e9s major o igual que el de la dreta. &lt;= Retorna el valor true quan l'operant de la dreta \u00e9s    menor o igual que el de l'esquerra. <pre><code>let a = 4; \nb = 5,c =\" 5\";\nconsole.log(\"El resultat de l'expressi\u00f3 'a==c' \u00e9s igual a \"+(a==c));\nconsole.log(\"El resultat de l'expressi\u00f3 'a===c' \u00e9s igual a \"+(a===c));\nconsole.log(\"El resultat de l'expressi\u00f3 'a!=c' \u00e9s igual a \"+(a!=c));\nconsole.log(\"El resultat de l'expressi\u00f3 'a!==c' \u00e9s igual a \"+(a!==c));\nconsole.log(\"El resultat de l'expressi\u00f3 'a==b' \u00e9s igual a \"+(a==b));\nconsole.log(\"El resultat de l'expressi\u00f3 'a!=b' \u00e9s igual a \"+(a!=b));\nconsole.log(\"El resultat de l'expressi\u00f3 'a&gt;b' \u00e9s igual a \"+(a&gt;b));\nconsole.log(\"El resultat de l'expressi\u00f3 'a&lt;b' \u00e9s igual a \"+(a&lt;b));\nconsole.log(\"El resultat de l'expressi\u00f3 'a&gt;=b' \u00e9s igual a \"+(a&gt;=b));\nconsole.log(\"El resultat de l'expressi\u00f3 'a&lt;=b' \u00e9s igual a \"+(a&lt;=b));\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#operadors-l\u00f2gics","title":"5.4 Operadors l\u00f2gics","text":"<p>Els operadors l\u00f2gics s'utilitzen per al processament dels valors booleans. Al seu torn el valor que retornen tamb\u00e9 \u00e9s boole\u00e0: true o false.</p> Operador Descripci\u00f3 &amp;&amp; I \"l\u00f2gica\". El valor de devoluci\u00f3 \u00e9s true quan tots dos operands s\u00f3n veritables. || O \"l\u00f2gica\". El valor de devoluci\u00f3 \u00e9s true quan algun dels operands \u00e9s veritable o ho s\u00f3n tots dos. ! No \"l\u00f2gic\". Si el valor \u00e9s true, retorna false i si el valor \u00e9s false, retorna true. <p>Es mostra el resultat de diferents operacions realitzades amb operadors l\u00f2gics. (En l'exemple es fa servir directament els valore true i false en lloc de variables).</p> <pre><code>console.log( \"El resultat de l'expressi\u00f3 'false&amp;&amp;false' \u00e9s igual a \" +( false &amp;&amp; false ));\nconsole.log( \"El resultat de l'expressi\u00f3 'false&amp;&amp;true' \u00e9s igual a \" +( false &amp;&amp; true ));\nconsole.log( \"El resultat de l'expressi\u00f3 'true&amp;&amp;false' \u00e9s igual a \" +( true &amp;&amp; false ));\nconsole.log( \"El resultat de l'expressi\u00f3 'true&amp;&amp;true' \u00e9s igual a \" +( true &amp;&amp; true ));\nconsole.log( \"El resultat de l'expressi\u00f3 'false||false' \u00e9s igual a \" +( false || false ));\nconsole.log( \"El resultat de l'expressi\u00f3 'false||true' \u00e9s igual a \" +( false || true ));\nconsole.log( \"El resultat de l'expressi\u00f3 'true||false' \u00e9s igual a \" +( true || false ));\nconsole.log( \"El resultat de l'expressi\u00f3 'true||true' \u00e9s igual a \" +( true || true ));\nconsole.log( \"El resultat de l'expressi\u00f3 '!false' \u00e9s igual a \" +(! false ));\n</code></pre> <p>Info</p> <p>Per saber m\u00e9s de comparadors i expressions, pots consultar:</p> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Expressions_and_Operators</p>"},{"location":"Moduls/DWEC/UT02.html#estructures-de-control","title":"6. Estructures de control","text":""},{"location":"Moduls/DWEC/UT02.html#instruccions-if/else","title":"6.1 Instruccions if/else","text":"<p>Per controlar el flux d'informaci\u00f3 en els programes JavaScript existeixen una s\u00e8rie d'estructures condicionals i bucles que permeten alterar l'ordre seq\u00fcencial d'execuci\u00f3. Aquestes s\u00f3n les instruccions if i else.</p> <p>La instrucci\u00f3 <code>if</code>  permet l'execuci\u00f3 d'un bloc o un altre d'instruccions en funci\u00f3 d'una condici\u00f3.</p> <p>Sintaxi</p> <pre><code>if (condici\u00f3) {\n    // bloc d'instruccions que s'executen si la condici\u00f3 es compleix\n}\n    else {\n    // bloc d'instruccions que s'executen si la condici\u00f3 no es compleix\n}\n</code></pre> <p>Les claus nom\u00e9s s\u00f3n obligat\u00f2ries quan hi hagi diverses instruccions seguides pertanyents a la ramificaci\u00f3. Si no poses claus, l'if s'aplicar\u00e0 \u00fanicament a la seg\u00fcent instrucci\u00f3.</p> <p>Pot existir una instrucci\u00f3 if que no contingui la part else. En aquest cas, s'executaran una s\u00e8rie d'ordres si es compleix la condici\u00f3 i si aix\u00f2 no \u00e9s aix\u00ed, es continuaria amb les ordres que estan a continuaci\u00f3 del bloc if. Exemples d'\u00fas:</p> <pre><code>let diaSetm;\ndiaSetm = prompt(\"Introdueix el dia de la setmana \", \"\");\nif (diaSetm === \"diumenge\") {\n    console.log(\"Avui \u00e9s festiu\");\n}   // Al no tenir {}, \u00e9s un \"bloc d'una instrucci\u00f3\"\n    console.log(\"Avui no \u00e9s diumenge, a treballar!!\");\n</code></pre> <p>Un altre exemple</p> <pre><code>let edatAina,edatLluis; \n// Fem servir parseInt per convertir a enter\nedatAina=parseInt(prompt(\"Introdueix l'edat d'Aina\",\"\"));\nedatLluis=parseInt(prompt(\"Introdueix l'edat de Lluis\",\"\"));\nif (edatAina &gt; edatLluis) {\n    console.log(\"Aina es major que en Lluis.\");\n    console.log(\"Aina t\u00e9 \"+edatAina+\" anys i Lluis \" + edatLluis);\n} else {\n    console.log(\"Aina es menor o de igual edat que en Lluis.\");    \n    console.log(\"Aina t\u00e9 \"+edatAina+\" anys i Lluis \" + edatLluis);\n}\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#ramificacions-niuades","title":"6.2 Ramificacions niuades","text":"<p>Per a les condicions ramificades m\u00e9s complicades, sovint s'utilitzen les ramificacions niuades. S'hi defineixen consultes if dins d'altres consultes if, per exemple:</p> <pre><code>let edatAina,edadLluis;\n// Convertirem a sencer les cadenes\nedatAina = parseInt(prompt(\"Introdueix l'edat de n'Aina\",\"\"));\nedatLluis = parseInt(prompt(\"Introdueix l'edat de'n Luis\",\"\"));\nif (edatAina &gt; edatLluis) {\n    console.log(\"Aina es major que Lluis.\");\n} else {\n    if (edatAina&lt;edatLluis) {\n        console.log(\"Aina es menor que Lluis.\");\n    } else {\n        console.log(\"Aina t\u00e9 la mateixa edat que en Lluis.\");\n    }\n}\nconsole.log(\"Aina t\u00e9 \" + edatAina + \" anys i Lluis \"+ edatLluis);\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#estructura-repetitives-(bucles)","title":"7. Estructura repetitives (Bucles)","text":""},{"location":"Moduls/DWEC/UT02.html#bucle-for","title":"7.1 Bucle for","text":"<p>Quan l'execuci\u00f3 d'un programa arriba a un bucle for:</p> <ul> <li>El primer que fa \u00e9s executar la \"Inicialitzaci\u00f3 de l'\u00edndex\", que nom\u00e9s s'executa una vegada.</li> <li>A continuaci\u00f3 analitza la condici\u00f3 de prova i si aquesta es compleix executa les instruccions del bucle.</li> <li>Quan finalitza l'execuci\u00f3 de les instruccions del bucle es realitza la modificaci\u00f3 de l'\u00edndex, es retorna a la cap\u00e7alera del bucle for i es realitza de nou la condici\u00f3 de prova.</li> <li>Si la condici\u00f3 es compleix s'executen les instruccions i si no es compleix l'execuci\u00f3 continua en les l\u00ednies de codi que segueixen posteriors al bucle.</li> </ul> <p>Sintaxi</p> <pre><code>for (Inicialitzaci\u00f3 \u00edndex; Condici\u00f3 de prova; Modificaci\u00f3 \u00edndex) {\n    // ...  instruccions ...\n}\n</code></pre> <p>Exemple: n\u00fameros parells del 2 al 30</p> <p></p><pre><code>for (i=2; i &lt;= 30; i+=2) { \n    console.log(i);\n}\nconsole.log(\"S'han escrit els n\u00fameros parells del 2 al 30\");\n</code></pre> Exemple: Escriu les pot\u00e8ncies de 2 fins a 3000<p></p> <pre><code>let aux = 1;\nfor (i=2; i &lt;= 3000; i*=2) {\n    console.log(\"2 elevat a \" + aux + \" \u00e9s igual a \" + i);\n    aux++;\n}\nconsole.log(\"S'han escrit les pot\u00e8ncies de 2 menors de 3000\");\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#bucle-while","title":"7.2 Bucle while","text":"<p>Amb el bucle while es poden executar un grup d'instruccions mentre es compleixi una condici\u00f3.</p> <ul> <li>Si la condici\u00f3 mai es compleix, aleshores tampoc s'executa cap instrucci\u00f3.</li> <li>Si la condici\u00f3 es compleix sempre, ens veurem immersos en el problema dels bucles infinits, que poden arribar a col\u00b7lapsar el navegador, o fins i tot l'ordinador.<ul> <li>Per aquesta ra\u00f3 \u00e9s molt important que la condici\u00f3 s'hagi de deixar de complir en algun moment per evitar bucles infinits.</li> </ul> </li> </ul> <p>Sintaxi</p> <p></p><pre><code>while (condici\u00f3) {\n    // ... instruccions...\n}\n</code></pre> |  | | :---- |<p></p> <p>Exemple: Escriu els n\u00fameros parells de 0 a 30</p> <pre><code>let i = 0;\nwhile (i&lt;=30) {\n    console.log(i);\n    i = i + 2;\n}\nconsole.log(\"Ja s'han mostrat els n\u00fameros parells del 2 al 30\");\n</code></pre> <p>Exemple: Pregunta una clau fins que es correspongui amb una donada.</p> <pre><code>let auxclau=\"\";\nwhile (auxclau!=\"bunyol\"){ \n    auxclau=prompt(\"introdueix la clau \",\"clauSecreta\")\n}\nconsole.log(\"Has encertat la clau\");\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#bucle-do-while","title":"7.3 Bucle do-while","text":"<p>La difer\u00e8ncia del bucle do-while davant el bucle while rau en el moment en qu\u00e8 es comprova la condici\u00f3: el bucle do-while no la comprova fins al final, \u00e9s a dir, despr\u00e9s del cos del bucle, cosa que significa que el bucle do-while es recorrer\u00e0, una vegada, com a m\u00ednim, encara que no es compleixi la condici\u00f3.</p> <p>Sintaxi</p> <pre><code>do {\n    // ... instruccions...\n} while(condicio);\n</code></pre> <p>Exemple: Preguntar per una clau fins que s'introdueixi la correcta</p> <pre><code>let auxclau;\ndo { \n    auxclau=prompt(\"introdueix la clau \",\"bunyol\")\n} while (auxclau!==\"Aquestaeslaclau\")\nconsole.log(\"Has encertat la clau\");\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#instruccions-break-i-continue","title":"7.4 Instruccions BREAK i CONTINUE","text":"<p>En els bucles for, while i do-while es poden utilitzar les instruccions break i continue per modificar el comportament del bucle.</p> <p>La instrucci\u00f3 \"break\" dins d'un bucle fa que aquest s'interrompi immediatament, tot i que no s'hagi executat encara el bucle complet. En arribar la instrucci\u00f3, el programa es continua desenvolupant immediatament a continuaci\u00f3 del final del bucle.</p> <p>Exemple: Pregunta per la clau i permetre tres respostes incorrectes</p> <pre><code>let auxclau=true;\nlet numvegades = 0;\n// Mentre no introdueixi la clau i no es posi Cancelar\nwhile (auxclau !== \"an\u00f2nim\" &amp;&amp; auxclau) { \n    auxclau=prompt(\"Introdueix la clau \",\"\");\n    numvegades ++;\n    if (numvegades === 3) \n        break;}\nif (auxclau==\"SuperClau\"{ \n    console.log(\"La clau \u00e9s correcta\");\n}\nelse{ \n    console.log(\"La clave no es correcta correcta\");\n}\n</code></pre> <p>L'efecte que t\u00e9 la instrucci\u00f3 \"continue\" en un bucle \u00e9s el de fer retornar a la seq\u00fc\u00e8ncia d'execuci\u00f3 a la cap\u00e7alera del bucle, tornant a executar la condici\u00f3 o a incrementar els \u00edndexs quan sigui un bucle for. Aix\u00f2 permet saltar-se recorreguts del bucle.</p> <p>Exemple: Presenta tots els n\u00fameros parells del 0 al 50 excepte els que siguin m\u00faltiples de 3</p> <pre><code>let i;\nfor (i=2; i&lt; = 50; i+=2){ \n    if ((i%3)===0) \n        continue;    \n    console.log(i);}\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#funcions","title":"8 Funcions","text":"<p>Una funci\u00f3 \u00e9s un conjunt d'instruccions que s'agrupen sota un nom de funci\u00f3. S'executa nom\u00e9s quan \u00e9s cridada pel seu nom en el codi del programa. La trucada provoca l'execuci\u00f3 de les ordres que cont\u00e9.</p> <p>Les funcions s\u00f3n molt importants per diversos motius:</p> <ul> <li>Ajuden a estructurar els programes per fer-los el seu codi m\u00e9s comprensible i m\u00e9s f\u00e0cil de modificar.</li> <li>Permeten repetir l'execuci\u00f3 d'un conjunt d'ordres totes les vegades que sigui necessari sense necessitat d'escriure de nou les instruccions.</li> </ul> <p>Una funci\u00f3 consta de les parts b\u00e0siques seg\u00fcents:</p> <ul> <li>Un nom de funci\u00f3.</li> <li>Els par\u00e0metres passats a la funci\u00f3 separats per comes i entre par\u00e8ntesis.</li> <li>Les claus d'inici i final de la funci\u00f3.</li> <li>Des de Javascript ES6, es poden definir valors per defecte per als par\u00e0metres.</li> </ul> <p>Sintaxi de la definici\u00f3 d'una funci\u00f3</p> <pre><code>function nomfuncio(par\u00e0metre1, par\u00e0metre2=valorPorDefecte...) {\n    // instruccions si la funci\u00f3 retorna algun valor hi afegim:\nreturn valor;\n}\n</code></pre> <p>Sintaxi de la crida a una funci\u00f3</p> <pre><code>// La funci\u00f3 s'executa sempre que s'executi la sent\u00e8ncia.\nvalorRetornat=nomfuncio(par\u00e0m1, par\u00e0m2...);\n</code></pre> <p>\u00c9s important entendre la difer\u00e8ncia entre definir una funci\u00f3 i anomenar-la:</p> <ul> <li>Definir una funci\u00f3 \u00e9s simplement especificar el seu nom i definir quines accions realitzar\u00e0 en el moment en qu\u00e8 sigui invocada, mitjan\u00e7ant la paraula reservada function.</li> <li>Per cridar a una funci\u00f3 cal especificar el seu nom i introduir els par\u00e0metres que volem que utilitzi. Aquesta trucada es pot efectuar en una l\u00ednia d'ordres o b\u00e9 a la dreta d'una sent\u00e8ncia d'assignaci\u00f3 en el cas que la funci\u00f3 retorni algun valor a causa de l'\u00fas de la instrucci\u00f3 return.</li> </ul> <p>La definici\u00f3 d'una funci\u00f3 es pot realitzar en qualsevol lloc del programa, per\u00f2 es recomana fer-ho al principi del codi o en un fitxer \"js\" que contingui funcions.</p> <p>La crida a una funci\u00f3 es realitzar\u00e0 quan sigui necessari, \u00e9s a dir, quan es demani l'execuci\u00f3 de les instruccions que hi ha dins d'ella.</p> <p>Exemple: funcions que retorna la suma de dos valors que es passen per par\u00e0metres i que escriuen el nom del professor.</p> <pre><code>// Definicions de les funcions\nfunction suma (a,b){\n    // Aquesta funci\u00f3 retorna un valor\n    return a+b;\n}\n// Aquesta funci\u00f3 mostra un text, per\u00f2 no retorna un valor\nfunction profe (){\n    console.log(\"El professor \u00e9s molt bo\");\n    // VIUS: aix\u00f2 \u00e9s un exemple, per\u00f2 rara vegada es realitza en una funci\u00f3 real\n}\n// Codi que s'executa\nlet op1=5, op2=25;\nlet resultado;\n// Cridada a funci\u00f3\nresultat=suma(op1,op2);\n// Cridada a funci\u00f3\nconsole.log (op1+\"+\"+op2+\"=\"+resultat);\n// Cridada a funci\u00f3\nprofe()\n</code></pre> <p>Atenci\u00f3:</p> <p>Recordeu que dins de les funcions rara vegada s'utilitzen funcions d'entrada/sortida. El 99.9% de les vegades simplement processen l'entrada per par\u00e0metres i retornen un valor.</p> <p>Des de Javascript ES6, les funcions suporten els anomenats par\u00e0metres REST.</p> <p>Els par\u00e0metres REST s\u00f3n un conjunt de par\u00e0metres que s'emmagatzemen com a vector en un \"par\u00e0metre final\" nomenclat amb ... nomParametre. Aix\u00f2 ens permet manejar la funci\u00f3 sense haver de controlar el nom de par\u00e0metres amb els quals aquesta \u00e9s anomenada.</p> <p>Important: nom\u00e9s l'\u00faltim par\u00e0metre pot ser REST.</p> <p>Exemple:</p> <pre><code>function provaParREST(a, b, ...mesParametres) {\n    console.log(\"a: \"+a+\" b: \"+ b + \" altres: \" + mesParametres);\n}\nprovaParREST(\"param1\", \"param1\", \"param3\", \"param4\", \"param5\")\n</code></pre> <p>Info</p> <p>Per saber m\u00e9s dels par\u00e0metres REST</p> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Funciones/parametros_rest</p>"},{"location":"Moduls/DWEC/UT02.html#funcions-fletxa-(arrow-functions)","title":"9 Funcions fletxa (arrow functions)","text":"<p>Una funci\u00f3 fletxa (arrow function) \u00e9s una alternativa compacta a l'\u00fas de funcions tradicionals.</p> <ul> <li>Aquest tipus de funcions tenen les seves limitacions i han de ser utilitzades nom\u00e9s en alguns contextos on siguin \u00fatils.</li> <li>No s\u00f3n adequades per ser utilitzades com a m\u00e8todes.</li> </ul> <p>Suporta diverses formes de sintaxi, a continuaci\u00f3 indiquem les m\u00e9s t\u00edpiques:</p> <ul> <li>(parametre1, parametre2, ...) =&gt; {sentencias}</li> <li>() =&gt; {sentencias}</li> <li>par\u00e0metre =&gt; sent\u00e8ncia</li> </ul> <p>De vegades, s\u00f3n utilitzats amb la funci\u00f3 \"map\" dels arrays. Aquesta funci\u00f3 crea un nou vector format per l'aplicaci\u00f3 d'una funci\u00f3 a cadascun dels seus elements:</p> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Array/map</p> <p>Tamb\u00e9 \u00e9s molt \u00fatil amb la funci\u00f3 \"redueix\" dels arrays. Aquesta funci\u00f3 executa una \"funci\u00f3 reductora\" sobre cada element del vector, retornant un \u00fanic valor.</p> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Array/reduce</p> <p>Exemple:</p> <pre><code>let noms = ['Biel', 'Tofol', 'Franciaina'];\nconsole.log(noms.map(nom =&gt; nom.length));\n// Mostra el vector amb els valors [5, 4, 5]\nlet sumaNoms= noms.reduce((acumulador, element) =&gt; {\n    return acumulador + element.length;\n}, 0);\n// Mostra la suma de la longitud dels noms\nconsole.log(sumaNoms);\n</code></pre> <p>Per saber-ne m\u00e9s:</p> <p>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Funciones/Arrow_functions</p>"},{"location":"Moduls/DWEC/UT02.html#classes-a-javascript","title":"10 Classes a Javascript","text":"<p>Javascript ES6 permet una millor definici\u00f3 de classes que en anteriors versions de Javascript.</p> <p>Mitjan\u00e7ant la paraula reservada \"class\", permet definir classes, m\u00e8todes, atributs, etc...</p> <p>Recorda que els objectes a Javascript es guarden com a refer\u00e8ncies de mem\u00f2ria. En apartats anteriors parlem de com clonar arrays i objectes.R</p> <p>Exemple:</p> <pre><code> class Punt {  \n    //Constructor de la classe\n    constructor ( pX , pY ){ \n        this.pX = pX;    \n        this.pY = pY; \n    }  \n    // M\u00e8tode est\u00e0tic per calcular dist\u00e0ncia entre dos punts\n    static distancia ( a , b) { \n        const dx = a.pX - b.pX;\n        const dy = a.pY - b.pY;\n\n        return Math.sqrt ( dx * dx + dy * dy );  \n    }  \n    // M\u00e8tode indicat per ser usat com a getter\n    get coordX() { \n        return this.pX;\n    }  \n    // M\u00e8tode normal\n    retornaXperY () { \n        return this.pX * this.pY;  \n    }\n}\nlet p1 = new Punt( 5, 5);\nlet p2 = new Punt( 10, 10);\n// Cridada m\u00e8tode est\u00e0tic\nconsole.log (Punt.distancia(p1, p2));\n// Cridada m\u00e8tode normal\nconsole.log (p1.retornaXperY()); \n// Com que \u00e9s un getter, es pot fer servir com una propietat\nconsole.log (p1.coordX);\n</code></pre> <p>Per saber-ne m\u00e9s: https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Classes</p>"},{"location":"Moduls/DWEC/UT02.html#m\u00e9s-coses-interessants-de-javascript-es6","title":"11 M\u00e9s coses interessants de Javascript ES6","text":"<p>Aquest document pret\u00e9n ser una simple guia i no podem incloure totes les novetats de Javascript ES6, per\u00f2 des d'aqu\u00ed enllacem les m\u00e9s interessants per si voleu ampliar:</p> <ul> <li>Iteradors i generadors<ul> <li>https://developer.mozilla.org/es/docs/Web/JavaScript/Guide/Iterators_and_Generators</li> </ul> </li> <li>Operadors de propagaci\u00f3 (spread)<ul> <li>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Operadores/Spread_operator</li> </ul> </li> <li>Plantilles de cadenes de text (template strings)<ul> <li>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/template_strings</li> </ul> </li> <li>For ... of<ul> <li>https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Sentencias/for...of</li> </ul> </li> <li>Tail Call Optimization (fa m\u00e9s segures funcions)<ul> <li>https://hackernoon.com/es6-tail-call-optimization-43f545d2f68b</li> </ul> </li> </ul> <p>Aqu\u00ed teniu altres refer\u00e8ncies a noves caracter\u00edstiques de Javascript ES6</p> <p>https://github.com/lukehoban/es6features</p>"},{"location":"Moduls/DWEC/UT02.html#introducci\u00f3-a-la-manipulaci\u00f3-del-dom","title":"12 Introducci\u00f3 a la manipulaci\u00f3 del DOM","text":"<p>Per tal de facilitar la realitzaci\u00f3 de petits exercicis, incloem uns primers conceptes de manipulaci\u00f3 del DOM (Document Object Model). Coneixent la id d'algun objecte HTML existent a la p\u00e0gina podem canviar les seves propietats.</p> <p>Quan volem canviar una propietat d'un objecte present en el document, utilitzem el seu ID (nom \u00fanic que defineix un element) i el m\u00e8tode \"document.getElementById()\" per accedir a l'element en si.</p> <p>Exemple:</p> <p>Per canviar una imatge amb id 'matrix', accedim a l'element i modifiquem la propietat src :</p> <p><code>document.getElementById('matrix').src = \"mt05.jpg\";</code></p> <p>Aix\u00f2 es pot usar per a qualsevol propietat existent en qualsevol objecte HTML.</p> <p>Una funci\u00f3 Javascript gen\u00e8rica per canviar una imatge seria:</p> <pre><code>function canviarImatge (id, rutaImatge) {\n    document.getElementById(id).src=rutaImatge;\n}\n</code></pre>"},{"location":"Moduls/DWEC/UT02.html#_1","title":"Material te\u00f2ric","text":""},{"location":"Moduls/DWEC/UT02.html#material-addicional","title":"13 Material addicional","text":"<p>[1] Curs de Git a Udacity</p> <p>https://www.udacity.com/course/how-to-use-git-and-github--ud775</p> <p>[2] \u00das de la \"Consola Web\"</p> <p>https://developer.mozilla.org/en-US/docs/Tools/Web_Console</p> <p>[1] Javascript Mozilla Developer https://developer.mozilla.org/es/docs/Web/JavaScript</p> <p>[2] Javascript ES6 W3C https://www.w3schools.com/js/js_es6.asp</p> <p>A continuaci\u00f3 oferim en ordre alfab\u00e8tic el llistat d'autors que han fet aportacions a aquest document:</p> <ul> <li>Folgado Galache, Laura</li> <li>Garc\u00eda Barea, Sergi</li> <li>Sastre i Flexas, F. Xavier</li> </ul>"},{"location":"Moduls/DWEC/UT02.html#bibliografia","title":"Bibliografia","text":""},{"location":"Moduls/DWEC/UT02.html#autors-(en-ordre-alfab\u00e8tic)","title":"Autors (en ordre alfab\u00e8tic)","text":""},{"location":"Moduls/DWEC/UT03.html","title":"Material te\u00f2ric","text":""},{"location":"Moduls/DWEC/UT03.html#ut03-model-dobjectes-predefinits-a-javascript","title":"UT03 Model d\u2019objectes predefinits a JavaScript.","text":""},{"location":"Moduls/DWEC/UT03.html#1-objectes-de-mes-alt-nivell-a-javascript","title":"1.- Objectes de m\u00e9s alt nivell a Javascript.","text":"<p>Introducci\u00f3</p> <p>Anam a aprofundir en els objectes b\u00e0sics i de m\u00e9s alt nivell de JavaScript. Aquests objectes, els trobareu en pr\u00e0cticament la majoria d'aplicacions que faceu amb JavaScript, per la qual cosa ser\u00e0 fonamental, que tingui molt clares les caracter\u00edstiques i diferents funcionalitats que aquests objectes li aportaran a les seves aplicacions.</p> <p>Una p\u00e0gina web, \u00e9s un document HTML que ser\u00e0 interpretat pels navegadors de forma gr\u00e0fica, per\u00f2 que tamb\u00e9 ha de permetre'n l'acc\u00e9s al codi font.</p> <p>El Model d'Objectes del Document (DOM), permet veure el mateix document d'una altra manera, descrivint el contingut del document com un conjunt d'objectes, sobre els quals un programa de Javascript pot interactuar.</p> <p>Segons el W3C, el Model d'Objectes del Document \u00e9s una interf\u00edcie de programaci\u00f3 d'aplicacions (API), per a documents v\u00e0lids HTML i ben constru\u00efts XML. Defineix l\u2019estructura l\u00f2gica dels documents, i la manera com s\u2019accedeixen i es manipulen.</p> <p>Ara que ja has vist en la unitat anterior, els fonaments de la programaci\u00f3, anem a aprofundir una mica m\u00e9s pel que fa als objectes, que podrem col\u00b7locar en la majoria dels nostres documents.</p> <p>Definim com a objecte, una entitat amb una s\u00e8rie de propietats que defineixen el seu estat, i uns m\u00e8todes (funcions), que actuen sobre aquestes propietats.</p> <p>La forma d\u2019accedir a una propietat d\u2019un objecte \u00e9s la seg\u00fcent:</p> <p><code>nomObjecte.propietat</code></p> <p>La forma d\u2019accedir a un m\u00e8tode d\u2019un objecte \u00e9s la seg\u00fcent:</p> <p><code>nomObjecte.metode([par\u00e0metres opcionals])</code> </p> <p>Tamb\u00e9 podem referenciar una propietat d\u2019un objecte, pel seu \u00edndex en la creaci\u00f3. Els \u00edndexs comencen per 0.</p> <p>En aquesta unitat, ens enfocarem en objectes d'alt nivell, que trobar\u00e0s freq\u00fcentment en les teves aplicacions de JavaScript: window, location, navigator i document. L'objectiu, no \u00e9s nom\u00e9s indicar-te les nocions b\u00e0siques perqu\u00e8 puguis comen\u00e7ar a realitzar tasques senzilles, sin\u00f3 tamb\u00e9, el preparar-te per aprofundir en les propietats i m\u00e8todes, gestors d'esdeveniments, etc. que trobar\u00e0s en unitats posteriors.</p> <p>Nom\u00e9s veurem les propietats b\u00e0siques, i els m\u00e8todes dels objectes esmentats anteriorment.</p> <p>Et mostrem aqu\u00ed el gr\u00e0fic del model d'objectes d'alt nivell, per a tots els navegadors que permetin fer servir JavaScript.</p> <p></p> <p>\u00c9s molt important que tinguis aquest gr\u00e0fic en ment perqu\u00e8 ha de ser la guia al llarg de tota aquesta unitat.</p> <p>Alerta</p> <p>En aquesta unitat no parlarem de l'\u00fas de frames ja que el seu \u00fas est\u00e0 totalment desaconsellat per motius d'accessibilitat i usabilitat, per la qual cosa et recomanem no usar-los.</p>"},{"location":"Moduls/DWEC/UT03.html#11-objecte-window","title":"1.1.- Objecte window.","text":"Everaldo Coelho\u00a0(GNU/GPL) <p>En la jerarquia d'objectes, tenim a la part superior l'objecte window.</p> <p>Aquest objecte est\u00e0 situat justament aqu\u00ed, perqu\u00e8 \u00e9s el contenidor principal de tot el contingut que es visualitza al navegador. Tan aviat com s'obre una finestra (window) al navegador, fins i tot encara que no s'hi carregui cap document, aquest objecte window ja estar\u00e0 definit en mem\u00f2ria.</p> <p>A m\u00e9s de la secci\u00f3 de contingut de l\u2019objecte window, que \u00e9s justament on es carregaran els documents, el camp d\u2019influ\u00e8ncia d\u2019aquest objecte, abasta tamb\u00e9 les dimensions de la finestra, aix\u00ed com tot el que envolta l\u2019\u00e0rea de contingut: les barres de despla\u00e7ament, barra d\u2019eines, barra d\u2019estat, etc.</p> <p>Com es veu en el gr\u00e0fic de la jerarquia d'objectes, sota l'objecte window tenim altres objectes com el navigator, screen, history, location i l'objecte document. Aquest objecte document ser\u00e0 el que contindr\u00e0 tota la jerarquia d\u2019objectes, que tinguem dins la nostra p\u00e0gina HTML.</p> <p></p> <p>Atenci\u00f3</p> <p>Atenci\u00f3 En els navegadors m\u00e9s moderns, els usuaris tenen la possibilitat d'obrir les p\u00e0gines tant en noves pestanyes dins d'un navegador, com en noves finestres de navegador. Per a JavaScript tant les finestres de navegador, com les pestanyes, s\u00f3n tots dos objectes window.</p> <p>Acc\u00e9s a propietats i m\u00e8todes.</p> <p>Per accedir a les propietats i m\u00e8todes de l'objecte window, ho podrem fer de diferents formes, depenent m\u00e9s del nostre estil, que de requeriments sint\u00e0ctics. Aix\u00ed, la forma m\u00e9s l\u00f2gica i comuna de realitzar aquesta refer\u00e8ncia, inclouria l\u2019objecte window tal com es mostra en aquest exemple:</p> <pre><code> window.nombrePropietat  \n window.nomM\u00e9todo([par\u00e0metres])\n</code></pre> <p>Com pots veure, els par\u00e0metres van entre corxets, indicant que s\u00f3n opcionals i que dependran del m\u00e8tode al qual estem cridant.</p> <p>Un objecte window tamb\u00e9 es podr\u00e0 referenciar mitjan\u00e7ant la paraula self, quan estem fent la refer\u00e8ncia des del propi document contingut en aquesta finestra:</p> <pre><code> self.nombrePropietat  \n self.nomM\u00e9todo([par\u00e0metres])\n</code></pre> <p>Podrem fer servir qualsevol de les dues refer\u00e8ncies anteriors, per\u00f2 intentarem deixar la paraula reservada self, per a scripts m\u00e9s complexos en qu\u00e8 tinguem m\u00faltiples marcs i finestres.</p> <p>At\u00e8s que l'objecte window sempre estar\u00e0 present quan executem els nostres scripts, podrem ometre'l, en refer\u00e8ncies als objectes dins d'aquesta finestra. Aix\u00ed que, si escrivim:</p> <pre><code> nomPropietat  \n nomM\u00e9todo([par\u00e0metres])\n</code></pre> <p>Tamb\u00e9 funcionaria sense cap problema, perqu\u00e8 s'assumeix que aquestes propietats o m\u00e8todes, s\u00f3n de l'objecte de m\u00e9s jerarquia (l'objecte window) en el qual ens trobem.</p> <p>Cites per pensar</p> <p>\"Nom\u00e9s tancant les portes darrere d'un mateix, s'obren finestres cap al pervenir.\"</p> <p>SAGAN, Fran\u00e7oise.</p>"},{"location":"Moduls/DWEC/UT03.html#111-gestio-de-finestres","title":"1.1.1.- Gesti\u00f3 de finestres.","text":"Everaldo Coelho\u00a0(GNU/GPL) <p>Un script no crear\u00e0 mai la finestra principal d'un navegador. \u00c9s l'usuari, qui realitza aquesta tasca obrint una URL al navegador o un arxiu des del men\u00fa d'obrir. Per\u00f2 tanmateix, un script que estigui executant-se en una de les finestres principals del navegador, si que podr\u00e0 crear o obrir noves sub-finestres.</p> <p>El m\u00e8tode que genera una nova finestra \u00e9s window.open(). Aquest m\u00e8tode cont\u00e9 fins a tres par\u00e0metres, que defineixen les caracter\u00edstiques de la nova finestra: la URL del document a obrir, el nom d'aquesta finestra i la seva aparen\u00e7a f\u00edsica (tamany, color,etc.).</p> <p>Per exemple, si considerem la seg\u00fcent instrucci\u00f3 que obre una nova finestra d\u2019una mida determinada i amb el contingut d\u2019un document HTML:</p> <p><code>let subVentana = window.open(\"nueva.html\", \"nova\", \"height=800, width=600\");</code></p> <p>L'important d'aquesta instrucci\u00f3, \u00e9s l'assignaci\u00f3 que hem fet en la variable subVentana. D'aquesta manera podrem al llarg del nostre codi, referenciar a la nova finestra des de l'script original de la finestra principal. Per exemple, si volgu\u00e9ssim tancar la nova finestra des del nostre script, simplement haur\u00edem de fer: subVentana.</p> <p>Aqu\u00ed si que cal especificar subVentana, ja que si escriv\u00edssim window.close(), self.close() o close() estar\u00edem intentant tancar la nostra pr\u00f2pia finestra (pr\u00e8via confirmaci\u00f3), per\u00f2 no la subVentana que creiem en els passos anteriors.</p> <p>Vegeu el seg\u00fcent exemple que permet obrir i tancar una sub-finestra:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"content-type\" content=\"text/html; charset = utf-8\"&gt;\n    &lt;title&gt;Apertura i Tancament de Finestres&lt;/title&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        const inicialitzar = () =&gt; {\n            document.getElementById(\"crear-finestra\").onclick = crearNova;\n            document.getElementById(\"tancar-finestra\").onclick = tancarNova;\n        }\n\n        let novaFinestra;\n\n        const crearNova = () =&gt; {\n            novaFinestra = window.open(\"https://docencia.xaviersastre.cat\", \"\", \"height = 400,width = 800\");\n        }\n\n        const tancarNova = () =&gt; {\n            if (novaFinestra) {\n                novaFinestra.close();\n                novaFinestra = null;\n            }\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body onLoad=\"inicialitzar()\"&gt;\n&lt;h1&gt; Obrim i tanquem finestres&lt;/h1&gt;\n&lt;form&gt;\n    &lt;input type=\"button\" id=\"crear-finestra\" value=\"Crear Nova Finestra\"&gt;\n    &lt;input type=\"button\" id=\"tancar-finestra\" value=\"Tancar Nova Finestra\"&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/DWEC/UT03.html#112-propietats-i-metodes","title":"1.1.2.- Propietats i m\u00e8todes.","text":"<p>L'objecte window representa una finestra oberta en un navegador. Si un document cont\u00e9 marcs (\\&lt;frame&gt; o \\&lt;iframe&gt;), el navegador crea un objecte window per al document HTML, i un objecte window addicional per a cada marc.</p> quinn.anya\u00a0CC BY-SA <p>Propietats de l\u2019objecte Window</p> Propietat Descripci\u00f3 closed Retorna un valor Boolean indicant quan una finestra ha estat tancada o no. defaultStatus Ajusta o retorna el valor per defecte de la barra d\u2019estat d\u2019una finestra. document Retorna l\u2019objecte document per a la finestra. frames Retorna un arrelament de tots els marcs (inclosos iframes) de la finestra actual. history Retorna l\u2019objecte history de la finestra. length Retorna el nombre de frames (incloent-hi iframes) que hi ha a dins d'una finestra. location Retorna la Localitzaci\u00f3 de l'objecte d'urL del fitxer. name Ajusta o retorna el nom d\u2019una finestra. navigator Retorna l\u2019objecte navigator d\u2019una finestra. opener Retorna la refer\u00e8ncia a la finestra que va obrir la finestra actual. parent Retorna la finestra pare de la finestra actual. self Retorna la finestra actual. estatus Ajusta el text de la barra d\u2019estat d\u2019una finestra. <p>M\u00e8todes de l\u2019objecte Window</p> M\u00e8tode Descripci\u00f3 alert() Mostra una finestra emergent d'alerta i un bot\u00f3 d'acceptar. blur() Elimina el focus de la finestra actual. clearInterval() Reseteja el cron\u00f2metre ajustat amb setInterval(). setInterval() Crida a una funci\u00f3 o avalua una expressi\u00f3 en un interval especificat (en mil\u00b7lisegons). close() Tanca la finestra actual. confirm() Mostra una finestra emergent amb un missatge, un bot\u00f3 d'acceptar i un bot\u00f3 de cancel\u00b7lar. focus() Col\u00b7loca el focus en la finestra actual. open() Obre una nova finestra de navegaci\u00f3. prompt() Mostra una finestra de di\u00e0leg per introduir dades. <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte Window i totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Window.</p>"},{"location":"Moduls/DWEC/UT03.html#12-objecte-location","title":"1.2.- Objecte location.","text":"<p>L\u2019objecte location cont\u00e9 informaci\u00f3 referent a la URL actual.</p> <p>Aquest objecte, \u00e9s part de l\u2019objecte window i hi accedeixen a trav\u00e9s de la propietat window.location.</p> chrisdlugosz\u00a0CC BY <p>L\u2019objecte location cont\u00e9 informaci\u00f3 referent a la URL actual.</p> <p>Aquest objecte, \u00e9s part de l\u2019objecte window i hi accedeixen a trav\u00e9s de la propietat window.location.</p> <p>Propietats de l\u2019objecte Location</p> Propietat Descripci\u00f3 hash Cadena que cont\u00e9 el nom de l\u2019enlla\u00e7, dins la URL. host Cadena que cont\u00e9 el nom del servidor i el n\u00famero del port, dins la URL. hostname Cadena que cont\u00e9 el nom de domini del servidor (o l'adre\u00e7a IP), dins la URL. href Cadena que cont\u00e9 la URL completa. pathname Cadena que cont\u00e9 el cam\u00ed al recurs, dins la URL. port Cadena que cont\u00e9 el n\u00famero de port del servidor, dins la URL. protocol Cadena que cont\u00e9 el protocol utilitzat (incloent-hi els dos punts), dins de la URL. search Cadena que cont\u00e9 la informaci\u00f3 passada en una trucada a un script, dins de la URL. <p>M\u00e8todes de l\u2019objecte Location</p> assign() Carrega un nou document. reload() Torna a carregar la URL especificada en la propietat href de l\u2019objecte location. replaci() Reempla\u00e7a l'historial actual mentre carrega la URL especificada en cadenaURL. <p>Cites per pensar</p> <p>\"Mil rutes s'allunyen de la fi escollida, per\u00f2 n'hi ha una que hi arriba.\"</p> <p>MONTAIGNE, Michel de.</p> <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte Location i totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Location.</p>"},{"location":"Moduls/DWEC/UT03.html#13-objecte-navigator","title":"1.3.- Objecte navigator.","text":"<p>Aquest objecte navigator, cont\u00e9 informaci\u00f3 sobre el navegador que estem utilitzant quan obrim una URL o un document local.</p> Caitlinator\u00a0CC BY <p>Propietats de l\u2019objecte Navigator</p> Propietat Descripci\u00f3 appCodeName Cadena que cont\u00e9 el nom en codi del navegador. appName Cadena que cont\u00e9 el nom del client. appVersion Cadena que cont\u00e9 informaci\u00f3 sobre la versi\u00f3 del client. cookieEnabled Determina si les cookies estan o no habilitades al navegador. platform Cadena amb la plataforma sobre la qual s'est\u00e0 executant el programa client. userAgent Cadena que cont\u00e9 la cap\u00e7alera completa de l\u2019agent enviada en una petici\u00f3 HTTP. Cont\u00e9 la informaci\u00f3 de les propietats appCodeName i appVersion. <p>M\u00e8todes de l\u2019objecte Navigator</p> M\u00e8tode Descripci\u00f3 javaEnabled() Retorna true si el client permet la utilitzaci\u00f3 de Java, en cas contrari, retorna false. <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte Navigator i totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Navigator.</p>"},{"location":"Moduls/DWEC/UT03.html#14-objecte-document","title":"1.4.- Objecte document.","text":"infilmity\u00a0CC BY-NC-SA <p>Cada document carregat en una finestra del navegador, ser\u00e0 un objecte de tipus document.</p> <p>L\u2019objecte document proporciona als scripts, l\u2019acc\u00e9s a tots els elements HTML dins d\u2019una p\u00e0gina.</p> <p>Aquest objecte forma part a m\u00e9s de l'objecte window, i pot ser accedit a trav\u00e9s de la propietat window.document o directament document (ja que podem ometre la refer\u00e8ncia a la window actual).</p> <p>Col\u00b7leccions de l'objecte Document</p> Col\u00b7lecci\u00f3 Descripci\u00f3 anchors[] \u00c9s un arrelament que cont\u00e9 tots els hiperenlla\u00e7os del document. forms[] \u00c9s un arrelament que cont\u00e9 tots els formularis del document. images[modifica] \u00c9s un arrelament que cont\u00e9 totes les imatges del document. links[] \u00c9s un arrelament que cont\u00e9 tots els enlla\u00e7os del document. <p>Propietats de l\u2019objecte Document</p> Propietat Descripci\u00f3 cookie Retorna tots els noms/valors de les cookies en el document. domain Cadena que cont\u00e9 el nom de domini del servidor que va carregar el document. referrer Cadena que cont\u00e9 la URL del document des del qual arribem al document actual. title Retorna o ajusta el t\u00edtol del document. URL Retorna la URL completa del document. <p>Propietats de l\u2019objecte Document</p> M\u00e8tode Descripci\u00f3 close() Tanca el flux obert pr\u00e8viament amb document. getElementById() Per accedir a un element identificat per l\u2019id escrit entre par\u00e8ntesis. getElementsByName() Per accedir als elements identificats per l\u2019atribut name escrit entre par\u00e8ntesis. getElementsByTagName() Per accedir als elements identificats pel tag o l\u2019etiqueta escrita entre par\u00e8ntesis. open() Obre el flux d\u2019escriptura per poder utilitzar document.write() o document.writeln en el document. write() Per poder escriure expressions HTML o codi de JavaScript dins d\u2019un document. writeln() El mateix que write() per\u00f2 afegeix un salt de l\u00ednia al final de cada instrucci\u00f3. <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte Document totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Document.</p>"},{"location":"Moduls/DWEC/UT03.html#2-objectes-nadius-a-javascript","title":"2.- Objectes nadius a Javascript.","text":"<p>Aquests objectes, fan refer\u00e8ncia al treball amb cadenes de text, operacions matem\u00e0tiques, nombres, valors booleans i treball amb dates i hores.</p> <p>Aquest li ser\u00e0 molt \u00fatil per realitzar la seva aplicaci\u00f3 ja que haur\u00e0 de realitzar diferents tipus de conversions de dades, treballar intensivament amb cadenes i per suposat amb dates i hores.</p> <p>Tot i que no hem vist com crear objectes, s\u00ed que ja hem donat unes pinzellades al que s\u00f3n els objectes, propietats i m\u00e8todes.</p> <p>En aquesta secci\u00f3 vam fer una ullada a objectes que s\u00f3n nadius a JavaScript, aix\u00f2 \u00e9s, all\u00f2 que JavaScript ens dona, llestos per a la seva utilitzaci\u00f3 en la nostra aplicaci\u00f3.</p> <p>Enxampem una ullada als objectes String, Math, Number, Boolean i Date.</p> <p>Cites per pensar</p> <p>\"Si m'haguessin fet objecte seria objectiu, per\u00f2 em van fer subjecte.\"</p> <p>BERGAM\u00cdN, Jos\u00e9. </p> <p>Reflexiona</p> <p>T'has parat a pensar alguna vegada que el nostre m\u00f3n est\u00e0 envoltat d'objectes arreu?</p> <p>Saps que pr\u00e0cticament, tots aquests objectes tenen algunes propietats com poden ser mida, color, pes, tipus de corrent que fan servir, temperatura, tipus de combustible, etc.?</p> <p>Saps que tamb\u00e9 podem realitzar accions amb aquests objectes, com poden ser encendre, apagar, moure, obrir, tancar, pujar temperatura, baixar temperatura, marcar nombre, penjar, etc.?</p>"},{"location":"Moduls/DWEC/UT03.html#21-objecte-string","title":"2.1.- Objecte String.","text":"faccig\u00a0(CC BY-SA) <p>Una cadena (string) consta d'un o m\u00e9s car\u00e0cters de text, envoltats de cometes simples o dobles; dona igual que usem ja que es considerar\u00e0 una cadena de tota manera, per\u00f2 en alguns casos resulta m\u00e9s c\u00f2mode l'\u00fas d'unes o altres.</p> <p>Recorda que de com definir les cadenes ja hem parlat i que no se t'oblidin les plantilles de cadenes que et fan molt f\u00e0cil la seva composici\u00f3 en comptes d'estar concatenant que de vegades resulta engreixat.</p> <p>Car\u00e0cters especials o car\u00e0cters d\u2019escapament.</p> <p>La forma en qu\u00e8 es creen les cadenes a JavaScript, fa que quan haguem d'emprar certs car\u00e0cters especials en una cadena de text, haguem d'escapar-los, emprant el s\u00edmbol \\ seguit del car\u00e0cter.</p> <p>Veiem aqu\u00ed un llistat dels car\u00e0cters especials o d'escapament a JavaScript:</p> <p>Car\u00e0cters d\u2019escapament i especials en JavaScript</p> S\u00edmbols Explicaci\u00f3 \\\" Cometes dobles. \\' Comella simple. \\ Barra inclinada. \\b Reculada. \\t Tabulador. \\n Nova l\u00ednia. \\r Salt de l\u00ednia. \\f Avan\u00e7 de p\u00e0gina. <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte String i totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte String.</p>"},{"location":"Moduls/DWEC/UT03.html#211-propietats-i-metodes-de-lobjecte-string","title":"2.1.1.- Propietats i m\u00e8todes de l\u2019objecte String.","text":"Josep Ma. Rosell\u00a0(CC BY) <p>Per crear un objecte String ho podrem fer de les formes:</p> <pre><code>let cadena1 = new String('Primera cadena');  \nlet cadena2 = \"Segona cadena\";  \nlet cadena3 = 'Tercera cadena';  \nlet totesCadenes = '${cadena1} \\- ${cadena2} \\- ${cadena3}';\n</code></pre> <p>\u00c9s a dir, cada vegada que tinguem una cadena de text, en realitat \u00e9s un objecte String que t\u00e9 propietats i m\u00e8todes:</p> <pre><code> cadena.propietat;  \n cadena.metode( [par\u00e0metres] );\n</code></pre> <p>Propietats de l\u2019objecte String</p> Propietat Descripci\u00f3 length Cont\u00e9 la longitud d\u2019una cadena. <p>M\u00e8todes de l\u2019objecte String</p> M\u00e8todes Descripci\u00f3 charAt() Retorna el car\u00e0cter especificat per la posici\u00f3 que s\u2019indica entre par\u00e8ntesis. charCodeAt() Retorna l\u2019Unicode del car\u00e0cter especificat per la posici\u00f3 que s\u2019indica entre par\u00e8ntesis. concat() Uneix una o m\u00e9s cadenes i retorna el resultat d'aquesta uni\u00f3. fromCharCode() Converteix valors Unicode a car\u00e0cters. indexOf() Retorna la posici\u00f3 de la primera ocurr\u00e8ncia del car\u00e0cter buscat a la cadena. lastIndexOf() Retorna la posici\u00f3 de l'\u00faltima ocurr\u00e8ncia del car\u00e0cter buscat a la cadena. match() Busca una coincid\u00e8ncia entre una expressi\u00f3 regular i una cadena i retorna les coincid\u00e8ncies o null si no ha trobat res. replaci() Busca una subcadena a la cadena i la reempla\u00e7a per la nova cadena especificada. search() Busca una subcadena a la cadena i retorna la posici\u00f3 on es va trobar. slice() Extreu una part de la cadena i retorna una nova cadena. split() Divideix una cadena en un arrelament de subcadenes. substr() Extreu els car\u00e0cters d\u2019una cadena, comen\u00e7ant en una determinada posici\u00f3 i amb el nombre de car\u00e0cters indicat. substring() Extreu els car\u00e0cters d\u2019una cadena entre dos \u00edndexs especificats. toLowerCase() Converteix una cadena en min\u00fascules. toUpperCase() Converteix una cadena en maj\u00fascules. <p>\u00c9s un est\u00e0ndard de codificaci\u00f3 de car\u00e0cters dissenyat per facilitar el tractament inform\u00e0tic, transmissi\u00f3 i visualitzaci\u00f3 correcta de textos realitzats en diferents idiomes, de tal manera que els car\u00e0cters especials de cada idioma siguin mostrats correctament independentment de la nostra configuraci\u00f3 d\u2019idioma local. El terme Unicode prov\u00e9 dels tres objectius perseguits: universalitat, uniformitat i unicitat.</p>"},{"location":"Moduls/DWEC/UT03.html#22-objecte-math","title":"2.2.- Objecte Math.","text":"conskeptical\u00a0(CC BY-NC-SA) <p>Ja vam veure anteriorment algunes funcions, que ens permetien convertir cadenes a diferents formats num\u00e8rics (parseInt, parseFloat). A banda d'aquestes funcions, disposem d'un objecte Math a JavaScript, que ens permet realitzar operacions matem\u00e0tiques. L'objecte Math no posseeix un constructor (no ens permetr\u00e0 per tant crear o inst\u00e0nciar nous objectes que siguin de tipus Math), per la qual cosa per anomenar les seves propietats i m\u00e8todes, ho farem anteposant Math a la propietat o el m\u00e8tode. Per exemple:</p> <pre><code>let x = Math.PI;             // Retorna el n\u00famero PI.  \nlet i = Math.sqrt( 16);      // Retorna l'arrel quadrada de 16\\.\n</code></pre> <p>Propietats de l\u2019objecte Math</p> Propietat Descripci\u00f3 E Retorna el n\u00famero Euler (aproximadament 2.718). LN2 Retorna el logaritme neperi\u00e0 de 2 ( aproximadament 0.693). LN10 Retorna el logaritme neperi\u00e0 de 10 ( aproximadament 2.302). LOG2E Retorna el logaritme base 2 d'E ( aproximadament 1.442). LOG10E Retorna el logaritme base 10 d'E ( aproximadament 0.434). PI Retorna el n\u00famero PI ( aproximadament 3.14159). SQRT2 Retorna l'arrel quadrada de 2 ( aproximadament 1.414). <p>M\u00e8todes de l\u2019objecte Math</p> M\u00e8tode Descripci\u00f3 abs( x) Retorna el valor absolut de x. acos( x) Retorna l\u2019arc de x, en radians. asin( x) Retorna l\u2019arcos\u00e8 de x, en radians. atan( x) Retorna l'arcotangent de x, en radians amb un valor entre -PI/2 i PI/2. atan2( i,x) Retorna l'arcotangent del quocient dels seus arguments. ceil( x) Retorna el n\u00famero x arrodonit a l\u2019alta cap al seg\u00fcent sencer. cos( x) Retorna el cosin de x (x est\u00e0 en radians). floor( x) Retorna el n\u00famero x arrodonit a la baixa cap a l\u2019anterior sencer. log( x) Retorna el logaritme neperiant (base E) de x. max( x,y,z,...,n) Retorna el nombre m\u00e9s alt dels que es passen com a par\u00e0metres. min( x,y,z,...,n) Retorna el nombre m\u00e9s baix dels que es passen com a par\u00e0metres. pow( x,y) Retorna el resultat de x elevat a i. random() Retorna un n\u00famero a l'atzar entre 0 i 1. round( x) Arrodoneix x a l\u2019enter m\u00e9s proper. sense( x) Retorna el si de x (x est\u00e0 en radians). sqrt( x) Retorna l\u2019arrel quadrada de x. tan( x) Retorna la tangent d'un angle."},{"location":"Moduls/DWEC/UT03.html#23-objecte-number","title":"2.3.- Objecte Number.","text":"Darwin BellCC BY <p>L'objecte Number es fa servir molt rarament, ja que per a la major part dels casos, JavaScript satisf\u00e0 les necessitats del dia a dia amb els valors num\u00e8rics que emmagatzemem en variables. Per\u00f2 l'objecte Number cont\u00e9 alguna informaci\u00f3 i capacitats molt interessants per a programadors m\u00e9s seriosos.</p> <p>El primer, \u00e9s que l\u2019objecte Number cont\u00e9 propietats que ens indiquen el rang de nombres suportats en el llenguatge. El nombre m\u00e9s alt \u00e9s 1.79E + 308; el nombre m\u00e9s baix \u00e9s 2.22E-308. Qualsevol nombre m\u00e9s gran que el nombre m\u00e9s alt, ser\u00e0 considerat com a infinit positiu, i si \u00e9s m\u00e9s petit que el nombre m\u00e9s baix, ser\u00e0 considerat infinit negatiu.</p> <p>Els n\u00fameros i els seus valors estan definits internament a JavaScript, com a valors de doble precisi\u00f3 i de 64 bits.</p> <p>L\u2019objecte Number, \u00e9s un objecte embolcall per a valors num\u00e8rics primitius.</p> <p>Els objectes Number s\u00f3n creats amb new Number().</p> <p>Propietats de l\u2019objecte Number</p> Propietat Descripci\u00f3 constructor Retorna la funci\u00f3 que va crear l'objecte Number. MAX_VALUE Retorna el n\u00famero m\u00e9s alt disponible a JavaScript. MIN_VALUE Retorna el nombre m\u00e9s petit disponible a JavaScript. NEGATIVE_INFINITY Representa infinit negatiu (es retorna en cas d'overflow). POSITIVE_INFINITY Representa infinit positiu (es retorna en cas d'overflow). prototype Permet afegir les nostres pr\u00f2pies propietats i m\u00e8todes a un objecte. <p>M\u00e8todes de l\u2019objecte Number</p> toExponential( x) Converteix un n\u00famero a la seva notaci\u00f3 exponencial. toFixed( x) Formatea un nombre amb x digits decimals despr\u00e9s del punt decimal. toPrecision(x) Formatea un n\u00famero a la longitud x. toString() Converteix un objecte Number en una cadena. Si se\u2019n posa 2 com a par\u00e0metre es mostrar\u00e0 el n\u00famero en binari. Si se\u2019n posa 8 com a par\u00e0metre es mostrar\u00e0 el n\u00famero en octal. Si se\u2019n posa 16 com a par\u00e0metre es mostrar\u00e0 el n\u00famero en hexadecimal. valueOf() Retorna el valor primitiu d\u2019un objecte Number. <p>\u00c9s un sistema num\u00e8ric en base 2 (usa 2 s\u00edmbols) i utilitza els d\u00edgits 0 i 1 com a representaci\u00f3 num\u00e8rica.</p> <p>\u00c9s un sistema num\u00e8ric en base 8 (usa 8 s\u00edmbols) i utilitza els d\u00edgits del 0 al 7 com a representaci\u00f3 num\u00e8rica.</p> <p>\u00c9s un sistema num\u00e8ric en base 16 (usa 16 s\u00edmbols) i utilitza els d\u00edgits del 0 a 9 i les lletres de l'A a la F com a representaci\u00f3 num\u00e8rica.</p>"},{"location":"Moduls/DWEC/UT03.html#24-objecte-boolean","title":"2.4.- Objecte Boolean.","text":"<p>L'objecte Boolean s'utilitza per convertir un valor no l\u00f2gic, a un valor l\u00f2gic (true o false).</p> Darwin Bell\u00a0(GNU/GPL) <p>Propietats de l\u2019objecte Boolean</p> constructor Retorna la funci\u00f3 que va crear l'objecte Boolean. prototype Et permetr\u00e0 afegir propietats i m\u00e8todes a un objecte. <p>M\u00e8todes de l\u2019objecte Boolean</p> toString() Converteix un valor Boolean a una cadena i retorna el resultat. valueOf() Retorna el valor primitiu d\u2019un objecte Boolean. <p>Per saber-ne m\u00e9s</p> <p>En el seg\u00fcent enlla\u00e7 podr\u00e0s trobar exemples sobre l'\u00fas de l'objecte Boolean.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Boolean.</p>"},{"location":"Moduls/DWEC/UT03.html#25-objecte-date","title":"2.5.- Objecte Date.","text":"Darwin Bell\u00a0(GNU/GPL) <p>L'objecte Date s'utilitza per treballar amb dates i hores. Els objectes Date es creen amb new Date().</p> <p>Hi ha 4 formes d'inst\u00e0ncia (crear un objecte de tipus Date):</p> <pre><code>let dia1 = new Date();  \nlet dia2 = new Date(milisegundos);  \nlet dia3 = new Date(cadena de Data);  \nlet dia4 = new Date( any, mes, dia, hores, minuts, segons, mil\u00b7lisegons);\n</code></pre> <p>Propietats de l\u2019objecte Date</p> Propietat Descripci\u00f3 constructor Retorna la funci\u00f3 que va crear l'objecte Date. prototype Et permetr\u00e0 afegir propietats i m\u00e8todes a un objecte. <p>M\u00e8todes de l\u2019objecte Date</p> getDate() Retorna el dia del mes (d'1-31). getDay() Retorna el dia de la setmana (de 0-6). getFullYear() Retorna l'any (4 d\u00edgits). getHours() Torna l'hora (de 0-23). getMilliseconds() Retorna els mil\u00b7lisegons (de 0-999). getMinutes() Torna els minuts (de 0-59). getMonth() Torna el mes (de 0-11). getSeconds() Retorna els segons (de 0-59). getTime() Retorna els mil\u00b7lisegons des de mitja nit de l'1 de Gener de 1970. getTimezoneOffset() Retorna la difer\u00e8ncia de temps entre GMT i l'hora local, en minuts. getUTCDate() Retorna el dia del mes en base a l'hora UTC (d'1-31). getUTCDay() Retorna el dia de la setmana en base a l'hora UTC (de 0-6). getUTCFullYear() Retorna l'any en base a l'hora UTC (4 d\u00edgits). setDate() Ajusta el dia del mes de l'objecte (d'1-31). setFullYear() Ajusta l'any de l'objecte (4 d\u00edgits). setHours() Ajusta l'hora de l'objecte (de 0-23)."},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html","title":"Funcions a JavaScript","text":""},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#funcions-a-javascript","title":"Funcions a JavaScript","text":""},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#introduccio","title":"Introducci\u00f3","text":"<p>Les funcions s\u00f3n blocs fonamentals de codi a JavaScript. Permeten agrupar i reutilitzar codi, i s\u00f3n essencials per a la programaci\u00f3 modular, estructurada i funcional.</p> <p>Amplia informaci\u00f3</p> <p>Llegeix l'article Qu\u00e8 \u00e9s una funci\u00f3?.</p> \u00c9s el mateix un par\u00e0metre que un argument? <p>En JavaScript, els termes \"par\u00e0metre\" i \"argument\" sovint es confonen, per\u00f2 tenen significats diferents:</p> <ul> <li> <p>Par\u00e0metre: \u00c9s una variable que es defineix en la declaraci\u00f3 d'una funci\u00f3. Serveix com a marcador de posici\u00f3 per als valors que la funci\u00f3 rebr\u00e0 quan sigui cridada. Per exemple, en la funci\u00f3 seg\u00fcent, <code>x</code> i <code>y</code> s\u00f3n par\u00e0metres:   </p><pre><code>function suma(x, y) {\n    return x + y;\n}\n</code></pre><p></p> </li> <li> <p>Argument: \u00c9s el valor real que es passa a la funci\u00f3 quan aquesta \u00e9s cridada. Els arguments substitueixen els par\u00e0metres definits en la funci\u00f3. Per exemple, en la crida seg\u00fcent, <code>5</code> i <code>3</code> s\u00f3n arguments:     </p><pre><code>let resultat = suma(5, 3);\n</code></pre><p></p> </li> </ul> <p>En resum, els par\u00e0metres s\u00f3n les variables en la definici\u00f3 de la funci\u00f3, mentre que els arguments s\u00f3n els valors que es passen a la funci\u00f3 quan es crida. Espero que aix\u00f2 aclareixi la difer\u00e8ncia! Si tens m\u00e9s preguntes, no dubtis a preguntar.</p> Qu\u00e8 \u00e9s una funci\u00f3? <p>Les funcions ens permeten agrupar l\u00ednies de codi en tasques amb un nom, perqu\u00e8 posteriorment puguem fer refer\u00e8ncia a aquest nom per realitzar tot el que s'agrupi en aquesta tasca.</p> \u00c9s el mateix declarar una funci\u00f3 que executar una funci\u00f3? <p>No.</p> <p>Qu\u00e8 \u00e9s un par\u00e0metre/arguments?</p> <p>Pot tenir una funci\u00f3 m\u00faltiples par\u00e0metres? Quin \u00e9s el l\u00edmit?</p> <p>Hi ha els par\u00e0metres per defecte?</p> <p>En qu\u00e8 consisteix la devoluci\u00f3 o el retorn de valors? Totes les funcions tornen alguna cosa?</p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#parametres-duna-funcio","title":"Par\u00e0metres d'una funci\u00f3","text":"<p>Una caracter\u00edstica notable de JavaScript \u00e9s que no d\u00f3na error si crides a una funci\u00f3 amb m\u00e9s arguments dels que espera. Els arguments addicionals simplement s\u00f3n ignorats.</p> <pre><code>function saludar(nom) {\n\n    console.log(\"Hola, \" + nom);\n\n}\n\nsaludar(\"Joan\", \"extra\"); // \"Hola, Joan\"\n</code></pre> <pre><code>Hola, Joan\n</code></pre> <p>L'ordre dels arguments \u00e9s crucial. Els arguments s'assignen als par\u00e0metres a l'ordre en qu\u00e8 es passen.</p> <p>Javascript, a les funcions, crea un objecte anomenant arguments que t\u00e9 els arguments passats, la posici\u00f3 com a clau i la quantitat d'arguments amb length.</p> <pre><code>function a(){ console.log (arguments)}\n\na(1,2,3);\n</code></pre> <pre><code>[Arguments] { \"0\": 1, \"1\": 2, \"2\": 3 }\n</code></pre> <p>Amplia informaci\u00f3</p> <p>Llegeix l'article Par\u00e0metres d'una funci\u00f3. </p> <p>Quantes maneres hi ha de declarar una funci\u00f3? Hi ha alguna no recomanada?</p> <p>Com executem una funci\u00f3 que no t\u00e9 nom?</p> Qu\u00e8 \u00e9s una funci\u00f3 an\u00f2nima? <p>Llegir apartat Funcions an\u00f2nimes de Funcions</p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#return-en-funcions","title":"Return en funcions","text":"<p>Les funcions poden tenir un valor de retorn o no. Si no s'especifica un return, la funci\u00f3 torna undefined per defecte. Les funcions nom\u00e9s retornen un valor. Si volem retornar-ne m\u00e9s d'un els podem agrupar en arrays o objectes.</p> <p></p><pre><code>function senseRetorn() {\n\n    let missatge = \"Hola\";\n\n}\n\nfunction ambRetorn() {\n\n    let missatge = \"Hola\";\n\n    return missatge;\n\n}\n\nconsole.log(sinRetorno(),conRetorno());\n</code></pre> <pre><code>undefined Hola\n</code></pre><p></p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#invocacio-de-funcions","title":"Invocaci\u00f3 de funcions","text":"<p>En utilitzar par\u00e8ntesis <code>()</code>, invoques a la funci\u00f3. Sense par\u00e8ntesis, fas refer\u00e8ncia a l'objecte que representa la funci\u00f3.</p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#les-funcions-son-objectes","title":"Les funcions s\u00f3n objectes","text":"<p>A JavaScript, les funcions s\u00f3n objectes de primera classe. Aix\u00f2 significa que poden ser assignades a variables, passades com a arguments i tornades per altres funcions.</p> <p></p><pre><code>function multiplicar(x, y) {\n\n    return  x * y;\n\n}\n\nlet operacio =  multiplicar;\n\nconsole.log(operacio(2, 3)); // 6\n</code></pre> <pre><code>6\n</code></pre><p></p> <p>La capacitat de Javascript de tractar les funcions com a objectes us permet facilitar l'\u00fas de funcions de Callback i la programaci\u00f3 funcional, que veurem en el seu cap\u00edtol.</p> <p>Qu\u00e8 \u00e9s un callback?</p> Qu\u00e8 \u00e9s una funci\u00f3 autoexecutable? <p>Una funci\u00f3 autoexecutable \u00e9s una funci\u00f3 en JavaScript que es defineix i s'executa autom\u00e0ticament a l'hora de ser interpretada. La seva estructura caracter\u00edstica permet executar una funci\u00f3 immediatament sense necessitat de trucar-la expl\u00edcitament despr\u00e9s de la seva definici\u00f3.</p> <p>La sintaxi b\u00e0sica d'una funci\u00f3 autoexecutable \u00e9s la seg\u00fcent:</p> <p></p><pre><code>(function () {\n    // Codi de la funci\u00f3\n})();\n</code></pre> O b\u00e9: <pre><code>(() =&gt; {\n    // Codi de la funci\u00f3\n})();\n</code></pre> Exemple amb par\u00e0metres: <pre><code>(function(nom) {\n    console.log(`Hola, ${nom}!`);\n})(\"Joan\");\n</code></pre><p></p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#declaracio-de-funcions","title":"Declaraci\u00f3 de funcions","text":"<p>Les funcions poden ser declarades de manera expl\u00edcita. Aquest tipus de declaraci\u00f3 es carrega en temps de compilaci\u00f3, permetent-ne l'\u00fas abans de la declaraci\u00f3 (hoisting). </p><pre><code>console.log(suma(2, 3)); // 5\n\nfunction suma(a, b) {\nreturn a + b;\n}\n</code></pre> <pre><code>5\n</code></pre><p></p> <p>Les funcions tamb\u00e9 es poden definir mitjan\u00e7ant expressions. Aquest tipus de funci\u00f3 savalua en temps dexecuci\u00f3 i no suporta hoisting.</p> <p></p><pre><code>let restar = function(a, b) {\n  return a - b;\n};\n\nconsole.log(restar(5, 3)); // 2\n</code></pre> <pre><code>2\n</code></pre><p></p> <p>Les expressions de funci\u00f3 poden ser an\u00f2nimes, \u00e9s a dir, no tenir nom. Com que no tenen nom, no es poden invocar a si mateixes, per la qual cosa no es poden fer recursives. Si no tenen nom i s\u00f3n assignades a una variable amb una expressi\u00f3 de funci\u00f3, adquireixen el nom de la variable. Se solen utilitzar com a funcions de \u201cCallback\u201d, encara que no \u00e9s el m\u00e9s recomanable perqu\u00e8 despr\u00e9s compliquen la tra\u00e7abilitat dels errors. </p><pre><code>let dividir = function(a, b) {\n    return a / b;\n};\nconsole.log(dividir(10, 2)); // 5\n</code></pre> <pre><code>5\n</code></pre><p></p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#funcions-fletxa","title":"Funcions fletxa","text":"<p>Una arrow function \u00e9s una manera m\u00e9s abreujada/simplificada d'escriure funcions an\u00f2nimes. Aix\u00f2 les fa m\u00e9s complicades d'entendre fins que t'acostumes a fer servir. Aquestes s\u00f3n les seves principals caracter\u00edstiques:</p> <ul> <li>Sintaxi Concisa: No cal utilitzar la paraula clau function, return, ni utilitzar claus {} si la funci\u00f3 nom\u00e9s t\u00e9 una expressi\u00f3.</li> <li>Constants per Defecte: Es recomana declarar funcions fletxa utilitzant const en lloc de var o let, ja que un cop assignades, no poden ser reassignades a un altre valor.</li> <li>No tenen aquest propi: A difer\u00e8ncia de les funcions regulars, les funcions fletxa no tenen el seu propi context this. Al seu lloc, hereten el this del context en qu\u00e8 van ser creades.</li> <li>No s\u00f3n hoisted: les funcions fletxa no s\u00f3n elevades (hoisted) com les funcions tradicionals. Aix\u00f2 significa que no poden ser invocades abans de la seva declaraci\u00f3 al codi.</li> <li>\u00das de {} i return: Si la funci\u00f3 fletxa t\u00e9 m\u00e9s d'una l\u00ednia de codi o m\u00e9s d'una instrucci\u00f3, cal utilitzar claus {} i la paraula clau return expl\u00edcitament.</li> <li>No poden ser m\u00e8todes: Com que no tenen el seu propi this, no poden ser utilitzades com a m\u00e8todes en objectes.</li> </ul> <p>A continuaci\u00f3 us mostro com passar d'una funci\u00f3 an\u00f2nima a una funci\u00f3 fletxa:</p> <pre><code>// Funci\u00f3 tradicional\n\n(function (a){\n    return a + 100;\n});\n\n// Desglossament de la funci\u00f3 fletxa\n\n// 1. Elimina la paraula \"function\" i col\u00b7loca la fletxa entre l'argument i el claud\u00e0tor d'obertura.\n\n(a) =&gt; {\n    return a + 100;\n}\n\n// 2. Treu els claud\u00e0tors del cos i la paraula \"return\" \u2014 el return est\u00e0 impl\u00edcit.\n\n(a) =&gt; a + 100;\n\n// 3. Suprimeix els par\u00e8ntesis dels arguments\n\na =&gt; a + 100;\n</code></pre>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#bibliografia","title":"Bibliografia","text":"<ul> <li>Ministeri d'Educaci\u00f3 i Formaci\u00f3 Professional</li> <li>https://xxjcaxx.github.io/libro_dwec/desarrollofrontend.html</li> <li>Lloc web de Marcos Ruiz</li> </ul>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html","title":"Treball amb matrius en Javascript","text":""},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#treball-amb-matrius-en-javascript","title":"Treball amb matrius en Javascript","text":"<p>Hi ha diversos m\u00e8todes d'array en JavaScript que poden ser molt \u00fatils per treballar amb arrays de manera eficient i clara. Aqu\u00ed tens alguns dels m\u00e9s comuns i \u00fatils:</p>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#1-map","title":"1. <code>map()</code>","text":"<p>Crea un nou array amb els resultats de cridar una funci\u00f3 per a cada element de l'array original.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst dobles = numeros.map(num =&gt; num * 2);\nconsole.log(dobles); // Sortida: [2, 4, 6, 8, 10]\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#2-filter","title":"2. <code>filter()</code>","text":"<p>Crea un nou array amb tots els elements que compleixen una condici\u00f3 especificada.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst parells = numeros.filter(num =&gt; num % 2 === 0);\nconsole.log(parells); // Sortida: [2, 4]\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#3-foreach","title":"3. <code>forEach()</code>","text":"<p>Executa una funci\u00f3 per a cada element de l'array. No retorna un nou array.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nnumeros.forEach(num =&gt; console.log(num * 2));\n// Sortida: 2, 4, 6, 8, 10 (cada n\u00famero en una l\u00ednia separada)\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#4-some","title":"4. <code>some()</code>","text":"<p>Comprova si almenys un element de l'array compleix una condici\u00f3 especificada. Retorna un boole\u00e0.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst hiHaParells = numeros.some(num =&gt; num % 2 === 0);\nconsole.log(hiHaParells); // Sortida: true\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#5-every","title":"5. <code>every()</code>","text":"<p>Comprova si tots els elements de l'array compleixen una condici\u00f3 especificada. Retorna un boole\u00e0.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst totsPositius = numeros.every(num =&gt; num &gt; 0);\nconsole.log(totsPositius); // Sortida: true\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#6-find","title":"6. <code>find()</code>","text":"<p>Retorna el primer element de l'array que compleix una condici\u00f3 especificada. Si no troba cap element, retorna <code>undefined</code>.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst primerParell = numeros.find(num =&gt; num % 2 === 0);\nconsole.log(primerParell); // Sortida: 2\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#7-findindex","title":"7. <code>findIndex()</code>","text":"<p>Retorna l'\u00edndex del primer element de l'array que compleix una condici\u00f3 especificada. Si no troba cap element, retorna <code>-1</code>.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst indexPrimerParell = numeros.findIndex(num =&gt; num % 2 === 0);\nconsole.log(indexPrimerParell); // Sortida: 1\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#8-sort","title":"8. <code>sort()</code>","text":"<p>Ordena els elements de l'array i retorna l'array ordenat. Per defecte, ordena els elements com a cadenes de text.</p> <pre><code>const numeros = [5, 3, 8, 1, 2];\nnumeros.sort((a, b) =&gt; a - b);\nconsole.log(numeros); // Sortida: [1, 2, 3, 5, 8]\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#9-concat","title":"9. <code>concat()</code>","text":"<p>Combina dos o m\u00e9s arrays i retorna un nou array.</p> <pre><code>const array1 = [1, 2, 3];\nconst array2 = [4, 5, 6];\nconst combinat = array1.concat(array2);\nconsole.log(combinat); // Sortida: [1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#10-slice","title":"10. <code>slice()</code>","text":"<p>Retorna una c\u00f2pia superficial d'una porci\u00f3 de l'array en un nou array.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst part = numeros.slice(1, 3);\nconsole.log(part); // Sortida: [2, 3]\n</code></pre>"},{"location":"Moduls/DWEC/_DWEC2425.html","title":"Desenvolupament web en entorn client - DAW","text":""},{"location":"Moduls/DWEC/_DWEC2425.html#desenvolupament-web-en-entorn-client-daw","title":"Desenvolupament web en entorn client - DAW","text":"<p>Dins del cicle de DAW, el segon curs t\u00e9 3 m\u00f2duls \u00edntimament relacionats i que, tots plegats, serveixen per fer una web completament. Tenim un m\u00f2dul per programar el servidor (backend): 'DWES', un per al client (frontend): 'DWEC' i un per a la interf\u00edcie d'usuari: 'DIW'. El m\u00f2dul DWEC, per tant, ha de suposar que hi ha un servidor funcionant correctament, aix\u00ed com el m\u00f2dul de DWES suposa que alg\u00fa far\u00e0 el frontend. A m\u00e9s, a DWEC no ens vam preocupar massa de la part est\u00e8tica, tot i que \u00e9s inevitable construir HTML i reaccionar a les accions de l'usuari. Per tant, aquest m\u00f2dul se centra en com recollir dades del servidor, mostrar-les i fer alguna cosa amb ells. At\u00e8s que aquest m\u00f2dul \u00e9s gaireb\u00e9 tot 'Javascript', la manera de tractar-lo m\u00e9s intensament i en tots els aspectes del frontend \u00e9s fer una 'SPA' (ja veurem qu\u00e8 \u00e9s aix\u00f2). \u00c9s important recalcar que vam veure un subconjunt molt petit de totes les maneres diferents que hi ha per enfocar un projecte de frontend i que no t\u00e9 perqu\u00e8 ser el millor en tots els casos. L' alumnat d' aquests cicles ha d' afegir a la seva rutina personal alguna manera d' estar al dia de les novetats del desenvolupament web. Per exemple, seguir la MDN en xarxes, /r/javascript a Reddit, Canals de Youtube, Hacker News, la W3C...</p> <p>Podem separar el curs en dos grans blocs amb els temes seg\u00fcents:</p> <ul> <li>Javascript \"vainilla\":</li> <li>Programaci\u00f3 Javascript per al frontend</li> <li>Testing</li> <li>Comunicaci\u00f3 amb el servidor<ul> <li>Promeses</li> <li>Fetch</li> </ul> </li> <li>Programaci\u00f3 moderna a Javascript<ul> <li>Vite</li> <li>CI/CD</li> <li>Desplegament</li> <li>Observables i programaci\u00f3 reactiva</li> <li>Programaci\u00f3 funcional</li> </ul> </li> <li>Frameworks</li> <li>Typescript</li> <li>Angular</li> <li>Components, rutes, serveis...</li> <li>Formularis</li> </ul> <p>At\u00e8s que tot est\u00e0 m\u00e9s ben documentat a les webs oficials de cada tecnologia, a MDN o W3CSchool i altres, no cal ser exhaustiu a cada secci\u00f3. Ens aturarem en les parts m\u00e9s interessants i representatives del frontend amb exemples pr\u00e0ctics i intentant sempre aplicar les millors pr\u00e0ctiques.</p> <p>Actualment hi ha poca gent que programi directament a Javascript \"Vanilla\". En un m\u00f2dul per a formaci\u00f3 professional ens podem preguntar si no seria millor ensenyar directament un framework. I tamb\u00e9 si no seria millor ensenyar el framework \"de moda\". Els motius per al fet d'explicar els fonaments a Javascript sense frameworks o moltes biblioteques i de seguir amb Angular han estat reflexionats amb altres professors i amb tutors a empreses. D'una banda hi ha el fet que cal con\u00e8ixer la base i no dependre d'una llibreria en concret. Per\u00f2 \u00e9s que l'\u00fas de frameworks, tot i ser massiu, tamb\u00e9 t\u00e9 la seva controv\u00e8rsia. Con\u00e8ixer els fonaments i les bones pr\u00e0ctiques \u00e9s millor que saber programar r\u00e0pidament una cosa comercial. Pel que fa al framework, Angular \u00e9s usat massivament per gent que no publicita la seva feina en xarxes socials. La majoria d'empreses de la zona l'utilitzen. A m\u00e9s, \u00e9s un framework totalment actualitzat a les metodologies modernes, que for\u00e7a a tenir una disciplina i con\u00e8ixer arquitectures, patrons de disseny i bones pr\u00e0ctiques.</p> <p>Desenvolupament frontend</p>"},{"location":"Moduls/DWEC/ajax.html","title":"Comunicaci\u00f3n con el servidor","text":""},{"location":"Moduls/DWEC/ajax.html#comunicacion-con-el-servidor","title":"Comunicaci\u00f3n con el servidor","text":""},{"location":"Moduls/DWEC/ajax.html#ajax-en-javascript","title":"AJAX en JavaScript","text":"<p>Lectura recomendada: https://developer.mozilla.org/es/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data</p> <p>AJAX, acr\u00f3nimo de \"Asynchronous JavaScript and XML\", es un conjunto de tecnolog\u00edas que permite a las aplicaciones web enviar y recibir datos del servidor de manera as\u00edncrona, sin necesidad de recargar la p\u00e1gina completa. Esto mejora significativamente el rendimiento y la experiencia del usuario. No obstante tiene unos inconvenientes que tambi\u00e9n hay que mencionar. De esta manera, originalmente, AJAX se compone de: </p> <ol> <li>JavaScript: El lenguaje de programaci\u00f3n que controla la interacci\u00f3n y el comportamiento din\u00e1mico de la p\u00e1gina web.</li> <li>XHTML y CSS: Utilizados para estructurar y estilizar la p\u00e1gina web.</li> <li>XML o JSON: Formatos de datos que se env\u00edan y reciben desde el servidor.</li> <li>XMLHttpRequest: El objeto que permite a JavaScript realizar solicitudes HTTP de manera as\u00edncrona.</li> </ol> <p>Esta es la definici\u00f3n original de AJAX, no obstante, aunque se puede mantener el nombre a la metodolog\u00eda, algunas tecnolog\u00edas han mejorado. Ahora, en general, se usa <code>JSON</code> y en vez de <code>XMLHttpRequest</code> se usa <code>fetch</code>. </p> <p>Con AJAX, JavaScript puede enviar o solicitar datos en formato XML o JSON al servidor sin recargar la p\u00e1gina. El servidor responde a estas solicitudes, generalmente a trav\u00e9s de una API REST o similar. El cliente, usando JavaScript, procesa la respuesta y actualiza el contenido de la p\u00e1gina din\u00e1micamente.</p>"},{"location":"Moduls/DWEC/ajax.html#ejemplo-basico-de-ajax","title":"Ejemplo B\u00e1sico de AJAX","text":""},{"location":"Moduls/DWEC/ajax.html#enviar-una-solicitud-ajax-con-xmlhttprequest","title":"Enviar una solicitud AJAX con <code>XMLHttpRequest</code>","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;AJAX Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;button id=\"loadData\"&gt;Load Data&lt;/button&gt;\n    &lt;div id=\"result\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n        document.getElementById('loadData').addEventListener('click', function() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', 'https://api.example.com/data', true);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {\n                    var data = JSON.parse(xhr.responseText);\n                    document.getElementById('result').innerText = data.message;\n                }\n            };\n            xhr.send();\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En este ejemplo, cuando se hace clic en el bot\u00f3n \"Load Data\", se env\u00eda una solicitud <code>GET</code> al servidor. La respuesta, que se espera est\u00e9 en formato JSON, se procesa y se muestra en el <code>div</code> con el ID \"result\".</p> <p>Este ejemplo se puede considerar anticuado, a partir de ES6 es mejor hacerlo con fetch y promesas. No obstante, es interesante analizar este c\u00f3digo y entender c\u00f3mo funciona. Adem\u00e1s, fetch no permite un control a tan bajo nivel de todas las etapas de una petici\u00f3n, por lo que sigue siendo necesario para hacer barras de progreso, cancelar peticiones... </p>"},{"location":"Moduls/DWEC/ajax.html#beneficios-de-ajax","title":"Beneficios de AJAX","text":"<ul> <li>Mejora del Rendimiento: Al no recargar la p\u00e1gina completa, solo se actualizan las partes necesarias, lo que resulta en una experiencia de usuario m\u00e1s r\u00e1pida y fluida.</li> <li>Experiencia de Usuario Mejorada: Las actualizaciones din\u00e1micas permiten una interacci\u00f3n m\u00e1s r\u00e1pida y eficiente.</li> </ul>"},{"location":"Moduls/DWEC/ajax.html#problemas-de-ajax","title":"Problemas de AJAX","text":"<ul> <li>SEO: Las p\u00e1ginas que utilizan AJAX pueden ser m\u00e1s dif\u00edciles de indexar por los motores de b\u00fasqueda, ya que gran parte del contenido se carga de manera din\u00e1mica.</li> <li>Complejidad en el Desarrollo: El desarrollo de aplicaciones AJAX puede ser m\u00e1s complicado debido a la necesidad de manejar las solicitudes as\u00edncronas y actualizar el DOM din\u00e1micamente.</li> </ul>"},{"location":"Moduls/DWEC/ajax.html#apis","title":"APIs","text":"<p>La comunicaci\u00f3n entre el cliente y el servidor en una aplicaci\u00f3n web puede llevarse a cabo de varias maneras. Dos enfoques comunes incluyen:</p> <ol> <li>Solicitudes de HTML: JavaScript puede solicitar un HTML est\u00e1tico o din\u00e1mico y luego insertar el resultado en la p\u00e1gina.</li> <li>Interacci\u00f3n con APIs: JavaScript puede enviar y recibir datos en formato XML o JSON a trav\u00e9s de una API.</li> </ol> <p>Las APIs (Interfaz de Programaci\u00f3n de Aplicaciones) permiten que diferentes software se comuniquen entre s\u00ed. Existen varios tipos de APIs, cada una con sus propias caracter\u00edsticas y casos de uso:</p>"},{"location":"Moduls/DWEC/ajax.html#tipos-de-apis","title":"Tipos de APIs","text":"<ol> <li> <p>SOAP (Simple Object Access Protocol):     - Es un protocolo basado en XML.    - Conocido por su complejidad y sobrecarga debido a la utilizaci\u00f3n de XML.    - No est\u00e1 optimizado para HTTP.</p> </li> <li> <p>REST (Representational State Transfer):    - Basado en HTTP y utiliza URLs.    - Aprovecha los verbos HTTP (GET, POST, PUT, DELETE, PATCH).    - Es popular por su simplicidad y eficiencia.</p> </li> <li> <p>GraphQL:    - Permite consultas m\u00e1s granulares y controladas.    - Env\u00eda un JSON con la consulta en la URL.    - Independiente del protocolo HTTP.    - Utiliza un lenguaje de definici\u00f3n de esquemas (IDL).</p> </li> <li> <p>gRPC (gRPC Remote Procedure Calls):    - Utiliza HTTP/2, permitiendo una comunicaci\u00f3n m\u00e1s eficiente.    - Ofrece soporte para m\u00faltiples lenguajes de programaci\u00f3n.</p> </li> </ol>"},{"location":"Moduls/DWEC/ajax.html#api-rest","title":"API REST","text":"<p>Las APIs REST utilizan las peticiones HTTP como verbos del protocolo:</p> <ul> <li>GET: Recuperar recursos.</li> <li>POST: Crear nuevos recursos.</li> <li>PUT: Actualizar recursos existentes.</li> <li>DELETE: Eliminar recursos.</li> <li>PATCH: Actualizar parcialmente recursos.</li> </ul> <p>Caracter\u00edsticas de las APIs REST:</p> <ul> <li>Utilizan rutas URL para identificar los recursos.</li> <li>Los c\u00f3digos de respuesta HTTP indican el estado de la solicitud (por ejemplo, 200 para \u00e9xito, 404 para no encontrado, 500 para error del servidor).</li> <li>Los datos (payload) pueden enviarse en XML o JSON.</li> <li>Una API que sigue estrictamente las caracter\u00edsticas REST se denomina RESTful.</li> </ul> <p>Ejemplo de API REST:</p> <p>Supongamos una API para gestionar una colecci\u00f3n de libros:</p> <ul> <li><code>GET /books</code>: Recupera la lista de libros.</li> <li><code>POST /books</code>: Crea un nuevo libro.</li> <li><code>GET /books/:id</code>: Recupera un libro espec\u00edfico.</li> <li><code>PUT /books/:id</code>: Actualiza un libro espec\u00edfico.</li> <li><code>DELETE /books/:id</code>: Elimina un libro espec\u00edfico.</li> </ul>"},{"location":"Moduls/DWEC/ajax.html#api-graphql","title":"API GraphQL","text":"<p>GraphQL es una alternativa a REST que permite realizar consultas m\u00e1s precisas y espec\u00edficas. En lugar de varias URLs, una sola URL acepta consultas en JSON.</p> <p>Caracter\u00edsticas de las APIs GraphQL:</p> <ul> <li>Permiten m\u00e1s control y granularidad en las consultas.</li> <li>Las peticiones son f\u00e1ciles de entender y leer para los humanos.</li> <li>No est\u00e1n limitadas a HTTP.</li> <li>Utilizan el IDL (Schema Definition Language) para definir el esquema.</li> </ul> <p>Ejemplo de API GraphQL:</p> <p>Consulta para obtener el t\u00edtulo y autor de un libro espec\u00edfico:</p> <pre><code>{\n  book(id: \"1\") {\n    title\n    author\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#sdks-kits-de-desarrollo-de-software","title":"SDKs (Kits de Desarrollo de Software)","text":"<p>Las APIs pueden ser complejas, y herramientas como Firebase, MongoDB Realm, y Supabase ofrecen SDKs que simplifican tareas comunes como la autenticaci\u00f3n de usuarios y las consultas avanzadas.</p> <p>Caracter\u00edsticas de los SDKs:</p> <ul> <li>Facilitan la interacci\u00f3n con las APIs al proporcionar bibliotecas preconstruidas.</li> <li>Ahorra tiempo en la programaci\u00f3n de la comunicaci\u00f3n entre el cliente y el servidor.</li> <li>No son est\u00e1ndar y dependen del proveedor del servicio.</li> </ul> <p>Nota: Aunque los SDKs pueden simplificar mucho el trabajo, en este curso evitaremos su uso para centrarnos en aprender los fundamentos de las APIs.</p>"},{"location":"Moduls/DWEC/ajax.html#webs-spa-single-page-application","title":"Webs SPA (Single Page Application)","text":"<p>Las aplicaciones de una sola p\u00e1gina (SPA) utilizan AJAX para cargar y actualizar contenido sin necesidad de recargar la p\u00e1gina completa. Esto permite crear aplicaciones web m\u00e1s r\u00e1pidas y con una experiencia de usuario similar a las aplicaciones de escritorio.</p>"},{"location":"Moduls/DWEC/ajax.html#ejemplo-de-spa-con-ajax","title":"Ejemplo de SPA con AJAX","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;SPA Example&lt;/title&gt;\n    &lt;style&gt;\n        .hidden { display: none; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;nav&gt;\n        &lt;button onclick=\"loadPage('home')\"&gt;Home&lt;/button&gt;\n        &lt;button onclick=\"loadPage('about')\"&gt;About&lt;/button&gt;\n        &lt;button onclick=\"loadPage('contact')\"&gt;Contact&lt;/button&gt;\n    &lt;/nav&gt;\n    &lt;div id=\"content\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n        function loadPage(page) {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', page + '.html', true);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {\n                    document.getElementById('content').innerHTML = xhr.responseText;\n                }\n            };\n            xhr.send();\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En este ejemplo, cada bot\u00f3n en la navegaci\u00f3n carga contenido diferente en el <code>div</code> con el ID \"content\" utilizando AJAX. Esto permite que la p\u00e1gina se actualice din\u00e1micamente sin necesidad de recargarla por completo.</p>"},{"location":"Moduls/DWEC/ajax.html#xmlhttprequest-en-javascript","title":"XMLHttpRequest en JavaScript","text":"<p>XMLHttpRequest (XHR) es una API utilizada para enviar y recibir datos entre un cliente web y un servidor. A pesar de su nombre, XMLHttpRequest puede manejar diferentes tipos de datos, aunque en este cap\u00edtulo nos centraremos principalmente en JSON debido a su popularidad en las aplicaciones web modernas.</p>"},{"location":"Moduls/DWEC/ajax.html#inicializacion-y-uso-basico","title":"Inicializaci\u00f3n y Uso B\u00e1sico","text":"<p>Para comenzar a utilizar XMLHttpRequest, primero debemos crear una instancia del objeto <code>XMLHttpRequest</code>.</p> <pre><code>var req = new XMLHttpRequest();\n</code></pre> <p>Una vez creado el objeto, debemos configurar la solicitud utilizando el m\u00e9todo <code>open</code>. Este m\u00e9todo tiene tres par\u00e1metros principales: 1. M\u00e9todo HTTP: El m\u00e9todo de la solicitud, como 'GET' o 'POST'. 2. URL: La URL a la que se env\u00eda la solicitud. 3. As\u00edncrono: Un valor booleano que indica si la solicitud debe ser as\u00edncrona (<code>true</code>) o s\u00edncrona (<code>false</code>). En la mayor\u00eda de los casos, queremos que sea as\u00edncrona para no bloquear la ejecuci\u00f3n del script.</p> <pre><code>req.open('GET', 'http://www.mozilla.org/', true);\n</code></pre> <p>XMLHttpRequest tiene un conjunto de estados que indican el progreso de la solicitud. Estos estados est\u00e1n representados por la propiedad <code>readyState</code> del objeto XHR. Los posibles valores de <code>readyState</code> son: - <code>0</code> (UNSENT): La solicitud no ha sido inicializada. - <code>1</code> (OPENED): Se ha establecido la conexi\u00f3n con el servidor. - <code>2</code> (HEADERS_RECEIVED): Se han recibido los encabezados de la respuesta. - <code>3</code> (LOADING): El cuerpo de la respuesta se est\u00e1 recibiendo. - <code>4</code> (DONE): La solicitud se ha completado y la respuesta est\u00e1 lista.</p> <p>Para realizar alguna acci\u00f3n cuando la solicitud cambie de estado, se utiliza la propiedad <code>onreadystatechange</code>, que se asigna a una funci\u00f3n. Esta funci\u00f3n se ejecutar\u00e1 cada vez que cambie el estado de la solicitud.</p> <pre><code>req.onreadystatechange = function (aEvt) {\n  if (req.readyState == 4) {\n    if (req.status == 200) {\n      console.log(req.responseText);\n    } else {\n      console.log(\"Error loading page\\n\");\n    }\n  }\n};\n</code></pre> <p>Finalmente, enviamos la solicitud al servidor utilizando el m\u00e9todo <code>send</code>. Si estamos enviando datos (por ejemplo, en una solicitud <code>POST</code>), estos se pasan como argumento a <code>send</code>. En una solicitud <code>GET</code>, simplemente pasamos <code>null</code>.</p> <pre><code>req.send(null);\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#ejemplo-completo","title":"Ejemplo Completo","text":"<pre><code>var req = new XMLHttpRequest();\nreq.open('GET', 'http://www.mozilla.org/', true);\nreq.onreadystatechange = function (aEvt) {\n  if (req.readyState == 4) {\n    if (req.status == 200) {\n      console.log(req.responseText);\n    } else {\n      console.log(\"Error loading page\\n\");\n    }\n  }\n};\nreq.send(null);\n</code></pre> <ol> <li> <p>Crear el Objeto XHR:    </p><pre><code>var req = new XMLHttpRequest();\n</code></pre>    Aqu\u00ed se crea una nueva instancia del objeto <code>XMLHttpRequest</code>.<p></p> </li> <li> <p>Configurar la Solicitud:    </p><pre><code>req.open('GET', 'http://www.mozilla.org/', true);\n</code></pre>    Se configura la solicitud para hacer una petici\u00f3n <code>GET</code> a la URL especificada. El tercer par\u00e1metro, <code>true</code>, indica que la solicitud debe ser as\u00edncrona.<p></p> </li> <li> <p>Monitorear Cambios de Estado:    </p><pre><code>req.onreadystatechange = function (aEvt) {\n  if (req.readyState == 4) {\n    if (req.status == 200) {\n      console.log(req.responseText);\n    } else {\n      console.log(\"Error loading page\\n\");\n    }\n  }\n};\n</code></pre>    Se define una funci\u00f3n que se ejecuta cada vez que cambia el estado de la solicitud. Cuando <code>readyState</code> es <code>4</code>, significa que la solicitud se ha completado. Si <code>status</code> es <code>200</code>, significa que la solicitud fue exitosa y se imprime la respuesta en la consola. Si el estado es diferente, se imprime un mensaje de error.<p></p> </li> <li> <p>Enviar la Solicitud:    </p><pre><code>req.send(null);\n</code></pre>    Finalmente, se env\u00eda la solicitud al servidor.<p></p> </li> </ol> <p>Este cap\u00edtulo ha cubierto los conceptos b\u00e1sicos y la implementaci\u00f3n de XMLHttpRequest. En cap\u00edtulos posteriores, exploraremos m\u00e9todos modernos como <code>fetch</code> y la forma en que se integran con las caracter\u00edsticas m\u00e1s recientes de JavaScript, como las promesas y la sintaxis <code>async/await</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#fetch","title":"Fetch","text":"<p>La funci\u00f3n <code>fetch</code> de JavaScript proporciona una manera sencilla y poderosa de realizar solicitudes HTTP. Es similar a <code>XMLHttpRequest</code> (XHR), pero utiliza promesas y tiene una sintaxis m\u00e1s moderna y limpia.</p> <pre><code>(()=&gt;{\nfetch('http://127.0.0.1:5500/datos.json')\n .then(\n   function(response) {\n     if (response.status !== 200) {\n       console.log('Looks like there was a problem. Status Code: ' + response.status);\n       return;     \n     }\n     response.json().then(function(data) {\n       console.log(data);\n     });\n   }\n )\n .catch(function(err) {\n   console.log('Fetch Error : ', err);\n });\n})();\n</code></pre> <p>En este ejemplo, <code>fetch</code> solicita un archivo JSON. Si la respuesta tiene un estado diferente de 200 (OK), se imprime un mensaje de error. Si la respuesta es correcta, se convierte a JSON y se imprime.</p>"},{"location":"Moduls/DWEC/ajax.html#objeto-response","title":"Objeto Response","text":"<p>Si la solicitud tiene \u00e9xito, <code>fetch</code> devuelve un objeto <code>Response</code>, que es un flujo (stream) con varias propiedades y m\u00e9todos \u00fatiles.</p> <pre><code>(()=&gt;{\nfetch('https://github.com/').then(function(response) {\n   console.log(response.headers.get('Content-Type'));\n   console.log(response.headers.get('Date'));\n   console.log(response.status);\n   console.log(response.statusText);\n   console.log(response.type);\n   console.log(response.url);\n});\n})();\n</code></pre> <pre><code>Fetch Error :  TypeError: error sending request for url (http://127.0.0.1:5500/datos.json): error trying to connect: tcp connect error: Connection refused (os error 111)\n    at async mainFetch (ext:deno_fetch/26_fetch.js:170:12)\n    at async fetch (ext:deno_fetch/26_fetch.js:391:7)\n</code></pre> <p>Este ejemplo muestra c\u00f3mo acceder a diferentes propiedades del objeto <code>Response</code>, como los encabezados y el estado de la solicitud.</p>"},{"location":"Moduls/DWEC/ajax.html#guardar-los-datos","title":"Guardar los Datos","text":"<p><code>fetch</code> permite obtener el texto o un objeto de la respuesta. Las funciones <code>response.json()</code> y <code>response.text()</code> devuelven promesas que se resuelven con el contenido adecuado. No es posible usar ambas funciones en una misma petici\u00f3n.</p> <pre><code>(()=&gt;{\nfetch(\"https://dwec-daw-default-rtdb.firebaseio.com/productos.json\")\n       .then(response =&gt; response.json())\n       .then(data =&gt; console.log(data));\n\nfetch(\"https://dwec-daw-default-rtdb.firebaseio.com/productos.json\")\n       .then(response =&gt; response.text())\n       .then(data =&gt; console.log(data));\n})();\n</code></pre> <pre><code>https://github.com/\n</code></pre> <p>En estos ejemplos, se hace una solicitud a una URL y se procesan los datos como JSON en el primer caso y como texto en el segundo.</p>"},{"location":"Moduls/DWEC/ajax.html#encadenar-promesas","title":"Encadenar Promesas","text":"<p>Es posible encadenar promesas para manejar el flujo de la solicitud de manera m\u00e1s estructurada.</p> <pre><code>(()=&gt;{\nfunction showStatus(response) {\n   if (response.status &gt;= 200 &amp;&amp; response.status &lt; 300) {\n     return Promise.resolve(response);\n   } else {\n     return Promise.reject(new Error(response.statusText));\n   }\n}\n\nfunction json(response) { \n  return response.json();  \n}\n\nfetch('datos.json')\n   .then(showStatus)\n   .then(json)\n   .then(function(data) {\n     console.log('Request succeeded with JSON response', data);\n   }).catch(function(error) {\n     console.log('Request failed: ', error);\n   });\n  })();\n</code></pre> <pre><code>{\n  \"error\" : \"Permission denied\"\n}\n</code></pre> <p>En este ejemplo, la funci\u00f3n <code>status</code> verifica si la respuesta es correcta, y la funci\u00f3n <code>json</code> convierte la respuesta en un objeto JSON. Luego, se manejan los datos o se capturan errores seg\u00fan corresponda.</p>"},{"location":"Moduls/DWEC/ajax.html#enviar-datos-con-fetch","title":"Enviar Datos con Fetch","text":""},{"location":"Moduls/DWEC/ajax.html#usar-el-metodo-post","title":"Usar el m\u00e9todo POST","text":"<p>Para enviar datos a un servidor, se puede usar el m\u00e9todo <code>POST</code> con <code>fetch</code>.</p> <pre><code>fetch(url, {\n       method: 'post',\n       headers: {\n         \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n       },\n       body: 'foo=bar&amp;lorem=ipsum'\n     })\n     .then(response =&gt; response.json())\n     .then(function (data) {\n       console.log('Request succeeded with JSON response', data);\n     })\n     .catch(function (error) {\n       console.log('Request failed', error);\n     });\n</code></pre> <p>En este ejemplo, se env\u00edan datos codificados en la URL (formato de formulario) al servidor.</p>"},{"location":"Moduls/DWEC/ajax.html#enviar-json","title":"Enviar JSON","text":"<p>Para enviar datos en formato JSON, se debe configurar el encabezado <code>Content-Type</code> y convertir el objeto de datos a JSON.</p> <pre><code>let datos = {username: 'example'};\n\nfetch(url, {\n       method: 'post',\n       headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n       },\n       body: JSON.stringify(datos)\n     })\n     .then(response =&gt; response.json())\n     .then(function (data) {\n       console.log('Request succeeded with JSON response', data);\n     })\n     .catch(function (error) {\n       console.log('Request failed', error);\n     });\n</code></pre> <p>En este ejemplo, un objeto JavaScript se convierte a JSON y se env\u00eda al servidor.</p>"},{"location":"Moduls/DWEC/ajax.html#uso-de-formdata","title":"Uso de FormData","text":"<p><code>FormData</code> es un objeto predefinido en JavaScript que se utiliza para crear pares clave-valor para enviar formularios mediante <code>XMLHttpRequest</code> o <code>fetch</code>.</p> <pre><code>let formElement = document.getElementById(\"myFormElement\"); // Un formulario HTML\nlet formData = new FormData(formElement); // Constructor de FormData con un formulario\n\nformData.append(\"serialnumber\", serialNumber++); // A\u00f1adir m\u00e1s datos\nformData.append(\"afile\", fileInputElement.files[0]); // A\u00f1adir un archivo\n\nfetch('http://localhost:3000/upload', { method: 'POST', body: formData });\n</code></pre> <p>Este ejemplo muestra c\u00f3mo crear un objeto <code>FormData</code> a partir de un formulario HTML y enviar datos adicionales, incluyendo un archivo, al servidor.</p>"},{"location":"Moduls/DWEC/ajax.html#convertir-formdata-a-json","title":"Convertir FormData a JSON","text":"<p>Para enviar <code>FormData</code> como JSON, se puede convertir a un objeto JavaScript y luego a una cadena JSON.</p> <pre><code>let data = new FormData(form);\nlet body = JSON.stringify(Object.fromEntries(data));\n\nreturn fetch(url, {\n   method: 'POST',\n   headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n   },\n   body\n}).then(response =&gt; response.json());\n</code></pre> <p>En este ejemplo, se convierte <code>FormData</code> en un objeto JSON antes de enviarlo.</p>"},{"location":"Moduls/DWEC/ajax.html#cargar-imagenes-en-segundo-plano","title":"Cargar Im\u00e1genes en Segundo Plano","text":"<p>Es posible cargar im\u00e1genes en segundo plano utilizando <code>fetch</code> y el m\u00e9todo <code>blob</code>.</p> <pre><code>&lt;img src=\"placeholder.png\" alt=\"${name}\"&gt;\n\nfetch(image_url)\n.then(response =&gt; response.status == 200 ? response : Promise.reject(response.status))\n.then(response =&gt; response.blob())\n.then(imageBlob =&gt; {\n   let imageURL = URL.createObjectURL(imageBlob);\n   document.querySelector('img').src = imageURL;\n})\n.catch(error =&gt; console.log(error));\n</code></pre> <p>Este ejemplo muestra c\u00f3mo cargar una imagen en segundo plano y actualizar la fuente de una etiqueta <code>&lt;img&gt;</code> con la URL del <code>blob</code> de la imagen.</p> <p>La funci\u00f3n URL.createObjectURL(blob) es un m\u00e9todo del API de URL en JavaScript que permite crear una URL temporal, de tipo \"blob\", que representa un objeto de datos (Blob o File) en el navegador. Esta URL puede ser utilizada para acceder y manipular el contenido del objeto de datos como si fuera un archivo disponible en una URL normal. </p> <p><code>URL.createObjectURL(blob)</code> crea una URL \u00fanica que representa el objeto <code>Blob</code> (o <code>File</code>). Esta URL es v\u00e1lida mientras el documento que la cre\u00f3 est\u00e9 en memoria, y se puede usar como referencia al contenido del objeto de datos. La URL generada permite acceder y manipular el contenido del <code>Blob</code> como si fuera un archivo remoto. La URL no requiere que los datos sean enviados a un servidor; todo se maneja localmente en el navegador. La URL generada puede ser asignada a elementos HTML, como <code>&lt;img&gt;</code>, <code>&lt;video&gt;</code>, <code>&lt;audio&gt;</code>, o cualquier otro elemento que acepte una URL de recursos. Tambi\u00e9n se puede usar para descargar archivos, mostrar previsualizaciones, o procesar datos de archivos de manera local.</p> <p>Las URLs creadas con <code>URL.createObjectURL(blob)</code> ocupan recursos en el navegador. Para liberar estos recursos cuando ya no se necesite la URL, se debe llamar a <code>URL.revokeObjectURL(url)</code>:</p> <pre><code>const objectURL = URL.createObjectURL(file);\n// Usar la URL...\nURL.revokeObjectURL(objectURL); // Liberar la URL cuando ya no sea necesaria\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#construccion-de-urls","title":"Construcci\u00f3n de URLs","text":"<p><code>fetch</code> puede utilizar URLs construidas din\u00e1micamente. Esto es \u00fatil cuando los par\u00e1metros de la consulta cambian en tiempo de ejecuci\u00f3n.</p> <pre><code>let country = `Saint Vincent &amp; the Grenadines`;\n\nfetch(`/api/cities?country=${country}`);\n//\"/api/cities?country=Saint Vincent &amp; the Grenadines\"\n\nurl = `/api/cities?${new URLSearchParams([['country', country]])}`;\n\nfetch(url);\n//\"/api/cities?country=Saint+Vincent+%26+the+Grenadines\"\n</code></pre> <p>En este ejemplo, se construye una URL con par\u00e1metros de consulta utilizando <code>URLSearchParams</code>, asegur\u00e1ndose de que los caracteres especiales est\u00e9n correctamente codificados.</p> <p>Si usamos el constructor con una URL ya formada nos retorna un objeto URLSearchParams, que es un iterable con los datos:</p> <pre><code>const url = new URL(\"http://example.com/search?query=%40\");\nconst searchParams3 = new URLSearchParams(url.search);\nconsole.log(searchParams3.has(\"query\")); // true\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#websockets","title":"WebSockets","text":"<p>WebSocket es una tecnolog\u00eda que proporciona un canal de comunicaci\u00f3n full-duplex sobre un \u00fanico socket TCP. Es decir, permite establecer una conexi\u00f3n persistente entre el cliente y el servidor, donde ambos pueden enviar y recibir datos en tiempo real. Esto es especialmente \u00fatil para aplicaciones que requieren comunicaci\u00f3n bidireccional constante, como chats en l\u00ednea, notificaciones en tiempo real, y juegos multijugador.</p> <p>A continuaci\u00f3n, analizamos un ejemplo de uso de WebSocket en JavaScript.</p>"},{"location":"Moduls/DWEC/ajax.html#establecer-una-conexion-websocket","title":"Establecer una Conexi\u00f3n WebSocket","text":"<pre><code>let socket = new WebSocket(\"ws://localhost:8080\");\n</code></pre> <p>Esta l\u00ednea crea una nueva instancia de WebSocket, abriendo una conexi\u00f3n a la URL proporcionada. En este caso, la URL es <code>\"ws://localhost:8080\"</code>, lo que indica que se est\u00e1 intentando conectar a un servidor WebSocket que est\u00e1 ejecut\u00e1ndose en <code>localhost</code> en el puerto <code>8080</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#manejadores-de-eventos","title":"Manejadores de Eventos","text":""},{"location":"Moduls/DWEC/ajax.html#evento-open","title":"Evento <code>open</code>","text":"<pre><code>socket.addEventListener(\"open\", function(event) {\n   console.log(\"Conexi\u00f3n establecida.\");\n   socket.send(\"\u00a1Hola, servidor!\");\n});\n</code></pre> <p>El evento <code>open</code> se dispara cuando la conexi\u00f3n WebSocket se ha establecido con \u00e9xito. En este manejador, se imprime un mensaje en la consola indicando que la conexi\u00f3n se ha establecido, y se env\u00eda un mensaje al servidor utilizando <code>socket.send(\"\u00a1Hola, servidor!\");</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#evento-message","title":"Evento <code>message</code>","text":"<pre><code>socket.addEventListener(\"message\", function(event) {\n   console.log(\"Mensaje recibido del servidor: \" + event.data);\n});\n</code></pre> <p>El evento <code>message</code> se dispara cada vez que el cliente recibe datos del servidor. El objeto <code>event</code> contiene la propiedad <code>data</code>, que almacena los datos recibidos. En este manejador, los datos recibidos se imprimen en la consola.</p>"},{"location":"Moduls/DWEC/ajax.html#evento-error","title":"Evento <code>error</code>","text":"<pre><code>socket.addEventListener(\"error\", function(error) {\n   console.log(\"Error en la conexi\u00f3n: \" + error);\n});\n</code></pre> <p>El evento <code>error</code> se dispara cuando ocurre un error en la comunicaci\u00f3n WebSocket. En este manejador, el error se imprime en la consola.</p>"},{"location":"Moduls/DWEC/ajax.html#evento-close","title":"Evento <code>close</code>","text":"<pre><code>socket.addEventListener(\"close\", function(event) {\n   console.log(\"Conexi\u00f3n cerrada. C\u00f3digo: \" + event.code);\n});\n</code></pre> <p>El evento <code>close</code> se dispara cuando la conexi\u00f3n WebSocket se cierra. El objeto <code>event</code> contiene una propiedad <code>code</code>, que indica el c\u00f3digo de cierre de la conexi\u00f3n. En este manejador, se imprime un mensaje en la consola indicando que la conexi\u00f3n se ha cerrado y mostrando el c\u00f3digo de cierre.</p>"},{"location":"Moduls/DWEC/ajax.html#tratamiento-de-los-datos","title":"Tratamiento de los Datos","text":"<p>En las aplicaciones web modernas, es com\u00fan recibir datos del servidor en formato JSON, que es un formato ligero para el intercambio de datos. JavaScript proporciona herramientas potentes para trabajar con JSON, permitiendo convertir objetos en JSON y viceversa. Adem\u00e1s, tambi\u00e9n es importante poder almacenar datos en el lado del cliente para mejorar la experiencia del usuario. En este cap\u00edtulo, exploraremos c\u00f3mo convertir objetos a JSON y c\u00f3mo trabajar con almacenamiento en el lado del cliente, incluyendo cookies y LocalStorage.</p>"},{"location":"Moduls/DWEC/ajax.html#convertir-objetos-a-json","title":"Convertir Objetos a JSON","text":"<p>JavaScript permite convertir objetos en cadenas JSON utilizando el m\u00e9todo <code>JSON.stringify</code>. Este m\u00e9todo es \u00fatil cuando necesitamos enviar datos al servidor o almacenarlos en el lado del cliente.</p> <pre><code>(()=&gt;{\nclass Apple {\n  constructor(type){\n     this.type = type;\n     this.color = \"red\";\n  }\n}\nlet  apple1 = new Apple('Golden'); // Se crea una instancia\nlet appleJson = JSON.stringify(apple1);\nconsole.log(appleJson);\n})();\n</code></pre> <pre><code>{\"type\":\"Golden\",\"color\":\"red\"}\n</code></pre> <p>En este ejemplo: 1. Definimos una clase <code>Apple</code> que tiene un constructor que inicializa el tipo y el color de la manzana. 2. Creamos una instancia de <code>Apple</code> con el tipo 'Golden'. 3. Convertimos la instancia en una cadena JSON usando <code>JSON.stringify</code>. 4. Imprimimos la cadena JSON resultante en la consola.</p> <p>El resultado en la consola ser\u00e1: <code>{\"type\":\"Golden\",\"color\":\"red\"}</code>, que es la representaci\u00f3n JSON del objeto <code>apple1</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#convertir-json-a-objetos","title":"Convertir JSON a Objetos","text":"<p>Para convertir una cadena JSON en un objeto de JavaScript, utilizamos el m\u00e9todo <code>JSON.parse</code>. Esto es \u00fatil cuando recibimos datos del servidor en formato JSON y necesitamos trabajar con ellos en nuestro c\u00f3digo.</p> <pre><code>(()=&gt;{\nclass Hero {\n  constructor(name, car){\n     this.name = name;\n     this.car = car;\n  }\n}\nlet heroJSON = '{\"name\":\"Max\",\"car\":\"V8\"}';\nlet heroObject = JSON.parse(heroJSON);\nlet heroClass = Object.assign(new Hero, heroObject);\nconsole.log(heroObject, heroClass);\n})();\n</code></pre> <pre><code>{ name: \"Max\", car: \"V8\" } Hero { name: \"Max\", car: \"V8\" }\n</code></pre> <p>En este ejemplo: 1. Definimos una clase <code>Hero</code> que tiene un constructor que inicializa el nombre y el coche del h\u00e9roe. 2. Creamos una cadena JSON que representa un h\u00e9roe. 3. Convertimos la cadena JSON en un objeto usando <code>JSON.parse</code>. 4. Asignamos las propiedades del objeto JSON a una nueva instancia de <code>Hero</code> usando <code>Object.assign</code>. 5. Imprimimos el objeto JSON y la instancia de <code>Hero</code> en la consola.</p> <p>El resultado en la consola mostrar\u00e1 el objeto plano y la instancia de <code>Hero</code> con las propiedades correspondientes.</p>"},{"location":"Moduls/DWEC/ajax.html#conversion-de-binarios-para-enviar-como-json","title":"Conversi\u00f3n de binarios para enviar como JSON","text":"<p>Si se necesita enviar un binario dentro de un mensaje JSON, podemos convertirlo a Base64:</p> <pre><code>document.getElementById('fileForm').addEventListener('submit', event =&gt; {\n    event.preventDefault();\n    const fileInput = document.getElementById('fileInput');\n    const file = fileInput.files[0];\n    const reader = new FileReader();\n\n    reader.addEventListener('loadend', () =&gt; {\n        const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\n        const jsonData = {\n            fileName: file.name,\n            fileType: file.type,\n            fileData: base64String\n        };\n\n        fetch('/upload-json', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(jsonData)\n        })\n        .then(response =&gt; response.json())\n        .then(data =&gt; console.log(data))\n        .catch(error =&gt; console.error('Error:', error));\n    });\n\n    reader.readAsDataURL(file);\n});\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#almacenamiento-en-el-lado-del-cliente","title":"Almacenamiento en el Lado del Cliente","text":""},{"location":"Moduls/DWEC/ajax.html#cookies","title":"Cookies","text":"<p>Las cookies son peque\u00f1os fragmentos de datos almacenados en el navegador del usuario. Son \u00fatiles para almacenar informaci\u00f3n persistente que debe enviarse con cada solicitud HTTP al servidor, como sesiones de usuario.</p>"},{"location":"Moduls/DWEC/ajax.html#ejemplo","title":"Ejemplo","text":"<pre><code>document.cookie = \"username=John Doe; expires=Thu, 18 Dec 2021 12:00:00 UTC; path=/;\";\n</code></pre> <p>En este ejemplo: 1. Creamos una cookie llamada <code>username</code> con el valor <code>John Doe</code>. 2. Establecemos una fecha de expiraci\u00f3n para la cookie. 3. Definimos el <code>path</code> para especificar la ruta en la que la cookie est\u00e1 disponible.</p>"},{"location":"Moduls/DWEC/ajax.html#manipular-cookies","title":"Manipular Cookies","text":"<pre><code>var x = document.cookie;  // Leer todas las cookies\ndocument.cookie = \"username=John Smith; expires=Thu, 18 Dec 2021 12:00:00 UTC; path=/;\";  // Modificar una cookie\ndocument.cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";  // Borrar una cookie\n</code></pre> <p>En este ejemplo: 1. Leemos todas las cookies disponibles. 2. Modificamos la cookie <code>username</code>. 3. Borramos la cookie <code>username</code> estableciendo una fecha de expiraci\u00f3n pasada.</p> <p>Para una gesti\u00f3n m\u00e1s avanzada de cookies, se recomienda utilizar las funciones proporcionadas por la W3C: W3Schools - Cookies.</p>"},{"location":"Moduls/DWEC/ajax.html#localstorage","title":"LocalStorage","text":"<p>LocalStorage permite almacenar datos en el navegador de forma persistente. Los datos persisten incluso despu\u00e9s de cerrar el navegador.</p>"},{"location":"Moduls/DWEC/ajax.html#ejemplo_1","title":"Ejemplo","text":"<pre><code>// Guardar\nlocalStorage.setItem(\"lastname\", \"Smith\");\n// Obtener\nvar lastname = localStorage.getItem(\"lastname\");\n// Borrar\nlocalStorage.removeItem(\"lastname\");\n</code></pre> <p>En este ejemplo: 1. Guardamos un valor con la clave <code>lastname</code> en LocalStorage. 2. Recuperamos el valor almacenado usando la clave <code>lastname</code>. 3. Eliminamos el valor asociado a la clave <code>lastname</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#indexeddb","title":"IndexedDB","text":"<p>IndexedDB es una API de bajo nivel para almacenar grandes cantidades de datos estructurados. Es una base de datos transaccional y as\u00edncrona que permite almacenar archivos y realizar b\u00fasquedas avanzadas.</p>"},{"location":"Moduls/DWEC/ajax.html#caracteristicas-de-indexeddb","title":"Caracter\u00edsticas de IndexedDB","text":"<ul> <li>Hasta 50MB de almacenamiento.</li> <li>API as\u00edncrona para operaciones de lectura y escritura.</li> <li>Transaccional para garantizar la integridad de los datos.</li> <li>M\u00e1s compleja que LocalStorage.</li> </ul>"},{"location":"Moduls/DWEC/ajax.html#ejemplo-basico-de-indexeddb","title":"Ejemplo B\u00e1sico de IndexedDB","text":"<p>IndexedDB es m\u00e1s compleja de manejar que LocalStorage o cookies, pero ofrece muchas m\u00e1s capacidades. Aqu\u00ed presentamos un ejemplo muy b\u00e1sico para ilustrar su uso:</p> <pre><code>let request = indexedDB.open(\"myDatabase\", 1);\n\nrequest.onupgradeneeded = function(event) {\n  let db = event.target.result;\n  let objectStore = db.createObjectStore(\"customers\", { keyPath: \"id\" });\n  objectStore.createIndex(\"name\", \"name\", { unique: false });\n  objectStore.createIndex(\"email\", \"email\", { unique: true });\n};\n\nrequest.onsuccess = function(event) {\n  let db = event.target.result;\n  let transaction = db.transaction([\"customers\"], \"readwrite\");\n  let objectStore = transaction.objectStore(\"customers\");\n  let request = objectStore.add({ id: 1, name: \"John Doe\", email: \"john.doe@example.com\" });\n\n  request.onsuccess = function(event) {\n    console.log(\"Customer added to the database\");\n  };\n\n  request.onerror = function(event) {\n    console.log(\"Error adding customer: \", event.target.error);\n  };\n};\n</code></pre> <p>En este ejemplo: 1. Abrimos una conexi\u00f3n a IndexedDB y, si es la primera vez, se crea o actualiza la base de datos. 2. Definimos un <code>objectStore</code> para almacenar datos de clientes con un \u00edndice para <code>name</code> y <code>email</code>. 3. A\u00f1adimos un cliente a la base de datos dentro de una transacci\u00f3n y manejamos los eventos de \u00e9xito y error.</p> <pre><code>\n</code></pre>"},{"location":"Moduls/DWEC/angular_menu.html","title":"Angular menu","text":""},{"location":"Moduls/DWEC/angular_menu.html#angular","title":"Angular","text":"<p>Typescript </p> <p>Introducci\u00f3n a Angular</p> <p>Consejos</p> <p>Comunicaci\u00f3n con el servidor en Angular</p> <p>Rutas en Angular</p> <p>Formularios en Angular</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html","title":"La Web i el Desenvolupament Web","text":""},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#la-web-i-el-desenvolupament-web","title":"La Web i el Desenvolupament Web","text":"<p>La Web \u00e9s un dels conjunts de protocols m\u00e9s exitosos d'Internet, i la seva creaci\u00f3 va marcar un abans i un despr\u00e9s en la manera com accedim i compartim informaci\u00f3. Va ser inventada per Tim Berners-Lee al CERN (Organitzaci\u00f3 Europea per a la Recerca Nuclear) i ha evolucionat fins a convertir-se en una eina fonamental en la vida quotidiana i professional de milions de persones.</p> <p>La Web es basa en el concepte de <code>hipertext</code>, una tecnologia que permet enlla\u00e7ar diferents documents i recursos a trav\u00e9s d'enlla\u00e7os o hipervincles. Aquesta capacitat denlla\u00e7 \u00e9s el que permet la navegaci\u00f3 entre diferents p\u00e0gines i llocs web.</p> <p>El World Wide Web Consortium (W3C) \u00e9s lorganitzaci\u00f3 que sencarrega de desenvolupar est\u00e0ndards per a la Web. El seu objectiu \u00e9s garantir que la Web continu\u00ef sent oberta, accessible i funcional per a tothom. Aquests est\u00e0ndards inclouen tecnologies fonamentals com HTML, CSS i JavaScript.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#components-de-la-web","title":"Components de la Web","text":"<p>La Web es compon de diversos elements clau:</p> <ul> <li>Hipertext: Permet la creaci\u00f3 denlla\u00e7os entre documents.</li> <li>Protocol HTTP: \u00c9s el protocol de comunicaci\u00f3 que permet la transfer\u00e8ncia de dades a la Web.</li> <li>Servidors i Clients: Els servidors allotgen els llocs web i els clients (navegadors web) els sol\u00b7liciten i mostren.</li> <li>DNS (Sistema de Noms de Domini): Tradueix els noms de domini llegibles per humans (com www.ejemplo.com) en adreces IP que els ordinadors poden entendre.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#el-desenvolupament-web","title":"El Desenvolupament Web","text":"<p>El desenvolupament web \u00e9s un camp multidisciplinari que abasta diverses \u00e0rees i tecnologies. A continuaci\u00f3, es descriuen les principals \u00e0rees professionals del desenvolupament web:</p> <p>Contingut</p> <p>El contingut es refereix a l'organitzaci\u00f3, sem\u00e0ntica, presentaci\u00f3 i estructura de la informaci\u00f3 a la web. El llenguatge fonamental per al contingut web \u00e9s HTML (HyperText Markup Language), que defineix lestructura i el contingut duna p\u00e0gina web.</p> <p>Disseny</p> <p>El disseny se centra en l'aspecte visual i els elements gr\u00e0fics d'una p\u00e0gina web. Utilitza tecnologies com CSS (Cascading Style Sheets) per definir estils i plantilles que controlen l'aparen\u00e7a de les p\u00e0gines.</p> <p>Tecnologia Frontend</p> <p>Les tecnologies frontend s\u00f3n les que s'executen al navegador de l'usuari i s\u00f3n responsables dels elements interactius d'una p\u00e0gina web. El principal llenguatge de programaci\u00f3 frontend \u00e9s JavaScript, que permet crear interf\u00edcies din\u00e0miques i reactives.</p> <p>Tecnologia Backend</p> <p>El backend s'encarrega de la l\u00f2gica del servidor, l'acc\u00e9s a les bases de dades i el processament de les sol\u00b7licituds dels usuaris. Els llenguatges comuns de backend inclouen PHP, Python i Node.js, entre d'altres.</p> <p>Distribuci\u00f3</p> <p>La distribuci\u00f3 fa refer\u00e8ncia a com es despleguen i gestionen els llocs web. Aix\u00f2 inclou tant el maquinari (servidors, m\u00e0quines virtuals, contenidors) com el programari (servidors web com Apache, IIS i NGINX).</p> <p>Prop\u00f2sit</p> <p>Les webs es fan per a alguna cosa. Definir el prop\u00f2sit pot ser que no sigui la tasca m\u00e9s t\u00e8cnica, per\u00f2 calen perfils intermedis que s\u00e0piguen traslladar les necessitats dels clients als desenvolupadors. O fins i tot inventar nous models de negoci basats en tecnologies web.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#arquitectura-client-servidor","title":"Arquitectura Client - Servidor","text":"<p>L'arquitectura client-servidor \u00e9s el model fonamental en qu\u00e8 es basa la web. Es divideix en dues parts principals:</p> <ul> <li>Server-side (Costat del servidor)</li> <li>Maquinari: Inclou servidors i elements de xarxa, m\u00e0quines virtuals i contenidors.</li> <li>Programari: Involucra servidors web (com Apache, IIS, NGINX) i llenguatges CGI (com Perl, PHP, C). Tamb\u00e9 inclou llenguatges i frameworks amb servidors web integrats, com ara Python, Java, Node.js i C++.</li> <li>Client-side (Costat del client)</li> <li>Clients web: navegadors web com ara Firefox, Chrome, Vivaldi, Opera, Edge i Internet Explorer.</li> <li>Llenguatges de marques: HTML, XHTML, HTML5 i CSS.</li> <li>Llenguatges de programaci\u00f3 de l'entorn Client: Principalment JavaScript.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#el-cami-del-frontend","title":"El Cam\u00ed del Frontend","text":"<p>Per a m\u00e9s detalls, podeu consultar Full de ruta per a desenvolupadors de front-end.</p> <p>Aquest terme, extret de la web anterior, reflecteix l'itinerari formatiu recomanat per ser un professional del desenvolupament web a la part del Frontend. Aquest m\u00f2dul no \u00e9s suficient per dominar-ho tot i \u00e9s important ser conscients que estem veient una petita part de les m\u00faltiples possibilitats que tenim al nostre abast.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#del-costat-del-servidor-vs-del-costat-del-client","title":"Del costat del servidor vs del costat del client","text":"<p>En el desenvolupament web, tant el costat del servidor (server-side) com el costat del client (client-side) juguen els seus rols. No obstant aix\u00f2, moltes tasques poden dur-se a terme a qualsevol dels dos costats, i lelecci\u00f3 don implementar una funcionalitat espec\u00edfica dep\u00e8n de diversos factors, com la tecnologia adequada per al cas o la comoditat del desenvolupador amb una tecnologia particular.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#tasques-comunes-a-server-side-i-client-side","title":"Tasques comunes a Server-side i Client-side","text":"<ul> <li>Validar formularis: La validaci\u00f3 es pot fer al client per millorar l'experi\u00e8ncia de l'usuari, per\u00f2 s'ha de verificar novament al servidor per raons de seguretat.</li> <li>Desar dades permanents: Generalment es fa al servidor utilitzant bases de dades.</li> <li>Presentaci\u00f3 de diapositives: \u00c9s m\u00e9s com\u00fa al costat del client, utilitzant JavaScript o frameworks de frontend.</li> <li>Eliminar un par\u00e0graf: Aquesta tasca es realitza t\u00edpicament al client, utilitzant JavaScript per modificar el DOM (Document Object Model).</li> <li>Calcular dades: Els c\u00e0lculs es poden fer a banda i banda, depenent de la naturalesa del c\u00e0lcul i els requisits de seguretat.</li> <li>Accedir a bases de dades: Aquesta tasca es realitza al servidor per mantenir la seguretat i la integritat de les dades.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#javascript-al-costat-del-client","title":"JavaScript al costat del client","text":"<p>JavaScript \u00e9s el llenguatge de programaci\u00f3 m\u00e9s utilitzat al costat del client. Tot i aix\u00f2, t\u00e9 les seves limitacions i particularitats:</p> <ul> <li>Limitacions de JavaScript:</li> <li>No podeu escriure directament al servidor.</li> <li>No tots els navegadors suporten JavaScript i es pot desactivar, de manera que una p\u00e0gina web ben dissenyada hauria de funcionar sense.</li> <li>No podeu modificar prefer\u00e8ncies del navegador, llan\u00e7ar aplicacions, llegir o escriure fitxers al client, retransmetre streaming, enviar correus electr\u00f2nics, interactuar amb llenguatges de servidor, accedir a un web d'un domini diferent, protegir l'origen de les imatges, ni implementar multiprocessos.</li> <li>Tecnologia as\u00edncrona:</li> <li>JavaScript pot sol\u00b7licitar dades al servidor de forma as\u00edncrona utilitzant tecnologies com AJAX (Asynchronous JavaScript and XML).</li> <li>Usos de JavaScript:</li> <li>Fer que la web reaccioni a la interacci\u00f3 de lusuari.</li> <li>Proporcionar una interf\u00edcie agradable per a les dades.</li> <li>Controlar finestres, marcs i applets al document HTML.</li> <li>Preprocessar dades abans d'enviar-les al servidor.</li> <li>Modificar l'estil i el contingut de manera din\u00e0mica en funci\u00f3 de la interacci\u00f3 de l'usuari.</li> <li>Sol\u00b7licitar o enviar fitxers al servidor.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#compatibilitat-i-validacio-html","title":"Compatibilitat i Validaci\u00f3 HTML","text":"<p>Per evitar problemes de compatibilitat, el codi HTML ha de ser v\u00e0lid. Es pot utilitzar el validador d'HTML del W3C (https://validator.w3.org/) per assegurar-se que el codi compleixi amb els est\u00e0ndards.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#seguretat-en-javascript","title":"Seguretat en JavaScript","text":"<p>El JavaScript s'executa en un entorn segur sense contacte directe amb el sistema operatiu del client. Implementa una \"pol\u00edtica del mateix origen\", cosa que significa que nom\u00e9s t\u00e9 acc\u00e9s a dades rebudes del mateix servidor des del qual va ser carregat.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#entorns-de-programacio-web-per-al-client","title":"Entorns de Programaci\u00f3 Web per al Client","text":"<p>L'elecci\u00f3 del programari per al desenvolupament web dep\u00e8n de les necessitats i la complexitat del projecte:</p> <ul> <li>Programari per a modificacions casuals:</li> <li>Editors de text lleugers i r\u00e0pids com Gedit, Nano, Notepad.</li> <li>Editors de text avan\u00e7ats:</li> <li>Eines m\u00e9s potents com Sublim Text, Brackets, Jedit, Visual Studio Code, Vim.</li> <li>Entorns de Desenvolupament Integrats (IDEs):</li> <li>Solucions completes com NetBeans, Eclipse, WebStorm.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#preparar-lentorn-de-desenvolupament","title":"Preparar l'entorn de desenvolupament","text":"<p>En un entorn de desenvolupament t\u00edpic, com una classe de programaci\u00f3 web, es pot utilitzar Visual Studio Code amb les extensions seg\u00fcents:</p> <ul> <li>M\u00e9s bonica: Per formatar fitxers de manera autom\u00e0tica, ja sigui manualment o en desar.</li> <li>EsLint: Ajuda a detectar errors d'estil o programaci\u00f3 que JavaScript no pot detectar per si mateix (requereix instal\u00b7lar eslint al projecte).</li> <li>Servidor en directe: Per provar la web en un servidor local de manera r\u00e0pida i senzilla.</li> </ul> <p>M\u00e9s endavant anirem instal\u00b7lant alguna extensions m\u00e9s.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#altres-eines","title":"Altres Eines","text":"<ul> <li>Tecla F12 als navegadors: Accedeix a les eines de desenvolupament del navegador.</li> <li>Edici\u00f3 per a desenvolupadors de Firefox: Una versi\u00f3 del navegador Firefox amb eines avan\u00e7ades per a desenvolupadors web.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#tipus-daplicacions-web-segons-el-frontend","title":"Tipus d'aplicacions web segons el Frontend","text":"<p>El desenvolupament d'aplicacions web ha evolucionat significativament amb el temps i avui dia hi ha diverses maneres d'abordar el frontend. A continuaci\u00f3, explorarem els diferents tipus d'aplicacions web segons les tecnologies de frontend que es facin servir, aix\u00ed com l'evoluci\u00f3 de les mateixes.</p> <ul> <li>Amb JavaScript 'Vanilla': Es refereix a la utilitzaci\u00f3 de JavaScript pur sense cap biblioteca o framework addicional. \u00c9s una manera directa i eficient de programar sobretot quan s\u00f3n aplicacions petites i senzilles.</li> <li>Amb Biblioteques:</li> <li>JQuery: Facilita la manipulaci\u00f3 del DOM, esdeveniments i AJAX.</li> <li>Prototip: Simplifica les tasques de programaci\u00f3 orientada a objectes en JavaScript.</li> <li>D3.js: S'utilitza per crear visualitzacions de dades.</li> <li>Bootstrap: Biblioteca de CSS i JavaScript per a disseny responsiu.</li> <li>View.js: Ofereix una manera progressiva de construir interf\u00edcies dusuari.</li> <li>Reacciona: Biblioteca per construir interf\u00edcies d'usuari, principalment en aplicacions d'una sola p\u00e0gina.</li> <li>Con Frameworks:</li> <li>Angular: Framework de JavaScript de Google per construir aplicacions din\u00e0miques duna sola p\u00e0gina.</li> <li>Reacciona: Encara que \u00e9s una biblioteca, tamb\u00e9 s'utilitza com a framework quan es combina amb altres eines.</li> <li>View.js: Igual que React, es pot considerar un framework quan s'utilitza en projectes m\u00e9s grans.</li> <li>Phaser: Framework per al desenvolupament de jocs en HTML5.</li> <li>Amb Frameworks Full Stack:</li> <li>Odoo: Plataforma de codi obert que proporciona un conjunt complet d'aplicacions empresarials.</li> <li>Blitz: Framework de React basat en Next.js per a aplicacions de pila completa.</li> <li>Next.js: Framework de React per a aplicacions de servidor i client.</li> <li>SvelteKit: Framework per construir aplicacions r\u00e0pides i modernes.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#evolucio-de-les-aplicacions-web","title":"Evoluci\u00f3 de les Aplicacions Web","text":"<ol> <li>P\u00e0gines Web Est\u00e0tiques: Les primeres aplicacions web eren simples p\u00e0gines est\u00e0tiques amb hipervincles.</li> <li>P\u00e0gines Web Generades pel Servidor: Amb el temps, es va introduir una mica de JavaScript per millorar la interacci\u00f3.</li> <li>Introducci\u00f3 d'AJAX: Permet carregar o pujar dades al servidor de manera as\u00edncrona, millorant la interactivitat sense recarregar la p\u00e0gina.</li> <li>Aplicaci\u00f3 d'una sola p\u00e0gina (SPA): Les aplicacions d'una sola p\u00e0gina es comuniquen amb el servidor usant JSON o XML, proporcionant una experi\u00e8ncia m\u00e9s fluida.</li> </ol> <p>Evoluci\u00f3 de les aplicacions web.</p> <p>Actualment es poden fer p\u00e0gines web de moltes maneres. En aquest llibre, cap al final, ens enfoquem m\u00e9s a imitar els frameworks actuals, que solen estar pensats per a SPA amb una API. No obstant aix\u00f2, es poden fer p\u00e0gines nom\u00e9s amb HTML est\u00e0tic, o generat una vegada a partir de Markdown, com aquest mateix llibre (Jekyll, Jupyter Books...), tamb\u00e9 es pot generar HTML amb PHP, Node, Java... O es pot tenir un CMS com a Wordpress i programar plugins. Es pot tenir un CMS Headless o generat mitjan\u00e7ant Micro-Frontends. O aplicacions progressives PWA o H\u00edbrides amb Ionic i Cordova. Pel que fa a servir-les, tenim els hostings i servidors tradicionals o \"Serverless\", plataformes \"Low Code\"... La llista no s'acaba i cadascuna d'aquestes idees t\u00e9 moltes m\u00e9s opcions.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#aplicacions-duna-sola-pagina-spa","title":"Aplicacions d'una sola p\u00e0gina (SPA)","text":"<ul> <li>SPA com a sobreenginyeria: En molts casos, utilitzar SPA pot complicar innecess\u00e0riament el desenvolupament web. Tot seguit veurem la justificaci\u00f3 per fer web d'aquesta manera.</li> <li>Freq\u00fc\u00e8ncia d'\u00fas: \u00c9s important considerar si l'aplicaci\u00f3 ser\u00e0 utilitzada constantment o espor\u00e0dicament. Una aplicaci\u00f3 web utilitzada espor\u00e0dicament no ha de ser molt pesada i \u00e9s millor que sigui generada pel servidor o est\u00e0tica per millorar el SEO. No obstant aix\u00f2, una aplicaci\u00f3 web que el client mant\u00e9 sempre oberta, pot ser m\u00e9s agradable dutilitzar si \u00e9s una SPA.</li> <li>Servidor vs Client: Crear l'HTML i l'estil al servidor pot ser menys complicat, per\u00f2 en aplicacions grans, podeu sobrecarregar el servidor i dificultar la separaci\u00f3 de la vista del model i controlador.</li> <li>SPA al nostre m\u00f2dul: Optarem per una SPA pel fet que \u00e9s m\u00e9s adequat per al m\u00f2dul que estem desenvolupant. Una SPA requereix saber construir elements del DOM, comunicar-se amb el servidor mitjan\u00e7ant peticions as\u00edncrones amb Javascript i manejar els esdeveniments i la reactivitat. Per tant, \u00e9s l'escusa perfecta per impartir els nostres continguts.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#entre-la-pagina-web-i-lapp","title":"Entre la p\u00e0gina web i l'APP","text":"<ol> <li>P\u00e0gines Web: Contingut est\u00e0tic i din\u00e0mic accessible a trav\u00e9s de navegadors.</li> <li>Aplicacions Web: Poden ser SPA o no.</li> <li>Aplicacions Web Responsives: Dissenyades per adaptar-se a diferents dispositius.</li> <li>PWA (aplicaci\u00f3 web progressiva): Combinen el millor de les p\u00e0gines web i les aplicacions m\u00f2bils.</li> <li>Apps H\u00edbrides: Utilitzen frameworks com Ionic per funcionar en m\u00faltiples plataformes.</li> <li>Aplicacions pr\u00e0cticament natives: Utilitzen tecnologies com React Native o Flutter per apropar-se al rendiment de les aplicacions natives.</li> </ol>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#les-biblioteques","title":"Les Biblioteques","text":"<ul> <li>Caracter\u00edstiques: Aporten funcionalitats espec\u00edfiques al llenguatge de programaci\u00f3.</li> <li>Flexibilitat: No obliguen a canviar la manera de programar.</li> <li>Simplificaci\u00f3: Faciliten la programaci\u00f3 de tasques concretes.</li> <li>Desavantatges: Poden crear depend\u00e8ncia al programador.</li> <li>Reempla\u00e7ament: Algunes biblioteques, com Underscore, Lodash o JQuery, han perdut rellev\u00e0ncia amb la introducci\u00f3 d'ES6.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#els-frameworks","title":"Els Frameworks","text":"<ul> <li>Modificaci\u00f3: Canvien completament la manera de programar.</li> <li>Integraci\u00f3: S'encarreguen de plantilles, comunicacions, encaminaments, components, m\u00f2duls, etc.</li> <li>Corba d'aprenentatge: S\u00f3n complexos d'aprendre.</li> <li>Efici\u00e8ncia: Un cop dominats, fan la programaci\u00f3 m\u00e9s \u00e0gil i correcta.</li> <li>In\u00e8rcia: Poden dificultar el canvi a un altre framework.</li> <li>Obsolesc\u00e8ncia: Si el framework queda obsolet, la web tamb\u00e9.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#utilitat-dels-frameworks","title":"Utilitat dels Frameworks","text":"<ul> <li>Aplicacions espec\u00edfiques: S\u00f3n \u00fatils si es desenvolupen per a una aplicaci\u00f3 en particular.</li> <li>Normes: S\u00f3n valuosos si permeten exportar components.</li> <li>Valor afegit: Han d'aportar una cosa \u00fanica.</li> <li>Aplicacions no cr\u00edtiques: S\u00f3n ideals per a aplicacions que no s\u00f3n cr\u00edtiques.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#obtencio-de-biblioteques-i-frameworks","title":"Obtenci\u00f3 de Biblioteques i Frameworks","text":"<ul> <li>Desc\u00e0rrega directa: Descarregar un fitxer .js o un directori comprimit del web oficial i copiar-lo al projecte.</li> <li>CDN: Utilitzar un CDN directament des de la web oficial.</li> <li>Gestors de paquets: Utilitzar NPM o Yarn per gestionar depend\u00e8ncies.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#modes-i-tendencies","title":"Modes i Tend\u00e8ncies","text":"<p>Les xarxes socials s\u00f3n plenes de gent intentant vendre el seu curs. Al m\u00f3n professional hi ha molta m\u00e9s gent treballant silenciosament i efica\u00e7ment en productes de qualitat i duradors. Encara que els primers tinguin una mica de ra\u00f3 a dir que PHP, JQuery o altres estan obsolets, el m\u00f3n laboral de vegades diu el contrari. Cal prendre una certa dist\u00e0ncia per triar la millor tecnologia per a cada ocasi\u00f3. (https://www.bitecode.dev/p/hype-cycles)</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#posar-la-web-en-produccio","title":"Posar la Web en Producci\u00f3","text":"<p>Perqu\u00e8 una web amb HTML, CSS i Javascript funcioni tan sols necessitem un servidor web que serveixi <code>est\u00e0ticament</code> aquests fitxers quan se us faci una petici\u00f3 HTTP. Aquest servidor sol estar accessible per Internet mitjan\u00e7ant SFTP, SSH o qualsevol protocol. Aquests HTML, CSS i JS poden ser tractats de dues maneres:</p> <ol> <li>M\u00e8tode tradicional: Copiar tot el contingut de les carpetes al servidor al voltant del fitxer index.html.</li> <li>Eina de creaci\u00f3 de JavaScript: Utilitzar eines que compilen el codi font, el minifiquen, unifiquen, optimitzen i comprimeixen per millorar la velocitat de c\u00e0rrega i evitar incompatibilitats entre navegadors.</li> </ol> <p>M\u00e9s endavant, al cap\u00edtol del CI/CD parlarem d'una metodologia per automatitzar tot el proc\u00e9s. Amb aquesta metodologia podrem centrar-nos a escriure codi c\u00f2modament mentre que les nostres eines ho proven tot i ho posen en producci\u00f3.</p>"},{"location":"Moduls/DWEC/dom.html","title":"DOM","text":""},{"location":"Moduls/DWEC/dom.html#dom","title":"DOM","text":""},{"location":"Moduls/DWEC/dom.html#dom-en-javascript","title":"DOM en JavaScript","text":"<p>El DOM (Document Object Model) \u00e9s una interf\u00edcie de programaci\u00f3 que permet als scripts actualitzar el contingut, l'estructura i l'estil d'un document mentre aquest s'est\u00e0 visualitzant al navegador.</p>"},{"location":"Moduls/DWEC/dom.html#estructura-del-document-html","title":"Estructura del Document HTML","text":"<p>El DOM representa l'estructura d'un document HTML i l'entorn en el que s'executa com una jerarquia d'objectes. Els principals components s\u00f3n:</p> <ul> <li>Window: Representa la finestra del navegador i \u00e9s l'objecte global en els scripts del navegador.</li> <li>Document: Representa el document HTML que es carrega a la finestra.</li> </ul> <p>A m\u00e9s de <code>window</code> i <code>document</code>, hi ha diversos altres objectes principals accessibles a l'entorn d'una p\u00e0gina web, aquests es denominen <code>Web APIs</code> :</p> <ol> <li>Navigator: Proporciona informaci\u00f3 sobre el navegador. -   <code>navigator.userAgent</code> -   <code>navigator.language</code> -   <code>navigator.geolocation</code> -   <code>navigator.getBattery()</code></li> <li>Screen: Proporciona informaci\u00f3 sobre la pantalla de l'usuari. -   <code>screen.width</code> -   <code>screen.height</code> -   <code>screen.availWidth</code> -   <code>screen.availHeight</code></li> <li>History: Permet la manipulaci\u00f3 de l'historial del navegador. -   <code>history.back()</code> -   <code>history.forward()</code> -   <code>history.go()</code></li> <li>Location: Proporciona la URL actual de la finestra. -   <code>location.href</code> -   <code>location.hostname</code> -   <code>location.pathname</code> -   <code>location.search</code> -   <code>location.hash</code> -   <code>location.reload()</code></li> <li>Storage APIs: LocalStorage, sessionStorage, IndexedDB</li> <li>Network APIs: XMLHttpRequest, fetch</li> <li>Console: Proporciona acc\u00e9s a la consola de depuraci\u00f3 del navegador.</li> <li>WebSocket: Proporciona una interf\u00edcie per a les connexions WebSocket.</li> <li>Worker: Permet l'execuci\u00f3 de scripts en segon pla.</li> </ol>"},{"location":"Moduls/DWEC/dom.html#dom-window","title":"DOM: Window","text":"<p><code>Window</code> \u00e9s un objecte predefinit en els navegadors web que representa la finestra en la qual es mostra el document. Alguns m\u00e8todes importants de <code>window</code> inclouen:</p> <ul> <li><code>alert()</code>, <code>prompt()</code>: M\u00e8todes per mostrar di\u00e0legs.</li> <li><code>setTimeout(funci\u00f3, temps)</code>: Executa una funci\u00f3 despr\u00e9s d'un temps especificat.</li> <li><code>setInterval(funci\u00f3, temps)</code>: Executa una funci\u00f3 repetidament a intervals de temps especificats.</li> <li><code>clearTimeout(identificador)</code>: Cancel\u00b7la un <code>setTimeout</code> programat.</li> </ul> <p>Aquests m\u00e8todes no solen invocar-se amb <code>window.setTimeout()</code>, per exemple, perqu\u00e8 s\u00f3n accessibles directament en estar en l'\u00e0mbit global. De fet, qualsevol funci\u00f3 o variable <code>var</code> declarada en l'\u00e0mbit global passa a ser un atribut de l'objecte window:</p> <pre><code>var globalVar = \"I'm global!\";\nfunction globalFunction() { console.log(\"I'm a global function!\");\n}\nconsole.log(window.globalVar); // \"I'm global!\"\nwindow.globalFunction(); // \"I'm a global function!\"\n</code></pre> <p>Aix\u00f2 no passa amb variables declarades amb <code>let</code> o <code>const</code>. L'especificaci\u00f3 d'ECMAScript busca millorar la claredat i previsibilitat del codi. En evitar que let i const es converteixin en propietats de l'objecte window, es fomenta un disseny de codi m\u00e9s modular i amb menys depend\u00e8ncies globals.</p> <p>Window no est\u00e0 disponible quan programem per<code>Node</code> o altres int\u00e8rprets de servidor. Per aquesta ra\u00f3, el Javascript dedicat al DOM hauria d'estar separat de funcions normals, de manera que aquestes es puguin reaprofitar si part de la l\u00f2gica es mou al servidor.</p>"},{"location":"Moduls/DWEC/dom.html#dom-buscar-nodes","title":"DOM: Buscar Nodes","text":"<p>Per manipular elements del DOM, primer els hem de trobar. Els m\u00e8todes m\u00e9s comuns s\u00f3n:</p> <ul> <li><code>document.getElementById(id)</code>: Troba un element pel seu ID.</li> <li><code>getElementsByTagName(tag)</code>: Troba tots els elements amb un nom d'etiqueta espec\u00edfic.</li> <li><code>getElementsByName(name)</code>: Troba tots els elements amb un nom especificat.</li> <li><code>querySelector(selector)</code>: Retorna el primer element que coincideix amb un selector CSS.</li> <li><code>querySelectorAll(selector)</code>: Retorna un <code>Nodelist</code> de tots els elements que coincideixen amb un selector CSS.</li> </ul> <pre><code>let element = document.getElementById('exampleId');\nlet elements = document.getElementsByTagName('p');\nlet elementByName = document.getElementsByName('exampleName');\nlet firstElement = document.querySelector('.exampleClass');\nlet allElements = document.querySelectorAll('.exampleClass');\n</code></pre> <p>El resultat dels m\u00e8todes que troben m\u00e9s d'un node \u00e9s un <code>HTMLCollection</code> o un <code>NodeList</code> . Si volem tractar-lo com un array cal convertir-lo amb <code>Array.from()</code> o <code>[... HTMLCollection]</code>.</p> <p>Sovint, necessitem accedir a un node espec\u00edfic a partir d'un ja existent al DOM. Per a aix\u00f2, podem utilitzar els seg\u00fcents m\u00e8todes aplicats a un element de l'arbre DOM:</p> <ul> <li><code>element.parentElement</code>:retorna l'element pare del node actual.</li> <li><code>element.children</code>: retorna una col\u00b7lecci\u00f3 de tots els elements fills del node actual (nom\u00e9s elements HTML, no inclou comentaris ni nodes de text).</li> <li><code>element.childNodes</code>: retorna una col\u00b7lecci\u00f3 de tots els nodes fills, incloent comentaris i nodes de text, per la qual cosa no es fa servir freq\u00fcentment.</li> <li><code>element.firstElementChild</code>: retorna el primer fill que \u00e9s un element HTML.</li> <li><code>element.firstChild</code>: retorna el primer node fill, incloent nodes de text o comentaris.</li> <li><code>element.lastElementChild</code>: similar a <code>firstElementChild</code>, per\u00f2 retorna l'\u00faltim fill element HTML.</li> <li><code>element.lastChild</code>: similar a <code>firstChild</code>, per\u00f2 retorna l'\u00faltim node fill.</li> <li><code>element.nextElementSibling</code>:retorna el seg\u00fcent germ\u00e0 que \u00e9s un element HTML.</li> <li><code>element.nextSibling</code>: retorna el seg\u00fcent node germ\u00e0, incloent nodes de text o comentaris.</li> <li><code>element.previousElementSibling</code>: similar a <code>nextElementSibling</code>, per\u00f2 retorna el germ\u00e0 anterior que \u00e9s un element HTML.</li> <li><code>element.previousSibling</code>: similar a <code>nextSibling</code>, per\u00f2 retorna el germ\u00e0 anterior.</li> <li><code>element.hasChildNodes()</code>:indica si el node t\u00e9 nodes fills.</li> <li><code>element.childElementCount</code>:retorna el nombre d'elements fills.</li> <li><code>element.closest(selector)</code>: retorna l'ancestre m\u00e9s proper que coincideix amb el selector donat. Per exemple, si l'element \u00e9s un <code>&lt;td&gt;</code> dins d'una taula, <code>element.closest('table')</code> retornar\u00e0 la taula a la qual pertany.</li> </ul> <p>El DOM proporciona accessos directes (dreceres) per obtenir elements comuns:</p> <ul> <li><code>document.documentElement</code>: obt\u00e9 el node de l'element<code>&lt;html&gt;</code>.</li> <li><code>document.head</code>: obt\u00e9 el node de l'element <code>&lt;head&gt;</code>.</li> <li><code>document.body</code>: obt\u00e9 el node de l'element <code>&lt;body&gt;</code>.</li> <li><code>document.title</code>: obt\u00e9 el node de l'element <code>&lt;title&gt;</code>.</li> <li><code>document.links</code>: obt\u00e9 una col\u00b7lecci\u00f3 de tots els hipervincles del document.</li> <li><code>document.anchors</code>: obt\u00e9 una col\u00b7lecci\u00f3 de totes les \u00e0ncores del document.</li> <li><code>document.forms</code>: obt\u00e9 una col\u00b7lecci\u00f3 de tots els formularis del document.</li> <li><code>document.images</code>: obt\u00e9 una col\u00b7lecci\u00f3 de totes les imatges del document.</li> <li><code>document.scripts</code>: obt\u00e9 una col\u00b7lecci\u00f3 de tots els scripts del document.</li> </ul> <p>No hi ha una manera millor que d'altres en totes les ocasions de trobar  els nodes. Si no volem fallar es pot fer servir <code>querySelector</code>i usar selectors de CSS. D'aquesta manera, canviar el selector \u00e9s canviar la \"query\". No obstant aix\u00f2, els altres selectors m\u00e9s primitius pot que siguin m\u00e9s r\u00e0pids en certes ocasions.</p>"},{"location":"Moduls/DWEC/dom.html#dom-modificar-nodes","title":"DOM: Modificar Nodes","text":"<p>Un cop hem trobat els nodes, podem modificar-los. Alguns m\u00e8todes \u00fatils inclouen:</p> <ul> <li><code>.innerHTML</code>, <code>.innerText</code>, <code>.outerHTML</code>: Per canviar el contingut HTML o text d'un element.</li> <li><code>.insertAdjacentHTML(position, text)</code>: Insereix text HTML en una posici\u00f3 espec\u00edfica. https://lenguajejs.com/dom/crear/insertadjacent-api/</li> <li><code>.append(content, element)</code>, <code>.prepend(content, element)</code>: Afegeix contingut al principi o al final d'un element.</li> <li><code>.after()</code>, <code>.before()</code>: Insereix un element abans o despr\u00e9s de l'element actual.</li> <li><code>.cloneNode(deep)</code>: Clona un node, amb o sense els seus fills.</li> <li><code>.remove()</code>: Elimina un node.</li> </ul> <p>M\u00e8todes m\u00e9s antics per\u00f2 encara en \u00fas inclouen <code>removeChild()</code> i <code>appendChild()</code>.</p> <pre><code>let element = document.getElementById('exampleId');\nelement.innerHTML = 'Nou contingut';\nelement.insertAdjacentHTML('beforeend', '&lt;p&gt;M\u00e9s contingut&lt;/p&gt;');\nelement.append('Text addicional');\nelement.remove();\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#atributs","title":"Atributs","text":"<p>Els elements solen tenir atributs. Alguns s\u00f3n especials com el <code>id</code> o la <code>class</code>. El <code>id</code>est\u00e0 accessible directament com a atribut de l'element, aix\u00ed com el <code>className</code>, tot i que despr\u00e9s veurem que \u00e9s millor manipular-lo d'una altra manera. Altres atributs com <code>value</code> en els <code>Input</code>o <code>scr</code> en els <code>&lt;img&gt;</code> tamb\u00e9 poden ser llegits i modificats com a propietats. Es tracta dels atributs est\u00e0ndard.</p> <p>Per als atributs que no tenen acc\u00e9s directe perqu\u00e8 no s\u00f3n est\u00e0ndard, podem fer servir <code>setAttribute()</code> <code>getAttribute()</code>, <code>hasAttribute()</code> o <code>removeAttribute()</code>:</p> <pre><code>const button = document.querySelector(\"button\");\n\nbutton.setAttribute(\"name\", \"helloButton\");\nbutton.setAttribute(\"disabled\", \"\");\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#propietats","title":"Propietats","text":"<p>At\u00e8s que els elements HTML en ser analitzats i convertits al DOM es converteixen en objectes, aquests s\u00f3n manipulables com qualsevol objecte, podent afegir o modificar propietats, fins i tot aquelles que venen en l'HTML com a atributs est\u00e0ndard.</p> <p>Atributs com a <code>id</code> se sincronitzen perfectament amb la propietat. Altres com <code>value</code> no se sincronitzen directament: https://es.javascript.info/dom-attributes-and-properties#sincronizacion-de-propiedad-y-atributo</p> <p>Hi ha uns atributs que se sincronitzen de forma especial amb les propietats. S\u00f3n els que comencen per <code>data-</code>, que es guarden en un objecte <code>.dataset</code> de l'element en el DOM. Aix\u00f2 ho expliquem a la secci\u00f3 de Atributs de dades.</p>"},{"location":"Moduls/DWEC/dom.html#dom-estils","title":"DOM: Estils","text":"<p>Per manipular els estils d'un element, podem usar propietats de estil i classes CSS.</p> <ul> <li><code>.style.property</code>: Modifica un estil CSS directament.</li> <li><code>.className</code>: Canvia el nom de la classe de l'element.</li> <li><code>.classList.add()</code>, <code>.classList.toggle()</code>, <code>.classList.remove()</code>, <code>.classList.replace()</code>: M\u00e8todes per manipular classes CSS de manera m\u00e9s din\u00e0mica.</li> </ul> <pre><code>let element = document.getElementById('exampleId');\nelement.style.color = 'blue';\nelement.classList.add('new-class');\nelement.classList.remove('old-class');\n</code></pre> <p>ClassName no s'hauria de fer servir, ja que pot molestar si es fa servir classList d'altra banda. Usarem classList en totes les ocasions excepte per a eliminar totes les classes.</p>"},{"location":"Moduls/DWEC/dom.html#creacio-delements-plantilles","title":"Creaci\u00f3 d'elements (plantilles)","text":"<p>Se pueden crear elementos totalmente de forma program\u00e1tica. Pero puede ser tedioso. Muchas veces, si sabemos que hay fragmentos de HTML bastante est\u00e1ticos, podemos usar <code>innerHTML</code> y <code>.append()</code> con plantillas creadas mediante strings.</p> <p>Para crear elementos del DOM mediante plantillas hay muchas formas. Obviaremos las m\u00e1s farragosas y nos centraremos en aquellas que son m\u00e1s r\u00e1pidas.</p>"},{"location":"Moduls/DWEC/dom.html#creacion-de-elementos-template-literal","title":"Creaci\u00f3n de Elementos: Template Literal","text":"<p>Els template literals i les interpolacions de cadenes permeten crear contingut din\u00e0mic de manera senzilla.</p> <pre><code>function generateGraphCard(graph) {\n    let cardTemplate = document.createElement('div');\n    cardTemplate.classList.add('col');\n    cardTemplate.innerHTML = `\n        &lt;div class=\"card\"&gt;\n            &lt;div class=\"card-header\"&gt;${graph.title}&lt;/div&gt;\n            &lt;div class=\"card-body\"&gt;\n                &lt;div class=\"graph\"&gt;&lt;/div&gt;\n                &lt;p class=\"card-text\"&gt;${graph.description}&lt;/p&gt;\n                &lt;a href=\"#/graph/${graph.id}\" class=\"btn btn-primary\"&gt;Full screen&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;`;\n    let graphContainer = cardTemplate.querySelector('.graph');\n    graphContainer.append(graph.Data ? generateBarGraph(graph.Data) : graphPlaceholder());\n    return cardTemplate;\n}\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#creacio-delements-mitjancant-tagged-template-literals","title":"Creaci\u00f3 d'elements mitjan\u00e7ant Tagged Template Literals","text":"<p>Els \"Tagged Template Literals\" s\u00f3n una caracter\u00edstica de JavaScript que et permet crear funcions que accepten una plantilla literal i les seves interpolacions. Aquestes funcions s\u00f3n invocades de forma molt diferent, ja que no tenen (parentesi) i s'ent\u00e9n que el primer argument \u00e9s la plantilla i la resta d'arguments s\u00f3n els diferents valors de les variables interpolades.</p> <p>En lloc de rebre una sola cadena de text amb les interpolacions <code>${}</code>, la funci\u00f3 d'etiqueta rep dos arguments separats: un array de strings i un arrelament amb els valors interpolats.</p> <pre><code>(()=&gt;{\n  function miTaggedTemplateLiteral(strings, ...values) { return console.log(strings, ...values);\n  }\n  let nombre = \"Carlos\";\n  let edad = 32;\n  miTaggedTemplateLiteral`Hola soy ${nombre} y tengo ${edad} a\u00f1os`;\n})();\n</code></pre> <pre><code>[ \"Hola s\u00f3c \", \" i tinc \", \" anys\" ] Carles 32\n</code></pre> <p>En el seg\u00fcent exemple, extret de https://exploringjs.com/es6/ch_template-literals.html#sec_html-tag-function-implementation es pot veure com fer una funci\u00f3 per a tagged temperate literal que personalitzi una plantilla.</p> <pre><code>function htmlEscape(str) {\n  return str.replace(/&amp;/g, '&amp;amp;') // first!\n            .replace(/&gt;/g, '&amp;gt;')\n            .replace(/&lt;/g, '&amp;lt;')\n            .replace(/\"/g, '&amp;quot;')\n            .replace(/'/g, '&amp;#39;')\n            .replace(/`/g, '&amp;#96;');\n}\nfunction html(templateObject, ...substs) {\n  // Use raw template strings: we don\u2019t want\n  // backslashes (\\n etc.) to be interpreted\n  const raw = templateObject.raw;\n\n  let result = '';\n\n  substs.forEach((subst, i) =&gt; {\n      // Retrieve the template string preceding\n      // the current substitution\n      let lit = raw[i];\n\n      // In the example, map() returns an Array:\n      // If `subst` is an Array (and not a string),\n      // we turn it into a string\n      if (Array.isArray(subst)) {\n          subst = subst.join('');\n      }\n\n      // If the substitution is preceded by an exclamation\n      // mark, we escape special characters in it\n      if (lit.endsWith('!')) {\n          subst = htmlEscape(subst);\n          lit = lit.slice(0, -1);\n      }\n      result += lit;\n      result += subst;\n  });\n  // Take care of last template string\n  result += raw[raw.length-1]; // (A)\n\n  return result;\n}\nconst tmpl = addrs =&gt; html`\n    &lt;table&gt;\n    ${addrs.map(addr =&gt; html`\n        &lt;tr&gt;&lt;td&gt;!${addr.first}&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;!${addr.last}&lt;/td&gt;&lt;/tr&gt;\n    `)}\n    &lt;/table&gt;\n`;\nconst data = [\n    { first: '&lt;Jane&gt;', last: 'Bond' },\n    { first: 'Lars', last: '&lt;Croft&gt;' },\n];\nconsole.log(tmpl(data));\n</code></pre> <pre><code>    &lt;table&gt;\n\n        &lt;tr&gt;&lt;td&gt;&amp;lt;Jane&amp;gt;&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;Bond&lt;/td&gt;&lt;/tr&gt;\n\n        &lt;tr&gt;&lt;td&gt;Lars&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;&amp;lt;Croft&amp;gt;&lt;/td&gt;&lt;/tr&gt;\n\n    &lt;/table&gt;\n</code></pre> <p>Aquest seria el resultat:</p> &lt;Jane&gt; Bond Lars &lt;Croft&gt;"},{"location":"Moduls/DWEC/dom.html#creacio-delements-interpolacions-wrapper-fragments","title":"Creaci\u00f3 d'Elements: Interpolacions, Wrapper, fragments","text":"<p>Podem fer servir funcions per extreure i implementar interpolacions en template literals.</p> <pre><code>function extractInterpolations(template) {\n    let regex = /\\{\\{([^\\{\\}]*)\\}\\}/g;\n    return [...template.matchAll(regex)];\n}\n\nfunction applyInterpolations(template, data) {\n    return extractInterpolations(template).reduce((T, [I, att]) =&gt; \n        T = T.replace(I, data[att]), template);\n}\n\nfunction wrapElement(innerHTML) {\n    let wrapper = document.createElement('div');\n    wrapper.innerHTML = innerHTML;\n    return wrapper.firstElementChild;\n}\n\nfunction renderNews(news) {\n    let newsTemplate = `\n        &lt;article id=\"article_{{id}}\"&gt;\n            &lt;a href=\"{{link}}\"&gt;&lt;h2&gt;{{headline}}&lt;/h2&gt;&lt;/a&gt;\n            &lt;time&gt;{{date}}&lt;/time&gt;&lt;address&gt;{{authors}}&lt;/address&gt;\n            &lt;p&gt;{{short_description}}&lt;/p&gt;\n            &lt;p&gt;{{category}}&lt;/p&gt;\n        &lt;/article&gt;`;\n    return wrapElement(applyInterpolations(newsTemplate, news));\n}\n</code></pre> <p>Aquest exemple \u00e9s una mica m\u00e9s complicat del que s'espera poder fer a aquestes al\u00e7ades. No obstant aix\u00f2, \u00e9s interessant intentar entendre el seu funcionament. S'hi fan servir <code>{{}}</code> com a interpolacions com a <code>Angular</code>. Aquesta pot ser una base per fer un motor de plantilles com tenen els frameworks. D'altra banda, es crea un div que actua de <code>Wrapper</code>, \u00e9s a dir, que envolta el veritable element per poder treballar nom\u00e9s amb strings fins al final, per\u00f2 retornar un <code>Element</code>, gr\u00e0cies a <code>innerHTML</code>.</p> <p>Com a millora a l'exemple anterior, el <code>Wrapper</code> pot ser un <code>fragment</code>. Aquest t\u00e9 millor rendiment, no nom\u00e9s permet treure el primer element fill, per la qual cosa no necessitem un divan que els contingui i no genera un node addicional. \u00c9s molt eficient inserint m\u00faltiples nodes, per inserir en bucle.</p> <pre><code>function renderComments(comments) {\n    const fragment = document.createDocumentFragment();\n\n    comments.forEach(comment =&gt; {\n        const commentElement = document.createElement('div');\n        commentElement.className = 'comment';\n        commentElement.innerHTML = `\n            &lt;h4&gt;${comment.author}&lt;/h4&gt;\n            &lt;p&gt;${comment.text}&lt;/p&gt;\n            &lt;time&gt;${comment.date}&lt;/time&gt;\n        `;\n        fragment.appendChild(commentElement); // Afegir cada comentari al fragment, no al DOM\n    });\n\n   return fragment;\n}\n\n// Dades d'exemple\nconst comments = [\n    { author: \"Aina\", text: \"Bon article!\", date: \"2024-11-11\" },\n    { author: \"Lluis\", text: \"Gr\u00e0cies per la informaci\u00f3.\", date: \"2024-11-10\" },\n    { author: \"Marta\", text: \"M'ha resultat molt \u00fatil.\", date: \"2024-11-09\" }\n];\n\n// Crida a la funci\u00f3 per renderitzar els comentaris\n document.getElementById('comments-section').appendChild(renderComments(comments)); \n // Inserir tots els comentaris alhora;\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#creacio-delements-ambtemplate","title":"Creaci\u00f3 d'elements amb<code>&lt;template&gt;</code>","text":"<p>L'etiqueta <code>&lt;template&gt;</code> \u00e9s especial. El seu interior no es renderitza com la resta, per\u00f2 queda accessible per ser buscat. La utilitat \u00e9s crear plantilles en HTML que puguin ser clonades i emplenades com es desitja.</p> <p>Vegem aquest HTML extret del web de refer\u00e8ncia:</p> <p>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template:</p> <pre><code>&lt;table id=\"producttable\"&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;td&gt;UPC_Code&lt;/td&gt;\n      &lt;td&gt;Product_Name&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;!-- dades opcionals es poden incloure aqu\u00ed opcionalment --&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;template id=\"productrow\"&gt;\n  &lt;tr&gt;\n    &lt;td class=\"record\"&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/template&gt;\n</code></pre> <p>I amb aquest javascript obtenim el contingut del temperat, es clona i s'omple les vegades que sigui necessari:</p> <pre><code>// Test to see if the browser supports the HTML template element by checking\n// for the presence of the template element's content attribute.\nif (\"content\" in document.createElement(\"template\")) {\n  // Instantiate the table with the existing HTML tbody\n  // and the row with the template\n  const tbody = document.querySelector(\"tbody\");\n  const template = document.querySelector(\"#productrow\");\n\n  // Clone the new row and insert it into the table\n  const clone = template.content.cloneNode(true);\n  let td = clone.querySelectorAll(\"td\");\n  td[0].textContent = \"1235646565\";\n  td[1].textContent = \"Stuff\";\n\n  tbody.appendChild(clone);\n\n  // Clone the new row and insert it into the table\n  const clone2 = template.content.cloneNode(true);\n  td = clone2.querySelectorAll(\"td\");\n  td[0].textContent = \"0384928528\";\n  td[1].textContent = \"Acme Kidney Beans 2\";\n\n  tbody.appendChild(clone2);\n} else {\n  // Find another way to add the rows to the table because\n  // the HTML template element is not supported.\n}\n</code></pre> <p>Qualsevol de les formes que hem vist per crear elements, mitjan\u00e7ant template literal o funcions tagged, creant les nostres interpolacions o amb templates \u00e9s v\u00e0lida i combinable. Per aconseguir el que els frameworks fan amb els seus motors de plantilla hi ha molt de cam\u00ed per fer,  perqu\u00e8 no s'ha parlat del <code>shadow DOM</code> i altres t\u00e8cniques avan\u00e7ades com els <code>custom elements</code> per aconseguir plantilles amb reactivitat. Si aconsegueixes fer un motor de plantilles suficientment gen\u00e8ric per a l'aplicaci\u00f3 en la qual estem treballant, l'\u00fas de frameworks queda molt menys justificat.</p>"},{"location":"Moduls/DWEC/dom.html#esperar-a-que-es-carregui-el-dom","title":"Esperar a que es carregui el DOM","text":"<p>Podem assegurar-nos que el DOM estigui completament carregat abans d'executar el nostre script utilitzant <code>DOMContentLoaded</code>.</p> <pre><code>(function () {\n    \"use strict\";\n    document.addEventListener(\"DOMContentLoaded\", function () {\n        for (let i = 0; i &lt; 100; i++) {\n            let container = document.getElementById(\"content\");\n            let number = document.createElement(\"p\");\n            number.innerHTML = i;\n            container.appendChild(number);\n        }\n    });\n})();\n</code></pre> <p>Tamb\u00e9 podem col\u00b7locar el nostre script al final del cos (<code>body</code>)del document HTML.</p> <p>Si, a m\u00e9s, hi afegim l'atribut <code>defer</code> a un script, aquest es descarregar\u00e0 de manera as\u00edncrona i s'executar\u00e0 quan l'HTML hagi estat totalment interpretat i just abans que <code>DOMContentLoaded</code>.</p> <p>Si cal esperar que carregui tamb\u00e9 tot el CSS, \u00e9s a dir el <code>CSSOM</code>, podem rec\u00f3rrer a l'esdeveniment <code>load</code>, que espera a carregar i interpretar tot el CSS. Per\u00f2 si no \u00e9s necessari, \u00e9s millor esperar nom\u00e9s al DOM. Aix\u00f2 \u00e9s perqu\u00e8 hi ha recursos molt pesants com imatges o v\u00eddeos que pot fins i tot que no arribin a carregar.</p> <p>En general, recomanarem fer servir <code>DOMContentLoaded</code>en comptes de posar el script al final o <code>load</code>perqu\u00e8 en ser executat al principi, ja hi ha coses que es pot anar executant sense necessitat de DOM abans que carregui totalment. En qualsevol cas, els script en M\u00f2duls sempre s'executen en mode<code>defer</code>.</p>"},{"location":"Moduls/DWEC/dom.html#atributs-de-dades","title":"Atributs de Dades","text":"<p>HTML5 permet agregar atributs personalitzats no visuals a les etiquetes utilitzant <code>data-*</code>. Aquests atributs poden ser accessibles a trav\u00e9s de JavaScript fent servir <code>dataset</code>.</p> <pre><code>&lt;article\n    id=\"electriccars\"\n    data-columns=\"3\"\n    data-index-number=\"12314\"\n    data-parent=\"cars\"&gt;\n    ...\n&lt;/article&gt;\n</code></pre> <pre><code>let article = document.getElementById('electriccars');\nconsole.log(article.dataset.columns); // 3\nconsole.log(article.dataset.indexNumber); // 12314\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#formularis-a-javascript","title":"Formularis a JavaScript","text":"<p>En una aplicaci\u00f3 web, la validaci\u00f3 dels formularis es realitza tant en el costat del client com en el del servidor.</p> <p>De fet, l'\u00fanica validaci\u00f3 estrictament necess\u00e0ria s'ha de fer en el servidor per evitar peticions il\u00b7legals per clients com postman o curl.</p> <p>Per\u00f2 es pot fer servir Javascript per a molt m\u00e9s que validar formularis. Per exemple, ens pot ajudar a autocompletar camps, descarregar dades en segon pla o tractar amb imatges o dades complexes abans d'enviar al servidor.</p>"},{"location":"Moduls/DWEC/dom.html#atributs-de-formularis","title":"Atributs de Formularis","text":"<p>El contingut dels camps d'entrada en un formulari es pot visualitzar i modificar utilitzant l'atribut <code>value</code>. Altres elements del formulari, com els botons d'opci\u00f3 (r\u00e0dio button) i les caselles de verificaci\u00f3 (checkbox), han de tenir un <code>name</code> com\u00fa i tamb\u00e9 utilitzen els atributs <code>value</code> i <code>checked</code>. Per als elements <code>select</code>, s'utilitzen els atributs <code>options</code> i <code>selectedIndex</code>.</p> <p>Observa l'exemple a continuaci\u00f3, que fa servir la manera (obsoleta) d'associar esdeveniments <code>onclick</code> per executar una funci\u00f3 que informi dels valors dels inputs del formulari:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Formulari d'Exemple&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"exampleForm\"&gt;\n        &lt;label for=\"textInput\"&gt;Text:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"textInput\" value=\"Text inicial\"&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label&gt;Opcions:&lt;/label&gt;\n        &lt;input type=\"radio\" name=\"options\" value=\"opcio1\" checked&gt; Opci\u00f3 1\n        &lt;input type=\"radio\" name=\"options\" value=\"opcio2\"&gt; Opci\u00f3 2&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"checkboxInput\"&gt;Casella:&lt;/label&gt;\n        &lt;input type=\"checkbox\" id=\"checkboxInput\" checked&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"selectInput\"&gt;Selecciona:&lt;/label&gt;\n        &lt;select id=\"selectInput\"&gt;\n            &lt;option value=\"1\"&gt;Opci\u00f3 1&lt;/option&gt;\n            &lt;option value=\"2\" selected&gt;Opci\u00f3 2&lt;/option&gt;\n            &lt;option value=\"3\"&gt;Opci\u00f3 3&lt;/option&gt;\n        &lt;/select&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;button type=\"button\" onclick=\"manipulateValues()\"&gt;Veure i Manipular Valors&lt;/button&gt;\n    &lt;/form&gt;\n\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>function manipulateValues() {\n    // Obtenir el valor del camp de text\n    let textInput = document.getElementById('textInput');\n    console.log('Valor del camp de text:', textInput.value);\n    textInput.value = 'Nou text';\n\n    // Obtenir el valor del radi button seleccionat\n    let selectedOption = document.querySelector('input[name=\"options\"]:checked');\n    console.log('Valor del radi button seleccionat:', selectedOption.value);\n    // Canviar la selecci\u00f3 del r\u00e0dio button\n    document.querySelector('input[name=\"options\"][value=\"opcio2\"]').checked = true;\n\n    // Obtenir el valor del checkbox\n    let checkboxInput = document.getElementById('checkboxInput');\n    console.log('Checkbox est\u00e0 marcat:', checkboxInput.checked);\n    // Canviar l'estat del checkbox\n    checkboxInput.checked = !checkboxInput.checked;\n\n    // Obtenir el valor del select\n    let selectInput = document.getElementById('selectInput');\n    console.log('Valor del select:', selectInput.value);\n    // Canviar la selecci\u00f3 del select\n    selectInput.value = '3';\n}\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#cicle-tradicional-del-formulari","title":"Cicle Tradicional del Formulari","text":"<p>Tradicionalment, un formulari est\u00e0 dissenyat per enviar dades mitjan\u00e7ant HTTP al servidor. En enviar (submit) un formulari, el navegador empaqueta les dades i les envia utilitzant el m\u00e8tode HTTP especificat (com GET o POST). Els formularis poden incloure validaci\u00f3 interna mitjan\u00e7ant HTML, cosa que \u00e9s m\u00e9s r\u00e0pida que JavaScript per\u00f2 ofereix menys control i personalitzaci\u00f3. La validaci\u00f3 interna d'HTML genera pseudo-classes que poden estilitzar-se amb CSS.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Formulari amb Validaci\u00f3&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"validationForm\"&gt;\n        &lt;label for=\"name\"&gt;Nom:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"email\"&gt;Correu Electr\u00f2nic:&lt;/label&gt;\n        &lt;input type=\"email\" id=\"email\" name=\"email\" required&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"password\"&gt;Contrasenya:&lt;/label&gt;\n        &lt;input type=\"password\" id=\"password\" name=\"password\" required minlength=\"6\"&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n    &lt;/form&gt;\n\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>/* Estils b\u00e0sics */\nform {\n    width: 300px;\n    margin: 0 auto;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 5px;\n}\n\ninput {\n    width: 100%;\n    padding: 8px;\n    margin-bottom: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\n/* Pseudo-classes per a la validaci\u00f3 */\ninput:required {\n    border-left: 5px solid #0000FF; /* Vora blava per a camps requerits */\n}\n\ninput:valid {\n    border-left: 5px solid #00FF00; /* Vora verda per a camps v\u00e0lids */\n}\n\ninput:invalid {\n    border-left: 5px solid #FF0000; /* Vora vermell per a camps inv\u00e0lids */\n}\n\n/* Pseudo-classe per a camp enfocat */\ninput:focus {\n    outline: none;\n    border-color: #66AFE9;\n    box-shadow: 0 0 8px rgba(102, 175, 233, 0.6);\n}\n</code></pre> <pre><code>document.getElementById('validationForm').addEventListener('submit', function(event) {\n    event.preventDefault(); // Evita l'enviament del formulari per a la demostraci\u00f3\n    alert('Formulari enviat correctament (validaci\u00f3 exitosa)');\n});\n</code></pre> <p>Aquest exemple demostra com utilitzar pseudo-classes CSS per estilitzar formularis amb validaci\u00f3 interna en HTML.</p>"},{"location":"Moduls/DWEC/dom.html#cicle-del-formulari-amb-javascript","title":"Cicle del Formulari amb JavaScript","text":"<p>Podem interceptar i aturar el cicle per defecte d'un formulari per validar-lo i enviar-lo utilitzant JavaScript. D'aquesta manera, podem evitar tenir un bot\u00f3 <code>submit</code> i controlar completament el proc\u00e9s d'enviament. Si el formulari envia dades al servidor i es refresca, JavaScript perd el control del programa. Per evitar aix\u00f2, podem utilitzar <code>preventDefault()</code> dins de l'esdeveniment <code>submit</code> o retornar <code>false</code>.</p>"},{"location":"Moduls/DWEC/dom.html#exemple-dinterceptar-submit-amb-javascript","title":"Exemple d'Interceptar Submit amb JavaScript","text":"<p>Podem manejar esdeveniments de formularis per personalitzar el seu comportament. Un exemple com\u00fa \u00e9s l'\u00fas de l'esdeveniment <code>onsubmit</code> per executar una funci\u00f3 de validaci\u00f3 abans d'enviar el formulari. Si la funci\u00f3 de validaci\u00f3 retorna <code>true</code>, el formulari s'envia; altrament, es cancel\u00b7la l'enviament.</p> <pre><code>&lt;form id=\"formulario\" onsubmit=\"return validar();\"&gt;\n  &lt;input type=\"text\" id=\"phone-number\" required&gt;\n  &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\nfunction validar() {\n  var phoneNumber = document.getElementById('phone-number').value;\n  var phoneRGEX = /^[(]{0,1}[0-9]{3}[)]{0,1}[-\\s\\.]{0,1}[0-9]{3}[-\\s\\.]{0,1}[0-9]{4}$/;\n  var phoneResult = phoneRGEX.test(phoneNumber);\n  alert(\"phone: \" + phoneResult);\n  return phoneResult; // Retorna true si \u00e9s v\u00e0lid, altrament false\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#enviar-formulari-per-javascript","title":"Enviar Formulari per JavaScript","text":"<p>Podem enviar un formulari mitjan\u00e7ant JavaScript utilitzant el m\u00e8tode <code>submit()</code>. Aix\u00f2 \u00e9s \u00fatil quan volem enviar el formulari despr\u00e9s de realitzar alguna operaci\u00f3 addicional o validaci\u00f3 personalitzada.</p>"},{"location":"Moduls/DWEC/dom.html#exemple-denviament-per-javascript","title":"Exemple d'Enviament per JavaScript","text":"<pre><code>&lt;button onclick=\"enviarFormulari()\"&gt;Enviar&lt;/button&gt;\n\n&lt;script&gt;\nfunction enviarFormulari() {\n  let formulari = document.getElementById(\"formulari\");\n  formulari.submit();\n}\n&lt;/script&gt;\n</code></pre> <p>Per\u00f2 si no ens val amb enviar el formulari amb <code>submit()</code> i volem manipular les seves dades abans d'enviar o enviar una API per POST manualment, obtindrem el contingut input per input o amb <code>FormData</code>:</p> <pre><code>div.querySelector(\"#buttonSubmit\").addEventListener('click', async (event) =&gt; {\n      event.preventDefault();\n      const newProfile = Object.fromEntries(new FormData(div.querySelector('form')).entries());\n      updateCurrentProfile(newProfile); // Li passem un objecte. Tot i que en una petici\u00f3 POST tradicional podem enviar un FormData directament amb fetch\n    });\n</code></pre> <p>Mirar el cap\u00edtol de comunicaci\u00f3 amb el servidor per a m\u00e9s informaci\u00f3 i exemples amb 'FormData</p> <p> </p> <p>Documentaci\u00f3 encara en proc\u00e9s </p>"},{"location":"Moduls/DWEC/git.html","title":"Introducci\u00f3 a Git","text":""},{"location":"Moduls/DWEC/git.html#introduccio-a-git","title":"Introducci\u00f3 a Git","text":"<p>Al m\u00f3n del desenvolupament web, \u00e9s crucial comptar amb eines i t\u00e8cniques que permetin gestionar i col\u00b7laborar en projectes de manera eficient. En aquest article introductori, abordarem una de les eines m\u00e9s utilitzades a la ind\u00fastria per al control de versions: Git.</p> <p></p> <p>L'objectiu \u00e9s proporcionar una base s\u00f2lida per comprendre i aplicar Git als teus futurs projectes.</p>"},{"location":"Moduls/DWEC/git.html#que-es-git","title":"Qu\u00e8 \u00e9s Git","text":"<p>Git \u00e9s un sistema de control de versions distribu\u00eft, creat el 2005 per Linus Torvalds, el creador del nucli de Linux. Des de llavors, s'ha convertit en l'eina est\u00e0ndard per al control de versions a la majoria dels projectes de programari. La popularitat de Git es deu a la facilitat d'\u00fas, robustesa i capacitat per treballar de forma descentralitzada.</p>"},{"location":"Moduls/DWEC/git.html#control-de-versions","title":"Control de versions","text":"<p>El control de versions \u00e9s una t\u00e8cnica que permet portar un registre dels canvis realitzats en un conjunt de fitxers al llarg del temps. Amb Git, els desenvolupadors poden treballar en diferents branques d'un projecte, cadascuna amb les seves pr\u00f2pies modificacions i caracter\u00edstiques. Despr\u00e9s aquestes branques es poden combinar (mergeix) per unificar els canvis en una sola l\u00ednia de desenvolupament.</p> <p>Un dels principals avantatges de Git \u00e9s la seva arquitectura distribu\u00efda. A difer\u00e8ncia d'altres sistemes de control de versions centralitzats, cada desenvolupador t\u00e9 la seva pr\u00f2pia c\u00f2pia completa del repositori, incloent-hi tot l'historial de canvis. Aix\u00f2 permet que els desenvolupadors treballin de forma independent i sense connexi\u00f3 a internet, sincronitzant els canvis amb altres repositoris quan sigui necessari.</p> <p>Un repositori \u00e9s una carpeta on guardarem el nostre projecte: pot ser internet o qualsevol lloc del nostre equip.</p>"},{"location":"Moduls/DWEC/git.html#comencar-a-utilitzar-git","title":"Comen\u00e7ar a utilitzar Git","text":"<p>Per comen\u00e7ar a utilitzar Git, cal instal\u00b7lar el programari al vostre equip i configurar la vostra identitat. Despr\u00e9s, pots crear un nou repositori o clonar-ne un d'existent. El flux de treball b\u00e0sic de Git implica realitzar canvis als fitxers, afegir-los a l'\u00e0rea de preparaci\u00f3 (staging), confirmar (commit) els canvis i, finalment, enviar (push) els canvis al repositori remot.</p> <p>En el context del desenvolupament web en entorn client, Git \u00e9s especialment \u00fatil per gestionar els canvis al codi font de les aplicacions i col\u00b7laborar amb altres desenvolupadors. Per exemple, podeu utilitzar Git per mantenir un historial dels canvis als vostres fitxers HTML, CSS i JavaScript, i col\u00b7laborar amb altres membres de l'equip en la implementaci\u00f3 de noves caracter\u00edstiques o la correcci\u00f3 d'errors.</p> <p>A m\u00e9s, l'ecosistema de Git inclou plataformes com GitHub, GitLab i Bitbucket, que ofereixen serveis addicionals per gestionar i col\u00b7laborar en projectes de programari. Aquestes plataformes permeten crear repositoris en l\u00ednia, gestionar permisos d'acc\u00e9s, fer revisions de codi i m\u00e9s.</p>"},{"location":"Moduls/DWEC/git.html#installar-git","title":"Instal\u00b7lar git","text":"<p>Per instal\u00b7lar Git, tan sols has d'anar a aquest enlla\u00e7 https://git-scm.com/downloads i seguir els passos.</p>"},{"location":"Moduls/DWEC/git.html#inicialitzar-un-repositori-git","title":"Inicialitzar un repositori Git","text":"<p>Per comen\u00e7ar a utilitzar Git en un projecte, primer cal inicialitzar un repositori. Des de la terminal, navega fins a la carpeta del projecte i executa la seg\u00fcent ordre:</p> <p><code>git init</code></p> <p>Aix\u00f2 crear\u00e0 una carpeta oculta anomenada \u201c.git\u201d al directori del projecte, on s'emmagatzemar\u00e0 tota la informaci\u00f3 del repositori i ja estarem a punt per comen\u00e7ar a llan\u00e7ar ordres per gestionar el nostre repositori.</p>"},{"location":"Moduls/DWEC/git.html#ordres-mes-habituals-de-git","title":"Ordres m\u00e9s habituals de Git","text":"<p>Ara que ja coneixem els avantatges de Git, hem instal\u00b7lat el programari i tenim un repositori funcionant, \u00e9s hora d'aprendre com funciona i repassar les ordres m\u00e9s habituals amb exemples pr\u00e0ctics.</p>"},{"location":"Moduls/DWEC/git.html#afegeix-fitxers-a-larea-de-preparacio-staging","title":"Afegeix fitxers a l'\u00e0rea de preparaci\u00f3 (staging)","text":"<p>Per afegir fitxers a l'\u00e0rea de preparaci\u00f3, utilitzem l'ordre \u201cgit add\u201d. Per exemple, si volem afegir un fitxer anomenat \u201cindex.html\u201d, executem:</p> <p><code>git afegir index.html</code></p> <p>Tamb\u00e9 \u00e9s possible afegir tots els fitxers del projecte amb una sola ordre:</p> <p><code>git add.</code></p>"},{"location":"Moduls/DWEC/git.html#confirmar-canvis-commit","title":"Confirmar canvis (commit)","text":"<p>Un cop els fitxers estiguin a l'\u00e0rea de preparaci\u00f3, podem confirmar els canvis realitzats amb l'ordre \u201cgit commit\u201d. Sempre cal incloure un missatge descriptiu que expliqui els canvis realitzats:</p> <p><code>git commit -m \"Creaci\u00f3 del fitxer index.html\"</code></p>"},{"location":"Moduls/DWEC/git.html#consulteu-lhistorial-de-canvis-log","title":"Consulteu l'historial de canvis (log)","text":"<p>Podem veure l'historial de canvis del repositori utilitzant l'ordre \u201cgit log\u201d:</p> <p><code>git log</code></p> <p>Aix\u00f2 mostrar\u00e0 una llista dels commits realitzats juntament amb informaci\u00f3 detallada, com ara l'autor, la data i el missatge del commit.</p>"},{"location":"Moduls/DWEC/git.html#crear-i-canviar-a-una-nova-branca-branch","title":"Crear i canviar a una nova branca (branch)","text":"<p>Per crear una nova branca i canviar-la, utilitzem l'ordre \u201cgit checkout\u201d amb l'opci\u00f3 \u201c-b\u201d:</p> <p><code>git checkout -b nova-branca</code></p> <p>Aix\u00f2 ens permetr\u00e0 treballar a la nova branca sense afectar el codi de la branca principal (generalment anomenada \u201cmain\u201d o \u201cmaster\u201d).</p>"},{"location":"Moduls/DWEC/git.html#fusionar-branques-merge","title":"Fusionar branques (merge)","text":"<p>Quan h\u00e0gim acabat de treballar en una branca i volem unificar els canvis amb la branca principal, primer canviem a la branca principal:</p> <p><code>git checkout main</code></p> <p>Despr\u00e9s, fusionem la branca que cont\u00e9 els canvis:</p> <p><code>git merge nova-branca</code></p>"},{"location":"Moduls/DWEC/git.html#enviar-canvis-al-repositori-remot-push","title":"Enviar canvis al repositori remot (push)","text":"<p>Per enviar els canvis al repositori remot, primer hem de connectar el nostre repositori local amb el remot utilitzant l'ordre \u201cgit remote\u201d:</p> <p><code>git remote add origin URL_DEL_REPOSITORI_REMOT</code></p> <p>Despr\u00e9s, enviem els canvis amb l'ordre \u201cgit push\u201d:</p> <p><code>git push -u origin principal</code></p>"},{"location":"Moduls/DWEC/git.html#altres-ordres-utils","title":"Altres ordres \u00fatils","text":"<p>Coneixent tot aix\u00f2 ja podem treballar amb el b\u00e0sic del sistema de control de versions Git, per\u00f2, \u00e9s possible que vulguem realitzar algunes accions no descrites amb anterioritat. Vegem quines s\u00f3n algunes de les ordres que podries necessitar a partir d'aqu\u00ed.</p>"},{"location":"Moduls/DWEC/git.html#clonar-repositori","title":"Clonar repositori","text":"<p><code>git clone URL_DEL_REPOSITORI_REMOT</code></p>"},{"location":"Moduls/DWEC/git.html#coneixer-els-fitxers-modificats","title":"Con\u00e8ixer els fitxers modificats","text":"<p><code>git status</code> <code>git status -s</code></p>"},{"location":"Moduls/DWEC/git.html#baixar-canvis","title":"Baixar canvis","text":"<p><code>git pull</code></p>"},{"location":"Moduls/DWEC/git.html#visualitzacio-de-branques","title":"Visualitzaci\u00f3 de branques","text":"<p><code>git branch</code> <code>git branch --llist</code></p>"},{"location":"Moduls/DWEC/git.html#esborrar-una-branca","title":"Esborrar una branca","text":"<p><code>git branch -d NOM_DE_LA_BRANCA</code></p>"},{"location":"Moduls/DWEC/git.html#desfer-un-commit","title":"Desfer un commit","text":"<p><code>git revert CODI_DEL_COMMIT</code></p> <p>Aquestes s\u00f3n nom\u00e9s algunes de les ordres m\u00e9s b\u00e0siques i habituals a Git. Amb el temps, aprendr\u00e0s m\u00e9s ordres i t\u00e8cniques per aprofitar al m\u00e0xim aquesta poderosa eina. Recordeu sempre practicar i consultar la documentaci\u00f3 de Git si tens dubtes. Bona sort en els teus projectes!</p>"},{"location":"Moduls/DWEC/nodejs.html","title":"Nodejs","text":""},{"location":"Moduls/DWEC/nodejs.html#introduccio-a-nodejs","title":"Introducci\u00f3 a Node.js","text":"<p>En l'\u00e0mbit del desenvolupament web, l'entorn client es refereix a la interacci\u00f3 que passa al navegador web de l'usuari. Durant molts anys JavaScript ha estat el llenguatge de programaci\u00f3 principal per al desenvolupament en entorn client, permetent la creaci\u00f3 d'aplicacions web interactives i din\u00e0miques. Tot i aix\u00f2, l'ecosistema de JavaScript ha evolucionat considerablement, i una de les tecnologies m\u00e9s influents en aquesta transformaci\u00f3 ha estat Node.js.</p> <p>Node.js \u00e9s un entorn d'execuci\u00f3 de Javascript basat en el motor V8 de Google Chrome. Va ser creat per Ryan Dahl el 2009 i ha revolucionat la manera com els desenvolupadors utilitzen JavaScript, permetent el seu \u00fas m\u00e9s enll\u00e0 del navegador i estenent-lo al costat del servidor. Aix\u00f2 ha proporcionat als desenvolupadors una plataforma unificada per construir aplicacions web escalables i dalt rendiment utilitzant un sol llenguatge de programaci\u00f3.</p>"},{"location":"Moduls/DWEC/nodejs.html#lexit-de-nodejs","title":"L'\u00e8xit de Node.js","text":"<p>Una de les caracter\u00edstiques clau de Node.js \u00e9s el model d'entrada i sortida no bloquejant (I/O), basat en esdeveniments. Aix\u00f2 permet a les aplicacions manejar m\u00faltiples sol\u00b7licituds simult\u00e0niament sense bloquejar el flux d'execuci\u00f3, cosa que resulta en una major efici\u00e8ncia i menor lat\u00e8ncia en comparaci\u00f3 dels enfocaments tradicionals basats en fils. Aquesta caracter\u00edstica ha estat crucial per a l'\u00e8xit de Node.js en el desenvolupament d'aplicacions en temps real, com ara xats, jocs en l\u00ednia i plataformes de col\u00b7laboraci\u00f3.</p>"},{"location":"Moduls/DWEC/nodejs.html#gestio-de-paquets","title":"Gesti\u00f3 de paquets","text":"<p>L'ecosistema de Node.js \u00e9s un altre aspecte important que cal considerar en el desenvolupament web. Gr\u00e0cies al seu gestor de paquets, npm, els desenvolupadors tenen acc\u00e9s a una \u00e0mplia biblioteca de m\u00f2duls i eines de tercers que faciliten la creaci\u00f3 i el manteniment d'aplicacions web. Aix\u00f2 ha impulsat l'adopci\u00f3 d'enfocaments modulars i la reutilitzaci\u00f3 de codi a la comunitat de desenvolupament, millorant l'efici\u00e8ncia i la qualitat del programari produ\u00eft.</p>"},{"location":"Moduls/DWEC/nodejs.html#com-comencar-a-treballar-amb-nodejs","title":"Com comen\u00e7ar a treballar amb Node.js","text":"<p>Seguiu els passos que es descriuen a continuaci\u00f3 per comen\u00e7ar a explorar el m\u00f3n de Node.js.</p>"},{"location":"Moduls/DWEC/nodejs.html#1-installacio-de-nodejs","title":"1. Instal\u00b7laci\u00f3 de Node.js","text":"<p>Per comen\u00e7ar, hem d'instal\u00b7lar Node.js al nostre sistema. Visiteu el lloc web oficial de Node.js (https://nodejs.org/) i descarregueu la versi\u00f3 recomanada per al vostre sistema operatiu. Executeu l'instal\u00b7lador i seguiu les instruccions de la pantalla per completar la instal\u00b7laci\u00f3.</p>"},{"location":"Moduls/DWEC/nodejs.html#2-verificacio-de-la-installacio","title":"2. Verificaci\u00f3 de la instal\u00b7laci\u00f3","text":"<p>Quan h\u00e0giu instal\u00b7lat el Node.js, obriu una terminal o s\u00edmbol del sistema i executeu l'ordre seg\u00fcent per verificar que s'ha instal\u00b7lat correctament:</p> <pre><code>node -v\n</code></pre> <p>Si la instal\u00b7laci\u00f3 ha estat ser exitosa, haur\u00edeu de veure la versi\u00f3 de Node.js que heu instal\u00b7lat.</p>"},{"location":"Moduls/DWEC/nodejs.html#3-creacio-dun-fitxer-de-projecte","title":"3. Creaci\u00f3 d'un fitxer de projecte","text":"<p>Crea un nou directori per al teu projecte i navega a aquest directori a la terminal. A continuaci\u00f3, crea un fitxer anomenat \u201capp.js\u201d utilitzant un editor de text de la teva elecci\u00f3. Aquest fitxer contindr\u00e0 el nostre codi de Node.js.</p>"},{"location":"Moduls/DWEC/nodejs.html#4-escriure-el-teu-primer-programa-de-nodejs","title":"4. Escriure el teu primer programa de Node.js","text":"<p>Obre el fitxer \u201capp.js\u201d al teu editor de text i escriu el codi seg\u00fcent:</p> <p><code>console.log('Hola m\u00f3n des de Node.js!');</code></p> <p>Aquest codi \u00e9s un senzill\u00edssim programa de Node.js que imprimir\u00e0 'Hola m\u00f3n des de Node.js!' a la consola.</p>"},{"location":"Moduls/DWEC/nodejs.html#5-execucio-del-programa-de-nodejs","title":"5. Execuci\u00f3 del programa de Node.js","text":"<p>Torna a la terminal i assegura't que ets al directori del projecte. Executeu l'ordre seg\u00fcent per iniciar el programa de Node.js:</p> <p><code>node app.js</code></p> <p>Si tot funciona correctament, haur\u00edeu de veure el missatge 'Hola m\u00f3n des de Node.js!' impr\u00e8s a la consola.</p>"},{"location":"Moduls/DWEC/nodejs.html#6-installacio-de-paquets-amb-npm","title":"6. Instal\u00b7laci\u00f3 de paquets amb npm","text":"<p>Node.js utilitza un gestor de paquets anomenat npm per instal\u00b7lar m\u00f2duls addicionals. Provem aix\u00f2 instal\u00b7lant el popular paquet \u201cexpress\u201d per crear aplicacions web. Executa la seg\u00fcent comanda a la terminal:</p> <pre><code>npm install express\n</code></pre> <p>Aix\u00f2 instal\u00b7lar\u00e0 el paquet express i les seves depend\u00e8ncies en un directori anomenat \u201cnode_modules\u201d al vostre projecte.</p>"},{"location":"Moduls/DWEC/nodejs.html#7-creacio-dun-servidor-web-basic-amb-express","title":"7. Creaci\u00f3 d'un servidor web b\u00e0sic amb Express","text":"<p>Esborra la l\u00ednia de codi que hav\u00edem afegit al fitxer \u2018app.js\u2019 i afegeix les l\u00ednies seg\u00fcents a l'inici del teu fitxer per importar Express:</p> <pre><code>const express = require('express');\nconst app = express();\n</code></pre> <p>Crearem una ruta b\u00e0sica perqu\u00e8 el nostre servidor web respongui amb un \u201cHola M\u00f3n\u201d quan s'accedeixi a l'arrel del lloc. Afegeix el codi seg\u00fcent a app.js:</p> <pre><code>app.get('/', (req, res) =&gt; {\n res.send('Hola M\u00f3n!');\n});\n</code></pre> <p>Definirem el port on el nostre servidor web estar\u00e0 escoltant les sol\u00b7licituds. Afegeix el codi seg\u00fcent a app.js:</p> <p><code>const PORT = process.env.PORT || 3000;</code></p> <p>Aquesta l\u00ednia defineix un port per defecte (3000) si no hi ha cap port assignat a les variables d'entorn del sistema. Ara, anem a dir a la nostra aplicaci\u00f3 que comenci a escoltar al port que especifiquem. Afegeix el codi seg\u00fcent al final de app.js:</p> <p><code>app.listen(PORT, () =&gt; { console.log(`Servidor funcionant al port ${PORT}`); });</code></p> <p>Guarda els canvis a app.js i obre una terminal a la carpeta del projecte. Executa la seg\u00fcent ordre per iniciar el servidor: node app.js Hauries de veure el missatge \u201cServidor funcionant al port 3000\u201d a la terminal. Obre el teu navegador web i visita http://localhost:3000. Hauries de veure el missatge \u201cHola M\u00f3n!\u201d a la p\u00e0gina. Felicitats, has creat el teu primer servidor web utilitzant Express i Node.js.</p>"},{"location":"Moduls/DWEC/nodejs.html#8-creacio-dun-servidor-web-amb-rutes-i-parametres-dinamics","title":"8. Creaci\u00f3 d'un servidor web amb rutes i par\u00e0metres din\u00e0mics","text":"<p>Ara que ja tenim un servidor web b\u00e0sic funcionant al port 3000 amb un fitxer app.js, la nostra tasca \u00e9s ampliar el servidor perqu\u00e8 manegi rutes din\u00e0miques i par\u00e0metres. Volem aconseguir el seg\u00fcent:</p> <ul> <li>Crear una ruta /salutacio que accepti un par\u00e0metre nom i mostri una salutaci\u00f3 personalitzada.</li> <li>Crear una ruta /suma que accepti dos par\u00e0metres num\u00e8rics a i b i torneu el resultat de sumar-los.</li> </ul> <p>Vegem com ho podem fer.</p>"},{"location":"Moduls/DWEC/nodejs.html#pas-1-crear-la-ruta-salut","title":"Pas 1: Crear la ruta /salut.","text":"<p>Afegeix el codi seg\u00fcent al teu fitxer 'app.js' per crear la ruta /salut:</p> <pre><code>app.get('/salutacio/:nom', (req, res) =&gt; {\n    const nom = req.params.nom;\n    res.send(`Hola, ${nom}!`);\n});\n</code></pre> <p>Aquesta ruta accepta un par\u00e0metre anomenat nom i respon amb una salutaci\u00f3 personalitzada.</p>"},{"location":"Moduls/DWEC/nodejs.html#pas-2-crear-la-ruta-suma","title":"Pas 2: Crear la ruta /suma","text":"<p>Afegeix el codi seg\u00fcent al teu fitxer 'app.js' per crear la ruta /suma:</p> <pre><code>app.get('/suma/:a/:b', (req, res) =&gt; {\n    const a = parseFloat(req.params.a);\n    const b = parseFloat(req.params.b);\n    if (isNaN(a) || isNaN(b)) {\n        res.status(400).send('Els par\u00e0metres han de ser n\u00fameros v\u00e0lids.');\n    } else {\n        const resultat = a + b;\n        res.send(`La suma de ${a} i ${b} \u00e9s ${resultat}`);\n    }\n});\n</code></pre> <p>Aquesta ruta accepta dos par\u00e0metres num\u00e8rics, a i b, i torna el resultat de sumar-los. Tamb\u00e9 comprova si els par\u00e0metres s\u00f3n n\u00fameros v\u00e0lids i envia un missatge d'error en cas contrari.</p>"},{"location":"Moduls/DWEC/nodejs.html#pas-3-provar-les-rutes","title":"Pas 3: Provar les rutes","text":"<p>Guarda els canvis a app.js i reinicia el servidor si \u00e9s necessari. Despr\u00e9s, visita les seg\u00fcents adreces al teu navegador per provar les rutes:</p> <ol> <li>http://localhost:3000/saludo/Ana \u2013 Hauries de veure el missatge \u201cHola, Ana!\u201d.</li> <li>http://localhost:3000/suma/4/6 \u2013 Hauries de veure el missatge \u201cLa suma de 4 i 6 \u00e9s 10\u201d.</li> <li>http://localhost:3000/suma/a/6 \u2013 Hauries de veure el missatge \u201cEls par\u00e0metres han de ser n\u00fameros v\u00e0lids.\u201d</li> </ol> <p>Amb aquest exemple, heu aprofundit en l'\u00fas de JavaScript usant Node.js i Express en crear rutes din\u00e0miques i manejar par\u00e0metres en les sol\u00b7licituds. Aix\u00f2 us permetr\u00e0 crear aplicacions web m\u00e9s avan\u00e7ades i personalitzades.</p> <p>Com heu pogut veure, treballar amb Node.js desvincula la programaci\u00f3 amb JavaScript del navegador i ens permet resoldre tasques tremendament interessants amb molt poques l\u00ednies de codi. Evidentment aquest \u00e9s simplement un punt de partida des d'on iniciar el cam\u00ed amb la programaci\u00f3 JavaScript del costat servidor. Espero que t'hagi servit per iniciar-te en aquesta tecnologia i ho aprofitis per continuar aprofundint en el seu estudi.</p>"},{"location":"Moduls/DWEC/npm.html","title":"NPM","text":""},{"location":"Moduls/DWEC/npm.html#npm","title":"NPM","text":"<p>npm (Node Package Manager) es una herramienta esencial en el desarrollo web moderno, especialmente para la gesti\u00f3n de paquetes y m\u00f3dulos JavaScript. Comprender sus componentes y c\u00f3mo se integra en el flujo de trabajo del frontend es crucial.</p> <p>La p\u00e1gina web: El sitio oficial de npm (https://www.npmjs.com/) permite descubrir nuevos paquetes, colaborar y reportar errores. Es similar a c\u00f3mo funciona GitHub, proporcionando una plataforma centralizada para la comunidad de desarrolladores.</p> <p>El cliente por CLI: El cliente de l\u00ednea de comandos de npm permite instalar, actualizar y gestionar paquetes y programas JavaScript de manera eficiente, similar a c\u00f3mo <code>apt</code> gestiona paquetes en sistemas basados en Debian.</p> <p>El registro: npm mantiene un registro de paquetes que se pueden instalar y actualizar, facilitando la colaboraci\u00f3n y la gesti\u00f3n de dependencias.</p>"},{"location":"Moduls/DWEC/npm.html#instalacion-de-npm","title":"Instalaci\u00f3n de npm","text":"<p>Para comenzar a usar npm, es necesario tener Node.js instalado, ya que npm se incluye con Node.js. Aqu\u00ed hay dos formas comunes de instalar Node.js y npm.</p> <p>Desde los repositorios de Ubuntu:</p> <pre><code>node -v\nnpm -v\nsudo apt install nodejs\nsudo apt install npm\n</code></pre> <p>Desde el control de versiones de Node:</p> <pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash\nnvm list-remote\nnvm install v13.6.0\n</code></pre> <p>Mantener Node.js actualizado es importante para aprovechar las \u00faltimas caracter\u00edsticas y mejoras de seguridad. Para actualizar Node.js, puedes usar npm:</p> <pre><code>sudo npm install -g n\nsudo n stable\nsudo npm install -g npm\n</code></pre>"},{"location":"Moduls/DWEC/npm.html#administracion-de-paquetes-con-npm","title":"Administraci\u00f3n de Paquetes con npm","text":"<p>npm facilita la instalaci\u00f3n, actualizaci\u00f3n y gesti\u00f3n de paquetes en tus proyectos. Aqu\u00ed tienes algunos comandos b\u00e1sicos:</p> <ul> <li> <p>Inicializar un nuevo proyecto: </p><pre><code>npm init\n</code></pre><p></p> </li> <li> <p>Instalar un paquete: </p><pre><code>npm install &lt;nombre-paquete&gt; (o npm i &lt;nombre-paquete&gt;)\n</code></pre><p></p> </li> <li> <p>Instalar un paquete globalmente: </p><pre><code>npm install -g &lt;nombre-paquete&gt;\n</code></pre><p></p> </li> <li> <p>Desinstalar un paquete: </p><pre><code>npm uninstall &lt;nombre-paquete&gt;\n</code></pre><p></p> </li> <li> <p>Actualizar un paquete: </p><pre><code>npm update &lt;nombre-paquete&gt;\n</code></pre><p></p> </li> <li> <p>Listar paquetes instalados: </p><pre><code>npm list\n</code></pre><p></p> </li> </ul>"},{"location":"Moduls/DWEC/npm.html#el-archivo-packagejson","title":"El Archivo package.json","text":"<p>El <code>package.json</code> es el coraz\u00f3n de cualquier proyecto npm. Declara las bibliotecas instaladas y sus versiones, as\u00ed como scripts que se pueden ejecutar con <code>npm run</code>.</p> <p>Ejemplo de package.json:</p> <pre><code>{\n \"name\": \"webpackinicial\",\n \"version\": \"1.0.0\",\n \"description\": \"Projecte inicial npm\",\n \"main\": \"index.js\",\n \"scripts\": {\n   \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"\n },\n \"author\": \"\",\n \"license\": \"ISC\"\n}\n</code></pre>"},{"location":"Moduls/DWEC/npm.html#ejemplo-instalacion-de-jquery","title":"Ejemplo: Instalaci\u00f3n de jQuery","text":"<p>Para instalar y utilizar jQuery en un proyecto, sigue estos pasos:</p> <ol> <li> <p>Inicializa un nuevo proyecto npm:</p> <pre><code>npm init\n</code></pre> </li> <li> <p>Instala jQuery:</p> <pre><code>npm install jquery\n</code></pre> </li> <li> <p>Incluye jQuery en tu HTML:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n   &lt;meta charset=\"UTF-8\"&gt;\n   &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n   &lt;title&gt;Document&lt;/title&gt;\n   &lt;script src=\"./node_modules/jquery/dist/jquery.js\"&gt;&lt;/script&gt;\n   &lt;script&gt;\n     $(function() {\n       console.log($);\n     });\n   &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> </ol>"},{"location":"Moduls/DWEC/npm.html#motivaciones-para-usar-npm","title":"Motivaciones para Usar npm","text":"<p>La programaci\u00f3n del frontend hoy en d\u00eda puede ser tan compleja como la del backend. Mantener todo el c\u00f3digo y las dependencias de terceros en archivos .html y .js puede ser complicado. Aqu\u00ed es donde npm resulta invaluable:</p> <ul> <li>Automatizaci\u00f3n de tareas:</li> <li>Recarga en vivo de los cambios.</li> <li>Minificaci\u00f3n y ofuscaci\u00f3n del c\u00f3digo.</li> <li>Incrementar la compatibilidad entre navegadores.</li> <li> <p>Compilaci\u00f3n de SASS, TypeScript, etc.</p> </li> <li> <p>Gesti\u00f3n de dependencias:</p> </li> <li>Mantener y actualizar bibliotecas de terceros</li> </ul>"},{"location":"Moduls/DWEC/npm.html#creacion-de-un-nuevo-proyecto-node","title":"Creaci\u00f3n de un Nuevo Proyecto Node","text":"<p>Para crear un nuevo proyecto Node, aseg\u00farate de tener versiones recientes de Node.js y npm:</p> <pre><code>node --version    # Debe ser superior a la 8\nnpm --version  # Debe ser superior a la 6\nnpm init \n</code></pre> <p>Esto crea un archivo <code>package.json</code> en tu proyecto.</p>"},{"location":"Moduls/DWEC/npm.html#integracion-con-git","title":"Integraci\u00f3n con Git","text":"<p>El directorio <code>node_modules</code> es muy grande y no debe subirse al repositorio. Aseg\u00farate de incluirlo en tu <code>.gitignore</code>:</p> <pre><code>echo \"node_modules\" &gt;&gt; .gitignore\n</code></pre> <p>Cuando otros clonen tu repositorio, solo necesitan ejecutar <code>npm install</code> para instalar las dependencias listadas en <code>package.json</code>.</p>"},{"location":"Moduls/DWEC/promesas.html","title":"Asincron\u00eda y Promesas","text":""},{"location":"Moduls/DWEC/promesas.html#asincronia-y-promesas","title":"Asincron\u00eda y Promesas","text":"<p>Antes de estudiar las promesas, vamos a repasar algunos conceptos sobre c\u00f3mo funciona internamente el motor de javascript. De esta manera ser\u00e1 m\u00e1s f\u00e1cil entender c\u00f3mo funcionan las promesas y c\u00f3mo usarlas. </p>"},{"location":"Moduls/DWEC/promesas.html#el-motor-de-javascript","title":"El Motor de JavaScript","text":"<p>El motor de JavaScript dentro del navegador es responsable de compilar y ejecutar el c\u00f3digo JavaScript, manejar la pila de funciones (call stack), gestionar el alojamiento de los objetos en memoria (heap) y recolectar la basura de los objetos que ya no se necesitan. Adem\u00e1s, proporciona una API con utilidades del navegador, red, funciones as\u00edncronas y m\u00e1s. En este cap\u00edtulo, exploraremos c\u00f3mo funciona el motor de JavaScript, incluyendo la ejecuci\u00f3n de c\u00f3digo s\u00edncrono y as\u00edncrono, y los conceptos de contexto de ejecuci\u00f3n y pila de llamadas.</p>"},{"location":"Moduls/DWEC/promesas.html#entorno-de-ejecucion","title":"Entorno de Ejecuci\u00f3n","text":"<p>JavaScript solo puede tener un hilo de ejecuci\u00f3n (en principio). Esto significa que si solicitamos algo al servidor de forma s\u00edncrona, toda la web se detendr\u00e1 hasta que llegue la respuesta. Sin embargo, los navegadores tienen un entorno de ejecuci\u00f3n que permite que JavaScript realice solicitudes de forma as\u00edncrona y contin\u00fae ejecutando otras tareas. Estas peticiones as\u00edncronas las proporciona las <code>web APIs</code> y sus respuestas pueden ser gestionadas mediante Callbacks, Promesas o Async/Await. Para entender c\u00f3mo funcionan las peticiones as\u00edncronas en JavaScript, es fundamental comprender los conceptos de Contexto de Ejecuci\u00f3n y Pila de Llamadas.</p>"},{"location":"Moduls/DWEC/promesas.html#contexto-de-ejecucion-y-pila-de-llamadas","title":"Contexto de Ejecuci\u00f3n y Pila de Llamadas","text":""},{"location":"Moduls/DWEC/promesas.html#contexto-de-ejecucion","title":"Contexto de Ejecuci\u00f3n","text":"<p>El contexto de ejecuci\u00f3n es el entorno en el cual JavaScript se eval\u00faa y ejecuta. Cada vez que se ejecuta un script o se llama a una funci\u00f3n, se crea un nuevo contexto de ejecuci\u00f3n. Existen dos tipos principales de contextos de ejecuci\u00f3n: el contexto global y el contexto de funci\u00f3n.</p>"},{"location":"Moduls/DWEC/promesas.html#contexto-de-ejecucion-global","title":"Contexto de Ejecuci\u00f3n Global","text":"<p>El contexto de ejecuci\u00f3n global se crea cuando se carga una p\u00e1gina web o un archivo JavaScript en un entorno de ejecuci\u00f3n, como un navegador o Node.js. Este contexto es el entorno predeterminado en el que se eval\u00faa y ejecuta el c\u00f3digo global, es decir, cualquier c\u00f3digo que no est\u00e9 dentro de una funci\u00f3n.</p> <pre><code>(()=&gt;{\nlet globalVar = \"I am global\";\n\nfunction showGlobalVar() {\n  console.log(globalVar); // Puede acceder a globalVar porque est\u00e1 en el contexto global\n}\n\nshowGlobalVar(); // I am global\n})()\n</code></pre> <pre><code>I am global\n</code></pre> <p>En este ejemplo, <code>globalVar</code> se define en el contexto global, y la funci\u00f3n <code>showGlobalVar</code> puede acceder a <code>globalVar</code> porque tambi\u00e9n se encuentra en el contexto global.</p>"},{"location":"Moduls/DWEC/promesas.html#contexto-de-ejecucion-de-funcion","title":"Contexto de Ejecuci\u00f3n de Funci\u00f3n","text":"<p>Cada vez que se llama a una funci\u00f3n, se crea un nuevo contexto de ejecuci\u00f3n para esa funci\u00f3n. Este contexto de ejecuci\u00f3n incluye el \u00e1mbito l\u00e9xico de la funci\u00f3n, el objeto <code>this</code>, y una referencia al contexto de ejecuci\u00f3n de su entorno exterior (si lo hay).</p> <pre><code>(()=&gt;{\nlet globalVar = \"I am global\";\n\nfunction outerFunction() {\n  let outerVar = \"I am outer\";\n\n  function innerFunction() {\n    let innerVar = \"I am inner\";\n    console.log(globalVar); // I am global\n    console.log(outerVar);  // I am outer\n    console.log(innerVar);  // I am inner\n  }\n\n  innerFunction();\n}\n\nouterFunction();\n})();\n</code></pre> <pre><code>I am global\nI am outer\nI am inner\n</code></pre> <p>En este ejemplo, <code>outerFunction</code> crea su propio contexto de ejecuci\u00f3n que incluye <code>outerVar</code>. Cuando <code>innerFunction</code> se llama, se crea un nuevo contexto de ejecuci\u00f3n que incluye <code>innerVar</code>. <code>innerFunction</code> tambi\u00e9n tiene acceso a <code>outerVar</code> y <code>globalVar</code> debido a la cadena de \u00e1mbito l\u00e9xico.</p>"},{"location":"Moduls/DWEC/promesas.html#pila-de-llamadas-call-stack","title":"Pila de Llamadas (Call Stack)","text":"<p>La pila de llamadas es una estructura de datos LIFO (Last In, First Out) que almacena los contextos de ejecuci\u00f3n en el orden en que deben ejecutarse. Cada vez que se llama a una funci\u00f3n, su contexto de ejecuci\u00f3n se agrega a la pila de llamadas. Cuando la funci\u00f3n termina, su contexto se elimina de la pila.</p> <pre><code>(()=&gt;{\n    function first() {\n      console.log(\"Entering first\");\n      second();\n      console.log(\"Exiting first\");\n    }\n\n    function second() {\n      console.log(\"Entering second\");\n      third();\n      console.log(\"Exiting second\");\n    }\n\n    function third() {\n      console.log(\"Entering third\");\n      // Realiza alguna tarea\n      console.log(\"Exiting third\");\n    }\n\n    first();\n    })();\n</code></pre> <pre><code>Entering first\nEntering second\nEntering third\nExiting third\nExiting second\nExiting first\n</code></pre> <p>An\u00e1lisis del Call Stack:</p> <ol> <li><code>first()</code> se agrega a la pila de llamadas.</li> <li><code>console.log(\"Entering first\")</code> se ejecuta dentro de <code>first()</code>.</li> <li><code>second()</code> se agrega a la pila de llamadas.</li> <li><code>console.log(\"Entering second\")</code> se ejecuta dentro de <code>second()</code>.</li> <li><code>third()</code> se agrega a la pila de llamadas.</li> <li><code>console.log(\"Entering third\")</code> se ejecuta dentro de <code>third()</code>.</li> <li><code>console.log(\"Exiting third\")</code> se ejecuta dentro de <code>third()</code>.</li> <li><code>third()</code> se elimina de la pila de llamadas.</li> <li><code>console.log(\"Exiting second\")</code> se ejecuta dentro de <code>second()</code>.</li> <li><code>second()</code> se elimina de la pila de llamadas.</li> <li><code>console.log(\"Exiting first\")</code> se ejecuta dentro de <code>first()</code>.</li> <li><code>first()</code> se elimina de la pila de llamadas.</li> </ol>"},{"location":"Moduls/DWEC/promesas.html#herramientas-para-analizar-el-call-stack","title":"Herramientas para Analizar el Call Stack","text":"<p>En Firefox:</p> <ol> <li>Presiona <code>F12</code> para abrir las herramientas de desarrollo.</li> <li>Ve al panel de Depurador.</li> <li>Coloca un punto de ruptura.</li> <li>Ejecuta y analiza la pila de llamadas y el entorno de ejecuci\u00f3n de las funciones.</li> </ol> <p>Tambi\u00e9n puedes usar <code>console.trace()</code> y <code>debugger;</code> en tu c\u00f3digo para depurar y analizar el flujo de ejecuci\u00f3n.</p>"},{"location":"Moduls/DWEC/promesas.html#tareas-y-microtareas","title":"Tareas y Microtareas","text":"<p>JavaScript gestiona las operaciones as\u00edncronas utilizando varias colas de tareas, cada una con una prioridad diferente. Estas colas incluyen la cola de macrotareas y la cola de microtareas.</p>"},{"location":"Moduls/DWEC/promesas.html#cola-de-macrotareas-y-microtareas","title":"Cola de Macrotareas y Microtareas","text":"<p>Las macrotareas incluyen operaciones como los eventos del DOM, <code>setTimeout</code>, <code>setInterval</code> y otras operaciones as\u00edncronas. Las macrotareas se gestionan en la \"cola de macrotareas\" y se procesan una por una.</p> <p>Las microtareas, por otro lado, incluyen las promesas (<code>Promises</code>) y las mutaciones del DOM (a trav\u00e9s de <code>MutationObserver</code>). Estas tareas se gestionan en la \"cola de microtareas\", que tiene una prioridad m\u00e1s alta que la de las macrotareas. Esto significa que despu\u00e9s de cada macrotarea, el motor de JavaScript procesar\u00e1 todas las microtareas antes de continuar con la siguiente macrotarea.</p> <p>Cuando se completa una macrotarea, el motor de JavaScript pasa a procesar todas las microtareas pendientes. Este ciclo de procesamiento asegura que las microtareas reciban atenci\u00f3n inmediata despu\u00e9s de cada macrotarea.</p> <pre><code>(()=&gt;{\nlet start = Date.now();\n\nfunction count() {\n  // Trabajo pesado\n  let i = 0;\n  for (let j = 0; j &lt; 1e9; j++) {\n    i++;\n  }\n  console.log(\"Done in \" + (Date.now() - start) + 'ms');\n}\n\n// count();   // Esto bloquea el navegador\nsetTimeout(count, 0);\n})();\n</code></pre> <ol> <li>La funci\u00f3n <code>count</code> ejecuta una operaci\u00f3n costosa (una larga iteraci\u00f3n de bucle).</li> <li>Si <code>count</code> se ejecuta directamente, bloquea el navegador porque el bucle es muy largo.</li> <li>Utilizando <code>setTimeout(count, 0)</code>, la funci\u00f3n <code>count</code> se coloca en la cola de macrotareas, permitiendo que el navegador procese otras tareas mientras tanto.</li> </ol> <p>Este ejemplo ilustra c\u00f3mo retrasar el bloqueo hasta que, por ejemplo, se ejecute todo el programa principal. Pero no soluciona el hecho de que, al final se va a quedar el navegador bloqueado, ya que se ejecutar\u00e1 en el \u00fanico hilo de ejecuci\u00f3n de Javascript. Si queremos tener m\u00e1s hilos, podemos usar <code>worker</code>. En el siguiente ejemplo se ve c\u00f3mo dividir el trabajo para que, en medio, d\u00e9 tiempo a renderizar o ejecutar otras tareas y microtareas como atender eventos:</p>"},{"location":"Moduls/DWEC/promesas.html#ejemplo-de-dividir-el-trabajo-con-settimeout","title":"Ejemplo de Dividir el Trabajo con <code>setTimeout</code>","text":"<pre><code>document.addEventListener(\"DOMContentLoaded\", () =&gt; {\n  let progress = document.querySelector(\"#progress\");\n  let i = 0;\n  function count() {\n    // Realiza una parte del trabajo pesado (*)\n    do {\n      i++;\n      progress.innerHTML = i;\n    } while (i % 1e3 != 0);\n\n    if (i &lt; 1e7) {\n      setTimeout(count);\n    }\n  }\n  count();\n});\n</code></pre> <ol> <li>En lugar de hacer todo el trabajo pesado en una \u00fanica ejecuci\u00f3n, el trabajo se divide en trozos m\u00e1s peque\u00f1os.</li> <li>La funci\u00f3n <code>count</code> realiza una peque\u00f1a parte del trabajo (incrementar <code>i</code> y actualizar el texto de <code>progress</code>) antes de ceder el control al navegador con <code>setTimeout(count)</code>.</li> <li>Esto permite que el navegador renderice el cambio en el DOM, evitando el bloqueo y ofreciendo una experiencia de usuario m\u00e1s fluida.</li> </ol>"},{"location":"Moduls/DWEC/promesas.html#codigo-de-ejemplo-con-promesas-microtareas","title":"C\u00f3digo de Ejemplo con Promesas (Microtareas)","text":"<pre><code>(()=&gt;{\n  const messages = [];\n  messages.push('Script start');\n  setTimeout(() =&gt; {\n    messages.push('SetTimeout');\n    printMessages();\n  }, 0);\n  Promise.resolve().then(() =&gt; {\n    messages.push('Promise 1');\n  }).then(() =&gt; {\n    messages.push('Promise 2');\n  });\n  messages.push('Script end');\n  function printMessages() {\n      console.log(messages.join('\\n'));\n  }\n})();\n</code></pre> <pre><code>Done in 735ms\nScript start\nScript end\nPromise 1\nPromise 2\nSetTimeout\n</code></pre> <ol> <li>El log 'Script start' se imprime primero porque es c\u00f3digo s\u00edncrono.</li> <li><code>setTimeout</code> coloca su funci\u00f3n de callback en la cola de macrotareas.</li> <li>La promesa se resuelve inmediatamente, colocando sus callbacks en la cola de microtareas.</li> <li>El log 'Script end' se imprime porque es c\u00f3digo s\u00edncrono.</li> <li>Las microtareas (las promesas) se ejecutan antes de la macrotarea (<code>setTimeout</code>), imprimiendo 'Promise 1' y 'Promise 2'.</li> <li>Finalmente, la funci\u00f3n de <code>setTimeout</code> se ejecuta, imprimiendo 'SetTimeout'.</li> </ol> <p>Este mecanismo de tareas y microtareas permite que JavaScript gestione de manera eficiente las operaciones as\u00edncronas, asegurando que el c\u00f3digo se ejecute de manera ordenada y que las tareas con mayor prioridad (microtareas) se completen antes de procesar tareas menos prioritarias (macrotareas).</p>"},{"location":"Moduls/DWEC/promesas.html#callbacks-en-javascript","title":"Callbacks en JavaScript","text":"<p>En JavaScript, un callback es una funci\u00f3n que se pasa como argumento a otra funci\u00f3n para que se ejecute despu\u00e9s de que se complete alguna operaci\u00f3n. Los callbacks son esenciales para manejar operaciones as\u00edncronas como la comunicaci\u00f3n con servidores, temporizadores, y eventos del DOM. El propio lenguaje Javascript cuenta con multitud de funciones que aceptan funciones de callback, com forEach, map, filter, addEventListener... </p> <pre><code>(()=&gt;{\nfunction fetchData(callback) {\n  setTimeout(() =&gt; {\n    const data = { name: \"John\", age: 30 };\n    callback(data);\n  }, 3000);\n}\n\n// Ejecutar la funci\u00f3n con un callback\nfetchData(function(data) {\n  console.log(data);\n});\n\nconsole.log(\"Data is being fetched...\");\n})();\n</code></pre> <pre><code>{ name: \"John\", age: 30 }\n</code></pre> <ol> <li>La funci\u00f3n <code>fetchData</code> toma un <code>callback</code> como argumento.</li> <li>Dentro de <code>fetchData</code>, se usa <code>setTimeout</code> para simular una operaci\u00f3n as\u00edncrona que dura 3 segundos.</li> <li>Despu\u00e9s de 3 segundos, <code>setTimeout</code> ejecuta el <code>callback</code> pasando un objeto <code>data</code> como argumento.</li> <li><code>fetchData</code> se llama con una funci\u00f3n an\u00f3nima como callback que imprime el <code>data</code>.</li> <li>Mientras <code>setTimeout</code> espera, el programa sigue ejecutando el c\u00f3digo siguiente y muestra \"Data is being fetched...\".</li> </ol>"},{"location":"Moduls/DWEC/promesas.html#callbacks-en-operaciones-asincronas","title":"Callbacks en Operaciones As\u00edncronas","text":"<p>Los callbacks son \u00fatiles cuando se trabaja con operaciones as\u00edncronas. En el siguiente ejemplo, la funci\u00f3n <code>second</code> tiene c\u00f3digo as\u00edncrono que usa un callback para garantizar que la funci\u00f3n <code>third</code> se ejecute despu\u00e9s de que <code>second</code> haya terminado su tarea.</p> <pre><code>(()=&gt;{\nfunction first() {\n  console.log(1);\n}\n\nfunction second(callback) {\n  setTimeout(() =&gt; {\n    console.log(2);\n    callback();\n  }, 0);\n}\n\nfunction third() {\n  console.log(3);\n}\n\nfirst();\nsecond(third);\n// Salida: 1 2 3\n})();\n</code></pre> <pre><code>\u001b[33m1\u001b[39m\n</code></pre> <ol> <li><code>first</code> imprime <code>1</code>.</li> <li><code>second</code> toma una funci\u00f3n <code>callback</code> como argumento y usa <code>setTimeout</code> con un retardo de 0 milisegundos para simular una operaci\u00f3n as\u00edncrona.</li> <li><code>second</code> imprime <code>2</code> y luego llama al <code>callback</code> pasado (en este caso, <code>third</code>).</li> <li><code>third</code> imprime <code>3</code>.</li> </ol> <p>En este ejemplo, <code>first</code> se ejecuta primero, seguido de <code>second</code> que llama a <code>third</code> despu\u00e9s de su operaci\u00f3n as\u00edncrona.</p>"},{"location":"Moduls/DWEC/promesas.html#callback-hell-infierno-de-callbacks","title":"Callback Hell (Infierno de Callbacks)","text":"<p>El uso excesivo de callbacks puede llevar a una situaci\u00f3n conocida como \"Callback Hell\" o \"Pyramid of Doom\", donde el c\u00f3digo se vuelve dif\u00edcil de leer y mantener debido a la anidaci\u00f3n profunda de funciones.</p> <pre><code>getData(function(a) {\n  getMoreData(a, function(b) {\n    getEvenMoreData(b, function(c) {\n      getEvenEvenMoreData(c, function(d) {\n        getFinalData(d, function(finalData) {\n          console.log(finalData);\n        });\n      });\n    });\n  });\n});\n</code></pre> <p>En este ejemplo, cada funci\u00f3n depende de los datos obtenidos por la funci\u00f3n anterior. Esta cadena de dependencias se anida cada vez m\u00e1s profundamente, resultando en un c\u00f3digo que es dif\u00edcil de mantener. </p> <p>Veamos un ejemplo de c\u00f3digo que puede suponer un Callback Hell:</p> <pre><code>document.addEventListener(\"DOMContentLoaded\", () =&gt; {\n\n    function hacerPeticion(url, callback) {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                const data = JSON.parse(xhr.responseText);\n                callback(null, data);\n            } else if (xhr.readyState === 4) {\n\n                callback(new Error(`Error al hacer la petici\u00f3n a ${url}`));\n            }\n        };\n        xhr.send();\n    }\n\n    // 2. Leer un archivo del input\n    function leerArchivo(callback) {\n        const inputArchivo = document.getElementById('archivoInput');\n        const archivo = inputArchivo.files[0];\n\n        if (!archivo) {\n            callback(new Error('No se ha seleccionado ning\u00fan archivo'));\n            return;\n        }\n        const lector = new FileReader();\n        lector.onload = function (evento) {\n            const contenido = evento.target.result;\n            callback(null, contenido);\n        };\n        lector.onerror = function () {\n            callback(new Error('Error al leer el archivo'));\n        };\n        lector.readAsText(archivo);\n    }\n\n    // 3. Guardar los datos en IndexedDB\n    function guardarEnIndexedDB(datos, callback) {\n        const solicitudDB = indexedDB.open('miBaseDeDatos', 1);\n\n        solicitudDB.onupgradeneeded = function (evento) {\n            const db = evento.target.result;\n            db.createObjectStore('archivos', { keyPath: 'id', autoIncrement: true });\n        };\n\n        solicitudDB.onsuccess = function (evento) {\n            const db = evento.target.result;\n            const transaccion = db.transaction('archivos', 'readwrite');\n            const almacen = transaccion.objectStore('archivos');\n\n            const solicitudInsertar = almacen.add({ contenido: datos });\n\n            solicitudInsertar.onsuccess = function () {\n                callback(null, 'Datos guardados correctamente en IndexedDB');\n            };\n\n            solicitudInsertar.onerror = function () {\n                callback(new Error('Error al guardar en IndexedDB'));\n            };\n        };\n\n        solicitudDB.onerror = function () {\n            callback(new Error('Error al abrir IndexedDB'));\n        };\n    }\n\n    // Iniciamos la cadena de callbacks (Callback Hell)\n\n    document.querySelector(\"#boton\").addEventListener(\"click\", (event) =&gt; {\n        event.preventDefault();\n\n        // 1. Petici\u00f3n al servidor\n        hacerPeticion('http://localhost:5500/datos.json', function (error, datosServidor) {\n            if (error) {\n                console.error(error);\n                return;\n            }\n            console.log('Datos recibidos del servidor:', datosServidor);\n\n            // 2. Leer archivo con retraso\n            setTimeout(() =&gt; {\n                leerArchivo(function (error, contenidoArchivo) {\n                    if (error) {\n                        console.error('Error al leer el archivo:', error);\n                        return;\n                    }\n                    console.log('Contenido del archivo le\u00eddo:', contenidoArchivo);\n\n                    // 3. Guardar los datos en IndexedDB\n                    guardarEnIndexedDB(contenidoArchivo + datosServidor, function (error, mensaje) {\n                        if (error) {\n                            console.error('Error al guardar en IndexedDB:', error);\n                            return;\n                        }\n                        console.log(mensaje);\n                        console.log('Todas las operaciones se completaron con \u00e9xito.');\n                    });\n                });\n            }, 1000);\n        });\n\n    });\n\n});\n</code></pre> <p>Podemos ver que las funciones as\u00edncronas aceptan una funci\u00f3n de <code>callback</code>. Tenemos la funci\u00f3n de tratamiento del evento del bot\u00f3n. La de hacer la petici\u00f3n al servidor, que hacemos con <code>XMLHttpRequest</code> para no usar promesas. Tenemos un setTimeOut que usamos para retrasar la funci\u00f3n que le pasamos, la cual lee un fichero que el usuario ha puesto en un input. Esta funci\u00f3n recibe como callback una en la que guardamos el resultado en una base de datos <code>indexedDB</code>. Todas son peticiones as\u00edncronas a la API del navegador y necesitan un callback. </p> <p>Como se puede ver, mantener este c\u00f3digo puede ser complicado. Despu\u00e9s lo volveremos a escribir con <code>fetch</code> y con promesas y la sintaxi <code>async/await</code>y se demostrar\u00e1 que el c\u00f3digo queda m\u00e1s l\u00edmpio.  </p>"},{"location":"Moduls/DWEC/promesas.html#promesas","title":"Promesas","text":"<p>Las promesas en JavaScript son objetos que representan la eventual finalizaci\u00f3n (o falla) de una operaci\u00f3n as\u00edncrona y su valor resultante. Proporcionan una forma de manejar operaciones as\u00edncronas de manera m\u00e1s manejable y predecible, evitando los problemas del \"callback hell\". A continuaci\u00f3n, exploraremos c\u00f3mo funcionan las promesas y c\u00f3mo pueden ser utilizadas en diferentes contextos.</p> <p>Una promesa se crea (manualmente) utilizando el constructor <code>Promise</code>, que acepta una funci\u00f3n ejecutora como argumento. Esta funci\u00f3n ejecutora recibe dos funciones como par\u00e1metros: <code>resolve</code> y <code>reject</code>.</p> <pre><code>(()=&gt;{\nconst promise = new Promise((resolve, reject) =&gt; { // Funci\u00f3n ejecutora\n  setTimeout(() =&gt; {\n    if (Math.random() &gt; 0.5) {\n      resolve(\"Resolving an asynchronous request!\");\n    } else {\n      reject(\"Rejecting an asynchronous request!\");\n    }\n  }, 2000);\n});\n\npromise.then((response) =&gt; { //.then si se resuelve\n  console.log(response);\n}).catch((response) =&gt; { // .catch si falla\n  console.log(response);\n});\n})();\n</code></pre> <pre><code>\u001b[33m2\u001b[39m\n\u001b[33m3\u001b[39m\n</code></pre>"},{"location":"Moduls/DWEC/promesas.html#estados-de-las-promesas","title":"Estados de las Promesas","text":"<p>Las promesas pueden estar en uno de los siguientes estados:</p> <ol> <li>Pendiente (Pending): Estado inicial, la promesa a\u00fan no se ha cumplido ni ha sido rechazada.</li> <li>Cumplida (Fulfilled): La operaci\u00f3n se complet\u00f3 con \u00e9xito y se resolvi\u00f3 la promesa.</li> <li>Rechazada (Rejected): La operaci\u00f3n fall\u00f3 y la promesa fue rechazada.</li> </ol> <p>En el ejemplo anterior, la promesa tiene un 50% de probabilidad de resolverse o rechazarse despu\u00e9s de 2 segundos. Dependiendo del resultado, se ejecuta la funci\u00f3n correspondiente en <code>then</code> o <code>catch</code>.</p>"},{"location":"Moduls/DWEC/promesas.html#uso-de-promesas","title":"Uso de Promesas","text":""},{"location":"Moduls/DWEC/promesas.html#promesas-sincronas-y-asincronas","title":"Promesas S\u00edncronas y As\u00edncronas","text":"<p>Las promesas permiten retornar un objeto de forma s\u00edncrona con el que se puede trabajar, representando un valor que puede estar disponible ahora, en el futuro o nunca. Esto permite lanzar peticiones as\u00edncronas sin bloquear la ejecuci\u00f3n del c\u00f3digo.</p> <pre><code>(()=&gt;{\nfunction fetchData() {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      const data = {name: \"John\", age: 30};\n      resolve(data);\n    }, 3000);\n  });\n}\n\nfetchData().then((data) =&gt; {\n  console.log(data);\n});\n\nconsole.log(\"Data is being fetched...\");\n})();\n</code></pre> <pre><code>Data is being fetched...\n</code></pre> <p>En este ejemplo, la funci\u00f3n <code>fetchData</code> retorna una promesa que se resuelve con datos despu\u00e9s de 3 segundos. Mientras se espera la resoluci\u00f3n de la promesa, el c\u00f3digo sigue ejecut\u00e1ndose y se imprime \"Data is being fetched...\".</p>"},{"location":"Moduls/DWEC/promesas.html#encadenar-promesas","title":"Encadenar Promesas","text":"<p>El m\u00e9todo <code>then</code> de las promesas permite encadenar varias operaciones as\u00edncronas de manera secuencial. Esto es \u00fatil cuando necesitamos ejecutar una serie de tareas as\u00edncronas una tras otra.</p> <pre><code>fetchData().then((data) =&gt; {\n  console.log(\"First then:\", data);\n  return data.name;\n}).then((name) =&gt; {\n  console.log(\"Second then:\", name);\n});\n</code></pre> <p>En este ejemplo, la segunda llamada a <code>then</code> solo se ejecuta despu\u00e9s de que la primera promesa se resuelva, garantizando un flujo secuencial de operaciones.</p>"},{"location":"Moduls/DWEC/promesas.html#manejo-de-errores","title":"Manejo de Errores","text":"<p>El m\u00e9todo <code>catch</code> se utiliza para manejar errores que ocurren durante la ejecuci\u00f3n de una promesa. Este se puede encadenar despu\u00e9s de uno o varios <code>then</code>.</p> <pre><code>fetchData().then((data) =&gt; {\n  console.log(data);\n  throw new Error(\"Something went wrong!\");\n}).catch((error) =&gt; {\n  console.log(\"Caught error:\", error.message);\n});\n</code></pre> <p>Aqu\u00ed, si ocurre alg\u00fan error en cualquiera de las funciones <code>then</code>, ser\u00e1 capturado por <code>catch</code>.</p>"},{"location":"Moduls/DWEC/promesas.html#promiseall","title":"Promise.all()","text":"<p>El m\u00e9todo <code>Promise.all</code> permite ejecutar m\u00faltiples promesas en paralelo y esperar a que todas se resuelvan antes de continuar. Si alguna de las promesas se rechaza, <code>Promise.all</code> tambi\u00e9n se rechazar\u00e1.</p> <pre><code>(()=&gt;{\nconst promise1 = Promise.resolve(3);\nconst promise2 = 42;\nconst promise3 = new Promise((resolve, reject) =&gt; {\n  setTimeout(resolve, 100, 'foo');\n});\n\nPromise.all([promise1, promise2, promise3]).then((values) =&gt; {\n  console.log(values); // [3, 42, \"foo\"]\n});\n\n})();\n</code></pre> <p>En este ejemplo, <code>Promise.all</code> espera a que todas las promesas se resuelvan y luego imprime los valores resueltos en un array.</p>"},{"location":"Moduls/DWEC/promesas.html#arrays-y-promesas","title":"Arrays y promesas","text":"<p>En ocasiones es necesario recorrer un array y generar una promesa con cada elemento del array. Las situaciones pueden ser distintas, por ejemplo:</p> <ul> <li>No importa el orden ni si se cumplen las promesas: Se puede ejecutar un <code>.forEach()</code> sobre el array y crear las promesas independientemente. </li> </ul> <pre><code>(()=&gt;{\nconst array = [1, 2, 3, 4, 5];\n\narray.forEach(item =&gt; {\n  someAsyncFunction(item)\n    .then(result =&gt; {\n      console.log(`Result for item ${item}:`, result);\n    })\n    .catch(error =&gt; {\n      console.error(`Error for item ${item}:`, error);\n    });\n});\n\nfunction someAsyncFunction(item) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve(`Processed ${item}`);\n    }, Math.random() * 1000);\n  });\n}\n})();\n</code></pre> <ul> <li>No importa el orden, pero queremos hacer algo si se cumplen todas: Podemos transformar el array en un array de promesas con <code>.map()</code> y pasarlo a un <code>Promise.all()</code>.</li> </ul> <pre><code>(()=&gt;{\nconst array = [1, 2, 3, 4, 5];\n\nconst promises = array.map(item =&gt; someAsyncFunction(item));\n\nPromise.all(promises)\n  .then(results =&gt; {\n    console.log('All promises resolved:', results);\n  })\n  .catch(error =&gt; {\n    console.error('One or more promises rejected:', error);\n  });\n\nfunction someAsyncFunction(item) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve(`Processed ${item}`);\n    }, Math.random() * 1000);\n  });\n}\n})();\n</code></pre> <pre><code>Result for item 3: Processed 3\n</code></pre> <ul> <li>Las promesas se deben ejecutar en un cierto orden: No se puede hacer con <code>.forEach()</code> ni <code>.map()</code>, ya que no trata las promesas correctamente ni async/await. Es mejor usar un <code>for-of</code> con <code>async/await</code>.    </li> </ul> <pre><code>(()=&gt;{\nconst array = [1, 2, 3, 4, 5];\n\nasync function processArrayInOrder() {\n  for (const item of array) {\n    try {\n      const result = await someAsyncFunction(item);\n      console.log(`Result for item ${item}:`, result);\n    } catch (error) {\n      console.error(`Error for item ${item}:`, error);\n    }\n  }\n}\n\nprocessArrayInOrder();\n\nfunction someAsyncFunction(item) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve(`Processed ${item}`);\n    }, Math.random() * 1000);\n  });\n}\n})();\n</code></pre> <pre><code>All promises resolved: [\n  \"Processed 1\",\n  \"Processed 2\",\n  \"Processed 3\",\n  \"Processed 4\",\n  \"Processed 5\"\n]\n</code></pre>"},{"location":"Moduls/DWEC/promesas.html#asyncawait-en-javascript","title":"Async/Await en JavaScript","text":"<p>El uso de <code>async</code> y <code>await</code> en JavaScript ofrece una forma m\u00e1s concisa y legible de trabajar con promesas. Introducida en ECMAScript 2017, esta sintaxis facilita la gesti\u00f3n de operaciones as\u00edncronas, permitiendo escribir c\u00f3digo que parece s\u00edncrono mientras maneja promesas en segundo plano. </p> <p>Una funci\u00f3n definida con la palabra clave <code>async</code> autom\u00e1ticamente retorna una promesa. Esto significa que incluso si la funci\u00f3n parece devolver un valor regular, en realidad estar\u00e1 devolviendo una promesa que se resuelve con ese valor.</p> <p>El uso de <code>async</code> y <code>await</code> en JavaScript simplifica la gesti\u00f3n de operaciones as\u00edncronas, proporcionando una sintaxis m\u00e1s limpia y manejable en comparaci\u00f3n con el uso tradicional de promesas con <code>.then()</code> y <code>.catch()</code>. Con la introducci\u00f3n del top-level <code>await</code>, ahora es posible manejar operaciones as\u00edncronas de manera a\u00fan m\u00e1s directa en el nivel superior de los m\u00f3dulos. </p> <pre><code>(()=&gt;{\nasync function getUser() {\n  const response = await fetch('https://api.github.com/users/octocat');\n  const data = await response.json();\n  console.log(data);\n}\n\n// Ejecutar funci\u00f3n as\u00edncrona\ngetUser();\n})();\n</code></pre> <ol> <li> <p>Definici\u00f3n de la funci\u00f3n <code>async</code>:    </p><pre><code>async function getUser() {\n</code></pre>    Aqu\u00ed, <code>async</code> antes de la funci\u00f3n indica que esta funci\u00f3n es as\u00edncrona y retornar\u00e1 una promesa.<p></p> </li> <li> <p>Uso de <code>await</code>:    </p><pre><code>const response = await fetch('https://api.github.com/users/octocat');\nconst data = await response.json();\n</code></pre>    Dentro de una funci\u00f3n <code>async</code>, se puede usar <code>await</code> antes de una promesa para esperar su resoluci\u00f3n. En este caso, <code>await fetch</code> espera a que la promesa devuelta por <code>fetch</code> se resuelva, es decir, que la solicitud HTTP se complete y se reciba una respuesta. Del mismo modo, <code>await response.json()</code> espera a que se procese la respuesta en formato JSON.<p></p> </li> <li> <p>Ejecutar la funci\u00f3n as\u00edncrona:    </p><pre><code>getUser();\n</code></pre>    Llamar a <code>getUser()</code> ejecuta la funci\u00f3n as\u00edncrona. Dado que <code>getUser</code> retorna una promesa, se podr\u00eda encadenar con <code>.then()</code> si fuera necesario.<p></p> </li> </ol>"},{"location":"Moduls/DWEC/promesas.html#top-level-await","title":"Top-Level Await","text":"<p>Introducido en 2024, el top-level <code>await</code> permite usar <code>await</code> directamente en el nivel superior de los m\u00f3dulos, sin necesidad de envolver el c\u00f3digo en una funci\u00f3n <code>async</code>. Esto simplifica el c\u00f3digo y mejora su legibilidad cuando se trabaja con operaciones as\u00edncronas en el contexto global del m\u00f3dulo.</p> <p></p><pre><code>const colors = fetch(\"../data/colors.json\").then((response) =&gt; response.json());\nexport default await colors;\n</code></pre> 1. Fetch con <code>await</code> a nivel superior:    <pre><code>const colors = fetch(\"../data/colors.json\").then((response) =&gt; response.json());\nexport default await colors;\n</code></pre>    En este ejemplo, se est\u00e1 utilizando <code>await</code> directamente en el nivel superior del m\u00f3dulo para esperar la resoluci\u00f3n de la promesa devuelta por <code>fetch</code>. Esto permite que <code>colors</code> contenga el resultado de la operaci\u00f3n as\u00edncrona sin necesidad de definir una funci\u00f3n <code>async</code>.<p></p>"},{"location":"Moduls/DWEC/promesas.html#ventajas-de-asyncawait","title":"Ventajas de <code>async</code>/<code>await</code>","text":"<ol> <li> <p>Sintaxis m\u00e1s limpia y legible:    El c\u00f3digo as\u00edncrono escrito con <code>async</code>/<code>await</code> es m\u00e1s f\u00e1cil de leer y entender, ya que se parece m\u00e1s a c\u00f3digo s\u00edncrono. Esto facilita la identificaci\u00f3n de la l\u00f3gica y el flujo del programa.</p> </li> <li> <p>Manejo de errores simplificado:    Se pueden usar bloques <code>try/catch</code> para manejar errores en funciones <code>async</code>, lo que proporciona una forma clara y estructurada de gestionar excepciones.</p> </li> </ol> <pre><code>(()=&gt;{\n   async function getUser() {\n     try {\n       const response = await fetch('https://api.github.com/users/octocat');\n       if (!response.ok) throw new Error('Network response was not ok');\n       const data = await response.json();\n       console.log(data);\n     } catch (error) {\n       console.error('Fetching user failed:', error);\n     }\n   }\n   getUser();\n\n  })();\n</code></pre> <p>En este ejemplo, cualquier error que ocurra dentro de la funci\u00f3n <code>getUser</code> ser\u00e1 capturado y manejado en el bloque <code>catch</code>.</p> <ol> <li>Ejecuci\u00f3n secuencial de operaciones as\u00edncronas:    Utilizando <code>await</code>, se puede asegurar que las operaciones as\u00edncronas se ejecuten de manera secuencial, lo cual es \u00fatil cuando una operaci\u00f3n depende de los resultados de otra.</li> </ol> <pre><code>(()=&gt;{\nasync function fetchData() {\n     const user = await fetch('https://api.github.com/users/octocat').then(res =&gt; res.json());\n     const repos = await fetch(user.repos_url).then(res =&gt; res.json());\n     console.log(repos);\n   }\n   fetchData();\n})();\n</code></pre> <p>Aqu\u00ed, la segunda solicitud <code>fetch</code> solo se ejecuta despu\u00e9s de que la primera solicitud se haya completado y se haya obtenido la URL de los repositorios del usuario.</p> <p>Veamos ahora el ejemplo largo del <code>callback Hell</code> escrito con <code>async/await</code>:</p> <pre><code>document.addEventListener(\"DOMContentLoaded\", () =&gt; {\n    // 1. Petici\u00f3n al servidor utilizando Fetch y Promesas\n    async function hacerPeticion(url) {\n        try {\n            const respuesta = await fetch(url);\n            if (!respuesta.ok) {\n                throw new Error(`Error al hacer la petici\u00f3n a ${url}. Status: ${respuesta.status}`);\n            }\n            const datos = await respuesta.json();\n            return datos;\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 2. Leer un archivo del input utilizando Promesas\n    function leerArchivo() {\n        return new Promise((resolve, reject) =&gt; {\n            const inputArchivo = document.getElementById('archivoInput');\n            const archivo = inputArchivo.files[0];\n            if (!archivo) {\n                reject(new Error('No se ha seleccionado ning\u00fan archivo'));\n                return;\n            }\n            const lector = new FileReader();\n            lector.onload = function (evento) {\n                resolve(evento.target.result);\n            };\n            lector.onerror = function () {\n                reject(new Error('Error al leer el archivo'));\n            };\n            lector.readAsText(archivo);\n        });\n    }\n    // 3. Guardar los datos en IndexedDB utilizando Promesas\n    function guardarEnIndexedDB(datos) {\n        return new Promise((resolve, reject) =&gt; {\n            const solicitudDB = indexedDB.open('miBaseDeDatos', 1);\n            solicitudDB.onupgradeneeded = function (evento) {\n                const db = evento.target.result;\n                db.createObjectStore('archivos', { keyPath: 'id', autoIncrement: true });\n            };\n            solicitudDB.onsuccess = function (evento) {\n                const db = evento.target.result;\n                const transaccion = db.transaction('archivos', 'readwrite');\n                const almacen = transaccion.objectStore('archivos');\n                const solicitudInsertar = almacen.add({ contenido: datos });\n                solicitudInsertar.onsuccess = function () {\n                    resolve('Datos guardados correctamente en IndexedDB');\n                };\n                solicitudInsertar.onerror = function () {\n                    reject(new Error('Error al guardar en IndexedDB'));\n                };\n            };\n            solicitudDB.onerror = function () {\n                reject(new Error('Error al abrir IndexedDB'));\n            };\n        });\n    }\n\n    // Manejo del bot\u00f3n y ejecuci\u00f3n secuencial de las funciones\n    document.querySelector(\"#boton\").addEventListener(\"click\", async (event) =&gt; {\n        event.preventDefault();\n        try {\n            // 1. Petici\u00f3n al servidor\n            const datosServidor = await hacerPeticion('http://localhost:5500/datos.json');\n            console.log('Datos recibidos del servidor:', datosServidor);\n\n            // 2. Leer el archivo despu\u00e9s de un retraso simulado\n            await new Promise(resolve =&gt; setTimeout(resolve, 1000)); // Retraso de 1 segundo\n            const contenidoArchivo = await leerArchivo();\n            console.log('Contenido del archivo le\u00eddo:', contenidoArchivo);\n\n            // 3. Guardar los datos en IndexedDB\n            const mensaje = await guardarEnIndexedDB(contenidoArchivo + datosServidor);\n            console.log(mensaje);\n            console.log('Todas las operaciones se completaron con \u00e9xito.');\n        } catch (error) {\n            console.error(error.message);\n        }\n    });\n});\n</code></pre> <p>El c\u00f3digo de las funciones no se ha complicado demasiado. De hecho, el c\u00f3digo de la del fetch es mucho m\u00e1s sencillo. Estas funciones retornan una promesa a la que podemos esperar dentro de una funci\u00f3n <code>async</code> con un <code>await</code> y hemos reducido los callback a 1, el del evento del click. </p> <pre><code>\n</code></pre>"},{"location":"Moduls/DWEC/sobreprototypeJS.html","title":"Exemples de com utilitzar prototypes en JavaScript:","text":""},{"location":"Moduls/DWEC/sobreprototypeJS.html#exemples-de-com-utilitzar-prototypes-en-javascript","title":"Exemples de com utilitzar prototypes en JavaScript:","text":""},{"location":"Moduls/DWEC/sobreprototypeJS.html#exemple-1-afegeix-un-metode-a-un-objecte","title":"Exemple 1: Afegeix un m\u00e8tode a un objecte","text":"<pre><code>function Persona(nom, edat) {\n    this.nom = nom;\n    this.edat = edat;\n}\n\nPersona.prototype.saluda = function() {\n    console.log(`Hola, em dic ${this.nom} i tinc ${this.edat} anys.`);\n};\n\nconst persona1 = new Persona('Joan', 30);\npersona1.saluda(); // Hola, em dic Joan i tinc 30 anys.\n</code></pre>"},{"location":"Moduls/DWEC/sobreprototypeJS.html#exemple-2-herencia-amb-prototypes","title":"Exemple 2: Her\u00e8ncia amb prototypes","text":"<pre><code>function Animal(nom) {\n    this.nom = nom;\n}\n\nAnimal.prototype.sona = function() {\n    console.log(`${this.nom} fa un so.`);\n};\n\nfunction Gos(nom, ra\u00e7a) {\n    Animal.call(this, nom);\n    this.ra\u00e7a = ra\u00e7a;\n}\n\nGos.prototype = Object.create(Animal.prototype);\nGos.prototype.constructor = Gos;\n\nGos.prototype.lladra = function() {\n    console.log(`${this.nom} est\u00e0 lladrant.`);\n};\n\nconst gos1 = new Gos('Rex', 'Pastor Alemany');\ngos1.sona(); // Rex fa un so.\ngos1.lladra(); // Rex est\u00e0 lladrant.\n</code></pre> <p>En el primer exemple, afegim un m\u00e8tode <code>saluda</code> a l'objecte <code>Persona</code> mitjan\u00e7ant el seu prototype. En el segon exemple, creem una her\u00e8ncia entre <code>Animal</code> i <code>Gos</code>, permetent que <code>Gos</code> hereti els m\u00e8todes de <code>Animal</code> i afegeixi els seus propis m\u00e8todes.</p>"},{"location":"Moduls/DWEC/sobreprototypeJS.html#quan-utilitzar-prototype","title":"Quan utilitzar prototype?","text":"<p>La decisi\u00f3 de si utilitzar <code>prototype</code> o incloure la funci\u00f3 dins la definici\u00f3 d'un objecte dep\u00e8n de diversos factors.</p>"},{"location":"Moduls/DWEC/sobreprototypeJS.html#quan-utilitzar-prototype_1","title":"Quan utilitzar <code>prototype</code>:","text":"<ol> <li> <p>M\u00e8todes compartits: Si vols que tots els objectes creats a partir d'un constructor comparteixin el mateix m\u00e8tode, utilitza <code>prototype</code>. Aix\u00f2 estalvia mem\u00f2ria, ja que el m\u00e8tode es defineix una sola vegada i es comparteix entre totes les inst\u00e0ncies.     </p><pre><code>function Persona(nom) {\n    this.nom = nom;\n}\n\nPersona.prototype.saluda = function() {\n    console.log(`Hola, em dic ${this.nom}.`);\n};\n\nconst persona1 = new Persona('Joan');\nconst persona2 = new Persona('Maria');\npersona1.saluda(); // Hola, em dic Joan.\npersona2.saluda(); // Hola, em dic Maria.\n</code></pre><p></p> </li> <li> <p>Her\u00e8ncia: Quan necessites crear una jerarquia d'objectes amb her\u00e8ncia, <code>prototype</code> \u00e9s essencial per permetre que les subclasses heretin m\u00e8todes de les superclasses.     </p><pre><code>function Animal(nom) {\n    this.nom = nom;\n}\n\nAnimal.prototype.sona = function() {\n    console.log(`${this.nom} fa un so.`);\n};\n\nfunction Gos(nom) {\n    Animal.call(this, nom);\n}\n\nGos.prototype = Object.create(Animal.prototype);\nGos.prototype.constructor = Gos;\n\nGos.prototype.lladra = function() {\n    console.log(`${this.nom} est\u00e0 lladrant.`);\n};\n\nconst gos1 = new Gos('Rex');\ngos1.sona(); // Rex fa un so.\ngos1.lladra(); // Rex est\u00e0 lladrant.\n</code></pre><p></p> </li> </ol>"},{"location":"Moduls/DWEC/sobreprototypeJS.html#quan-incloure-la-funcio-dins-la-definicio-dun-objecte","title":"Quan incloure la funci\u00f3 dins la definici\u00f3 d'un objecte:","text":"<ol> <li> <p>M\u00e8todes espec\u00edfics per inst\u00e0ncia: Si el m\u00e8tode \u00e9s espec\u00edfic per a cada inst\u00e0ncia i no es compartir\u00e0 entre altres inst\u00e0ncies, pots definir-lo dins el constructor.     </p><pre><code>function Persona(nom) {\n    this.nom = nom;\n    this.saluda = function() {\n        console.log(`Hola, em dic ${this.nom}.`);\n    };\n}\n\nconst persona1 = new Persona('Joan');\nconst persona2 = new Persona('Maria');\npersona1.saluda(); // Hola, em dic Joan.\npersona2.saluda(); // Hola, em dic Maria.\n</code></pre><p></p> </li> <li> <p>Simplicitat: Per a objectes petits o quan no necessites her\u00e8ncia o m\u00e8todes compartits, definir els m\u00e8todes dins el constructor pot ser m\u00e9s senzill i directe.</p> </li> </ol> <p>En resum, utilitza <code>prototype</code> per a m\u00e8todes compartits i her\u00e8ncia, i defineix els m\u00e8todes dins el constructor per a m\u00e8todes espec\u00edfics per inst\u00e0ncia o per simplicitat. Si tens m\u00e9s dubtes o necessites m\u00e9s exemples, estic aqu\u00ed per ajudar-te!</p>"},{"location":"Moduls/DWEC/angular/index.html","title":"Index","text":"<p>Hola, correcte</p>"},{"location":"Moduls/DWEC/angular/Typescript.html","title":"Typescript","text":""},{"location":"Moduls/DWEC/angular/Typescript.html#typescript","title":"Typescript","text":"<p>En sus inicios, JavaScript se utilizaba principalmente para la validaci\u00f3n de formularios y otras tareas sencillas en el navegador. Sin embargo, a medida que la complejidad de las aplicaciones web aument\u00f3, surgieron bibliotecas como jQuery y frameworks como Angular para facilitar el desarrollo de proyectos m\u00e1s grandes y complejos. Tambi\u00e9n aparecieron herramientas dise\u00f1adas para mejorar la disciplina de programaci\u00f3n en JavaScript, siendo TypeScript una de las m\u00e1s destacadas.</p> <p>TypeScript es un superconjunto tipado de JavaScript que compila a JavaScript plano. Introduce caracter\u00edsticas como el tipado est\u00e1tico, que permite detectar errores en tiempo de escritura, y ofrece autocompletado en funci\u00f3n del tipo de variable. Adem\u00e1s, permite utilizar m\u00e9todos est\u00e1ticos de programaci\u00f3n, clases y m\u00e9todos (antes de ES6).</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#problemas-de-javascript","title":"Problemas de JavaScript","text":"<p>JavaScript, en su forma nativa, presenta varios problemas que pueden dificultar el desarrollo de aplicaciones complejas:</p> <ol> <li>Errores por variables no definidas: No declarar una variable puede llevar a errores dif\u00edciles de depurar.</li> <li>Propiedades inexistentes en objetos: Acceder a propiedades que no existen puede causar fallos en tiempo de ejecuci\u00f3n.</li> <li>Funciones de terceros: No siempre se sabe c\u00f3mo funcionan las funciones importadas, lo que puede generar problemas.</li> <li>Sobrescritura de variables y funciones: La flexibilidad de JavaScript permite sobrescribir variables y funciones, lo que puede resultar en comportamientos inesperados.</li> </ol> <p>Con la llegada de ES6, muchos de estos problemas se mitigaron, pero TypeScript proporciona una capa adicional de seguridad y eficiencia.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#transpilacion-de-typescript","title":"Transpilaci\u00f3n de TypeScript","text":"<p>Los navegadores no entienden TypeScript directamente, por lo que es necesario transpilar el c\u00f3digo TypeScript a JavaScript. Este proceso se realiza mediante herramientas autom\u00e1ticas que aseguran que el c\u00f3digo resultante sea compatible con diferentes navegadores, incluidos los m\u00e1s antiguos.</p> <p>Consideremos el siguiente c\u00f3digo JavaScript:</p> <pre><code>function saludar(nombre) {\n  console.table('Hola ' + nombre); // Hola John\n}\nconst persona = {\n  nombre: 'John'\n};\nsaludar(persona.nombre);\n</code></pre> <p>El c\u00f3digo anterior funciona, pero no proporciona garant\u00edas de tipo. No se puede asegurar que la funci\u00f3n saludar siempre reciba un string como argumento.</p> <p>Ahora veamos c\u00f3mo ser\u00eda el mismo c\u00f3digo en TypeScript:</p> <pre><code>function saludar(nombre: string) {\n  console.table('Hola ' + nombre);\n}\nconst persona = {\n  nombre: 'John'\n};\nsaludar(persona.nombre);\n</code></pre> <p>Al cambiar la extensi\u00f3n de .js a .ts, Visual Studio y otros editores de texto pueden identificar y se\u00f1alar errores de tipo, proporcionando una experiencia de desarrollo m\u00e1s robusta.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#configuracion-de-typescript","title":"Configuraci\u00f3n de TypeScript","text":"<p>Para transpilar TypeScript a JavaScript, se utiliza el comando tsc app.ts. Sin embargo, podemos configurar TypeScript para que transpile autom\u00e1ticamente cada vez que guardamos un archivo:</p> <ol> <li>Inicializar TypeScript: Ejecutar <code>tsc --init</code> crea un archivo <code>tsconfig.json</code>, que puede ser utilizado tanto por tsc como por Visual Studio.</li> <li>Transpilaci\u00f3n Autom\u00e1tica: Ejecutar tsc -w mantiene el proceso en espera de cambios en los archivos <code>.ts</code> para transpilar autom\u00e1ticamente.</li> </ol> <p>Frameworks como Angular ya vienen configurados para manejar esta transpilaci\u00f3n de manera autom\u00e1tica, simplificando a\u00fan m\u00e1s el proceso de desarrollo.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#estandares-en-typescript","title":"Est\u00e1ndares en TypeScript","text":"<p>TypeScript, en su archivo <code>tsconfig.json</code>, transpila por defecto de TypeScript a JavaScript ES6. Aunque nosotros podemos programar en ES6, ES5 es m\u00e1s compatible con navegadores antiguos y puede realizar las mismas funciones que ES6. Las novedades de ES6, como las clases, let, const, y las funciones flecha, est\u00e1n dise\u00f1adas para mejorar la programaci\u00f3n y son m\u00e1s parecidas a las caracter\u00edsticas de TypeScript.</p> <p>Transpila este ejemplo sencillo para entender c\u00f3mo funciona la transpilaci\u00f3n de ES6 a ES5:</p> <pre><code>let nombre = 'Joaquin';\nif(true){\n    let nombre = 'Chimo';\n}\nconsole.log(nombre);\n</code></pre> <p>En este ejemplo, let declara variables con \u00e1mbito de bloque. Cuando se transpila a ES5, <code>let</code> se convierte en <code>var</code>, que no tiene \u00e1mbito de bloque, lo que puede cambiar el comportamiento del c\u00f3digo.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#tipos-de-datos","title":"Tipos de Datos","text":"<p>TypeScript asigna un tipo de datos est\u00e1tico en la primera asignaci\u00f3n no expl\u00edcita. Sin embargo, es m\u00e1s recomendable declarar expl\u00edcitamente los tipos de datos, como en otros lenguajes tipados. Si necesitamos tipado din\u00e1mico, podemos usar el tipo any, aunque no es recomendable.</p> <p>Ejemplos de declaraci\u00f3n de tipos en TypeScript: </p><pre><code>let nombre: string = 'Joaquin';\nlet numero: number = 123;  // (en min\u00fascula)\nlet cualquierDato: any;\nlet booleano: boolean;\nlet hoy: Date = new Date();  // Tipo clase\nlet persona = {\n    nombre: 'Pepe',\n    edad: 30\n};\nlet personajes: string[] = [];\nlet p: Array&lt;string&gt; = [];\n</code></pre><p></p> <p>Si intentamos asignar otros datos al objeto persona, TypeScript nos ayudar\u00e1 a detectar errores en tiempo de escritura.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#parametros-de-las-funciones-y-valores-de-retorno","title":"Par\u00e1metros de las Funciones y Valores de Retorno","text":"<p>TypeScript nos permite definir el tipo de los par\u00e1metros de las funciones y su valor de retorno. Esto ayuda a prevenir errores y a mejorar la autocompletaci\u00f3n en los editores de texto.</p> <pre><code>function sumar(a: number, b: number): number {\n    return a + b;\n}\n</code></pre> <p>En este ejemplo, los par\u00e1metros a y b son de tipo <code>number</code>, y la funci\u00f3n retorna un valor de tipo <code>number</code>.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#funciones-flecha-es6-a-es5","title":"Funciones Flecha: ES6 a ES5","text":"<p>Las funciones flecha de ES6 ofrecen una sintaxis m\u00e1s concisa para escribir funciones an\u00f3nimas y no tienen su propio contexto this, lo que puede ser beneficioso en muchos casos. Al transpilar a ES5, estas funciones se convierten en funciones normales.</p> <p>Ejemplo de una funci\u00f3n flecha: </p><pre><code>const saludar = (nombre: string): void =&gt; {\n    console.log('Hola ' + nombre);\n};\n</code></pre> Transpilado a ES5: <pre><code>var saludar = function (nombre) {\n    console.log('Hola ' + nombre);\n};\n</code></pre><p></p>"},{"location":"Moduls/DWEC/angular/Typescript.html#promesas-y-tipado-en-typescript","title":"Promesas y Tipado en TypeScript","text":"<p>A continuaci\u00f3n, se muestra un ejemplo de c\u00f3mo se pueden usar promesas en TypeScript: </p><pre><code>(() =&gt; {\n    const recogerEsencia = (cantidad: number): Promise&lt;number&gt; =&gt; {\n        let cantidadActual = 1000;\n        return new Promise((resolve, reject) =&gt; {\n            if (cantidad &gt; cantidadActual) {\n                reject('No queda');\n            } else {\n                cantidadActual -= cantidad;\n                resolve(cantidadActual);\n            }\n        });\n    }\n    recogerEsencia(500)\n        .then(cantidadActual =&gt; console.log(`Queda ${cantidadActual}`))\n        .catch(err =&gt; console.warn(err));\n})();\n</code></pre> En este ejemplo, la funci\u00f3n recogerEsencia retorna una promesa que resuelve con la cantidad actual de esencia si hay suficiente, o rechaza con un mensaje de error si no hay suficiente. La funci\u00f3n est\u00e1 tipada para retornar una Promise, lo que facilita la comprensi\u00f3n y el mantenimiento del c\u00f3digo.<p></p>"},{"location":"Moduls/DWEC/angular/Typescript.html#transpilacion-a-es6","title":"Transpilaci\u00f3n a ES6","text":"<p>ES5 no soporta promesas de manera nativa, por lo que TypeScript no puede transpilar promesas a ES5. Para solucionar esto, debemos cambiar el objetivo de la transpilaci\u00f3n a ES6 en el archivo tsconfig.json. Angular ya utiliza bibliotecas que permiten que las promesas funcionen incluso en ES5. </p><pre><code>{\n    \"compilerOptions\": {\n        \"target\": \"ES6\"\n    }\n}\n</code></pre><p></p>"},{"location":"Moduls/DWEC/angular/Typescript.html#interfaces","title":"Interfaces","text":"<p>Las interfaces en TypeScript nos permiten definir la forma de los objetos, lo que facilita la validaci\u00f3n y el autocompletado en tiempo de desarrollo. </p><pre><code>(() =&gt; {\n    function enviar(persona: { nombre: string }) { // Problem\u00e1tico\n        console.log(`Enviando a ${persona.nombre} a Arrakis`);\n    }\n\n    let persona = { nombre: 'Jessica', edad: 30 };\n    enviar(persona);\n\n    ///////////////////// Interfaces ///////////////////////\n    interface Caracter {\n        nombre: string,\n        edad: number,\n        familia?: string // opcional\n    }\n\n    let personaInterface: Caracter = { nombre: 'Hawat', edad: 80 };\n\n    function enviarInterface(persona: Caracter) { // M\u00e1s f\u00e1cil de mantener\n        console.log(`Enviando a ${persona.nombre} a Arrakis`);\n    }\n\n    enviarInterface(personaInterface);\n})();\n</code></pre> En este ejemplo, la interfaz Caracter define la estructura del objeto personaInterface. Usar interfaces hace que el c\u00f3digo sea m\u00e1s f\u00e1cil de mantener y refactorizar.<p></p>"},{"location":"Moduls/DWEC/angular/Typescript.html#clases","title":"Clases","text":"<pre><code>(() =&gt; {\n    class Recolector {\n        private piloto: string = 'fremen';\n        constructor(\n            public identificador: string, \n            public propietario: string, \n            public buenEstado: boolean = true, \n            private lugar?: string\n        ) {}\n    }\n\n    let rec = new Recolector('1234', 'cofradia', true, 'desierto');\n    console.log(rec.piloto);\n})();\n</code></pre> En este ejemplo, la clase Recolector tiene propiedades p\u00fablicas y privadas, y un constructor que inicializa estas propiedades. Adem\u00e1s, hay valores por defecto y par\u00e1metros opcionales. <p>En TypeScript, puedes definir los par\u00e1metros del constructor directamente en la lista de par\u00e1metros del constructor y usar modificadores de acceso (public, private, protected, readonly). Esto autom\u00e1ticamente crea e inicializa esos atributos en la clase, lo que elimina la necesidad de declarar y asignar manualmente estos par\u00e1metros dentro del cuerpo del constructor usando this.</p> <p>Si lo transpilamos a ES5: </p><pre><code>var Recolector = /** @class */ (function () {\n    function Recolector(identificador, propietario, buenEstado, lugar) {\n        if (buenEstado === void 0) { buenEstado = true; }\n        this.identificador = identificador;\n        this.propietario = propietario;\n        this.buenEstado = buenEstado;\n        this.lugar = lugar;\n    }\n    return Recolector;\n}());\n\nvar recolector = new Recolector('1234', 'cofradia', true, 'desierto');\n</code></pre><p></p>"},{"location":"Moduls/DWEC/angular/Typescript.html#decoradores","title":"Decoradores","text":"<p>Los decoradores en TypeScript son una caracter\u00edstica experimental que se usa extensivamente en Angular para a\u00f1adir metadatos a clases y sus miembros. </p><pre><code>(() =&gt; {\n    function imprimirConsola(constructorClase: Function) {\n        console.log(constructorClase);\n    }\n\n    @imprimirConsola  // Necesita habilitar experimentalDecorators en tsconfig\n    class Recolector {\n        constructor(\n            public identificador: string, \n            public propietario: string, \n            public buenEstado: boolean = true, \n            private lugar?: string\n        ) {}\n    }\n\n    let rec = new Recolector('1234', 'cofradia', true, 'desierto');\n})();\n</code></pre> Para utilizar decoradores, debemos habilitar experimentalDecorators en tsconfig.json: <pre><code>{\n    \"compilerOptions\": {\n        \"experimentalDecorators\": true\n    }\n}\n</code></pre> Aunque nosotros no crearemos decoradores, Angular los utiliza ampliamente para definir componentes, servicios, y otros elementos.<p></p>"},{"location":"Moduls/DWEC/angular/angular.html","title":"Introducci\u00f3n a Angular","text":""},{"location":"Moduls/DWEC/angular/angular.html#introduccion-a-angular","title":"Introducci\u00f3n a Angular","text":"<p>Angular es un framework de desarrollo web de c\u00f3digo abierto, mantenido por Google, para la creaci\u00f3n de aplicaciones web front-end din\u00e1micas. Se basa en TypeScript, una extensi\u00f3n de JavaScript que a\u00f1ade tipado est\u00e1tico, para mejorar la legibilidad, mantenibilidad y robustez del c\u00f3digo. </p> <p>Angular cambia totalmente la manera de programar. Reduce significativamente el c\u00f3digo que hay que escribir a cambio de ser muy r\u00edgido en la manera de tratar con los elementos de la aplicaci\u00f3n. Por tanto, tiene una curva de aprendizaje un poco alta al principio. </p> <p>Evoluci\u00f3n del nombre y versiones</p> <p>El framework ha experimentado cambios en su nombre y esquema de versiones a lo largo del tiempo:</p> <ul> <li>Hasta la versi\u00f3n 1.7: Angular.js</li> <li>Desde la versi\u00f3n 2: Angular 2, 4, 5, 6, 7, ..., 18 (actual)</li> </ul> <p>Cada 6 meses libera una nueva versi\u00f3n. Suelen ser bastante compatibles entre las que est\u00e1n pr\u00f3ximas y las \u00faltimas son retrocompatibles, excepto entre la 1 y la 2, donde cambi\u00f3 casi todo. </p> <p>Caracter\u00edsticas principales</p> <ul> <li>Expressivitad en las plantillas HTML: Permite crear interfaces de usuario din\u00e1micas y declarativas utilizando sintaxis HTML enriquecida.</li> <li>Dise\u00f1o modular y Lazy Loading: Promueve la organizaci\u00f3n del c\u00f3digo en m\u00f3dulos reutilizables y la carga en diferido de componentes para optimizar el rendimiento.</li> <li>Facilidad para reutlizar componentes: Fomenta la creaci\u00f3n de componentes reutilizables que encapsulan funcionalidad y l\u00f3gica de negocio, mejorando la modularidad y mantenibilidad del c\u00f3digo.</li> <li>Comunicaci\u00f3n fluida con el backend: Facilita la comunicaci\u00f3n entre la aplicaci\u00f3n Angular y el servidor backend, permitiendo diversas tecnolog\u00edas como RESTful APIs, WebSockets y Server-Side Rendering.</li> <li>Herramientas de desarrollo potentes: Ofrece una completa suite de herramientas de desarrollo, como Augury, Karma y Jasmine, para facilitar la creaci\u00f3n, prueba y depuraci\u00f3n de aplicaciones.</li> <li>Integraci\u00f3n con frameworks de dise\u00f1o: Se integra perfectamente con frameworks de dise\u00f1o populares como Bootstrap, Angular Material e Ionic, permitiendo crear interfaces de usuario atractivas y consistentes.</li> <li>Single Page Applications (SPAs): Permite la creaci\u00f3n de aplicaciones web de una sola p\u00e1gina (SPAs).</li> <li>Arquitectura extensible: Posee un sistema modular extensible que facilita la incorporaci\u00f3n de nuevas funcionalidades y bibliotecas de terceros.</li> <li>Reactividad simplificada: Simplifica la gesti\u00f3n de la reactividad en la interfaz de usuario, permitiendo que los cambios en los datos se reflejen autom\u00e1ticamente en la vista.</li> <li>DOM virtual: Implementa un DOM virtual que optimiza el rendimiento y reduce las manipulaciones directas del DOM real.</li> <li>Pensado para grandes aplicaciones: Est\u00e1 dise\u00f1ado para el desarrollo de aplicaciones web a gran escala, ofreciendo caracter\u00edsticas como el enrutado, la gesti\u00f3n de estado y la inyecci\u00f3n de dependencias.</li> </ul> <p>Tipos de aplicaciones web con Angular</p> <p>Angular se puede utilizar para desarrollar diferentes tipos de aplicaciones web:</p> <ul> <li>P\u00e1ginas web tradicionales: Permite generar p\u00e1ginas web din\u00e1micas con HTML generado en el servidor y Javascript para la interacci\u00f3n y las peticiones AJAX.</li> <li>Single Page Applications (SPAs): Facilita la creaci\u00f3n de SPAs que generan el HTML en el cliente a partir de datos JSON o XML enviados por el servidor. Puede que este tipo de APPs sean para las que est\u00e1 m\u00e1s preparado. </li> <li>Progressive Web Applications (PWAs): Brinda soporte para el desarrollo de PWAs, que ofrecen una experiencia similar a las aplicaciones nativas, con la posibilidad de funcionar sin conexi\u00f3n y acceso a las capacidades del dispositivo.</li> <li>Aplicaciones h\u00edbridas: Permite la creaci\u00f3n de aplicaciones h\u00edbridas que se ejecutan dentro de un navegador web m\u00ednimo embebido en la aplicaci\u00f3n nativa, utilizando tecnolog\u00edas como Cordova o Ionic.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#requisitos-previos-para-comenzar-con-angular","title":"Requisitos previos para comenzar con Angular","text":"<p>Instalaci\u00f3n de herramientas b\u00e1sicas</p> <p>Antes de adentrarnos en el mundo de Angular, es necesario contar con algunas herramientas esenciales para el desarrollo:</p> <p>1. Node.js:</p> <pre><code>sudo apt install nodejs\n</code></pre> <p>2. npm:</p> <pre><code>sudo apt install npm\n</code></pre> <p>3. TypeScript:</p> <pre><code>sudo npm install -g typescript\n</code></pre> <p>4. CLI de Angular:</p> <ul> <li>La interfaz de l\u00ednea de comandos de Angular (CLI) facilita la creaci\u00f3n, desarrollo y mantenimiento de proyectos Angular. </li> </ul> <pre><code>sudo npm install -g @angular/cli\n</code></pre> <p>5. Editor de texto:</p> <ul> <li>En Visual Studio<ul> <li>Angular 2 TypeScript Emmet</li> <li>Angular Language Service</li> <li>Angular Snippets</li> <li>Material icon Theme</li> </ul> </li> </ul> <p>6. Navegador web:</p> <p>https://angular.io/guide/devtools </p> <p>8. Actualizaci\u00f3n de Node.js:</p> <pre><code>sudo npm install -g n\nsudo n stable\nsudo npm install -g npm\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#el-contrato-del-framework","title":"El \"contrato\" del framework:","text":"<p>Es importante tener en cuenta que la adopci\u00f3n de un framework como Angular implica un compromiso por parte del desarrollador. Al utilizar un framework, se aceptan ciertas limitaciones y responsabilidades:</p> <ul> <li>Inversi\u00f3n de tiempo: Se requiere un tiempo de aprendizaje para comprender el funcionamiento del framework y sus mejores pr\u00e1cticas.</li> <li>Cambio de h\u00e1bitos: El uso de un framework implica un cambio en la forma de abordar el desarrollo web, lo que puede requerir la adaptaci\u00f3n de h\u00e1bitos y metodolog\u00edas de trabajo previas.</li> <li>Restricciones en el uso de librer\u00edas: Algunos frameworks pueden limitar el uso de ciertas librer\u00edas o herramientas externas, obligando a trabajar dentro del ecosistema propio del framework.</li> <li>Abstracci\u00f3n y potencial falta de comprensi\u00f3n: La abstracci\u00f3n que ofrece el framework puede, en ocasiones, dificultar la comprensi\u00f3n profunda del funcionamiento interno de las aplicaciones.</li> <li>Dependencia y actualizaciones: El desarrollo queda sujeto a las actualizaciones y evoluciones del framework, lo que puede requerir cambios constantes en el c\u00f3digo y la adaptaci\u00f3n a nuevas versiones.</li> <li>Compromiso a largo plazo: La adopci\u00f3n de un framework implica un compromiso a largo plazo con la tecnolog\u00eda elegida, lo que puede dificultar el cambio a otro framework en el futuro.</li> <li>Potencial p\u00e9rdida de habilidades b\u00e1sicas: El uso excesivo de un framework puede llevar a la p\u00e9rdida de pr\u00e1ctica y dominio de las habilidades de desarrollo web b\u00e1sicas.</li> </ul> <p>Silos y portabilidad del c\u00f3digo:</p> <p>Es importante recordar que el uso de un framework espec\u00edfico puede crear un \"silo\" en el desarrollo, dificultando la reutilizaci\u00f3n del c\u00f3digo en otros proyectos que no utilicen el mismo framework. </p> <p>Alternativas:</p> <p>Es importante destacar que el desarrollo web no se limita \u00fanicamente al uso de frameworks. La opci\u00f3n de trabajar con JavaScript puro (\"Vanilla JS\") junto con librer\u00edas puntuales como JQuery, Lodash, Ramda, Mocha o RxJS sigue siendo una alternativa viable para muchos proyectos.</p> <p>https://javarome.medium.com/design-noframework-bbc00a02d9b3 </p> <p>Antes de embarcarse en el desarrollo con Angular, es crucial evaluar cuidadosamente las necesidades del proyecto, las habilidades del equipo y las implicaciones a largo plazo de adoptar un framework. </p>"},{"location":"Moduls/DWEC/angular/angular.html#primeros-pasos-con-angular-hola-mundo","title":"Primeros pasos con Angular: \u00a1Hola Mundo!","text":"<p>En este cap\u00edtulo, daremos nuestros primeros pasos en el mundo de Angular creando una sencilla aplicaci\u00f3n que muestre el cl\u00e1sico mensaje \"Hola Mundo\". A lo largo del camino, conoceremos algunos conceptos b\u00e1sicos del framework y la estructura de un proyecto Angular.</p> <p>Preparaci\u00f3n del entorno</p> <ol> <li>Instalaci\u00f3n de herramientas previas:</li> </ol> <pre><code>sudo npm install -g @angular/cli [--force]\nng new my-app\ncd my-app \nng serve -o\n</code></pre> <ol> <li>Creaci\u00f3n de un nuevo proyecto:</li> </ol> <pre><code>ng new mi-aplicacion\n</code></pre> <p>Este comando crear\u00e1 la estructura b\u00e1sica del proyecto.</p> <p>Estructura del proyecto:</p> <p>La estructura de un proyecto Angular t\u00edpico se compone de las siguientes carpetas:</p> <ul> <li>src: Contiene el c\u00f3digo fuente de la aplicaci\u00f3n, incluyendo componentes, servicios, m\u00f3dulos y otros elementos.</li> <li>assets: Almacena recursos est\u00e1ticos como im\u00e1genes, fuentes y archivos CSS.</li> <li>environments: Define las variables de entorno para diferentes configuraciones (desarrollo, producci\u00f3n, etc.).</li> <li>node_modules: Contiene las dependencias de terceros instaladas mediante npm.</li> <li>package.json: El archivo de configuraci\u00f3n del proyecto, donde se especifican las dependencias, scripts y metadatos del proyecto.</li> <li>tsconfig.json: La configuraci\u00f3n de TypeScript para el proyecto.</li> </ul> <p>Creando el \"Hola Mundo\":</p> <ol> <li>Editando el componente principal:</li> </ol> <p>Modificar el contenido del archivo <code>app.component.ts</code> de la siguiente manera:</p> <pre><code>import { Component } from '@angular/core';  // Importaci\u00f3n del decorado\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet], // Los componentes standalone tienen imports\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {  // Un componente es una clase decorada\n  title = 'Mi primera aplicaci\u00f3n Angular';\n}\n</code></pre> <p>Este c\u00f3digo define un componente llamado <code>AppComponent</code> con un selector <code>app-root</code>. El selector indica c\u00f3mo se usar\u00e1 este componente en la plantilla HTML. El componente tiene un t\u00edtulo definido como <code>Mi primera aplicaci\u00f3n Angular</code>.</p> <ol> <li>Creando la plantilla HTML:</li> </ol> <p>El archivo <code>app.component.html</code>, dentro de las etiquetas <code>&lt;body&gt;</code>:</p> <pre><code>&lt;p&gt;\u00a1Hola Mundo!&lt;/p&gt;\n</code></pre> <ol> <li>Ejecutando la aplicaci\u00f3n:</li> </ol> <p>En la terminal, ejecutar el siguiente comando para iniciar el servidor de desarrollo local:</p> <pre><code>ng serve -o\n</code></pre> <p>Esto abrir\u00e1 un navegador web en la direcci\u00f3n <code>http://localhost:4200</code>.</p>"},{"location":"Moduls/DWEC/angular/angular.html#angular-cli","title":"Angular CLI","text":"<p>El Angular CLI (Command Line Interface) act\u00faa como un asistente que permite crear, generar, compilar, ejecutar y mantener un proyecto Javascript. Se podr\u00eda programar sin ella, pero sus comandos despliegan unas plantillas de elementos t\u00edpico de Angular en un instante y evitan el error humano en cosas rutinarias. </p>"},{"location":"Moduls/DWEC/angular/angular.html#generando-elementos-del-framework","title":"Generando elementos del framework:","text":"<p>El CLI facilita la generaci\u00f3n de los elementos b\u00e1sicos que componen una aplicaci\u00f3n Angular. Veamos algunos de los comandos m\u00e1s utilizados:</p> <ul> <li>ng generate component : Crea un nuevo componente con el nombre especificado.</li> <li>ng generate directive : Genera una directiva para modificar el comportamiento del DOM.</li> <li>ng generate pipe : Crea un pipe para transformar datos en la vista.</li> <li>ng generate service : Genera un servicio para encapsular l\u00f3gica y compartir datos entre componentes.</li> <li>ng generate class : Genera una clase simple de TypeScript.</li> <li>ng generate interface : Crea una interfaz para definir contratos de tipos.</li> <li>ng generate enum : Genera una enumeraci\u00f3n para definir un conjunto de valores constantes.</li> <li>ng generate module : Crea un nuevo m\u00f3dulo para organizar el c\u00f3digo de la aplicaci\u00f3n.</li> <li>ng generate guard : Genera un guard para controlar el acceso a rutas en la aplicaci\u00f3n.</li> </ul> <p><code>generate</code>puede ser resumido con <code>g</code>, por ejemplo: ng g component </p>"},{"location":"Moduls/DWEC/angular/angular.html#anadiendo-e-integrando-librerias","title":"A\u00f1adiendo e integrando librer\u00edas:","text":"<p>El CLI tambi\u00e9n permite incorporar librer\u00edas externas al proyecto de forma sencilla. Por ejemplo, para a\u00f1adir el popular <code>@angular/material</code> que ofrece componentes de dise\u00f1o predefinidos:</p> <pre><code>ng add @angular/material\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#actualizando-angular","title":"Actualizando Angular:","text":"<pre><code>ng update --all\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#compilando-la-aplicacion","title":"Compilando la aplicaci\u00f3n:","text":"<p>Para generar una versi\u00f3n optimizada de la aplicaci\u00f3n lista para producci\u00f3n, se utiliza el comando <code>ng build</code>. Puedes a\u00f1adir la opci\u00f3n <code>--prod</code> para habilitar optimizaciones adicionales:</p> <pre><code>ng build [--prod]\n</code></pre> <p>Creando un nuevo proyecto:</p> <p>Para iniciar un nuevo proyecto Angular, se utiliza el comando <code>ng new</code>:</p> <pre><code>ng new mi-proyecto-angular\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#componentes-en-angular","title":"Componentes en Angular","text":"<p>Cada componente encapsula una parte espec\u00edfica de la interfaz de usuario (UI) y su funcionalidad asociada, promoviendo la modularidad y la reutilizaci\u00f3n de c\u00f3digo. A modo de bloques de construcci\u00f3n, los componentes se ensamblan para crear aplicaciones web din\u00e1micas y escalables.</p> <p>Importando el decorador fundamental:</p> <p>Para declarar un componente, es necesario importar el decorador <code>Component</code> desde el paquete <code>@angular/core</code>. Este decorador proporciona metadatos esenciales sobre el componente, como su selector, plantilla y estilos.</p> <pre><code>import { Component } from '@angular/core';\n</code></pre> <p>Estructura de un componente:</p> <p>Un componente se define como una clase TypeScript decorada con <code>@Component</code>. La estructura b\u00e1sica de un componente incluye:</p> <ul> <li>Selector: Un identificador \u00fanico que define c\u00f3mo se utilizar\u00e1 el componente en el HTML. Se especifica mediante la propiedad <code>selector</code> del decorador.</li> <li>Plantilla: El c\u00f3digo HTML que define la estructura visual del componente. Se define mediante la propiedad <code>templateUrl</code> del decorador, que apunta a un archivo HTML externo.</li> <li>Estilos: Las reglas CSS que definen la apariencia del componente. Se definen mediante la propiedad <code>styleUrls</code> del decorador, que apunta a un archivo CSS externo.</li> <li>L\u00f3gica del componente: El c\u00f3digo TypeScript que define el comportamiento del componente, como propiedades, m\u00e9todos y eventos. Este c\u00f3digo se escribe dentro de la clase del componente.</li> </ul> <p>Componentes Standalone:</p> <p>En Angular, los componentes pueden existir de dos maneras: como parte de un m\u00f3dulo o como componentes Standalone. Los componentes Standalone no requieren de un m\u00f3dulo para funcionar y se definen de forma independiente. Para declarar un componente Standalone, se utiliza la propiedad <code>standalone</code> del decorador <code>@Component</code> y se establece en <code>true</code>.</p> <p>El los pr\u00f3ximos puntos, vamos a explorar c\u00f3mo hacer componentes din\u00e1micos y reactivos y c\u00f3mo comunicar componentes y los componentes con otros elementos del framework. </p>"},{"location":"Moduls/DWEC/angular/angular.html#reactividad","title":"Reactividad","text":"<p>La reactividad web permite simplificar la manera en la que se actualizan los datos entre la interfaz y el estado de la aplicaci\u00f3n. Esta gesti\u00f3n de la reactividad, en Angular est\u00e1 basada en <code>RxJS</code> y actualmente tambi\u00e9n en <code>Signals</code>. En ocasiones usaremos los elementos de RxJS de forma expl\u00edcita, pero en el caso de las plantillas de los componentes, se hace de forma mucho m\u00e1s simplificada mediante interpolaciones. </p>"},{"location":"Moduls/DWEC/angular/angular.html#interpolacion","title":"Interpolaci\u00f3n","text":"<p>La interpolaci\u00f3n en Angular es una herramienta fundamental para inyectar datos din\u00e1micos en las plantillas HTML, permitiendo que la interfaces de usuario sean reactivas y se actualicen autom\u00e1ticamente en funci\u00f3n de los cambios en los datos.</p> <p>La interpolaci\u00f3n permite incrustar expresiones JavaScript dentro de las plantillas HTML utilizando las llaves dobles <code>{{ }}</code>. El valor de la expresi\u00f3n se eval\u00faa y se inserta en el lugar correspondiente.</p> <p>La interpolaci\u00f3n hace que las plantillas sean din\u00e1micas, ya que el contenido se actualiza autom\u00e1ticamente cuando los valores de las variables o las expresiones cambian en el c\u00f3digo TypeScript. Esto permite crear interfaces de usuario que responden a eventos, interacciones del usuario o cambios en los datos.</p> <p>Casos de uso comunes:</p> <ul> <li>Mostrar valores de variables: Puedes mostrar el valor de cualquier variable o propiedad de un componente dentro de una plantilla. Por ejemplo:</li> </ul> <pre><code>&lt;p&gt;Nombre: {{ nombre }}&lt;/p&gt;\n&lt;img src=\"{{ imagenURL }}\"&gt;\n</code></pre> <ul> <li>Ejecutar m\u00e9todos de componentes: Puedes llamar a m\u00e9todos de tu componente dentro de la plantilla y mostrar el resultado. Por ejemplo:</li> </ul> <pre><code>&lt;p&gt;Resultado: {{ metodoComponente() }}&lt;/p&gt;\n</code></pre> <p>Limitaciones:</p> <ul> <li>Direcci\u00f3n \u00fanica: La interpolaci\u00f3n solo funciona en una direcci\u00f3n, desde JavaScript hacia HTML. No se pueden modificar variables o propiedades desde la plantilla.</li> <li>Expresiones simples: Las expresiones dentro de la interpolaci\u00f3n deben ser simples y no deben contener instrucciones de control de flujo como <code>if</code>, <code>for</code> o <code>while</code>.</li> </ul> <p>Contexto de las expresiones:</p> <p>Las expresiones dentro de la interpolaci\u00f3n se eval\u00faan en el contexto del componente actual. No tienen acceso directo a variables o funciones globales.</p> <p>Buenas pr\u00e1cticas:</p> <ul> <li>Mant\u00e9n la simplicidad: Utiliza expresiones simples y evita c\u00f3digo complejo dentro de la interpolaci\u00f3n.</li> <li>Usa <code>innerHTML</code> para contenido HTML: Si la variable contiene c\u00f3digo HTML, utiliza la directiva <code>[innerHTML]</code> para evitar problemas de seguridad.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#vincular-atributos","title":"Vincular atributos","text":"<p>Angular permite vincular atributos HTML a propiedades de componentes utilizando la sintaxis <code>[]</code>. Por ejemplo:</p> <pre><code>&lt;img [src]=\"product.imageUrl\" alt=\"\"&gt;\n&lt;div [style.height.px]=\"imageHeight\"&gt;&lt;/div&gt;\n</code></pre> <p>Directivas <code>ngStyle</code> y <code>ngClass</code>:</p> <p>Las directivas <code>ngStyle</code> y <code>ngClass</code> proporcionan mayor flexibilidad para manipular estilos y clases CSS a partir de variables o expresiones. Ambas requieren la importaci\u00f3n del m\u00f3dulo <code>CommonModule</code>.</p> <p><code>ngStyle</code>:</p> <ul> <li>Permite aplicar estilos din\u00e1micos a elementos HTML.</li> <li>Acepta un objeto literal o una variable que contenga pares clave-valor para los estilos.</li> </ul> <pre><code>&lt;p [ngStyle]=\"{'font-size': tamano+'px'}\"&gt;Hola Mundo&lt;/p&gt;\n&lt;div [ngStyle]=\"styleObject\"&gt;...&lt;/div&gt;\n</code></pre> <p><code>ngClass</code>:</p> <ul> <li>Permite aplicar clases CSS din\u00e1micamente a elementos HTML.</li> <li>Acepta un objeto literal, una variable o un array que contenga las clases que se aplicar\u00e1n.</li> </ul> <pre><code>&lt;p [ngClass]=\"clase\"&gt;Hola Mundo&lt;/p&gt;\n&lt;p [ngClass]=\"[clase, claseParrafo ]\"&gt;Hola Mundo&lt;/p&gt;\n&lt;p [ngClass]=\"{'text-danger': danger, 'text-info': !danger}\"&gt;Hola Mundo&lt;/p&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#vinculacion-bidireccional-ngmodel","title":"Vinculaci\u00f3n bidireccional <code>[(ngModel)]</code>","text":"<p>La vinculaci\u00f3n bidireccional permite sincronizar el valor de un elemento de entrada (como <code>input</code> o <code>textarea</code>) con una propiedad de un componente. Requiere la importaci\u00f3n del m\u00f3dulo <code>FormsModule</code>.</p> <pre><code>&lt;input type=\"text\" [(ngModel)]=\"filterSearch\" class=\"form-control\"\nname=\"filterDesc\" id=\"filterDesc\" placeholder=\"Filter...\"&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#vincular-eventos","title":"Vincular eventos","text":"<p>Los eventos de los elementos HTML se pueden vincular a m\u00e9todos de componentes utilizando la sintaxis <code>()</code>.</p> <pre><code>&lt;button class=\"btn btn-sm\"\n[ngClass]=\"{'btn-danger': showImage, 'btn-primary': !showImage}\"\n(click)=\"toggleImage()\"&gt;\n{{showImage?'Ocultar':'Mostrar'}} imagen\n&lt;/button&gt;\n&lt;img [src]=\"product.imageUrl\" *ngIf=\"showImage\" alt=\"\"\n[title]=\"product.desc\"&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#directivas-estructurales","title":"Directivas estructurales","text":"<p>Las directivas estructurales en Angular permiten controlar el flujo condicional de las plantillas HTML, mostrando o ocultando contenido en funci\u00f3n de diversos criterios. </p> <p>Directiva <code>@if</code>:</p> <p>La directiva <code>@if</code> funciona similar a la instrucci\u00f3n <code>if</code> en JavaScript, permitiendo mostrar o esconder contenido en base a una condici\u00f3n booleana. Su sintaxis es la siguiente:</p> <pre><code>@if (expresi\u00f3nBooleana) {\n  } else {\n  }\n</code></pre> <p>Ejemplo:</p> <pre><code>@if (names.length &gt; 0) {\n  &lt;ul&gt;\n    &lt;li *ngFor=\"let name of names\"&gt;{{ name }}&lt;/li&gt;\n  &lt;/ul&gt;\n} else {\n  &lt;p&gt;No hay nombres para mostrar&lt;/p&gt;\n}\n</code></pre> <p>Directiva <code>@for</code>:</p> <p>La directiva <code>@for</code> itera sobre una colecci\u00f3n de datos, mostrando un elemento HTML por cada elemento de la colecci\u00f3n. Su sintaxis es la siguiente:</p> <pre><code>@for (elemento of colecci\u00f3n; trackBy clave) {\n  &lt;p&gt;{{ elemento }}&lt;/p&gt;\n}\n</code></pre> <p>Ejemplo:</p> <pre><code>@for (let nombre of nombres) {\n  &lt;p&gt;{{ nombre }}&lt;/p&gt;\n}\n</code></pre> <p>Directiva <code>@switch</code>:</p> <p>La directiva <code>@switch</code> funciona como la instrucci\u00f3n <code>switch</code> en JavaScript, permitiendo mostrar o esconder contenido en funci\u00f3n de una expresi\u00f3n que puede tener varios valores. Su sintaxis es la siguiente:</p> <pre><code>@switch (expresi\u00f3n) {\n  case valor1:\n    break;\n  case valor2:\n    break;\n  default:\n    }\n</code></pre> <p>Ejemplo:</p> <pre><code>@switch (tipoUsuario) {\n  case 'admin':\n    &lt;button&gt;Administrar usuarios&lt;/button&gt;\n    break;\n  case 'user':\n    &lt;button&gt;Ver mis datos&lt;/button&gt;\n    break;\n  default:\n    &lt;p&gt;Usuario no reconocido&lt;/p&gt;\n}\n</code></pre> <p>Directivas <code>@empty</code> y <code>trackBy</code>:</p> <p>Las directivas <code>@empty</code> y <code>trackBy</code> son opcionales y proporcionan funcionalidades adicionales:</p> <ul> <li> <p><code>@empty</code>: Define el contenido a mostrar cuando la colecci\u00f3n de datos est\u00e1 vac\u00eda.</p> </li> <li> <p><code>trackBy</code>: Especifica un valor \u00fanico para cada elemento de la colecci\u00f3n, lo que optimiza la actualizaci\u00f3n del DOM al iterar sobre la colecci\u00f3n.</p> </li> </ul> <p>Modernizaci\u00f3n a partir de Angular 17:</p> <p>A partir de Angular 17, las directivas estructurales <code>@if</code>, <code>@for</code> y <code>@switch</code> se han simplificado y no requieren la importaci\u00f3n de ninguna librer\u00eda adicional. Adem\u00e1s, la sintaxis se ha hecho m\u00e1s intuitiva y f\u00e1cil de leer. Es muy probable que encontremos ejemplos con ngFor, ngIf... Estos todav\u00eda funcionan, pero no se recomienda usarlos ya. </p> <p>@let</p> <p>Con @let podemos crear variables en el entorno de las plantillas. Estas tambi\u00e9n tienen \u00e1mbito de bloque y no pueden ser reasignadas.  Veamos alg\u00fan ejemplo:</p> <pre><code>@let name = 'Frodo';\n&lt;h1&gt;Dashboard for {{name}}&lt;/h1&gt;\nHello, {{name}}\n\n&lt;!-- Use with a template variable referencing an element --&gt;\n&lt;input #name&gt;\n\n@let greeting = 'Hello ' + name.value;\n\n&lt;!-- Use with an async pipe --&gt;\n@let user = user$ | async;\n</code></pre> <p>https://blog.angular.dev/introducing-let-in-angular-686f9f383f0f </p>"},{"location":"Moduls/DWEC/angular/angular.html#interfaces","title":"Interfaces","text":"<p>Las interfaces en Angular son un mecanismo fundamental para definir la estructura de objetos de datos. Proporcionan un contrato que describe las propiedades que un objeto debe tener y sus respectivos tipos. Esto mejora la legibilidad, mantenibilidad y seguridad del c\u00f3digo, ya que Angular puede detectar errores en tiempo de compilaci\u00f3n si se intenta utilizar un objeto que no cumple con la interfaz definida. </p> <p>Typescript necesita saber el contenido de los objetos y el tipo de todo. Se puede usar <code>any</code> en ocasiones contadas, pero siempre es mejor crear la interfaz. </p> <p>\u00bfPor qu\u00e9 utilizar interfaces?</p> <ul> <li>Claridad y definici\u00f3n: Las interfaces documentan de forma expl\u00edcita la estructura de los objetos, mejorando la comprensi\u00f3n del c\u00f3digo.</li> <li>Detecci\u00f3n temprana de errores: Angular puede detectar en tiempo de compilaci\u00f3n si se intenta utilizar un objeto que no cumple con la interfaz, evitando errores en tiempo de ejecuci\u00f3n.</li> <li>Refactorizaci\u00f3n segura: Al modificar la estructura de una interfaz, Angular te avisar\u00e1 de los lugares donde se utilizan objetos afectados, facilitando la refactorizaci\u00f3n segura del c\u00f3digo.</li> <li>Autocompletado: Los editores de c\u00f3digo modernos utilizan las interfaces para ofrecer autocompletado y sugerencias de tipos, mejorando la productividad del desarrollador.</li> </ul> <p>Creando una interfaz:</p> <p>Para crear una interfaz, se utiliza la palabra clave <code>interface</code> seguida por el nombre de la interfaz y un bloque con llaves que define sus propiedades:</p> <pre><code>export interface IProduct {\n  id: number;\n  description: string;\n  price: number;\n  available: Date;\n  imageUrl: string;\n  rating: number;\n}\n</code></pre> <p>Cada propiedad de la interfaz se define con su nombre, seguido de dos puntos <code>:</code> y el tipo de dato esperado.</p> <p>Utilizando interfaces:</p> <p>Una vez definida la interfaz, puedes utilizarla para declarar variables o propiedades de componentes que deben contener objetos con esa estructura. Por ejemplo:</p> <pre><code>products: IProduct[] = [\n  {\n    id: 1,\n    description: 'SSD hard drive',\n    available: new Date('2016-10-03'),\n    price: 75,\n    imageUrl: 'assets/ssd.jpg',\n    rating: 5\n  },\n  // ... otros productos\n];\n</code></pre> <p>En este ejemplo, el array <code>products</code> est\u00e1 tipado como un array de objetos que cumplen con la interfaz <code>IProduct</code>. Esto garantiza que cada objeto del array tenga las propiedades esperadas y del tipo correcto.</p>"},{"location":"Moduls/DWEC/angular/angular.html#ciclo-de-vida-de-los-componentes","title":"Ciclo de vida de los componentes","text":"Estructura de una aplicaci\u00f3n web t\u00edpica# <p>Los componentes son elementos reutilizables por naturaleza. Se pueden importar y utilizar en otros componentes, promoviendo la modularidad y evitando la duplicaci\u00f3n de c\u00f3digo. Esto facilita la creaci\u00f3n de interfaces de usuario consistentes y escalables.</p> <p>Los componentes tienen un ciclo de vida definido por una serie de m\u00e9todos que se llaman en diferentes momentos de su existencia. Algunos de los m\u00e9todos m\u00e1s importantes son:</p> <ul> <li><code>constructor</code>: Se llama cuando se crea una instancia del componente. El constructor se utiliza para inyectar dependencias y configurar valores iniciales. No se recomienda colocar l\u00f3gica de inicializaci\u00f3n aqu\u00ed porque puede ejecutarse antes de que las propiedades de entrada est\u00e9n configuradas.</li> <li><code>ngOnInit</code>: Se llama una vez que el componente se ha inicializado y est\u00e1 listo para usarse.</li> <li><code>ngAfterContentInit</code>: Se llama despu\u00e9s de que se haya inicializado el contenido del componente.</li> <li><code>ngAfterViewInit</code>: Se llama despu\u00e9s de que se haya renderizado el componente completamente.</li> <li><code>ngOnChanges</code>: Se llama cada vez que cambia una propiedad de entrada del componente. Puede ejecutarse demasiadas veces.</li> <li><code>ngDoCheck</code>: Se llama en cada ciclo de detecci\u00f3n de cambios de Angular. Se usar raramente porque se ejecuta muchas veces, s\u00f3lo si los eventos o cambios no son suficientes.</li> <li><code>ngOnDestroy</code>: Se llama cuando el componente se destruye.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#ngoninit","title":"ngOnInit","text":"<p><code>OnInit</code> es una interfaz que obliga a implementar el m\u00e9todo <code>ngOnInit()</code>. Esta interfaz forma parte del ciclo de vida de un componente, y su uso es esencial para inicializar el componente una vez que Angular ha configurado sus propiedades de entrada.</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../products.service';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n})\nexport class ProductDetailComponent implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params =&gt; {\n      const productId = params['id'];\n      // Aqu\u00ed se puede usar el productId para obtener los detalles del producto\n      // desde el servicio de productos\n      this.productsService.getProductById(productId).subscribe(product =&gt; {\n        // Manejo de los datos del producto\n        console.log(product);\n      });\n    });\n  }\n}\n</code></pre> <p>El m\u00e9todo <code>ngOnInit</code> se llama una vez que la inicializaci\u00f3n del componente est\u00e1 completa. Es especialmente \u00fatil para cualquier tipo de inicializaci\u00f3n que deba ocurrir despu\u00e9s de que Angular haya configurado todas las propiedades de entrada del componente.</p> <p>Al ejecutar <code>ngOnInit</code>nos aseguramos que todas las dependencias de datos de entrada han sido configuradas y obtenidas. Es el momento de que el componente pida nuevos datos si los necesita. Casi todos los componentes que obtienen datos de un servicio lo implementan.</p>"},{"location":"Moduls/DWEC/angular/angular.html#comunicacion-entre-componentes","title":"Comunicaci\u00f3n entre componentes","text":"<p>Los componentes se pueden anidar en una estructura jer\u00e1rquica, lo que permite crear interfaces de usuario complejas y modulares. Un componente padre puede contener uno o m\u00e1s componentes hijos, y cada componente hijo puede contener a su vez otros componentes hijos. Todo esto se hace importando el componente y usando la etiqueta HTML definida en la propiedad <code>selector</code>. </p> <p>Los componentes pueden comunicarse entre s\u00ed mediante diferentes mecanismos, como:</p> <ul> <li>Entrada y salida de datos: Los componentes pueden intercambiar datos a trav\u00e9s de propiedades de entrada y salida @Input y @Output.</li> <li>Servicios: Los componentes pueden compartir l\u00f3gica y datos mediante servicios, que son clases que encapsulan funcionalidad reutilizable.</li> <li>Eventos: Los componentes pueden emitir eventos que otros componentes pueden escuchar y responder. </li> </ul> <p>A su vez, esa comunicaci\u00f3n suele ser internamente reactiva mediante <code>Observables</code> o <code>Signals</code>. Veremos c\u00f3mo funciona la comunicaci\u00f3n t\u00edpica entre componentes padres e hijos y m\u00e1s adelante veremos c\u00f3mo comunicarse a trav\u00e9s de un servicio.  </p>"},{"location":"Moduls/DWEC/angular/angular.html#input","title":"@Input","text":"Diagrama de comunicaci\u00f3n entre componentes padres e hijos.# <p>Los componentes padres pueden enviar datos a sus componentes hijos mediante propiedades de entrada, y los componentes hijos pueden emitir eventos que sus componentes padres pueden escuchar.</p> <p>HTML de la plantilla del componente padre. Observa <code>[p]=\"product\"</code>:</p> <pre><code>&lt;h1&gt;Catalogue&lt;/h1&gt;\n&lt;div class=\"row row-cols-1 row-cols-md-2 g-4\"&gt;\n  &lt;div class=\"col\"&gt;\n    @for (product of products; track $index;){\n    &lt;app-product-item [p]=\"product\"&gt;\n    &lt;/app-product-item&gt;\n    }\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <p>El componente hijo:</p> <p></p><pre><code>import { Component, Input } from '@angular/core';\n...\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n})\nexport class ProductItemComponent {\n  @Input() p!: Product;\n}\n</code></pre> - La propiedad <code>p</code> est\u00e1 decorada con <code>@Input</code>, lo que permite que este componente reciba un valor desde su componente padre. - <code>p!: Product</code> indica que <code>p</code> es una propiedad obligatoria de tipo <code>Product</code>. El <code>!</code> es una aserci\u00f3n de no nulo/no indefinido, lo que le dice a TypeScript que conf\u00ede en que <code>p</code> ser\u00e1 inicializada correctamente.<p></p> <p>El decorador <code>@Input</code> en Angular se utiliza para marcar una propiedad de un componente como p\u00fablica, permitiendo que este reciba datos desde un componente padre, lo cual es esencial para la comunicaci\u00f3n entre componentes en Angular y facilita el flujo de datos de padres a hijos. Este enfoque promueve la modularidad al facilitar la creaci\u00f3n de componentes reutilizables y modulares, mejora la claridad al hacer expl\u00edcito qu\u00e9 datos necesita un componente para funcionar y optimiza el mantenimiento al separar claramente la l\u00f3gica de la presentaci\u00f3n de datos, lo que resulta en un c\u00f3digo m\u00e1s limpio y f\u00e1cil de gestionar en aplicaciones complejas.</p> <p>Existen varias opciones y formas de usar <code>@Input</code>, cada una con sus caracter\u00edsticas y beneficios.</p> <p>Ejemplo 1: <code>@Input</code> Requerido</p> <pre><code>@Input({ required: true }) name: string;\n</code></pre> <p>En este ejemplo, la propiedad <code>name</code> est\u00e1 marcada como requerida. Si el componente padre no proporciona un valor para <code>name</code>, Angular generar\u00e1 un error. Esto asegura que todos los componentes hijos tengan los datos necesarios para funcionar correctamente.</p> <p>Ejemplo 2: <code>@Input</code> con Getters y Setters</p> <pre><code>private myCourses: Course[];\n\n@Input()\nget courses() {\n  return this.myCourses;\n}\nset courses(courses: Course[]) {\n  this.myCourses = courses;\n}\n</code></pre> <p>Aqu\u00ed se define una propiedad <code>courses</code> con <code>@Input</code>, pero se utiliza un enfoque m\u00e1s avanzado con getters y setters. Esto permite controlar la forma en que los datos se asignan y se acceden. En este caso, <code>myCourses</code> es una propiedad privada y <code>courses</code> es una propiedad p\u00fablica que expone <code>myCourses</code> de manera controlada. Cada vez que se asignan nuevos cursos, se puede agregar l\u00f3gica adicional en el setter para manejar la asignaci\u00f3n de los datos.</p> <p>Ejemplo 3: <code>@Input</code> con Alias</p> <pre><code>@Input('userName') name: string;\n</code></pre> <p>Este ejemplo muestra c\u00f3mo se puede usar un alias con <code>@Input</code>. La propiedad p\u00fablica del componente hijo ser\u00e1 <code>name</code>, pero el componente padre puede pasarle datos usando el nombre <code>userName</code>. Esto es \u00fatil cuando se quiere mantener una convenci\u00f3n de nombres espec\u00edfica en el componente hijo, pero se quiere proporcionar un nombre m\u00e1s descriptivo o claro para el componente padre.</p>"},{"location":"Moduls/DWEC/angular/angular.html#property-has-no-initializers","title":"Property has no initializers...","text":"<p>En TypeScript, el error \"Property has no initializers...\" se produce cuando se declara una propiedad sin asignarle un valor inicial. Esto es particularmente relevante cuando se utiliza el decorador <code>@Input()</code> en Angular, ya que indica que una propiedad ser\u00e1 inicializada por el componente padre, lo cual podr\u00eda no suceder siempre. Es importante manejar este caso adecuadamente para evitar errores en tiempo de ejecuci\u00f3n y asegurar que el c\u00f3digo sea robusto.</p> <p>Existen varias formas de solucionar este problema en TypeScript:</p> <ol> <li>Utilizar el operador <code>!</code>:</li> </ol> <p></p><pre><code>@Input() products!: IProduct[];\n</code></pre>    Esta opci\u00f3n no es recomendable porque el operador <code>!</code> le dice a TypeScript que conf\u00ede en que la propiedad ser\u00e1 inicializada eventualmente, lo que podr\u00eda no ser cierto. Esto puede ocultar errores potenciales y llevar a problemas dif\u00edciles de depurar.<p></p> <ol> <li>Utilizar <code>| undefined</code> o <code>?</code>:</li> </ol> <p></p><pre><code>@Input() products?: IProduct[];\n// o\n@Input() products: IProduct[] | undefined;\n</code></pre>    Esta es la soluci\u00f3n m\u00e1s recomendable. Indica expl\u00edcitamente que la propiedad <code>products</code> puede no ser inicializada, permitiendo a TypeScript manejar correctamente este caso. Esto obliga a tratar la propiedad como potencialmente <code>undefined</code>, lo cual ayuda a prevenir errores en tiempo de ejecuci\u00f3n.<p></p> <ol> <li>Desactivar <code>strictPropertyInitialization</code> en <code>tsconfig.json</code>:</li> </ol> <p></p><pre><code>{\n  \"compilerOptions\": {\n    \"strictPropertyInitialization\": false\n  }\n}\n</code></pre>    Esta opci\u00f3n no es recomendable porque desactiva la verificaci\u00f3n estricta de inicializaci\u00f3n de propiedades en todo el proyecto. Esto puede llevar a pasar por alto otros errores de inicializaci\u00f3n, reduciendo la seguridad y robustez del c\u00f3digo.<p></p> <p>Para manejar adecuadamente la inicializaci\u00f3n de propiedades en Angular y TypeScript, es importante usar t\u00e9cnicas que indiquen claramente las posibles opciones de inicializaci\u00f3n. Usar <code>| undefined</code> o <code>?</code> es la mejor pr\u00e1ctica, ya que proporciona una forma segura y expl\u00edcita de tratar con propiedades opcionales. Se deber\u00eda evitar el uso del operador <code>!</code>, a menos que sea una propiedad que, seguro que va a llegar. </p>"},{"location":"Moduls/DWEC/angular/angular.html#output","title":"@Output","text":"<p>En Angular, el decorador <code>@Output</code> se utiliza para permitir que un componente hijo emita eventos personalizados que puedan ser capturados por su componente padre. Esto es \u00fatil para la comunicaci\u00f3n de eventos y datos desde un componente hijo hacia su padre, facilitando la interacci\u00f3n entre componentes.</p> <p>El uso del decorador <code>@Output</code> en Angular permite una comunicaci\u00f3n eficaz entre componentes hijo y padre mediante eventos personalizados.  Al emitir eventos desde el hijo y capturarlos en el padre, se puede gestionar f\u00e1cilmente la l\u00f3gica de la aplicaci\u00f3n y mantener una separaci\u00f3n clara de responsabilidades entre los componentes.</p> <p>En este ejemplo, un componente hijo emite un evento personalizado cuando se produce un cambio en la puntuaci\u00f3n (<code>ratting</code>). El componente padre escucha este evento y act\u00faa en consecuencia.</p>"},{"location":"Moduls/DWEC/angular/angular.html#paso-1-configuracion-en-el-componente-hijo","title":"Paso 1: Configuraci\u00f3n en el Componente Hijo","text":"<p>Primero, definimos un <code>EventEmitter</code> en el componente hijo que emitir\u00e1 el evento cuando cambie la puntuaci\u00f3n:</p> <pre><code>import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n})\nexport class RatingComponent {\n  @Output() rattingChanged = new EventEmitter&lt;number&gt;();\n\n  auxRatting: number;\n\n  puntuar(i: number): void {\n    this.auxRatting = i;\n    this.rattingChanged.emit(this.auxRatting);\n  }\n}\n</code></pre> <ul> <li><code>@Output() rattingChanged = new EventEmitter&lt;number&gt;();</code>: Define un evento <code>rattingChanged</code> que emitir\u00e1 un n\u00famero.</li> <li><code>puntuar(i: number): void</code>: Esta funci\u00f3n se llama cuando se cambia la puntuaci\u00f3n y emite el nuevo valor usando <code>rattingChanged.emit(this.auxRatting)</code>.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#paso-2-captura-del-evento-en-el-componente-padre","title":"Paso 2: Captura del Evento en el Componente Padre","text":"<p>En el componente padre, se escucha el evento emitido por el hijo y se define una funci\u00f3n para manejar el cambio de puntuaci\u00f3n:</p> <pre><code>&lt;!-- product-list.component.html --&gt;\n&lt;app-rating (rattingChanged)=\"changeRatting($event, product)\"&gt;&lt;/app-rating&gt;\n</code></pre> <pre><code>import { Component } from '@angular/core';\nimport { Product } from './product.model';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent {\n\n  products: Product[];\n\n  changeRatting(stars: number, p: Product): void {\n    p.ratting = stars;\n  }\n}\n</code></pre> <ul> <li><code>(rattingChanged)=\"changeRatting($event, product)\"</code>: El componente padre escucha el evento <code>rattingChanged</code> del componente hijo y llama a la funci\u00f3n <code>changeRatting</code>, pasando el valor del evento <code>$event</code> y el producto correspondiente <code>product</code>.</li> <li><code>changeRatting(stars: number, p: Product): void</code>: Esta funci\u00f3n actualiza la puntuaci\u00f3n (<code>ratting</code>) del producto con el nuevo valor recibido desde el componente hijo.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#pipes","title":"Pipes","text":"<p>Los Pipes en Angular  permiten transformar los datos directamente en las plantillas antes de mostrarlos. Al igual que los filtros en Linux, los pipes toman una entrada, la procesan y devuelven una salida transformada. Angular proporciona varios pipes predefinidos, pero tambi\u00e9n es posible crear pipes personalizados para satisfacer necesidades espec\u00edficas.</p>"},{"location":"Moduls/DWEC/angular/angular.html#uso-de-pipes-predefinidos","title":"Uso de Pipes Predefinidos","text":"<p>En Angular, los pipes se utilizan en las plantillas despu\u00e9s de la variable, separados por el s\u00edmbolo <code>|</code>. Un punto importante es que los pipes no modifican la variable original, sino que retornan una versi\u00f3n transformada de la misma. Algunos pipes predefinidos en Angular incluyen:</p> <ul> <li><code>uppercase</code>: Convierte el texto a may\u00fasculas.</li> <li><code>currency</code>: Formatea un n\u00famero como una moneda.</li> <li><code>date</code>: Formatea una fecha seg\u00fan el formato especificado.</li> </ul> <p>Aqu\u00ed hay un ejemplo de c\u00f3mo usar algunos de estos pipes predefinidos en una tabla que muestra una lista de productos:</p> <pre><code>&lt;tr *ngFor=\"let product of products\"&gt;\n    &lt;td&gt;\n        &lt;img [src]=\"product.imageUrl\" \n             *ngIf=\"showImage\" alt=\"\"\n             [title]=\"product.desc | uppercase\"&gt;\n    &lt;/td&gt;\n    &lt;td&gt;{{ product.description }}&lt;/td&gt;\n    &lt;td&gt;{{ product.price | currency:'EUR':'symbol'}}&lt;/td&gt;\n    &lt;td&gt;{{ product.available | date:'dd/MM/y' }}&lt;/td&gt;\n&lt;/tr&gt;\n</code></pre> <p>En este ejemplo: - El pipe <code>uppercase</code> se usa para convertir la descripci\u00f3n del producto a may\u00fasculas. - El pipe <code>currency</code> formatea el precio del producto en euros. - El pipe <code>date</code> formatea la fecha de disponibilidad del producto en el formato <code>dd/MM/y</code>.</p>"},{"location":"Moduls/DWEC/angular/angular.html#creacion-de-pipes-personalizados","title":"Creaci\u00f3n de Pipes Personalizados","text":"<p>Si los pipes predefinidos no cumplen con todas las necesidades de transformaci\u00f3n de datos, Angular permite crear pipes personalizados. La creaci\u00f3n de un pipe personalizado implica los siguientes pasos:</p> <ol> <li> <p>Generar el Pipe: Utilizar el comando Angular CLI para generar el esqueleto del pipe.    </p><pre><code>ng g pipe pipes/nombreDelPipe\n</code></pre><p></p> </li> <li> <p>Implementar el Pipe: Definir la l\u00f3gica de transformaci\u00f3n en el pipe generado. Aqu\u00ed hay un ejemplo de un pipe personalizado que filtra productos bas\u00e1ndose en un criterio de b\u00fasqueda:    </p><pre><code>import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from '../product/product';\n\n@Pipe({\n    name: 'productFilter'\n})\nexport class ProductFilterPipe implements PipeTransform {\n    transform(products: Product[], filterBy: string): Product[] {\n        const filter = filterBy ? filterBy.toLocaleLowerCase() : null;\n        return filter ? \n            products.filter(p =&gt; p.name.toLocaleLowerCase().includes(filter)) \n            : products;\n    }\n}\n</code></pre><p></p> </li> </ol> <p>En este pipe personalizado:    - La funci\u00f3n <code>transform</code> toma dos argumentos: una lista de productos y un criterio de b\u00fasqueda.    - Convierte el criterio de b\u00fasqueda a min\u00fasculas para realizar una comparaci\u00f3n insensible a may\u00fasculas.    - Filtra los productos cuyo nombre incluye el criterio de b\u00fasqueda.</p> <ol> <li>Usar el Pipe Personalizado: Aplicar el pipe en la plantilla para filtrar los productos seg\u00fan el criterio de b\u00fasqueda.</li> </ol> <pre><code>&lt;tr *ngFor=\"let product of products | productFilter: filter\"&gt;\n    &lt;td&gt;{{ product.name }}&lt;/td&gt;\n    &lt;td&gt;{{ product.price | currency:'EUR':'symbol' }}&lt;/td&gt;\n    &lt;td&gt;{{ product.available | date:'dd/MM/y' }}&lt;/td&gt;\n&lt;/tr&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#directivas-en-angular","title":"Directivas en Angular","text":"<p>Las directivas en Angular son un mecanismo potente para manipular el DOM de manera declarativa. Pueden modificar elementos HTML y su comportamiento en funci\u00f3n de la l\u00f3gica de la aplicaci\u00f3n. Existen tres tipos principales de directivas en Angular:</p> <ol> <li>Directivas de componente: Se definen mediante el selector en el decorador <code>@Component</code> y son las que hemos creado hasta ahora.</li> <li>Directivas de atributo: Modifican el comportamiento de un elemento. Ejemplos comunes son <code>NgClass</code> y <code>NgStyle</code>.</li> <li>Directivas estructurales: Manipulan la estructura del DOM, como <code>ngIf</code>, <code>ngFor</code> y <code>ngSwitch</code>, controlando si un elemento se muestra o no.</li> </ol>"},{"location":"Moduls/DWEC/angular/angular.html#crear-directivas-de-atributo","title":"Crear directivas de atributo","text":"<p>Podemos crear nuestras propias directivas de atributo para a\u00f1adir comportamientos personalizados a los elementos HTML. Vamos a crear una directiva llamada <code>Resaltado</code> que cambiar\u00e1 el color de fondo de un elemento cuando el rat\u00f3n pase sobre \u00e9l.</p> <p>Primero, generamos la directiva con Angular CLI:</p> <pre><code>ng g directive directives/resaltado\n</code></pre> <p>Luego, implementamos la l\u00f3gica en el archivo <code>resaltado.directive.ts</code>:</p> <pre><code>import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appResaltado]'\n})\nexport class ResaltadoDirective {\n  @Input('appResaltado') nuevoColor: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('mouseenter') entrarMouse() {\n    this.el.nativeElement.style.backgroundColor = this.nuevoColor;\n  }\n\n  @HostListener('mouseleave') saleMouse() {\n    this.el.nativeElement.style.backgroundColor = null;\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>Resaltado</code>:</p> <pre><code>&lt;div class=\"col-md-4\" [appResaltado]=\"color\"&gt;\n  &lt;!-- Contenido del elemento --&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#elementref-vs-renderer2","title":"ElementRef vs Renderer2","text":"<p><code>ElementRef</code> nos da una referencia directa a un elemento del DOM una vez renderizado. Sin embargo, utilizar <code>ElementRef</code> puede exponer riesgos de seguridad y no es la mejor pr\u00e1ctica en aplicaciones que necesitan ser multiplataforma. En cambio, <code>Renderer2</code> proporciona una abstracci\u00f3n adicional, permitiendo manipular el DOM de manera segura y compatible con aplicaciones de servidor y Web Workers.</p> <p>Ejemplo con <code>Renderer2</code>:</p> <pre><code>import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appMostrar]'\n})\nexport class MostrarDirective {\n  @Input() elementMostrar!: any;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('mouseenter') entrarMouse() {\n    this.renderer.setStyle(this.elementMostrar, 'display', '');\n  }\n\n  @HostListener('mouseleave') saleMouse() {\n    this.renderer.setStyle(this.elementMostrar, 'display', 'none');\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>Mostrar</code>:</p> <pre><code>&lt;li appMostrar \n[elementMostrar]=\"ocultar\"&gt;\n  &lt;!-- Contenido del elemento --&gt;\n&lt;/li&gt;\n\n&lt;p #ocultar style=\"margin-bottom: 0; display:none;\"&gt;\n  Producci\u00f3n: &lt;span *appForDelay=\"100; let p of placa.production\"&gt;{{p}}W&lt;/span&gt;\n&lt;/p&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#crear-directivas-estructurales","title":"Crear directivas estructurales","text":"<p>Las directivas estructurales, como <code>ngIf</code>, <code>ngFor</code> y <code>ngSwitch</code>, utilizan el asterisco (*) para simplificar la manipulaci\u00f3n de etiquetas <code>&lt;ng-template&gt;</code> que rodean al elemento que est\u00e1n manipulando.</p> <p>Vamos a crear una directiva estructural llamada <code>ForDelay</code> que retrasa la visualizaci\u00f3n de elementos en un bucle.</p> <p>Primero, generamos la directiva:</p> <pre><code>ng g directive directives/for-delay\n</code></pre> <p>Implementamos la l\u00f3gica en el archivo <code>for-delay.directive.ts</code>:</p> <pre><code>import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appForDelay]'\n})\nexport class ForDelayDirective {\n  private items: Array&lt;number&gt; = [];\n  private delay = 0;\n\n  constructor(private templateRef: TemplateRef&lt;any&gt;, private viewContainer: ViewContainerRef) {}\n\n  @Input() set appForDelay(t: number) {\n    this.delay = t;\n  }\n\n  @Input() set appForDelayOf(array: number[]) {\n    this.items = array;\n    this.renderItems();\n  }\n\n  private async renderItems() {\n    for (let item of this.items) {\n      this.viewContainer.createEmbeddedView(this.templateRef, {\n        $implicit: item\n      });\n      await this.delayTime(this.delay);\n    }\n  }\n\n  private delayTime(ms: number) {\n    return new Promise(resolve =&gt; setTimeout(resolve, ms));\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>ForDelay</code>:</p> <pre><code>&lt;span *appForDelay=\"100; let p of placa.production\"&gt;{{p}}W&lt;/span&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#eventos","title":"Eventos","text":"<p>En Angular, la manera m\u00e1s simple de gestionar eventos es con la sintaxis <code>( )</code> en el elemento HTML correspondiente. Esto crea una suscripci\u00f3n externa. Para una suscripci\u00f3n interna, usamos <code>@HostListener</code>.</p> <p>Ejemplo de suscripci\u00f3n interna con <code>@HostListener</code>:</p> <pre><code>import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appScroll]'\n})\nexport class ScrollDirective {\n  imgY = 100;\n\n  @HostListener('window:scroll', ['$event'])\n  homeScroll($event: Event) {\n    let scrollOffset = window.scrollY;\n    this.imgY = 100 - scrollOffset / 2;\n    if (this.imgY &lt; 0) {\n      this.imgY = 20;\n    }\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>Scroll</code>:</p> <pre><code>&lt;div appScroll&gt;\n  &lt;!-- Contenido del elemento --&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#modulos-en-angular","title":"M\u00f3dulos en Angular","text":"<p>A medida que una aplicaci\u00f3n de Angular crece en tama\u00f1o y complejidad, no es sostenible mantener toda la funcionalidad en un solo m\u00f3dulo <code>AppModule</code> y organizar los componentes \u00fanicamente en directorios. En Angular, los m\u00f3dulos (<code>NgModules</code>) son la manera recomendada de organizar y estructurar aplicaciones grandes y complejas. Un m\u00f3dulo es una clase con el decorador <code>@NgModule</code> que define un contenedor para un conjunto coherente de componentes, directivas, pipes y servicios.</p> <p>Angular permite la carga diferida (lazy loading) de m\u00f3dulos, lo que ayuda a mejorar el rendimiento de la aplicaci\u00f3n cargando m\u00f3dulos solo cuando se necesitan. Esta t\u00e9cnica es especialmente \u00fatil para grandes aplicaciones con muchas rutas y funcionalidades diversas.</p>"},{"location":"Moduls/DWEC/angular/angular.html#arrays-del-decorador-ngmodule","title":"Arrays del Decorador @NgModule","text":"<p>El decorador <code>@NgModule</code> define varios arrays que especifican c\u00f3mo se organiza el m\u00f3dulo:</p> <ul> <li> <p>bootstrap: Solo se utiliza en el <code>AppModule</code>, define el componente inicial que se debe cargar al iniciar la aplicaci\u00f3n.</p> </li> <li> <p>declarations: Contiene los componentes, directivas y pipes que pertenecen a este m\u00f3dulo. Cada componente, directiva o pipe solo puede estar declarado en un \u00fanico m\u00f3dulo, pero puede ser exportado para ser utilizado en otros m\u00f3dulos. La declaraci\u00f3n es necesaria para que estos elementos sean compilados y utilizados en la aplicaci\u00f3n.</p> </li> <li> <p>exports: Permite compartir los componentes, directivas y pipes con otros m\u00f3dulos. Tambi\u00e9n se pueden exportar m\u00f3dulos completos para crear un meta-m\u00f3dulo que importe otros m\u00f3dulos. Sin embargo, no se pueden exportar servicios, ya que estos son inyectables a nivel global por defecto.</p> </li> <li> <p>imports: Contiene otros m\u00f3dulos (de terceros o propios) que el m\u00f3dulo necesita. Lo que se importa son los elementos que esos m\u00f3dulos exportan.</p> </li> <li> <p>providers: Define los servicios que deben estar disponibles en toda la aplicaci\u00f3n. Normalmente, solo se declara en el <code>AppModule</code> para evitar conflictos y asegurar que el servicio est\u00e9 disponible de manera global. Los servicios pueden ser autoinyectables con <code>providedIn: 'root'</code> en su decorador <code>@Injectable</code>.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#criterios-para-separar-la-aplicacion-en-modulos","title":"Criterios para Separar la Aplicaci\u00f3n en M\u00f3dulos","text":"<p>Separar una aplicaci\u00f3n en m\u00f3dulos bien definidos facilita la gesti\u00f3n, el mantenimiento y la escalabilidad del c\u00f3digo. A continuaci\u00f3n se detallan algunos criterios para organizar los m\u00f3dulos en una aplicaci\u00f3n Angular:</p> <ul> <li> <p>M\u00f3dulos de Dominio: Se utilizan para organizar el c\u00f3digo sin representar necesariamente una ruta. Por ejemplo, un m\u00f3dulo que contiene componentes relacionados con un men\u00fa de navegaci\u00f3n.</p> </li> <li> <p>M\u00f3dulos de Secci\u00f3n: Representan secciones, rutas o p\u00e1ginas espec\u00edficas de la aplicaci\u00f3n. Por ejemplo, m\u00f3dulos para gestionar productos, clientes o facturas.</p> </li> <li> <p>M\u00f3dulos de Servicios: Se utilizan para organizar servicios que ser\u00e1n utilizados en toda la aplicaci\u00f3n. Normalmente, estos m\u00f3dulos solo se importan en el <code>AppModule</code>. Un ejemplo t\u00edpico es <code>HttpClientModule</code>.</p> </li> <li> <p>M\u00f3dulos de Componentes: Contienen componentes que pueden ser reutilizados en diversos m\u00f3dulos de la aplicaci\u00f3n. Por ejemplo, un m\u00f3dulo que contiene una vista modal para mostrar im\u00e1genes en tama\u00f1o completo.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#ejemplo-de-un-modulo-en-angular","title":"Ejemplo de un M\u00f3dulo en Angular","text":"<p>A continuaci\u00f3n, se muestra un ejemplo de c\u00f3mo definir un m\u00f3dulo en Angular.</p>"},{"location":"Moduls/DWEC/angular/angular.html#definicion-del-modulo","title":"Definici\u00f3n del M\u00f3dulo","text":"<pre><code>import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    ProductListComponent,\n    ProductDetailComponent\n  ]\n})\nexport class ProductModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#descripcion-del-modulo","title":"Descripci\u00f3n del M\u00f3dulo","text":"<p>En este ejemplo, <code>ProductModule</code> es un m\u00f3dulo que encapsula toda la funcionalidad relacionada con los productos en la aplicaci\u00f3n. Los componentes <code>ProductListComponent</code> y <code>ProductDetailComponent</code> son declarados y exportados para que puedan ser utilizados en otros m\u00f3dulos si es necesario.</p> <ul> <li>declarations: Declara <code>ProductListComponent</code> y <code>ProductDetailComponent</code> para que puedan ser utilizados dentro del m\u00f3dulo.</li> <li>imports: Importa <code>CommonModule</code> para obtener acceso a las directivas comunes de Angular, como <code>ngIf</code> y <code>ngFor</code>, e <code>FormsModule</code> para trabajar con formularios basados en plantillas.</li> <li>exports: Exporta los componentes <code>ProductListComponent</code> y <code>ProductDetailComponent</code> para que puedan ser utilizados en otros m\u00f3dulos de la aplicaci\u00f3n.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#organizacion-de-modulos-en-una-aplicacion-grande","title":"Organizaci\u00f3n de M\u00f3dulos en una Aplicaci\u00f3n Grande","text":"<p>Para una aplicaci\u00f3n grande, es esencial seguir una estructura modular clara y bien definida. A continuaci\u00f3n, se describe una posible estructura de m\u00f3dulos para una aplicaci\u00f3n compleja:</p>"},{"location":"Moduls/DWEC/angular/angular.html#modulo-principal-appmodule","title":"M\u00f3dulo Principal (AppModule)","text":"<p>El <code>AppModule</code> es el m\u00f3dulo principal de la aplicaci\u00f3n y generalmente contiene la configuraci\u00f3n de los servicios globales, el enrutador principal y el componente ra\u00edz.</p> <pre><code>import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#modulo-de-core","title":"M\u00f3dulo de Core","text":"<p>El <code>CoreModule</code> puede contener servicios singleton que se utilizan en toda la aplicaci\u00f3n y otros elementos que deber\u00edan ser \u00fanicos y cargados una sola vez.</p> <pre><code>import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    // Servicios singleton\n  ],\n  exports: [\n    // Componentes y directivas compartidos\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only.');\n    }\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#modulo-de-caracteristica-feature-module","title":"M\u00f3dulo de Caracter\u00edstica (Feature Module)","text":"<p>Los m\u00f3dulos de caracter\u00edstica encapsulan funcionalidad espec\u00edfica de una secci\u00f3n de la aplicaci\u00f3n, como gesti\u00f3n de productos, clientes o facturas.</p> <pre><code>import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductRoutingModule } from './product-routing.module';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    ProductRoutingModule\n  ]\n})\nexport class ProductModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#modulo-de-rutas-routing-module","title":"M\u00f3dulo de Rutas (Routing Module)","text":"<p>El m\u00f3dulo de rutas se encarga de definir las rutas para la navegaci\u00f3n de la aplicaci\u00f3n.</p> <pre><code>import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\nconst routes: Routes = [\n  { path: 'products', component: ProductListComponent },\n  { path: 'products/:id', component: ProductDetailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductRoutingModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html","title":"Consejos y Mejores Pr\u00e1cticas para Desarrollar en Angular","text":""},{"location":"Moduls/DWEC/angular/consejos.html#consejos-y-mejores-practicas-para-desarrollar-en-angular","title":"Consejos y Mejores Pr\u00e1cticas para Desarrollar en Angular","text":"<p>Angular es un framework potente y flexible para desarrollar aplicaciones web modernas. Sin embargo, su complejidad puede ser abrumadora, especialmente en proyectos grandes. A continuaci\u00f3n, se presentan una serie de consejos y mejores pr\u00e1cticas para organizar y estructurar tu c\u00f3digo de Angular de manera efectiva.</p>"},{"location":"Moduls/DWEC/angular/consejos.html#1-utilizacion-de-herramientas-y-funcionalidades-de-angular","title":"1. Utilizaci\u00f3n de Herramientas y Funcionalidades de Angular","text":"<ul> <li> <p>Componentes: Utiliza componentes para dividir tu HTML en partes m\u00e1s peque\u00f1as y con una entidad propia. Cada componente deber\u00eda tener una responsabilidad clara y espec\u00edfica.</p> </li> <li> <p>Rutas: Usa el enrutador de Angular para gestionar la navegaci\u00f3n dentro de tu aplicaci\u00f3n. Define rutas en tu m\u00f3dulo de enrutamiento y aseg\u00farate de que cada ruta apunte a un componente que se encargue de una secci\u00f3n espec\u00edfica de la aplicaci\u00f3n.</p> </li> <li> <p>Interpolaci\u00f3n: Muestra variables en el HTML usando <code>{{}}</code>. Esto enlaza las propiedades del componente con la vista de manera declarativa.</p> </li> <li> <p>Estilos Din\u00e1micos: Cambia estilos de forma din\u00e1mica usando <code>ngStyle</code>, <code>ngClass</code> o las propiedades <code>[style]</code> y <code>[class]</code>.</p> </li> <li> <p>Formularios: Usa el binding bidireccional <code>[()]</code> para formularios simples y formularios reactivos para formularios m\u00e1s complejos. Los formularios reactivos ofrecen un mayor control desde el c\u00f3digo del componente.</p> </li> <li> <p>Eventos: Maneja eventos individuales usando <code>()</code>. Esto enlaza eventos del DOM con m\u00e9todos del componente.</p> </li> <li> <p>Interfaces: Utiliza interfaces para definir datos que ser\u00e1n compartidos entre varios componentes o servicios. Esto ayuda a mantener el c\u00f3digo tipado y reduce errores.</p> </li> <li> <p>Directivas de Atributo: Usa directivas de atributo para manejar eventos recurrentes en varios componentes. Esto permite reutilizar l\u00f3gica de manera eficiente.</p> </li> <li> <p>Guards: Protege las rutas de tu aplicaci\u00f3n con guards. Los guards pueden controlar el acceso a las rutas bas\u00e1ndose en condiciones espec\u00edficas.</p> </li> <li> <p>Servicios y Resolvers: Usa servicios para guardar y servir datos tanto en el navegador como en el servidor. Los resolvers pueden precargar datos antes de activar una ruta, mejorando la experiencia del usuario.</p> </li> <li> <p>Variables Globales:</p> <ul> <li>Environment: Usa variables de entorno (<code>environment.ts</code>) para configurar valores globales que pueden ser consultados por cualquier componente.</li> <li>Servicios con Observable: Utiliza servicios que expongan Observables para reaccionar a cambios en tiempo real.</li> </ul> </li> <li> <p>M\u00f3dulos: Divide tu aplicaci\u00f3n en m\u00f3dulos. Los m\u00f3dulos permiten organizar tu c\u00f3digo en partes diferenciadas y reutilizables, facilitando la escalabilidad y el mantenimiento.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/consejos.html#2-arquitectura-y-estructura-de-la-aplicacion","title":"2. Arquitectura y Estructura de la Aplicaci\u00f3n","text":"<p>La arquitectura de tu aplicaci\u00f3n Angular debe facilitar la localizaci\u00f3n de elementos, reducir la complejidad y evitar la duplicaci\u00f3n de c\u00f3digo. Aqu\u00ed hay algunas pautas clave:</p> <ul> <li> <p>Claridad y Accesibilidad: Organiza tu c\u00f3digo de manera que cualquier desarrollador pueda encontrar f\u00e1cilmente los elementos de la aplicaci\u00f3n.</p> </li> <li> <p>Reducci\u00f3n de Complejidad: Divide la funcionalidad en m\u00f3dulos y componentes espec\u00edficos para mantener el c\u00f3digo manejable.</p> </li> <li> <p>Evitar Duplicaci\u00f3n de C\u00f3digo: Adopta el principio DRY (Don\u2019t Repeat Yourself). Reutiliza componentes y servicios siempre que sea posible.</p> </li> <li> <p>Gu\u00eda de Estilos: Sigue las recomendaciones de la gu\u00eda de estilos de Angular para mantener un c\u00f3digo limpio y coherente.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/consejos.html#3-principios-de-programacion","title":"3. Principios de Programaci\u00f3n","text":"<ul> <li> <p>Programaci\u00f3n Funcional y Reactiva: Prefiere la programaci\u00f3n funcional y reactiva sobre la orientaci\u00f3n a objetos o imperativa. Usa RxJS para manejar flujos de datos asincr\u00f3nicos.</p> </li> <li> <p>Composici\u00f3n sobre Herencia: En la programaci\u00f3n orientada a objetos, la composici\u00f3n es preferible a la herencia. Esto permite crear componentes m\u00e1s flexibles y reutilizables.</p> </li> <li> <p>Principio de Responsabilidad \u00danica (SRP): Mant\u00e9n tus archivos peque\u00f1os y enfocados en una \u00fanica responsabilidad. Cada clase, componente o interfaz deber\u00eda estar en su propio archivo.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/consejos.html#4-componentes","title":"4. Componentes","text":"<ul> <li> <p>Mant\u00e9n Componentes Peque\u00f1os: Los componentes deben ser peque\u00f1os y enfocados. Es mejor tener varios componentes hijos que un \u00fanico componente complejo.</p> </li> <li> <p>Componentes de Presentaci\u00f3n y Contenedores:</p> <ul> <li>Dumb Components: Estos componentes solo se encargan de la presentaci\u00f3n. Reciben datos a trav\u00e9s de <code>@Input</code> y emiten eventos mediante <code>@Output</code>.</li> <li>Smart Components: Estos componentes manejan la l\u00f3gica de la aplicaci\u00f3n. Se conectan a servicios para obtener o enviar datos. Las rutas generalmente apuntan a componentes inteligentes.</li> </ul> </li> </ul>"},{"location":"Moduls/DWEC/angular/consejos.html#5-estructura-de-directorios","title":"5. Estructura de Directorios","text":"<p>Organiza tu c\u00f3digo en directorios de manera que refleje la estructura de tu aplicaci\u00f3n:</p> <ul> <li>Core: Contiene servicios singleton, guardias, y cualquier otro c\u00f3digo que solo debe cargarse una vez.</li> <li>Shared: Contiene componentes, directivas y pipes reutilizables.</li> <li>Features: Cada funcionalidad principal de la aplicaci\u00f3n tiene su propio m\u00f3dulo y directorio.</li> <li>App: Contiene el m\u00f3dulo principal de la aplicaci\u00f3n, el m\u00f3dulo de enrutamiento principal y el componente ra\u00edz.</li> </ul> <p>Ejemplo de estructura de directorios:</p> <pre><code>/src\n  /app\n    /core\n      /services\n      /guards\n      core.module.ts\n    /shared\n      /components\n      /directives\n      /pipes\n      shared.module.ts\n    /features\n      /products\n        /components\n        /services\n        /models\n        products.module.ts\n      /customers\n        /components\n        /services\n        /models\n        customers.module.ts\n    /app-routing\n    app.module.ts\n    app.component.ts\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#integracion-de-bibliotecas-de-terceros","title":"Integraci\u00f3n de Bibliotecas de Terceros","text":"<p>Angular, al ser un framework altamente extensible, permite la integraci\u00f3n de diversas bibliotecas de terceros que facilitan el desarrollo y mejoran la funcionalidad de nuestras aplicaciones. A continuaci\u00f3n, se describen algunas de las bibliotecas m\u00e1s populares y c\u00f3mo integrarlas en tu proyecto Angular.</p>"},{"location":"Moduls/DWEC/angular/consejos.html#1-bootstrap","title":"1. Bootstrap","text":"<p>Bootstrap es un framework de CSS que facilita la creaci\u00f3n de interfaces web responsivas y modernas. Hay varias maneras de integrarlo en un proyecto Angular:</p>"},{"location":"Moduls/DWEC/angular/consejos.html#uso-del-cdn-de-bootstrap","title":"Uso del CDN de Bootstrap","text":"<p>Esta es la forma m\u00e1s simple y r\u00e1pida de agregar Bootstrap a tu proyecto.</p> <p>Ventajas: - Puede estar en la cach\u00e9 del navegador del cliente. - Siempre estar\u00e1 actualizado.</p> <p>Desventajas: - No siempre necesitas todos los componentes de Bootstrap. - Necesitas estar conectado a Internet.</p> <p>Para usar el CDN, simplemente agrega los siguientes enlaces en el archivo <code>index.html</code> de tu proyecto Angular:</p> <pre><code>&lt;link\n  rel=\"stylesheet\"\n  href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n/&gt;\n&lt;script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#descarga-manual","title":"Descarga Manual","text":"<p>Otra opci\u00f3n es descargar el archivo comprimido de Bootstrap y colocarlo en el directorio <code>assets</code> de tu proyecto.</p>"},{"location":"Moduls/DWEC/angular/consejos.html#instalacion-via-npm","title":"Instalaci\u00f3n v\u00eda npm","text":"<p>La forma m\u00e1s recomendada para proyectos Angular es instalar Bootstrap a trav\u00e9s de npm, ya que facilita la gesti\u00f3n de dependencias.</p> <pre><code>npm install bootstrap\nnpm install --save-dev @types/bootstrap\n</code></pre> <p>Luego, agrega las rutas a los archivos de Bootstrap en tu archivo <code>angular.json</code>:</p> <pre><code>\"styles\": [\n  \"node_modules/bootstrap/dist/css/bootstrap.min.css\",\n  \"src/styles.scss\"\n],\n\"scripts\": [\n  \"node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\"\n]\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#2-angular-material","title":"2. Angular Material","text":"<p>Angular Material es una biblioteca de componentes UI basada en Material Design, desarrollada espec\u00edficamente para Angular.</p> <p>Para instalar Angular Material, utiliza el siguiente comando:</p> <pre><code>ng add @angular/material\n</code></pre> <p>Este comando configurar\u00e1 Angular Material en tu proyecto, incluyendo los temas y animaciones necesarias. Tambi\u00e9n puedes seguir la gu\u00eda de inicio r\u00e1pido en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/DWEC/angular/consejos.html#uso","title":"Uso","text":"<p>Una vez instalado, puedes empezar a usar los componentes de Angular Material import\u00e1ndolos en tus m\u00f3dulos. Por ejemplo, para usar un bot\u00f3n de Angular Material:</p> <pre><code>import { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  imports: [\n    MatButtonModule\n  ]\n})\nexport class AppModule { }\n</code></pre> <p>Y en tu plantilla HTML:</p> <pre><code>&lt;button mat-button&gt;Click me!&lt;/button&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#3-ngx-charts","title":"3. Ngx Charts","text":"<p>Ngx Charts es una biblioteca para crear gr\u00e1ficos y visualizaciones interactivas en Angular.</p> <p>Para instalar Ngx Charts, ejecuta el siguiente comando:</p> <pre><code>npm install @swimlane/ngx-charts --save\n</code></pre> <p>Luego, importa el m\u00f3dulo en <code>app.module.ts</code>:</p> <pre><code>import { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@NgModule({\n  imports: [\n    NgxChartsModule\n  ]\n})\nexport class AppModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#uso_1","title":"Uso","text":"<p>Puedes encontrar ejemplos y documentaci\u00f3n detallada en la web oficial de Ngx Charts. Aqu\u00ed tienes un ejemplo b\u00e1sico de c\u00f3mo usar un gr\u00e1fico de barras:</p> <pre><code>import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    &lt;ngx-charts-bar-vertical\n      [view]=\"[700, 400]\"\n      [scheme]=\"colorScheme\"\n      [results]=\"single\"\n      [gradient]=\"gradient\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\"&gt;\n    &lt;/ngx-charts-bar-vertical&gt;\n  `\n})\nexport class AppComponent {\n  single = [\n    {\n      \"name\": \"Germany\",\n      \"value\": 8940000\n    },\n    {\n      \"name\": \"USA\",\n      \"value\": 5000000\n    }\n  ];\n\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'Population';\n  colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html","title":"Formularios en Angular","text":""},{"location":"Moduls/DWEC/angular/formulariosangular.html#formularios-en-angular","title":"Formularios en Angular","text":"<p>Los formularios son una parte fundamental de cualquier aplicaci\u00f3n web, y Angular ofrece dos enfoques principales para manejarlos: formularios reactivos y formularios basados en plantillas.</p> Caracter\u00edstica Formularios Reactivos Formularios Basados en Plantillas Configuraci\u00f3n del modelo de formulario Expl\u00edcita, creada en la clase del componente Impl\u00edcita, creada por directivas Modelo de datos Estructurado e inmutable No estructurado y mutable Flujo de datos Sincr\u00f3nico Asincr\u00f3nico Validaci\u00f3n del formulario Funciones Directivas"},{"location":"Moduls/DWEC/angular/formulariosangular.html#formularios-de-plantilla-en-angular","title":"Formularios de Plantilla en Angular","text":"<p>Usaremos los formularios de plantilla para aquellos que sean muy simples y no requieran una validaci\u00f3n o manejo de los datos sofisticados. </p>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#configuracion-de-formularios-basados-en-plantillas","title":"Configuraci\u00f3n de Formularios Basados en Plantillas","text":"<p>Para empezar a trabajar con formularios basados en plantillas, necesitamos importar el m\u00f3dulo <code>FormsModule</code> en nuestro componente:</p> <pre><code>import { FormsModule } from '@angular/forms';\n\n...\n  imports: [\n    FormsModule,\n    // otros m\u00f3dulos\n  ],\n...\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#uso-de-ngmodel-y-validadores-html5","title":"Uso de ngModel y Validadores HTML5","text":"<p>Los formularios basados en plantillas en Angular permiten utilizar validadores HTML5 directamente en los elementos <code>input</code>. Estos validadores aplican autom\u00e1ticamente clases de estilo dependiendo del estado del formulario.</p> <pre><code>&lt;input\n  type=\"text\"\n  class=\"form-control\"\n  [(ngModel)]=\"product.description\"\n  minlength=\"5\"\n  maxlength=\"600\"\n  required\n/&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#modificar-estilos-al-validar","title":"Modificar Estilos al Validar","text":"<p>Podemos cambiar los estilos de los elementos del formulario en funci\u00f3n de su estado de validaci\u00f3n utilizando clases CSS personalizadas y la referencia a <code>ngModel</code>.</p> <pre><code>&lt;input\n  type=\"text\"\n  name=\"description\"\n  class=\"form-control\"\n  [(ngModel)]=\"product.description\"\n  minlength=\"5\"\n  maxlength=\"600\"\n  required\n  #descriptionModel=\"ngModel\"\n  [ngClass]=\"{\n    'is-valid': descriptionModel.touched &amp;&amp; descriptionModel.valid,\n    'is-invalid': descriptionModel.touched &amp;&amp; !descriptionModel.valid\n  }\"\n/&gt;\n&lt;div&gt;\n  &lt;div&gt;{{ product | json }}&lt;/div&gt;\n  &lt;div&gt;Dirty: {{ descriptionModel.dirty }}&lt;/div&gt;\n  &lt;div&gt;Valid: {{ descriptionModel.valid }}&lt;/div&gt;\n  &lt;div&gt;Value: {{ descriptionModel.value }}&lt;/div&gt;\n  &lt;div&gt;Errors: {{ descriptionModel.errors | json }}&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#manipular-la-entrada-del-usuario-en-tiempo-real","title":"Manipular la Entrada del Usuario en Tiempo Real","text":"<p>Podemos separar la vinculaci\u00f3n del modelo y el evento <code>ngModelChange</code> para manipular la entrada del usuario en tiempo real.</p> <pre><code>&lt;input\n  type=\"text\"\n  class=\"form-control\"\n  [ngModel]=\"product.description\"\n  (ngModelChange)=\"product.description = $event.toUpperCase()\"\n/&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#ngform-y-directiva-novalidate","title":"ngForm y Directiva noValidate","text":"<p>Por defecto, todos los formularios en Angular tienen la directiva <code>ngForm</code>. Podemos hacer una referencia a esta directiva para observar las propiedades generales del formulario. Es recomendable usar la directiva <code>novalidate</code> para desactivar la validaci\u00f3n del navegador y permitir que Angular gestione la validaci\u00f3n.</p> <pre><code>&lt;form #productForm=\"ngForm\" novalidate&gt;\n  &lt;input type=\"text\" name=\"description\" ... /&gt;\n&lt;/form&gt;\n&lt;div&gt;\n  &lt;div&gt;Touched: {{ productForm.touched }}&lt;/div&gt;\n  &lt;div&gt;Valid: {{ productForm.valid }}&lt;/div&gt;\n  &lt;div&gt;Value: {{ productForm.value | json }}&lt;/div&gt;\n  &lt;div&gt;Descripci\u00f3n: {{productForm.control.get('description').value | json}}&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#mostrar-los-errores-de-validacion","title":"Mostrar los Errores de Validaci\u00f3n","text":"<p>Podemos combinar estilos de Bootstrap, validaci\u00f3n HTML5, <code>ngIf</code> y referencias a <code>ngModel</code> para mostrar mensajes de error de validaci\u00f3n.</p> <pre><code>&lt;form #productForm=\"ngForm\" novalidate&gt;\n  &lt;input\n    type=\"text\"\n    name=\"description\"\n    class=\"form-control\"\n    [(ngModel)]=\"product.description\"\n    minlength=\"5\"\n    maxlength=\"600\"\n    required\n    #descriptionModel=\"ngModel\"\n    [ngClass]=\"{\n      'is-valid': descriptionModel.touched &amp;&amp; descriptionModel.valid,\n      'is-invalid': descriptionModel.touched &amp;&amp; !descriptionModel.valid\n    }\"\n  /&gt;\n  &lt;div *ngIf=\"descriptionModel.touched &amp;&amp; descriptionModel.invalid\" class=\"alert alert-danger\"&gt;\n    Descripci\u00f3n requerida (entre 5 y 60 caracteres)\n  &lt;/div&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#creacion-de-validadores-personalizados","title":"Creaci\u00f3n de Validadores Personalizados","text":"<p>Angular permite la creaci\u00f3n de validadores personalizados mediante directivas. Estos validadores se registran como validadores de Angular utilizando el proveedor <code>NG_VALIDATORS</code>.</p> <pre><code>import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appMinPrice]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: MinPriceDirective, multi: true }]\n})\nexport class MinPriceDirective implements Validator {\n  @Input('appMinPrice') minPrice: number;\n\n  constructor() { }\n\n  validate(c: AbstractControl): { [key: string]: any } | null {\n    if (this.minPrice &amp;&amp; c.value) {\n      if (this.minPrice &gt; c.value) {\n        return { minPrice: true };\n      }\n    }\n    return null;\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#enviar-el-formulario","title":"Enviar el Formulario","text":"<p>Podemos enviar el formulario y realizar validaciones adicionales antes de enviarlo. Adem\u00e1s, podemos desactivar el bot\u00f3n de env\u00edo hasta que el formulario sea v\u00e1lido.</p> <pre><code>&lt;form #productForm=\"ngForm\" (ngSubmit)=\"editar(productForm)\" novalidate&gt;\n  &lt;input type=\"text\" name=\"description\" ... /&gt;\n  &lt;button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productForm.invalid\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>En el componente, obtenemos el formulario utilizando <code>@ViewChild</code> y la variable de referencia:</p> <pre><code>@ViewChild('editForm', { static: true }) editForm: NgForm;\n\neditar(productForm: NgForm) {\n  if (this.editForm.valid) {\n    this.productService.editProduct(this.product).subscribe(\n      ok =&gt; this.router.navigate(['/product/', this.product.id])\n    );\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#formularios-reactivos","title":"Formularios Reactivos","text":"<p>En Angular, los formularios reactivos representan un conjunto de t\u00e9cnicas que permiten controlar mejor el comportamiento de los formularios desde el c\u00f3digo del componente en lugar de desde la plantilla. Aunque el uso de <code>[(ngModel)]</code> en formularios basados en plantillas ya proporciona cierto comportamiento reactivo, los formularios reactivos ofrecen una manera m\u00e1s estructurada y potente de manejar formularios complejos. Es recomendable usar formularios reactivos, especialmente en formularios m\u00e1s avanzados que van m\u00e1s all\u00e1 de simples b\u00fasquedas o inicios de sesi\u00f3n.</p> <p>Para trabajar con formularios reactivos, debemos importar el m\u00f3dulo <code>ReactiveFormsModule</code></p> <pre><code>import { ReactiveFormsModule } from '@angular/forms';\n\n...\n  imports: [\n    ReactiveFormsModule,\n    // otros m\u00f3dulos\n  ],\n...\n</code></pre> <p>En los formularios reactivos, declaramos directamente en el c\u00f3digo los objetos <code>FormControl</code>, <code>FormGroup</code> y <code>FormArray</code>. A continuaci\u00f3n, se muestra un ejemplo b\u00e1sico de c\u00f3mo configurar un formulario reactivo:</p> <ol> <li>Definir el Formulario en el Componente</li> </ol> <p>En el componente, necesitamos una variable de tipo <code>FormGroup</code> inicializada en el constructor. Utilizaremos un servicio inyectado llamado <code>FormBuilder</code> para construir el formulario.</p> <pre><code>import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html'\n})\nexport class ProductFormComponent {\n  formulario: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.crearFormulario();\n  }\n\n  crearFormulario() {\n    this.formulario = this.formBuilder.group({\n      name: [''],\n      price: [0],\n      description: [''],\n    });\n  }\n\n  crear() {\n    // L\u00f3gica para crear el producto\n  }\n}\n</code></pre> <ol> <li>HTML del Formulario</li> </ol> <p>En el HTML del formulario, solo necesitamos agregar <code>[formGroup]</code> y <code>formControlName</code> en cada <code>input</code>.</p> <pre><code>&lt;form [formGroup]=\"formulario\" (ngSubmit)=\"crear()\"&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;label for=\"inputName\"&gt;Name&lt;/label&gt;\n    &lt;input type=\"text\" class=\"form-control\" id=\"inputName\" formControlName=\"name\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;label for=\"inputPrice\"&gt;Price&lt;/label&gt;\n    &lt;input type=\"number\" class=\"form-control\" id=\"inputPrice\" formControlName=\"price\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;label for=\"inputDescription\"&gt;Description&lt;/label&gt;\n    &lt;input type=\"text\" class=\"form-control\" id=\"inputDescription\" formControlName=\"description\"&gt;\n  &lt;/div&gt;\n  &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#validaciones-sincronas","title":"Validaciones S\u00edncronas","text":"<p>En los formularios reactivos, las validaciones son m\u00e1s sencillas y se pueden declarar directamente en el c\u00f3digo del componente usando <code>Validators</code>.</p> <pre><code>import { Validators } from '@angular/forms';\n\ncrearFormulario() {\n  this.formulario = this.formBuilder.group({\n    name: ['', [Validators.required, Validators.minLength(5), Validators.pattern('.*[a-zA-Z].*')]],\n    price: [0, Validators.min(0.01)],\n    description: [''],\n  });\n}\n\nget nameNotValid() {\n  return this.formulario.get('name').invalid &amp;&amp; this.formulario.get('name').touched;\n}\n</code></pre> <p>Para aplicar las validaciones visualmente en el HTML, podemos utilizar getters:</p> <pre><code>&lt;input type=\"text\" class=\"form-control\" id=\"inputName\" formControlName=\"name\" \n  [ngClass]=\"nameNotValid ? 'is-invalid' : 'is-valid'\"&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#creacion-de-validadores-personalizados_1","title":"Creaci\u00f3n de Validadores Personalizados","text":"<p>Los validadores personalizados en formularios reactivos son funciones que devuelven una <code>ValidatorFn</code>. Aqu\u00ed mostramos c\u00f3mo crear un validador personalizado para fechas m\u00ednimas:</p> <pre><code>import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nfunction minDateValidator(minInputDate: string): ValidatorFn {\n  return (c: AbstractControl): { [key: string]: any } | null =&gt; {\n    if (c.value) {\n      const minDate = new Date(minInputDate);\n      const inputDate = new Date(c.value);\n      return minDate &lt;= inputDate ? null : { 'minDate': minDate.toLocaleDateString() };\n    }\n    return null;\n  };\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#validacion-de-campos-cruzados","title":"Validaci\u00f3n de Campos Cruzados","text":"<p>Podemos crear validadores personalizados para evaluar un campo en funci\u00f3n de otros campos en el formulario. Aqu\u00ed un ejemplo para validar que dos campos de contrase\u00f1a coincidan:</p> <pre><code>this.registerForm = this.formBuilder.group({\n  password: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10)]],\n  confirm_password: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10)]]\n}, {\n  validators: passwordValidator\n});\n\nconst passwordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null =&gt; {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirm_password');\n  return password &amp;&amp; confirmPassword &amp;&amp; password.value === confirmPassword.value ? null : { passwordValidator: true };\n};\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#agrupar-campos","title":"Agrupar Campos","text":"<p>Podemos agrupar campos en un <code>FormGroup</code> dentro de otro <code>FormGroup</code>:</p> <pre><code>this.formulario = this.formBuilder.group({\n  name: ['', [Validators.required, Validators.minLength(5), Validators.pattern('.*[a-zA-Z].*')]],\n  price: [0, Validators.min(0.01)],\n  description: [''],\n  address: this.formBuilder.group({\n    street: [''],\n    city: ['']\n  })\n});\n</code></pre> <p>Y en el HTML:</p> <pre><code>&lt;div class=\"form-group row mb-3\" formGroupName=\"address\"&gt;\n  &lt;label for=\"inputStreet\" class=\"col-sm-2 col-form-label\"&gt;Street&lt;/label&gt;\n  &lt;div class=\"form-row col\"&gt;\n    &lt;div class=\"col\"&gt;\n      &lt;input class=\"form-control\" id=\"inputStreet\" placeholder=\"Street\" formControlName=\"street\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col\"&gt;\n      &lt;input class=\"form-control\" id=\"inputCity\" placeholder=\"City\" formControlName=\"city\"&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#cargar-datos-en-el-formulario","title":"Cargar Datos en el Formulario","text":"<p>Si estamos trabajando en un formulario de edici\u00f3n, podemos cargar los valores en los controles de formulario utilizando <code>setValue()</code>, <code>patchValue()</code> o <code>reset()</code>.</p> <pre><code>this.formulario.setValue(this.product);  // Necesita todos los campos\n\n// Para resetear con valores por defecto\nthis.formulario.reset({\n  name: 'Default Name',\n  price: 0,\n  description: 'Default Description'\n});\n\n// Para actualizar solo algunos campos\nthis.formulario.patchValue({\n  name: 'Updated Name'\n});\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#deteccion-de-cambios","title":"Detecci\u00f3n de Cambios","text":"<p>Los <code>FormGroup</code> y <code>FormControl</code> contienen un Observable llamado <code>valueChanges</code> que emite el valor actual del control cada vez que cambia. Podemos suscribirnos a este Observable para realizar acciones en respuesta a los cambios.</p> <pre><code>export class AppComponent implements OnInit {\n  formulario: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      notifications: [false]\n    });\n\n    this.formulario.get('notifications').valueChanges\n      .subscribe(value =&gt; this.updateNotificationMethod(value));\n  }\n\n  updateNotificationMethod(value: boolean) {\n    // L\u00f3gica para manejar cambios en las notificaciones\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#formularios-dinamicos","title":"Formularios Din\u00e1micos","text":"<p>Los <code>FormArray</code> permiten crear formularios din\u00e1micos donde los controles pueden a\u00f1adirse o eliminarse en tiempo de ejecuci\u00f3n.</p> <pre><code>this.formulario = this.formBuilder.group({\n  production: this.formBuilder.array([this.getProductionControl()])\n});\n\ngetProductionControl(): FormControl {\n  const control = this.formBuilder.control(0);\n  control.setValidators(Validators.min(100));\n  return control;\n}\n\nget productionArray(): FormArray {\n  return &lt;FormArray&gt;this.formulario.get('production');\n}\n\naddProduction() {\n  this.productionArray.push(this.getProductionControl());\n}\n\ndelProduction(index: number) {\n  this.productionArray.removeAt(index);\n}\n</code></pre> <p>Y en el HTML:</p> <pre><code>&lt;div class=\"row row-cols-6 g-3\" formArrayName=\"production\"&gt;\n  &lt;div class=\"col\" *ngFor=\"let prod of productionArray.controls; let i=index\"&gt;\n    &lt;input type=\"number\" class=\"form-control col\" [formControlName]=\"i\" placeholder=\"Production {{i}}\" \n      [ngClass]=\"{\n        'is-valid': productionArray.controls[i].valid &amp;&amp; productionArray.controls[i].touched,\n        'is-invalid': productionArray.controls[i].invalid &amp;&amp; productionArray.controls[i].touched\n      }\"&gt;\n    &lt;button type=\"button\" class=\"col btn btn-outline-danger\" (click)=\"delProduction(i)\"&gt;\ud83d\uddd1&lt;/button&gt;\n  &lt;/div&gt;\n  &lt;button type=\"button\" class=\"col btn btn-primary\" (click)=\"addProduction()\"&gt;Add Production&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html","title":"Comunicaci\u00f3n con el servidor en Angular","text":""},{"location":"Moduls/DWEC/angular/httpangular.html#comunicacion-con-el-servidor-en-angular","title":"Comunicaci\u00f3n con el servidor en Angular","text":""},{"location":"Moduls/DWEC/angular/httpangular.html#servicios-en-angular","title":"Servicios en Angular","text":"<p>En Angular, los servicios son componentes fundamentales que proporcionan datos y funcionalidades reutilizables a lo largo de la aplicaci\u00f3n. Generalmente, los servicios manejan operaciones CRUD (Create, Read, Update, Delete) y permiten mantener la l\u00f3gica de negocio y la gesti\u00f3n de datos de forma centralizada y persistente.</p> <ul> <li>Provisi\u00f3n de Informaci\u00f3n: Los servicios proporcionan datos a los componentes que los soliciten.</li> <li>Operaciones CRUD: Realizan operaciones b\u00e1sicas de creaci\u00f3n, lectura, actualizaci\u00f3n y eliminaci\u00f3n.</li> <li>Persistencia de Datos: Mantienen los datos de manera persistente a trav\u00e9s de diferentes componentes.</li> <li>Reutilizables: Son reutilizables en toda la aplicaci\u00f3n, promoviendo un c\u00f3digo limpio y modular.</li> </ul>"},{"location":"Moduls/DWEC/angular/httpangular.html#decorador-injectable","title":"Decorador @Injectable","text":"<p>Las clases de servicio en Angular est\u00e1n decoradas con <code>@Injectable()</code>. Este decorador indica al inyector de dependencias de Angular que debe proporcionar una instancia de la clase cuando sea necesario. Aqu\u00ed hay un ejemplo de una clase de servicio:</p> <pre><code>import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'  // Inicia que no hace falta que est\u00e9 en providers\n})\nexport class ProductService {\n  // M\u00e9todos y l\u00f3gica del servicio\n}\n</code></pre> <p>El decorador <code>@Injectable</code> asegura que Angular gestione la instancia del servicio como un Singleton, lo que significa que se crea una \u00fanica instancia del servicio y se comparte entre todos los componentes que lo requieran.</p> <p>Si el servicio se declara con <code>providedIn: 'root'</code>, no es necesario agregarlo a <code>providers</code> porque Angular se encargar\u00e1 de su inyecci\u00f3n autom\u00e1ticamente en toda la aplicaci\u00f3n.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#inyeccion-de-dependencias","title":"Inyecci\u00f3n de Dependencias","text":"<p>En Angular, la inyecci\u00f3n de dependencias (DI) es una t\u00e9cnica poderosa que permite a los componentes solicitar servicios de manera eficiente. En lugar de crear instancias de servicios con <code>new</code>, Angular maneja la creaci\u00f3n y provisi\u00f3n de servicios mediante el constructor:</p> <pre><code>import { Component } from '@angular/core';\nimport { ProductService } from './product.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html'\n})\nexport class ProductComponent {\n  constructor(private productService: ProductService) { }\n}\n</code></pre> <p>Este enfoque hace que el c\u00f3digo sea m\u00e1s legible y f\u00e1cil de mantener. Adem\u00e1s, permite que Angular gestione la creaci\u00f3n de servicios como Singletons, asegurando que todos los componentes utilicen la misma instancia del servicio.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#httpclientmodule","title":"HttpClientModule","text":"<p>Los servicios en Angular a menudo obtienen datos de un servidor a trav\u00e9s de HTTP. Para hacer esto, se debe importar <code>HttpClientModule</code>:</p> <pre><code>import { HttpClient, HttpClientModule } from '@angular/common/http';\n....\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#servicios-como-clientes-http","title":"Servicios como Clientes HTTP","text":"<p>Los servicios pueden utilizar <code>HttpClient</code> para realizar solicitudes HTTP. Esto se logra mediante la inyecci\u00f3n de dependencias. Aqu\u00ed hay un ejemplo de un servicio que obtiene productos de un servidor:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Product } from './product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private productURL = 'https://api.example.com/products';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable&lt;Product[]&gt; {\n    return this.http.get&lt;{products: Product[]}&gt;(this.productURL).pipe(\n      map(response =&gt; response.products)\n    );\n  }\n}\n</code></pre> <p>En este ejemplo, <code>getProducts</code> realiza una solicitud HTTP GET para obtener una lista de productos. Utiliza <code>map</code> de RxJS para transformar la respuesta antes de devolverla como un <code>Observable</code>.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#envio-de-datos-con-post","title":"Env\u00edo de Datos con POST","text":"<p>Para enviar datos al servidor, se utiliza el m\u00e9todo <code>post</code> de <code>HttpClient</code>. Aqu\u00ed se muestra c\u00f3mo hacerlo:</p> <pre><code>import { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loginURL = 'https://api.example.com/login';\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials: {username: string, password: string}): Observable&lt;{token: string}&gt; {\n    return this.http.post&lt;{token: string}&gt;(this.loginURL, JSON.stringify(credentials), this.httpOptions);\n  }\n}\n</code></pre> <p>En este ejemplo, <code>login</code> env\u00eda credenciales de usuario al servidor utilizando una solicitud HTTP POST. Se configuran las cabeceras HTTP para especificar que el contenido es JSON.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#datos-asincronos","title":"Datos as\u00edncronos","text":"<p>En Angular, el manejo de datos as\u00edncronos es una habilidad crucial para desarrollar aplicaciones web modernas y eficientes. Angular utiliza la librer\u00eda RxJS para implementar una versi\u00f3n avanzada de manejo de datos as\u00edncronos conocida como Observables, que ofrece capacidades m\u00e1s robustas en comparaci\u00f3n con las Promesas tradicionales de JavaScript.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#promesas-vs-observables","title":"Promesas vs. Observables","text":"<p>Aunque se puede trabajar con promesas para obtener datos, Angular utiliza por defecto los Observables de RxJS debido a sus ventajas:</p> <ul> <li>Valores M\u00faltiples: Mientras que una promesa retorna un solo valor o un error, un Observable puede emitir m\u00faltiples valores a lo largo del tiempo.</li> <li>Lazy Loading: Una promesa comienza su ejecuci\u00f3n en el momento de su creaci\u00f3n, mientras que un Observable s\u00f3lo empieza a emitir valores cuando alguien se suscribe a \u00e9l.</li> <li>Cancelaci\u00f3n: Los observables pueden ser cancelados mediante la cancelaci\u00f3n de las suscripciones, lo que permite un control m\u00e1s fino sobre el flujo de datos.</li> <li>Operadores: RxJS proporciona una amplia gama de operadores como <code>map</code>, <code>filter</code> y <code>reduce</code> que permiten manipular f\u00e1cilmente los datos emitidos por los observables.</li> </ul>"},{"location":"Moduls/DWEC/angular/httpangular.html#uso-de-operadores-en-observables","title":"Uso de Operadores en Observables","text":"<p>Los operadores en RxJS son funciones que permiten transformar, filtrar y combinar flujos de datos de observables. Aqu\u00ed hay un ejemplo de c\u00f3mo se utilizan los operadores <code>map</code> y <code>filter</code>:</p> <ul> <li><code>map</code>: Manipula los datos y los retorna.</li> <li><code>filter</code>: Deja pasar s\u00f3lo los datos que cumplen con una condici\u00f3n espec\u00edfica.</li> </ul> <p>Estos operadores se aplican como par\u00e1metros del m\u00e9todo <code>pipe</code> de la clase <code>Observable</code>.</p> <pre><code>...\nexport class ProductService {\n  private productURL = 'https://api.example.com/products';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable&lt;Product[]&gt; {\n    return this.http.get&lt;{products: Product[]}&gt;(this.productURL).pipe(\n      map(response =&gt; response.products),\n      filter(product =&gt; product.price &gt; 20)\n    );\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#procesamiento-de-respuestas-de-observables","title":"Procesamiento de Respuestas de Observables","text":"<p>Un observable puede tener m\u00faltiples suscriptores y s\u00f3lo comienza a emitir datos cuando alguien se suscribe a \u00e9l. El m\u00e9todo <code>subscribe()</code> acepta tres funciones como par\u00e1metros:</p> <ol> <li>Funci\u00f3n de \u00e9xito: Se ejecuta cuando el observable emite un valor.</li> <li>Funci\u00f3n de error (opcional): Se ejecuta si el observable o alguno de sus operadores falla.</li> <li>Funci\u00f3n de finalizaci\u00f3n (opcional): Se ejecuta siempre al finalizar la emisi\u00f3n de datos.</li> </ol> <pre><code>products: Product[] = [];\n\nngOnInit(): void {\n  this.productsService.getProducts().subscribe(\n    prods =&gt; this.products = prods, // Funci\u00f3n de \u00e9xito\n    error =&gt; console.error(error),  // Funci\u00f3n de error (opcional)\n    () =&gt; console.log('Products loaded') // Funci\u00f3n de finalizaci\u00f3n (opcional)\n  );\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#mostrar-datos-asincronos","title":"Mostrar Datos As\u00edncronos","text":"<p>La carga de datos as\u00edncronos puede retrasarse, lo que puede causar errores si Angular intenta acceder a datos que a\u00fan no est\u00e1n disponibles. Para manejar esto, se pueden utilizar varias t\u00e9cnicas:</p> <ul> <li>Objetos Vac\u00edos: Crear un objeto con datos vac\u00edos para evitar errores.</li> <li>Directiva <code>@if</code>: Mostrar los datos s\u00f3lo cuando est\u00e9n completamente cargados.</li> <li>Operador <code>?</code>: Asegurar que los datos no se accedan hasta que tengan un valor v\u00e1lido.</li> </ul>"},{"location":"Moduls/DWEC/angular/httpangular.html#signals","title":"Signals","text":"<p>Las se\u00f1ales (<code>signals</code>) son una opci\u00f3n m\u00e1s simple y menos potente que los observables para tareas reactivas b\u00e1sicas. Desde Angular 17, se consideran una buena opci\u00f3n para tareas reactivas simples.</p> <pre><code>constructor(){\n  effect(()=&gt;{console.log(`Valor de num: ${this.num()}`); });\n}\nnum = signal(0);\nupdateNum(){ this.num.update((n: number) =&gt; n + 1); }\nngOnInit(): void { this.num.set(1); }\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#resolver","title":"Resolver","text":"<p>A veces es necesario obtener datos del servidor antes de acceder a una ruta espec\u00edfica. Para esto, se utiliza un tipo especial de servicio llamado Resolver. </p> <p>Un Resolver es un servicio que implementa el m\u00e9todo <code>resolve</code>, el cual obtiene los datos antes de que la ruta se cargue:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ProductService } from './product.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Product } from './product.model';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductResolver implements Resolve&lt;Product&gt; {\n  constructor(private productsService: ProductService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Product | Observable&lt;Product&gt; | Promise&lt;Product&gt; {\n    return this.productsService.getProduct(route.params.id).pipe(\n      catchError(error =&gt; {\n        this.router.navigate(['/products']);\n        return of(null);\n      })\n    );\n  }\n}\n</code></pre> <p>Este resolver utiliza el servicio real para obtener los productos y maneja cualquier error redirigiendo al usuario a una ruta segura.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#configuracion-de-rutas-con-resolver","title":"Configuraci\u00f3n de Rutas con Resolver","text":"<p>Las rutas pueden configurarse para utilizar un resolver, asegurando que los datos necesarios est\u00e9n disponibles antes de cargar el componente:</p> <pre><code>const routes: Routes = [\n  { path: 'product/edit/:id',\n    canActivate: [ProductDetailGuard],\n    canDeactivate: [LeavePageGuard],\n    resolve: { product: ProductResolver },\n    component: ProductEditComponent\n  },\n  // Otras rutas\n];\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#autenticacion-con-angular","title":"Autenticaci\u00f3n con Angular","text":"<p>La autenticaci\u00f3n es un aspecto crucial de las aplicaciones web modernas. En Angular, la autenticaci\u00f3n puede ser manejada de varias formas, dependiendo de si la aplicaci\u00f3n est\u00e1 alojada en el mismo servidor que el backend o si se utiliza un servicio externo. En este cap\u00edtulo, exploraremos diferentes t\u00e9cnicas de autenticaci\u00f3n y autorizaci\u00f3n en Angular, incluyendo el uso de cookies, tokens, interceptores, y guards.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#cookies-y-tokens","title":"Cookies y Tokens","text":"<p>Si la aplicaci\u00f3n web y el servidor est\u00e1n alojados en el mismo dominio, se pueden utilizar cookies para la autenticaci\u00f3n. Sin embargo, cuando se utiliza un servicio externo, es com\u00fan utilizar tokens de autenticaci\u00f3n, como los JSON Web Tokens (JWT).</p> <p>Cookies: - Son enviadas autom\u00e1ticamente por el navegador en cada petici\u00f3n al servidor. - Simplifican la gesti\u00f3n de sesiones cuando el frontend y el backend comparten el mismo dominio.</p> <p>Tokens: - Deben ser enviados manualmente en cada petici\u00f3n. - Se almacenan en <code>localStorage</code> o <code>sessionStorage</code>. - Proporcionan una mayor flexibilidad, especialmente cuando el frontend y el backend est\u00e1n en dominios diferentes.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#interceptores","title":"Interceptores","text":"<p>Los interceptores en Angular permiten interceptar y manipular solicitudes HTTP antes de que se env\u00eden al servidor. Esto es \u00fatil para agregar tokens de autenticaci\u00f3n a cada petici\u00f3n autom\u00e1ticamente.</p> <p>Ejemplo de Interceptor de Autenticaci\u00f3n:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService {\n  intercept(req: HttpRequest&lt;any&gt;, next: HttpHandler): Observable&lt;HttpEvent&lt;any&gt;&gt; {\n    const token = localStorage.getItem('idToken'); // Token de localStorage\n    if (token) {\n      // Clonamos la petici\u00f3n y a\u00f1adimos el token\n      const authReq = req.clone({ url: req.url.concat(`?auth=${token}`) });\n      // Enviamos la petici\u00f3n con el token\n      return next.handle(authReq);\n    }\n    // Sin token, enviamos la petici\u00f3n original\n    return next.handle(req);\n  }\n}\n</code></pre> <p>Para utilizar este interceptor, se debe proporcionar en el m\u00f3dulo principal:</p> <pre><code>providers: [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptorService,\n    multi: true,\n  },\n],\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#guards","title":"Guards","text":"<p>Los guards son servicios que permiten o deniegan el acceso a ciertas rutas en una aplicaci\u00f3n Angular. El guard <code>CanActivate</code> se utiliza para proteger rutas y asegurar que solo usuarios autenticados puedan acceder a ellas.</p> <p>Ejemplo de Guard <code>CanActivate</code>:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductDetailGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable&lt;boolean | UrlTree&gt; | Promise&lt;boolean | UrlTree&gt; | boolean | UrlTree {\n    const id = route.params.id;\n    if (isNaN(id) || id &lt; 1) {\n      console.log('La ID no es v\u00e1lida');\n      return this.router.parseUrl('/catalog');\n    }\n    return true;\n  }\n}\n</code></pre> <p>Configuraci\u00f3n de la ruta con Guard:</p> <pre><code>{ path: 'product/:id', canActivate: [ProductDetailGuard], component: ProductDetailComponent },\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#variables-como-observables","title":"Variables como Observables","text":"<p>En una aplicaci\u00f3n autenticada, es importante que los componentes reaccionen a los cambios en el estado de autenticaci\u00f3n sin necesidad de recargar la p\u00e1gina. Esto se puede lograr usando <code>BehaviorSubject</code> o <code>Subject</code> para mantener y observar el estado de autenticaci\u00f3n.</p> <p>Ejemplo de Uso de <code>BehaviorSubject</code>:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loguedInfo: BehaviorSubject&lt;boolean&gt;;\n\n  constructor() {\n    this.loguedInfo = new BehaviorSubject&lt;boolean&gt;(false);\n  }\n\n  isLogued(): Observable&lt;boolean&gt; {\n    return this.loguedInfo.asObservable();\n  }\n\n  login() {\n    // L\u00f3gica de autenticaci\u00f3n\n    this.loguedInfo.next(true);\n  }\n\n  logout() {\n    // L\u00f3gica de cierre de sesi\u00f3n\n    this.loguedInfo.next(false);\n  }\n}\n</code></pre> <p>Suscripci\u00f3n al Estado de Autenticaci\u00f3n en un Componente:</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  template: `&lt;div *ngIf=\"logued\"&gt;Usuario autenticado&lt;/div&gt;`\n})\nexport class AppComponent implements OnInit {\n  logued = false;\n\n  constructor(private auth: AuthService) {}\n\n  ngOnInit(): void {\n    this.auth.isLogued().subscribe(logued =&gt; {\n      this.logued = logued;\n    });\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#integracion-de-angular-con-supabase","title":"Integraci\u00f3n de Angular con Supabase","text":"<p>Supabase es una plataforma de backend como servicio (BaaS) que ofrece una variedad de servicios para aplicaciones web y m\u00f3viles, como bases de datos en tiempo real, autenticaci\u00f3n y almacenamiento. Supabase es compatible con TypeScript, lo que facilita su integraci\u00f3n con aplicaciones Angular. En este cap\u00edtulo, veremos c\u00f3mo configurar y utilizar Supabase en una aplicaci\u00f3n Angular.</p> <p>Para comenzar, necesitamos instalar el SDK de Supabase utilizando npm:</p> <pre><code>npm install @supabase/supabase-js\n</code></pre> <p>Despu\u00e9s de instalar el SDK, configuramos nuestras credenciales de Supabase en el archivo <code>environment.ts</code>. Este archivo es utilizado por Angular para gestionar diferentes configuraciones de entorno, como las variables de entorno para desarrollo y producci\u00f3n.</p> <p>En <code>src/environments/environment.ts</code>, a\u00f1ade las siguientes l\u00edneas:</p> <pre><code>export const environment = {\n  production: false,\n  supabaseUrl: 'YOUR_SUPABASE_URL',\n  supabaseKey: 'YOUR_SUPABASE_KEY',\n};\n</code></pre> <p>Aseg\u00farate de reemplazar <code>'YOUR_SUPABASE_URL'</code> y <code>'YOUR_SUPABASE_KEY'</code> con tus credenciales de Supabase.</p> <p>A continuaci\u00f3n, creamos un servicio en Angular para inicializar y gestionar Supabase. Este servicio ser\u00e1 responsable de la configuraci\u00f3n inicial y de proporcionar m\u00e9todos para interactuar con la base de datos.</p> <p>Crea un nuevo servicio utilizando Angular CLI:</p> <pre><code>ng generate service supabase\n</code></pre> <p>En el archivo <code>supabase.service.ts</code>, inicializa Supabase de la siguiente manera:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n\n  // M\u00e9todos para interactuar con Supabase\n  async getData(table: string) {\n    const { data, error } = await this.supabase.from(table).select('*');\n    if (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n    return data;\n  }\n\n  async insertData(table: string, row: any) {\n    const { data, error } = await this.supabase.from(table).insert(row);\n    if (error) {\n      console.error('Error inserting data:', error);\n      throw error;\n    }\n    return data;\n  }\n\n  async updateData(table: string, row: any, id: number) {\n    const { data, error } = await this.supabase.from(table).update(row).eq('id', id);\n    if (error) {\n      console.error('Error updating data:', error);\n      throw error;\n    }\n    return data;\n  }\n\n  async deleteData(table: string, id: number) {\n    const { data, error } = await this.supabase.from(table).delete().eq('id', id);\n    if (error) {\n      console.error('Error deleting data:', error);\n      throw error;\n    }\n    return data;\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#conversion-de-promesas-a-observables","title":"Conversi\u00f3n de Promesas a Observables","text":"<p>El SDK de Supabase funciona con promesas, pero en Angular es com\u00fan trabajar con Observables para aprovechar las capacidades de programaci\u00f3n reactiva de RxJS. Podemos convertir promesas a observables utilizando el operador <code>from</code> de RxJS.</p> <pre><code>import { from, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n\n  getDataObservable(table: string): Observable&lt;any&gt; {\n    return from(this.getData(table));\n  }\n\n  private async getData(table: string) {\n    const { data, error } = await this.supabase.from(table).select('*');\n    if (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n    return data;\n  }\n}\n</code></pre> <p>En el componente, podemos suscribirnos al Observable para obtener los datos:</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { SupabaseService } from '../supabase.service';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css'],\n})\nexport class DataComponent implements OnInit {\n  data: any[] = [];\n\n  constructor(private supabaseService: SupabaseService) {}\n\n  ngOnInit() {\n    this.supabaseService.getDataObservable('your_table_name').subscribe(\n      (data) =&gt; {\n        this.data = data;\n      },\n      (error) =&gt; {\n        console.error('Error loading data:', error);\n      }\n    );\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/rutasangular.html","title":"Rutasangular","text":""},{"location":"Moduls/DWEC/angular/rutasangular.html#rutas-en-angular","title":"Rutas en Angular","text":"<p>Angular es com\u00fanmente utilizado para desarrollar Single Page Applications (SPA). A pesar de ser una SPA, la aplicaci\u00f3n debe comportarse de manera similar a los sitios web tradicionales en t\u00e9rminos de URLs (Uniform Resource Identifiers). Esto implica que necesitamos poder referenciar externamente las diferentes partes de la aplicaci\u00f3n, tener la capacidad de navegar hacia atr\u00e1s y adelante en el historial del navegador y manejar rutas virtuales adecuadamente.</p> <p>Las rutas en Angular se definen en el archivo <code>app-routing.module.ts</code>. Las rutas son objetos que contienen el camino (<code>path</code>) y el componente al que hacen referencia. Las p\u00e1ginas en una SPA de Angular son representadas por componentes, y el enrutador carga las rutas dentro de un <code>&lt;router-outlet&gt;</code> en la plantilla principal de la aplicaci\u00f3n.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#ejemplo-basico-de-rutas","title":"Ejemplo B\u00e1sico de Rutas","text":"<p>El siguiente es un ejemplo de c\u00f3mo configurar rutas b\u00e1sicas en Angular:</p> <pre><code>import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { PlanetListComponent } from './planets/planet-list/planet-list.component';\nimport { SunComponent } from './sun/sun.component';\nimport { PlanetDetailComponent } from './planets/planet-detail/planet-detail.component';\nimport { PlanetEditComponent } from './planets/planet-edit/planet-edit.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PlanetResolveService } from './planets/planet-resolve.service';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'planets', canActivate: [AuthGuard], component: PlanetListComponent },\n  { path: 'suns', canActivate: [AuthGuard], component: SunComponent },\n  { path: 'planet/:id', canActivate: [AuthGuard], component: PlanetDetailComponent },\n  { path: 'planet/edit/:id', canActivate: [AuthGuard], resolve: { planet: PlanetResolveService }, component: PlanetEditComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n</code></pre> <ul> <li><code>path</code>: Define el URI para la ruta.</li> <li><code>component</code>: El componente que se carga cuando se navega a esa ruta.</li> <li><code>canActivate</code>: Define guardias que protegen las rutas.</li> <li><code>resolve</code>: Permite precargar datos antes de que el componente se cargue.</li> </ul>"},{"location":"Moduls/DWEC/angular/rutasangular.html#rutas-con-hash","title":"Rutas con Hash","text":"<p>Una manera de implementar SPA sin manipular el servidor es usar una almohadilla (<code>#</code>) al principio de la ruta:</p> <pre><code>http://localhost:4200/#/home\n</code></pre> <p>Esto es m\u00e1s antiguo, pero funciona en todos los navegadores, simplifica el env\u00edo de par\u00e1metros y evita la manipulaci\u00f3n del servidor. Para que funcione, se debe agregar <code>withHashLocation()</code> al los providers del bootstrap:</p> <pre><code>bootstrapApplication(AppComponent, {\n  providers: [\n    provideRouter(routes, withHashLocation()),\n  ],\n});\n</code></pre>"},{"location":"Moduls/DWEC/angular/rutasangular.html#creacion-de-rutas","title":"Creaci\u00f3n de Rutas","text":"<ul> <li>Ruta B\u00e1sica: Define un camino y el componente que se activa.</li> </ul> <pre><code>{ path: 'home', component: HomeComponent }\n</code></pre> <ul> <li>Ruta con Guard: Protege rutas usando guardias.</li> </ul> <pre><code>{ path: 'planets', canActivate: [AuthGuard], component: PlanetListComponent }\n</code></pre> <ul> <li>Ruta con Par\u00e1metros: Permite pasar par\u00e1metros en la URL.</li> </ul> <pre><code>{ path: 'planet/:id', canActivate: [AuthGuard], component: PlanetDetailComponent }\n</code></pre> <ul> <li>Ruta con Resolve: Precarga datos necesarios para el componente.</li> </ul> <pre><code>{ path: 'planet/edit/:id', canActivate: [AuthGuard], resolve: { planet: PlanetResolveService }, component: PlanetEditComponent }\n</code></pre> <ul> <li>Ruta por Defecto: Redirige a una ruta espec\u00edfica si la ruta no existe.</li> </ul> <pre><code>{ path: '**', pathMatch: 'full', redirectTo: 'home' }\n</code></pre>"},{"location":"Moduls/DWEC/angular/rutasangular.html#enlaces-de-navegacion","title":"Enlaces de Navegaci\u00f3n","text":"<p>Para crear enlaces de navegaci\u00f3n en Angular, se utiliza <code>[routerLink]</code> en lugar de <code>href</code>:</p> <pre><code>&lt;a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['home']\"&gt;Home&lt;/a&gt;\n</code></pre> <p>Si la ruta tiene m\u00e1s niveles, se usar\u00e1n elementos adicionales en el array.</p> <pre><code>&lt;a class=\"nav-link\" aria-current=\"page\" [routerLink]=\"['home']\" [routerLinkActive]=\"['active']\"&gt;Home&lt;/a&gt;\n</code></pre> <p>El atributo <code>routerLinkActive</code> puede estar sin corchetes y aplicarse al elemento padre del enlace si es necesario.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#navegacion-por-codigo","title":"Navegaci\u00f3n por C\u00f3digo","text":"<p>Para navegar por c\u00f3digo en Angular, se importa el <code>Router</code> y se inyecta en el constructor:</p> <pre><code>import { Router } from '@angular/router';\n\nconstructor(private router: Router) {}\n\ndetailsProduct(id: number): void {\n  this.router.navigate(['/product', id]);\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/rutasangular.html#obtener-parametros-de-las-rutas","title":"Obtener Par\u00e1metros de las Rutas","text":"<p>Las rutas pueden contener par\u00e1metros, como un <code>id</code>. Para obtener estos par\u00e1metros, se utiliza <code>ActivatedRoute</code>:</p> <pre><code>import { ActivatedRoute } from '@angular/router';\n\nconstructor(private activatedRoute: ActivatedRoute) { }\n\nngOnInit(): void {\n  this.activatedRoute.params.subscribe(params =&gt; {\n    console.log(params);\n  });\n}\n</code></pre> <p>Los par\u00e1metros (<code>params</code>) son un observable al que nos suscribimos para recibir los valores pasados en la URL.</p> <p>A partir de Angular 16, se pueden configurar los par\u00e1metros del router para aceptarlos mediante <code>@Input()</code> usando <code>withComponentInputBinding()</code>.</p> <p></p><pre><code>bootstrapApplication(App, {\n  providers: [\n    provideRouter(routes, \n        //... other features\n        withComponentInputBinding() // &lt;-- enable this feature\n    )\n  ],\n});\n</code></pre> En el componente:<p></p> <pre><code> @Input() query?: string; // Normal\n @Input('q') queryParam?: string; // Renombrar el par\u00e1metro\n</code></pre> <p>En el router:  </p><pre><code>{ path: 'planet/:query', canActivate: [AuthGuard], component: PlanetDetailComponent }\n</code></pre><p></p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#transiciones-en-angular-2024","title":"Transiciones en Angular (2024)","text":"<p>Las transiciones en Angular permiten crear animaciones fluidas entre diferentes estados de la aplicaci\u00f3n. En la actualidad, la funcionalidad completa de estas transiciones solo est\u00e1 totalmente disponible en Google Chrome. A continuaci\u00f3n, se detalla c\u00f3mo implementar y personalizar las transiciones en Angular.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#definicion-de-animaciones-en-css","title":"Definici\u00f3n de Animaciones en CSS","text":"<p>Primero, definimos las animaciones CSS utilizando <code>@keyframes</code>. Esto permite rotar los elementos durante las transiciones.</p> <pre><code>@keyframes rotate-out {\n  to {\n    transform: rotate(90deg);\n  }\n}\n\n@keyframes rotate-in {\n  from {\n    transform: rotate(-90deg);\n  }\n}\n\n::view-transition-old(count),\n::view-transition-new(count) {\n  animation-duration: 200ms;\n  animation-name: -ua-view-transition-fade-in, rotate-in;\n}\n\n::view-transition-old(count) {\n  animation-name: -ua-view-transition-fade-out, rotate-out;\n}\n</code></pre> <p>En este ejemplo: - <code>rotate-out</code>: rota un elemento 90 grados. - <code>rotate-in</code>: rota un elemento desde -90 grados hasta su posici\u00f3n original. - <code>::view-transition-old(count)</code> y <code>::view-transition-new(count)</code>: aplican las animaciones durante la transici\u00f3n.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#configuracion-de-rutas-en-angular","title":"Configuraci\u00f3n de Rutas en Angular","text":"<p>Para habilitar las transiciones, configuramos las rutas en <code>app-routing.module.ts</code> utilizando <code>provideRouter</code> y a\u00f1adiendo <code>withViewTransitions()</code>.</p> <pre><code>providers: [\n  provideRouter(\n    [\n      { path: '', pathMatch: 'full', redirectTo: '/0' },\n      { path: ':count', component: Counter },\n    ],\n    withViewTransitions(),\n    withComponentInputBinding()\n  ),\n],\n</code></pre> <ul> <li><code>provideRouter</code>: Define las rutas de la aplicaci\u00f3n.</li> <li><code>withViewTransitions()</code>: Habilita las transiciones de vista.</li> <li><code>withComponentInputBinding()</code>: Permite el enlace de entrada del componente.</li> </ul>"},{"location":"Moduls/DWEC/angular/rutasangular.html#personalizacion-de-transiciones","title":"Personalizaci\u00f3n de Transiciones","text":"<p>Es posible personalizar las transiciones en el archivo CSS.</p> <pre><code>::view-transition-old(count),\n::view-transition-new(count) {\n  animation-duration: 200ms;\n  animation-name: -ua-view-transition-fade-in, rotate-in;\n}\n\n::view-transition-old(count) {\n  animation-name: -ua-view-transition-fade-out, rotate-out;\n}\n</code></pre> <p>Aqu\u00ed, se definen las duraciones y los nombres de las animaciones para las transiciones de entrada y salida.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#uso-de-onviewtransitioncreated","title":"Uso de <code>onViewTransitionCreated</code>","text":"<p><code>withViewTransitions</code> acepta un objeto con la funci\u00f3n <code>onViewTransitionCreated</code> para manejar eventos de transici\u00f3n.</p> <pre><code>withViewTransitions({\n  onViewTransitionCreated: ({ transition }) =&gt; {\n    const router = inject(Router);\n    const targetUrl = router.getCurrentNavigation()!.finalUrl!;\n\n    const config = { \n      paths: 'exact', \n      matrixParams: 'exact',\n      fragment: 'ignored',\n      queryParams: 'ignored',\n    };\n\n    if (router.isActive(targetUrl, config)) {\n      transition.skipTransition();\n    }\n  },\n}),\n</code></pre> <p>En este ejemplo: - <code>onViewTransitionCreated</code>: Se invoca cuando se crea una transici\u00f3n de vista. - <code>transition.skipTransition()</code>: Cancela la animaci\u00f3n si solo cambian el fragmento o los par\u00e1metros de consulta.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html","title":"Exercicis de Programaci\u00f3 en JavaScript","text":""},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercicis-de-programacio-en-javascript","title":"Exercicis de Programaci\u00f3 en JavaScript","text":""},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#1-conceptes-basics-20-exercicis","title":"1. Conceptes B\u00e0sics (20 Exercicis)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#11-variables-tipus-de-dades-i-operadors-exercicis-1-10","title":"1.1. Variables, Tipus de Dades i Operadors (Exercicis 1-10)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-1-intercanvi-de-valors","title":"\ud83d\udcdd Exercici 1: Intercanvi de Valors","text":"<p>Defineix dues variables, <code>a = 5</code> i <code>b = 10</code>. Escriu un codi per intercanviar els seus valors sense utilitzar una variable temporal.</p> <pre><code>let a = 5;\nlet b = 10;\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>let a = 5;\nlet b = 10;\n\n[a, b] = [b, a];\n\nconsole.log(`a: ${a}, b: ${b}`); // a: 10, b: 5\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-2-conversio-de-temperatura","title":"\ud83d\udcdd Exercici 2: Conversi\u00f3 de Temperatura","text":"<p>Crea una funci\u00f3 que accepti una temperatura en Celsius (\\(C\\)) i la retorni en Fahrenheit (\\(F\\)). La f\u00f3rmula \u00e9s: \\(F = C \\times (9/5) + 32\\).</p> <pre><code>function celsiusToFahrenheit(c) {\n    // El teu codi aqu\u00ed\n}\n</code></pre> Soluci\u00f3 <pre><code>function celsiusToFahrenheit(c) {\nreturn c \\* (9 / 5) + 32;\n}\n\n\nconsole.log(celsiusToFahrenheit(25)); // 77\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-3-concatenacio-i-tipus","title":"\ud83d\udcdd Exercici 3: Concatenaci\u00f3 i Tipus","text":"<p>Declara una variable <code>nom = \"Anna\"</code> (String) i <code>edat = 28</code> (Number). Concatena-les en una frase i verifica quin \u00e9s el tipus de dada resultant.</p> <pre><code>let nom = \"Anna\";\nlet edat = 28;\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>let nom = \"Anna\";\nlet edat = 28;\n\nlet frase = nom + \" t\u00e9 \" + edat + \" anys.\";\n\nconsole.log(frase); // Anna t\u00e9 28 anys.\nconsole.log(typeof frase); // string\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-4-operador-modul","title":"\ud83d\udcdd Exercici 4: Operador M\u00f2dul","text":"<p>Determina si un n\u00famero sencer, emmagatzemat a la variable <code>num = 17</code>, \u00e9s parell o imparell utilitzant l'operador m\u00f2dul (<code>%</code>).</p> <pre><code>let num = 17;\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>let num = 17;\n\n\nlet esParell = num % 2 === 0;\n\nconsole.log(esParell ? \"Parell\" : \"Imparell\"); // Imparell\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-5-valor-absolut","title":"\ud83d\udcdd Exercici 5: Valor Absolut","text":"<p>Utilitza l'objecte <code>Math</code> per obtenir el valor absolut del n\u00famero <code>x = -42</code>.</p> <pre><code>let x = -42;\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>let x = -42;\n\n\nlet absolut = Math.abs(x);\n\nconsole.log(absolut); // 42\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#12-estructures-de-control-exercicis-6-10","title":"1.2. Estructures de Control (Exercicis 6-10)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-6-bucle-for-comptador","title":"\ud83d\udcdd Exercici 6: Bucle <code>for</code> (Comptador)","text":"<p>Utilitza un bucle <code>for</code> per imprimir a la consola tots els n\u00fameros de l'1 al 5.</p> <pre><code>// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>for (let i = 1; i &lt;= 5; i++) { console.log(i); // 1, 2, 3, 4, 5 }\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-7-condicional-if-major-dedat","title":"\ud83d\udcdd Exercici 7: Condicional <code>if</code> (Major d'Edat)","text":"<p>Escriu un codi que, donada la variable <code>edat = 16</code>, imprimeixi \"Major d'edat\" si l'edat \u00e9s 18 o m\u00e9s, o \"Menor d'edat\" en cas contrari.</p> <pre><code>let edat = 16;\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>let edat = 16;\n\n\nif (edat &gt;= 18) {\n    console.log(\"Major d'edat\");\n} else {\n    console.log(\"Menor d'edat\"); // Menor d'edat\n}\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-8-bucle-while-decreixent","title":"\ud83d\udcdd Exercici 8: Bucle <code>while</code> (Decreixent)","text":"<p>Utilitza un bucle <code>while</code> per imprimir els n\u00fameros del 3 a l'1, de forma decreixent.</p> <pre><code>// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>let i = 3; \nwhile (i &gt;= 1) { \n    console.log(i); // 3, 2, 1 \n    i--; \n}\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-9-estructura-switch-dia-de-la-setmana","title":"\ud83d\udcdd Exercici 9: Estructura <code>switch</code> (Dia de la Setmana)","text":"<p>Crea un codi que, donada la variable <code>dia = 3</code>, utilitzi un <code>switch</code> per imprimir el nom del dia de la setmana (\"Dilluns\", \"Dimarts\", etc.). Suposa que 1 \u00e9s Dilluns.</p> <pre><code>let dia = 3;\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>let dia = 3;\nlet nomDia;\n\n\nswitch (dia) {\n    case 1:\n        nomDia = \"Dilluns\";\n        break;\n    case 3:\n        nomDia = \"Dimecres\";\n        break; // Aquest s'executa\n    default:\n        nomDia = \"Altre dia\";\n}\n\nconsole.log(nomDia); // Dimecres\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-10-combinacio-de-bucle-i-condicional-multiples-de-3","title":"\ud83d\udcdd Exercici 10: Combinaci\u00f3 de Bucle i Condicional (M\u00faltiples de 3)","text":"<p>Utilitza un bucle <code>for</code> per rec\u00f3rrer els n\u00fameros de l'1 al 10. Imprimeix nom\u00e9s aquells que siguin m\u00faltiples de 3.</p> <pre><code>// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>for (let i = 1; i &lt;= 10; i++) { if (i % 3 === 0) { console.log(i); // 3, 6, 9 } }\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#2-nivell-intermedi-10-exercicis-restants","title":"2. Nivell Intermedi (10 Exercicis Restants)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#21-funcions-arrays-i-strings-exercicis-11-20","title":"2.1. Funcions, Arrays i Strings (Exercicis 11-20)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-11-funcio-fletxa-suma","title":"\ud83d\udcdd Exercici 11: Funci\u00f3 Fletxa (Suma)","text":"<p>Defineix una funci\u00f3 fletxa (<code>arrow function</code>) anomenada <code>suma</code> que accepti dos par\u00e0metres i retorni la seva suma.</p> <pre><code>// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>const suma = (a, b) =\\&gt; a + b;\n\n\nconsole.log(suma(8, 2)); // 10\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-12-funcio-anonima-i-foreach","title":"\ud83d\udcdd Exercici 12: Funci\u00f3 an\u00f2nima i <code>forEach</code>","text":"<p>Donat l'array <code>colors = [\"vermell\", \"blau\", \"verd\"]</code>, utilitza el m\u00e8tode <code>forEach</code> amb una funci\u00f3 an\u00f2nima per imprimir cada color amb el format \"Color: [nom del color]\".</p> <pre><code>const colors = [\"vermell\", \"blau\", \"verd\"];\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>const colors = [\"vermell\", \"blau\", \"verd\"];\n\n\ncolors.forEach(function(color) {\n    console.log(\"Color: \" + color);\n});\n// Color: vermell\n// Color: blau\n// Color: verd\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-13-metode-map-quadrat-dels-nombres","title":"\ud83d\udcdd Exercici 13: M\u00e8tode <code>map</code> (Quadrat dels Nombres)","text":"<p>Donat l'array <code>nombres = [2, 4, 6]</code>, utilitza el m\u00e8tode <code>map</code> per crear un nou array amb el quadrat de cada nombre.</p> <pre><code>const nombres = [2, 4, 6];\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>const nombres = [2, 4, 6];\n\n\nconst quadrats = nombres.map(n =&gt; n * n);\n\nconsole.log(quadrats); // [4, 16, 36]\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-14-metode-filter-nombres-parells","title":"\ud83d\udcdd Exercici 14: M\u00e8tode <code>filter</code> (Nombres Parells)","text":"<p>Donat l'array <code>nums = [1, 2, 3, 4, 5, 6]</code>, utilitza el m\u00e8tode <code>filter</code> per crear un nou array amb nom\u00e9s els nombres parells.</p> <pre><code>const nums = [1, 2, 3, 4, 5, 6];\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>const nums = [1, 2, 3, 4, 5, 6];\n\n\nconst parells = nums.filter(n =&gt; n % 2 === 0);\n\nconsole.log(parells); // [2, 4, 6]\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-15-metode-reduce-suma-total","title":"\ud83d\udcdd Exercici 15: M\u00e8tode <code>reduce</code> (Suma Total)","text":"<p>Donat l'array <code>preus = [10, 25, 5]</code>, utilitza el m\u00e8tode <code>reduce</code> per calcular la suma total dels preus.</p> <pre><code>const preus = [10, 25, 5];\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>const preus = [10, 25, 5];\n\n\nconst sumaTotal = preus.reduce((acumulador, preu) =&gt; acumulador + preu, 0);\n\nconsole.log(sumaTotal); // 40\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-16-manipulacio-de-strings-touppercase-i-trim","title":"\ud83d\udcdd Exercici 16: Manipulaci\u00f3 de Strings (<code>toUpperCase</code> i <code>trim</code>)","text":"<p>Donada la cadena <code>text = \"   hola m\u00f3n!   \"</code>, transforma-la a maj\u00fascules i elimina els espais en blanc del principi i del final.</p> <pre><code>let text = \"   hola m\u00f3n!   \";\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>let text = \"   hola m\u00f3n\\!   \";\n\n\nlet resultat = text.trim().toUpperCase();\n\nconsole.log(resultat); // \"HOLA M\u00d3N!\"\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-17-extraccio-de-substring-slice","title":"\ud83d\udcdd Exercici 17: Extracci\u00f3 de Substring (<code>slice</code>)","text":"<p>De la cadena <code>frase = \"JavaScript \u00e9s genial\"</code>, utilitza el m\u00e8tode <code>slice</code> per extreure i imprimir nom\u00e9s la paraula \"genial\".</p> <pre><code>let frase = \"JavaScript \u00e9s genial\";\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>let frase = \"JavaScript \u00e9s genial\";\n\n\nlet paraula = frase.slice(-6); // O frase.slice(14)\n\nconsole.log(paraula); // \"genial\"\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-18-inversio-dun-string","title":"\ud83d\udcdd Exercici 18: Inversi\u00f3 d'un String","text":"<p>Crea una funci\u00f3 que accepti un string i el retorni invertit. Pista: Combina m\u00e8todes d'Array (<code>split</code>, <code>reverse</code>, <code>join</code>).</p> <pre><code>function inverteixString(str) {\n    // El teu codi aqu\u00ed\n}\n</code></pre> Soluci\u00f3 <pre><code>function inverteixString(str) {\nreturn str.split('').reverse().join('');\n}\n\n\nconsole.log(inverteixString(\"codi\")); // \"idoc\"\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-19-objects-acces-a-propietats","title":"\ud83d\udcdd Exercici 19: Objects (Acc\u00e9s a Propietats)","text":"<p>Accedeix a la propietat <code>ciutat</code> de l'objecte <code>persona</code> utilitzant la notaci\u00f3 de claud\u00e0tors.</p> <pre><code>const persona = {\n    nom: \"Lluc\",\n    edat: 35,\n    adreca: {\n        ciutat: \"Barcelona\",\n        cp: 8001\n    }\n};\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>const persona = {\nnom: \"Lluc\",\nedat: 35,\nadreca: {\nciutat: \"Barcelona\",\ncp: 8001\n}\n};\n\n\nconst ciutat = persona[\"adreca\"][\"ciutat\"];\n\nconsole.log(ciutat); // Barcelona\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/20exercicis.html#exercici-20-desestructuracio-darray","title":"\ud83d\udcdd Exercici 20: Desestructuraci\u00f3 d'Array","text":"<p>Utilitza la desestructuraci\u00f3 d'array per assignar els valors \"Primer\" i \"Tercer\" a variables anomenades <code>p</code> i <code>t</code>, respectivament, de l'array <code>llista = [\"Primer\", \"Segon\", \"Tercer\"]</code>.</p> <pre><code>const llista = [\"Primer\", \"Segon\", \"Tercer\"];\n\n// El teu codi aqu\u00ed\n</code></pre> Soluci\u00f3 <pre><code>const llista = [\"Primer\", \"Segon\", \"Tercer\"];\n\n\nconst [p, , t] = llista;\n\nconsole.log(p); // Primer\nconsole.log(t); // Tercer\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercici_UT03_funcio_reduce.html","title":"Exercici interpretaci\u00f3 codi","text":""},{"location":"Moduls/DWEC/exercicisisolucions/Exercici_UT03_funcio_reduce.html#exercici-interpretacio-codi","title":"Exercici interpretaci\u00f3 codi","text":"<p>En el seg\u00fcent exercici es planteja un tro\u00e7 de codi per a la seva interpretaci\u00f3 i an\u00e0lisi. Concretament es demana fer el seg\u00fcent:</p> <ul> <li>Analitzar el codi sense executar-lo. Plantejar una hip\u00f2tesi d'all\u00f2 que creis que fa.</li> <li>Copia el codi i executa'l. Intentar, segons el resultat de l'execuci\u00f3, confirmar la hip\u00f2tesi anterior i en cas que no es confirmi, plantejar una suposici\u00f3 en base al resultat.</li> <li>Cerca per internet, incloent-hi motors de intel\u00b7lig\u00e8ncia artificial una explicaci\u00f3.</li> <li>Fes la teva explicaci\u00f3 definitiva sobre el funcionament del codi plantejat.</li> <li>A partir d'aqu\u00ed planteja tres possibles millores en termes d'estructura i rendiment.</li> </ul> <p>Aquest \u00e9s el codi:</p> <pre><code>function funcio_usuari(array) {\n    return array.reduce((acc, elem) =&gt; acc + elem, 0);\n}\n\nconst membres = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(\"El resultat de la funci\u00f3 \u00e9s: \" + funcio_usuari(membres));\n</code></pre> <p>Comparteix les teves conclusions a trav\u00e9s del \"Teams\"</p>"},{"location":"Moduls/DWEC/exercicisisolucions/ExercicisCridesAsi%CC%81ncrones.html","title":"Exercicis crides as\u00edncrones","text":""},{"location":"Moduls/DWEC/exercicisisolucions/ExercicisCridesAsi%CC%81ncrones.html#exercicis-crides-asincrones","title":"Exercicis crides as\u00edncrones","text":"<p>\u270f\ufe0f Exercici 1: Mostra un usuari aleatori</p> <p>La p\u00e0gina https://randomuser.me/ permet obtenir dades de persones aleat\u00f2ries per a fer proves de desenvolupament de programari.</p> <p>Les instruccions de l\u2019API d\u2019aquest servei gratu\u00eft es troben a l\u2019URL: https://randomuser.me/documentation</p> <p>En qualsevol cas, la idea \u00e9s fer sol\u00b7licituds a trav\u00e9s de l\u2019URL: https://randomuser.me/api/ Es poden passar par\u00e0metres per indicar quants usuaris volem, sexe, pol\u00edtica de contrasenya, p\u00e0gines, format de resposta, etc.</p> <p>A la p\u00e0gina de documentaci\u00f3 hi ha un exemple de l'estructura de les respostes. Com a resum, es pot dir que la resposta \u00e9s un objecte format per dues propietats: resultats i informaci\u00f3. </p> <p>Es demana fer una aplicaci\u00f3 amb Angular que mostri la foto, el nom, el cognom, el correu electr\u00f2nic, l\u2019adre\u00e7a i l\u2019estat que t\u00e9 un usuari. Cada vegada que pitjem un bot\u00f3 (que haurem d'implementar), se sol\u00b7licitar\u00e0 un altre usuari. Exemple de resultat:</p> <p>laerke sorensen Email: lserke.s0rensen@example.com 201 msllevaenget nykobing sj. (MIDTJYLLAND) Figura 10.4: Ejemplo de usuaria aleatoria</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html","title":"Tasca: Entorn de desenvolupament per a JavaScript","text":""},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#tasca-entorn-de-desenvolupament-per-a-javascript","title":"Tasca: Entorn de desenvolupament per a JavaScript","text":"<p>Informaci\u00f3 sobre la tasca</p> <p>El lliurament ser\u00e0 en format PDF.</p> <p>La tarea se calificar\u00e1 con una nota de correcte (10) o no correcte (0).</p> <p>Durada aproximada activitats: 2 hores.</p> <p>RA1. Selecciona les arquitectures i tecnologies de programaci\u00f3 sobre clients web, identificant i analitzant les capacitats i caracter\u00edstiques de cadascuna</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitats","title":"Activitats","text":"<p>\u00c9s molt important llegir els apunts i realitzar les activitats. Les activitats d'aquesta unitat s\u00f3n base per a la realitzaci\u00f3 d' activitats en les properes unitats.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-1-navegador","title":"Activitat 1: Navegador","text":"<p>Instal\u00b7la el navegador web Firefox Developer Edition i Brave.</p> <p>Accedeix a l'eina de desenvolupament de cada navegador (tecla F12) i executa a la consola les seg\u00fcents l\u00ednies de codi una a una:</p> <pre><code>console.log(\"S\u00f3c en &lt;tu usuari&gt; i &lt;m'agrada o no m'agrada&gt; les pilotes amb salsa\")\n</code></pre> <pre><code>alert(\"S\u00f3c en &lt;tu usuari&gt; i tipus de m\u00fasica que m\u00e9s m'agrada \u00e9s el &lt;tipus musica preferit&gt;\")\n</code></pre> <p> </p> <p>Recorda que has de substituir tot el que apareix entre \"&lt;\" i \"&gt;\"</p> <p>\ud83d\udcf8 Fes una o diverses captures per demostrar que has realitzat aquesta tasca. Recorda que les captures de pantalla han de cobrir tot l'escriptori perqu\u00e8 es vegi la data i hora de realitzaci\u00f3!</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-2-entorn-de-desenvolupament","title":"Activitat 2: Entorn de desenvolupament","text":"<p>Instal\u00b7la l'entorn de desenvolupament WebStorm de JetBrains.</p> <p>Una vegada instal\u00b7lat, crea un document <code>&lt;nom_llinatge&gt;.html</code>.</p> <p>En el nou document genera una estructura base per a un document HTML.</p> <p>Afegeix en el <code>body</code>:</p> <pre><code>&lt;h1&gt;S\u00f3c en &lt;nom_llinatge&gt; i m'agrada el cinema del tipus &lt;g\u00e8nere&gt;&lt;/h1&gt;\n</code></pre> <p>Intenta veure la previsualitzaci\u00f3 del que acabes de fer:</p> <p>\ud83d\udcf8 Fes una o diverses captures per demostrar que has realitzat aquesta tasca. Recorda que les captures de pantalla han de cobrir tot l'escriptori perqu\u00e8 es vegi la data i hora de realitzaci\u00f3!</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-3-integracio-de-codi-javascript","title":"Activitat 3: Integraci\u00f3 de codi JavaScript","text":"<p>Afegeix les dues l\u00ednies de codi de la primera activitat utilitzant l'element <code>script</code>.</p> <p>Pregunta</p> <p>Es veu el resultat del 'console.log()' i de l''alert()' a la previsualitzaci\u00f3? Si no \u00e9s aix\u00ed, com puc comprovar que el meu 'console.log()' i el meu 'alert()' realment funciona?</p> <p>\ud83d\udcf8 Fes una o diverses captures per demostrar que has realitzat aquesta tasca. Recorda que les captures de pantalla han de cobrir tot l'escriptori perqu\u00e8 es vegi la data i hora de realitzaci\u00f3!</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-4-script-extern","title":"Activitat 4: Script extern","text":"<p>Crea el fitxer 'script.js' i mou les dues l\u00ednies de codi de l'activitat anterior a aquest nou fitxer fent que s'executi de la mateixa manera.</p> <p>Pregunta</p> <p>Es veu el resultat del 'console.log()' i de l''alert()'? Si no \u00e9s aix\u00ed, \u00bfcom puc comprovar que el meu 'console.log()' i el meu 'alert()' realment funciona?</p> <p>Pregunta</p> <p>En qu\u00e8 part del document HTML haur\u00edem d'afegir l'element 'script'? \u00bfI si utilitz\u00e9ssim els atributs 'async' o 'defer'?</p> <p>\ud83d\udcf8 Fes una o diverses captures per demostrar que has realitzat aquesta tasca.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-5-github","title":"Activitat 5: GitHub","text":"<p>Crea un compte a GitHub si no la tens.</p> <p>Crea un repositori per a aquest m\u00f2dul professional, anomenat DWECCIFPBMOLL2526_llinatgenom</p> <p>Puja els fitxers que has utilitzat per aquesta pr\u00e0ctica al repositori.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#bibliografia","title":"Bibliograf\u00eda","text":"<ul> <li>Ministerio de Educaci\u00f3n y Formaci\u00f3n Profesional</li> <li>https://github.com/sergarb1/ApuntesDWEC/blob/master/UD01/Gu%C3%ADa%20de%20estudio%20DWEC%20-%20UD%2001%20-%20Navegadores%20y%20entorno%20de%20trabajo.pdf</li> <li>Lloc web de Marcos Ruiz</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01_2.html","title":"Exercicis inicials Javascript","text":""},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01_2.html#exercicis-inicials-javascript","title":"Exercicis inicials Javascript","text":""},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT02.html","title":"Exercicis UT02","text":"<p>\u270f\ufe0f   EXERCICI 1. Segons la forma en qu\u00e8 s'executa JavaScript es pot dir que es tracta d'un llenguatge de programaci\u00f3:</p> <ul> <li> a) Compilat.</li> <li> b) Interpretat.</li> <li> c) Distribu\u00eft.</li> <li> d) Combinat.</li> </ul> <p>\u270f\ufe0f   EXERCICI 2. Que utilitzaries per incorporar un fitxer JavaScript a una p\u00e0gina web?</p> <ul> <li> a) head.</li> <li> b) body.</li> <li> c) script.</li> <li> d) code.</li> </ul> <p>\u270f\ufe0f EXERCICI 3. A qu\u00e8 denomines prompt?</p> <ul> <li> a) Al s\u00edmbol de la consola des del qual pots llan\u00e7ar instruccions perqu\u00e8 les executi el navegador.</li> <li> b) A la ruta des de la qual es poden incorporar fitxers JavaScript a un HTML.</li> <li> c) A un atribut de l'etiqueta que et permet incloure fitxers JavaScript externs.</li> <li> d) Als missatges de sortida de la consola d'un navegador.</li> </ul> <p>\u270f\ufe0f EXERCICI 4. Selecciona l'afirmaci\u00f3 falsa en relaci\u00f3 amb les regles que has de tenir en quarantena per definir identificadors:</p> <ul> <li> a) Pots usar qualsevol car\u00e0cter recollit en UNICODE.</li> <li> b) No distingeix entre maj\u00fascules i min\u00fascules.</li> <li> c) El primer car\u00e0cter ha de ser una lletra, _ o $.</li> <li> d) No pot coincidir amb una paraula reservada del llenguatge.</li> </ul> <p>\u270f\ufe0f EXERCICI 5. Si necessites crear una variable que no pot canviar al llarg de tot el programa, quin tipus de variable seria la m\u00e9s adequada?</p> <ul> <li> a) let.</li> <li> b) var.</li> <li> c) const.</li> <li> d) Si no pot canviar al llarg del programa, no \u00e9s una variable. El seu propi nom ho indica.</li> </ul> <p>\u270f\ufe0f EXERCICI 6. Quin operador faries servir per calcular la pot\u00e8ncia d'un n\u00famero?</p> <ul> <li> a) *.</li> <li> b) **.</li> <li> c) ***.</li> <li> d) ****.</li> </ul> <p>\u270f\ufe0f EXERCICI 7. Assenyala la resposta correcta en relaci\u00f3 amb l'estructura de control if:</p> <ul> <li> a) Pots treure les claus {} si contenen una sola instrucci\u00f3.</li> <li> b) No admet l'encadenament de m\u00e9s de 3 if elseif elseif else.</li> <li> c) \u00c9s una estructura de control, de salt.</li> <li> d) Forma bucles que sense prendre precaucions podrien esdevenir infinits.</li> </ul> <p>\u270f\ufe0f EXERCICI 8. Qu\u00e8 \u00e9s el m\u00e9s important en dissenyar un bucle del tipus que sigui?</p> <ul> <li> a) Assegurar-se que es pot assolir la condici\u00f3 d'acabament.</li> <li> b) No abusar de la seva mida ja que t\u00e9 costos computacionals.</li> <li> c) No anidar-los per no augmentar-ne la complexitat.</li> <li> d) No oblidar col\u00b7locar un default.</li> </ul> <p>\u270f\ufe0f EXERCICI 9. Quina difer\u00e8ncia hi ha entre while i do while?</p> <ul> <li> a) Cap, fan exactament el mateix en tots els casos.</li> <li> b) While s'executa sempre almenys una vegada, mentre que do while no t\u00e9 per qu\u00e8.</li> <li> c) Do while s'executa sempre almenys una vegada, while no.</li> <li> d) While \u00e9s una estructura repetitiva i do while de salt.</li> </ul> <p>\u270f\ufe0f EXERCICI 10. Assenyala l'afirmaci\u00f3 correcta en relaci\u00f3 amb les instruccions de salt:</p> <ul> <li> a) \u00c9s molt bona idea usar-les amb freq\u00fc\u00e8ncia per la seva agilitat saltant d'un punt a un altre del programa.</li> <li> b) S\u00f3n molt \u00fatils en situacions molt concretes, per\u00f2 no n'has d'abusar.</li> <li> c) Tot i ser de salt, no permeten saltar a altres punts del programa.</li> <li> d) S\u00f3n \u00fatils, per\u00f2 la seva complexitat fa que hagin caigut en des\u00fas.</li> </ul> <p>\u270f\ufe0f EXERCICI 11. Escriu un fragment de codi on s'apreci\u00ef la difer\u00e8ncia d'usar els tipus de variables let, var i const.</p> <p>\u270f\ufe0f EXERCICI 12. Recordes la f\u00f3rmula per calcular les solucions d'una equaci\u00f3 de segon grau? Crea un programa que les calculi.</p> <p>\u270f\ufe0f EXERCICI 13. Elabora una calculadora. El programa li ha de demanar a l'usuari un n\u00famero, despr\u00e9s un s\u00edmbol (+, , /, , %) i despr\u00e9s un altre n\u00famero. El programa ha de mostrar per consola el resultat de l'operaci\u00f3.</p> <p>\u270f\ufe0f EXERCICI 14. Crea un programa a JavaScript per calcular la lletra d'un DNI que ha d'introduir l'usuari per teclat (a internet trobar\u00e0s la f\u00f3rmula que ho calcula).</p> <p>\u270f\ufe0f EXERCICI 15. Escriu un programa que li demani a l'usuari un n\u00famero, i mostri en consola la seva factorial.</p> <p>\u270f\ufe0f EXERCICI 16. Desenvolupa un programa amb la l\u00f2gica que desitges on expliquis les difer\u00e8ncies d'usar els operadors a++, a--, ++a i --a. Utilitza els comentaris d'una i diverses l\u00ednies en la teva explicaci\u00f3.</p> <p>\u270f\ufe0f EXERCICI 17. Escriu un conversor de temps. El programa li ha de demanar a l'usuari una quantitat de dies, hores i minuts, i el programa retornar\u00e0 la quantitat de segons que s\u00f3n.</p> <p>\u270f\ufe0f EXERCICI 18. Idea un programa en el qual usar un bucle do while sigui millor idea que usar un bucle while.</p> <p>\u270f\ufe0f EXERCICI 19. Crea un programa que mostri els n\u00fameros senars que no siguin m\u00faltiples de 3 ni de 7 que n'hi ha del 100 a l'-Realitza versions del programa usando bucles while, do while y for.</p> <p>\u270f\ufe0f EXERCICI 20. Escriu un programa que posi en pr\u00e0ctica la seg\u00fcent l\u00f2gica: Mostrar\u00e0 el seg\u00fcent men\u00fa i l'usuari haur\u00e0 de triar una de les opcions:</p> <p>a) \u00c0rea del triangle (b*h/2).</p> <p>b) \u00c0rea del rectangle (b*h).</p> <p>c) \u00c0rea del cercle (Trr*2).</p> <p>d) Sortir. * En funci\u00f3 de l'opci\u00f3 que tri\u00ef l'usuari, se li demanaran les dades necess\u00e0ries en cada cas. * El programa calcular\u00e0 el resultat i el mostrar\u00e0 a la consola. * La l\u00f2gica anterior es repetir\u00e0 indefinidament fins que l'usuari pose la tecla de sortir.</p> <p>\u270f\ufe0f EXERCICI 21. Hi ha molta desinformaci\u00f3 sobre l'origen del nom JavaScript. Busca una font fiable i descobreix la controv\u00e8rsia que envolta el propi nom del llenguatge.</p> <p>\u270f\ufe0f EXERCICI 22. Hem vist de passada que ECMAScript \u00e9s l'especificaci\u00f3 de refer\u00e8ncia que controla l'evoluci\u00f3 del llenguatge JavaScript. Investiga sobre l'especificaci\u00f3 i revisa l'historial de canvis m\u00e9s importants que s'han produ\u00eft en el llenguatge en els darrers anys.</p> <p>\u270f\ufe0f EXERCICI 23. Una bona forma de no caure en els t\u00edpics errors de programaci\u00f3 quan som principiants \u00e9s con\u00e8ixer-los. Busca a internet algun article que en parli i aprofita per con\u00e8ixer-los.</p> <p>\u270f\ufe0f EXERCICI 24. Quan s'avan\u00e7a en el disseny d'algoritmes sempre ens hem de plantejar com optimitzar el codi, ja que estalviar temps d'execuci\u00f3 \u00e9s fonamental, especialment quan el navegador est\u00e0 carregant una p\u00e0gina web. Retrocedeix als programes que has elaborat i pensa com podries reduir les l\u00ednies de codi. Et sorprendr\u00e0 l'estalvi.</p> <p>\u270f\ufe0f EXERCICI 25. En ocasions dissenyem bucles sense pensar en el cost computacional que tenen. Sense embargo, quan escrivim programes de milers de l\u00ednies de codi, aix\u00f2 representa un greu problema de rendiment. Revisa els programes on has utilitzat bucles i investiga com pots estalviar temps d'execuci\u00f3. (Amb les instruccions time de consol que hem vist pots calcular el temps d'execuci\u00f3 dels teus bucles).</p> <p>\u270f\ufe0f EXERCICI 26. Creus que pots dissenyar un algoritme que resolgui qualsevol problema? Hi ha nombrosos casos on el temps de c\u00e0lcul \u00e9s tan gran que resulta in\u00fatil abordar la soluci\u00f3 al problema de forma algor\u00edtmica. Reflexiona sobre aquests extrems i tracta de trobar alguns problemes que no es podrien resoldre amb un algoritme. Despr\u00e9s acudeix a internet i busca informaci\u00f3 al respecte.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT03.html","title":"Exercicis UT03","text":"<p>\u270f\ufe0f   EXERCICI 1. Realitza un programa que cada 20 segons (mitjan\u00e7ant setInterval) sol\u00b7liciti un DNI fins que alg\u00fa li escrigui la cadena \"-1\". En aquell moment, el programa ha de mostrar seguides les lletres de tots els DNIs introdu\u00efts. Aqu\u00ed un enlla\u00e7 per saber com calcular la lletra de DNI.</p> Possible soluci\u00f3 <pre><code>// Utilitzam mode estrice\n\"use strict\";\n\n\n// Calcular lletraDNI\nfunction lletraDNI(numeroDni) {\n    let lletres = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E', 'T'];\nreturn lletres[numeroDni % 23];\n}\n\nfunction funcioPrincipal() {\n    let lletra;\n    let cad = prompt(\"Posa el DNI o -1 per aturar\", \"12345678\");\n    if (cad === \"-1\") {\n        // Utilitzam la variable global interval, aturam el setInterval\n        clearInterval(interval);\n        // Mostram la matriu\n        alert(matriuDNIS.join(\" ; \"))\n    }\n    else {\n        lletra = lletraDNI(cad);\n        matriuDNIS.push(lletra);\n    }\n}\n\n\nlet interval = setInterval(\"funcioPrincipal();\", 20000);\n// [] Equivalente a new Array();\nlet matriuDNIS = [];\nfuncioPrincipal();\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html","title":"Exercicis","text":""},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#colleccio-de-50-exercicis-de-javascript-enunciats","title":"Col\u00b7lecci\u00f3 de 50 Exercicis de JavaScript - Enunciats","text":""},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#introduccio","title":"Introducci\u00f3","text":"<p>Aquesta col\u00b7lecci\u00f3 de 50 exercicis est\u00e0 dissenyada per a estudiants que comencen amb JavaScript i volen progressar fins a un nivell intermedi. Els exercicis estan organitzats de forma progressiva, des dels conceptes m\u00e9s b\u00e0sics fins als m\u00e9s avan\u00e7ats.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#com-utilitzar-aquests-exercicis","title":"Com utilitzar aquests exercicis","text":"<ol> <li>Llegeix l'enunciat amb atenci\u00f3</li> <li>Intenta resoldre l'exercici pel teu compte primer</li> <li>Consulta el solucionari interactiu quan necessitis ajuda</li> <li>Experimenta amb variacions del codi per aprendre m\u00e9s</li> </ol>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercicis-de-nivell-basic-1-15","title":"Exercicis de Nivell B\u00e0sic (1-15)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-1-primer-programa","title":"Exercici 1: Primer programa","text":"<p>Escriu un programa que mostri un alert amb el missatge \"Hola M\u00f3n\".</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-2-escriptura-a-la-pagina","title":"Exercici 2: Escriptura a la p\u00e0gina","text":"<p>Escriu un programa que escrigui \"Benvingut a JavaScript\" a la p\u00e0gina web utilitzant <code>document.write()</code>.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-3-operacions-aritmetiques","title":"Exercici 3: Operacions aritm\u00e8tiques","text":"<p>Crea un programa que sumi dos n\u00fameros (per exemple, 15 + 25) i mostri el resultat per consola utilitzant <code>console.log()</code>.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-4-variables-basiques","title":"Exercici 4: Variables b\u00e0siques","text":"<p>Declara dues variables: <code>nom</code> i <code>edat</code>. Assigna els teus valors personals i mostra'ls per consola amb un missatge personalitzat com \"Hola, em dic [nom] i tinc [edat] anys\".</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-5-entrada-de-dades","title":"Exercici 5: Entrada de dades","text":"<p>Crea un programa que demani el nom de l'usuari amb <code>prompt()</code> i el saludi amb un alert personalitzat.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-6-calculadora-simple","title":"Exercici 6: Calculadora simple","text":"<p>Demana dos n\u00fameros a l'usuari utilitzant <code>prompt()</code>, suma'ls i mostra el resultat amb un alert. Recorda utilitzar <code>parseInt()</code> o <code>parseFloat()</code> per convertir els strings a n\u00fameros.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-7-comparacio-de-numeros","title":"Exercici 7: Comparaci\u00f3 de n\u00fameros","text":"<p>Escriu un programa que demani dos n\u00fameros a l'usuari i determini quin \u00e9s el m\u00e9s gran, o si s\u00f3n iguals.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-8-paritat","title":"Exercici 8: Paritat","text":"<p>Crea un programa que demani un n\u00famero a l'usuari i determini si \u00e9s parell o senar utilitzant l'operador m\u00f2dul (%).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-9-comptador-amb-bucle-for","title":"Exercici 9: Comptador amb bucle for","text":"<p>Escriu un bucle <code>for</code> que compti del 1 al 10 i mostri cada n\u00famero per consola.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-10-comptador-invers-amb-while","title":"Exercici 10: Comptador invers amb while","text":"<p>Utilitza un bucle <code>while</code> per comptar del 10 al 1 en ordre descendent i mostrar cada n\u00famero per consola.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-11-taula-de-multiplicar","title":"Exercici 11: Taula de multiplicar","text":"<p>Crea un programa que demani un n\u00famero a l'usuari i mostri la seva taula de multiplicar del 1 al 10.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-12-validacio-dedat","title":"Exercici 12: Validaci\u00f3 d'edat","text":"<p>Escriu un programa que demani l'edat de l'usuari i indiqui si \u00e9s menor d'edat (menor de 18 anys), adult (18-65 anys) o jubilat (m\u00e9s de 65 anys).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-13-comptar-vocals","title":"Exercici 13: Comptar vocals","text":"<p>Crea una funci\u00f3 que rebi un text i compti quantes vocals (a, e, i, o, u) cont\u00e9. Mostra el resultat per consola.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-14-array-basic","title":"Exercici 14: Array b\u00e0sic","text":"<p>Crea un array amb els noms de 5 fruites i utilitza un bucle per mostrar cada fruita per consola amb el seu \u00edndex.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-15-suma-delements-darray","title":"Exercici 15: Suma d'elements d'array","text":"<p>Escriu un programa que tingui un array de n\u00fameros i calculi la suma de tots els seus elements.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercicis-de-nivell-intermedi-16-35","title":"Exercicis de Nivell Intermedi (16-35)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-16-element-maxim","title":"Exercici 16: Element m\u00e0xim","text":"<p>Crea una funci\u00f3 que rebi un array de n\u00fameros i retorni el valor m\u00e0xim sense utilitzar <code>Math.max()</code>.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-17-manipulacio-del-dom","title":"Exercici 17: Manipulaci\u00f3 del DOM","text":"<p>Crea una p\u00e0gina HTML amb un bot\u00f3. Quan es cliqui el bot\u00f3, ha de canviar el text d'un par\u00e0graf.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-18-canvi-de-colors","title":"Exercici 18: Canvi de colors","text":"<p>Escriu un programa que canvi\u00ef el color de fons d'un element <code>&lt;h1&gt;</code> quan es faci clic sobre ell.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-19-generador-de-numeros-aleatoris","title":"Exercici 19: Generador de n\u00fameros aleatoris","text":"<p>Crea un programa que generi un n\u00famero aleatori entre 1 i 100 cada vegada que es premi un bot\u00f3 i el mostri a la p\u00e0gina.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-20-calculadora-de-preus-amb-iva","title":"Exercici 20: Calculadora de preus amb IVA","text":"<p>Desenvolupa un programa que demani el preu d'un producte i el percentatge d'IVA, i calculi el preu final.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-21-validador-de-contrasenya","title":"Exercici 21: Validador de contrasenya","text":"<p>Crea una funci\u00f3 que validi si una contrasenya t\u00e9 almenys 8 car\u00e0cters i cont\u00e9 almenys una lletra maj\u00fascula i una min\u00fascula.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-22-calculadora-dimc","title":"Exercici 22: Calculadora d'IMC","text":"<p>Crea un programa que calculi l'\u00cdndex de Massa Corporal (IMC = pes / altura\u00b2) i indiqui la categoria corresponent.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-23-ordenacio-de-tres-numeros","title":"Exercici 23: Ordenaci\u00f3 de tres n\u00fameros","text":"<p>Escriu un programa que demani tres n\u00fameros i els mostri ordenats de menor a major.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-24-joc-dendevinar-numeros","title":"Exercici 24: Joc d'endevinar n\u00fameros","text":"<p>Crea un joc on l'ordinador pensi un n\u00famero entre 1 i 10, i l'usuari hagi d'endevinar-lo amb m\u00e0xim 3 intents.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-25-comptador-de-paraules","title":"Exercici 25: Comptador de paraules","text":"<p>Escriu una funci\u00f3 que compti el nombre de paraules en una frase. Les paraules estan separades per espais.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-26-calculadora-amb-funcions","title":"Exercici 26: Calculadora amb funcions","text":"<p>Crea una calculadora amb funcions separades per sumar, restar, multiplicar i dividir. Inclou validaci\u00f3 per la divisi\u00f3 per zero.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-27-array-de-numeros-parells","title":"Exercici 27: Array de n\u00fameros parells","text":"<p>Crea un programa que generi un array amb els primers 10 n\u00fameros parells (2, 4, 6, 8, ...).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-28-inversio-dun-string","title":"Exercici 28: Inversi\u00f3 d'un string","text":"<p>Escriu una funci\u00f3 que rebi un string i el retorni invertit (per exemple: \"hola\" -&gt; \"aloh\").</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-29-comprovador-de-palindroms","title":"Exercici 29: Comprovador de pal\u00edndroms","text":"<p>Crea una funci\u00f3 que determini si una paraula \u00e9s un pal\u00edndrom (es llegeix igual cap endavant i cap enrere).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-30-cerca-en-array","title":"Exercici 30: Cerca en array","text":"<p>Escriu una funci\u00f3 que cerqui un element en un array i retorni la seva posici\u00f3, o -1 si no el troba.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-31-generador-de-nombres-aleatoris","title":"Exercici 31: Generador de nombres aleatoris","text":"<p>Crea una funci\u00f3 que generi un array de n n\u00fameros aleatoris entre un valor m\u00ednim i m\u00e0xim.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-32-filtre-de-numeros-parells","title":"Exercici 32: Filtre de n\u00fameros parells","text":"<p>Donat un array de n\u00fameros, crea un nou array que contingui nom\u00e9s els n\u00fameros parells.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-33-comptador-de-caracters","title":"Exercici 33: Comptador de car\u00e0cters","text":"<p>Escriu una funci\u00f3 que compti quantes vegades apareix cada car\u00e0cter en un string i mostri els resultats.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-34-validador-demail","title":"Exercici 34: Validador d'email","text":"<p>Crea una funci\u00f3 que validi si un string t\u00e9 format d'email v\u00e0lid (cont\u00e9 @ i punt despr\u00e9s de @).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-35-ordenacio-darray","title":"Exercici 35: Ordenaci\u00f3 d'array","text":"<p>Implementa l'algoritme de bombolla (bubble sort) per ordenar un array de n\u00fameros de menor a major.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercicis-de-nivell-avancat-36-50","title":"Exercicis de Nivell Avan\u00e7at (36-50)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-36-calculadora-de-factorial","title":"Exercici 36: Calculadora de factorial","text":"<p>Escriu una funci\u00f3 que calculi el factorial d'un n\u00famero (n! = n \u00d7 (n-1) \u00d7 ... \u00d7 1).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-37-conversor-de-temperatura","title":"Exercici 37: Conversor de temperatura","text":"<p>Crea un programa que converteixi temperatures entre Celsius, Fahrenheit i Kelvin.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-38-comptador-de-vocals-i-consonants","title":"Exercici 38: Comptador de vocals i consonants","text":"<p>Escriu una funci\u00f3 que compti separately les vocals i consonants d'un text.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-39-cerca-del-segon-element-mes-gran","title":"Exercici 39: Cerca del segon element m\u00e9s gran","text":"<p>Troba el segon element m\u00e9s gran d'un array de n\u00fameros sense utilitzar <code>sort()</code>.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-40-generador-de-patrons","title":"Exercici 40: Generador de patrons","text":"<p>Crea un programa que generi un patr\u00f3 triangular d'asteriscs de n files.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-41-validador-de-numero-de-telefon","title":"Exercici 41: Validador de n\u00famero de tel\u00e8fon","text":"<p>Crea una funci\u00f3 que validi si un n\u00famero de tel\u00e8fon espanyol t\u00e9 el format correcte (9 d\u00edgits comen\u00e7ant per 6, 7, 8 o 9).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-42-calculadora-de-mitjana-i-mediana","title":"Exercici 42: Calculadora de mitjana i mediana","text":"<p>Escriu funcions per calcular la mitjana aritm\u00e8tica i la mediana d'un array de n\u00fameros.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-43-joc-de-pedra-paper-tisora","title":"Exercici 43: Joc de pedra, paper, tisora","text":"<p>Implementa el joc cl\u00e0ssic de pedra, paper, tisora contra l'ordinador.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-44-comptador-de-paraules-uniques","title":"Exercici 44: Comptador de paraules \u00faniques","text":"<p>Escriu una funci\u00f3 que compti quantes paraules \u00faniques (sense repeticions) hi ha en un text.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-45-convertidor-de-numeros-romans","title":"Exercici 45: Convertidor de n\u00fameros romans","text":"<p>Crea una funci\u00f3 que converteixi n\u00fameros enters (1-3999) a numeraci\u00f3 romana.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-46-analizador-de-text","title":"Exercici 46: Analizador de text","text":"<p>Crea un programa complet que analitzi un text i mostri estad\u00edstiques: paraules, car\u00e0cters, frases, paraula m\u00e9s llarga, etc.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-47-sistema-de-notes-destudiants","title":"Exercici 47: Sistema de notes d'estudiants","text":"<p>Crea un sistema que gestioni notes d'estudiants: afegir notes, calcular mitjanes, determinar aprovats/suspesos.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-48-calendari-simple","title":"Exercici 48: Calendari simple","text":"<p>Crea un programa que mostri el calendari d'un mes determinat (introdu\u00eft per l'usuari).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-49-codificadordescodificador-caesar","title":"Exercici 49: Codificador/Descodificador Caesar","text":"<p>Implementa el xifratge Caesar que despla\u00e7a cada lletra un n\u00famero determinat de posicions en l'alfabet.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#exercici-50-simulador-de-llancament-de-daus","title":"Exercici 50: Simulador de llan\u00e7ament de daus","text":"<p>Crea un simulador que llanci m\u00faltiples daus i mostri estad\u00edstiques dels resultats obtinguts.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#consells-per-resoldre-els-exercicis","title":"Consells per resoldre els exercicis","text":""},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#per-als-exercicis-basics-1-15","title":"Per als exercicis b\u00e0sics (1-15):","text":"<ul> <li>Comen\u00e7a sempre provant el codi al navegador</li> <li>Utilitza <code>console.log()</code> per veure qu\u00e8 est\u00e0 passant</li> <li>No tinguis por de cometre errors, s\u00f3n part de l'aprenentatge</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#per-als-exercicis-intermedis-16-35","title":"Per als exercicis intermedis (16-35):","text":"<ul> <li>Planifica abans de codificar</li> <li>Divideix el problema en parts m\u00e9s petites</li> <li>Utilitza funcions per organitzar millor el codi</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#per-als-exercicis-avancats-36-50","title":"Per als exercicis avan\u00e7ats (36-50):","text":"<ul> <li>Llegeix l'enunciat diverses vegades</li> <li>Pensa en casos especials o l\u00edmits</li> <li>Prova amb diferents entrades per validar la soluci\u00f3</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/UT02Exercicis.html#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>Consola del navegador: Prem F12 per obrir-la</li> <li>JSFiddle: jsfiddle.net</li> <li>CodePen: codepen.io</li> <li>MDN Web Docs: developer.mozilla.org</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/prova.html","title":"Solucionari d'Exercicis de JavaScript","text":""},{"location":"Moduls/DWEC/exercicisisolucions/prova.html#solucionari-dexercicis-de-javascript","title":"Solucionari d'Exercicis de JavaScript","text":"<p>Benvingut/da al solucionari interactiu de JavaScript! Aquest recurs est\u00e0 dissenyat per a estudiants de formaci\u00f3 professional que volen aprendre JavaScript des de zero.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/prova.html#que-trobaras-aqui","title":"Qu\u00e8 trobar\u00e0s aqu\u00ed","text":"<ul> <li>50 exercicis progressius de JavaScript</li> <li>Solucions detallades amb explicacions paso a pas</li> <li>Solucionari interactiu per practicar de forma din\u00e0mica</li> <li>Recursos addicionals per aprofundir en els conceptes</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/prova.html#com-usar-aquest-solucionari","title":"Com usar aquest solucionari","text":"<ol> <li>Comen\u00e7a pels enunciats - Revisa la llista completa d'exercicis</li> <li>Intenta resoldre - Prova de fer els exercicis pel teu compte primer</li> <li>Consulta les solucions - Usa el solucionari interactiu quan necessitis ajuda</li> <li>Practica m\u00e9s - Experimenta amb variacions del codi</li> </ol>"},{"location":"Moduls/DWEC/exercicisisolucions/prova.html#navegacio-rapida","title":"Navegaci\u00f3 r\u00e0pida","text":"<ul> <li> <p> Enunciats</p> <p>Consulta la llista completa dels 50 exercicis organitzats per nivells</p> <p> Veure enunciats</p> </li> <li> <p> Solucionari Interactiu</p> <p>Accedeix al solucionari interactiu amb solucions i explicacions</p> <p> Solucionari</p> </li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/prova.html#nivells-dexercicis","title":"Nivells d'exercicis","text":""},{"location":"Moduls/DWEC/exercicisisolucions/prova.html#nivell-basic-1-15","title":"Nivell B\u00e0sic (1-15)","text":"<p>Variables, operadors, entrada/sortida b\u00e0sica, primers programes.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/prova.html#nivell-intermedi-16-35","title":"Nivell Intermedi (16-35)","text":"<p>Condicions, bucles, funcions, arrays, manipulaci\u00f3 b\u00e0sica del DOM.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/prova.html#nivell-avancat-36-50","title":"Nivell Avan\u00e7at (36-50)","text":"<p>Algoritmes, objectes, manipulaci\u00f3 avan\u00e7ada, projectes complets.</p> <p>Aquest material est\u00e0 dissenyat espec\u00edficament per als m\u00f2duls DWEC i DWES de formaci\u00f3 professional.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html","title":"Col\u00b7lecci\u00f3 de 50 Exercicis de JavaScript - Enunciats","text":""},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#colleccio-de-50-exercicis-de-javascript-enunciats","title":"Col\u00b7lecci\u00f3 de 50 Exercicis de JavaScript - Enunciats","text":""},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#introduccio","title":"Introducci\u00f3","text":"<p>Aquesta col\u00b7lecci\u00f3 de 50 exercicis est\u00e0 dissenyada per a estudiants que comencen amb JavaScript i volen progressar fins a un nivell intermedi. Els exercicis estan organitzats de forma progressiva, des dels conceptes m\u00e9s b\u00e0sics fins als m\u00e9s avan\u00e7ats.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#com-utilitzar-aquests-exercicis","title":"Com utilitzar aquests exercicis","text":"<ol> <li>Llegeix l'enunciat amb atenci\u00f3</li> <li>Intenta resoldre l'exercici pel teu compte primer</li> <li>Consulta el solucionari interactiu quan necessitis ajuda</li> <li>Experimenta amb variacions del codi per aprendre m\u00e9s</li> </ol>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercicis-de-nivell-basic-1-15","title":"Exercicis de Nivell B\u00e0sic (1-15)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-1-primer-programa","title":"Exercici 1: Primer programa","text":"<p>Escriu un programa que mostri un alert amb el missatge \"Hola M\u00f3n\".</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-2-escriptura-a-la-pagina","title":"Exercici 2: Escriptura a la p\u00e0gina","text":"<p>Escriu un programa que escrigui \"Benvingut a JavaScript\" a la p\u00e0gina web utilitzant <code>document.write()</code>.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-3-operacions-aritmetiques","title":"Exercici 3: Operacions aritm\u00e8tiques","text":"<p>Crea un programa que sumi dos n\u00fameros (per exemple, 15 + 25) i mostri el resultat per consola utilitzant <code>console.log()</code>.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-4-variables-basiques","title":"Exercici 4: Variables b\u00e0siques","text":"<p>Declara dues variables: <code>nom</code> i <code>edat</code>. Assigna els teus valors personals i mostra'ls per consola amb un missatge personalitzat com \"Hola, em dic [nom] i tinc [edat] anys\".</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-5-entrada-de-dades","title":"Exercici 5: Entrada de dades","text":"<p>Crea un programa que demani el nom de l'usuari amb <code>prompt()</code> i el saludi amb un alert personalitzat.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-6-calculadora-simple","title":"Exercici 6: Calculadora simple","text":"<p>Demana dos n\u00fameros a l'usuari utilitzant <code>prompt()</code>, suma'ls i mostra el resultat amb un alert. Recorda utilitzar <code>parseInt()</code> o <code>parseFloat()</code> per convertir els strings a n\u00fameros.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-7-comparacio-de-numeros","title":"Exercici 7: Comparaci\u00f3 de n\u00fameros","text":"<p>Escriu un programa que demani dos n\u00fameros a l'usuari i determini quin \u00e9s el m\u00e9s gran, o si s\u00f3n iguals.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-8-paritat","title":"Exercici 8: Paritat","text":"<p>Crea un programa que demani un n\u00famero a l'usuari i determini si \u00e9s parell o senar utilitzant l'operador m\u00f2dul (%).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-9-comptador-amb-bucle-for","title":"Exercici 9: Comptador amb bucle for","text":"<p>Escriu un bucle <code>for</code> que compti del 1 al 10 i mostri cada n\u00famero per consola.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-10-comptador-invers-amb-while","title":"Exercici 10: Comptador invers amb while","text":"<p>Utilitza un bucle <code>while</code> per comptar del 10 al 1 en ordre descendent i mostrar cada n\u00famero per consola.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-11-taula-de-multiplicar","title":"Exercici 11: Taula de multiplicar","text":"<p>Crea un programa que demani un n\u00famero a l'usuari i mostri la seva taula de multiplicar del 1 al 10.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-12-validacio-dedat","title":"Exercici 12: Validaci\u00f3 d'edat","text":"<p>Escriu un programa que demani l'edat de l'usuari i indiqui si \u00e9s menor d'edat (menor de 18 anys), adult (18-65 anys) o jubilat (m\u00e9s de 65 anys).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-13-comptar-vocals","title":"Exercici 13: Comptar vocals","text":"<p>Crea una funci\u00f3 que rebi un text i compti quantes vocals (a, e, i, o, u) cont\u00e9. Mostra el resultat per consola.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-14-array-basic","title":"Exercici 14: Array b\u00e0sic","text":"<p>Crea un array amb els noms de 5 fruites i utilitza un bucle per mostrar cada fruita per consola amb el seu \u00edndex.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-15-suma-delements-darray","title":"Exercici 15: Suma d'elements d'array","text":"<p>Escriu un programa que tingui un array de n\u00fameros i calculi la suma de tots els seus elements.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercicis-de-nivell-intermedi-16-35","title":"Exercicis de Nivell Intermedi (16-35)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-16-element-maxim","title":"Exercici 16: Element m\u00e0xim","text":"<p>Crea una funci\u00f3 que rebi un array de n\u00fameros i retorni el valor m\u00e0xim sense utilitzar <code>Math.max()</code>.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-17-manipulacio-del-dom","title":"Exercici 17: Manipulaci\u00f3 del DOM","text":"<p>Crea una p\u00e0gina HTML amb un bot\u00f3. Quan es cliqui el bot\u00f3, ha de canviar el text d'un par\u00e0graf.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-18-canvi-de-colors","title":"Exercici 18: Canvi de colors","text":"<p>Escriu un programa que canvi\u00ef el color de fons d'un element <code>&lt;h1&gt;</code> quan es faci clic sobre ell.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-19-generador-de-numeros-aleatoris","title":"Exercici 19: Generador de n\u00fameros aleatoris","text":"<p>Crea un programa que generi un n\u00famero aleatori entre 1 i 100 cada vegada que es premi un bot\u00f3 i el mostri a la p\u00e0gina.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-20-calculadora-de-preus-amb-iva","title":"Exercici 20: Calculadora de preus amb IVA","text":"<p>Desenvolupa un programa que demani el preu d'un producte i el percentatge d'IVA, i calculi el preu final.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-21-validador-de-contrasenya","title":"Exercici 21: Validador de contrasenya","text":"<p>Crea una funci\u00f3 que validi si una contrasenya t\u00e9 almenys 8 car\u00e0cters i cont\u00e9 almenys una lletra maj\u00fascula i una min\u00fascula.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-22-calculadora-dimc","title":"Exercici 22: Calculadora d'IMC","text":"<p>Crea un programa que calculi l'\u00cdndex de Massa Corporal (IMC = pes / altura\u00b2) i indiqui la categoria corresponent.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-23-ordenacio-de-tres-numeros","title":"Exercici 23: Ordenaci\u00f3 de tres n\u00fameros","text":"<p>Escriu un programa que demani tres n\u00fameros i els mostri ordenats de menor a major.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-24-joc-dendevinar-numeros","title":"Exercici 24: Joc d'endevinar n\u00fameros","text":"<p>Crea un joc on l'ordinador pensi un n\u00famero entre 1 i 10, i l'usuari hagi d'endevinar-lo amb m\u00e0xim 3 intents.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-25-comptador-de-paraules","title":"Exercici 25: Comptador de paraules","text":"<p>Escriu una funci\u00f3 que compti el nombre de paraules en una frase. Les paraules estan separades per espais.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-26-calculadora-amb-funcions","title":"Exercici 26: Calculadora amb funcions","text":"<p>Crea una calculadora amb funcions separades per sumar, restar, multiplicar i dividir. Inclou validaci\u00f3 per la divisi\u00f3 per zero.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-27-array-de-numeros-parells","title":"Exercici 27: Array de n\u00fameros parells","text":"<p>Crea un programa que generi un array amb els primers 10 n\u00fameros parells (2, 4, 6, 8, ...).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-28-inversio-dun-string","title":"Exercici 28: Inversi\u00f3 d'un string","text":"<p>Escriu una funci\u00f3 que rebi un string i el retorni invertit (per exemple: \"hola\" -&gt; \"aloh\").</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-29-comprovador-de-palindroms","title":"Exercici 29: Comprovador de pal\u00edndroms","text":"<p>Crea una funci\u00f3 que determini si una paraula \u00e9s un pal\u00edndrom (es llegeix igual cap endavant i cap enrere).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-30-cerca-en-array","title":"Exercici 30: Cerca en array","text":"<p>Escriu una funci\u00f3 que cerqui un element en un array i retorni la seva posici\u00f3, o -1 si no el troba.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-31-generador-de-nombres-aleatoris","title":"Exercici 31: Generador de nombres aleatoris","text":"<p>Crea una funci\u00f3 que generi un array de n n\u00fameros aleatoris entre un valor m\u00ednim i m\u00e0xim.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-32-filtre-de-numeros-parells","title":"Exercici 32: Filtre de n\u00fameros parells","text":"<p>Donat un array de n\u00fameros, crea un nou array que contingui nom\u00e9s els n\u00fameros parells.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-33-comptador-de-caracters","title":"Exercici 33: Comptador de car\u00e0cters","text":"<p>Escriu una funci\u00f3 que compti quantes vegades apareix cada car\u00e0cter en un string i mostri els resultats.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-34-validador-demail","title":"Exercici 34: Validador d'email","text":"<p>Crea una funci\u00f3 que validi si un string t\u00e9 format d'email v\u00e0lid (cont\u00e9 @ i punt despr\u00e9s de @).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-35-ordenacio-darray","title":"Exercici 35: Ordenaci\u00f3 d'array","text":"<p>Implementa l'algoritme de bombolla (bubble sort) per ordenar un array de n\u00fameros de menor a major.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercicis-de-nivell-avancat-36-50","title":"Exercicis de Nivell Avan\u00e7at (36-50)","text":""},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-36-calculadora-de-factorial","title":"Exercici 36: Calculadora de factorial","text":"<p>Escriu una funci\u00f3 que calculi el factorial d'un n\u00famero (n! = n \u00d7 (n-1) \u00d7 ... \u00d7 1).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-37-conversor-de-temperatura","title":"Exercici 37: Conversor de temperatura","text":"<p>Crea un programa que converteixi temperatures entre Celsius, Fahrenheit i Kelvin.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-38-comptador-de-vocals-i-consonants","title":"Exercici 38: Comptador de vocals i consonants","text":"<p>Escriu una funci\u00f3 que compti separately les vocals i consonants d'un text.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-39-cerca-del-segon-element-mes-gran","title":"Exercici 39: Cerca del segon element m\u00e9s gran","text":"<p>Troba el segon element m\u00e9s gran d'un array de n\u00fameros sense utilitzar <code>sort()</code>.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-40-generador-de-patrons","title":"Exercici 40: Generador de patrons","text":"<p>Crea un programa que generi un patr\u00f3 triangular d'asteriscs de n files.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-41-validador-de-numero-de-telefon","title":"Exercici 41: Validador de n\u00famero de tel\u00e8fon","text":"<p>Crea una funci\u00f3 que validi si un n\u00famero de tel\u00e8fon espanyol t\u00e9 el format correcte (9 d\u00edgits comen\u00e7ant per 6, 7, 8 o 9).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-42-calculadora-de-mitjana-i-mediana","title":"Exercici 42: Calculadora de mitjana i mediana","text":"<p>Escriu funcions per calcular la mitjana aritm\u00e8tica i la mediana d'un array de n\u00fameros.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-43-joc-de-pedra-paper-tisora","title":"Exercici 43: Joc de pedra, paper, tisora","text":"<p>Implementa el joc cl\u00e0ssic de pedra, paper, tisora contra l'ordinador.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-44-comptador-de-paraules-uniques","title":"Exercici 44: Comptador de paraules \u00faniques","text":"<p>Escriu una funci\u00f3 que compti quantes paraules \u00faniques (sense repeticions) hi ha en un text.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-45-convertidor-de-numeros-romans","title":"Exercici 45: Convertidor de n\u00fameros romans","text":"<p>Crea una funci\u00f3 que converteixi n\u00fameros enters (1-3999) a numeraci\u00f3 romana.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-46-analizador-de-text","title":"Exercici 46: Analizador de text","text":"<p>Crea un programa complet que analitzi un text i mostri estad\u00edstiques: paraules, car\u00e0cters, frases, paraula m\u00e9s llarga, etc.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-47-sistema-de-notes-destudiants","title":"Exercici 47: Sistema de notes d'estudiants","text":"<p>Crea un sistema que gestioni notes d'estudiants: afegir notes, calcular mitjanes, determinar aprovats/suspesos.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-48-calendari-simple","title":"Exercici 48: Calendari simple","text":"<p>Crea un programa que mostri el calendari d'un mes determinat (introdu\u00eft per l'usuari).</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-49-codificadordescodificador-caesar","title":"Exercici 49: Codificador/Descodificador Caesar","text":"<p>Implementa el xifratge Caesar que despla\u00e7a cada lletra un n\u00famero determinat de posicions en l'alfabet.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-50-simulador-de-llancament-de-daus","title":"Exercici 50: Simulador de llan\u00e7ament de daus","text":"<p>Crea un simulador que llanci m\u00faltiples daus i mostri estad\u00edstiques dels resultats obtinguts.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#consells-per-resoldre-els-exercicis","title":"Consells per resoldre els exercicis","text":""},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#per-als-exercicis-basics-1-15","title":"Per als exercicis b\u00e0sics (1-15):","text":"<ul> <li>Comen\u00e7a sempre provant el codi al navegador</li> <li>Utilitza <code>console.log()</code> per veure qu\u00e8 est\u00e0 passant</li> <li>No tinguis por de cometre errors, s\u00f3n part de l'aprenentatge</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#per-als-exercicis-intermedis-16-35","title":"Per als exercicis intermedis (16-35):","text":"<ul> <li>Planifica abans de codificar</li> <li>Divideix el problema en parts m\u00e9s petites</li> <li>Utilitza funcions per organitzar millor el codi</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#per-als-exercicis-avancats-36-50","title":"Per als exercicis avan\u00e7ats (36-50):","text":"<ul> <li>Llegeix l'enunciat diverses vegades</li> <li>Pensa en casos especials o l\u00edmits</li> <li>Prova amb diferents entrades per validar la soluci\u00f3</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>Consola del navegador: Prem F12 per obrir-la</li> <li>JSFiddle: jsfiddle.net</li> <li>CodePen: codepen.io</li> <li>MDN Web Docs: developer.mozilla.org</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/exercicis/enunciats-exercicis-50.html#nota-important","title":"Nota important","text":"<p>Aquests exercicis estan dissenyats per ser resolts progressivament. Si trobeu dificultats amb un exercici, no dubteu a consultar el solucionari interactiu o demanar ajuda al professor.</p> <p>Bona sort amb els exercicis! \ud83d\ude80</p>"},{"location":"Moduls/DWEC/flashcards/flashcards-UT01.html","title":"Flashcards UT01 - Arquitectures de Desenvolupament Web","text":""},{"location":"Moduls/DWEC/flashcards/flashcards-UT01.html#flashcards-ut01-arquitectures-de-desenvolupament-web","title":"Flashcards UT01 - Arquitectures de Desenvolupament Web","text":"Fes clic a la targeta per veure la resposta          Targeta 1 de 30 \u2190 Anterior Seg\u00fcent \u2192 \ud83d\udd00 Barrejar"},{"location":"Moduls/DWEC/flashcards/flashcards-UT01.html#instruccions-dus","title":"Instruccions d'\u00fas","text":"<ul> <li>Clic a la targeta: Gira la targeta per veure la resposta</li> <li>Botons de navegaci\u00f3: Navega entre targetes</li> <li>Tecles del teclat:</li> <li><code>\u2190</code> Targeta anterior</li> <li><code>\u2192</code> Targeta seg\u00fcent</li> <li><code>Espai</code> Girar targeta actual</li> <li>Barrejar: Barreja l'ordre de les targetes per estudiar aleat\u00f2riament</li> </ul>"},{"location":"Moduls/DWEC/flashcards/flashcards-UT02.html","title":"Flashcards UT02 - Sintaxi Javascript ES6","text":""},{"location":"Moduls/DWEC/flashcards/flashcards-UT02.html#flashcards-ut02-sintaxi-javascript-es6","title":"Flashcards UT02 - Sintaxi Javascript ES6","text":"Fes clic a la targeta per veure la resposta          Targeta 1 de 25 \u2190 Anterior Seg\u00fcent \u2192 \ud83d\udd00 Barrejar"},{"location":"Moduls/DWEC/flashcards/flashcards-UT02.html#instruccions-dus","title":"Instruccions d'\u00fas","text":"<ul> <li>Clic a la targeta: Gira la targeta per veure la resposta</li> <li>Botons de navegaci\u00f3: Navega entre targetes</li> <li>Tecles del teclat:</li> <li><code>\u2190</code> Targeta anterior</li> <li><code>\u2192</code> Targeta seg\u00fcent</li> <li><code>Espai</code> Girar targeta actual</li> <li>Barrejar: Barreja l'ordre de les targetes per estudiar aleat\u00f2riament</li> </ul>"},{"location":"Moduls/DWEC/flashcards/flashcards-UT03.html","title":"Flashcards UT03 - Model d'Objectes Predefinits JavaScript","text":""},{"location":"Moduls/DWEC/flashcards/flashcards-UT03.html#flashcards-ut03-model-dobjectes-predefinits-javascript","title":"Flashcards UT03 - Model d'Objectes Predefinits JavaScript","text":"Fes clic a la targeta per veure la resposta          Targeta 1 de 30 \u2190 Anterior Seg\u00fcent \u2192 \ud83d\udd00 Barrejar"},{"location":"Moduls/DWEC/flashcards/flashcards-UT03.html#instruccions-dus","title":"Instruccions d'\u00fas","text":"<ul> <li>Clic a la targeta: Gira la targeta per veure la resposta</li> <li>Botons de navegaci\u00f3: Navega entre targetes</li> <li>Tecles del teclat:</li> <li><code>\u2190</code> Targeta anterior</li> <li><code>\u2192</code> Targeta seg\u00fcent</li> <li><code>Espai</code> Girar targeta actual</li> <li>Barrejar: Barreja l'ordre de les targetes per estudiar aleat\u00f2riament</li> </ul>"},{"location":"Moduls/DWEC/mm/DWECUT01.mm.html","title":"Mapa conceptual","text":""},{"location":"Moduls/DWEC/mm/DWECUT01.mm.html#mapa-conceptual-ut01","title":"Mapa Conceptual UT01","text":""},{"location":"Moduls/DWEC/mm/DWECUT01.mm.html#ut01-arquitectures-de-desenvolupament-web","title":"UT01 Arquitectures de Desenvolupament Web","text":"IyBVVDAxLiBBcnF1aXRlY3R1cmVzIGRlIERlc2Vudm9sdXBhbWVudCBXZWIKCiMjIDEuIEludHJvZHVjY2nDsyBhIGxlcyBBcnF1aXRlY3R1cmVzCi0gQ29tcHJlbmRyZSBjbGllbnQtc2Vydmlkb3IKLSBCYXNlIGRlbCBkZXNlbnZvbHVwYW1lbnQgd2ViIG1vZGVybgotIEd1aWEgcGVyIGRlY2lzaW9ucyB0w6hjbmlxdWVzCgojIyAyLiBFdm9sdWNpw7MgSGlzdMOycmljYSBkZSBsYSBXZWIKLSBUaW0gQmVybmVycy1MZWUgKDE5ODkpCi0gVzNDIGkgZXN0w6BuZGFyZHMgd2ViCi0gUMOgZ2luZXMgd2ViIGVzdMOgdGlxdWVzCi0gUMOgZ2luZXMgZ2VuZXJhZGVzIHBlbCBzZXJ2aWRvcgotIEludHJvZHVjY2nDsyBkJ0FKQVgKLSBTaW5nbGUgUGFnZSBBcHBsaWNhdGlvbnMgKFNQQSkKLSBQcm9ncmVzc2l2ZSBXZWIgQXBwcyAoUFdBKQoKIyMgMy4gTW9kZWwgQ2xpZW50LVNlcnZpZG9yCiMjIyBDbGllbnQtc2lkZQotIE5hdmVnYWRvciB3ZWIKLSBGaXJlZm94LCBDaHJvbWUsIEVkZ2UKLSBJbnRlcmFjY2nDsyB1c3VhcmkKCiMjIyBTZXJ2ZXItc2lkZQotIFNlcnZpZG9ycyBmw61zaWNzL3ZpcnR1YWxzCi0gQXBhY2hlLCBOR0lOWAotIEJhc2VzIGRlIGRhZGVzCgojIyMgWGFyeGEKLSBQcm90b2NvbCBIVFRQL0hUVFBTCi0gQ29tdW5pY2FjacOzIGNsaWVudC1zZXJ2aWRvcgoKIyMgNC4gQXJxdWl0ZWN0dXJhIENsaWVudC1TaWRlCiMjIyBUZWNub2xvZ2llcyBwcmluY2lwYWxzCiMjIyMgSFRNTAotIEVzdHJ1Y3R1cmEgc2Vtw6BudGljYQotIEVsZW1lbnRzIEhUTUw1Ci0gU2VjdGlvbiwgbmF2LCBhcnRpY2xlCgojIyMjIENTUwotIEFzcGVjdGUgdmlzdWFsCi0gTGF5b3V0IGkgZGlzc2VueQotIFNlcGFyYWNpw7MgY29udGluZ3V0L3ByZXNlbnRhY2nDswoKIyMjIyBKYXZhU2NyaXB0Ci0gSW50ZXJhY3Rpdml0YXQKLSBNb2RpZmljYWNpw7MgRE9NCi0gQ29tcG9ydGFtZW50IGRpbsOgbWljCgojIyMgRWNvc2lzdGVtYSBKYXZhU2NyaXB0Ci0gSmF2YVNjcmlwdCBWYW5pbGxhCi0gTGxpYnJlcmllcyAoalF1ZXJ5LCBSZWFjdCkKLSBGcmFtZXdvcmtzIChBbmd1bGFyLCBWdWUsIFN2ZWx0ZSkKCiMjIyBMaW1pdGFjaW9ucwotIE5vIGVzY3JpdXJlIGZpdHhlcnMgc2Vydmlkb3IKLSBObyBhY2PDqXMgZGlyZWN0ZSBzaXN0ZW1hIGZpdHhlcnMKLSBTYW5kYm94IGkgU2FtZS1PcmlnaW4gUG9saWN5CgojIyA1LiBBcnF1aXRlY3R1cmEgU2VydmVyLVNpZGUKIyMjIENvbXBvbmVudHMKLSBQcm9ncmFtYXJpIHNlcnZpZG9yIHdlYgotIExsZW5ndWF0Z2VzIHByb2dyYW1hY2nDswogIC0gUEhQLCBOb2RlLmpzCiAgLSBKYXZhLCBQeXRob24KICAtIEFTUC5ORVQKLSBCYXNlcyBkZSBkYWRlcwoKIyMjIFJlc3BvbnNhYmlsaXRhdHMKLSBFbW1hZ2F0emVtYXRnZSBwZXJtYW5lbnQKLSBMw7JnaWNhIGRlIG5lZ29jaQotIEF1dGVudGljYWNpw7MgaSBzZWd1cmV0YXQKCiMjIDYuIENvbXBhcmF0aXZhIENsaWVudCB2cyBTZXJ2aWRvcgojIyMgVmFsaWRhY2nDsyBmb3JtdWxhcmlzCi0gQ2xpZW50OiBVWCBpIGZlZWRiYWNrIGluc3RhbnRhbmkKLSBTZXJ2aWRvcjogU2VndXJldGF0IG9ibGlnYXTDsnJpYQoKIyMjIEFjY8OpcyBkYWRlcwotIENsaWVudDogVmlzdWFsaXR6YWNpw7MKLSBTZXJ2aWRvcjogRW1tYWdhdHplbWF0Z2UgY2VudHJhbGl0emF0CgojIyMgQ8OgbGN1bHMKLSBDbGllbnQ6IE9wZXJhY2lvbnMgc2ltcGxlcwotIFNlcnZpZG9yOiBDw6BsY3VscyBjcsOtdGljcwoKIyMgNy4gTmF2ZWdhZG9ycyBpIGxhIFdlYgojIyMgUHJpbmNpcGFscyBuYXZlZ2Fkb3JzCi0gTWljcm9zb2Z0IEVkZ2UgKEJsaW5rKQotIE1vemlsbGEgRmlyZWZveCAoR2Vja28pCi0gQ2hyb21lIChCbGluaykKLSBTYWZhcmkgKFdlYktpdCkKLSBPcGVyYSAoQmxpbmspCgojIyMgQ29tcG9uZW50cyBjbGF1Ci0gSGlwZXJ2aW5jbGVzCi0gUHJvdG9jb2xzIEhUVFAvSFRUUFMKLSBFc3TDoG5kYXJkcyBIVE1ML1hIVE1MCgojIyA4LiBFaW5lcyBkZSBEZXNlbnZvbHVwYW1lbnQKIyMjIElERXMgaSBFZGl0b3JzCi0gVmlzdWFsIFN0dWRpbyBDb2RlCi0gV2ViU3Rvcm0gKEpldEJyYWlucykKLSBMbGljw6huY2llcyBlZHVjYXRpdmVzIGdyYXR1w690ZXMKCiMjIyBXZWJTdG9ybSBjYXJhY3RlcsOtc3RpcXVlcwotIEF1dG9jb21wbGV0YXQgaW50ZWzCt2xpZ2VudAotIERlcHVyYWNpw7MgaW50ZWdyYWRhCi0gQ29udHJvbCBkZSB2ZXJzaW9ucyBHaXQKLSBTdXBvcnQgZnJhbWV3b3JrcwoKIyMjIENvbnNvbGEgV2ViIChGMTIpCi0gWGFyeGEgKHBldGljaW9ucyBIVFRQKQotIENTUyAoZXJyb3JzKQotIEphdmFTY3JpcHQgKGRlYnVnKQotIFNlZ3VyZXRhdAoKIyMgOS4gQ29udHJvbCBkZSBWZXJzaW9ucwojIyMgR2l0Ci0gU2VndWltZW50IGRlIGNhbnZpcwotIENvbMK3bGFib3JhY2nDsyBlcXVpcAotIFJlY3VwZXJhY2nDsyB2ZXJzaW9ucwotIEJyYW5jaGluZwoKIyMgMTAuIE1pbGxvcnMgUHLDoGN0aXF1ZXMKLSBFc3TDoG5kYXJkcyBXM0MKLSBWYWxpZGFkb3IgSFRNTAotIEZpdHhlcnMgSmF2YVNjcmlwdCBleHRlcm5zCi0gUHJvZ3Jlc3NpdmUgZW5oYW5jZW1lbnQKLSBTZXBhcmFjacOzIGNvbnRpbmd1dC9wcmVzZW50YWNpw7MvY29tcG9ydGFtZW50CgojIyAxMS4gVGVjbm9sb2dpZXMgTW9kZXJuZXMKIyMjIFByb2dyZXNzaXZlIFdlYiBBcHBzCi0gRnVuY2lvbmVuIG9mZmxpbmUKLSBBZGFwdGFibGVzCi0gU2VndXJlcyAoSFRUUFMpCi0gQWN0dWFsaXR6YWRlcwoKIyMjIEZyYW1ld29ya3MgbW9kZXJucwotIFJlYWN0LmpzIChGYWNlYm9vaykKLSBBbmd1bGFyIChHb29nbGUpCi0gVnVlLmpzCi0gU3ZlbHRlCgojIyMgQmFja2VuZCBtb2Rlcm4KLSBOb2RlLmpzCi0gRXhwcmVzcy5qcwotIE5lc3QuanMKCiMjIDEyLiBDb25jbHVzaW9ucwotIEJhc2Ugc8OybGlkYSBwZXIgZGVzZW52b2x1cGFtZW50Ci0gRWluZXMgcHJvZmVzc2lvbmFscyBkZXMgZGUgbCdpbmljaQotIEV2b2x1Y2nDsyBjb25zdGFudCB0ZWNub2xvZ2llcwotIERvbWluYXIgZm9uYW1lbnRzIGFiYW5zIGZyYW1ld29ya3M= mindmap   root((\"Arquitectures Web\"))     id1[\"1. Introducci\u00f3\"]       id2[\"Model client-servidor\"]       id3[\"Base desenvolupament modern\"]       id4[\"Decisions t\u00e8cniques\"]      id5[\"2. Evoluci\u00f3 Hist\u00f2rica\"]       id6[\"Tim Berners-Lee 1989\"]       id7[\"W3C est\u00e0ndards\"]       id8[\"Tipus p\u00e0gines\"]         id9[\"Est\u00e0tiques\"]         id10[\"Generades servidor\"]         id11[\"AJAX\"]         id12[\"SPA\"]         id13[\"PWA\"]      id14[\"3. Model Client-Servidor\"]       id15[\"Client-side\"]         id16[\"Navegador web\"]         id17[\"Firefox, Chrome, Edge\"]         id18[\"Interacci\u00f3 usuari\"]       id19[\"Server-side\"]         id20[\"Servidors f\u00edsics\"]         id21[\"Apache, NGINX\"]         id22[\"Bases de dades\"]       id23[\"Xarxa\"]         id24[\"Protocol HTTP/HTTPS\"]         id25[\"Comunicaci\u00f3 bidireccional\"]      id26[\"4. Arquitectura Client\"]       id27[\"Tecnologies\"]         id28[\"HTML: estructura\"]         id29[\"CSS: presentaci\u00f3\"]         id30[\"JavaScript: comportament\"]       id31[\"Ecosistema JS\"]         id32[\"Vanilla JS\"]         id33[\"Llibreries: jQuery, React\"]         id34[\"Frameworks: Angular, Vue, Svelte\"]       id35[\"Limitacions\"]         id36[\"Sandbox execuci\u00f3\"]         id37[\"Same-Origin Policy\"]         id38[\"No acc\u00e9s fitxers locals\"]      id39[\"5. Arquitectura Servidor\"]       id40[\"Components\"]         id41[\"Servidor web\"]         id42[\"Llenguatges: PHP, Node, Java\"]         id43[\"Bases de dades\"]       id44[\"Responsabilitats\"]         id45[\"Emmagatzematge persistent\"]         id46[\"L\u00f2gica de negoci\"]         id47[\"Autenticaci\u00f3 i seguretat\"]      id48[\"6. Comparativa\"]       id49[\"Validaci\u00f3 formularis\"]         id50[\"Client: UX instant\u00e0nia\"]         id51[\"Servidor: Seguretat\"]       id52[\"Acc\u00e9s dades\"]         id53[\"Client: Visualitzaci\u00f3\"]         id54[\"Servidor: Persist\u00e8ncia\"]       id55[\"C\u00e0lculs\"]         id56[\"Client: Simples\"]         id57[\"Servidor: Complexos\"]      id58[\"7. Navegadors\"]       id59[\"Principals\"]         id60[\"Edge: Blink\"]         id61[\"Firefox: Gecko\"]         id62[\"Chrome: Blink\"]         id63[\"Safari: WebKit\"]       id64[\"Components\"]         id65[\"Hipervincles\"]         id66[\"Protocols HTTP/HTTPS\"]         id67[\"Est\u00e0ndards HTML\"]      id68[\"8. Eines Desenvolupament\"]       id69[\"IDEs\"]         id70[\"Visual Studio Code\"]         id71[\"WebStorm: JetBrains\"]         id72[\"Llic\u00e8ncies educatives\"]       id73[\"Caracter\u00edstiques WebStorm\"]         id74[\"Autocompletat intel\u00b7ligent\"]         id75[\"Depuraci\u00f3 integrada\"]         id76[\"Control versions Git\"]       id77[\"Consola Web F12\"]         id78[\"Xarxa: peticions HTTP\"]         id79[\"CSS: errors\"]         id80[\"JavaScript: debug\"]      id81[\"9. Control Versions\"]       id82[\"Git\"]         id83[\"Seguiment canvis\"]         id84[\"Col\u00b7laboraci\u00f3 equip\"]         id85[\"Recuperaci\u00f3 versions\"]         id86[\"Branching\"]      id87[\"10. Millors Pr\u00e0ctiques\"]       id88[\"Est\u00e0ndards W3C\"]       id89[\"Fitxers JS externs\"]       id90[\"Progressive enhancement\"]       id91[\"Separaci\u00f3 concerns\"]      id92[\"11. Tecnologies Modernes\"]       id93[\"PWA\"]         id94[\"Funcionen offline\"]         id95[\"Adaptables\"]         id96[\"Segures HTTPS\"]       id97[\"Frameworks frontend\"]         id98[\"React.js: Facebook\"]         id99[\"Angular: Google\"]         id100[\"Vue.js\"]         id101[\"Svelte\"]       id102[\"Backend modern\"]         id103[\"Node.js\"]         id104[\"Express.js\"]         id105[\"Nest.js\"]      id106[\"12. Conclusions\"]       id107[\"Base s\u00f2lida\"]       id108[\"Eines professionals\"]       id109[\"Evoluci\u00f3 constant\"]       id110[\"Dominar fonaments\"]"},{"location":"Moduls/DWEC/mm/DWECUT01_old.mm.html","title":"Mapa Conceptual UT01","text":""},{"location":"Moduls/DWEC/mm/DWECUT01_old.mm.html#mapa-conceptual-ut01","title":"Mapa Conceptual UT01","text":""},{"location":"Moduls/DWEC/mm/DWECUT01_old.mm.html#ut01-arquitectures-de-desenvolupament-web","title":"UT01 Arquitectures de Desenvolupament Web","text":"IyBBcnF1aXRlY3R1cmVzIGRlIERlc2Vudm9sdXBhbWVudCBXZWIKCiMjIDEuIEludHJvZHVjY2nDswoKIyMjIDEuMS4gT2JqZWN0aXUKCi0gQ29tcHJlbmRyZSBlbCBtb2RlbCBjbGllbnQtc2Vydmlkb3IKLSBBbmFsaXR6YXIgdGVjbm9sb2dpZXMgaSByZXNwb25zYWJpbGl0YXRzIGNsaWVudCBpIHNlcnZpZG9yCi0gQXNzZWd1cmFyIHNvbHVjaW9ucyByb2J1c3Rlcywgc2VndXJlcyBpIGVmaWNpZW50cwoKCiMjIyAxLjIuIEV2b2x1Y2nDsyBIaXN0w7JyaWNhCgotIFDDoGdpbmVzIFdlYiBFc3TDoHRpcXVlcwotIFDDoGdpbmVzIEdlbmVyYWRlcyBwZWwgU2Vydmlkb3IKLSBBSkFYCi0gU2luZ2xlIFBhZ2UgQXBwbGljYXRpb25zIChTUEEpCi0gUHJvZ3Jlc3NpdmUgV2ViIEFwcHMgKFBXQSkKCgojIyMgMS4zLiBNb2RlbCBDbGllbnQtU2Vydmlkb3IKCi0gQ2xpZW50LXNpZGU6IG5hdmVnYWRvciBkZSBs4oCZdXN1YXJpCi0gU2VydmVyLXNpZGU6IG1hcXVpbmFyaSArIHByb2dyYW1hcmkgKyBiYXNlIGRlIGRhZGVzCi0gWGFyeGE6IGNvbXVuaWNhY2nDsyBwZXIgSFRUUAoKCiMjIDIuIENvc3RhdCBkZWwgQ2xpZW50IChDbGllbnQtU2lkZSkKCiMjIyAyLjEuIENhcmFjdGVyw61zdGlxdWVzCgotIEV4ZWN1Y2nDsyBhbCBuYXZlZ2Fkb3IgZGUgbOKAmXVzdWFyaQotIERldGVybWluYSBVWCwgaW50ZXJhY3Rpdml0YXQgaSByZXNwb3N0YQoKCiMjIyAyLjIuIFRlY25vbG9naWVzCgotIENvbnRpbmd1dDogSFRNTCAoZXN0cnVjdHVyYSkKLSBQcmVzZW50YWNpw7M6IENTUyAoZXN0aWwpCi0gQ29tcG9ydGFtZW50OiBKYXZhU2NyaXB0IChpbnRlcmFjdGl2aXRhdCkKCgojIyMgMi4zLiBGdW5jaW9uYWxpdGF0cwoKLSBSZWFjY2nDsyBhIGVzZGV2ZW5pbWVudHMgZGUgbOKAmXVzdWFyaQotIE1hbmlwdWxhY2nDsyBkZWwgRE9NCi0gVmFsaWRhY2nDsyBkZSBmb3JtdWxhcmlzCi0gQ29tdW5pY2FjacOzIGFzw61uY3JvbmEgKEFKQVgpCgoKIyMjIDIuNC4gRWNvc2lzdGVtYSBKYXZhU2NyaXB0CgotIFZhbmlsbGEgSlMKLSBCaWJsaW90ZXF1ZXMgKGpRdWVyeSwgUmVhY3QpCi0gRnJhbWV3b3JrcyAoQW5ndWxhciwgVnVlLCBTdmVsdGUpCgoKIyMjIDIuNS4gU2VndXJldGF0IGkgTGltaXRhY2lvbnMKCi0gTm8gcG90IGFjY2VkaXIgYSBmaXR4ZXJzIGRlbCBzaXN0ZW1hCi0gTm8gcG90IG1vZGlmaWNhciBjb25maWd1cmFjaW9ucyBkZWwgbmF2ZWdhZG9yCi0gU2FuZGJveCBpIFNhbWUtT3JpZ2luIFBvbGljeQoKCiMjIDMuIENvc3RhdCBkZWwgU2Vydmlkb3IgKFNlcnZlci1TaWRlKQoKIyMjIDMuMS4gRnVuY2nDswoKLSBQcm9jZXNzYXIgZGFkZXMgaSBhcGxpY2FyIGzDsmdpY2EgZGUgbmVnb2NpCi0gR2VzdGlvbmFyIGJhc2VzIGRlIGRhZGVzIGkgc2VndXJldGF0CgoKIyMjIDMuMi4gQ29tcG9uZW50cwoKLSBTZXJ2aWRvciBXZWI6IEFwYWNoZSwgTkdJTlgsIElJUwotIExsZW5ndWF0Z2VzOiBQSFAsIFB5dGhvbiwgTm9kZS5qcywgSmF2YSwgQysrCi0gQmFzZXMgZGUgZGFkZXM6IGVtbWFnYXR6ZW1hdGdlIHBlcm1hbmVudAoKCiMjIyAzLjMuIFJlc3BvbnNhYmlsaXRhdHMKCi0gRW1tYWdhdHplbWF0Z2UgZGUgZGFkZXMKLSBBdXRlbnRpY2FjacOzIGkgcGVybWlzb3MKLSBBcGxpY2FjacOzIGRlIHJlZ2xlcyBkZSBuZWdvY2kKCgojIyA0LiBDb21wYXJhdGl2YSBDbGllbnQgdnMgU2Vydmlkb3IKCiMjIyA0LjEuIENvbnNpZGVyYWNpb25zCgotIEVxdWlsaWJyaSBlbnRyZSBVWCwgc2VndXJldGF0IGkgcmVuZGltZW50CgoKIyMjIDQuMi4gVGFzcXVlcwoKLSBWYWxpZGFjacOzOiBVWCAoY2xpZW50KSBpIHNlZ3VyZXRhdCAoc2Vydmlkb3IpCi0gQ8OgbGN1bHM6IGTigJlpbnRlcmbDrWNpZSAoY2xpZW50KSB2cyBjcsOtdGljcyAoc2Vydmlkb3IpCi0gTWFuaXB1bGFjacOzIERPTTogbm9tw6lzIGNsaWVudAoKCiMjIyA0LjMuIENvbXBsZW1lbnRhcmlldGF0CgotIFZhbGlkYWNpw7MgZHVhbCAoY2xpZW50ICsgc2Vydmlkb3IpCi0gw5pzIMOycHRpbSBkZSBsZXMgZHVlcyBhcnF1aXRlY3R1cmVzCgoKIyMgNS4gTmF2ZWdhZG9ycyBpIFdlYgoKIyMjIDUuMS4gRGVmaW5pY2nDswoKLSBQcm9ncmFtYXJpIHF1ZSBpbnRlcnByZXRhIEhUTUwgaSBtb3N0cmEgY29udGluZ3V0CgoKIyMjIDUuMS4xLiBDb21wb25lbnRzCgotIEhpcGVydmluY2xlcyBpIG5hdmVnYWNpw7MKLSBQcm90b2NvbHMgKEhUVFAvSFRUUFMpCi0gQ29tcGxpbWVudCBk4oCZZXN0w6BuZGFyZHMgKFczQykKCgojIyMgNS4yLiBOYXZlZ2Fkb3JzCgotIEVkZ2UgKEJsaW5rKQotIEZpcmVmb3ggKEdlY2tvKQotIENocm9tZSAoQmxpbmspCi0gU2FmYXJpIChXZWJLaXQpCi0gT3BlcmEgKEJsaW5rKQoKCiMjIDYuIEVpbmVzIGkgQm9uZXMgUHLDoGN0aXF1ZXMKCiMjIyA2LjEuIEVudG9ybiBkZSBEZXNlbnZvbHVwYW1lbnQKCi0gQ29uZmlndXJhY2nDsyBjb3JyZWN0YSBtaWxsb3JhIGxhIHF1YWxpdGF0IGkgZWZpY2nDqG5jaWEKCgojIyMgNi4yLiBFaW5lcwoKLSBFZGl0b3JzOiBOb3RlcGFkLCBHZWRpdAotIElERXM6IFZTIENvZGUsIFdlYlN0b3JtCgoKIyMjIDYuMy4gV2ViU3Rvcm0KCi0gQ29kaSBpbnRlbMK3bGlnZW50LCBkZXB1cmFjacOzIGludGVncmFkYQotIEdpdCBpIGNvbnRyb2wgZGUgdmVyc2lvbnMKLSBMbGljw6huY2lhIGVkdWNhdGl2YSBKZXRCcmFpbnMKCgojIyMgNi40LiBOYXZlZ2Fkb3JzIGkgRGVwdXJhY2nDswoKLSBDb25zb2xhIChGMTIpOiB4YXJ4YSwgQ1NTLCBKUywgc2VndXJldGF0LCByZWdpc3RyZQoKCiMjIyA2LjUuIENvbnRyb2wgZGUgVmVyc2lvbnMKCi0gR2l0OiBzZWd1aW1lbnQsIGNvbMK3bGFib3JhY2nDsywgcmVjdXBlcmFjacOzLCBicmFuY2hpbmcKCgojIyMgNi42LiBNaWxsb3JzIFByw6BjdGlxdWVzCgotIENvZGkgdsOgbGlkIChXM0MpCi0gSlMgZW4gZml0eGVycyBleHRlcm5zCi0gTWlsbG9yYSBwcm9ncmVzc2l2YQotIFNlcGFyYWNpw7MgSFRNTCAvIENTUyAvIEpTCgoKIyMgNy4gVGVjbm9sb2dpZXMgTW9kZXJuZXMKCiMjIyA3LjEuIFBXQQoKLSBQcm9ncmVzc2l2ZXMKLSBBZGFwdGFibGVzCi0gT2ZmbGluZQotIEhUVFBTIHNlZ3VyZXMKCgojIyMgNy4yLiBFY29zaXN0ZW1hIEpTIE1vZGVybgoKLSBGcm9udGVuZDogUmVhY3QsIEFuZ3VsYXIsIFZ1ZSwgU3ZlbHRlCi0gQmFja2VuZDogTm9kZS5qcywgRXhwcmVzcywgTmVzdC5qcwoKCiMjIDguIENvbmNsdXNpb25zCgojIyMgOC4xLiBTw61udGVzaQoKLSBCYXNlIGRlbCBkZXNlbnZvbHVwYW1lbnQgd2ViIG1vZGVybgotIFJlcGFydGltZW50IGRlIHRhc3F1ZXMgY2xpZW50L3NlcnZpZG9yCgoKIyMjIDguMi4gRW50b3JuIGkgUHLDoGN0aXF1ZXMKCi0gw5pzIGTigJllaW5lcyBwcm9mZXNzaW9uYWxzCi0gQm9uZXMgcHLDoGN0aXF1ZXMgZGUgZGVzZW52b2x1cGFtZW50CgoKIyMjIDguMy4gRnV0dXIKCi0gRXZvbHVjacOzIGFtYiBQV0EgaSBmcmFtZXdvcmtzIEpTCgoKIyMjIDguNC4gUmVjb21hbmFjaW9ucwoKLSBEb21pbmFyIEhUTUwsIENTUywgSlMKLSBVc2FyIFdlYlN0b3JtIGkgR2l0Ci0gTWFudGVuaXIgY29uZWl4ZW1lbnRzIGFjdHVhbGl0emF0cw=="},{"location":"Moduls/DWEC/mm/DWECUT02.mm.html","title":"Mapa conceptual","text":""},{"location":"Moduls/DWEC/mm/DWECUT02.mm.html#mapa-conceptual-ut02","title":"Mapa Conceptual UT02","text":""},{"location":"Moduls/DWEC/mm/DWECUT02.mm.html#ut02-introduccio-a-javascript","title":"UT02 Introducci\u00f3 a JavaScript","text":"IyBVVDAyIC0gSW50cm9kdWNjacOzIGEgSmF2YVNjcmlwdAoKIyMgMS4gSW50cm9kdWNjacOzCi0gSmF2YVNjcmlwdCBjb20gYSBsbGVuZ3VhdGdlIGNsaWVudAotIFZlcnNpw7MgRVM2IChFQ01BU2NyaXB0IDIwMTUpCi0gw5pzIGVuIG5hdmVnYWRvcnMgaSBlbiBOb2RlSlMKCiMjIDIuIEhvbGEgbcOzbiBpIGNvbWVudGFyaXMKLSBFdGlxdWV0YSBgPHNjcmlwdD5gCi0gQ29tZW50YXJpczoKICAgIC0gVW5hIGzDrW5pYTogYC8vYAogICAgLSBNdWx0aWzDrW5pYTogYC8qICovYAotIGBjb25zb2xlLmxvZygpYCBwZXIgbW9zdHJhciBhIGxhIGNvbnNvbGEKLSBgYWxlcnQoKWAgcGVyIG1vc3RyYXIgbWlzc2F0Z2VzIGVtZXJnZW50cwoKIyMgMy4gVmFyaWFibGVzLCBjb25zdGFudHMgaSBhcnJheXMKLSBEZWNsYXJhY2nDszoKICAgIC0gYGxldGAgKMOgbWJpdCBkZSBibG9jKQogICAgLSBgdmFyYCAow6BtYml0IGRlIGZ1bmNpw7MpCiAgICAtIGBjb25zdGAgKHZhbG9yIGludmFyaWFibGUpCi0gVGlwdXMgZGUgZGFkZXM6CiAgICAtIG51bWJlciwgYmlnaW50LCBib29sZWFuLCBzdHJpbmcKICAgIC0gdW5kZWZpbmVkLCBudWxsLCBzeW1ib2wsIG9iamVjdCwgZnVuY3Rpb24KLSBDb2VyY2nDsyBkZSB0aXB1czoKICAgIC0gaW1wbMOtY2l0YSB2cyBleHBsw61jaXRhCiAgICAtIGB0eXBlb2ZgIHBlciBpZGVudGlmaWNhciB0aXB1cwotIEFycmF5czoKICAgIC0gRGVjbGFyYWNpw7MgYW1iIGBbXWAgbyBgbmV3IEFycmF5KClgCiAgICAtIFByb3BpZXRhdCBgLmxlbmd0aGAKICAgIC0gQXJyYXlzIG11bHRpZGltZW5zaW9uYWxzIGFtYiBgLm1hcCgpYAogICAgLSBDw7JwaWEgYW1iIGAuLi5gIG8gYEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoLi4uKSlgCgojIyA0LiBFbnRyYWRhIGkgc29ydGlkYSBlbiBuYXZlZ2Fkb3JzCi0gYGFsZXJ0KClgLCBgY29uc29sZS5sb2coKWAsIGBjb25maXJtKClgLCBgcHJvbXB0KClgCi0gSW50ZXJhY2Npw7MgYW1iIGzigJl1c3VhcmkKCiMjIDUuIE9wZXJhZG9ycwotIEFzc2lnbmFjacOzOiBgPWAsIGArPWAsIGAtPWAsIGAqPWAsIGAvPWAsIGAlYAotIEFyaXRtw6h0aWNzOiBgK2AsIGAtYCwgYCpgLCBgL2AsIGAlYAotIENvbXBhcmFjacOzOiBgPT09YCwgYCE9PWAsIGA9PWAsIGAhPWAsIGA+YCwgYDxgLCBgPj1gLCBgPD1gCi0gTMOyZ2ljczogYCYmYCwgYHx8YCwgYCFgCgojIyA2LiBFc3RydWN0dXJlcyBkZSBjb250cm9sCi0gYGlmYCwgYGVsc2VgLCBgaWYuLi5lbHNlYCBuaXVhdHMKLSBDb21wYXJhY2lvbnMgZXN0cmljdGVzIGFtYiBgPT09YCBpIGAhPT1gCgojIyA3LiBFc3RydWN0dXJlcyByZXBldGl0aXZlcyAoQnVjbGVzKQotIGBmb3JgLCBgd2hpbGVgLCBgZG8uLi53aGlsZWAKLSBgYnJlYWtgIGkgYGNvbnRpbnVlYCBwZXIgY29udHJvbGFyIGVsIGZsdXgKCiMjIDguIEZ1bmNpb25zCi0gRGVmaW5pY2nDsyBhbWIgYGZ1bmN0aW9uYAotIFBhcsOgbWV0cmVzIGkgYHJldHVybmAKLSBQYXLDoG1ldHJlcyBSRVNUOiBgLi4uYXJnc2AKLSBDcmlkYSBhIGZ1bmNpb25zCgojIyA5LiBGdW5jaW9ucyBmbGV0eGEgKGFycm93IGZ1bmN0aW9ucykKLSBTaW50YXhpIGNvbXBhY3RhOiBgKHBhcmFtcykgPT4geyAuLi4gfWAKLSDDmnMgYW1iIGBtYXAoKWAgaSBgcmVkdWNlKClgCgojIyAxMC4gQ2xhc3NlcyBhIEphdmFTY3JpcHQKLSBEZWZpbmljacOzIGFtYiBgY2xhc3NgCi0gQ29uc3RydWN0b3IsIG3DqHRvZGVzLCBnZXR0ZXJzCi0gTcOodG9kZXMgZXN0w6B0aWNzCgojIyAxMS4gTm92ZXRhdHMgRVM2Ci0gSXRlcmFkb3JzIGkgZ2VuZXJhZG9ycwotIE9wZXJhZG9yIHNwcmVhZCBgLi4uYAotIFRlbXBsYXRlIHN0cmluZ3MKLSBgZm9yLi4ub2ZgCi0gVGFpbCBDYWxsIE9wdGltaXphdGlvbgoKIyMgMTIuIE1hbmlwdWxhY2nDsyBkZWwgRE9NCi0gYGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKClgCi0gTW9kaWZpY2FjacOzIGRlIHByb3BpZXRhdHMgSFRNTAotIEZ1bmNpb25zIHBlciBjYW52aWFyIGltYXRnZXM= mindmap   root((\"Javascript ES6\"))     id1[\"Introducci\u00f3\"]       id2[\"ECMAScript 2015\"]       id3[\"NodeJS\"]       id4[\"Execuci\u00f3 al navegador\"]      id5[\"Sintaxi B\u00e0sica\"]       id6[\"Hola m\u00f3n\"]         id7[\"console.log\"]         id8[\"alert\"]         id9[\"Script tag\"]       id10[\"Comentaris\"]         id11[\"L\u00ednia simple //\"]         id12[\"Multil\u00ednia /* */\"]       id13[\"Fitxers externs .js\"]      id14[\"Variables i Constants\"]       id15[\"let\"]         id16[\"\u00c0mbit de bloc\"]       id17[\"var\"]         id18[\"\u00c0mbit de funci\u00f3\"]       id19[\"const\"]         id20[\"Valors immutables\"]       id21[\"Tipus de dades\"]         id22[\"number\"]         id23[\"bigint\"]         id24[\"boolean\"]         id25[\"string\"]       id26[\"Coerci\u00f3\"]         id27[\"Impl\u00edcita\"]         id28[\"Expl\u00edcita\"]       id29[\"Arrays\"]         id30[\"Declaraci\u00f3\"]         id31[\"length\"]         id32[\"Clonaci\u00f3\"]      id33[\"Operadors\"]       id34[\"Assignaci\u00f3\"]         id35[\"=, +=, -=, *=, /=\"]       id36[\"Aritm\u00e8tics\"]         id37[\"+, -, *, /, %\"]         id38[\"++, --\"]       id39[\"Comparaci\u00f3\"]         id40[\"===, !==\"]         id41[\"==, !=\"]         id42[\"&gt;, &lt;, &gt;=, &lt;=\"]       id43[\"L\u00f2gics\"]         id44[\"&amp;&amp; AND\"]         id45[\"|| OR\"]         id46[\"! NOT\"]      id47[\"Estructures Control\"]       id48[\"Condicionals\"]         id49[\"if/else\"]         id50[\"Niuades\"]       id51[\"Bucles\"]         id52[\"for\"]         id53[\"while\"]         id54[\"do-while\"]         id55[\"break\"]         id56[\"continue\"]      id57[\"Funcions\"]       id58[\"function nom()\"]       id59[\"Par\u00e0metres\"]         id60[\"Per defecte\"]         id61[\"REST ...\"]       id62[\"return\"]       id63[\"Arrow Functions\"]         id64[\"Sintaxi compacta\"]         id65[\"map\"]         id66[\"reduce\"]      id67[\"Classes\"]       id68[\"class\"]       id69[\"constructor\"]       id70[\"M\u00e8todes\"]         id71[\"Normals\"]         id72[\"Est\u00e0tics\"]         id73[\"Getters\"]      id74[\"Entrada/Sortida\"]       id75[\"alert()\"]       id76[\"prompt()\"]       id77[\"confirm()\"]       id78[\"console.log()\"]      id79[\"DOM Manipulaci\u00f3\"]       id80[\"getElementById()\"]       id81[\"Modificar propietats\"]       id82[\"Events\"]      id83[\"Mode Estricte\"]       id84[\"use strict\"]       id85[\"Variables declarades\"]       id86[\"Restriccions\"]"},{"location":"Moduls/DWEC/mm/DWECUT03.mm.html","title":"Mapa Conceptual UT03","text":""},{"location":"Moduls/DWEC/mm/DWECUT03.mm.html#mapa-conceptual-ut03","title":"Mapa Conceptual UT03","text":""},{"location":"Moduls/DWEC/mm/DWECUT03.mm.html#ut03-model-dobjectes-predefinits-a-javascript","title":"UT03 Model d\u2019objectes predefinits a JavaScript","text":"IyBVVDAzLiBNb2RlbCBkJ09iamVjdGVzIFByZWRlZmluaXRzIGEgSmF2YVNjcmlwdAoKIyMgMS4gT2JqZWN0ZXMgZCdBbHQgTml2ZWxsCi0gSW50cm9kdWNjacOzIGFsIE1vZGVsIGQnT2JqZWN0ZXMgZGVsIERvY3VtZW50IChET00pCi0gRGVmaW5pY2nDsyBkJ29iamVjdGU6IHByb3BpZXRhdHMgaSBtw6h0b2RlcwotIEFjY8OpczogYG5vbU9iamVjdGUucHJvcGlldGF0YCBpIGBub21PYmplY3RlLm1ldG9kZSgpYAotIEplcmFycXVpYSBkJ29iamVjdGVzCgojIyMgMS4xIE9iamVjdGUgd2luZG93Ci0gQ29udGVuaWRvciBwcmluY2lwYWwgZGVsIG5hdmVnYWRvcgotIFRyZXMgZm9ybWVzIGQnYWNjw6lzCiAgLSBgd2luZG93LnByb3BpZXRhdGAKICAtIGBzZWxmLnByb3BpZXRhdGAKICAtIGBwcm9waWV0YXRgIChvbWl0aW50IHdpbmRvdykKCiMjIyMgMS4xLjEgR2VzdGnDsyBkZSBmaW5lc3RyZXMKLSBgd2luZG93Lm9wZW4oKWA6IGNyZWEgbm92ZXMgZmluZXN0cmVzCi0gUGFyw6BtZXRyZXM6IFVSTCwgbm9tLCBhcGFyZW7Dp2EKLSBgd2luZG93LmNsb3NlKClgOiB0YW5jYSBmaW5lc3RyZXMKLSBFeGVtcGxlIHByw6BjdGljIGQnb2JlcnR1cmEgaSB0YW5jYW1lbnQKCiMjIyMgMS4xLjIgUHJvcGlldGF0cyBpIG3DqHRvZGVzCi0gUHJvcGlldGF0cyBwcmluY2lwYWxzCiAgLSBjbG9zZWQsIGRlZmF1bHRTdGF0dXMsIGRvY3VtZW50CiAgLSBmcmFtZXMsIGhpc3RvcnksIGxvY2F0aW9uCiAgLSBuYW1lLCBuYXZpZ2F0b3IsIG9wZW5lcgotIE3DqHRvZGVzIHByaW5jaXBhbHMKICAtIGFsZXJ0KCksIGJsdXIoKSwgY2xvc2UoKQogIC0gY29uZmlybSgpLCBmb2N1cygpLCBvcGVuKCkKICAtIHByb21wdCgpLCBzZXRJbnRlcnZhbCgpLCBjbGVhckludGVydmFsKCkKCiMjIyAxLjIgT2JqZWN0ZSBsb2NhdGlvbgotIENvbnTDqSBpbmZvcm1hY2nDsyBzb2JyZSBsYSBVUkwgYWN0dWFsCi0gUGFydCBkZSB3aW5kb3c6IGB3aW5kb3cubG9jYXRpb25gCgojIyMjIFByb3BpZXRhdHMKLSBoYXNoLCBob3N0LCBob3N0bmFtZQotIGhyZWYsIHBhdGhuYW1lLCBwb3J0Ci0gcHJvdG9jb2wsIHNlYXJjaAoKIyMjIyBNw6h0b2RlcwotIGFzc2lnbigpOiBjYXJyZWdhIG5vdSBkb2N1bWVudAotIHJlbG9hZCgpOiByZWNhcnJlZ2EgVVJMCi0gcmVwbGFjZSgpOiByZWVtcGxhw6dhIGhpc3RvcmlhbAoKIyMjIDEuMyBPYmplY3RlIG5hdmlnYXRvcgotIEluZm9ybWFjacOzIHNvYnJlIGVsIG5hdmVnYWRvcgoKIyMjIyBQcm9waWV0YXRzCi0gYXBwQ29kZU5hbWUsIGFwcE5hbWUsIGFwcFZlcnNpb24KLSBjb29raWVFbmFibGVkLCBwbGF0Zm9ybSwgdXNlckFnZW50CgojIyMjIE3DqHRvZGVzCi0gamF2YUVuYWJsZWQoKTogY29tcHJvdmEgc3Vwb3J0IEphdmEKCiMjIyAxLjQgT2JqZWN0ZSBkb2N1bWVudAotIFJlcHJlc2VudGEgZWwgZG9jdW1lbnQgY2FycmVnYXQKLSBBY2PDqXM6IGB3aW5kb3cuZG9jdW1lbnRgIG8gYGRvY3VtZW50YAoKIyMjIyBDb2zCt2xlY2Npb25zCi0gYW5jaG9yc1tdOiBoaXBlcmVubGxhw6dvcwotIGZvcm1zW106IGZvcm11bGFyaXMKLSBpbWFnZXNbXTogaW1hdGdlcwotIGxpbmtzW106IGVubGxhw6dvcwoKIyMjIyBQcm9waWV0YXRzCi0gY29va2llLCBkb21haW4sIHJlZmVycmVyCi0gdGl0bGUsIFVSTAoKIyMjIyBNw6h0b2RlcwotIGNsb3NlKCksIG9wZW4oKQotIGdldEVsZW1lbnRCeUlkKCkKLSBnZXRFbGVtZW50c0J5TmFtZSgpCi0gZ2V0RWxlbWVudHNCeVRhZ05hbWUoKQotIHdyaXRlKCksIHdyaXRlbG4oKQoKIyMgMi4gT2JqZWN0ZXMgTmFkaXVzCgojIyMgMi4xIE9iamVjdGUgU3RyaW5nCi0gQ2FkZW5lcyBkZSB0ZXh0IGFtYiBjb21ldGVzIHNpbXBsZXMgbyBkb2JsZXMKLSBQbGFudGlsbGVzIGRlIGNhZGVuZXMKLSBDYXLDoGN0ZXJzIGVzcGVjaWFscyAoZXNjYXBhbWVudCkKICAtIFwiLCBcJywgXFwsIFxiCiAgLSBcdCwgXG4sIFxyLCBcZgoKIyMjIyBDcmVhY2nDswotIGBuZXcgU3RyaW5nKCd0ZXh0JylgCi0gYCJ0ZXh0ImAgbyBgJ3RleHQnYAotIFBsYW50aWxsZXM6IGBgJHt2YXJpYWJsZX1gYAoKIyMjIyBQcm9waWV0YXQKLSBsZW5ndGg6IGxvbmdpdHVkIGNhZGVuYQoKIyMjIyBNw6h0b2RlcyBwcmluY2lwYWxzCi0gY2hhckF0KCksIGNoYXJDb2RlQXQoKQotIGNvbmNhdCgpLCBpbmRleE9mKCksIGxhc3RJbmRleE9mKCkKLSBtYXRjaCgpLCByZXBsYWNlKCksIHNlYXJjaCgpCi0gc2xpY2UoKSwgc3BsaXQoKQotIHN1YnN0cigpLCBzdWJzdHJpbmcoKQotIHRvTG93ZXJDYXNlKCksIHRvVXBwZXJDYXNlKCkKCiMjIyAyLjIgT2JqZWN0ZSBNYXRoCi0gT3BlcmFjaW9ucyBtYXRlbcOgdGlxdWVzCi0gTm8gdMOpIGNvbnN0cnVjdG9yCi0gQWNjw6lzOiBgTWF0aC5wcm9waWV0YXRgIG8gYE1hdGgubWV0b2RlKClgCgojIyMjIFByb3BpZXRhdHMgKGNvbnN0YW50cykKLSBFLCBMTjIsIExOMTAKLSBMT0cyRSwgTE9HMTBFCi0gUEksIFNRUlQyCgojIyMjIE3DqHRvZGVzIHByaW5jaXBhbHMKLSBhYnMoKSwgY2VpbCgpLCBmbG9vcigpCi0gcm91bmQoKSwgcmFuZG9tKCkKLSBtYXgoKSwgbWluKCkKLSBwb3coKSwgc3FydCgpCi0gc2luKCksIGNvcygpLCB0YW4oKQotIGFzaW4oKSwgYWNvcygpLCBhdGFuKCkKLSBsb2coKQoKIyMjIDIuMyBPYmplY3RlIE51bWJlcgotIEVtYm9sY2FsbCBwZXIgdmFsb3JzIG51bcOocmljcwotIENyZWFjacOzOiBgbmV3IE51bWJlcigpYAotIERvYmxlIHByZWNpc2nDsyA2NCBiaXRzCgojIyMjIFByb3BpZXRhdHMKLSBjb25zdHJ1Y3RvcgotIE1BWF9WQUxVRSwgTUlOX1ZBTFVFCi0gTkVHQVRJVkVfSU5GSU5JVFksIFBPU0lUSVZFX0lORklOSVRZCi0gcHJvdG90eXBlCgojIyMjIE3DqHRvZGVzCi0gdG9FeHBvbmVudGlhbCgpOiBub3RhY2nDsyBleHBvbmVuY2lhbAotIHRvRml4ZWQoKTogZGVjaW1hbHMgZml4b3MKLSB0b1ByZWNpc2lvbigpOiBsb25naXR1ZCBlc3BlY8OtZmljYQotIHRvU3RyaW5nKCk6IGNvbnZlcnNpw7MgYSBjYWRlbmEgKGJhc2UgMiwgOCwgMTYpCi0gdmFsdWVPZigpOiB2YWxvciBwcmltaXRpdQoKIyMjIDIuNCBPYmplY3RlIEJvb2xlYW4KLSBWYWxvcnMgbMOyZ2ljczogdHJ1ZSBvIGZhbHNlCi0gQ29udmVyc2nDsyBkZSB2YWxvcnMgbm8gbMOyZ2ljcwoKIyMjIyBQcm9waWV0YXRzCi0gY29uc3RydWN0b3IKLSBwcm90b3R5cGUKCiMjIyMgTcOodG9kZXMKLSB0b1N0cmluZygpOiBjb252ZXJ0ZWl4IGEgY2FkZW5hCi0gdmFsdWVPZigpOiB2YWxvciBwcmltaXRpdQoKIyMjIDIuNSBPYmplY3RlIERhdGUKLSBUcmViYWxsIGFtYiBkYXRlcyBpIGhvcmVzCi0gQ3JlYWNpw7M6IGBuZXcgRGF0ZSgpYAoKIyMjIyBGb3JtZXMgZCdpbnN0w6BuY2lhCi0gYG5ldyBEYXRlKClgCi0gYG5ldyBEYXRlKG1pbGlzZWdvbnMpYAotIGBuZXcgRGF0ZShjYWRlbmEpYAotIGBuZXcgRGF0ZShhbnksIG1lcywgZGlhLCBob3JlcywgbWludXRzLCBzZWdvbnMsIG1zKWAKCiMjIyMgUHJvcGlldGF0cwotIGNvbnN0cnVjdG9yCi0gcHJvdG90eXBlCgojIyMjIE3DqHRvZGVzIHByaW5jaXBhbHMgKGdldCkKLSBnZXREYXRlKCksIGdldERheSgpCi0gZ2V0RnVsbFllYXIoKSwgZ2V0TW9udGgoKQotIGdldEhvdXJzKCksIGdldE1pbnV0ZXMoKSwgZ2V0U2Vjb25kcygpCi0gZ2V0TWlsbGlzZWNvbmRzKCkKLSBnZXRUaW1lKCkKLSBnZXRUaW1lem9uZU9mZnNldCgpCi0gVmVyc2lvbnMgVVRDOiBnZXRVVENEYXRlKCksIGdldFVUQ0RheSgpLCBldGMuCgojIyMjIE3DqHRvZGVzIHByaW5jaXBhbHMgKHNldCkKLSBzZXREYXRlKCksIHNldEZ1bGxZZWFyKCkKLSBzZXRIb3VycygpLCBzZXRNaW51dGVzKCkKLSBJIG3DqXMuLi4KCiMjIENvbmNlcHRlcyBjbGF1Ci0gSmVyYXJxdWlhIGQnb2JqZWN0ZXMgSmF2YVNjcmlwdAotIFByb3BpZXRhdHMgdnMgTcOodG9kZXMKLSBBY2PDqXMgYSBvYmplY3RlcyBkZWwgRE9NCi0gVW5pY29kZSBwZXIgY2Fyw6BjdGVycyBlc3BlY2lhbHMKLSBTaXN0ZW1lcyBudW3DqHJpY3M6IGJpbmFyaSAoYmFzZSAyKSwgb2N0YWwgKGJhc2UgOCksIGhleGFkZWNpbWFsIChiYXNlIDE2KQ== mindmap   root((Objectes JavaScript))     \"1. Objectes Alt Nivell\"       \"Objecte window\"         \"Contenidor principal\"         \"Acc\u00e9s: window, self, o ometre\"         \"Gesti\u00f3 finestres\"           id1[\"open(): crea finestres\"]           id2[\"close(): tanca finestres\"]         \"Propietats\"           \"closed, document, frames\"           \"history, location, navigator\"         \"M\u00e8todes\"           id3[\"alert(), confirm(), prompt()\"]           \"focus(), blur()\"           \"setInterval(), clearInterval()\"        \"Objecte location\"         \"Informaci\u00f3 URL actual\"         \"Propietats\"           \"hash, host, hostname\"           \"href, pathname, port\"           \"protocol, search\"         \"M\u00e8todes\"           \"assign(), reload(), replace()\"        \"Objecte navigator\"         \"Informaci\u00f3 navegador\"         \"Propietats\"           \"appName, appVersion\"           \"platform, userAgent\"           \"cookieEnabled\"         \"M\u00e8todes\"           \"javaEnabled()\"        \"Objecte document\"         \"Document carregat\"         \"Col\u00b7leccions\"           \"anchors[], forms[]\"           \"images[], links[]\"         \"Propietats\"           \"cookie, domain, title, URL\"         \"M\u00e8todes\"           \"getElementById()\"           \"getElementsByName()\"           \"getElementsByTagName()\"           \"write(), writeln()\"      \"2. Objectes Nadius\"       \"Objecte String\"         \"Cadenes de text\"         \"Creaci\u00f3\"           \"new String()\"           \"Cometes simples o dobles\"           \"Plantilles de cadenes\"         \"Car\u00e0cters especials\"           \"\\\\n, \\\\t, \\\\r\"           \"\\\\', \\\\\\\", \\\\\\\\\"         \"Propietat\"           \"length\"         \"M\u00e8todes\"           \"charAt(), charCodeAt()\"           \"concat(), indexOf()\"           \"replace(), search()\"           \"slice(), split()\"           \"toLowerCase(), toUpperCase()\"        \"Objecte Math\"         \"Operacions matem\u00e0tiques\"         \"No t\u00e9 constructor\"         \"Constants\"           \"E, PI\"           \"LN2, LN10\"           \"SQRT2\"         \"M\u00e8todes\"           \"abs(), ceil(), floor()\"           \"round(), random()\"           \"max(), min()\"           \"pow(), sqrt()\"           \"sin(), cos(), tan()\"        \"Objecte Number\"         \"Embolcall valors num\u00e8rics\"         \"Doble precisi\u00f3 64 bits\"         \"Propietats\"           \"MAX_VALUE, MIN_VALUE\"           \"POSITIVE_INFINITY\"           \"NEGATIVE_INFINITY\"         \"M\u00e8todes\"           \"toExponential()\"           \"toFixed()\"           \"toPrecision()\"           \"toString(): base 2, 8, 16\"        \"Objecte Boolean\"         \"Valors l\u00f2gics true/false\"         \"Propietats\"           \"constructor, prototype\"         \"M\u00e8todes\"           \"toString(), valueOf()\"        \"Objecte Date\"         \"Dates i hores\"         \"Creaci\u00f3\"           \"new Date()\"           \"new Date(milisegons)\"           \"new Date(cadena)\"           \"new Date(any, mes, dia...)\"         \"M\u00e8todes get\"           \"getDate(), getDay()\"           \"getFullYear(), getMonth()\"           \"getHours(), getMinutes()\"           \"getTime()\"         \"M\u00e8todes set\"           \"setDate(), setFullYear()\"           \"setHours(), setMinutes()\""},{"location":"Moduls/DWEC/mm/DWECUT03.mm_old.html","title":"Mapa Conceptual UT03","text":""},{"location":"Moduls/DWEC/mm/DWECUT03.mm_old.html#mapa-conceptual-ut03","title":"Mapa Conceptual UT03","text":""},{"location":"Moduls/DWEC/mm/DWECUT03.mm_old.html#ut03-model-dobjectes-predefinits-a-javascript","title":"UT03 Model d\u2019objectes predefinits a JavaScript","text":"IyBVVDAzIC0gTW9kZWwgZOKAmW9iamVjdGVzIHByZWRlZmluaXRzIGEgSmF2YVNjcmlwdAoKIyMgMS4gT2JqZWN0ZXMgZCdhbHQgbml2ZWxsCgojIyMgMS4xIE9iamVjdGUgd2luZG93Ci0gQ29udGVuaWRvciBwcmluY2lwYWwgZGVsIGNvbnRpbmd1dCBkZWwgbmF2ZWdhZG9yCi0gUHJvcGlldGF0czoKICAtIGNsb3NlZAogIC0gZGVmYXVsdFN0YXR1cwogIC0gZG9jdW1lbnQKICAtIGZyYW1lcwogIC0gaGlzdG9yeQogIC0gbGVuZ3RoCiAgLSBsb2NhdGlvbgogIC0gbmFtZQogIC0gbmF2aWdhdG9yCiAgLSBvcGVuZXIKICAtIHBhcmVudAogIC0gc2VsZgogIC0gc3RhdHVzCi0gTcOodG9kZXM6CiAgLSBhbGVydCgpCiAgLSBibHVyKCkKICAtIGNsZWFySW50ZXJ2YWwoKQogIC0gc2V0SW50ZXJ2YWwoKQogIC0gY2xvc2UoKQogIC0gY29uZmlybSgpCiAgLSBmb2N1cygpCiAgLSBvcGVuKCkKICAtIHByb21wdCgpCi0gUmVmZXLDqG5jaWVzOgogIC0gd2luZG93LnByb3BpZXRhdCAvIHdpbmRvdy5tw6h0b2RlKCkKICAtIHNlbGYucHJvcGlldGF0IC8gc2VsZi5tw6h0b2RlKCkKCiMjIyAxLjIgT2JqZWN0ZSBsb2NhdGlvbgotIEluZm9ybWFjacOzIHNvYnJlIGxhIFVSTCBhY3R1YWwKLSBQcm9waWV0YXRzOgogIC0gaGFzaAogIC0gaG9zdAogIC0gaG9zdG5hbWUKICAtIGhyZWYKICAtIHBhdGhuYW1lCiAgLSBwb3J0CiAgLSBwcm90b2NvbAogIC0gc2VhcmNoCi0gTcOodG9kZXM6CiAgLSBhc3NpZ24oKQogIC0gcmVsb2FkKCkKICAtIHJlcGxhY2UoKQoKIyMjIDEuMyBPYmplY3RlIG5hdmlnYXRvcgotIEluZm9ybWFjacOzIHNvYnJlIGVsIG5hdmVnYWRvcgotIFByb3BpZXRhdHM6CiAgLSBhcHBDb2RlTmFtZQogIC0gYXBwTmFtZQogIC0gYXBwVmVyc2lvbgogIC0gY29va2llRW5hYmxlZAogIC0gcGxhdGZvcm0KICAtIHVzZXJBZ2VudAotIE3DqHRvZGVzOgogIC0gamF2YUVuYWJsZWQoKQoKIyMjIDEuNCBPYmplY3RlIGRvY3VtZW50Ci0gUmVwcmVzZW50YSBlbCBkb2N1bWVudCBIVE1MIGNhcnJlZ2F0Ci0gQ29swrdsZWNjaW9uczoKICAtIGFuY2hvcnNbXQogIC0gZm9ybXNbXQogIC0gaW1hZ2VzW10KICAtIGxpbmtzW10KLSBQcm9waWV0YXRzOgogIC0gY29va2llCiAgLSBkb21haW4KICAtIHJlZmVycmVyCiAgLSB0aXRsZQogIC0gVVJMCi0gTcOodG9kZXM6CiAgLSBjbG9zZSgpCiAgLSBnZXRFbGVtZW50QnlJZCgpCiAgLSBnZXRFbGVtZW50c0J5TmFtZSgpCiAgLSBnZXRFbGVtZW50c0J5VGFnTmFtZSgpCiAgLSBvcGVuKCkKICAtIHdyaXRlKCkKICAtIHdyaXRlbG4oKQoKIyMgMi4gT2JqZWN0ZXMgbmFkaXVzIGEgSmF2YVNjcmlwdAoKIyMjIDIuMSBPYmplY3RlIFN0cmluZwotIFByb3BpZXRhdDoKICAtIGxlbmd0aAotIE3DqHRvZGVzOgogIC0gY2hhckF0KCkKICAtIGNoYXJDb2RlQXQoKQogIC0gY29uY2F0KCkKICAtIGZyb21DaGFyQ29kZSgpCiAgLSBpbmRleE9mKCkKICAtIGxhc3RJbmRleE9mKCkKICAtIG1hdGNoKCkKICAtIHJlcGxhY2UoKQogIC0gc2VhcmNoKCkKICAtIHNsaWNlKCkKICAtIHNwbGl0KCkKICAtIHN1YnN0cigpCiAgLSBzdWJzdHJpbmcoKQogIC0gdG9Mb3dlckNhc2UoKQogIC0gdG9VcHBlckNhc2UoKQoKIyMjIDIuMiBPYmplY3RlIE1hdGgKLSBQcm9waWV0YXRzOgogIC0gRQogIC0gTE4yCiAgLSBMTjEwCiAgLSBMT0cyRQogIC0gTE9HMTBFCiAgLSBQSQogIC0gU1FSVDIKLSBNw6h0b2RlczoKICAtIGFicygpCiAgLSBhY29zKCkKICAtIGFzaW4oKQogIC0gYXRhbigpCiAgLSBhdGFuMigpCiAgLSBjZWlsKCkKICAtIGNvcygpCiAgLSBmbG9vcigpCiAgLSBsb2coKQogIC0gbWF4KCkKICAtIG1pbigpCiAgLSBwb3coKQogIC0gcmFuZG9tKCkKICAtIHJvdW5kKCkKICAtIHNpbigpCiAgLSBzcXJ0KCkKICAtIHRhbigpCgojIyMgMi4zIE9iamVjdGUgTnVtYmVyCi0gUHJvcGlldGF0czoKICAtIGNvbnN0cnVjdG9yCiAgLSBNQVhfVkFMVUUKICAtIE1JTl9WQUxVRQogIC0gTkVHQVRJVkVfSU5GSU5JVFkKICAtIFBPU0lUSVZFX0lORklOSVRZCiAgLSBwcm90b3R5cGUKLSBNw6h0b2RlczoKICAtIHRvRXhwb25lbnRpYWwoKQogIC0gdG9GaXhlZCgpCiAgLSB0b1ByZWNpc2lvbigpCiAgLSB0b1N0cmluZygpCiAgLSB2YWx1ZU9mKCkKCiMjIyAyLjQgT2JqZWN0ZSBCb29sZWFuCi0gUHJvcGlldGF0czoKICAtIGNvbnN0cnVjdG9yCiAgLSBwcm90b3R5cGUKLSBNw6h0b2RlczoKICAtIHRvU3RyaW5nKCkKICAtIHZhbHVlT2YoKQoKIyMjIDIuNSBPYmplY3RlIERhdGUKLSBQcm9waWV0YXRzOgogIC0gY29uc3RydWN0b3IKICAtIHByb3RvdHlwZQotIEluc3RhbmNpYWNpw7M6CiAgLSBuZXcgRGF0ZSgpCiAgLSBuZXcgRGF0ZShtaWxpc2Vnb25zKQogIC0gbmV3IERhdGUoY2FkZW5hKQogIC0gbmV3IERhdGUoYW55LCBtZXMsIGRpYSwgaG9yZXMsIG1pbnV0cywgc2Vnb25zLCBtaWzCt2xpc2Vnb25zKQ== mindmap   root((\"Objectes JavaScript\"))     id1[\"1. Objectes Alt Nivell\"]       id2[\"Objecte window\"]         id3[\"Contenidor principal\"]         id4[\"Acc\u00e9s: window, self, o ometre\"]         id5[\"Gesti\u00f3 finestres\"]           id6[\"open(): crea finestres\"]           id7[\"close(): tanca finestres\"]         id8[\"Propietats\"]           id9[\"closed, document, frames\"]           id10[\"history, location, navigator\"]         id11[\"M\u00e8todes\"]           id12[\"alert(), confirm(), prompt()\"]           id13[\"focus(), blur()\"]           id14[\"setInterval(), clearInterval()\"]        id15[\"Objecte location\"]         id16[\"Informaci\u00f3 URL actual\"]         id17[\"Propietats\"]           id18[\"hash, host, hostname\"]           id19[\"href, pathname, port\"]           id20[\"protocol, search\"]         id21[\"M\u00e8todes\"]           id22[\"assign(), reload(), replace()\"]        id23[\"Objecte navigator\"]         id24[\"Informaci\u00f3 navegador\"]         id25[\"Propietats\"]           id26[\"appName, appVersion\"]           id27[\"platform, userAgent\"]           id28[\"cookieEnabled\"]         id29[\"M\u00e8todes\"]           id30[\"javaEnabled()\"]        id31[\"Objecte document\"]         id32[\"Document carregat\"]         id33[\"Col\u00b7leccions\"]           id34[\"anchors[], forms[]\"]           id35[\"images[], links[]\"]         id36[\"Propietats\"]           id37[\"cookie, domain, title, URL\"]         id38[\"M\u00e8todes\"]           id39[\"getElementById()\"]           id40[\"getElementsByName()\"]           id41[\"getElementsByTagName()\"]           id42[\"write(), writeln()\"]      id43[\"2. Objectes Nadius\"]       id44[\"Objecte String\"]         id45[\"Cadenes de text\"]         id46[\"Creaci\u00f3\"]           id47[\"new String()\"]           id48[\"Cometes simples o dobles\"]           id49[\"Plantilles de cadenes\"]         id50[\"Car\u00e0cters especials\"]           id51[\"\\\\n, \\\\t, \\\\r\"]           id52[\"\\\\', \\\", \\\\\"]         id53[\"Propietat\"]           id54[\"length\"]         id55[\"M\u00e8todes\"]           id56[\"charAt(), charCodeAt()\"]           id57[\"concat(), indexOf()\"]           id58[\"replace(), search()\"]           id59[\"slice(), split()\"]           id60[\"toLowerCase(), toUpperCase()\"]        id61[\"Objecte Math\"]         id62[\"Operacions matem\u00e0tiques\"]         id63[\"No t\u00e9 constructor\"]         id64[\"Constants\"]           id65[\"E, PI\"]           id66[\"LN2, LN10\"]           id67[\"SQRT2\"]         id68[\"M\u00e8todes\"]           id69[\"abs(), ceil(), floor()\"]           id70[\"round(), random()\"]           id71[\"max(), min()\"]           id72[\"pow(), sqrt()\"]           id73[\"sin(), cos(), tan()\"]        id74[\"Objecte Number\"]         id75[\"Embolcall valors num\u00e8rics\"]         id76[\"Doble precisi\u00f3 64 bits\"]         id77[\"Propietats\"]           id78[\"MAX_VALUE, MIN_VALUE\"]           id79[\"POSITIVE_INFINITY\"]           id80[\"NEGATIVE_INFINITY\"]         id81[\"M\u00e8todes\"]           id82[\"toExponential()\"]           id83[\"toFixed()\"]           id84[\"toPrecision()\"]           id85[\"toString(): base 2, 8, 16\"]        id86[\"Objecte Boolean\"]         id87[\"Valors l\u00f2gics true/false\"]         id88[\"Propietats\"]           id89[\"constructor, prototype\"]         id90[\"M\u00e8todes\"]           id91[\"toString(), valueOf()\"]        id92[\"Objecte Date\"]         id93[\"Dates i hores\"]         id94[\"Creaci\u00f3\"]           id95[\"new Date()\"]           id96[\"new Date(milisegons)\"]           id97[\"new Date(cadena)\"]           id98[\"new Date(any, mes, dia...)\"]         id99[\"M\u00e8todes get\"]           id100[\"getDate(), getDay()\"]           id101[\"getFullYear(), getMonth()\"]           id102[\"getHours(), getMinutes()\"]           id103[\"getTime()\"]         id104[\"M\u00e8todes set\"]           id105[\"setDate(), setFullYear()\"]           id106[\"setHours(), setMinutes()\"]"},{"location":"Moduls/DWEC/mm/prova.html","title":"UT02. Sintaxis Javascript ES6","text":""},{"location":"Moduls/DWEC/mm/prova.html#ut02-sintaxis-javascript-es6","title":"UT02. Sintaxis Javascript ES6","text":"mindmap   root((Javascript ES6))     Introducci\u00f3       ECMAScript 2015       NodeJS       Execuci\u00f3 al navegador      Sintaxi B\u00e0sica       Hola m\u00f3n         console.log         alert         Script tag       Comentaris         L\u00ednia simple //         Multil\u00ednia /* */       Fitxers externs .js      Variables i Constants       let         \u00c0mbit de bloc       var         \u00c0mbit de funci\u00f3       const         Valors immutables       Tipus de dades         number         bigint         boolean         string       Coerci\u00f3         Impl\u00edcita         Expl\u00edcita       Arrays         id1[\"Declaraci\u00f3 []\"]         length         Clonaci\u00f3      Operadors       Assignaci\u00f3         =, +=, -=, *=, /=       Aritm\u00e8tics         +, -, *, /, %         ++, --       Comparaci\u00f3         ===, !==         ==, !=         &gt;, &lt;, &gt;=, &lt;=       L\u00f2gics         &amp;&amp; AND         || OR         ! NOT      Estructures Control       Condicionals         if/else         Niuades       Bucles         for         while         do-while         break         continue      Funcions       id2[\"function nom()\"]       Par\u00e0metres         Per defecte         REST ...       return       Arrow Functions         Sintaxi compacta         map         reduce      Classes       class       constructor       M\u00e8todes         Normals         Est\u00e0tics         Getters      Entrada/Sortida       id3[\"alert()\"]       id4[\"prompt()\"]       id5[\"confirm()\"]       id6[\"console.log()\"]      DOM Manipulaci\u00f3       id7[\"getElementById()\"]       Modificar propietats       Events      Mode Estricte       use strict       Variables declarades       Restriccions"},{"location":"Moduls/DWEC/mm/prova.mm.html","title":"Prova.mm","text":"LS0tCnRpdGxlOiBtYXJrbWFwCm1hcmttYXA6CiAgY29sb3JGcmVlemVMZXZlbDogMgotLS0KCiMjIExpbmtzCgotIFtXZWJzaXRlXShodHRwczovL21hcmttYXAuanMub3JnLykKLSBbR2l0SHViXShodHRwczovL2dpdGh1Yi5jb20vZ2VyYTJsZC9tYXJrbWFwKQoKIyMgUmVsYXRlZCBQcm9qZWN0cwoKLSBbY29jLW1hcmttYXBdKGh0dHBzOi8vZ2l0aHViLmNvbS9nZXJhMmxkL2NvYy1tYXJrbWFwKSBmb3IgTmVvdmltCi0gW21hcmttYXAtdnNjb2RlXShodHRwczovL21hcmtldHBsYWNlLnZpc3VhbHN0dWRpby5jb20vaXRlbXM/aXRlbU5hbWU9Z2VyYTJsZC5tYXJrbWFwLXZzY29kZSkgZm9yIFZTQ29kZQotIFtlYWYtbWFya21hcF0oaHR0cHM6Ly9naXRodWIuY29tL2VtYWNzLWVhZi9lYWYtbWFya21hcCkgZm9yIEVtYWNzCgojIyBGZWF0dXJlcwoKTm90ZSB0aGF0IGlmIGJsb2NrcyBhbmQgbGlzdHMgYXBwZWFyIGF0IHRoZSBzYW1lIGxldmVsLCB0aGUgbGlzdHMgd2lsbCBiZSBpZ25vcmVkLgoKIyMjIExpc3RzCgotICoqc3Ryb25nKiogfn5kZWx+fiAqaXRhbGljKiA9PWhpZ2hsaWdodD09Ci0gYGlubGluZSBjb2RlYAotIFt4XSBjaGVja2JveAotIEthdGV4OiAkeCA9IHstYiBccG0gXHNxcnR7Yl4yLTRhY30gXG92ZXIgMmF9JCA8IS0tIG1hcmttYXA6IGZvbGQgLS0+CiAgICAtIFtNb3JlIEthdGV4IEV4YW1wbGVzXSgjP2Q9Z2lzdDphZjc2YTRjMjQ1YjMwMjIwNmIxNmFlYzUwM2RiZTA3YjprYXRleC5tZCkKLSBOb3cgd2UgY2FuIHdyYXAgdmVyeSB2ZXJ5IHZlcnkgdmVyeSBsb25nIHRleHQgd2l0aCB0aGUgYG1heFdpZHRoYCBvcHRpb24KLSBPcmRlcmVkIGxpc3QKICAgIDEuIGl0ZW0gMQogICAgMi4gaXRlbSAyCgojIyMgQmxvY2tzCgpgYGBqcwpjb25zb2xlLmxvZygnaGVsbG8sIEphdmFTY3JpcHQnKQ== Products Price Apple 4 Banana 2 <p>```</p>"},{"location":"Moduls/DWEC/mm/prova2.html","title":"UT02. Sintaxis Javascript ES6","text":""},{"location":"Moduls/DWEC/mm/prova2.html#ut02-sintaxis-javascript-es6","title":"UT02. Sintaxis Javascript ES6","text":"mindmap   root((Arquitectures Desenvolupament Web))     1. Introducci\u00f3       Arquitectura client-servidor       Guia per a desenvolupadors web     2. Evoluci\u00f3 Hist\u00f2rica       Web inventada Tim Berners-Lee       Est\u00e0ndards W3C HTML CSS JS       Tipus de p\u00e0gines         Est\u00e0tiques         Generades pel servidor         AJAX         SPA         PWA     3. Model Client-Servidor       Client-side         Navegador         Codi executat a usuari       Server-side         Servidors i backend         Gesti\u00f3 dades i seguretat       Xarxa         Protocol HTTP     4. Arquitectura Client-side       Contingut HTML       Presentaci\u00f3 CSS       Comportament JavaScript       Funcionalitats         Resposta a interaccions         Modificaci\u00f3 DOM         Validaci\u00f3 dades         AJAX       Ecosistema JavaScript         Vanilla JS         Llibreries jQuery React         Frameworks Angular Vue Svelte       Limitacions         Sense acc\u00e9s fitxers locals         Sandbox i pol\u00edtica mateix origen     5. Arquitectura Server-side       Programari servidor Apache NGINX       Llenguatges backend PHP Node Java       Bases de dades i persist\u00e8ncia       Funcions seguretat i autenticaci\u00f3     6. Comparativa Client vs Servidor       Validaci\u00f3 Formularis UX vs Seguretat       Acc\u00e9s dades visualitzaci\u00f3 vs emmagatzematge       Execuci\u00f3 c\u00e0lculs simple vs complex       Manipulaci\u00f3 DOM nom\u00e9s al client     7. Navegadors i Web       Definici\u00f3 navegador       Components clau hipervincles protocols       Principals navegadors Firefox Chrome Edge       Recomanaci\u00f3 per desenvolupadors     8. Eines i millors pr\u00e0ctiques       Editors i IDEs VSCode WebStorm       Separaci\u00f3 contingut estil comportament       Validaci\u00f3 codi i accessibilitat       Control de versions Git       Dev i debug navegador"},{"location":"Moduls/DWES/index.html","title":"DWES - P\u00e0gina resum","text":""},{"location":"Moduls/DWES/index.html#dwes-pagina-resum","title":"DWES - P\u00e0gina resum","text":""},{"location":"Moduls/DWES/index.html#ras-treballats-des-2024","title":"RAs treballats (Des 2024)","text":"RA Descripci\u00f3 Ja treballats? RA1 Selecciona les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant les seves capacitats i caracter\u00edstiques pr\u00f2pies. Criteris d'avaluaci\u00f3 : 1.1.Caracteritza i diferencia els models d\u2019execuci\u00f3 de codi al servidor i al client web. 1.2.Reconeix els avantatges que proporciona la generaci\u00f3 din\u00e0mica de p\u00e0gines web i les seves difer\u00e8ncies ambla inclusi\u00f3 de sent\u00e8ncies de guions a l\u2019interior de les p\u00e0gines web. 1 3.Identifica els mecanismes d\u2019execuci\u00f3 de codi en els servidors web. 1 4.Reconeix les funcionalitats que aporten els servidors d\u2019aplicacions i la seva integraci\u00f3 amb els servidorsweb. 1 5.Identifica i caracteritza els principals llenguatges i tecnologies relacionats amb la programaci\u00f3 web en entorn servidor. 1 6.Verifica els mecanismes d\u2019integraci\u00f3 dels llenguatges de marques amb els llenguatges de programaci\u00f3 enentorn servidor. 1 7.Reconeix i avalua les eines de programaci\u00f3 en entorn servidor. RA2 Escriu sent\u00e8ncies executables per un servidor web reconeixent i aplicant procediments d\u2019integraci\u00f3 del codi en llenguatges de marques. Criteris d'avaluaci\u00f3 : 2.1. Identifica els mecanismes de generaci\u00f3 de p\u00e0gines web a partir de llenguatges de marques amb codi encastat.2 2. Identifica les principals tecnologies associades.2 3. Utilitza etiquetes per a la inclusi\u00f3 de codi en el llenguatge de marques.  2 4. Identifica la sintaxi del llenguatge de programaci\u00f3 que s\u2019ha d\u2019utilitzar.  2 5. Escriu sent\u00e8ncies simples i en comprova els efectes en el document resultant.2 6. Utilitza directives per modificar el comportament predeterminat.2 7. Utilitza els diferents tipus de variables i operadors disponibles en el llenguatge.2 8. Identifica els \u00e0mbits d\u2019utilitzaci\u00f3 de les variables. RA3 Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques, seleccionant i utilitzant les estructures de programaci\u00f3. Criteris d'avaluaci\u00f3 : 3.1. Utilitza mecanismes de decisi\u00f3 en la creaci\u00f3 de blocs de sent\u00e8ncies.3. 2. Utilitza bucles i verifica el seu funcionament.3. 3. Utilitza arrays per emmagatzemar i recuperar conjunts de dades.3. 4. Crea i utilitza funcions.3. 5. Utilitza formularis web per a interactuar amb l\u2019usuari del navegador web.3. 6. Empra m\u00e8todes per recuperar la informaci\u00f3 introdu\u00efda en el formulari.3. 7. Afegeix comentaris al codi. RA4 Desenvolupa aplicacions web embegudes en llenguatges de marques analitzant i incorporant funcionalitats segons especificacions. Criteris d'avaluaci\u00f3 : 4.1. Identifica els mecanismes disponibles per al manteniment de la informaci\u00f3 que fa a un client web concret in\u2019assenyala els avantatges.4. 2. Utilitza sessions per mantenir l\u2019estat de les aplicacions web.4. 3. Utilitza galetes (cookies) per emmagatzemar informaci\u00f3 en el client web i per recuperar el seu contingut.4. 4. Identifica i caracteritza els mecanismes disponibles per a l\u2019autenticaci\u00f3 d\u2019usuaris.4. 5. Escriu aplicacions que integrin mecanismes d\u2019autenticaci\u00f3 d\u2019usuaris.4. 6. Fa adaptacions a aplicacions web existents com a gestors de continguts o altres.4. 7. Utilitza eines i entorns per a facilitar la programaci\u00f3, prova i depuraci\u00f3 del codi. RA5 Desenvolupa aplicacions web identificant i aplicant mecanismes per separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci. Criteris d'avaluaci\u00f3 : 5.1. Identifica els avantatges de separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 de l\u2019aplicaci\u00f3.5. 2. Analitza tecnologies i mecanismes que permeten realitzar aquesta separaci\u00f3 i les seves caracter\u00edstiquesprincipals.5. 3. Utilitza objectes i controls en el servidor per generar l\u2019aspecte visual de l\u2019aplicaci\u00f3 web en el client.5. 4. Utilitza formularis generats de manera din\u00e0mica per respondre als esdeveniments de l\u2019aplicaci\u00f3 web.5. 5. Identifica i aplica els par\u00e0metres relatius a la configuraci\u00f3 de l\u2019aplicaci\u00f3 web.5. 6. Escriu aplicacions web amb manteniment d\u2019estat i separaci\u00f3 de la l\u00f2gica de negoci.5. 7. Aplica els principis de la programaci\u00f3 orientada a objectes.5. 8. Prova i documenta el codi. RA6 Desenvolupa aplicacions web d\u2019acc\u00e9s a magatzems de dades, aplicant mesures per mantenir la seguretat i la integritat de la informaci\u00f3. Criteris d'avaluaci\u00f3 : 6.1. Analitza les tecnologies que permeten l\u2019acc\u00e9s mitjan\u00e7ant programaci\u00f3 a la informaci\u00f3 disponible enmagatzems de dades.6. 2. Crea aplicacions que estableixin connexions amb bases de dades.6. 3. Recupera informaci\u00f3 emmagatzemada en bases de dades.6. 4. Publica en aplicacions web la informaci\u00f3 recuperada.6. 5. Utilitza conjunts de dades per emmagatzemar la informaci\u00f3.6. 6. Crea aplicacions web que permetin l\u2019actualitzaci\u00f3 i l\u2019eliminaci\u00f3 d\u2019informaci\u00f3 disponible en una base dedades.6. 7. Utilitza transaccions per mantenir la consist\u00e8ncia de la informaci\u00f3.6. 8. Prova i documenta les aplicacions. RA7 Desenvolupa serveis web analitzant el seu funcionament i implantant l\u2019estructura dels seus components. Criteris d'avaluaci\u00f3 : 7.1. Identifica les caracter\u00edstiques pr\u00f2pies i l\u2019\u00e0mbit d\u2019aplicaci\u00f3 dels serveis web.7. 2. Identifica els avantatges d\u2019utilitzar serveis web per a proporcionar acc\u00e9s a funcionalitats incorporades a la l\u00f2gica de negoci d\u2019una aplicaci\u00f3.7. 3. Identifica les tecnologies i els protocols implicats en la publicaci\u00f3 i en la utilitzaci\u00f3 de serveis web.7. 4. Programa un servei web.7. 5. Crea el document de descripci\u00f3 del servei web.7. 6. Verifica el funcionament del servei web.7. 7. Consumeix el servei web. RA8 Genera p\u00e0gines web din\u00e0miques analitzant i utilitzant tecnologies del servidor web que afegeixin codi al llenguatge de marques. Criteris d'avaluaci\u00f3 : 8.1. Identifica les difer\u00e8ncies entre l\u2019execuci\u00f3 de codi al servidor i al client web.8. 2. Reconeix els avantatges d\u2019unir les dues tecnologies en el proc\u00e9s de desenvolupament de programes.8. 3. Identifica les llibreries i les tecnologies relacionades amb la generaci\u00f3 per part del servidor de p\u00e0gines web amb guions embeguts.8. 4. Utilitza aquestes tecnologies per a generar p\u00e0gines web que incloguin interacci\u00f3 amb l\u2019usuari en forma d\u2019advert\u00e8ncies i de peticions de confirmaci\u00f3.8. 5. Utilitza aquestes tecnologies, per a generar p\u00e0gines web que incloguin verificaci\u00f3 de formularis.8. 6. Utilitza aquestes tecnologies per a generar p\u00e0gines web que incloguin modificaci\u00f3 din\u00e0mica del seu contingut i la seva estructura.8. 7. Aplica aquestes tecnologies en la programaci\u00f3 d\u2019aplicacions web. RA9 Desenvolupa aplicacions web h\u00edbrids seleccionant i utilitzant llibreries de codi i dip\u00f2sits heterogenis d\u2019informaci\u00f3. Criteris d'avaluaci\u00f3 : 9.1. Reconeix els avantatges que proporciona la reutilitzaci\u00f3 de codi i l\u2019aprofitament d\u2019informaci\u00f3 ja existent.9. 2. Identifica llibreries de codi i tecnologies aplicables en la creaci\u00f3 d\u2019aplicacions web h\u00edbrides.9. 3. Crea una aplicaci\u00f3 web que recuperi i processi dip\u00f2sits d\u2019informaci\u00f3 ja existents.9. 4. Crea dip\u00f2sits espec\u00edfics a partir d\u2019informaci\u00f3 existent a internet i en magatzems d\u2019informaci\u00f3.9. 5. Utilitza llibreries de codi per incorporar funcionalitats espec\u00edfiques a una aplicaci\u00f3 web.9. 6. Programa serveis i aplicacions web utilitzant com a base informaci\u00f3 i codi generats per tercers.9. 7. Prova, depura i documenta les aplicacions generades."},{"location":"Moduls/DWES/index.html#unitats-de-treball","title":"Unitats de treballAutoevaluaci\u00f3n","text":"<p>UNIDAD DE TRABAJO 1: Arquitecturas web UNIDAD DE TRABAJO 2:  Caracter\u00edsticas del lenguaje PHP. UNIDAD DE TRABAJO 3 : PHP  orientado a objetos UNIDAD DE TRABAJO 4: Programaci\u00f3n Web y herramientas Web UNIDAD DE TRABAJO 5: Acceso a datos. UNIDAD DE TRABAJO 6: Frameworks PHP \u2013 Laravel. UNIDAD DE TRABAJO 7: Servicios Web. UNIDAD DE TRABAJO 8: Aplicaciones web h\u00edbridas. </p> <p></p> graph TD;     A--&gt;B;     A--&gt;C;     B--&gt;D;     C--&gt;D;  gantt title Temporitzaci\u00f3 DWES 24-25 dateFormat DD-MM-YYYY section Section UT01        :a1, 23-09-2024, 10d UT02        :a2, after a1, 20d Primera avaluaci\u00f3 : milestone, m1, 09-12-2024, 5d section Another UT03        :after a2, 12d another task    :24d  Pregunta En lugar de programar un m\u00e9todo <code>set</code> para modificar el valor de los atributos privados en que sea necesario, puedo utilizar el m\u00e9todo m\u00e1gico <code>__set</code>. Respuestas <p> Opci\u00f3n 1 </p>  Verdadero.   <p> Opci\u00f3n 2 </p>  Falso.   Retroalimentaci\u00f3n  S\u00ed, pero tendr\u00edas que comprobar el nombre del atributo usado y asignar el valor al adecuado.    Si el atributo es privado, no es accesible; por tanto, cuando se le intente asignar un valor, se llamar\u00e1 al m\u00e9todo m\u00e1gico <code>__set</code> si existe.   Soluci\u00f3n <ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html","title":"Programaci\u00f3n orientada a objetos en PHP.","text":""},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#programacion-orientada-a-objetos-en-php","title":"Programaci\u00f3n orientada a objetos en PHP.","text":""},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#1-orientacion-a-objetos-en-php","title":"1.- Orientaci\u00f3n a objetos en PHP.","text":"<p>La programaci\u00f3n orientada a objetos (POO, o OOP en lenguaje ingl\u00e9s), es una metodolog\u00eda de programaci\u00f3n basada en objetos. Un objeto es una estructura que contiene datos y el c\u00f3digo que los maneja.</p> <p>La estructura de los objetos se define en las clases. En ellas se escribe el c\u00f3digo que define el comportamiento de los objetos y se indican los miembros que formar\u00e1n parte de los objetos de dicha clase. Entre los miembros de una clase puede haber:</p> <ul> <li>M\u00e9todos. Son los miembros de la clase que contienen el c\u00f3digo de la misma. Un m\u00e9todo es como una funci\u00f3n. Puede recibir par\u00e1metros y devolver valores.</li> <li>Atributos o propiedades. Almacenan informaci\u00f3n acerca del estado del objeto al que pertenecen (y por tanto, su valor puede ser distinto para cada uno de los objetos de la misma clase).</li> </ul> <p>A la creaci\u00f3n de un objeto basado en una clase se le llama instanciar una clase y al objeto obtenido tambi\u00e9n se le conoce como instancia de esa clase.</p> <p>Los pilares fundamentales de la POO son:</p> <ul> <li>Herencia. Es el proceso de crear una clase a partir de otra, heredando su comportamiento y caracter\u00edsticas y pudiendo redefinirlos.</li> <li>Abstracci\u00f3n. Hace referencia a que cada clase oculta en su interior las peculiaridades de su implementaci\u00f3n, y presenta al exterior una serie de m\u00e9todos (interface) cuyo comportamiento est\u00e1 bien definido. Visto desde el exterior, cada objeto es un ente abstracto que realiza un trabajo.</li> <li>Polimorfismo. Un mismo m\u00e9todo puede tener comportamientos distintos en funci\u00f3n del objeto con que se utilice.</li> <li>Encapsulaci\u00f3n. En la POO se juntan en un mismo lugar los datos y el c\u00f3digo que los manipula.</li> </ul> <p>Las ventajas m\u00e1s importantes que aporta la programaci\u00f3n orientada a objetos son:</p> <ul> <li>Modularidad. La POO permite dividir los programas en partes o m\u00f3dulos m\u00e1s peque\u00f1os, que son independientes unos de otros pero pueden comunicarse entre ellos.</li> <li>Extensibilidad. Si se desean a\u00f1adir nuevas caracter\u00edsticas a una aplicaci\u00f3n, la POO facilita esta tarea de dos formas: a\u00f1adiendo nuevos m\u00e9todos al c\u00f3digo, o creando nuevos objetos que extiendan el comportamiento de los ya existentes.</li> <li>Mantenimiento. Los programas desarrollados utilizando POO son m\u00e1s sencillos de mantener, debido a la modularidad antes comentada. Tambi\u00e9n ayuda seguir ciertas convenciones al escribirlos, por ejemplo, escribir cada clase en un fichero propio. No debe haber dos clases en un mismo fichero, ni otro c\u00f3digo aparte del propio de la clase.</li> </ul> <p>Para saber m\u00e1s</p> <p>En este m\u00f3dulo no se pretende realizar un estudio profundo de las ventajas y caracter\u00edsticas de la POO, sino simplemente recordar conceptos que ya deber\u00edas haber asimilado con anterioridad. Si tienes dudas sobre algo de lo que acabamos de repasar, puedes consultar este tutorial de la web desarrolloweb.com.</p> <p>Tutorial de la web desarrolloweb.com.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#11-caracteristicas-de-orientacion-a-objetos-en-php","title":"1.1.- Caracter\u00edsticas de orientaci\u00f3n a objetos en PHP.","text":"<p>Everaldo Coelho (GNU/GPL)</p> <p>Seguramente todo, o la mayor\u00eda de lo que acabas de ver, ya lo conoc\u00edas, y es incluso probable que sepas utilizar alg\u00fan lenguaje de programaci\u00f3n orientado a objetos, as\u00ed que vamos a ver directamente las peculiaridades propias de PHP en lo que hace referencia a la POO.</p> <p>Como ya has visto en las unidades anteriores, especialmente con las extensiones para utilizar bases de datos, con PHP puedes utilizar dos estilos de programaci\u00f3n: estructurada y orientada a objetos. </p><pre><code>// utilizando programaci\u00f3n estructurada`  \n$conProyecto = mysqli_connect('localhost', 'gestor', 'secreto', 'proyecto');`  \n// utilizando POO`  \n$conProyecto = new mysqli();`\n\n$conProyecto-&gt;connect('localhost', 'gestor', 'secreto', 'proyecto');`\n</code></pre><p></p> <p>Sin embargo, el lenguaje PHP original no se dise\u00f1\u00f3 con caracter\u00edsticas de orientaci\u00f3n a objetos. S\u00f3lo a partir de la versi\u00f3n 3, se empezaron a introducir algunos rasgos de POO en el lenguaje. Esto se potenci\u00f3 en la versi\u00f3n 4, aunque todav\u00eda de forma muy rudimentaria. Por ejemplo, en PHP4:</p> <ul> <li>Los objetos se pasan siempre por valor, no por referencia.</li> <li>No se puede definir el nivel de acceso para los miembros de la clase. Todos son p\u00fablicos.</li> <li>No existen los interfaces.</li> <li>No existen m\u00e9todos destructores.</li> </ul> <p>A partir de la versi\u00f3n de, PHP5, se reescribi\u00f3 el soporte de orientaci\u00f3n a objetos del lenguaje, ampliando sus caracter\u00edsticas y mejorando su rendimiento y su funcionamiento general. Aunque iremos detallando y explicando cada una posteriormente con detenimiento, las caracter\u00edsticas de POO que soporta PHP incluyen:</p> <ul> <li>M\u00e9todos est\u00e1ticos.</li> <li>M\u00e9todos constructores y destructores.</li> <li>Herencia.</li> <li>Interfaces.</li> <li>Clases abstractas.</li> <li>Traits (A partir de la versi\u00f3n 5.4.0).</li> </ul> <p>Entre las caracter\u00edsticas que no incluye PHP, y que puedes conocer de otros lenguajes de programaci\u00f3n, est\u00e1n:</p> <ul> <li>Herencia m\u00faltiple.</li> <li>Sobrecarga de m\u00e9todos.(incluidos los m\u00e9todos constructores).</li> <li>Sobrecarga de operadores.</li> </ul> <p>'''' Autoevaluaci\u00f3n</p> <p>Antes de PHP5, el comportamiento cuando se pasaba una variable a una funci\u00f3n era siempre el mismo, independientemente de si la variable fuera un objeto o de cualquier otro tipo: siempre se creaba una nueva variable copiando los valores de la original.</p> <p>Verdadero.</p> <p>Falso.</p> Mostrar objecte: <p>Aquest \u00e9s l'objecte ocult!</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#12-creacion-de-clases","title":"1.2.- Creaci\u00f3n de clases.","text":"<p>Everaldo Coelho and YellowIcon (GNU/GPL)</p> <p>La declaraci\u00f3n de una clase en PHP se hace utilizando la palabra <code>class</code>. A continuaci\u00f3n y entre llaves, deben figurar los miembros de la clase. Conviene hacerlo de forma ordenada, primero las propiedades o atributos, y despu\u00e9s los m\u00e9todos, cada uno con su c\u00f3digo respectivo.</p> <p><code>class Producto {</code> <code>private $codigo;</code> <code>public $nombre;</code> <code>public $pvp;</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Como coment\u00e1bamos antes, es preferible que cada clase figure en su propio fichero (<code>producto.php</code>). Adem\u00e1s, muchos programadores prefieren utilizar para las clases nombres que comiencen por letra may\u00fascula, para, de esta forma, distinguirlos de los objetos y otras variables.</p> <p>Una vez definida la clase, podemos usar la palabra <code>new</code> para instanciar objetos de la siguiente forma:</p> <p><code>$p = new Producto();</code></p> <p>Para que la l\u00ednea anterior se ejecute sin error, previamente debemos haber declarado la clase. Para ello, en ese mismo fichero tendr\u00e1s que incluir la clase poniendo algo como:</p> <p><code>require_once('producto.php');</code></p> <p>Los atributos de una clase son similares a las variables de PHP. Es posible indicar un valor en la declaraci\u00f3n de la clase. En este caso, todos los objetos que se instancien a partir de esa clase, partir\u00e1n con ese valor por defecto en el atributo.</p> <p>Para acceder desde un objeto a sus atributos o a los m\u00e9todos de la clase, debes utilizar el operador flecha (f\u00edjate que s\u00f3lo se pone el s\u00edmbolo <code>$</code> delante del nombre del objeto):</p> <p><code>$p-&gt;nombre = 'Samsung Galaxy A6';</code></p> <p><code>$p-&gt;muestra();</code></p> <p>Cuando se declara un atributo, se debe indicar su nivel de acceso. Los principales niveles son:</p> <ul> <li><code>public</code>. Los atributos declarados como <code>public</code> pueden utilizarse directamente por los objetos de la clase. Es el caso del atributo <code>$nombre</code> anterior.</li> <li><code>private</code>. Los atributos declarados como <code>private</code> s\u00f3lo pueden ser accedidos y modificados por los m\u00e9todos definidos en la clase, no directamente por los objetos de la misma. Es el caso del atributo <code>$codigo</code>.</li> </ul>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#121-creacion-de-clases-i","title":"1.2.1.- Creaci\u00f3n de clases (I).","text":"<p>Everaldo Coelho (YellowIcon) (GNU/GPL)</p> <p>Uno de los motivos para crear atributos privados es que su valor forma parte de la informaci\u00f3n interna del objeto y no debe formar parte de su interface. Otro motivo es mantener cierto control sobre sus posibles valores.</p> <p>Por ejemplo, no quieres que se pueda cambiar libremente el valor del c\u00f3digo de un producto. O necesitas conocer cu\u00e1l ser\u00e1 el nuevo valor antes de asignarlo. En estos casos, se suelen definir esos atributos como privados y adem\u00e1s se crean dentro de la clase m\u00e9todos para permitirnos obtener y/o modificar los valores de esos atributos. Por ejemplo:</p> <p><code>private $codigo;</code> <code>public function setCodigo($nuevo_codigo) {</code> <code>if (noExisteCodigo($nuevo_codigo)) {</code> <code>$this-&gt;codigo = $nuevo_codigo;</code> <code>return true;</code> <code>}</code> <code>return false;</code> <code>}</code></p> <p><code>public function getCodigo() { return $this-&gt;codigo; }</code></p> <p>Aunque no es obligatorio, el nombre del m\u00e9todo que nos permite obtener el valor de un atributo suele empezar por <code>get</code>, y el que nos permite modificarlo por <code>set</code>, y a continuaci\u00f3n el nombre del atributo con la primera letra en may\u00fasculas.</p> <p>Debes conocer</p> <p>En PHP5 se introdujeron los llamados m\u00e9todos m\u00e1gicos, entre ellos <code>__set</code> y <code>__get</code>. Si se declaran estos dos m\u00e9todos en una clase, PHP los invoca autom\u00e1ticamente cuando desde un objeto se intenta usar un atributo no existente o no accesible. Por ejemplo, el c\u00f3digo siguiente simula que la clase Producto tiene cualquier atributo que queramos usar.</p> <p><code>class Producto {</code> <code>private $atributos = array();</code> <code>public function __get($atributo) {</code> <code>return $this-&gt;atributos[$atributo];</code> <code>}</code> <code>public function __set($atributo, $valor) {</code> <code>$this-&gt;atributos[$atributo] = $valor;</code> <code>}</code></p> <p><code>}</code></p> <p>En la documentaci\u00f3n de PHP tienes m\u00e1s informaci\u00f3n sobre los m\u00e9todos m\u00e1gicos.</p> <p>M\u00e9todos m\u00e1gicos.</p> <p>Autoevaluaci\u00f3n</p> <p>En lugar de programar un m\u00e9todo <code>set</code> para modificar el valor de los atributos privados en que sea necesario, puedo utilizar el m\u00e9todo m\u00e1gico <code>__set</code>.</p> <p>Verdadero.</p> <p>Falso.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#122-creacion-de-clases-ii","title":"1.2.2.- Creaci\u00f3n de clases (II).","text":"<p>David Vignoni (GNU/GPL)</p> <p>Cuando desde un objeto se invoca un m\u00e9todo de la clase, a \u00e9ste se le pasa siempre una referencia al objeto que hizo la llamada. Esta referencia se almacena en la variable <code>$this</code>. Se utiliza, por ejemplo, en el c\u00f3digo anterior para tener acceso a los atributos privados del objeto (que s\u00f3lo son accesibles desde los m\u00e9todos de la clase).</p> <p><code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code></p> <p>Dentro de la clase para acceder a sus m\u00e9todos o atributos propios usaremos  <code>$this-&gt;nombre,</code>(salvo que el atributo o el m\u00e9todo sea est\u00e1tico) F\u00edjate que al atributo se le quita \"<code>$</code>\". Veamos un ejemplo:</p> <p><code>class Persona{</code> <code>private $nombre;</code> <code>private $perfil;</code> <code>public function getNombre(){</code> <code>return $this-&gt;nombre;</code> <code>}</code> <code>public function setNombre($n){</code> <code>$this-&gt;nombre=$n;</code> <code>}</code> <code>public function saludo(){</code> <code>//Fijate como hacemos referencia al m\u00e9todo getNombre</code> <code>echo \"Hola {$this-&gt;getNombre()}, Buenos dias\";</code> <code>}</code> <code>}</code> <code>$persona1=new Persona();</code> <code>$persona1-&gt;setNombre(\"Luis\");</code> <code>$persona1-&gt;saludo();</code></p> <p>Debes conocer</p> <p>Una referencia es una forma de utilizar distintos nombres de variables para acceder al mismo contenido. En los puntos siguientes aprender\u00e1s a crearlas y a utilizarlas.</p> <p>Referencia.</p> <p>Adem\u00e1s de m\u00e9todos y propiedades, en una clase tambi\u00e9n se pueden definir constantes, utilizando la palabra <code>const</code>. Es importante que no confundas los atributos con las constantes. Son conceptos distintos: las constantes no pueden cambiar su valor (obviamente, de ah\u00ed su nombre), no usan el car\u00e1cter <code>$</code> y, adem\u00e1s, su valor va siempre entre comillas y est\u00e1 asociado a la clase, es decir, no existe una copia del mismo en cada objeto. Por tanto, para acceder a las constantes de una clase, se debe utilizar el nombre de la clase y el operador <code>::</code>, llamado operador de resoluci\u00f3n de \u00e1mbito (que se utiliza para acceder a los elementos de una clase).</p> <p><code>class DB {</code> <code>const USUARIO = 'gestor';</code> <code>\u2026</code> <code>}</code></p> <p><code>echo DB::USUARIO;</code></p> <p>Es importante resaltar que no es necesario que exista ning\u00fan objeto de una clase para poder acceder al valor de las constantes que defina. Adem\u00e1s, sus nombres suelen escribirse en may\u00fasculas.</p> <p>Tampoco se deben confundir las constantes con los miembros est\u00e1ticos de una clase. En PHP, una clase puede tener atributos o m\u00e9todos est\u00e1ticos, tambi\u00e9n llamados a veces atributos o m\u00e9todos de clase. Se definen utilizando la palabra clave <code>static</code>.</p> <p><code>class Producto {</code> <code>private static $num_productos = 0;</code> <code>public static function nuevoProducto() {</code> <code>self::$num_productos++;</code> <code>}</code> <code>\u2026</code></p> <p><code>}</code></p> <p>Los atributos y m\u00e9todos est\u00e1ticos no pueden ser llamados desde un objeto de la clase utilizando el operador \"<code>-&gt;\"</code>. Si el m\u00e9todo o atributo es p\u00fablico, deber\u00e1 accederse utilizando el nombre de la clase y el operador de resoluci\u00f3n de \u00e1mbito.</p> <p><code>Producto::nuevoProducto();</code></p> <p>Si es privado, como el atributo <code>$num_productos</code> en el ejemplo anterior, s\u00f3lo se podr\u00e1 acceder a \u00e9l desde los m\u00e9todos de la propia clase, utilizando la palabra <code>self</code>. De la misma forma que <code>$this</code> hace referencia al objeto actual, <code>self</code> hace referencia a la clase actual.</p> <p><code>self::$num_productos ++;</code></p> <p>Los atributos est\u00e1ticos de una clase se utilizan para guardar informaci\u00f3n general sobre la misma, como puede ser el n\u00famero de objetos que se han instanciado. S\u00f3lo existe un valor del atributo, que se almacena a nivel de clase.</p> <p>Los m\u00e9todos est\u00e1ticos suelen realizar alguna tarea espec\u00edfica o devolver un objeto concreto. Por ejemplo, las clases matem\u00e1ticas suelen tener m\u00e9todos est\u00e1ticos para realizar logaritmos o ra\u00edces cuadradas. No tiene sentido crear un objeto si lo \u00fanico que queremos es realizar una operaci\u00f3n matem\u00e1tica.</p> <p>Los m\u00e9todos est\u00e1ticos se llaman desde la clase. No es posible llamarlos desde un objeto y por tanto, no podemos usar <code>$this</code> dentro de un m\u00e9todo est\u00e1tico.</p> <p>Para saber m\u00e1s</p> <p>El operador <code>\"::\"</code>, tiene un nombre curioso en programaci\u00f3n : Paamayim Nekudotayim, Significa \"doble dos puntos\" en Hebreo.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#123-creacion-de-clases-iii","title":"1.2.3.- Creaci\u00f3n de clases (III).","text":"<p>David Vignoni (GNU/GPL)</p> <p>PHP permite a los desarrolladores declarar m\u00e9todos constructores para las clases. Aquellas que tengan un m\u00e9todo constructor lo invocar\u00e1n en cada nuevo objeto creado, lo que nos permite la inicializaci\u00f3n que el objeto pueda necesitar antes de ser usado. Como PHP no admite sobrecarga de m\u00e9todos s\u00f3lo podremos crear un constructor por clase.</p> <p>Por motivos de retrocompatibilidad con PHP3 y PHP4, si PHP no puede encontrar una funci\u00f3n <code>__construct()</code> de una clase dada, se buscar\u00e1 la funci\u00f3n constructora del estilo antiguo, por el nombre de la clase.</p> <p>Veamos unos ejemplos de uso del constructor:</p> <p><code>class Persona{</code> <code>public static $id;</code> <code>private $nombre;</code> <code>private $perfil;</code> <code>public function __construct(){</code> <code>$perfil=\"P\u00fablico\";</code> <code>}</code> <code>}</code> <code>//creamos persona1 que tiene inicializado su atributo $perfil a P\u00fablico.</code> <code>$persona1=new Persona();</code> <code>// Podemos comprobarlo</code></p> <p><code>var_dump($persona1);</code></p> <p><code>class Persona{</code> <code>public static $id;</code> <code>private $nombre;</code> <code>private $perfil;</code> <code>public function __construct($n, $p){</code> <code>$this-&gt;nombre=$n;</code> <code>$this-&gt;perfil=$p;</code> <code>}</code> <code>}</code> <code>// Creamos un objeto de la clase Persona e inicializamos sus atributos;</code> <code>// F\u00edjate que ya NO podremos usar: $persona1=new Persona(); ya que el constructor espera dos par\u00e1metros.</code> <code>$persona1=new Persona(\"Juan\", \"Privado\");</code> <code>//Podemos comprobarlo</code> <code>var_dump($persona1);</code></p> <p>Con el uso de las funciones <code>\"func_get_args()\"</code>, <code>\"fun_get_arg()\"</code> y <code>\"func_num_arg()\"</code>. podemos pasar distinto n\u00famero de par\u00e1metros a un constructor \"simulando\" la sobrecarga del mismo, en el Anexo 1 de este tema se ve un ejemplo de como hacerlo. Ir a Anexo 1. Otra posibilidad es usar el m\u00e9todo m\u00e1gico  <code>\"__call\"</code> para capturar llamadas a m\u00e9todos que no est\u00e9n implementados.</p> <p>Los constructores del estilo antiguo (llamados como el nombre de la clase) est\u00e1n OBSOLETOS desde PHP 7.0, por lo que ser\u00e1n eliminados en futuras versiones. Se deber\u00eda utilizar siempre <code>\"__construct()\"</code> en c\u00f3digo nuevo.</p> <p>Tambi\u00e9n es posible definir un m\u00e9todo destructor, que debe llamarse <code>\"__destruct\"</code> y permite definir acciones que se ejecutar\u00e1n cuando se elimine el objeto.</p> <p><code>class Producto {</code> <code>private static $num_productos = 0;</code> <code>private $codigo;</code> <code>public function __construct($codigo) {</code> <code>$this-&gt;$codigo = $codigo;</code> <code>self::$num_productos++;</code> <code>}</code> <code>public function __destruct() {</code> <code>self::$num_productos--;</code> <code>}</code> <code>\u2026</code> <code>}</code></p> <p><code>$p = new Producto('GALAXYS');</code></p> <p>Los m\u00e9todos destructores aparecen en PHP5; no exist\u00edan en versiones anteriores del lenguaje.</p> <p>Autoevaluaci\u00f3n</p> <p>\u00bfCu\u00e1l es la utilidad del operador de resoluci\u00f3n de \u00e1mbito <code>::</code>?</p> <p>Nos permite hacer referencia a la clase del objeto actual.</p> <p>Se utiliza para acceder a los elementos de una clase, como constantes y miembros est\u00e1ticos.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#13-utilizacion-de-objetos","title":"1.3.- Utilizaci\u00f3n de objetos.","text":"<p>Pixabay (Dominio p\u00fablico)</p> <p>Ya sabes c\u00f3mo instanciar un objeto utilizando <code>new</code>, y c\u00f3mo acceder a sus m\u00e9todos y atributos p\u00fablicos con el operador flecha:</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code></p> <p><code>$p-&gt;muestra();</code></p> <p>Una vez creado un objeto, puedes utilizar el operador <code>instanceof</code> para comprobar si es o no una instancia de una clase determinada.</p> <p><code>if ($p instanceof Producto) {</code></p> <pre><code>`. . .}`\n</code></pre> <p>Adem\u00e1s, a partir de  PHP5 se incluyen una serie de funciones \u00fatiles para el desarrollo de aplicaciones utilizando POO.</p> Funci\u00f3n Ejemplo Significado <code>get_class()</code> <code>echo \"La clase es: \" . get_class($p);</code> Devuelve el nombre de la clase del objeto. <code>class_exists</code> <code>if (class_exists('Producto') {     $p = new Producto();     . . .  }</code> Devuelve <code>true</code> si la clase est\u00e1 definida o <code>false</code> en caso contrario. <code>get_declared_classes()</code> <code>print_r(get_declared_classes());</code> Devuelve un array con los nombres de las clases definidas. <code>class_alias()</code> <code>class_alias('Producto', 'Articulo'); $p = new Articulo();</code> Crea un alias para una clase. <code>get_class_methods()</code> <code>print_r(get_class_methods('Producto'));</code> Devuelve un array con los nombres de los m\u00e9todos de una clase que son accesibles desde d\u00f3nde se hace la llamada. <code>method_exists()</code> <code>if (method_exists('Producto', 'vende') {     \u2026 }</code> Devuelve <code>true</code> si existe el m\u00e9todo en el objeto o la clase que se indica, o <code>false</code> en caso contrario, independientemente de si es accesible o no. <code>get_class_vars()</code> <code>print_r(get_class_vars('Producto'));</code> Devuelve un array con los nombres de los atributos de una clase que son accesibles desde d\u00f3nde se hace la llamada. <code>get_object_vars()</code> <code>print_r(get_object_vars($p));</code> Devuelve un array con los nombres de los m\u00e9todos de un objeto que son accesibles desde d\u00f3nde se hace la llamada. <code>property_exists()</code> <code>if (property_exists('Producto', 'codigo') {     . . . }</code> Devuelve <code>true</code> si existe el atributo en el objeto o la clase que se indica, o <code>false</code> en caso contrario, independientemente de si es accesible o no. <p>Desde PHP5, puedes indicar en las funciones y m\u00e9todos de qu\u00e9 clase deben ser los objetos que se pasen como par\u00e1metros as\u00ed como el tipo del dato devuelto (caso que lo haya). Para ello, debes especificar el tipo antes del par\u00e1metro. Para el dato devuelto poner  \"<code>:tipoDato\",</code> despues de la declaraci\u00f3n de la funci\u00f3n o el m\u00e9todo y antes de las llaves.</p> <p><code>public function precioProducto(Producto $p) :float {</code> <code>. . .</code> <code>return $precio;</code></p> <p><code>}</code></p> <p>Si cuando se realiza la llamada, el par\u00e1metro no es del tipo adecuado, se produce un error que podr\u00edas capturar.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#131-utilizacion-de-objetos-i","title":"1.3.1.- Utilizaci\u00f3n de objetos (I).","text":"<p>Imagen de un ordenador portatil abierto, en la pantalla difuminado se pueder ver c\u00f3digo escritoNegative Space (Dominio p\u00fablico)</p> <p>Una caracter\u00edstica de la POO que debes tener muy en cuenta es qu\u00e9 sucede con los objetos cuando los pasas a una funci\u00f3n, o simplemente cuando ejecutas un c\u00f3digo como el siguiente:</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy S';</code></p> <p><code>$a = $p;</code></p> <p>En PHP4, la \u00faltima l\u00ednea del c\u00f3digo anterior crea un nuevo objeto con los mismos valores del original, de la misma forma que se copia cualquier otro tipo de variable. Si despu\u00e9s de hacer la copia se modifica, por ejemplo, el atributo 'nombre' de uno de los objetos, el otro objeto no se ver\u00eda modificado.</p> <p>Sin embargo, a partir de PHP5 este comportamiento var\u00eda. El c\u00f3digo anterior simplemente crear\u00eda un nuevo identificador del mismo objeto. Esto es, en cuanto se utilice uno cualquiera de los identificadores para cambiar el valor de alg\u00fan atributo, este cambio se ver\u00eda tambi\u00e9n reflejado al acceder utilizando el otro identificador. Recuerda que, aunque haya dos o m\u00e1s identificadores del mismo objeto, en realidad todos se refieren a la \u00fanica copia que se almacena del mismo.</p> <p>Debes conocer</p> <p>Para crear nuevos identificadores en PHP a un objeto ya existente, se utiliza el operador <code>\"=\"</code>. Sin embargo, como ya sabes, este operador aplicado a variables de otros tipos, crea una copia de la misma. En PHP puedes crear referencias a variables (como n\u00fameros enteros o cadenas de texto), utilizando el operador <code>&amp;</code> , que ya vimos en el paso de par\u00e1metros por referencia:</p> <p><code>$a = 'Samsung Galaxy A6';</code></p> <p><code>$b = &amp; $a;</code></p> <p>En el ejemplo anterior, <code>$b</code> es una referencia a la variable <code>$a</code>. Cuando se cambia el valor de una de ellas, este cambio se refleja en la otra.</p> <p>Las referencias se pueden utilizar para pasarlas como par\u00e1metros a las funciones. Si utilizamos el operador &amp; junto al par\u00e1metro, en lugar de pasar una copia de la variable, se pasa una referencia a la misma.</p> <p><code>function suma(&amp;$v) {</code> <code>$v ++;</code> <code>}</code> <code>$a = 3;</code> <code>suma ($a);</code></p> <p><code>echo $a;   // Muestra 4</code></p> <p>De esta forma, dentro de la funci\u00f3n se puede modificar el contenido de la variable que se pasa, no el de una copia.</p> <p>Referencias en PHP.</p> <p>Por tanto, a partir de PHP5 no puedes copiar un objeto utilizando el operador \"<code>=\"</code>. Si necesitas copiar un objeto, debes utilizar <code>clone</code>. Al utilizar <code>clone</code> sobre un objeto existente, se crea una copia de todos los atributos del mismo en un nuevo objeto.</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code></p> <p><code>$a = clone($p);</code></p> <p>Adem\u00e1s, existe una forma sencilla de personalizar la copia para cada clase particular. Por ejemplo, puede suceder que quieras copiar todos los atributos menos alguno. En nuestro ejemplo, al menos el c\u00f3digo de cada producto debe ser distinto y, por tanto, quiz\u00e1s no tenga sentido copiarlo al crear un nuevo objeto. Si \u00e9ste fuera el caso, puedes crear un m\u00e9todo de nombre <code>__clone</code> en la clase. Este m\u00e9todo se llamar\u00e1 autom\u00e1ticamente despu\u00e9s de copiar todos los atributos en el nuevo objeto.</p> <p><code>class Producto {</code> <code>\u2026</code> <code>public function __clone($atributo) {</code> <code>$this-&gt;codigo = nuevo_codigo();</code> <code>}</code> <code>\u2026</code></p> <p><code>}</code></p> <p>Autoevaluaci\u00f3n</p> <p>\u00bfCu\u00e1l es el nombre de la funci\u00f3n que se utiliza para hacer una copia de un objeto?</p> <p><code>clone</code>.</p> <p><code>__clone</code>.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#132-utilizacion-de-objetos-ii","title":"1.3.2.- Utilizaci\u00f3n de objetos (II).","text":"<p>Soumil Kumar (Dominio p\u00fablico)</p> <p>A veces tienes dos objetos y quieres saber su relaci\u00f3n exacta. Para eso, en PHP puedes utilizar los operadores <code>\"==\"</code> y <code>\"===\"</code>.</p> <p>Si utilizas el operador de comparaci\u00f3n <code>\"==\"</code>, comparas los valores de los atributos de los objetos. Por tanto dos objetos ser\u00e1n iguales si son instancias de la misma clase y, adem\u00e1s, sus atributos tienen los mismos valores.</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code> <code>$a = clone($p);</code> <code>// El resultado de comparar $a == $p da verdadero</code></p> <p><code>//  pues $a y $p son dos copias id\u00e9nticas</code></p> <p>Sin embargo, si utilizas el operador <code>\"===\"</code>, el resultado de la comparaci\u00f3n ser\u00e1 <code>true</code> s\u00f3lo cuando las dos variables sean referencias al mismo objeto.</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code> <code>$a = clone($p);</code> <code>// El resultado de comparar $a === $p da falso</code> <code>//  pues $a y $p no hacen referencia al mismo objeto</code> <code>$a = &amp; $p;</code> <code>// Ahora el resultado de comparar $a === $p da verdadero</code></p> <p><code>//  pues $a y $p son referencias al mismo objeto.</code></p> <p>A veces puede ser \u00fatil mostrar el contenido de un objeto sin tener que usar <code>var_dump()</code> para ello podemos usar el m\u00e9todo m\u00e1gico <code>__toString()</code>. Este m\u00e9todo siempre debe devolver un <code>String.</code></p> <p><code>class Persona{</code> <code>public $nombre;</code> <code>public $apellidos;</code> <code>public $perfil;</code> <code>public function __toString() :String{</code> <code>return \"{$this-&gt;apellidos}, {$this-&gt;nombre}, Tu p\u00e9rfil es: {$this-&gt;perfil}\";</code> <code>}</code> <code>}</code></p> <p><code>$persona = new Persona();</code> <code>$persona-&gt;nombre=\"Manuel\";</code> <code>$persona-&gt;apellidos=\"Gil Gil\";</code> <code>$persona-&gt;perfil=\"P\u00fablico\";</code></p> <p><code>echo $persona; //muestra: Gil Gil, Manuel, Tu p\u00e9rfil es: P\u00fablico</code></p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#14-mecanismos-de-mantenimiento-del-estado","title":"1.4.- Mecanismos de mantenimiento del estado.","text":"<p>Negative Space (Dominio p\u00fablico)</p> <p>En la unidad anterior aprendiste a usar la sesi\u00f3n del usuario para almacenar el estado de las variables, y poder recuperarlo cuando sea necesario. El proceso es muy sencillo; se utiliza el array superglobal <code>$_SESSION</code>, a\u00f1adiendo nuevos elementos para ir guardando la informaci\u00f3n en la sesi\u00f3n.</p> <p>El procedimiento para almacenar objetos es similar, pero hay una diferencia importante. Todas las variables almacenan su informaci\u00f3n en memoria de una forma u otra seg\u00fan su tipo. Los objetos, sin embargo, no tienen un \u00fanico tipo. Cada objeto tendr\u00e1 unos atributos u otros en funci\u00f3n de su clase. Por tanto, para almacenar los objetos en la sesi\u00f3n del usuario, hace falta convertirlos a un formato est\u00e1ndar. Este proceso se llama serializaci\u00f3n.</p> <p>En PHP, para serializar un objeto se utiliza la funci\u00f3n <code>serialize()</code>. El resultado obtenido es un <code>string</code> que contiene un flujo de <code>bytes</code>, en el que se encuentran definidos todos los valores del objeto.</p> <p><code>$p = new Producto();</code></p> <p><code>$a = serialize($p);</code></p> <p>Esta cadena se puede almacenar en cualquier parte, como puede ser la sesi\u00f3n del usuario, o una base de datos. A partir de ella, es posible reconstruir el objeto original utilizando la funci\u00f3n <code>unserialize()</code>.</p> <p><code>$p = unserialize($a);</code></p> <p>Debes conocer</p> <p>Las funciones <code>serialize</code> y <code>unserialize</code> se utilizan mucho con objetos, pero sirven para convertir en una cadena cualquier tipo de dato, excepto el tipo <code>resource</code>. Cuando se aplican a un objeto, convierten y recuperan toda la informaci\u00f3n del mismo, incluyendo sus atributos privados. La \u00fanica informaci\u00f3n que no se puede mantener utilizando estas funciones es la que contienen los atributos est\u00e1ticos de las clases.</p> <p>Si simplemente queremos almacenar un objeto en la sesi\u00f3n del usuario, deber\u00edamos hacer por tanto:</p> <p><code>session_start();</code></p> <p><code>$_SESSION['producto'] = serialize($p);</code></p> <p>Pero en PHP esto a\u00fan es m\u00e1s f\u00e1cil. Los objetos que se a\u00f1adan a la sesi\u00f3n del usuario son serializados autom\u00e1ticamente. Por tanto, no es necesario usar <code>serialize()</code> ni <code>unserialize()</code>.</p> <p><code>session_start();</code></p> <p><code>$_SESSION['producto'] = $p;</code></p> <p>Para poder deserializar un objeto, debe estar definida su clase. Al igual que antes, si lo recuperamos de la informaci\u00f3n almacenada en la sesi\u00f3n del usuario, no ser\u00e1 necesario utilizar la funci\u00f3n <code>unserialize</code>.</p> <p><code>session_start();</code></p> <p><code>$p = $_SESSION['producto'];</code></p> <p>Debes conocer</p> <p>Como ya viste en el tema anterior, el mantenimiento de los datos en la sesi\u00f3n del usuario no es perfecta; tiene sus limitaciones. Si fuera necesario, es posible almacenar esta informaci\u00f3n en una base de datos. Para ello tendr\u00e1s que usar las funciones <code>serialize</code>() y <code>unserialize()</code>, pues en este caso PHP ya no realiza la serializaci\u00f3n autom\u00e1tica.</p> <p>En PHP adem\u00e1s tienes la opci\u00f3n de personalizar el proceso de serializaci\u00f3n y deserializaci\u00f3n de un objeto, utilizando los m\u00e9todos m\u00e1gicos <code>\"__sleep()\"</code> y \"<code>__wakeup()\"</code>. Si en la clase est\u00e1 definido un m\u00e9todo con nombre <code>\"__sleep()\"</code>, se ejecuta antes de serializar un objeto. Igualmente, si existe un m\u00e9todo \"<code>__wakeup()\"</code>, se ejecuta con cualquier llamada a la funci\u00f3n <code>unserialize()</code>.</p> <p>M\u00e9todos m\u00e1gicos <code>__sleep()</code> y <code>__wakeup()</code>.</p> <p>Para saber m\u00e1s</p> <p>A partir de PHP7 se han implementado filtros para <code>unserialize()</code>: Esta caracter\u00edstica busca el proporcionar una mejor seguridad al deserializar objetos en datos no fiables. Previene de posibles inyecciones de c\u00f3digo al capacitar al desarrollador a crear listas blancas de clases que deben ser deserializadas.</p> <p><code>// convertir todos los objetos a un objeto __PHP_Incomplete_Class</code> <code>$data = unserialize($foo, [\u201callowed_classes\u201d =&gt; false]);</code> <code>// convertir todos los objetos a un objeto __PHP_Incomplete_Class excepto a los de MiClase y MiClase2</code> <code>$data = unserialize($foo, [\u201callowed_classes\u201d =&gt; [\u201cMiClase\u201d, \u201cMiClase2\u201d]]);</code> <code>// comportamiento predeterminado (lo mismo que omitir el segundo argumento) que acepta todas las clases</code></p> <p><code>$data = unserialize($foo, [\u201callowed_classes\u201d =&gt; true]);</code></p> <p>Autoevaluaci\u00f3n</p> <p>Si serializas un objeto utilizando <code>serialize</code>, \u00bfpuedes almacenarlo en una base de datos MySQL?</p> <p>Verdadero.</p> <p>Falso.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#15-herencia","title":"1.5.- Herencia.","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n Propia)</p> <p>La herencia es un mecanismo de la POO que nos permite definir nuevas clases en base a otra ya existente. Las nuevas clases que heredan tambi\u00e9n se conocen con el nombre de subclases. La clase de la que heredan se llama clase base o superclase.</p> <p>Por ejemplo, en nuestra tienda web vamos a tener productos de distintos tipos. En principio hemos creado para manejarlos una clase llamada <code>Producto</code>, con algunos atributos y un m\u00e9todo que genera una salida personalizada en formato HTML del c\u00f3digo.</p> <p><code>class Producto {</code> <code>public $codigo;</code> <code>public $nombre;</code> <code>public $nombre_corto;</code> <code>public $pvp;</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Esta clase es muy \u00fatil si la \u00fanica informaci\u00f3n que tenemos de los distintos productos es la que se muestra arriba. Pero, si quieres personalizar la informaci\u00f3n que vas a tratar de cada tipo de producto (y almacenar, por ejemplo para los televisores, las pulgadas que tienen o su tecnolog\u00eda de fabricaci\u00f3n), puedes crear nuevas clases que hereden de <code>Producto</code>. Por ejemplo, <code>TV</code>, <code>PC</code>, <code>Movil</code>.</p> <p><code>class TV extends Producto {</code> <code>public $pulgadas;</code> <code>public $tecnologia;</code></p> <p><code>}</code></p> <p>Como puedes ver, para definir una clase que herede de otra, simplemente tienes que utilizar la palabra <code>extends</code> indicando la superclase. Los nuevos objetos que se instancien a partir de la subclase son tambi\u00e9n objetos de la clase base; se puede comprobar utilizando el operador <code>instanceof()</code>.</p> <p><code>$t = new TV();</code> <code>if ($t instanceof Producto) {</code> <code>// Este c\u00f3digo se ejecuta pues la condici\u00f3n es cierta.</code> <code>. . .</code></p> <p><code>}</code></p> <p>Antes viste algunas funciones \u00fatiles para programar utilizando objetos y clases. Las de la siguiente tabla est\u00e1n adem\u00e1s relacionadas con la herencia.</p> Funci\u00f3n Ejemplo Significado <code>get_parent_class</code>() <code>echo get_parent_class($t);</code> Devuelve el nombre de la clase padre del objeto o la clase que se indica. <code>is_subclass_of</code>() <code>if(is_subclass_of($t,'Producto')</code> Devuelve <code>true</code> si el objeto o la clase del primer par\u00e1metro, tiene como clase base a la que se indica en el segundo par\u00e1metro, o <code>false</code> en caso contrario."},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#151-herencia-i","title":"1.5.1.- Herencia (I).","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n propia.)</p> <p>La nueva clase hereda todos los atributos y m\u00e9todos p\u00fablicos de la clase base, pero no los privados. Si quieres crear en la clase base un m\u00e9todo no visible al exterior (como los privados) que se herede a las subclases, debes utilizar la palabra <code>protected</code> en lugar de <code>private</code>. Adem\u00e1s, puedes redefinir el comportamiento de los m\u00e9todos existentes en la clase base, simplemente creando en la subclase un nuevo m\u00e9todo con el mismo nombre.</p> <p><code>class TV extends Producto {</code> <code>public $pulgadas;</code> <code>public $tecnologia;</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;pulgadas . \" pulgadas&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Existe una forma de evitar que las clases heredadas puedan redefinir el comportamiento de los m\u00e9todos existentes en la superclase: utilizar la palabra <code>final</code>. Si en nuestro ejemplo hubi\u00e9ramos hecho:</p> <p><code>class Producto {</code> <code>public $codigo;</code> <code>public $nombre;</code> <code>public $nombre_corto;</code> <code>public $pvp;</code> <code>public final function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>En este caso el m\u00e9todo <code>muestra</code> no podr\u00eda redefinirse en la clase <code>TV</code>.</p> <p>Incluso se puede declarar una clase utilizando <code>final</code>. En este caso no se podr\u00edan crear clases heredadas utiliz\u00e1ndola como base.</p> <p><code>final class Producto {</code> <code>. . .</code></p> <p><code>}</code></p> <p>Opuestamente al modificador <code>final</code>, existe tambi\u00e9n <code>abstract</code>. Se utiliza de la misma forma, tanto con m\u00e9todos como con clases completas, pero en lugar de prohibir la herencia, obliga a que se herede. Es decir, una clase con el modificador <code>abstract</code> no puede tener objetos que la instancien, pero s\u00ed podr\u00e1 utilizarse de clase base y sus subclases s\u00ed podr\u00e1n utilizarse para instanciar objetos.</p> <p><code>abstract class Producto {</code> <code>. . .</code></p> <p><code>}</code></p> <p>Y un m\u00e9todo en el que se indique <code>abstract</code>, debe ser redefinido obligatoriamente por las subclases, y no podr\u00e1 contener c\u00f3digo.</p> <p><code>class Producto {</code> <code>. . .</code> <code>abstract public function muestra();</code></p> <p><code>}</code></p> <p>Obviamente, no se puede declarar una clase como <code>abstract</code> y <code>final</code> simult\u00e1neamente. <code>abstract</code> obliga a que se herede para que se pueda utilizar, mientras que <code>final</code> indica que no se podr\u00e1 heredar.</p> <p>Autoevaluaci\u00f3n</p> <p>La funci\u00f3n <code>is_subclass_of</code> recibe como primer par\u00e1metro:</p> <p>Un objeto.</p> <p>Un objeto o una clase.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#152-herencia-ii","title":"1.5.2.- Herencia (II).","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n Propia)</p> <p>Vamos a hacer una peque\u00f1a modificaci\u00f3n en nuestra clase <code>Producto</code>. Para facilitar la creaci\u00f3n de nuevos objetos, crearemos un constructor al que se le pasar\u00e1 un array con los valores de los atributos del nuevo producto.</p> <p><code>class Producto {</code> <code>public $codigo;</code> <code>public $nombre;</code> <code>public $nombre_corto;</code> <code>public $pvp;</code> <code>public function __construct($row) {</code> <code>$this-&gt;codigo = $row['cod'];</code> <code>$this-&gt;nombre = $row['nombre'];</code> <code>$this-&gt;nombre_corto = $row['nombre_corto'];</code> <code>$this-&gt;PVP = $row['pvp'];</code> <code>}</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>\u00bfQu\u00e9 pasa ahora con la clase <code>TV</code>, qu\u00e9 hereda de <code>Producto</code>? Cuando crees un nuevo objeto de esa clase, \u00bfse llamar\u00e1 al constructor de <code>Producto</code>? \u00bfPuedes crear un nuevo constructor espec\u00edfico para <code>TV</code> que redefina el comportamiento de la clase base?</p> <p>Empezando por esta \u00faltima pregunta, obviamente puedes definir un nuevo constructor para las clases heredadas que redefinan el comportamiento del que existe en la clase base, tal y como har\u00edas con cualquier otro m\u00e9todo. Y dependiendo de si programas o no el constructor en la clase heredada, se llamar\u00e1 o no autom\u00e1ticamente al constructor de la clase base.</p> <p>En PHP, si la clase heredada no tiene constructor propio, se llamar\u00e1 autom\u00e1ticamente al constructor de la clase base (si existe). Sin embargo, si la clase heredada define su propio constructor, deber\u00e1s ser t\u00fa el que realice la llamada al constructor de la clase base si lo consideras necesario, utilizando para ello la palabra <code>parent</code> y el operador de resoluci\u00f3n de \u00e1mbito.</p> <p><code>class TV extends Producto {</code> <code>public $pulgadas;</code> <code>public $tecnologia;</code> <code>public function __construct($row) {</code> <code>parent::__construct($row); //llama al constructor de la clase padre</code> <code>$this-&gt;pulgadas = $row['pulgadas'];</code> <code>$this-&gt;tecnologia = $row['tecnologia'];</code> <code>}</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;pulgadas . \" pulgadas&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Ya viste con anterioridad c\u00f3mo se utilizaba la palabra clave <code>self</code> para tener acceso a la clase actual. La palabra <code>parent</code> es similar. Al utilizar <code>parent</code> haces referencia a la clase base de la actual, tal y como aparece tras <code>extends</code>.</p> <p>Autoevaluaci\u00f3n</p> <p>Si una subclase no tiene m\u00e9todo constructor, y su clase base s\u00ed lo tiene, cuando se instancie un nuevo objeto de la subclase:</p> <p>Se llamar\u00e1 autom\u00e1ticamente al constructor de la clase base.</p> <p>No se llamar\u00e1 autom\u00e1ticamente al constructor de la clase base.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#16-interfaces","title":"1.6.- Interfaces.","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n propia.)</p> <p>Un interface es como una clase vac\u00eda que solamente contiene declaraciones de m\u00e9todos. Se definen utilizando la palabra <code>interface</code>.</p> <p>Por ejemplo, antes viste que pod\u00edas crear nuevas clases heredadas de <code>Producto</code>, como <code>TV</code> o <code>Ordenador</code>. Tambi\u00e9n viste que en las subclases pod\u00edas redefinir el comportamiento del m\u00e9todo <code>muestra</code> para que generara una salida en HTML diferente para cada tipo de producto.</p> <p>Si quieres asegurarte de que todos los tipos de productos tengan un m\u00e9todo <code>muestra</code>, puedes crear un interface como el siguiente.</p> <p><code>interface iMuestra {</code> <code>public function muestra();</code></p> <p><code>}</code></p> <p>Y cuando crees las subclases deber\u00e1s indicar con la palabra <code>implements</code> que tienen que implementar los m\u00e9todos declarados en este interface.</p> <p><code>class TV extends Producto implements iMuestra {</code> <code>. . .</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;pulgadas . \" pulgadas&lt;/p&gt;\";</code> <code>}</code> <code>. . .</code></p> <p><code>}</code></p> <p>Todos los m\u00e9todos que se declaren en un interface deben ser p\u00fablicos. Adem\u00e1s de m\u00e9todos, los interfaces podr\u00e1n contener constantes pero no atributos.</p> <p>Un interface es como un contrato que la clase debe cumplir. Al implementar todos los m\u00e9todos declarados en el interface se asegura la interoperabilidad entre clases. Si sabes que una clase implementa un interface determinado, sabes qu\u00e9 nombre tienen sus m\u00e9todos, qu\u00e9 par\u00e1metros les debes pasar y, probablemente, podr\u00e1s averiguar f\u00e1cilmente con qu\u00e9 objetivo han sido escritos.</p> <p>Por ejemplo, en la librer\u00eda de PHP est\u00e1 definido el interface <code>\"Countable\"</code>.</p> <p><code>Countable {</code> <code>abstract public int count ( void )</code></p> <p><code>}</code></p> <p>Si creas una clase para la cesta de la compra en la tienda web, podr\u00edas implementar este interface para contar los productos que figuran en la misma.</p> <p>Antes aprendiste que en PHP una clase s\u00f3lo puede heredar de otra, que no existe la herencia m\u00faltiple. Sin embargo, s\u00ed es posible crear clases que implementen varios interfaces, simplemente separando la lista de interfaces por comas despu\u00e9s de la palabra <code>\"implements\"</code>.</p> <p><code>class TV extends Producto implements iMuestra, Countable {</code> <code>. . .</code></p> <p><code>}</code></p> <p>La \u00fanica restricci\u00f3n es que los nombres de los m\u00e9todos que se deban implementar en los distintos interfaces no coincidan. Es decir, en nuestro ejemplo, el interface <code>iMuestra</code> no podr\u00eda contener un m\u00e9todo <code>count</code>, pues \u00e9ste ya est\u00e1 declarado en <code>Countable</code>.</p> <p>Debes conocer</p> <p>En PHP tambi\u00e9n se pueden crear nuevos interfaces heredando de otros ya existentes. Se hace de la misma forma que con las clases, utilizando la palabra <code>\"extends\"</code>.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#161-interfaces-i","title":"1.6.1.- Interfaces (I).","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n propia.)</p> <p>Una de las dudas m\u00e1s comunes en POO, es qu\u00e9 soluci\u00f3n adoptar en algunas situaciones: interfaces o clases abstractas. Ambas permiten definir reglas para las clases que los implementen o hereden respectivamente. Y ninguna permite instanciar objetos. Las diferencias principales entre ambas opciones son:</p> <ul> <li>En las clases abstractas, los m\u00e9todos pueden contener c\u00f3digo. Si van a existir varias subclases con un comportamiento com\u00fan, se podr\u00eda programar en los m\u00e9todos de la clase abstracta. Si se opta por un interface, habr\u00eda que repetir el c\u00f3digo en todas las clases que lo implemente.</li> <li>Las clases abstractas pueden contener atributos, y los interfaces no.</li> <li>No se puede crear una clase que herede de dos clases abstractas, pero s\u00ed se puede crear una clase que implemente varios interfaces.</li> </ul> <p>Por ejemplo, en la tienda online va a haber dos tipos de usuarios: clientes y empleados. Si necesitas crear en tu aplicaci\u00f3n objetos de tipo <code>Usuario</code> (por ejemplo, para manejar de forma conjunta a los clientes y a los empleados), tendr\u00edas que crear una clase no abstracta con ese nombre, de la que heredar\u00edan <code>Cliente</code> y <code>Empleado</code>.</p> <p><code>class Usuario {</code> <code>. . .</code> <code>}</code> <code>class Cliente extends Usuario {</code> <code>. . .</code> <code>}</code> <code>class Empleado extends Usuario {</code> <code>. . .</code></p> <p><code>}</code></p> <p>Pero si no fuera as\u00ed, tendr\u00edas que decidir si crear\u00edas o no <code>Usuario</code>, y si lo har\u00edas como una clase abstracta o como un interface.</p> <p>Si por ejemplo, quisieras definir en un \u00fanico sitio los atributos comunes a <code>Cliente</code> y a <code>Empleado</code>, deber\u00edas crear una clase abstracta <code>Usuario</code> de la que hereden.</p> <p><code>abstract class Usuario {</code> <code>public $dni;</code> <code>protected $nombre;</code> <code>. . .</code></p> <p><code>}</code></p> <p>Pero esto no podr\u00edas hacerlo si ya tienes planificada alguna relaci\u00f3n de herencia para una de estas dos clases.</p> <p>Para finalizar con los interfaces, a la lista de funciones de PHP relacionadas con la POO puedes a\u00f1adir las siguientes.</p> Funci\u00f3n Ejemplo Significado <code>get_declared_interfaces</code>() print_r(get_declared_interfaces()); Devuelve un array con los nombres de los interfaces declarados. <code>interface_exists</code>() <code>if(interface_exists('iMuestra')</code> Devuelve <code>true</code> si existe el interface que se indica, o <code>false</code> en caso contrario. <p>Autoevaluaci\u00f3n</p> <p>Si en tu c\u00f3digo utilizas un interface, y quieres crear uno nuevo bas\u00e1ndote en \u00e9l:</p> <p>Puedes utilizar la herencia para crear el nuevo constructor extendiendo al primero.</p> <p>No puedes hacerlo, pues no se puede utilizar herencia con los interfaces; solo con las clases.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#17-ejemplo-de-poo-en-php","title":"1.7.- Ejemplo de POO en PHP.","text":"<p>Soumil Kumar (Dominio p\u00fablico)</p> <p>Es hora de llevar a la pr\u00e1ctica lo que has aprendido. Vamos a aplicar los principios de la POO para realizar un \"CRUD\" a la tabla \"productos\" de la base de datos \"proyecto\" usada en unidades anteriores. Recuerda que las credenciales para acceder a la base de datos eran \"gestor::secreto\" y en la tabla usuarios hab\u00edamos creado los usuarios \"admin::secreto\" y \"gestor::pass\". En los enlaces siguientes puedes ver un v\u00eddeo en \"youtube\" de la aplicaci\u00f3n ya terminada y un resumen textual del v\u00eddeo.</p> <ul> <li>Enlace al V\u00eddeo.</li> <li>Resumen textual.</li> </ul> <p>B\u00e1sicamente si accedemos como invitado podremos ver el listado de productos y el detalle de cada uno de ellos, y si nos validamos podremos tambi\u00e9n crear, borrar y actualizar productos.</p> <p>Vamos a utilizar una estructura para esta pr\u00e1ctica muy com\u00fan, en el directorio donde guardemos los archivos de la pr\u00e1ctica crearemos una carpeta <code>\"class\"</code> donde guardaremos todas las clases y un carpeta <code>\"public\"</code> donde guardaremos todas las p\u00e1ginas \"<code>php, html...\"</code>, que vayamos a necesitar visualizar en el navegador.</p> <p>Captura de pantalla terminal Ubuntu (Elaboraci\u00f3n propia)</p> <p>Crearemos una clase <code>\"Conexion\"</code> y una clase para todas las tablas que vayamos a usar. El convenio es poner el nombre del archivo exactamente igual al nombre de la clase que implementa, es decir, el archivo <code>\"Usuario.php\"</code> implementar\u00e1 la clase <code>\"Usuario\".</code></p> <p>Para no tener que estar haciendo el <code>\"require\"</code> de cada uno de los archivos de clase que vayamos a necesitar,  vamos a utilizar la \"autocarga de las clases\", que es b\u00e1sicamente un mecanismo por el que cada vez que instanciamos un objeto de una clase hace el <code>\"require\"</code> del archivo donde se encuentra implementada. Por eso es muy importante que respete las convenciones de nombres. El c\u00f3digo para ello ser\u00eda el siguiente:</p> <p><code>spl_autoload_register(function ($class) {</code> <code>require \"../class/\" . $class . \".php\";</code></p> <p><code>});</code></p> <p>Utiliza una funci\u00f3n an\u00f3nima en la llamada, no te preocupes por eso ahora, el funcionamiento es, que cuando en cualquier archivo del directorio <code>\"public\"</code> hacemos una declaraci\u00f3n del tipo <code>\"$objeto=new Objeto()\"</code> autom\u00e1ticamente busca un archivo en el directorio <code>\"class\"</code> (un nivel por abajo, de ah\u00ed el <code>\"..\"</code>) llamado <code>\"Objeto.php\"</code> para hacer el <code>\"require\"</code>, si no existe me dar\u00e1 un error.</p> <p>Veamos el contenido de los archivos:</p> <ul> <li><code>Conexion.php</code>:Descargar <code>conexion.php</code>. (pdf - 28,44 KB) Implementa la clase \"Conexion\" que contendr\u00e1 b\u00e1sicamente los par\u00e1metros para conectarnos, as\u00ed como un m\u00e9todo <code>\"getConexion()\"</code>, que nos devolver\u00e1 la conexi\u00f3n. Todas las dem\u00e1s clases heredar\u00e1n de esta, todo sus atributos ser\u00e1n <code>\"private\"</code> menos el de la conexi\u00f3n que lo hacemos <code>\"protected\"</code>.</li> <li><code>Usuario.php</code>:Descargar <code>usuario.php</code>. (pdf - 28,02 KB) Implementa la clase \"Usuario\" que contendr\u00e1 los atributos de la tabla usuario. Tiene el m\u00e9todo \"<code>isValido($usu, $pass)\"</code> que devolver\u00e1 <code>true</code> si encuentra a un usuario con esa contrase\u00f1a y <code>false</code> en otro caso.</li> <li><code>Familia.php</code>:Descargar <code>familia.php</code>. (pdf - 25,50 KB) Implementa la clase \"Famila\" que contendr\u00e1 los atributos de la tabla usuario. Tiene el m\u00e9todo <code>\"recuperarFamilias()\"</code> que usaremos para rellenar los \"<code>options\"</code> para la lista desplegable del campo familia en crear y actualizar productos, este m\u00e9todo devuelve el <code>\"$stmt\"</code>.</li> </ul> <p><code>Producto.php</code>:Descargar <code>producto.php</code>. (pdf - 38,89 KB) Implementa la clase \"Producto\" que contendr\u00e1 los atributos de la tabla producto. Tiene a parte del constructor los <code>\"setter\"</code> para cada uno de los atributos, un m\u00e9todo para cada una de las operaciones de CRUD, el m\u00e9todo \"<code>existeNombreCorto($n)\"</code> que devolver\u00e1 <code>true</code> si el nombre corto pasado por par\u00e1metro existe y <code>false</code> en otro caso y el m\u00e9todo \"<code>recuperarProductos()\"</code> que devuelve el \"<code>$stmt\"</code> de la consulta para recuperar los productos ordenados alfab\u00e9ticamente, este m\u00e9todo me servir\u00e1 para mostrar los productos en \"<code>listado.php\".</code> <code>function existeNombreCorto($nc){</code> <code>if ($this-&gt;id == null) {</code> <code>$consulta = \"select * from productos where nombre_corto=:nc\";</code> <code>} else {</code> <code>$consulta = \"select * from productos where nombre_corto = :nc AND id != :i\";</code> <code>}</code> <code>$nc = func_get_arg(0);</code> <code>$stmt = $this-&gt;conexion-&gt;prepare($consulta); //podemos acceder a conexion al ser \"protected\"</code> <code>try {</code> <code>if ($this-&gt;id == null)</code> <code>$stmt-&gt;execute([':nc' =&gt; $nc]);</code> <code>else</code> <code>$stmt-&gt;execute([':nc' =&gt; $nc, ':i' =&gt; $this-&gt;id]);</code> <code>} catch (PDOException $ex) {</code> <code>die(\"Error al comprobar el nombre corto: \" . $ex-&gt;getMessage());</code> <code>}</code> <code>if ($stmt-&gt;rowCount() == 0) return false; //No existe</code> <code>return true; //existe</code></p> <ul> <li><code>}</code>   F\u00edjate que en este m\u00e9todo tenemos que controlar si estemos en crear (compruebo que no existe ese nombre_corto en toda la base de datos) o actualizar (no comprobaremos el nombre_corto del c\u00f3digo del producto a actualizar ya que ese nombre_corto ya existe).</li> </ul> <p>Para todas las clases que heredan de la clase Conexi\u00f3n el constructor ser\u00e1:</p> <p><code>public function __construct(){</code> <code>parent::__construct();</code></p> <p><code>}</code></p> <p>Recomendaci\u00f3n</p> <p>Podemos instalar en <code>Visual Studio Code</code>, multitud de extensiones que nos ayudar\u00e1n en nuestro desarrollo, una de ellas es \"<code>PHP Getters &amp; Setters</code>\" que nos crea autom\u00e1ticamente los \"<code>getters</code>\" y los \"<code>setters</code>\" del atributo que deseemos. Una vez instalada s\u00f3lo tenemos que hacer click derecho sobre el atributo que queramos y nos aparecer\u00e1 en el men\u00fa contextual la opci\u00f3n de crear el \"<code>get</code>\", el \"<code>set</code>\" o ambos.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#171-ejemplo-de-poo-en-php-i","title":"1.7.1.- Ejemplo de POO en PHP (I).","text":"<p>Captura de pantalla de Firefox (Elaboraci\u00f3n propia)</p> <p>El resto de ficheros que componen el CRUD tendremos que reescribirlos para que utilicen las clases que acabas de definir. En general, el resultado obtenido es mucho m\u00e1s claro y conciso. Veamos algunos ejemplos:</p> <p>El <code>action</code> de <code>\"login.php\"</code> para autentificar quedar\u00eda: <code>$nombre = trim($_POST['usuario']);</code> <code>$pass = trim($_POST['pass']);</code> <code>if (strlen($nombre) == 0 || strlen($pass) == 0) {</code> <code>error(\"Error, El nombre o la contrase\u00f1a no pueden contener solo espacios en blancos.\");</code> <code>}</code> <code>$usuario = new Usuario();</code> <code>if (!$usuario-&gt;isValido($nombre, $pass)) {</code> <code>$usuario = null;</code> <code>error(\"Credenciales Inv\u00e1lidas\");</code> <code>}</code> <code>$usuario = null;</code> <code>$_SESSION['nombre'] = $nombre;</code></p> <ol> <li><code>header('Location:listado.php');</code></li> </ol> <p>En <code>\"listado.php\"</code>, el c\u00f3digo recuperar todos los productos quedar\u00eda: <code>//Hacemos el autoload de las clases</code> <code>spl_autoload_register(function ($class) {</code> <code>require \"../class/\" . $class . \".php\";</code> <code>});</code> <code>// recuperamos los productos</code> <code>$productos = new Producto();</code> <code>$stmt = $productos-&gt;recuperarProductos();</code> <code>// Cerramos todo</code></p> <ol> <li><code>$producto = null;</code></li> </ol> <p>En <code>\"detalle.php\"</code> el c\u00f3digo para recuperar los detalles del producto seleccionado quedar\u00eda: <code>$producto = new Producto();</code> <code>$producto-&gt;setId($id);</code> <code>$datos = $producto-&gt;read();</code></p> <ol> <li><code>$producto = null;</code></li> </ol> <p>En \"<code>borrar.php\"</code> el c\u00f3digo para borrar el producto de c\u00f3digo <code>$cod</code>: <code>$producto = new Producto();</code> <code>$producto-&gt;setId($cod);</code> <code>$producto-&gt;delete();</code> <code>$producto = null;</code> <code>$_SESSION['mensaje'] = \"Art\u00edculo Borrado Correctamente\";</code></p> <ol> <li><code>header('Location:listado.php');</code></li> </ol> <p>En <code>\"crear.php\"</code> por una parte para comprobamos que no existe el nombre corto: <code>if ($producto-&gt;existeNombreCorto($nc)) {</code> <code>error(\"Error ya existe un nombre corto con ese valor.\");</code> <code>}</code> Y el c\u00f3digo para guardar el producto nuevo <code>//recogemos los datos del formulario, trimamos las cadenas</code> <code>$nombre = trim($_POST['nombre']);</code> <code>$nomCorto = trim($_POST['nombrec']);</code> <code>$pvp = $_POST['pvp'];</code> <code>$des = trim($_POST['descripcion']);</code> <code>$familia = $_POST['familia'];</code> <code>comprobar($nombre, $nomCorto);</code> <code>// si hemos llegado aqui todo ha ido bien vamos a crear el registro</code> <code>$producto-&gt;setNombre($nombre);</code> <code>$producto-&gt;setNombre_corto($nomCorto);</code> <code>$producto-&gt;setPvp($pvp);</code> <code>$producto-&gt;setFamilia($familia);</code> <code>$producto-&gt;setDescripcion($des);</code> <code>$producto-&gt;create();</code> <code>$_SESSION['mensaje'] = 'Producto creado Correctamente';</code> <code>$producto = null;</code></p> <ol> <li><code>header('Location: listado.php');</code></li> </ol> <p>Unas \u00faltimas consideraciones, obviamente todo el c\u00f3digo es mejorable, algunas partes de este c\u00f3digo tienen car\u00e1cter meramente did\u00e1ctico y obviamente se pueden conseguir mejores implementaciones del mismo. Se podr\u00eda haber hecho uso de <code>includes</code> y funciones para evitar repetir algunas partes de c\u00f3digo. Para completar los productos en el <code>\"create\"</code> y el \"<code>update\"</code> se podr\u00eda haber hecho con el constructor inicializando los atributos con los nuevos datos y no usando los <code>setters</code>. Piensa que mejoras podr\u00edas hacer al c\u00f3digo propuesto y comp\u00e1rtelas con tus compa\u00f1eros, es una forma muy \u00fatil de aprender.</p> <p>Prueba a instalar y ejecutar la aplicaci\u00f3n resultante. Revisa el c\u00f3digo y comprueba que entiendes su funcionamiento.</p> <p>Aplicaci\u00f3n de Ejemplo (zip - 15,83 KB)</p> <p>Autoevaluaci\u00f3n</p> <p>La clase DB tiene todos sus m\u00e9todos est\u00e1ticos. No tiene sentido por tanto crear ning\u00fan objeto de esa clase, y podr\u00eda haberse implementado igualmente como un interface.</p> <p>Verdadero.</p> <p>Falso.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#2-programacion-en-capas","title":"2.- Programaci\u00f3n en capas.","text":"<p>En el ejemplo anterior, hemos programado una aplicaci\u00f3n web sencilla utilizando programaci\u00f3n orientada a objetos. Sin embargo, si observaste el resultado obtenido, habr\u00e1s visto como en muchas ocasiones se mezcla el c\u00f3digo propio de la l\u00f3gica de la aplicaci\u00f3n, con el c\u00f3digo necesario para crear el interface web que se presenta a los usuarios.</p> <p>De igual manera el encabezado de las p\u00e1ginas era repetido una y otra vez (importar <code>Bootstrap</code>, <code>FontAwesome</code>...). Ademas existe un problema a\u00f1adido: si el proyecto es extenso y en distintos archivos tenemos clases de igual nombre podremos tener colisi\u00f3n entre ellas.</p> <p>Existen varios m\u00e9todos que permiten separar la l\u00f3gica de presentaci\u00f3n (en nuestro caso, la que genera las etiquetas HTML) de la l\u00f3gica de negocio, donde se implementa la l\u00f3gica propia de cada aplicaci\u00f3n. El m\u00e1s extendido es el patr\u00f3n de dise\u00f1o Modelo \u2013 Vista \u2013 Controlador (MVC). Este patr\u00f3n pretende dividir el c\u00f3digo en tres partes, dedicando cada una a una funci\u00f3n definida y diferenciada de las otras.</p> <ul> <li>Modelo. Es el encargado de manejar los datos propios de la aplicaci\u00f3n. Debe proveer mecanismos para obtener y modificar la informaci\u00f3n del mismo. Si la aplicaci\u00f3n utiliza alg\u00fan tipo de almacenamiento para su informaci\u00f3n (como un SGBD), tendr\u00e1 que encargarse de almacenarla y recuperarla.</li> <li>Vista. Es la parte del modelo que se encarga de la interacci\u00f3n con el usuario. En esta parte se encuentra el c\u00f3digo necesario para generar el interface de usuario (en nuestro caso en HTML), seg\u00fan la informaci\u00f3n obtenida del modelo.</li> <li>Controlador. En este m\u00f3dulo se decide qu\u00e9 se ha de hacer, en funci\u00f3n de las acciones del usuario con su interface. Con esta informaci\u00f3n, interact\u00faa con el modelo para indicarle las acciones a realizar y, seg\u00fan el resultado obtenido, env\u00eda a la vista las instrucciones necesarias para generar el nuevo interface.</li> </ul> <p>La gran ventaja de este patr\u00f3n de programaci\u00f3n es que genera c\u00f3digo muy estructurado, f\u00e1cil de comprender y de mantener. En la web puedes encontrar muchos ejemplos de implementaci\u00f3n del modelo MVC en PHP.</p> <p>Aunque puedes programar utilizando MVC por tu cuenta, es m\u00e1s habitual utilizar el patr\u00f3n MVC en conjunci\u00f3n con un framework o marco de desarrollo. Existen numerosos frameworks disponibles en PHP, muchos de los cuales incluyen soporte para MVC como Laravel y Symfony.  En esta unidad no profundizaremos en la utilizaci\u00f3n de un framework espec\u00edfico, pero utilizaremos Blade que es el sistema de plantillas de Laravel, el cual nos permite generar HTML din\u00e1mico con una sintaxis mucho m\u00e1s limpia que si us\u00e1ramos PHP plano.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#21-namespaces-en-php","title":"2.1.- Namespaces en PHP.","text":"<p>Open Clipart (CC0)</p> <p>Los <code>namespaces</code> o espacios de nombres permiten crear proyectos complejas con mayor flexibilidad evitando problemas de colisi\u00f3n entre clases, m\u00e9todos, funciones y mejorando la legibilidad del c\u00f3digo. aparecen a partir de PHP5.3</p> <p>Los <code>namespace</code> son un contenedor que nos permitir\u00e1 agrupar nuestro c\u00f3digo para darle un uso posterior de esta manera evitamos conflictos de nombre. Por ejemplo, tenemos 2 funciones con el mismo nombre esto generar\u00eda un conflicto de nombre pero mediante el uso de <code>namespace</code> se da soluci\u00f3n a este problema. En definitiva los <code>namespace</code> nos ayudaran para organizar y reestructurar mejor nuestro c\u00f3digo y proporcionan una manera para agrupar clases, interfaces, funciones y constantes relacionadas.</p> <p>Podemos comprarlo con el sistema de archivos, los archivos est\u00e1n dentro de carpetas y dentro de \u00e9stas hay a su vez otras carpetas con otros archivos. Una carpeta se comporta como si fuera un <code>namespace</code>, por ejemplo, no puede haber dos archivos con el mismo nombre en la misma carpeta, pero s\u00ed puede haber dos archivos con el mismo en distintas.</p> <p>Veamos como funcionan. Hay que declararlo en la primeara l\u00ednea de c\u00f3digo</p> <p><code>&lt;?php</code> <code>namespace Proyecto;</code></p> <p><code>//la declaraci\u00f3n del namespace debe ser la primera l\u00ednea si no obtendremos un error</code></p> <p>En un espacio de nombres se engloban:</p> <ul> <li>Constantes.</li> <li>Funciones.</li> <li>Clases, interfaces, traits, clases abstractas.</li> </ul> <p>Vemos un ejemplo m\u00e1s completo. Creemos el archivo \"<code>ejemploNamespace.php</code>\"</p> <p><code>&lt;?php</code> <code>namespace Proyecto;</code> <code>const E = 2.7182;</code> <code>function saludo(){</code> <code>echo \"Buenos dias\";</code> <code>}</code> <code>class Prueba{</code> <code>private $nombre;</code> <code>public function probando(){</code> <code>echo \"Esto es el m\u00e9todo probando de la clase Prueba\";</code> <code>}</code></p> <p><code>}</code></p> <p>Para pode usar este archivo en otra parte podemos hacerlo de varias formas:</p> <p><code>&lt;?php</code> <code>include \"ejemploNamespace.php\";</code> <code>echo Proyecto\\E; // accedemos a la constante</code> <code>Proyecto\\saludo(); // accedemos a la funci\u00f3n</code> <code>$prueba=new Proyecto\\Prueba();</code> <code>$prueba-&gt;probando();</code></p> <p>O bien :</p> <p><code>&lt;?php</code> <code>include \"ejemploNamespace.php\";</code> <code>use const Proyecto\\E;</code> <code>use function Proyecto\\saludo;</code> <code>use Proyecto\\Prueba;</code> <code>// ahora ya podemos usarlos</code> <code>echo E;</code> <code>saludo();</code> <code>$prueba = new Prueba();</code></p> <p><code>$prueba-&gt;probando();</code></p> <p>Es una buena pr\u00e1ctica de programaci\u00f3n colocar los archivos del espacio de nombres en carpetas que tienen los mismos nombres que el <code>namespace</code> declarado.</p> <p>La posibilidad de declarar el uso de una funci\u00f3n o constante de un <code>namespace</code> est\u00e1 disponible solo a partir de PHP 5.6.</p> <p>Autoevaluaci\u00f3n</p> <p>En un <code>namespace</code> solo guardaremos las clases para evitar colisiones entre ellas.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#sugerencia","title":"Sugerencia","text":"<p>Verdadero  Falso</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#22-gestionar-dependencias","title":"2.2.- Gestionar Dependencias.","text":"<p>WizardCat (MIT)</p> <p>A la hora de empezar el desarrollo de un proyecto en PHP, es necesario conocer todas las librer\u00edas que necesitaremos. La instalaci\u00f3n de estas librer\u00edas puede ser una tarea trabajosa si lo hacemos a mano, pero existen gestores de dependencias que se encargan de realizarla de forma autom\u00e1tica, gestionando esas librer\u00edas de forma sencilla y eficaz.</p> <p>Composer es un gestor de dependencias en proyectos, para programaci\u00f3n en PHP. Eso quiere decir que nos permite gestionar (declarar, descargar y mantener actualizados) los paquetes de software en los que se basa nuestro proyecto PHP. Entre sus principales virtudes destacan:</p> <ul> <li>Es simple de utilizar</li> <li>Cuenta con un repositorio propio donde podemos encontrar casi de todo (Packagist)</li> <li>Disminuye significativamente problemas de cambio de entorno de ejecuci\u00f3n (Mediante su funcionalidad de congelar dependencias)</li> <li>Actualiza las librer\u00edas a nuevas versiones f\u00e1cilmente si queremos mediante \"<code>composer update</code>\".</li> </ul> <p>Vemos a empezar a trabajar con <code>Composer</code>, para ello veremos la instalaci\u00f3n y los primeros pasos:</p> <p>Instalaci\u00f3n Nos descargamos el archivo desde la p\u00e1gina oficial (acceder a Composer), desde esa p\u00e1gina nos recomiendan ejecutar las siguientes instrucciones: <code>php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"</code> <code>php -r \"if (hash_file('sha384', 'composer-setup.php') === 'e0012edf3e80b6978849f5eff0d4b4e4c79ff1609dd1e613307e16318854d24ae64f26d17af3ef0bf7cfb710ca74755a') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"</code> <code>php composer-setup.php</code></p> <ul> <li><code>php -r \"unlink('composer-setup.php');\"</code>   Debes bajarte los comandos actualizados en el enlace siguiente: Descargar Composer.   Una vez hecho esto y si no ha habido problemas tendremos el archivo \"<code>composer.phar</code>\" en el directorio donde estemos, para hacer una instalaci\u00f3n para todos los usuarios del sistema, es decir global (se recomienda hacerlo as\u00ed), desde la terminal escribiremos lo siguiente: <code>sudo mv composer.phar /usr/local/bin/composer</code>   Para comprobar que todo funciona teclea desde la terminal el comando \"<code>composer\"</code> te debe aparecer algo como lo siguiente: Captura de pantalla Ubuntu (Elaboraci\u00f3n propia)</li> <li>Primeros pasos   Veamos su uso, en la ra\u00edz del directorio donde vaya a estar nuestro proyecto y desde la terminal tecleamos \"<code>composer init</code>\" a continuaci\u00f3n se nos hacen unas preguntas y vamos contestando:<ul> <li><code>Package name (&lt;vendor&gt;/&lt;name&gt;)</code> : aqu\u00ed nos pregunta organizaci\u00f3n y nombre podemos poner \"<code>usuario/usuario\"</code> por ejemplo</li> <li><code>Description []</code> : Ponemos una descripci\u00f3n del proyecto</li> <li><code>Author</code> : ponemos autor y correo en el formato siguiente: autor \\&lt;correo&gt;, por ejemplo: \"<code>usuario &lt;usuario@correo.es&gt;\"</code></li> <li><code>Minimum Stability []</code> : Lo podemos dejar en blanco.</li> <li><code>Package Type []</code> : Aqu\u00ed elegiremos <code>project</code>.</li> <li><code>License []</code> : Ponemos la licencia por ejemplo GPL</li> <li>A las siguientes preguntas sobre definir nuestras dependencias, ahora decimos que no.</li> </ul> </li> </ul> <p>Al final nos muestra un archivo JSON , se nos pregunta que si queremos generarlo, contestamos que si y nos genera el archivo \"<code>composer.json</code>\". Una vez generado el archivo tecleando \"<code>composer install</code>\" nos instalar\u00e1 las dependencias.</p> <p>Una de las cosas que hace <code>composer</code> es gestionarnos el tema tema de la autocarga de clases/librer\u00edas (acu\u00e9rdate que en apartados anteriores ya hab\u00edamos visto una forma de hacerlo). Para ello debemos crearnos, en el ra\u00edz del proyecto que vayamos a usar, un directorio de nombre por ejemplo \"src\" y modificar el archivo \"<code>composer.json</code>\". Para el \"autoload\" de clases y librer\u00edas se hace uso de los <code>namespaces.</code></p> <p><code>\"name\": \"usuario/usuario\",</code> <code>\"description\": \"Ejemplo Blade\",</code> <code>\"type\": \"project\",</code> <code>\"config\": {</code> <code>\"optimize-autoloader\": true</code> <code>},</code> <code>\"autoload\": {</code> <code>\"psr-4\": {</code> <code>\"Clases\\\\\": \"src\"</code> <code>}</code> <code>},</code> <code>\"license\": \"GNU/GPL\",</code> <code>\"authors\": [</code> <code>{</code> <code>\"name\": \"usuario\",</code> <code>\"email\": \"usuario@correo.es\"</code> <code>}</code> <code>]</code></p> <p><code>}</code></p> <p>F\u00edjate de la l\u00ednea 7 a la 10 lo que estamos indicando es que vamos a tener un <code>namespace</code> de nombre Clases y que su directorio real va a ser \"<code>src</code>\". En este directorio meteremos todas las clases y comenzaremos el archivo como ya vimos \"<code>namespace Clases</code>\". Las tres lineas anteriores es para que se optimize la autocarga de las clases, no es necesario pero si recomendable. El nombre que se le suele dar al directorio de clases de un proyecto es \"<code>src</code>\" de \"source\".</p> <p>Cada vez que modifiquemos el fichero \"<code>composer.json</code>\" hay que hacer un \"<code>composer install</code>\" para instalar las nuevas dependencias que hayamos puesto.</p> <p>Si deseamos a\u00f1adir dependencias a posteriori podemos escribir el comando: <code>\"composer require vendor/libreria\"</code>, por ejemplo <code>\"composer require fzaninotto/faker\"</code>, para instalar la librer\u00eda que nos permite generar datos aleatorios de prueba.</p> <p>Para saber m\u00e1s</p> <p>En Packagist hay paquetes para casi todo lo que se ocurra en PHP, tenemos Carbon para gestionar fechas, PHPMailer para gestionar mails, extensiones para crear c\u00f3digos de barra, motores de plantillas como Blade usado en Laravel y que veremos a continuaci\u00f3n y mucho mucho m\u00e1s. Antes de intentar programar una aplicaci\u00f3n/librer\u00eda mira si ya existe en Packagist, con Composer ser\u00e1 muy sencillo instalarla.</p> <p>Si te fijas para el <code>autoload</code> en el archivo \"<code>composer.json\"</code> utilizamos \"<code>psr4\"</code>. Esto es un est\u00e1ndar de programaci\u00f3n en PHP propuestos por el php-fig (Grupo de interoperatibilidad para Frameworks PHP). En el enlace siguiente podr\u00e1s obtener m\u00e1s informaci\u00f3n de estos est\u00e1ndares: Informaci\u00f3n sobre est\u00e1ndares \"psr\".</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#23-separacion-de-la-logica-de-negocio","title":"2.3.- Separaci\u00f3n de la l\u00f3gica de negocio.","text":"<p>Captura de pantalla de Visual Studio Code (Elaboraci\u00f3n propia.)</p> <p>Otros mecanismos disponibles en PHP, menos complejos que la utilizaci\u00f3n del patr\u00f3n MVC, y que tambi\u00e9n permiten la separaci\u00f3n de la l\u00f3gica de presentaci\u00f3n y la l\u00f3gica de negocio, son los llamados motores de plantillas (template engines).</p> <p>Un motor de plantillas web es una aplicaci\u00f3n que genera una p\u00e1gina web a partir de un fichero con la informaci\u00f3n de presentaci\u00f3n (denominado plantilla o template, que viene a ser similar a la vista en el patr\u00f3n MVC) y otro con la l\u00f3gica interna de la aplicaci\u00f3n (similar al modelo de MVC). De esta forma, es sencillo dividir el trabajo de programaci\u00f3n de una aplicaci\u00f3n web en dos perfiles: un programador, que debe conocer el lenguaje de programaci\u00f3n en el que se implementar\u00e1 la l\u00f3gica de la aplicaci\u00f3n (en nuestro caso PHP), y un dise\u00f1ador, que se encargar\u00e1 de elaborar las plantillas, (en el caso de la web b\u00e1sicamente en HTML, aunque como veremos la l\u00f3gica de presentaci\u00f3n que se incorpore utilizar\u00e1 un lenguaje propio).</p> <p>En PHP existen varios motores de plantillas con diferentes caracter\u00edsticas. Nosotros trabajaremos con Blade que es el motor de plantillas que viene con Laravel.</p> <p>Blade es un sistema de plantillas que nos permite generar HTML din\u00e1mico con una sintaxis mucho m\u00e1s limpia que si us\u00e1ramos PHP plano. Veamos como instalarlo, configurarlo y unos primeros pasos</p> <p>Blade necesita una carpeta \"<code>cache</code>\" (donde se guardara una cache de las vistas  para su carga) y una carpeta \"<code>views</code>\" que ser\u00e1 la carpeta donde guardaremos los archivos de plantilla que creeemos. Todas las vistas Blade tienen que tener la extensi\u00f3n \"<code>.blade.php</code>\". Para configurar un proyecto donde vayamos a utilizar Blade, haremos lo siguiente:</p> <p>En la carpeta del proyecto creamos las carpetas \"<code>public</code>\" (ser\u00e1 la parte accesible desde el servidor web), \"<code>src</code>\" (guardaremos las clases que vayamos a crear si es el caso), \"<code>caches</code>\" y \"<code>views</code>\". En la carpeta \"<code>cache</code>\" el servidor web (Apache) necesita permiso de escritura, si estamos en Windows no hay problema, si estamos en Linux y sabes como hacerlo lo m\u00e1s seguro es que pongas como grupo de estaa carpetas a Apache y des los permisos apropiados. Para no complicarnos desde la terminal y en la carpeta de nuestro proyecto una vez creadas las carpetas tecleamos: \"<code>chmod 777 cache</code>\" .</p> <p>Una vez creada la estructura de nuestro proyecto iniciamos <code>composer</code> acu\u00e9rdate que esto lo hac\u00edamos con \"<code>composer init</code>\" contestamos a las preguntas iniciales como ya vimos y  las siguientes as\u00ed:</p> <ul> <li>\"<code>Would you like to define your dependencies (require) interactively [yes]?</code>\" en vez escribir no, le damos a <code>intro</code> (\"yes\" es la opci\u00f3n por defecto)</li> <li>\"<code>Search for a package:\"</code> ponemos \"<code>laravel-blade</code>\" y elegimos la opci\u00f3n: \"<code>philo/laravel-blade</code>\". A veces el paquete puede no aparecer (puede haber cambiado el nombre, el desarrollador...), no pasa nada, vete a Packagist , desde su buscador localiza el paquete y sigue las instrucciones, que b\u00e1sicamente son poner unas l\u00edneas en tu archivo \"<code>composer.json</code>\" y hacer \"<code>composer install</code>\". O generar el archivo y hacer el \"<code>composer require</code>\" despu\u00e9s como ya vimos.</li> <li>Para las dependencias de desarrollo (<code>dev</code>) contestamos que no.</li> <li>\"<code>Do you confirm generation [yes]?</code>\" le damos a <code>intro</code> (\"yes\" es la opci\u00f3n por defecto)</li> <li>\"<code>Would you like to install dependencies now [yes]?</code>\" le damos a <code>intro</code> (\"yes\" es la opci\u00f3n por defecto) . En este paso se descargan las librer\u00edas seleccionadas, en este caso: \"<code>philo/laravel-blade</code>\" en la carpeta \"<code>vendor</code>\" que si no existe se crear\u00e1.</li> </ul> <p>Captura de pantalla Ubuntu (Elaboraci\u00f3n propia) Una vez hecho esto podemos implementar la \"autocarga\" y el \"optimizador\" de la misma como ya vimos. Al final el archivo \"<code>composer.json</code>\" nos deber\u00eda quedar m\u00e1s o manos as\u00ed:</p> <p><code>{</code> <code>\"name\": \"usuario/usuario\",</code> <code>\"description\": \"Ejemplo Blade\",</code> <code>\"type\": \"project\",</code> <code>\"require\": {</code> <code>\"philo/laravel-blade\": \"^3.1\"</code> <code>},</code> <code>\"config\": {</code> <code>\"optimize-autoloader\": true</code> <code>},</code> <code>\"autoload\": {</code> <code>\"psr-4\": {</code> <code>\"Clases\\\\\": \"src\"</code> <code>}</code> <code>},</code> <code>\"license\": \"GNU/GPL\",</code> <code>\"authors\": [</code> <code>{</code> <code>\"name\": \"usuario\",</code> <code>\"email\": \"usuario@ejemplo.es\"</code> <code>}</code> <code>]</code></p> <p><code>}</code></p> <p>Hacemos \"<code>composer install</code>\" y ya estemos en condiciones de empezar a usar Blade en nuestro proyecto.</p> <p>Autoevaluaci\u00f3n</p> <p>\u00bf Necesitamos usar el Framework Laravel pasar sacar ventajas del gestor de plantillas Blade ?</p> <p>Verdadero</p> <p>Falso.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#231-separacion-de-la-logica-de-negocio-ii","title":"2.3.1.- Separaci\u00f3n de la l\u00f3gica de negocio (II).","text":"<p>OpenClipart-Vectors (Dominio p\u00fablico)</p> <p>Para utilizar Blade, y suponiendo que estamos trabajando con la estructura de directorios que se propuso en el apartado anterior, simplemente tienes que a\u00f1adir a tus p\u00e1ginas del directorio \"<code>public</code>\" lo siguiente:</p> <p><code>&lt;?php</code> <code>require 'vendor/autoload.php';</code> <code>use Philo\\Blade\\Blade;</code> <code>$views = '../views';</code> <code>$cache = '../cache';</code> <code>$blade = new Blade($views, $cache);</code></p> <p><code>echo $blade-&gt;view()-&gt;make('vista')-&gt;render();</code></p> <p>Esto me cargar\u00eda la vista \"<code>vista.blade.php</code>\" de la carpeta \"<code>views</code>\". F\u00edjate que solo hace falta poner el nombre de la vista y no la extensi\u00f3n \"<code>.blade.php</code>\".</p> <p>Para entender esto mejor desarrollaremos un proyecto con dos p\u00e1ginas, una para ver el listado de productos de la base de datos proyecto y otra para ver el listado de familias.</p> <p>A las clases Conexion, Productos y Familias que ya la hemos visto a lo largo del tema, vamos a modificarlas para usar <code>namespaces</code> en todo el proyecto. La estructura de nuestro proyecto de ejemplo podr\u00eda ser la siguiente:</p> <p>Captura de pantalla Visual Studio Code (Elaboraci\u00f3n propia)</p> <ul> <li>En \"<code>src</code>\" tendremos las clases para conectarnos a la base de dato y recuperar los datos de familias y productos.</li> <li>En \"<code>public</code>\" Las dos p\u00e1ginas que realmente mostraremos</li> <li>En \"<code>views</code>\" crearemos una carpeta \"<code>plantillas</code>\" (pondremos las plantillas que reusaremos las veces que queramos) y las dos vistas, la que me generar\u00e1 el listado de productos y la que me generar\u00e1 el listado de familias.</li> </ul> <p>Vamos a ello:</p> <p>Las clases ya sabemos como hacerlas simplemente vamos a poner en el encabezado de las mismas, lo siguiente. Ten en cuenta que el nombre del namespace viene dado por lo que pusimos en el <code>\"autoload</code>\" del <code>composer</code> y la carpeta de las mismas tambi\u00e9n. Si los has cambiado debes reflejarlo en \"<code>composer.json</code>\"</p> <p><code>&lt;?php</code> <code>namespace Clases;</code> <code>use PDO;</code></p> <p><code>use PDOException;</code></p> <p>Al usar namespace es necesario poner \"<code>use</code>\" a los m\u00e9todos y la clase <code>PDO.</code> Si no lo hacemos para no tener errores tendr\u00edamos que andar poniendo \"<code>$conexion = new \\PDO(. . . )</code>, <code>catch(\\PDOException)</code> . . .\"</p> <p>Las p\u00e1ginas que vamos a ver (familias y productos) comporten una estructura como el esqueleto html,  la carga de bootstrap  o las hojas de estilos, todo esto lo podemos meter en la plantilla y as\u00ed nos evitamos tener que repetir el mismo c\u00f3digo una y otra vez. Veamos la plantilla</p> <p><code>&lt;!doctype html&gt;</code> <code>&lt;html lang=\"es\"&gt;</code> <code>&lt;head&gt;</code> <code>&lt;meta charset=\"UTF-8\"&gt;</code> <code>&lt;meta name=\"viewport\"</code> <code>content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"&gt;</code> <code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;</code> <code>&lt;!-- css para usar Bootstrap --&gt;</code> <code>&lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\"&gt;</code> <code>&lt;title&gt;@yield('titulo')&lt;/title&gt;</code> <code>&lt;/head&gt;</code> <code>&lt;body style=\"background:#0277bd\"&gt;</code> <code>&lt;div class=\"container mt-3\"&gt;</code> <code>&lt;h3 class=\"text-center mt-3 mb-3\"&gt;@yield('encabezado')&lt;/h3&gt;</code> <code>@yield('contenido')</code> <code>&lt;/div&gt;</code> <code>&lt;/body&gt;</code></p> <p><code>&lt;/html&gt;</code></p> <p>cada instrucci\u00f3n de Blade viene precedida de \"<code>@</code>\". En las l\u00edneas 10, 14 y 15 ver\u00e1s \"<code>@yield('. . .')</code>\"  se usa para mostrar el contenido de una secci\u00f3n determinada. Para cada p\u00e1gina cambiaremos: contenido, t\u00edtulo y cabecera.</p> <p>Veamos como hacemos uso de esta plantilla en las vistas:</p> <p>Vista: \"<code>vistaProductos.blade.php</code>\"</p> <p><code>@extends('plantillas.plantilla1')</code> <code>@section('titulo')</code> <code>{{$titulo}}</code> <code>@endsection</code> <code>@section('encabezado')</code> <code>{{$encabezado}}</code> <code>@endsection</code> <code>@section('contenido')</code> <code>&lt;table class=\"table table-striped\"&gt;</code> <code>&lt;thead&gt;</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"col\"&gt;C\u00f3digo&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Nombre&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Nombre Corto&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Precio&lt;/th&gt;</code> <code>&lt;/tr&gt;</code> <code>&lt;/thead&gt;</code> <code>&lt;tbody&gt;</code> <code>@foreach($productos as $item)</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"row\"&gt;{{$item-&gt;id}}&lt;/th&gt;</code> <code>&lt;td&gt;{{$item-&gt;nombre}}&lt;/td&gt;</code> <code>&lt;td&gt;{{$item-&gt;nombre_corto}}&lt;/td&gt;</code> <code>@if($item-&gt;pvp&gt;100)</code> <code>&lt;td class='text-danger'&gt;{{$item-&gt;pvp}}&lt;/td&gt;</code> <code>@else</code> <code>&lt;td class='text-success'&gt;{{$item-&gt;pvp}}&lt;/td&gt;</code> <code>@endif</code> <code>&lt;/tr&gt;</code> <code>@endforeach</code> <code>&lt;/tbody&gt;</code> <code>&lt;/table&gt;</code></p> <p><code>@endsection</code></p> <p>Vista \"<code>vistaFamilias.blade.php</code>\"</p> <p><code>@extends('plantillas.plantilla1')</code> <code>@section('titulo')</code> <code>{{$titulo}}</code> <code>@endsection</code> <code>@section('encabezado')</code> <code>{{$encabezado}}</code> <code>@endsection</code></p> <p><code>@section('contenido')</code> <code>&lt;table class=\"table table-striped\"&gt;</code> <code>&lt;thead&gt;</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"col\"&gt;C\u00f3digo&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Nombre&lt;/th&gt;</code> <code>&lt;/tr&gt;</code> <code>&lt;/thead&gt;</code> <code>&lt;tbody&gt;</code> <code>@foreach($familias as $item)</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"row\"&gt;{{$item-&gt;cod}}&lt;/th&gt;</code> <code>&lt;td&gt;{{$item-&gt;nombre}}&lt;/td&gt;</code></p> <pre><code>        `&lt;/tr&gt;`  \n    `@endforeach`  \n    `&lt;/tbody&gt;`  \n`&lt;/table&gt;`\n</code></pre> <p><code>@endsection</code></p> <p>Lo primero que hacemos con \"<code>@extends('...')</code>\" es llamar a la plantilla, para ello indicamos la ruta (f\u00edjate que la extensi\u00f3n \"<code>.blade.php</code>\" no hace falta ponerla). Acu\u00e9rdate que creamos tres \"<code>yields</code>\" uno llamado t\u00edtulo, otro encabezado y otro contenido, para rellenarlos ponemos el bloque \"<code>@section('...'),  @endsection</code>\" con el nombre que pusimos en los \"<code>yields</code>\".</p> <p>A las vistas mandamos unas variables (en el apartado siguiente veremos como). A la vista \"<code>vistaProductos.blade.php</code>\" mandamos las variables \"<code>$titulo, $encabezado y $productos</code>\", <code>$producto</code> trae los productos de las base de datos (los mandamos con un \"<code>fetchAll()</code>\" de una consulta a la tabla productos). Cuando usamos Blade no hace falta poner \"<code>&lt;?php echo $titulo; ?&gt;</code>\"  que es como lo hemos hecho hasta ahora, nos basta con poner \"<code>{{...}}</code>\"</p> <p>Puedes observar ademas que tambi\u00e9n podemos poner un bucle para recorrer, en este caso, los productos \"<code>@foreach(...), endforeach</code>\".</p> <p>De igual manera con un bloque \"<code>@if, @else, @endif</code>\" pintamos los precios de mas de 100\u20ac de rojo y el resto de verde.</p> <p>El c\u00f3digo HTML lo ponemos tal cual, si necesit\u00e1semos poner c\u00f3digo PHP en una pagina Blade lo pondr\u00edamos entre las directivas \"<code>@php, @endphp</code>\"</p> <p>En el enlace siguiente tenemos un manual muy completo de Blade en \"styde.net\"</p> <p>Manual Blade</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#24-generacion-del-interface-de-usuario","title":"2.4.- Generaci\u00f3n del interface de usuario.","text":"<p>kreatikar (Pixabay License)</p> <p>En el apartado anterior configuramos las vistas y una plantilla para ahorrarnos repetir c\u00f3digo, a las vistas las pasamos unas variables como titulo encabezado, las listas de datos que queramos mostrar . . . Veamos como podemos llamar a estas vistas y pasar variables a las mismas.</p> <p>En la carpeta \"<code>public</code>\" (la \u00fanica carpeta que realmente necesita ser accesible para el navegador) vamos a tener dos archivos: \"<code>familias.php</code>\" que se encargar\u00e1 de llamar a la vista \"<code>vistaFamilias.blade.php</code>\" y pasar las variables necesarias, y \"<code>productos.php</code>\" que har\u00e1 lo mismo con la vista \"<code>vistaProductos.blade.php</code>\". F\u00edjate en el c\u00f3digo.</p> <p>P\u00e1gina: \"<code>productos.php</code>\"</p> <p><code>&lt;?php</code></p> <p><code>require '../vendor/autoload.php';</code></p> <p><code>use Philo\\Blade\\Blade;</code> <code>use Clases\\Producto;</code></p> <p><code>$views = '../views';</code> <code>$cache = '../cache';</code></p> <p><code>$blade = new Blade($views, $cache);</code> <code>$titulo='Productos';</code> <code>$encabezado='Listado de Productos';</code> <code>$productos=(new Producto())-&gt;recuperarProductos();</code></p> <p><code>echo $blade-&gt;view()-&gt;make('vistaProductos', compact('titulo', 'encabezado', 'productos'))-&gt;render();</code></p> <p>El funcionamiento es muy sencillo:</p> <ol> <li>Con el \"<code>require</code>\" llamamos al archivo \"<code>autoload.php</code>\" de la carpeta \"<code>vendor</code>\" (esta carpeta la crea autom\u00e1ticamente \"composer\" con las librer\u00edas y clases necesarias. En este proyecto lo necesario para que funcione Blade y el autoload)</li> <li>Las l\u00edneas del \"<code>use</code>\" son para poder usar nuestras Clases y las de \"<code>Philo\\Blade</code>\" (acu\u00e9rdate del <code>namespace</code> de las mismas que era Clase).</li> <li>Las siguientes son para indicar la ruta relativa de las carpetas \"<code>views</code>\" y \"<code>cache</code>\" y guardarla en sendas variables.</li> </ol> <p>En la siguiente nos creamos un objeto de la clase \"<code>Blade\"</code>, le pasamos las rutas de las carpetas \"<code>views</code>\" y \"<code>cache</code>\" e inicializamos las variables que pasaremos a la vista: <code>$titulo, $encabezado y $productos</code>. Esta \u00faltima l\u00ednea la hemos simplificado, en realidad pod\u00edamos haber puesto: <code>$productos = new Productos();</code></p> <ol> <li><code>$productos-&gt;recuperarProductos();</code></li> <li>En la \u00faltima l\u00ednea lamamos a la vista: '<code>vistaProductos'</code>de la carpeta \"<code>views</code>\" y le pasamos usando \"<code>compact()</code>\" las tres variables: <code>$titulo, $encabezado y $productos</code>. En realidad a la vista hay que pasarle un array asociativo \"<code>nombre de la variable=&gt;valor</code>\" que es lo que hace precisamente el m\u00e9todo \"<code>compact()</code>\".</li> </ol> <p>P\u00e1gina: \"<code>familias.php</code>\"</p> <p><code>&lt;?php</code></p> <p><code>require '../vendor/autoload.php';</code></p> <p><code>use Philo\\Blade\\Blade;</code> <code>use Clases\\Familia;</code></p> <p><code>$views = '../views';</code> <code>$cache = '../cache';</code></p> <p><code>$blade = new Blade($views, $cache);</code> <code>$titulo='Familias';</code> <code>$encabezado='Listado de Familias';</code> <code>$familias=(new Familia())-&gt;recuperarFamilias();</code></p> <p><code>echo $blade-&gt;view()-&gt;make('vistaFamilias', compact('titulo', 'encabezado', 'familias'))-&gt;render();</code></p> <p>Si te fijas es igual a lo que hicimos en \"<code>productos.php</code>\".</p> <p>A continuaci\u00f3n se deja un enlace con los archivos del proyecto. Para poder ver el mismo funcionando tendr\u00e9is que tener Composer instalado hacer \"<code>composer init</code>\" instalar la librer\u00eda de Blade y  autoload y hacer  \"<code>composer install\"</code>. Descargar archivos. (zip - 5,71 KB)</p> <p>Para saber m\u00e1s</p> <p>En el enlace siguiente hay documentaci\u00f3n sobre la  funci\u00f3n \"<code>compact()</code>\"  : Enlace a la documentaci\u00f3n oficial.</p> <p>Ejercicio resuelto</p> <p>A partir de la p\u00e1gina de \"login\" que ya vimos en el ejemplo 1.7.1 modifica el ejemplo que acabamos de ver para poder acceder a listar \"productos\" y \"familias\" solo si estamos validados.</p> <p>Usa Blade para crear la vista que cargue la p\u00e1gina de \"login\" y modifica listar usuarios y productos para que muestren el usuario con el que estamos logeados y el bot\u00f3n cerrar sesi\u00f3n.</p> <p>Cuando nos validemos accederemos a una p\u00e1gina con dos \"botones/enlaces\" uno para ir a \"<code>familias.php</code>\" y otro a \"<code>productos.php</code>\".</p> <p>Se recomienda abordar este ejercicio desde cero para repasar todos los conceptos.</p> <p>Autoevaluaci\u00f3n</p> <p>Las plantillas que crees en Blade es preferible alojarlas:</p> <p>En un lugar no accesible por el servidor web.</p> <p>En un lugar accesible por el servidor web.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#anexo-1","title":"Anexo 1","text":""},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#ejemplo-de-como-podemos-pasar-distintos-numeros-de-parametros-a-un-constructor-simulando-la-sobrecarga","title":"Ejemplo de como podemos pasar distintos n\u00fameros de par\u00e1metros a un constructor, simulando la sobrecarga.","text":"<p><code>&lt;?php</code></p> <p><code>class Persona</code> <code>{</code> <code>private $nombre;</code> <code>private $perfil;</code></p> <pre><code>`public function __construct()`  \n`{`  \n    `$num = func_num_args(); //guardamos el n\u00famero de argumentos`  \n    `switch ($num) {`  \n        `case 0:`  \n            `break;`  \n        `case 1:`  \n            `//recuperamos el argumento pasado`  \n            `$this-&gt;nombre = func_get_arg(0); // los argumentos empiezan a contar por 0`  \n            `break;`  \n        `case 2:`  \n            `$this-&gt;nombre = func_get_arg(0);`  \n            `$this-&gt;perfil = func_get_arg(1);`  \n    `}`\n\n`}`\n</code></pre> <p><code>}</code></p> <p><code>//Ahora ser\u00e1 v\u00e1lido el siguiente c\u00f3digo.</code> <code>$persona1 = new Persona();</code> <code>$persona2 = new Persona(\"Alicia\");</code> <code>$persona3 = new Persona(\"Alicia\", \"P\u00fablico\");</code> <code>var_dump($persona1);</code> <code>echo \"&lt;break&gt;\";</code> <code>var_dump($persona2);</code> <code>echo \"&lt;break&gt;\";</code></p> <p><code>var_dump($persona3);</code></p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html","title":"Material te\u00f2ric","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#ut01-arquitectures-web","title":"UT01 Arquitectures Web","text":"Durada i criteris d'avaluaci\u00f3 <p>Durada estimada: 4 sessions</p> <p>Resultat d'aprenentatge:</p> <ol> <li>Selecciona les arquitectures i tecnologies de programaci\u00f3 Web en entorn servidor, analitzant les seves capacitats i caracter\u00edstiques pr\u00f2pies.</li> </ol> <p>Criteris d'avaluaci\u00f3:</p> <ol> <li>S'han caracteritzat i diferenciat els models d'execuci\u00f3 de codi en el servidor i en el client Web.</li> <li>S'han reconegut els avantatges que proporciona la generaci\u00f3 din\u00e0mica de p\u00e0gines Web i les seves difer\u00e8ncies amb la inclusi\u00f3 de sent\u00e8ncies de guions a l'interior de les p\u00e0gines Web.</li> <li>S'han identificat els mecanismes d'execuci\u00f3 de codi en els servidors Web.</li> <li>S'han reconegut les funcionalitats que aporten els servidors d'aplicacions i la seva integraci\u00f3 amb els servidors Web.</li> <li>S'han identificat i caracteritzat els principals llenguatges i tecnologies relacionats amb la programaci\u00f3 Web en entorn servidor.</li> <li>S'han verificat els mecanismes d'integraci\u00f3 dels llenguatges de marques amb els llenguatges de programaci\u00f3 en entorn servidor.</li> <li>S'han reconegut i avaluat les eines de programaci\u00f3 en entorn servidor.</li> </ol> <p>Les arquitectures web defineixen la forma en qu\u00e8 les p\u00e0gines d'un lloc web estan estructurades i enlla\u00e7ades entre si. Les aplicacions web es basen en en model client-servidor.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#client-servidor","title":"Client / Servidor","text":"Arquitectura Client Servidor <p>Un o diversos client accedeixen a un servidor. La noves arquitectures substitueixen el servidor per un balanceador de c\u00e0rrega de manera que N servidors donen resposta a M clients.</p> <p>En les aplicacions web, el client \u00e9s el navegador web.</p> <p>El client fa la petici\u00f3 (request normalment mitjan\u00e7ant el protocol GET mitjan\u00e7ant el port 80/443) i el servidor respon (response).</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#pagina-web-dinamica","title":"P\u00e0gina web din\u00e0mica","text":"<p>Si la p\u00e0gina web \u00fanicament cont\u00e9 HTML + CSS es considera una p\u00e0gina est\u00e0tica. Per a generar una p\u00e0gina din\u00e0mica, on el contingut canvia, avui dia tenim dues alternatives:</p> <ul> <li>Utilitzar un llenguatge de servidor que generi el contingut, ja sigui mitjan\u00e7ant l'acc\u00e9s a una BD o serveis externs.</li> <li>Utilitzar serveis REST de tercers invocats des de JS.</li> </ul> P\u00e0gina web din\u00e0mica <p>Les tecnologies empleadadas (i els perfils de desenvolupament associats) per a la generaci\u00f3 de p\u00e0gines din\u00e0miques s\u00f3n:</p> Perfil Eina Tecnologia Front-end / client Navegador Web HTML + CSS + Javascript Back-end / servidor Servidor Web + BBDD PHP, Python, Ruby, Java / JSP, .Net / .asp <p>Perfil Full-stack</p> <p>En les ofertes de treball quan fan refer\u00e8ncia a un Full-stack developer, estan buscant un perfil que domina tant el front-end com el back-end.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#single-page-application","title":"Single Page Application","text":"<p>Avui dia, gran part del desenvolupament web est\u00e0 transicionando d'una arquitectura web client-servidor cl\u00e0ssica on el client realitza una anomenada al backend, per una arquitectura SPA on el client guanya molt major pes i segueix una programaci\u00f3 reactiva que accedeix a serveis remots REST que realitzen les operacions (comunicandose mitjan\u00e7ant JSON).</p> Arquitectura tradicional vs SPA"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#arquitectura-de-3-capes","title":"Arquitectura de 3 capes","text":"<p>Cal distingir entre capes f\u00edsiques (tier) i capes l\u00f2giques (layer).</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#tier","title":"Tier","text":"<p>Capa f\u00edsica d'una arquitectura. Suposa un nou element maquinari separat f\u00edsicament. Les capes f\u00edsiques m\u00e9s allunyades del client estan m\u00e9s protegides, tant per firewalls com per VPN.</p> <p>Exemple d'arquitectura en tres capes f\u00edsiques (3 tier):</p> <ul> <li>Servidor Web</li> <li>Servidor d'Aplicacions</li> <li>Servidor de base de dades</li> </ul> Arquitectura de tres capes f\u00edsiques <p>Cl\u00faster en tiers</p> <p>No confondre les capes amb la quantitat de servidors. Actualment es treballa amb arquitectures amb m\u00faltiples servidors en una mateixa capa f\u00edsica mitjan\u00e7ant un cl\u00faster, per a oferir toler\u00e0ncia a errors i escalabilitat horitzontal.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#layer","title":"Layer","text":"<p>En canvi, les capes l\u00f2giques (layers) organitzen el codi respecte a la seva funcionalitat:</p> <ul> <li>Presentaci\u00f3</li> <li>Negoci / Aplicaci\u00f3 / Proc\u00e9s</li> <li>Dades / Persist\u00e8ncia</li> </ul> <p>Com s'observa, cadascuna de les capes es pot implementar amb diferents llenguatges de programaci\u00f3 i/o eines.</p> Arquitectura de tres capes f\u00edsiques en tres l\u00f2giques"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#mvc","title":"MVC","text":"<p>Model-View-Controller o Model-Vista-Controlador \u00e9s un model d'arquitectura que separa les dades i la l\u00f2gica de negoci respecte a la interf\u00edcie d'usuari i el component encarregat de gestionar els esdeveniments i les comunicacions.</p> <p>En separar els components en elements conceptuals permet reutilitzar el codi i millorar la seva organitzaci\u00f3 i manteniment. Els seus elements s\u00f3n:</p> <ul> <li>Model: representa la informaci\u00f3 i gestiona tots els accessos a aquesta, tant consultes com actualitzacions provinents, normalment, d'una base de dades. S'accedeix via el controlador.</li> <li>Controlador: Respon a les accions de l'usuari, i realitza peticions al model per a sol\u00b7licitar informaci\u00f3. Despr\u00e9s de rebre la resposta del model, li envia les dades a la vista.</li> <li>Vista: Presenta a l'usuari de manera visual el model i les dades preparades pel controlador. L'usuari interactura amb la vista i realitza noves peticions al controlador.</li> </ul> <p>Ho estudiarem en m\u00e9s detall en aprofundir en l'\u00fas dels frameworks PHP.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#decisions-de-disseny","title":"Decisions de disseny","text":"<ul> <li>Quina grand\u00e0ria t\u00e9 el projecte?</li> <li>Quins llenguatges de programaci\u00f3 conec? Val la pena l'esfor\u00e7 d'aprendre un nou?</li> <li>Usar\u00e9 eines de codi obert o eines propiet\u00e0ries? Quin \u00e9s el cost d'utilitzar solucions comercials?</li> <li>Programar\u00e9 l'aplicaci\u00f3 jo nom\u00e9s o formar\u00e9 part d'un grup de programadors?</li> <li>Conte amb algun servidor web o gestor de base de dades disponible o puc decidir lliurement utilitzar el que cregui necessari?</li> <li>Quin tipus de llic\u00e8ncia aplicar\u00e9 a l'aplicaci\u00f3 que desenvolupi?</li> </ul>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#eines","title":"Eines","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#servidor-web","title":"Servidor Web","text":"<p>Programari que rep peticions HTTP (GET, POST, DELETE, ...). Retorna el recurs sol\u00b7licitat (HTML, CSS, JS, JSON, imatges, etc...)</p> <p>El producte m\u00e9s implantant \u00e9s Apache Web Server (https://httpd.apache.org/), creat en 1995.</p> <ul> <li>Programari lliure i multiplataforma</li> <li>Sistema de m\u00f2duls din\u00e0mics \u2192 PHP, Python, Perl</li> <li>Utilitza l'arxiu <code>.htaccess</code> per a la seva configuraci\u00f3</li> </ul> <p>En l'actualitat, Apache est\u00e0 perdent mercat respecte a Nginx (https://www.nginx.com). Es tracta d'un producte m\u00e9s modern (2004) i que en determinats escenaris t\u00e9 millor rendiment que Apache.</p> <ul> <li>Comparativa servidors web: https://w3techs.com/technologies/history_overview/web_server/ms/q</li> </ul>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#servidor-daplicacions","title":"Servidor d'Aplicacions","text":"<ul> <li>Programari que ofereix serveis addicionals als d'un servidor web:<ul> <li>Clustering</li> <li>Balanceig de c\u00e0rrega</li> <li>Toler\u00e0ncia a fallades</li> </ul> </li> <li>Tomcat (http://tomcat.apache.org/) \u00e9s el servidor d'aplicacions open source i multiplataforma de refer\u00e8ncia per a una arquitectura Java.<ul> <li>Cont\u00e9n un contenidor Web Java que interpreta Servlets i JSP.</li> </ul> </li> </ul> <p>Info</p> <p>Tant els servidors web com els servidors d'aplicacions els estudiarem en profunditat en el m\u00f2dul de \"Desplegament d'Aplicacions Web\".</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#llenguatges-en-el-servidor","title":"Llenguatges en el servidor","text":"<p>Les aplicacions que generen les p\u00e0gines web es programen en algun dels seg\u00fcents llenguatges:</p> <ul> <li>PHP</li> <li>JavaEE: Servlets / JSP</li> <li>Python</li> <li>ASP.NET \u2192 Visual Basic .NET / C#</li> <li>Ruby</li> <li>...</li> </ul>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#javaee","title":"JavaEE","text":"<p>Java Enterprise Edition \u00e9s la soluci\u00f3 Java per al desenvolupament d'aplicacions enterprise. Ofereix una arquitectura molt completa i complexa, escalable i tolerant a fallades. Plantejada per a aplicacions per a grans sistemes.</p> <p></p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#php","title":"PHP","text":"<ul> <li>Llenguatge de prop\u00f2sit general dissenyat per al desenvolupament de p\u00e0gines web din\u00e0miques</li> <li>Al principi, llenguatge no tipado.</li> <li>Actualment en la versi\u00f3 8. Es recomana almenys utilitzar una versi\u00f3 superior a la 7.0.</li> <li>Codi embegut en el HTML</li> <li>Instruccions entre etiquetes <code>&lt;?php</code> y <code>?&gt;</code><ul> <li>Per a generar codigo dins de PHP, podem usar la instrucci\u00f3 <code>echo</code></li> </ul> </li> <li>Multitud de llibreries i frameworks:<ul> <li>Laravel, Symfony, Codeigniter, Zend</li> </ul> </li> </ul> <p>La seva documentaci\u00f3 \u00e9s bastant completa: https://www.php.net/manual/es/index.php</p> <p>El seg\u00fcent mapa mental mostra un resum dels seus elements:</p> Elements del llenguatge PHP <p>Durant les seg\u00fcents unitats estudiarem PHP en profunditat.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#posada-en-marxa","title":"Posada en marxa","text":"<p>Per a poder treballar amb un entorn de desenvolupament local, hem de preparar el nostre entorn de desenvolupament amb les eines comentades. Al llarg del curs utilitzarem la versi\u00f3 8 de PHP.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#xampp","title":"XAMPP","text":"<p>XAMPP (https://www.apachefriends.org/es/index.html) \u00e9s una distribuci\u00f3 composta amb el programari necessari per a desenvolupar en entorn servidor. Es compon de les seg\u00fcents eines sobre la base de les seves sigles:</p> <ul> <li>X per al sistema operatiu (per aquest motiu es conegui tamnbi\u00e9n com LAMP o WAMP).</li> <li>A per a Apache.</li> <li>M per a MySQL / MariaDB. Tamb\u00e9 inclou phpMyAdmin per a l'administraci\u00f3 de la base de dades des d'una interf\u00edcie web.</li> <li>P per a PHP.</li> <li>l'\u00faltima P per a Perl.</li> </ul> <p>Des de la pr\u00f2pia p\u00e0gina es pot descarregar l'arxiu executable per al sistema operatiu del nostre ordinador. Es recomana llegir la FAQ de cada sistema operatiu amb instruccions per a la seva posada en marxa.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#docker","title":"Docker","text":"<p>Docker (https://www.docker.com) \u00e9s un gestor de contenidors, considerant un contenidor com un m\u00e8tode de virtualitzaci\u00f3 del sistema operatiu.</p> <p>L'\u00fas de contenidors requereix menys recursos que una m\u00e0quina virtual, per tant, el seu llan\u00e7ament i detenci\u00f3 s\u00f3n m\u00e9s r\u00e0pids que les m\u00e0quines virtuals.</p> <p>Aix\u00ed doncs, Docker permet crear, provar i implementar aplicacions r\u00e0pidament, a partir d'una s\u00e8rie de plantilles que es coneixen com a imatges de Docker.</p> <p>Per a aix\u00f2 \u00e9s necessari tenir instal\u00b7lat Docker Desktop (https://www.docker.com/products/docker-desktop) en els nostres entorns de desenvolupament (el qual ja inclou en nucleo de Docker i l'eina docker compose). En els ordinadors de l'aula ja est\u00e0 instal\u00b7lat. Per a instal\u00b7lar-ho a casa, en el cas de Windows, \u00e9s necessari instal\u00b7lar pr\u00e8viament WSL 2, el qual \u00e9s un subsistema de Linux dins de Windows.</p> <p>Al llarg del curs anirem creant diferents contenidors amb els serveis necessaris, de manera que cada vegada nom\u00e9s treballem amb el programari m\u00ednim.</p> <p>Versions</p> <p>Al llarg del curs usarem PHP <code>8.0</code>. Respecte a Docker, per a escriure les anotacions hem utilitzat la version <code>20.10</code> i la version <code>2.19</code> de docker compose. Finalment, la versi\u00f3 de Docker Desktop que hem utilitzat \u00e9s la <code>4.0</code>.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#plantilla-servidor-web-php","title":"Plantilla Servidor Web + PHP","text":"<p>Docker es basa en l'\u00fas d'imatges per a crear contenidors. Docker Compose simplifica el treball amb m\u00faltiples contenidors, i per aix\u00f2, per a facilitar el arraque, ens centrarem en Docker Compose utilitzant una plantilla que \u00fanicament contindr\u00e0 com a serveis Apache/Nginx i PHP.</p> <p>Per a aix\u00f2, emplenarem l'arxiu <code>docker-compose.yaml</code> amb:</p> Apache i PHPNginx i PHP <pre><code># Services\nservices:\n  # Apache + PHP\n  Apache_php:\n    image: php:8-Apache\n    # Preparem un volum per a emmagatzemar el nostre codi\n    volumes:\n      - ./src/:/var/www/html\n    expose:\n      - 80\n    ports:\n      - 80:80\n</code></pre> <pre><code># Services\nservices:\n\n  nginx:\n    image: nginx:1.19\n    ports:\n      - 80:80\n    volumes:\n      - ./src:/var/www/php\n      - ./.docker/nginx/conf.d:/etc/nginx/conf.d # carreguem la configuraci\u00f3 d'un fitxer extern\n    depends_on:\n      - php   # enllacem nginx amb php\n\n  php:\n    image: php:8.0-fpm\n    working_dir: /var/www/php\n    volumes:\n      - ./src:/var/www/php\n</code></pre> <p>Dins de la carpeta que contingui aquest arxiu, hem de crear una carpeta <code>src</code> on col\u00b7locarem el nostre codi font. Per a facilitar la posada en marxa, teniu la plantilla de Apache/PHP (versi\u00f3 2 amb <code>a2enmod rewrite</code>) o Nginx/PHP disponible per a la seva desc\u00e0rrega.</p> <p>Quan estiguem llestos, llan\u00e7arem el servei mitjan\u00e7ant:</p> <pre><code>docker-compose up -d\n</code></pre> <p>Si volem veure el contingut dels arxius de log del servei utilitzarem:</p> <pre><code>docker-compose logs -f\n</code></pre> <p>Per a copiar un arxiu des del nostre sistema a l'interior del contenidor:</p> <pre><code>docker cp ./miFichero idContenedor:/tmp\n</code></pre> <p>I a l'inrev\u00e9s, si volem consultar un arxiu contingut dins d'un contenidor, el copiarem al nostre sistema:</p> <pre><code>docker cp idContenedor:/tmp/archivoAConsultar.txt ./\n</code></pre> <p>Finalment, si volem accedir a un terminal interactiu dins del contenidor:</p> <pre><code>docker exec -it nombreContenedor bash\n</code></pre> <p>Altres comandos que podem arribar a utilitzar s\u00f3n:</p> <ul> <li><code>docker ps</code>: Veure els contenidors que es estan executant</li> <li><code>docker ps -a</code>: Veure tots els contenidors</li> <li><code>docker start nombreContenedor</code>: Arrencar un contenidor</li> <li><code>docker images</code>: Veure les imatges que tenim descarregades</li> </ul> <p>Una altra forma m\u00e9s senzilla per a llan\u00e7ar de nou els contenidors i gestionar-los una vegada creats \u00e9s utilitzar la interf\u00edcie gr\u00e0fica que ofereix Docker Desktop:</p> Arrencada de contenidor mitjan\u00e7ant Docker Desktop <p>Docker stack</p> <p>Existeixen diverses opcions mitjan\u00e7ant Docker que ofereixen solucions completes i empaquetes per a tot el stack de desenvolupament. En posteriors sessions utilitzarem tant Devilbox (http://devilbox.org) com Laradock (https://laradock.io)</p> <p>Per\u00f2 vull saber com funciona...</p> <p>En el m\u00f2dul de Desplegament d'aplicacions estudiareu en profunditat, a m\u00e9s de Docker, Apache i altres serveis que ens serviran d'ajuda per al desenvolupament en entorn servidor.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#entorn-de-desenvolupament","title":"Entorn de desenvolupament","text":"<p>En aquest curs utilitzarem PhpStorm i IntelliJ (https://www.jetbrains.com/) at\u00e8s que podem fer servir llic\u00e8ncies d'Education, encara que tamb\u00e9 es podria utilitzar Visual Studio Code (https://code.visualstudio.com) com a entorn de desenvolupament (IDE). Una altra possibilitat \u00e9s utilitzar Eclipse, encara que \u00e9s un entorn bastant pesat.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#hola-mon","title":"Hola M\u00f3n","text":"<p>I com no, el nostre primer exemple ser\u00e0 un Hola M\u00f3n en PHP.</p> <p>Si nomenem l'arxiu com <code>index.php</code>, en accedir a <code>http://localhost</code> autom\u00e0ticament carregar\u00e0 el resultat:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Hola M\u00f3n&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;?php\n        echo \"Hola M\u00f3n\";\n    ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#referencies","title":"Referencies","text":"<ul> <li>Curs d'introducci\u00f3 a Docker, per Sergi Garc\u00eda Barea* : https://sergarb1.github.io/CursoIntroduccionADocker/</li> <li>Article Arquitectures Web i la seva evoluci\u00f3</li> <li>Lloc web d'Aitor Medrano https://aitor-medrano.github.io/</li> </ul>"},{"location":"Moduls/DWES/UT01ArquitecturesWebActivitats.html","title":"Activitats","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWebActivitats.html#arquitectures-web","title":"Arquitectures Web","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWebActivitats.html#activitats","title":"Activitats","text":"<p>UT101. Instal\u00b7la i configura un entorn complet de desenvolupament que inclogui PHP, Apache i MySQL.</p> <p>UT102. Cerca en internet quins s\u00f3n els tres frameworks PHP m\u00e9s utilitzats, i indica:</p> <pre><code>* Nom i URL\n* Any de creaci\u00f3\n* \u00daltima versi\u00f3\n</code></pre> <p>UT103. Cerca tres ofertes de treball de desenvolupament de programari a Infojobs o LinkedIn que citin PHP i anota:</p> <pre><code>* Empresa + lloc de feina + frameworks PHP + requ\u00edsitos + sou + enllaci a l'oferta.\n</code></pre> <p>UT104. Una vegada arrencat el servei PHP, crea l'arxiu <code>info.php</code> i afegeix el seg\u00fcent fragment de codi:</p> <pre><code>    &lt;?php phpinfo() ?&gt;\n</code></pre> <p>Anota els valors de:</p> <ul> <li>Versi\u00f3 de PHP</li> <li>Loaded Configuration File</li> <li><code>memory_limit</code></li> <li><code>DOCUMENT_ROOT</code></li> </ul> <p>UT105. (Opcional. Necessitau Docker) Obre l'arxiu <code>php.ini-production</code> que est\u00e0 dins del contenidor (pots esbrinar la ruta a partir de la propietat Configuration File (php.ini) Path) i indica per a qu\u00e8 serveixen les seg\u00fcents propietats i quins valors contenen:</p> <ul> <li><code>file_uploads</code></li> <li><code>max_execution_estafi</code></li> <li><code>short_open_tag</code></li> </ul> <p>php.ini</p> <p>\u00c9s l'arxiu de configuraci\u00f3 de PHP, i en tota instal\u00b7laci\u00f3 v\u00e9nen dues plantilles (<code>php.ini-development</code> i <code>php.ini-production</code>) perqu\u00e8 triem els valors m\u00e9s concordes al nostre projecte i creiem el nostre arxiu propi de <code>php.ini</code>.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWebVideo.html","title":"V\u00eddeo resum de la unitat","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWebVideo.html#arquitectures-web","title":"Arquitectures Web","text":""},{"location":"Moduls/DWES/UT02PHP.html","title":"Material te\u00f2ric","text":""},{"location":"Moduls/DWES/UT02PHP.html#ut02-el-llenguatge-php","title":"UT02 El llenguatge PHP","text":"RAs <p>Resultat d'aprenentatge:</p> <p>RA2. Escriu sent\u00e8ncies executables per un servidor Web reconeixent i aplicant procediments d'integraci\u00f3 del codi en llenguatges de marques. RA3. Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques, seleccionant i utilitzant les estructures de programaci\u00f3. </p><p></p>"},{"location":"Moduls/DWES/UT02PHP.html#php","title":"PHP","text":"<ul> <li>Acr\u00f2nim de Personal Home Page</li> <li>Llenguatge de prop\u00f2sit general, tot i que el seu fort \u00e9s el desenvolupament web.</li> <li>Sintaxis similar a C / Java</li> <li>El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php)</li> <li>El client rep el resultat generat despr\u00e9s d'interpretar el codi en el servidor.</li> <li>El codi s'emmagatzema en arxiu amb extensi\u00f3 <code>.php</code>.</li> </ul> <p>La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/.</p>"},{"location":"Moduls/DWES/UT02PHP.html#codi-incrustat","title":"Codi incrustat","text":"<p>Els blocs de codi s'escriuen entre <code>&lt;?php</code> i <code>?&gt;</code>, mentre que les sent\u00e8ncies se separen mitjan\u00e7ant <code>;</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;title&gt;PHP f\u00e0cil&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;!-- Mostra una frase amb HTML --&gt;\nHola m\u00f3n&lt;br&gt;\n&lt;!-- Mostra una frase amb PHP --&gt;``` { .php title=\"\"}\n&lt;?php echo \"\u00c9s molt f\u00e0cil programar amb PHP.\"; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Nom\u00e9s etiquetes d'obertura</p> <p>Si el nostre codi nom\u00e9s ha de contenir codi PHP i res d'html, com per exemple, quan codifiquem classes o interf\u00edcies, nom\u00e9s posarem l'etiqueta d'obertura, per aix\u00ed indicar que \u00e9s un arxiu de php pur.</p>"},{"location":"Moduls/DWES/UT02PHP.html#generant-contingut","title":"Generant contingut","text":"<p>Tenim tres possibilitats a l'hora de generar contingut en els nostres documents PHP:</p> <ul> <li><code>echo expresio;</code></li> <li><code>print (expresio);</code></li> <li><code>&lt;?= expresio ?&gt;</code></li> </ul> <p>Les que utilitzarem s\u00f3n <code>echo</code> quan ho facem dins d'un bloc d'instruccions i <code>&lt;?=</code> quan nom\u00e9s h\u00e0gim de mostrar el valor d'una variable dins d'un fragment HTML.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;Echo i print&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;&lt;?php echo \"Aquest text es mostrar\u00e0 a la p\u00e0gina web.\" ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?= \"Aquest text es mostrar\u00e0 a la p\u00e0gina web.\" ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?php print(\"Aquest text es mostrar\u00e0 a la p\u00e0gina web.\") ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#comentaris","title":"Comentaris","text":"<p>Podem utilitzar comentaris d'una l\u00ednia o de bloc:</p> <pre><code>&lt;?php\n// Aquest \u00e9s un comentari d'una sola l\u00ednia\n/*\n  Aquest \u00e9s\n  un comentari\n  que ocupa\n  diverses l\u00ednies\n*/ \n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#errors","title":"Errors","text":"<p>Si hi ha un error d'execuci\u00f3, es produeix un Fatal Error.</p> <pre><code>Fatal error: Uncaught Error: Call to undefined function plint() in ...echo.php:11\n Stack trace:\n #0 {main}\n    thrown in ...echo.php on line 11\n</code></pre> <p>Des de PHP 5 es llancen com una excepci\u00f3. M\u00e9s endavant veurem l'\u00fas de <code>try</code> / <code>catch</code>.</p>"},{"location":"Moduls/DWES/UT02PHP.html#variables","title":"Variables","text":"<ul> <li>No cal declarar-les pr\u00e8viament.</li> <li>Comencen per <code>$</code>, per exemple <code>$nom</code>. Despr\u00e9s del <code>$</code>, el seg\u00fcent car\u00e0cter ha de ser una lletra en min\u00fascula (recomanaci\u00f3) o gui\u00f3 baix <code>_</code>. Despr\u00e9s ja es poden posar n\u00fameros.</li> <li>S\u00f3n case sensitive: <code>$var != $vAR</code></li> <li>No se declara el seu tipus, el tipat \u00e9s din\u00e0mic. S'assigna en temps d'execuci\u00f3 depenent del valor assignat.</li> <li>Convenient inicialitzar-les, sin\u00f3 donen error.</li> </ul> <pre><code>&lt;?php\n$nom = \"Tofol\";\n$nomComplet = \"Tofol Verdera\";\n$numero = 123;\n$numero2 = 456;\n$pi = 3.14;\n$sort = true;\n$senseValor;\n\necho $senseValor;\n?&gt;\n</code></pre> <p>Tipus</p> <p>Tot i que a priori no hi ha tipus de dades, internament PHP treballa amb quatre tipus escalars: boolean, integer, float i string i quatre tipus compostos: array, object, callable i iterable. Existeix un tipus especial per a null (m\u00e9s informaci\u00f3 en http://php.net/manual/es/language.types.null.php).</p>"},{"location":"Moduls/DWES/UT02PHP.html#constants","title":"Constants","text":"<p>S\u00f3n variables el valor de les quals no varien. Hi ha dues possibilitats:</p> <ul> <li><code>define(NOM, valor);</code></li> <li><code>const NOM; // PHP &gt; 5.3</code></li> </ul> <pre><code>&lt;?php\ndefine(\"PI\", 3.1416);\nconst IVA = 0.21;\n\necho PI, \" \", IVA; // No es posa el s\u00edmbol dolar\n?&gt;\n</code></pre> <ul> <li>Es declaren sempre a MAJ\u00daSCULES</li> <li>Hi ha un conjunt de constants ja predefinides, tamb\u00e9 conegudes com constants m\u00e0giques: https://www.php.net/manual/es/language.constants.predefined.php</li> </ul>"},{"location":"Moduls/DWES/UT02PHP.html#operadors","title":"Operadors","text":""},{"location":"Moduls/DWES/UT02PHP.html#arimetics","title":"Arim\u00e8tics","text":"Exemple Nom Resultat <code>-$a</code> Negaci\u00f3 Oposat de <code>$a</code>. <code>$a + $b</code> Suma Suma de <code>$a</code> i <code>$b</code>. <code>$a - $b</code> Resta Difer\u00e8ncia de <code>$a</code> i <code>$b</code>. <code>$a * $b</code> Multiplicaci\u00f3 Producte de <code>$a</code> i <code>$b</code>. <code>$a / $b</code> Divisi\u00f3 Quocient de <code>$a</code> i <code>$b</code>. <code>$a % $b</code> M\u00f2dul / Resta Resta de <code>$a</code>dividit per<code>$b</code>. <code>$a ** $b</code> Pot\u00e8ncia Resultat de<code>$a</code> elevat a <code>$b</code>. PHP &gt;= 5.6. <p>En el cas de strings, si volem concatenar-les, s'utilitza l'operador <code>.</code>:</p> <pre><code>&lt;?php\n$x = 33;\n$y = 11;\n$z = $x + $y;\necho \"La suma de 33 i 11 \u00e9s \".44.\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" i \".$y.\" \u00e9s \".(33 + 11).\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" i \".$y.\" \u00e9s \".$z.\"&lt;br /&gt;\";\n?&gt;\n</code></pre> <p>Realment, en comptes de concatenar cadenes amb variables, les podem imprimir directament ja que s'expandeixen autom\u00e0ticament: </p><pre><code>&lt;?php\necho \"La suma de $x i $y \u00e9s $z &lt;br /&gt;\";\n?&gt;\n</code></pre><p></p> <p>Realment, en comptes de concatenar cadenes amb variables, les podem imprimir directament ja que s'expandeixen autom\u00e0ticament:</p> <pre><code>&lt;?php\n$color = \"vermell\";\necho \"El plural de $color \u00e9s ${color}s\";\n?&gt;\n</code></pre> <p>M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes.</p>"},{"location":"Moduls/DWES/UT02PHP.html#comparacio","title":"Comparaci\u00f3","text":"Exemple Nom Resultat <code>$a == $b</code> Igual <code>veritat</code> i <code>$a</code> \u00e9s igual a <code>$b</code> despr\u00e9s de la conversi\u00f3 de tipus. <code>$a === $b</code> Id\u00e8ntic, Comparaci\u00f3 estricta <code>veritat</code> i <code>$a</code> \u00e9s igual a <code>$b</code>, i s\u00f3n del mateix tipus de dada. <code>$a != $b</code>, <code>$a &lt;&gt; $b</code> Diferent <code>veritat</code> i <code>$a</code> no \u00e9s igual a <code>$b</code> despr\u00e9s de la conversi\u00f3 de tipus. <code>$a !== $b</code> No id\u00e8ntic <code>veritat</code> i <code>$a</code> no \u00e9s igual a <code>$b</code>, o si no s\u00f3n del mateix tipus. <code>$a &lt; $b</code> Menor que <code>veritat</code> i <code>$a</code> \u00e9s estrictament menor que <code>$b</code>. <code>$a &gt; $b</code> Major que <code>veritat</code> i <code>$a</code> \u00e9s estrictament m\u00e9s gran que <code>$b</code>. <code>$a &lt;= $b</code> Menor o igual a <code>veritat</code> i <code>$a</code> \u00e9s menor o igual que <code>$b</code>. <code>$a &gt;= $b</code> Major o igual que <code>veritat</code> i <code>$a</code> \u00e9s m\u00e9s gran o igual que <code>$b</code>. <code>$a &lt;=&gt; $b</code> Nau espacial Retorna <code>-1</code>, <code>0</code>el<code>1</code> quan <code>$a</code> \u00e9s respectivament menor, igual, o m\u00e9s gran que <code>$b</code>. PHP &gt;= 7. <code>$a ?? $b ?? $c</code> Fusi\u00f3 de nul\u00b7la El primer operand d'esquerra a dreta que existeixi i no sigui <code>nul\u00b7la</code>. <code>nul\u00b7la</code> si no hi ha valors definits i no s\u00f3n <code>nul\u00b7la</code>. PHP &gt;= 7."},{"location":"Moduls/DWES/UT02PHP.html#logics","title":"L\u00f2gics","text":"Exemple Nom Resultat <code>$a i $b</code>, <code>$a &amp;&amp; $b</code> I (i) <code>veritat</code>si tant<code>$a</code>com<code>$b</code> fill <code>veritat</code>. <code>$a o $b</code>, `$a $b` <code>$a xor $b</code> Gratu\u00eft(l'exclusiu) <code>veritat</code> i <code>$a</code>el<code>$b</code> ca <code>veritat</code>, per\u00f2 no tots dos. <code>!$a</code> No (no) <code>veritat</code> i <code>$a</code> no \u00e9s <code>veritat</code>."},{"location":"Moduls/DWES/UT02PHP.html#assignacio","title":"Assignaci\u00f3","text":"Exemple Nom Resultat <code>$a = $b</code> Assignaci\u00f3 Asigna a<code>$a</code> el valor de <code>$b</code> <code>$a += $b</code> Assignaci\u00f3 de la suma La suma a <code>$a</code> el valor de <code>$b</code>. Equivalent a <code>$a = $a + $b</code> <code>$a -= $b</code> Assignaci\u00f3 de la resta Li queda a ella<code>$a</code> el valor de <code>$b</code>. Equivalent a <code>$a = $a - $b</code> <code>$a *= $b</code> Assignaci\u00f3 del producte Asigna a<code>$a</code> el producte de <code>$a</code> per <code>$b</code>. Equivalent a <code>$a = $a * $b</code> <code>$a /= $b</code> Assignaci\u00f3 de la divisi\u00f3 Asigna a<code>$a</code> el conscient de <code>$a</code>entre<code>$b</code>. Equivalent a <code>$a = $a / $b</code> <code>$a %= $b</code> Assignaci\u00f3 de la resta Asigna a<code>$a</code> la resta de dividir <code>$a</code>entre<code>$b</code>. Equivalent a <code>$a = $a % $b</code> <code>$a .= $b</code> Concatenaci\u00f3 Concatena a <code>$a</code> la cadena <code>$b</code>. Equivalent a <code>$a = $a. $b</code> <code>$a++</code> Increment Incrementa <code>$a</code> en una unitat. Equivalent a <code>$a = $a + 1</code> <code>$a--</code> Disminuir Disminueix<code>$a</code> en una unitat. Equivalent a <code>$a = $a - 1</code> <p>Prioritat dels operadors</p> <p>Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 (<code>!</code>), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php</p> <p>Autoavaluaci\u00f3</p> <p>Si <code>$a=5</code> i <code>$b=4</code>, esbrina el valor de <code>$c</code> i <code>$c = $a*2 &gt; $b+5 &amp;&amp; !($b&lt;&gt;4)</code></p>"},{"location":"Moduls/DWES/UT02PHP.html#treballant-amb-formularis","title":"Treballant amb formularis","text":"<p>Les dades s'envien via URL amb el format <code>var1=valor1&amp;var2=valor2...</code>. Per exemple: <code>exemple.php?nom=Tofol+cognom1=Verdera</code> Es divideix en dos passos:</p> <p>Generar un formulari amb action=<code>arxiu.php</code> method=<code>GET</code></p> <p>A l<code>arxiu .php llegir les dades amb $_GET[</code>nomVar`]</p> <p>Separem sempre que puguem el codi HTML del de PHP.</p> <p>Per exemple, el formulari el col\u00b7loquem a saluda.html:</p> <pre><code>&lt;form action=\"saluda.php\" method=\"get\"&gt;\n    &lt;p&gt;&lt;label for=\"nom\"&gt;Nom: &lt;/label&gt;\n    &lt;input type=\"text\" name=\"nom\" id=\"nom\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;label for=\"cognom1\"&gt;Primer cognom:&lt;/label&gt; \n    &lt;input type=\"text\" name=\"cognom1\" id=\"cognom1\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;input type=\"submit\" value=\"enviar\"&gt;&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> <p>I recollim les dades en <code>saluda.php</code>:</p> <pre><code>&lt;?php\n$nom = $_GET[\"nom\"];\n$cognom1 = $_GET[\"cognom1\"];\n\necho \"Hola $nom $cognom1\";\n?&gt;\n</code></pre> <p>Si ho volgu\u00e9ssim realitzar tot en un \u00fanic arxiu (la qual cosa no \u00e9s recomanable), podem fer-ho aix\u00ed:</p> <pre><code>&lt;form action=\"\" method=\"get\"&gt;\n    &lt;p&gt;&lt;label for=\"nom\"&gt;Nom: &lt;/label&gt;\n    &lt;input type=\"text\" name=\"nom\" id=\"nom\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;label for=\"cognom1\"&gt;Primer cognom:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"cognom1\" id=\"cognom1\"&gt;&lt;/p&gt;\n    &lt;input type=\"submit\" value=\"enviar\"&gt;\n&lt;/form&gt;\n&lt;p&gt;\n    &lt;?php\n    if(isset($_GET['nom'])) {\n        $nom = $_GET[\"nom\"];\n        $cognom1 = $_GET[\"cognom1\"];\n\n        echo \"Hola $nom $cognom1\";\n    }\n    ?&gt;\n&lt;/p&gt;\n</code></pre> <p>El treball amb formularis l'estudiarem en profunditat en la unitat 4, i veurem que a m\u00e9s de <code>GET</code>, podem enviar les dades amb <code>POST</code>.</p>"},{"location":"Moduls/DWES/UT02PHP.html#condicions","title":"Condicions","text":"<p>La condici\u00f3 simple es realitza mitjan\u00e7ant la instrucci\u00f3 <code>if</code>. Entre par\u00e8ntesis es posa la condici\u00f3 que s\u2019avalua a <code>true</code> o <code>false</code>. Si no es posen claus, en comptes d\u2019obrir un bloc, s\u2019executar\u00e0 nom\u00e9s la seg\u00fcent instrucci\u00f3.</p> <p>Sempre claus</p> <p>\u00c9s recomanable posar claus sempre encara que en el moment de codificar nom\u00e9s hi hagi una \u00fanica instrucci\u00f3. D'aquesta manera, es queda preparat per afegir m\u00e9s contingut en el futur sense provocar bugs.</p> <pre><code>&lt;?php\n$hora = 8; // L\u2019hora en format de 24 hores\nif ($hora === 8) {\n    echo \"Sona el despertador.\";  \n}\n\necho \"&lt;br&gt;\";\nif ($hora === 8)\n    echo \"Sona el despertador.\";  \n?&gt;  \n</code></pre> <p>Les condicions compostes mitjan\u00e7ant <code>if-else</code>:</p> <pre><code>&lt;?php\n$hora = 17; L\u2019hora en format de 24 hores\nif ($hora &lt;= 12) {\n    echo \"S\u00f3n les \" . $hora . \" del mat\u00ed\";  \n} else {\n    echo \"S\u00f3n les \" . ($hora - 12) . \" de la tarda\";  \n}\n?&gt;  \n</code></pre> <p>Les condicions anidades mitjan\u00e7ant <code>if-else if-else</code>:</p> <pre><code>&lt;?php\n$hora = 14; L\u2019hora en format de 24 hores\nif ($hora === 8) {\n    echo \"\u00c9s l'hora d'esmorzar.\";  \n} else if ($hora === 14) {\n    echo \"\u00c9s l'hora del dinar.\";  \n} else if ($hora === 21) {\n    echo \"\u00c9s l'hora del sopar.\";  \n} else {\n    echo \"Ara no toca menjar.\";  \n}\n?&gt;  \n</code></pre> <p>La sent\u00e8ncia <code>switch</code> tamb\u00e9 permet treballar amb condicions m\u00faltiples:</p> <pre><code>&lt;?php\n\n$hora = 14; L\u2019hora en format de 24 hores\n\nswitch ($hora) {\n    case 9:  \n        echo \"\u00c9s l'hora d'esmorzar.\";  \n        break;  \n    case 14: \n        echo \"\u00c9s l'hora del dinar.\";  \n        break;  \n    case 21:  \n        echo \"\u00c9s l'hora del sopar.\";  \n        break;  \n    default:  \n        echo \"Ara no toca menjar\";\n}\n?&gt;  \n</code></pre> <p>No oblidis el <code>break</code></p> <p>Un error molt com\u00fa \u00e9s oblidar la instrucci\u00f3 <code>break</code> despr\u00e9s de cada cas. Si no el posem, executar\u00e0 el seg\u00fcent cas autom\u00e0ticament.</p> <p>Finalment, tamb\u00e9 tenim l'operador ternari <code>? valorTrue : valorFalse</code>:</p> <pre><code>&lt;?php\n\n$hora = 14;\n\n$formato = ($hora &gt; 12) ? 24 : 12;\necho \"El format \u00e9s de $formato hores\"\n?&gt;  \n</code></pre> <p>Si volem comprovar si una variable t\u00e9 valor i si no donar-li un valor determinat, farem servir l'operador <code>?:</code> (es coneix com l 'operador Elvis - https://en.wikipedia.org/wiki/Elvis_operator) amb la sint\u00e0xia <code>?: valorSiBuit</code>:</p> <pre><code>&lt;?php\n\n$nom = $_GET['nom'] ?: \"desconegut\"\n\n?&gt;  \n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#bucles","title":"Bucles","text":"<p>Mitjan\u00e7ant la instrucci\u00f3 <code>while</code>:</p> <pre><code>&lt;?php\n\n$i = 1;\nwhile ($i &lt;= 10) {\n    echo \"L\u00ednia \" . $i;  \n    echo \"&lt;br&gt;\";  \n    $i ++; \n}\n\n?&gt;  \n</code></pre> <p>Mitjan\u00e7ant la instrucci\u00f3 <code>do-while</code>:</p> <pre><code>&lt;?php\ndo {\n    $dau= rand( 1, 6);  \n    rand() retorna un valor aleatori  \n    echo \"Tirant el dau... \";  \n    \"ha sortit un \" . $dau. \".\";  \n    echo \"&lt;br&gt;\";  \n} while ($dau!= 5);\n\necho \"B\u00e9! Trec una fitxa de casa.\";\n?&gt;  \n</code></pre> <p>Mitjan\u00e7ant la instrucci\u00f3 <code>for</code>:</p> <pre><code>&lt;?php\n\n// Bucle ascendent\n\nfor ($i = 1; $i &lt;= 10; $i++) \n    echo \"L\u00ednia \" . $i;  \n    echo \"&lt;br&gt;\";  \n}\n\n// Bucle descendent\n\nfor ($i = 10; $i &gt;= 0; $i--) {\n    echo \"L\u00ednia \" . $i;  \n    echo \"&lt;br&gt;\";  \n}\n?&gt;  \n</code></pre> <p>M\u00e9s endavant estudiarem el bucle <code>foreach</code> per rec\u00f3rrer arrays.</p> <p>PHP, de la mateixa manera que Java i C, permet trencar els bucles mitjan\u00e7ant la instrucci\u00f3 <code>break</code>. Al seu torn, <code>continue</code> permet saltar a la seg\u00fcent iteraci\u00f3.</p> <p>Si pots, evita <code>break</code> i <code>continue</code></p> <p>Personalment, no m'agrada el seu \u00fas. Prefereixo l'\u00fas de variables flag per controlar la sortida dels bucles. Per exemple:</p> <pre><code>&lt;?php\n\n$sortir= false;\n\nfor ($i = 1; $i &lt;= 10 &amp;&amp; !$salir; $i++) {\n    if ($i === 5) {\n        echo \"Salgo cuando i=5\";\n        $sortir= true;\n    }\n}\n\n?&gt;  \n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#arrays","title":"Arrays","text":"<p>Per emmagatzemar dades compostes, podem utilitzar tant arrays senzills com arrays associatius (similars a un mapa). En realitat tots els arrays s\u00f3n mapes ordenats compostos de parells clau-valor.</p> <p>Alerta amb barrejar tipus</p> <p>Com que el tipat \u00e9s din\u00e0mic, els nostres arrays poden tenir dades de diferents tipus. No es recomana barrejar els tipus.</p> <p>De la mateixa manera que Java, es defineixen mitjan\u00e7ant corxets, s\u00f3n 0-index, i es pot assignar un valor a una posici\u00f3 determinada:</p> <pre><code>&lt;?php\n\n$fruites = array(\"taronja\", \"pera\", \"poma\");\n$fruites2 = [\"taronja\", \"pera\", \"poma\"];\n$fruites3 = [];\n$fruites3[0] = \"taronja\";\n$fruites3[1] = \"pera\";\n$fruites3[] = \"poma\"; // ho afegeix al final  \n</code></pre> <p>Podem obtenir la mida del vector mitjan\u00e7ant la funci\u00f3 <code>count(array)</code>. Per rec\u00f3rrer el vector farem \u00fas d'un bucle <code>for</code>:</p> <pre><code>&lt;?php\n$tam = count( $fruites); // mida del vector\nfor ($i=0; $i&lt;count($fruites); $i++) {\n    echo \"Elemento $i: $fruites[$i] &lt;br /&gt;\";  \n}  \n</code></pre> <p>Una altra manera de rec\u00f3rrer els arrays, fins i tot m\u00e9s elegant, \u00e9s fer \u00fas de <code>foreach</code>. La seva sintaxi \u00e9s <code>foreach (array as element)</code>:</p> <pre><code>&lt;?php\n\n// Mitjan\u00e7ant foreach no necessitem saber la mida del vector\n\nforeach ($fruites as $fruita) {\n    echo \"$fruita &lt;br/&gt;\";  \n}  \n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#arrays-associatius","title":"Arrays associatius","text":"<p>Cada element \u00e9s un parell clau-valor. En comptes d'accedir per la posici\u00f3, ho fem mitjan\u00e7ant una clau. Aix\u00ed doncs, per a cada clau s\u2019emmagatzema un valor.</p> <p>A l'hora de rec\u00f3rrer aquest tipus de vectors, mitjan\u00e7ant <code>foreach</code> separem cada element en una parella <code>clau =&gt; valor</code>:</p> <pre><code>&lt;?php\n\n$capitals = [\n    \"It\u00e0lia\" =&gt; \"Roma\",\n    \"Fran\u00e7a\" =&gt; \"Paris\",  \n    \"Portugal\" =&gt; \"Lisboa\"\n    ];  \n\n$capitalFrancia = $capitals[\"Fran\u00e7a\"];  // s\u2019accedeix a l\u2019element per la clau, no la posici\u00f3\n$capitals[\"Alemanya\"] = \"Berl\u00edn\";       //hi afegim un element\necho \"La capital de Fran\u00e7a \u00e9s $capitalFrancia &lt;br /&gt;\";\necho \"La capital de Fran\u00e7a \u00e9s {$capitals[\"Fran\u00e7a\"]} &lt;br /&gt;\";\n$capitals[] = \"Madrid\"; // s\u2019afegeix amb la clau 0 !!! No assignar valors sense clau!!!\nforeach ($capitals as $valor) { // si recorrem un vector associatiu, mostrarem els valors\n    echo \"$valor &lt;br /&gt;\";  \n}\nforeach ($capitals as $pais =&gt; $ciutat) { // separem cada element en clau =&gt; valor\n    echo \"$pais : $ciutat &lt;br /&gt;\";  \n}  \n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#operacions","title":"Operacions","text":"<p>Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n:</p> <ul> <li><code>print_r($array)</code>: mostra el contingut de tot el vector. Si volem mostrar el contingut amb un format determinat, hem de rec\u00f3rrer el vector amb <code>foreach</code>.</li> <li><code>var_dump($mixed)</code>: mostra el contingut de l\u2019element rebut. Mostra m\u00e9s informaci\u00f3 que <code>print_r</code>.</li> <li><code>$elem = array_pop( $array)</code>: elimina l\u2019\u00faltim element</li> <li><code>array_push($array, $elem)</code>: afegeix un element al final</li> <li><code>$booleano = in_array( $elem, $array)</code>: esbrina si <code>$elem</code> est\u00e0 en el vector <code>$array</code></li> </ul> PHP <pre><code>&lt;?php\n\n$fruites = [\"taronja\", \"pera\", \"poma\"];\n\narray_push($fruites, \"pinya\");\n\nprint_r($fruites);\n\n$ultFruita = array_pop($fruites);\n\nif (in_array(\"pinya\", $fruites)) {\n\n    echo \"&lt;p&gt;Queda pinya&lt;/p&gt;\";  \n\n} else {\n\n    echo \"&lt;p&gt;No queda pinya&lt;/p&gt;\";  \n\n}\n\nprint_r($fruites);\n</code></pre> Consola <pre><code>Array\n(\n[0] =&gt; taronja\n[1] =&gt; pera\n[2] =&gt; illa\n[3] =&gt; pinya\n)\n&lt;p&gt;No queda pinya&lt;/p&gt;\n\nArray\n(\n[0] =&gt; taronja\n[1] =&gt; pera\n[2] =&gt; illa\n)\n</code></pre> <ul> <li><code>$claus = array_keys($array)</code>: retorna les claus del <code>$array</code> associatiu</li> <li><code>$tam = count($array)</code>: retorna la mida de <code>$array</code></li> <li><code>sort($array)</code>: ordena els elements del <code>$array</code></li> <li><code>isset($array[element])</code>: indica si existeix/t\u00e9 valor element dins el vector  </li> <li><code>unset($array[element])</code>: elimina l'element del vector (deixa un buit)</li> </ul> PHPConsola <pre><code>&lt;?php\n\n$capitals = array(\"It\u00e0lia\" =&gt; \"Roma\",\n\"Fran\u00e7a\" =&gt; \"Paris\",\n\"Portugal\" =&gt; \"Lisboa\");\n$paises = array_keys($capitals);\nprint_r($paises);\nsort($paises);\nprint_r($paises);\nunset($capitals[\"Fran\u00e7a\"]);\nprint_r($capitals);\n</code></pre> <pre><code>Array\n(\n[0] =&gt; It\u00e0lia\n[1] =&gt; Fran\u00e7a\n[2] =&gt; Portugal\n)\n\nArray\n(\n[0] =&gt; Fran\u00e7a\n[1] =&gt; It\u00e0lia\n[2] =&gt; Portugal\n)\n\nArray\n(\n[It\u00e0lia] =&gt; Roma\n[Portugal] =&gt; Lisboa\n)\n</code></pre> <p>En assignar un vector a un altre es realitza una c\u00f2pia. Cura amb aquesta operaci\u00f3 que pot consumir molts recursos.</p> PHPConsola <pre><code>&lt;?php\n\n$noms = [\"Joan\", \"Ana\", \"Pedro\", \"Laura\"];\n\n$copia = $noms;\n\nsort($noms);\n\nprint_r($noms);\n\nprint_r($copia);\n</code></pre> <pre><code>Array\n(\n    [0] =&gt; Ana\n    [1] =&gt; Joan\n    [2] =&gt; Laura\n    [3] =&gt; Pedro\n)\n\nArray\n\n(\n    [0] =&gt; Joan\n    [1] =&gt; Ana\n    [2] =&gt; Pedro\n    [3] =&gt; Laura  \n\n)\n</code></pre> <p>Hi ha molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Pots consultar la informaci\u00f3 en la documentaci\u00f3 oficial.</p> <p>Articles per aprofundir en les operacions amb arrays</p> <p>Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta.* Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP.</p>"},{"location":"Moduls/DWES/UT02PHP.html#arrays-bidimensionals","title":"Arrays bidimensionals","text":"<p>Consisteix en un vector de vectors, ja siguin vectors seq\u00fcencials o associatius. Hi pot haver N dimensions.</p> prova2.php<pre><code>&lt;?php\n$persona[\"nom\"] = \"Tofol Verdera\";\n$persona[\"telefons\"] = [\"966 123 456\", \"636 636 636\"]; // array d\u2019arrays ordinaris\n$persona[\"professio\"] = [\"dia\" =&gt; \"filantrop\", \"nit\" =&gt; \"cavaller fosc\"]; // array de arrays associatius\necho $persona['nom'].\" a la nit treballa de \".$persona['professio']['nit'];\n</code></pre> <p>Combinant els arrays associatius en diverses dimensions podem emmagatzemar la informaci\u00f3 com si fos una taula:</p> <pre><code>&lt;?php\n\n$menu 1 = [\"Plat1\" =&gt; \"Macarrons amb formaix\", \"Plato2\" =&gt; \"Pescat asado\", \"Beguda\" =&gt; \"Coca-Cola\", \"Postre\" =&gt; \"Gelat de vainilla\"];\n\n$menu 2 = [\"Plat1\" =&gt; \"Sopa\", \"Plato2\" =&gt; \"Lomo con patatas\", \"Bebida\" =&gt; \"Agua\", \"Postre\" =&gt; \"Arr\u00f2s amb llet\"];\n\n$menus = [$menu 1, $menu 2]; creem un vector a partir d'arrels associatius\n\nforeach ($menus as $menudeldia) {\n\necho \"Men\u00fa del dia&lt;br/&gt;\";\n\nforeach ($menudeldia as $platos =&gt; $comida) {\n\n    echo \"$platos: $comida &lt;br/&gt;\";  \n\n}\n\n}\n</code></pre> <p>Per accedir a un element concret s'anen els corxets</p> <pre><code>$postre 0 = $menus[0][\"Postre\"];\n</code></pre> <p>Encara que pugui semblar una bona idea crear aquest tipus d'estructures, \u00e9s millor utilitzar objectes conjuntament amb arrays (possiblement vectors d'altres objectes) per crear estructures complexes que permetin modelar millor els problemes.</p>"},{"location":"Moduls/DWES/UT02PHP.html#funcions","title":"Funcions","text":"<p>En no declarar-se els tipus de dades, els par\u00e0metres de les funcions no tenen tipus ni s\u2019indica el tipus de dada que retornen. El pas de par\u00e0metres es realitza per valor, \u00e9s a dir, es realitza una c\u00f2pia de la variable.</p> UT02funcions01.php<pre><code>&lt;?php\nfunction nomFuncio($par 1, $par 2, ...) {\n // codi\nreturn $valor;\n\n}\n\n$resultado = nomFuncio($arg 1, $arg 2, ...);\n\n?&gt;\n</code></pre> <p>Per exemple:</p> UT02funcions02.php<pre><code>&lt;?php\n\nfunction diaSetmana() {\n    $setmana = [ \"dilluns\", \"dimarts\", \"dimecres\",\n        \"dijous\", \"divendres\", \"dissabte\", \"diumenge\" ];\n    $dia = $setmana[0]; // de 0 a 6\n    return $dia;\n}\n\n$diaCine = diaSetmana();\necho \"El pr\u00f2xim $diaCine vaig al cinema.\";\n\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#parametres-per-referencia","title":"Par\u00e0metres per refer\u00e8ncia","text":"<p>Si volem passar un par\u00e0metre per refer\u00e8ncia, en la declaraci\u00f3 de la funci\u00f3, indicarem els par\u00e0metres mitjan\u00e7ant l'operador <code>&amp;</code> per indicar la direcci\u00f3 de mem\u00f2ria de la variable.</p> UT02funcions03.php<pre><code>&lt;?php\nfunction duplicarPerValor($argument)\n{\n    $argument = $argument * 2;\n    echo \"Dins de la funci\u00f3: $argument.&lt;br&gt;\";\n}\n\nfunction duplicarPerReferencia(&amp;$argument)\n{\n    $argument = $argument * 2;\n    echo \"Dins de la funci\u00f3: $argument.&lt;br&gt;\";\n}\n\n$numero1 = 5;\n\necho \"Abans de cridar: $numero1.&lt;br&gt;\";\nduplicarPerValor($numero1);\necho \"Despr\u00e9s de cridar: $numero1.&lt;br&gt;\";\necho \"&lt;br&gt;\";\n$numero2 = 7;\necho \"Abans de cridar: $numero2.&lt;br&gt;\";\nduplicarPerReferencia($numero2);\necho \"Despr\u00e9s de cridar: $numero2.&lt;br&gt;\";\n\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#parametres-per-defecte-opcionals","title":"Par\u00e0metres per defecte / opcionals","text":"<p>Permeten assignar valors en la declaraci\u00f3, i posteriorment, deixar l\u2019argument en blanc.</p> UT02funcions04.php<pre><code>&lt;?php\nfunction obtenirCapital($pais = \"tots\") {\n    $capitals = array(\"It\u00e0lia\" =&gt; \"Roma\",\n        \"Fran\u00e7a\" =&gt; \"Paris\",\n        \"Portugal\" =&gt; \"Liboa\");\n    if ($pais == \"tots\") {\n        return array_values($capitals);\n    } else {\n        return $capitals[$pais];\n    }\n}\n\nprint_r(obtenirCapital());\necho \"&lt;br/&gt;\";\necho obtenirCapital(\"Fran\u00e7a\");\n</code></pre> <p>En el cas de conviure amb un altre tipus de par\u00e0metres, els par\u00e0metres que tenen el valor assignat per defecte sempre es col\u00b7loquen al final.</p> <pre><code>&lt;?php\n\nfunction saluda($nom, $prefijo = \"Sr\") {\n\n    echo \"Hola \".$prefijo.\" \".$nom;  \n\n}\n\nsaluda(\"Aitor\", \"Mr\");\n\nsaluda(\"Aitor\");\n\nsaluda(\"Marina\", \"Srta\");\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#parametres-variables","title":"Par\u00e0metres variables","text":"<p>Podem tenir funcions on en la declaraci\u00f3 no indiquem la quantitat de dades d'entrada.</p> <ul> <li><code>$arrayArgs = func_get_args();</code> \u2192 Obt\u00e9 un vector amb els par\u00e0metres</li> <li><code>$quantitat = func_num_args();</code> \u2192 Obt\u00e9 la quantitat de par\u00e0metres rebuts</li> <li><code>$valor = func_get_arg(numArgument);</code> \u2192 Obt\u00e9 el par\u00e0metre que ocupa la posici\u00f3 <code>numArgument</code>.</li> </ul> <p>Aquestes funcions no es poden passar com a par\u00e0metre a una altra funci\u00f3 (com a funcions variable, que veurem m\u00e9s endavant). Per a aix\u00f2, hem de guardar pr\u00e8viament la funci\u00f3 en una variable.</p> <pre><code>&lt;?php\n\nfunction sumaParametros() {\n\n    if (func_num_args() == 0) {  \n\n        return false;  \n\n    } else {  \n\n        $suma = 0;  \n\n        for ($i = 0; $i &lt; func_num_args(); $i++) {  \n\n            $suma + = func_get_arg( $i);  \n\n        }  \n\n        return $suma;  \n\n    }  \n\n}\n\necho sumaParametros(1, 5, 9); // 15\n\n?&gt;\n</code></pre> <p>Des de PHP 5.6, es pot utilitzar l'operador <code>...</code> (variadics) el qual \"disfressa\" els par\u00e0metres com un array:</p> <pre><code>&lt;?php\n\nfunction sumaParametrosMejor(...$numeros) {\n\n    if (count($numeros) == 0) {  \n\n        return false;  \n\n    } else {  \n\n        $suma = 0;  \n\n        foreach ($numeros as $num) {  \n\n            $suma + = $num;  \n\n        }  \n\n        return $suma;  \n\n    }  \n\n}\n\necho sumaParametrosMejor(1, 5, 9); // 15\n\n?&gt;\n</code></pre> <p>M\u00e9s usos de <code>...</code></p> <p>Tamb\u00e9 es pot utilitzar per dividir un vector en variables separades per proporcionar arguments</p> <pre><code>&lt;?php\n\nfunction suma($a, $b) {\n\n    return $a + $b;  \n\n}\n\necho suma(... [1, 5]).\" &lt;br /&gt;\";\n\n$a = [1, 5];\n\necho suma(...$a);\n\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#arguments-amb-nom","title":"Arguments amb nom","text":"<p>Des de PHP 8.0 podem passar els arguments amb el nom (a m\u00e9s de per posici\u00f3, com hem fet fins ara). Els arguments amb nom es passen posant el nom com a prefix del par\u00e0metres separat per dos punts: <code>$resultado = funcion( arg1 : valor1, arg2 : valor2);</code></p> <p>Aquesta caracter\u00edstica complementa els parametres opcionals permetent-nos saltar el seu valor:</p> <pre><code>&lt;?php\n\nfunction funcioArgumentsNom($a, $b = 2, $c = 4) {\n\necho \"$a $b $c\";\n\n}\n\nfuncioArgumentsNom( c: 3, a: 1); // \"1 2 3\"\n</code></pre> <p>Tant els par\u00e0metres opcionals com els obligatoris poden tenir nom, per\u00f2 els arguments amb nom s\u2019han de posar despr\u00e9s dels que no en tenen.</p> <pre><code>&lt;?php\n\nfuncioArgumentsNom( 1, c: 3); // \"1 2 3\"\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#funcions-tipades","title":"Funcions tipades","text":"<p>Des de PHP7 en les funcions, tant els par\u00e0metre com la seva devoluci\u00f3, permeten la definici\u00f3 de tipus. Aix\u00f2 es coneix com a strict_types (tipificaci\u00f3 estricta) i cal definir-lo en la primera l\u00ednia de cada arxiu <code>.php</code> perqu\u00e8 el mateix interpreti PHP comprovi els tipus i llanci errors si els tipus s\u00f3n incorrectes, mitjan\u00e7ant la sent\u00e8ncia</p> <pre><code>&lt;?php\n\ndeclare( strict_types = 1);\n</code></pre> <p>Aix\u00ed doncs, vam definir els tipus dels par\u00e0metres i dels valors retornats mitjan\u00e7ant els tipus: <code>int</code>, <code>float</code>, <code>string</code>, <code>bool</code>, <code>object</code> i <code>array</code>.</p> <p>Si una funci\u00f3 no retorna res s\u2019indica mitjan\u00e7ant el tipus <code>void</code>.</p> <pre><code>&lt;?php\n\ndeclare( strict_types = 1);\n\nfunction suma(int $a, int $b) : int {\n\n    return $a + $b;  \n\n}\n\n$num = 33;\n\necho suma(10, 30);\n\necho suma(10, $num);\n\necho suma(\"10\", 30); error per tipificaci\u00f3 estricta, sin\u00f3 en donaria 40\n\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#abast","title":"Abast","text":"<p>Les variables definides fora de les funcions tenen abast global: accessibles des de qualsevol funci\u00f3. Els par\u00e0metres d'una funci\u00f3 i les variables declarades dins d'una funci\u00f3 (es coneixen com a variables locals) nom\u00e9s s\u00f3n accessibles des de dins de la mateixa funci\u00f3 \u2192 abast de funci\u00f3.</p> <p>En cas de conflicte, tenen prioritat les variables locals. Per evitar el conflicte, dins de la funci\u00f3, podem declarar la variable com a <code>global</code>.</p> Abast localAbast global <pre><code>&lt;?php\n\nfunction laMevaCiutat() {\n\n    $ciutat = \"Elche\";  \n\n    echo \"Dins de la funci\u00f3: $ciutat.&lt;br&gt;\";  \n\n}\n\n$ciutat = \"Alacant\";\n\necho \"Abans de la funci\u00f3: $ciutat.&lt;br&gt;\";\n\nmiCiutat();\n\necho \"Despr\u00e9s de la funci\u00f3: $ciutat.&lt;br&gt;\"\n\n?&gt;\n</code></pre> <p>``` { .php title=\"\"} &lt;?php</p> <p>function laMevaCiutat() {</p> <pre><code>global $ciutat;\n\n$ciutat = \"Elche\";\n\necho \"Dins de la funci\u00f3: $ciutat.&lt;br&gt;\";\n</code></pre> <p>}</p> <p>$ciutat = \"Alacant\";</p> <p>echo \"Abans de cridar: $ciutat.\";</p> <p>miCiutat();</p> <p>echo \"Despr\u00e9s de cridar: $ciutat.\"</p> <p>?&gt; ``</p> <p>No globals</p> <p>Per favor, cal evitar l'\u00fas de variables globals dins de les funcions. </p> <p>En el cas de necessitar-les, \u00e9s millor passar-les com a par\u00e0metre a les funcions.</p>"},{"location":"Moduls/DWES/UT02PHP.html#funcions-variable","title":"Funcions variable","text":"<ul> <li>Permet assignar una funci\u00f3 a una variable.</li> <li>Nom de la funci\u00f3 entre cometes.</li> <li>Si una variable va seguida de par\u00e8ntesi, PHP buscar\u00e0 una funci\u00f3 amb el seu valor.</li> </ul> <pre><code>&lt;?php\n\n$miFuncioSuma = \"suma\";\n\necho $miFuncioSuma(3,4); invoca la funci\u00f3 suma\n\n?&gt;\n</code></pre> <p>Funcions an\u00f2nimes</p> <p>PHP permet la definici\u00f3 i \u00fas de funcions an\u00f2nimes, \u00e9s a dir, funcions que no tenen nom, i s'utilitzen principalment per gestionar els callbacks. Aquest tipus de funcions s'utilitza molt en Javascript per gestionar els esdeveniments i promeses.</p> <pre><code>&lt;?php\n\n$anonima = function() {\n\n    echo \"Hola\";  \n\n};\n\n$anonima();\n\n$anonimaAmbParametre = function($nom) {\n\n    echo \"Hola \".$nom;  \n\n};\n\n$anonimaAmbParametre(\"Aitor\");\n</code></pre> <p>\u00das de variables externes a la funci\u00f3 an\u00f2nima \u2192 <code>use</code></p> <pre><code>$missatge = \"Hola\";\n\n$miClosure = function() use ($missatge) {\n\n    echo $missatge;  \n\n};\n\n$miClosure();\n</code></pre> <p>\u00das de par\u00e0metres</p> <pre><code>$holaPHP = function($arg) use ($missatge) {\n\n    echo $missatge.\" \".$arg;  \n\n};\n\n$holaPHP(\"PHP\");\n\n?&gt;\n</code></pre> <p>Des de PHP 7.4 s'han introdu\u00eft les funcions fletxa (arrow functions) per simplificar la seva definici\u00f3 i \u00fas.</p> <p>Teniu m\u00e9s informaci\u00f3 sobre funcions an\u00f2nimes i fletxa en el seg\u00fcent article (en angl\u00e8s): Funcions an\u00f2nimes i fletxa a PHP</p>"},{"location":"Moduls/DWES/UT02PHP.html#biblioteca-de-funcions","title":"Biblioteca de funcions","text":"<p>Podem agrupar un conjunt de funcions en un arxiu, per permetre la seva reutilitzaci\u00f3. Posteriorment, s\u2019inclou amb:</p> <ul> <li><code>include(arxiu);</code> / <code>include_once(arxiu);</code></li> <li><code>require(arxiu);</code> / <code>require_once(arxiu);</code></li> </ul> <p>Si no troba l'arxiu, <code>require</code> un error fatal, <code>include</code> l'ignora Les funcions <code>_once</code> nom\u00e9s es carreguen una vegada, si ja ha estat inclosa pr\u00e8viament, no ho torna a fer, evitant bucles.</p> <p>Per exemple, col\u00b7loquem les funcions a l'arxiu <code>biblioteca.php</code>:</p> <pre><code>&lt;?php\n\nfunction suma(int $a, int $b) : int {\n\n    return $a + $b;  \n\n}\n\nfunction resta(int $a, int $b) : int {\n\n    return $a - $b;  \n\n}\n\n?&gt;\n</code></pre> <p>I posteriorment en un altre arxiu:</p> <pre><code>&lt;?php\n\ninclude_once(\"biblioteca.php\");\n\necho suma(10,20);\n\necho resta(40,20);\n\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#plantilles-mitjancant-include","title":"Plantilles mitjan\u00e7ant <code>include</code>","text":"<p>Mitjan\u00e7ant l'\u00fas de la instrucci\u00f3 <code>include</code> tamb\u00e9 podem separar fragments de codi PHP/HTML que vulguem reutilitzar als nostres llocs web i crear un sistema molt senzill de plantilles. Per exemple, anam separar una p\u00e0gina en tres parts, primer la part superior en <code>capsalera.php</code>:</p> <pre><code>&lt;! DOCTYPE html&gt;\n\n&lt;html lang=\"\u00e9s\"&gt;\n\n&lt;head&gt;\n\n&lt;meta charset=\"UTF-8\"&gt;\n\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n\n&lt;title&gt;&lt;?= $titol ?&gt;&lt;/title&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n</code></pre> <p>La part de baix, per exemple, nom\u00e9s ha de contenir HTML i la col\u00b7loquem en <code>peu.html</code>:</p> <pre><code>&lt;footer&gt;Tofol&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> <p>I despr\u00e9s ens centrem \u00fanicament en el contingut que canvia en <code>pagina.php</code>:</p> <pre><code>&lt;?php\n\n$titol = \"P\u00e0gina amb includes\";\n\ninclude(\"capsalera.php\");\n\n?&gt;\n\n&lt;h1&gt;&lt;?= $titol ?&gt;&lt;/h1&gt;\n</code></pre> <pre><code>&lt;?php\n\ninclude(\"peu.html\");\n\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#funcions-predefinides","title":"Funcions predefinides","text":"<p>El llenguatge ofereix un ventall de funcions ja definides, agrupades per la seva funcionalitat: https://www.php.net/manual/es/funcref.php</p>"},{"location":"Moduls/DWES/UT02PHP.html#cadenes","title":"Cadenes","text":"<p>Ja hem vist que es poden crear amb cometes simples (<code>''</code>, sense interpretaci\u00f3) o cometes dobles (<code>\"\"</code>, interpreten el contingut i les seq\u00fc\u00e8ncies d'escapament <code>\\n</code>, <code>\\t</code>, <code>\\$</code>, <code>{</code>, \u2026 - magic quotes)</p> UT02funcionspredefinides01.php<pre><code>&lt;?php\n$nom=\"Tofol\";\n$moneda=\"Euro\";\necho \"El meu nom $nom\";\necho \"&lt;br/&gt;\";\necho \"Son 30 {$moneda}s\";\n?&gt;```\n\nS'accedeixen als car\u00e0cters com si fos un vector.\n\n``` { .php title=\"UT02funcionspredefinides02.php\"}\n&lt;?php\n$cadena = \"Jo s\u00f3c Batman\";\n$igrega = $cadena[0];\necho $igrega;\n$igrega = $cadena[1];\necho $igrega;\n?&gt;\n</code></pre> <p>A m\u00e9s de <code>echo</code>, podem mostrar les cadenes mitjan\u00e7ant la funci\u00f3 <code>printf</code>. Aquesta funci\u00f3 ve heretada del llenguatge C, ya la cadena s'indica el tipus de dada a formatejar i genera una sortida. Si vull guardar el resultat en una variable, podem utilitzar <code>sprintf</code>.</p> UT02funcionspredefinides03.php<pre><code>&lt;?php\n$num = 33;\n$nom = \"Larry Bird\";\nprintf(\"%s portava el n\u00famero %d\", $nom, $num); // %d -&gt; n\u00famero decimal, %s -&gt; string\necho \"&lt;br/&gt;\";\n$frase = sprintf(\"%s portava el n\u00famero %d\", $nom, $num);\necho $frase;\n?&gt;\n</code></pre> <p>Teniu molts m\u00e9s exemples en https://www.w3schools.com/php/func_string_printf.asp</p>"},{"location":"Moduls/DWES/UT02PHP.html#operacions-basiques","title":"Operacions b\u00e0siques","text":"<p>Totes les funcions es poden consultar en https://www.php.net/manual/es/ref.strings.php</p> <p>Les m\u00e9s importants s\u00f3n:</p> <ul> <li><code>strlen</code>: obt\u00e9 la longitud d'una cadena i retorna un nombre sencer</li> <li><code>substr</code>: retorna una subcadena de la cadena original</li> <li><code>str_replace</code>: reempla\u00e7a car\u00e0cters en una cadena</li> <li><code>strtolower</code> i <code>strtoupper</code>: Transformen una cadena de car\u00e0cters a la mateixa cadena en min\u00fascules o maj\u00fascules respectivament.</li> </ul> UT02funcionspredefinides04.php<pre><code>&lt;?php\n$cadena = \"El caballero oscuro\";\n$tam = strlen($cadena);\necho \"La longitud de '$cadena' es: $tam &lt;br /&gt;\";\n\necho \"Aix\u00f2 \u00e9s un substring des del caracter 13 fins al final: \";\n$oscuro = substr($cadena, 13); // desde 13 al final\necho \"&lt;br/&gt;\";\necho \"Aix\u00f2 \u00e9s un substring des del caracter 3 fins al 4: \";\n$caba = substr($cadena, 3, 4); // desde 3, 4 letras\necho \"&lt;br/&gt;\";\necho \"Ara farem un replace de c per k: \";\n$katman = str_replace(\"c\", \"k\", $cadena);\necho \"$oscuro $caba ara \u00e9s $katman\";\necho \"&lt;br/&gt;\";\necho \"i ara en maj\u00fascula \".strtoupper($cadena);\n?&gt;\n</code></pre> <p>Si volem treballar amb car\u00e0cters ASCII de forma individual, s\u00f3n \u00fatils les funcions:</p> <ul> <li><code>chr</code>: obt\u00e9 el car\u00e0cter a partir d'un ASCII</li> <li><code>ord</code>: obt\u00e9 l'ASCII d'un car\u00e0cter</li> </ul> UT02funcionspredefinides05.php<pre><code>&lt;?php\nfunction despres(string $lletra): string {\n    $asciiLletra = ord($lletra);\n    return chr($asciiLletra + 1);\n}\n\necho despres(\"B\");\n?&gt;\n</code></pre> <p>Si volem netejar cadenes, tenim les funcions:</p> <ul> <li><code>trim</code>: elimina els espais al principi i al final</li> <li><code>ltrim</code> / <code>rtrim</code> o <code>chop</code>: Elimina els espais inicials / finals d'una cadena.</li> <li><code>str_pad</code>: emplena les cadenes fins a una longitud especificada i amb el car\u00e0cter o car\u00e0cters especificats.</li> </ul> UT02funcionspredefinides06.php<pre><code>&lt;?php\n$cadena = \" Programant en PHP \";\n$neta = trim($cadena); // \"Programant en PHP\"\necho $neta;\necho \"&lt;br/&gt;\";\n$bruta = str_pad($neta, 23, \".\"); // \"Programant en PHP.....\"\necho $bruta;\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#comparant-i-buscant","title":"Comparant i buscant","text":"<p>La comparaci\u00f3 de cadenes pot ser amb conversi\u00f3 de tipus mitjan\u00e7ant <code>==</code> o estricta con <code>===</code>. Tamb\u00e9 funcionen els operadors <code>&lt;</code> i <code>&gt;</code> si totes dues s\u00f3n cadenes. En comparar cadenes amb valors numerics podem utilitzar:</p> <ul> <li><code>strcmp</code>: 0 iguals, &lt;0 si <code>a&lt;b</code> o &gt;0 si <code>a&gt;b</code></li> <li><code>strcasecmp</code>: passa a min\u00fascules i compara</li> <li><code>strncmp</code> / <code>strncasecmp</code>: compara els N primers car\u00e0cters</li> <li><code>strnatcmp</code>: comparacions naturals</li> </ul> UT02funcionspredefinides07.php<pre><code>&lt;?php\n$frase1 = \"Alfa\";\n$frase2 = \"Alfa\";\n$frase3 = \"Beta\";\n$frase4 = \"Alfa5\";\n$frase5 = \"Alfa10\";\n\nvar_dump( $frase1 == $frase2 ); // true\nvar_dump( $frase1 === $frase2 ); // true\nvar_dump( strcmp($frase1, $frase2) ); // 0\nvar_dump( strncmp($frase1, $frase5, 3) ); // 0\nvar_dump( $frase2 &lt; $frase3 ); // true\nvar_dump( strcmp($frase2, $frase3) ); // -1\nvar_dump( $frase4 &lt; $frase5 ); // false\nvar_dump( strcmp($frase4, $frase5) ); // 4 \u2192 f4 &gt; f5\nvar_dump( strnatcmp($frase4, $frase5) ); // -1 \u2192 f4 &lt; f5\n?&gt;\n</code></pre> <p>Si el que volem \u00e9s buscar dins d'una cadena, tenim:</p> <ul> <li><code>strpos</code> / <code>strrpos</code>: busca en una cadena i retorna la posici\u00f3 de la primera/\u00faltima ocurr\u00e8ncia.</li> <li><code>strstr</code> / <code>strchr(alias)</code>: busca una cadena i retorna la subcadena a partir d'on l'ha trobat</li> <li><code>stristr</code>: ignora les maj\u00fascules</li> </ul> UT02funcionspredefinides08.php<pre><code>&lt;?php\n$frase = \"Qui busca troba, aix\u00f2 diuen, de vegades\";\n$pos1 = strpos($frase, \",\"); // troba la primera coma\necho $pos1.\"&lt;br/&gt;\";\n$pos2 = strrpos($frase, \",\"); // troba l'\u00faltima coma\necho $pos2.\"&lt;br/&gt;\";\n$despresDeComa = strstr($frase, \",\"); // \", aix\u00f2 diuen, de vegades\"\necho $despresDeComa.\"&lt;br/&gt;\";\n?&gt;\n</code></pre> <p>Si volem esbrinar que cont\u00e9 les cadenes, tenim un conjunt de funcions de comprovacions de tipus, es coneixen com les funcions ctype que retornen un boole\u00e0:</p> <ul> <li><code>ctype_alpha</code> \u2192 Lletres</li> <li><code>ctype_alnum</code> \u2192 alfanum\u00e8rics</li> <li><code>ctype_digit</code> \u2192 d\u00edgits</li> <li><code>ctype_punct</code> \u2192 car\u00e0cters de puntuaci\u00f3, sense espais</li> <li><code>ctype_space</code> \u2192 s\u00f3n espais, tabulador, salt de l\u00ednia</li> </ul> UT02funcionspredefinides09.php<pre><code>&lt;?php\n$prova1 = \"hola\";\n$prova2 = \"hola33\";\n$prova3 = \"33\";\n$prova4 = \",.()[]\";\n$prova5 = \" ,.()[]\";\n\nif (ctype_alpha($prova1)) { // true\n    echo \"vertader&lt;br&gt;\"; \n}\nelse {\n    echo \"false&lt;br&gt;\";\n}\nif (ctype_alnum($prova2)) { // true\n    echo \"vertader&lt;br&gt;\"; \n}\nelse {\n    echo \"false&lt;br&gt;\";\n}\nif (ctype_digit($prova3)) { // true\n    echo \"vertader&lt;br&gt;\"; \n}\nelse {\n    echo \"false&lt;br&gt;\";\n}\nif (ctype_punct($prova4)) { // true\n    echo \"vertader&lt;br&gt;\"; \n}\nelse {\n    echo \"false&lt;br&gt;\";\n}\nif (ctype_space($prova5)) { // false\n    echo \"vertader&lt;br&gt;\"; \n}\nelse {\n    echo \"false&lt;br&gt;\";\n}\nif (ctype_space($prova5[0])) { // true\n    echo \"vertader&lt;br&gt;\"; \n}\nelse {\n    echo \"false&lt;br&gt;\";\n}\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#treballant-amb-subcadenas","title":"Treballant amb subcadenas","text":"<p>Si volem trencar les cadenes en trossos, tenim:</p> <ul> <li><code>explode</code>: converteix en vector la cadena mitjan\u00e7ant un separador.</li> <li><code>implode</code> / <code>join</code>: passa un vector a cadena amb un separador</li> <li><code>str_split</code> / <code>chunk_split</code>: passa una cadena a un array/cadena cada X car\u00e0cters</li> </ul> UT02funcionspredefinides10.php<pre><code>&lt;?php\n$frase = \"Qui cerca troba, aixo diuen, de vegades\";\n$parts = explode(\",\", $frase);\nprint_r($parts);\necho \"&lt;br/&gt;\";\n// Array ( [0] =&gt; Qui cerca troba [1] =&gt; aixo diuen [2] =&gt; de vegades )\n$ciutats = [\"Inca\", \"Manacor\", \"Buger\"];\n$cadenaCiutats = implode(\"&gt;\", $ciutats);\n// Inca&gt;Manacor&gt;Buger\necho $cadenaCiutats.\"&lt;br/&gt;\";\n$parts3cadena = chunk_split($frase, 3);\n// Qui ce rca tr oba , a ixo di uen , d e v ega des\necho $parts3cadena.\"&lt;br/&gt;\";\n$parts3vector = str_split($frase, 3);\n// Array ( [0] =&gt; Qui [1] =&gt; ce [2] =&gt; rca [3] =&gt; tr [4] =&gt; oba [5] =&gt; , a [6] =&gt; ixo [7] =&gt; di [8] =&gt; uen [9] =&gt; , d [10] =&gt; e v [11] =&gt; ega [12] =&gt; des )\nprint_r($parts3vector);\n?&gt;\n</code></pre> <p>Si volem treballar amb tokens:</p> <ul> <li><code>strtok(cadena, separador)</code></li> <li>i dins del bucle: <code>strtok(separador)</code></li> </ul> <p>Finalment, per separar-la en base al format:</p> <ul> <li><code>sscanf</code>: al rev\u00e9s que <code>sprintf</code>, crea un vector a partir de la cadena i el patr\u00f3.</li> </ul> <p>Finalment, altres operacions que podem realitzar per treballar amb subcadenas s\u00f3n:</p> <ul> <li><code>substr_count</code>: nombre de vegades que apareix la subcadena dins de la cadena</li> <li><code>substr_replace</code>: reempla\u00e7a part de la cadena a partir de la seva posici\u00f3, i opcionalment, longitud</li> </ul> UT02funcionspredefinides11.php<pre><code>&lt;?php\n$batman = \"Tofol Verdera es Batman\";\n$subcadena = substr($batman, 6, 7); // Verdera\necho $subcadena.\"&lt;br/&gt;\";\n$bes = substr_count($batman, \"a\"); // 3\necho $bes.\"&lt;br/&gt;\";\n// Tofol Verdera es camarero\n$cambrer1 = substr_replace($batman, \"cambrer\", 17);\necho $cambrer1.\"&lt;br/&gt;\";\n// Tofol Verdera es cambrer\n$cambrer2 = substr_replace($batman, \"cambrer\", -6); // quita 6 desdel final\necho $cambrer2.\"&lt;br/&gt;\";\n// Tofol Verdera es cambrer\n$bruno = substr_replace($batman, \"Bruno\", 0, 13);\n// Bruno es Batman\necho $bruno.\"&lt;br/&gt;\";\n?&gt;\n</code></pre> <p>Tamb\u00e9 disposem d'una s\u00e8rie de funcions que faciliten les codificacions des de i cap a HTML:</p> <ul> <li><code>htmlentities</code>: converteix entitats HTML, per exemple, <code>\u00e1</code> per <code>&amp;aacute;</code>,  <code>\u00f1</code> per <code>&amp;ntilde;</code>, <code>&lt;</code> per <code>&amp;lt;</code>, etc..</li> <li><code>htmlspecialchars</code>: idem per\u00f2 nom\u00e9s amb els car\u00e0cters especials (<code>&amp;</code>, <code>\"</code>, <code>'</code>, <code>&lt;</code>, <code>&gt;</code>, ...)</li> <li><code>striptags</code>: elimina etiquetes HTML.</li> <li><code>nl2br</code>: canvia salts de l\u00ednia per <code>&lt;br/&gt;</code>.</li> <li><code>rawurlencode</code> / <code>rawurldecode</code>: codifica/decodifica una URL (espais, ...).</li> </ul> UT02funcionspredefinides12.php<pre><code>&lt;?php\n// Text original amb alguns car\u00e0cters especials HTML i salts de l\u00ednia\n$input = \"&lt;h1&gt;Hello &amp; welcome!&lt;/h1&gt;\\nAquest \u00e9s un text amb &lt;b&gt;HTML&lt;/b&gt; i &amp; car\u00e0cters especials.\";\n\n// 1. htmlentities\n// Converteix car\u00e0cters especials a entitats HTML (serveix per evitar interpretaci\u00f3 HTML)\necho \"htmlentities():&lt;br&gt;\";\necho htmlentities($input);\necho \"&lt;hr&gt;\";\n\n// 2. htmlspecialchars\n// Converteix nom\u00e9s alguns car\u00e0cters especials (&lt;, &gt;, &amp;, \", ') a entitats HTML\necho \"htmlspecialchars():&lt;br&gt;\";\necho htmlspecialchars($input);\necho \"&lt;hr&gt;\";\n\n// 3. strip_tags\n// Elimina totes les etiquetes HTML del text (nom\u00e9s queda el contingut)\necho \"strip_tags():&lt;br&gt;\";\necho strip_tags($input);\necho \"&lt;hr&gt;\";\n\n// 4. nl2br\n// Converteix salts de l\u00ednia (\\n) en &lt;br&gt; per mantenir la separaci\u00f3 de l\u00ednies en un HTML\necho \"nl2br():&lt;br&gt;\";\necho nl2br(strip_tags($input));  // sovint es fa servir combinat amb strip_tags\necho \"&lt;hr&gt;\";\n\n// 5. rawurlencode i rawurldecode\n// Codifica i decodifica una cadena per a \u00fas segura en URL, codificant car\u00e0cters especials\n$url_string = \"Hola m\u00f3n! / Aqu\u00ed: 100% #100\";\n$encoded = rawurlencode($url_string);\n$decoded = rawurldecode($encoded);\n\necho \"rawurlencode():&lt;br&gt;\";\necho $encoded . \"&lt;br&gt;&lt;br&gt;\";\n\necho \"rawurldecode():&lt;br&gt;\";\necho $decoded . \"&lt;br&gt;\";\n?&gt;\n\n````\n\nAquestes funcions les utilitzarem en unitats posteriors, quan construim p\u00e0gines html.\n\n### Matem\u00e0tiques\n\nDisposem tant de constants com funcions ja definides per treballar amb operacions matem\u00e0tiques: &lt;https://www.php.net/manual/es/ref.math.php&gt;\n\n* Constants ja definides\n    * `M_PI`, `M_E`, `M_EULER`, `M_LN2`, `M_LOG2E`\n    * `PHP_INT_MAX`, `PHP_FLOAT_MAX`\n* Funcions de c\u00e0lcul\n    * `pow`, `sqrt`, `log`, `decbin`, `bindec`, `decoct`, `dechex`, `base_convert`, `max`, `min`\n* Funcions trigonom\u00e8triques\n    * `sin`, `cos`, `tan`, `deg2rad`, `rad2deg`\n* Funcions per treballar amb n\u00fameros aleatoris\n    * `rand`, `mt_rand` (m\u00e9s r\u00e0pida)\n\nTot i que la majoria d'elles s\u00f3n molt espec\u00edfiques de problemes matem\u00e0tics / estad\u00edstics, \u00e9s molt com\u00fa que haguem d'arrodonir i/o formatejar els c\u00e0lculs abans de mostrar-los a l'usuari.\n\nMitjan\u00e7ant la funci\u00f3 `number_format(numero, quantitatDecimals, separadorDecimals, separadorMiles)` poderem passar n\u00fameros a cadena amb decimals i/o separadors de decimals i/o de milers.\n\n``` { .php title=\"UT02funcionspredefinides13\"}\n&lt;?php\n$nf = 1234.5678;\necho number_format($nf, 2); // 1,234.57\necho number_format($nf, 2, \"M\", \"#\"); // 1#234M57\n?&gt;\n</code></pre> <p>Per arrodonir, tenim <code>abs</code> per al valor absolut i <code>round</code> per arrodonir, <code>ceil</code> per a aproximaci\u00f3 per exc\u00e9s i <code>floor</code> per defecte.</p> UT02funcionspredefinides14.php<pre><code>&lt;?php\n$num = 7.7;\n$set = floor($num);\necho $set.\"&lt;br/&gt;\";\n$vuit = ceil($num);\necho $vuit.\"&lt;br/&gt;\";\n$unAltre = 4.49;\n$quatre = round($unAltre);\necho $quatre.\"&lt;br/&gt;\";\n$quatrecinc = round($unAltre, 1);\necho $quatrecinc.\"&lt;br/&gt;\";\n$cinc = round($quatrecinc);\necho $quatrecinc.\"&lt;br/&gt;\";\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#tipus-de-dades","title":"Tipus de dades","text":"<p>Finalment, per realitzar conversions de dades o si volem treballar amb tipus de dades, tenim les seg\u00fcents funcions:</p> <ul> <li><code>floatval</code>, <code>intval</code>, <code>strval</code>: retorna una variable del tipus de la funci\u00f3 indicada</li> <li><code>settype</code>: for\u00e7a la conversi\u00f3</li> <li><code>gettype</code>: obt\u00e9 el tipus</li> <li><code>is_int</code>, <code>is_float</code>, <code>is_string</code>, <code>is_array</code>, <code>is_object</code>: retorna un boole\u00e0 a partir del tipus rebut</li> </ul> <pre><code>&lt;?php\n$un = 1;\nvar_dump(is_int($un)); // true\n$unfloat = floatval($un);\nsettype($un, \"string\");\nvar_dump(is_int($un)); // false\nvar_dump(is_string($un)); // true\nsettype($un, \"float\");\nvar_dump(is_int($un)); // false\nvar_dump(is_float($un)); // true\nvar_dump(is_int(intval($un))); // true\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#referencies","title":"Refer\u00e8ncies","text":"<ul> <li>Manual de PHP</li> <li>PHP en 2020, por Jes\u00fas Amieiro</li> <li>Apuntes de PHP de Bartolom\u00e9 Sintes, profesor del IES Abastos de Valencia</li> <li>Gu\u00eda de Estilo - PSR</li> <li>PHP - La manera correcta</li> <li>Apunt Aitor Medrano</li> </ul>"},{"location":"Moduls/DWES/UT02PHPTest.html","title":"Test autoavaluaci\u00f3","text":""},{"location":"Moduls/DWES/UT02PHPTest.html#test-dautoavaluacio-ut02-el-llenguatge-php","title":"Test d'Autoavaluaci\u00f3: UT02 El llenguatge PHP","text":""},{"location":"Moduls/DWES/UT02PHPTest.html#i-conceptes-generals-i-sintaxi","title":"I. Conceptes Generals i Sintaxi","text":"<p>1. Quin \u00e9s l'acr\u00f2nim original de PHP?</p> <ul> <li>A.Public Hosting Protocol</li> <li>B.Programming Hypertext Preprocessor</li> <li>C.Personal Home Page</li> <li>D.PHP Hypertext Preprocessor</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.Personal Home Page</p> <p>2. On s'executa el codi PHP?</p> <ul> <li>A.En el client (navegador), despr\u00e9s que el servidor el lliuri.</li> <li>B.En el servidor (per exemple, en Apache mitjan\u00e7ant mod_php).</li> <li>C.En ambd\u00f3s, tant client com servidor.</li> <li>D.Nom\u00e9s en arxius amb extensi\u00f3 <code>.html</code>.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.En el servidor (per exemple, en Apache mitjan\u00e7ant mod_php). El client rep el resultat generat despr\u00e9s d'interpretar el codi en el servidor.</p> <p>3. Quines etiquetes s'utilitzen per incrustar blocs de codi PHP en un document?</p> <ul> <li>A.<code>&lt;script&gt;...&lt;/script&gt;</code></li> <li>B.<code>{{...}}</code></li> <li>C.<code>&lt;?php</code> i <code>?&gt;</code></li> <li>D.<code>&lt;!--php...--&gt;</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.<code>&lt;?php</code> i <code>?&gt;</code>. Les sent\u00e8ncies se separen mitjan\u00e7ant <code>;</code>.</p> <p>4. Si un arxiu nom\u00e9s cont\u00e9 codi PHP (per exemple, classes o interf\u00edcies) i gens de HTML, quina etiqueta s'aconsella utilitzar?</p> <ul> <li>A.Ambdues etiquetes d'obertura i tancament (<code>&lt;?php</code> i <code>?&gt;</code>).</li> <li>B.Nom\u00e9s cal posar l'etiqueta d'obertura (<code>&lt;?php</code>).</li> <li>C.L'etiqueta d'obertura i tancament han de ser omeses.</li> <li>D.S'ha d'utilitzar <code>print (expresio);</code>.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.Nom\u00e9s cal posar l'etiqueta d'obertura (<code>&lt;?php</code>). Aix\u00f2 indica que \u00e9s un arxiu de php pur.</p>"},{"location":"Moduls/DWES/UT02PHPTest.html#ii-variables-i-constants","title":"II. Variables i Constants","text":"<p>5. Amb quin s\u00edmbol han de comen\u00e7ar obligat\u00f2riament totes les variables en PHP?</p> <ul> <li>A.<code>%</code></li> <li>B.<code>#</code></li> <li>C.<code>$</code></li> <li>D.<code>@</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.<code>$</code>.</p> <p>6. Quin tipat s'aplica a les variables en PHP?</p> <ul> <li>A.Estricte, ja que el tipus s'ha de declarar pr\u00e8viament.</li> <li>B.Din\u00e0mic, ja que el tipus s'assigna en temps d'execuci\u00f3 depenent del valor assignat.</li> <li>C.Fort, ja que una vegada assignat el tipus ja no pot canviar.</li> <li>D.S\u00f3n case insensitive.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.Din\u00e0mic, ja que el tipus s'assigna en temps d'execuci\u00f3 depenent del valor assignat.</p> <p>7. Com es declaren habitualment les constants en PHP pel que fa a la nomenclatura?</p> <ul> <li>A.Amb min\u00fascules, seguint el format camelCase.</li> <li>B.Amb el s\u00edmbol <code>$</code> al principi.</li> <li>C.Es declaren sempre a MAJ\u00daSCULES</li> <li>D.Amb l'operador <code>const</code> sense valor inicial.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.Es declaren sempre a MAJ\u00daSCULES.</p> <p>8. En l'\u00e0mbit de la generaci\u00f3 de contingut, quina \u00e9s la forma abreujada que s'utilitza quan nom\u00e9s s'ha de mostrar el valor d'una variable dins d'un fragment HTML?</p> <ul> <li>A.<code>&lt;?php expresio ?&gt;</code></li> <li>B.<code>&lt;?= expresio ?&gt;</code></li> <li>C.<code>print (expresio)</code></li> <li>D.<code>echo expresio;</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.<code>&lt;?= expresio ?&gt;</code>. S'utilitza <code>echo expresio;</code> quan es fa dins d'un bloc d'instruccions.</p> <p>9. Quin operador s'utilitza per concatenar strings (cadenes de text) en PHP?</p> <ul> <li>A.<code>+</code></li> <li>B.<code>&amp;</code></li> <li>C.<code>.</code></li> <li>D.<code>||</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.<code>.</code>. En comptes de concatenar cadenes amb variables, es poden imprimir directament ja que s'expandeixen autom\u00e0ticament.</p> <p>10. Quin operador s'utilitza per a la comparaci\u00f3 estricta (Id\u00e8ntic), que verifica si <code>$a</code> \u00e9s igual a <code>$b</code> i si s\u00f3n del mateix tipus de dada?</p> <ul> <li>A.<code>==</code></li> <li>B.<code>===</code></li> <li>C.<code>!=</code></li> <li>D.<code>!==</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.<code>===</code>. L'operador <code>==</code> nom\u00e9s verifica la igualtat despr\u00e9s de la conversi\u00f3 de tipus.</p> <p>11. Quin operador s'utilitza en PHP &gt;= 7 per obtenir el primer operand d'esquerra a dreta que existeixi i no sigui nul\u00b7la (Fusi\u00f3 de nul\u00b7la)?</p> <ul> <li>A.<code>?</code></li> <li>B.<code>?:</code></li> <li>C.<code>^</code></li> <li>D.<code>??</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: D.<code>??</code>. L'operador <code>$a ?? $b ?? $c</code> es coneix com a Fusi\u00f3 de nul\u00b7la.</p>"},{"location":"Moduls/DWES/UT02PHPTest.html#iii-estructures-de-control-i-bucles","title":"III. Estructures de Control i Bucles","text":"<p>12. En utilitzar la instrucci\u00f3 <code>if</code>, qu\u00e8 es recomana fer sempre, fins i tot si nom\u00e9s hi ha una \u00fanica instrucci\u00f3?</p> <ul> <li>A.No posar els par\u00e8ntesis.</li> <li>B.Utilitzar sempre l'operador ternari en lloc de <code>if</code>.</li> <li>C.Utilitzar sempre claus (<code>{}</code>) per evitar errors (bugs) futurs.</li> <li>D.Utilitzar el punt i coma (<code>;</code>) per separar la condici\u00f3.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.Utilitzar sempre claus (<code>{}</code>) per evitar errors (bugs) futurs.</p> <p>13. Qu\u00e8 passa si s'oblida la instrucci\u00f3 <code>break</code> despr\u00e9s d'un <code>case</code> en una sent\u00e8ncia <code>switch</code>?</p> <ul> <li>A.Es produeix un Fatal Error.</li> <li>B.El bucle s'atura autom\u00e0ticament.</li> <li>C.S'executar\u00e0 el seg\u00fcent cas autom\u00e0ticament.</li> <li>D.Es torna al principi del <code>switch</code>.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.S'executar\u00e0 el seg\u00fcent cas autom\u00e0ticament.</p> <p>14. L'operador <code>?:</code> (comprovar si una variable t\u00e9 valor i si no, assignar-ne un per defecte) \u00e9s conegut com a:</p> <ul> <li>A.Operador de Nau Espacial.</li> <li>B.Operador de Fusi\u00f3.</li> <li>C.Operador Elvis.</li> <li>D.Operador Ternari Simple.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.Operador Elvis. L'operador de Nau Espacial \u00e9s <code>a &lt;=&gt; b</code>.</p> <p>15. Quina alternativa s'aconsella utilitzar per controlar la sortida dels bucles, en lloc de les instruccions <code>break</code> i <code>continue</code>?</p> <ul> <li>A.L'\u00fas de funcions an\u00f2nimes.</li> <li>B.L'\u00fas de variables flag.</li> <li>C.El bucle <code>do-while</code>.</li> <li>D.La instrucci\u00f3 <code>return</code>.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.L'\u00fas de variables flag.</p>"},{"location":"Moduls/DWES/UT02PHPTest.html#iv-arrays","title":"IV. Arrays","text":"<p>16. Quina funci\u00f3 s'utilitza per obtenir la mida o el nombre d'elements d'un array?</p> <ul> <li>A.<code>size()</code></li> <li>B.<code>length(array)</code></li> <li>C.<code>count(array)</code></li> <li>D.<code>sizeof(array)</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.<code>count(array)</code>.</p> <p>17. Quina instrucci\u00f3 \u00e9s la forma \"m\u00e9s elegant\" de rec\u00f3rrer els arrays en PHP?</p> <ul> <li>A.La instrucci\u00f3 <code>while</code>.</li> <li>B.La instrucci\u00f3 <code>for</code>.</li> <li>C.La instrucci\u00f3 <code>do-while</code>.</li> <li>D.La instrucci\u00f3 <code>foreach</code>.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: D.La instrucci\u00f3 <code>foreach</code>.</p> <p>18. En un array associatiu, quin format s'utilitza en el bucle <code>foreach</code> per separar l'element en la clau i el valor?</p> <ul> <li>A.<code>foreach (array as element)</code></li> <li>B.<code>foreach (array as clau =&gt; valor)</code></li> <li>C.<code>foreach (array as valor)</code></li> <li>D.<code>foreach (array =&gt; clau)</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.<code>foreach (array as clau =&gt; valor)</code>.</p> <p>19. Quina funci\u00f3 \u00e9s \u00fatil per mostrar el contingut d'un array i mostra m\u00e9s informaci\u00f3 que la funci\u00f3 <code>print_r($array)</code>?</p> <ul> <li>A.<code>echo $array</code></li> <li>B.<code>var_dump($mixed)</code></li> <li>C.<code>array_pop($array)</code></li> <li>D.<code>in_array($elem, $array)</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.<code>var_dump($mixed)</code>.</p>"},{"location":"Moduls/DWES/UT02PHPTest.html#v-funcions-i-inclusio-de-fitxers","title":"V. Funcions i Inclusi\u00f3 de Fitxers","text":"<p>20. Per defecte, com es realitza el pas de par\u00e0metres a les funcions en PHP?</p> <ul> <li>A.Per refer\u00e8ncia (s'envia la direcci\u00f3 de mem\u00f2ria).</li> <li>B.Per valor (es realitza una c\u00f2pia de la variable).</li> <li>C.Pel seu nom, mitjan\u00e7ant dos punts (<code>:</code>).</li> <li>D.El pas de par\u00e0metres \u00e9s sempre opcional.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.Per valor (es realitza una c\u00f2pia de la variable).</p> <p>21. Quin operador s'utilitza en la declaraci\u00f3 de la funci\u00f3 per indicar que un par\u00e0metre es passa per refer\u00e8ncia (indicant la direcci\u00f3 de mem\u00f2ria de la variable)?</p> <ul> <li>A.<code>#</code></li> <li>B.<code>*</code></li> <li>C.<code>&amp;</code></li> <li>D.<code>...</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.<code>&amp;</code>.</p> <p>22. Des de PHP 7+, com es pot indicar que una funci\u00f3 no retorna res?</p> <ul> <li>A.Amb el tipus <code>null</code>.</li> <li>B.Amb el tipus <code>void</code>.</li> <li>C.Amb el tipus <code>bool</code>.</li> <li>D.No es pot indicar.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.Amb el tipus <code>void</code>.</p> <p>23. Qu\u00e8 succeeix si la instrucci\u00f3 <code>require(archivo);</code> no troba l'arxiu que ha d'incloure?</p> <ul> <li>A.Ho ignora i continua l'execuci\u00f3.</li> <li>B.Llen\u00e7a un error fatal.</li> <li>C.Llen\u00e7a una excepci\u00f3 que ha de ser capturada.</li> <li>D.Mostra un advertiment (warning) al navegador.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.Llen\u00e7a un error fatal. L'instrucci\u00f3 <code>include</code> s\u00ed que ho ignora.</p> <p>24. Quin tipus d'instrucci\u00f3 permet separar fragments de codi PHP/HTML per reutilitzar-los i crear un sistema senzill de plantilles?</p> <ul> <li>A.<code>require_once</code></li> <li>B.<code>include</code></li> <li>C.<code>str_pad</code></li> <li>D.L'operador Nau Espacial</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.<code>include</code>. Mitjan\u00e7ant l'\u00fas de la instrucci\u00f3 <code>include</code> es poden separar fragments de codi PHP/HTML per reutilitzar-los i crear un sistema senzill de plantilles.</p>"},{"location":"Moduls/DWES/UT02PHPTest.html#vi-funcions-de-cadenes-strings","title":"VI. Funcions de Cadenes (Strings)","text":"<p>25. Quina difer\u00e8ncia principal hi ha entre utilitzar cometes simples (<code>''</code>) i cometes dobles (<code>\"\"</code>) per a les cadenes?</p> <ul> <li>A.Les cometes simples no permeten utilitzar variables dins la cadena.</li> <li>B.Les cometes dobles interpreten el contingut i les seq\u00fc\u00e8ncies d'escapament (com <code>\\n</code>, <code>\\$</code>, etc.), mentre que les simples no ho fan.</li> <li>C.Nom\u00e9s les cometes simples permeten accedir als car\u00e0cters com un array.</li> <li>D.No hi ha difer\u00e8ncia entre ambdues.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.Les cometes dobles interpreten el contingut i les seq\u00fc\u00e8ncies d'escapament (com <code>\\n</code>, <code>\\$</code>, etc.), mentre que les simples no ho fan. Les cometes simples s\u00f3n sense interpretaci\u00f3.</p> <p>26. Quina funci\u00f3 s'utilitza per obtenir la longitud d'una cadena?</p> <ul> <li>A.<code>count()</code></li> <li>B.<code>substr()</code></li> <li>C.<code>str_length()</code></li> <li>D.<code>strlen()</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: D.<code>strlen()</code>. Aquesta funci\u00f3 retorna un nombre enter.</p> <p>27. Si volem convertir car\u00e0cters especials (com ara accents o s\u00edmbols com <code>&lt;</code> o <code>&gt;</code>) a les seves entitats HTML (<code>&amp;aacute;</code>, <code>&amp;lt;</code>), quina funci\u00f3 hem d'utilitzar?</p> <ul> <li>A.<code>striptags</code></li> <li>B.<code>htmlentities</code></li> <li>C.<code>trim</code></li> <li>D.<code>str_replace</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.<code>htmlentities</code>. <code>striptags</code> elimina etiquetes HTML.</p> <p>28. Quina funci\u00f3 matem\u00e0tica s'utilitza per arrodonir un nombre per exc\u00e9s?</p> <ul> <li>A.<code>round</code></li> <li>B.<code>floor</code></li> <li>C.<code>ceil</code></li> <li>D.<code>abs</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.<code>ceil</code>. <code>floor</code> \u00e9s per defecte.</p> <p>29. Quina funci\u00f3 permet convertir un nombre a cadena amb un format determinat, especificant la quantitat de decimals i els separadors de decimals i milers?</p> <ul> <li>A.<code>strval</code></li> <li>B.<code>number_format</code></li> <li>C.<code>printf</code></li> <li>D.<code>settype</code></li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: B.<code>number_format</code>. La sintaxi \u00e9s <code>number_format(numero, cantidadDecimales, separadorDecimales, separadorMiles)</code>.</p> <p>30. Quin grup de funcions s'utilitza per a realitzar comprovacions de tipus d'una cadena (si cont\u00e9 lletres, d\u00edgits, etc.) i retornen un boole\u00e0?</p> <ul> <li>A.Les funcions <code>is_type</code>.</li> <li>B.Les funcions <code>str_check</code>.</li> <li>C.Les funcions <code>ctype</code>.</li> <li>D.Les funcions <code>intval</code>.</li> </ul> Mostrar Soluci\u00f3 <p>Resposta Correcta: C.Les funcions <code>ctype</code>. Exemples d'aquestes funcions s\u00f3n <code>ctype_alpha</code> (lletres) i <code>ctype_digit</code> (d\u00edgits).</p>"},{"location":"Moduls/DWES/UT02PHPVideo.html","title":"V\u00eddeo resum de la unitat","text":""},{"location":"Moduls/DWES/UT02PHPVideo.html#llenguatge-php","title":"Llenguatge PHP","text":""},{"location":"Moduls/DWES/UT02PHPindex.html","title":"Portada UT02 - Desenvolupament Web Entorn Servidor (DWES)","text":""},{"location":"Moduls/DWES/UT02PHPindex.html#portada-ut02-desenvolupament-web-entorn-servidor-dwes","title":"Portada UT02 - Desenvolupament Web Entorn Servidor (DWES)","text":"<p>Benvinguts a la Unitat 2 del m\u00f2dul DWES, on treballarem el llenguatge PHP i conceptes clau per al desenvolupament web en servidor.</p>"},{"location":"Moduls/DWES/UT02PHPindex.html#index-de-continguts-ut02","title":"\u00cdndex de continguts UT02","text":"<ul> <li>Exercicis UT02 JavaScript i PHP</li> <li>Documentaci\u00f3 i recursos de la unitat</li> <li>Guies i materials addicionals</li> </ul>"},{"location":"Moduls/DWES/UT03PHPPOO.html","title":"Material te\u00f2ric","text":""},{"location":"Moduls/DWES/UT03PHPPOO.html#ut03-php-orientat-a-objectes","title":"UT03 PHP Orientat a Objectes","text":"Criteris d'avaluaci\u00f3 <p>Resultat d'aprenentatge:</p> <ol> <li>Desenvolupa aplicacions Web identificant i aplicant mecanismes per separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci.</li> </ol> <p>Criteris d'avaluaci\u00f3:</p> <ol> <li> <p>S'han identificat els avantatges de separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 de l'aplicaci\u00f3.</p> </li> <li> <p>S'han analitzat tecnologies i mecanismes que permeten realitzar aquesta separaci\u00f3 i les seves caracter\u00edstiques principals.</p> </li> <li> <p>S'han utilitzat objectes i controls en el servidor per generar l'aspecte visual de l'aplicaci\u00f3 web en el client.</p> </li> <li> <p>S'han utilitzat formularis generats de forma din\u00e0mica per respondre als esdeveniments de l'aplicaci\u00f3 Web.</p> </li> <li> <p>S'han escrit aplicacions Web amb manteniment d'estat i separaci\u00f3 de la l\u00f2gica de negoci.</p> </li> <li> <p>S'han aplicat els principis de la programaci\u00f3 orientada a objectes.</p> </li> <li> <p>S'ha provat i documentat el codi.</p> </li> </ol>"},{"location":"Moduls/DWES/UT03PHPPOO.html#classes-i-objectes","title":"Classes i Objectes","text":"<p>PHP segueix un paradigma de programaci\u00f3 orientada a objectes (POO) basada en classes.</p> <p>Una classe \u00e9s una plantilla que defineix les propietats i m\u00e8todes per poder crear objectes. D'aquesta manera, un objecte \u00e9s una inst\u00e0ncia d'una classe.</p> <p>Tant les propietats com els m\u00e8todes es defineixen amb una visibilitat (qui pot accedir)</p> <ul> <li>Privat - <code>private</code>: Nom\u00e9s hi pot accedir la pr\u00f2pia classe.</li> <li>Protegit - <code>protected</code>: Nom\u00e9s hi pot accedir la pr\u00f2pia classe o els seus descendents.</li> <li>P\u00fablic - <code>public</code>: Pot accedir qualsevol altra classe.</li> </ul> <p>Per declarar una classe, s'utilitza la paraula clau <code>class</code> seguit del nom de la classe. Per a un objecte a partir de la classe, s'utilitza <code>new</code>:</p> <pre><code>&lt;?php\n\nclass NombreClase {\n\n// propietats\n\n// i m\u00e8todes\n\n}\n\n$ob = new NombreClase();  \n</code></pre> <p>Classes amb maj\u00fascula</p> <p>Totes les classes comencen per lletra maj\u00fascula.</p> <p>Quan un projecte creix, \u00e9s normal modelar les classes mitjan\u00e7ant UML (recordeu Entorns de Desenvolupament?). Les classes es representen mitjan\u00e7ant un quadrat, separant el nom, de les propietats i els m\u00e8todes:</p> UML <p>Un cop hem creat un objecte, s'utilitza l'operador <code>-&gt;</code> per accedir a una propietat o un m\u00e8tode:</p> <pre><code>$objecte-&gt;propietat;\n$objecte-&gt;m\u00e8tode(par\u00e0metres);  \n</code></pre> <p>Si des de dins de la classe, volem accedir a una propietat o m\u00e8tode de la mateixa classe, utilitzarem la refer\u00e8ncia <code>$this</code>;</p> <p></p><pre><code>$this-&gt;propietat;\n\n$this-&gt;m\u00e8tode(par\u00e0metres);    \n</code></pre> Aix\u00ed doncs, com a exemple, codificar\u00edem una persona al fitxer <code>Persona.php</code> com:<p></p> <pre><code>&lt;?php\nclass Persona {\n    private string $nom;\n    public function setNom(string $nom) {\n        $this-&gt;nom= $nom;\n    }\n    public function imprimir(){\n        echo $this-&gt;nom;\n        echo '&lt;br&gt;';\n    }\n}\n$bruno = new Persona(); // creem un objecte\n$bruno-&gt;setNom(\"Bruno D\u00edaz\");\n$bruno-&gt;imprimir();  \n</code></pre> <p>Tot i que es poden declarar diverses classes al mateix arxiu, \u00e9s una mala pr\u00e0ctica. Aix\u00ed doncs, cada fitxer contedr\u00e0 una sola classe, i es nomenar\u00e0 amb el nom de la classe.</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#encapsulacio","title":"Encapsulaci\u00f3","text":"<p>Les propietats es defineixen privades o protegides (si volem que les classes heretades hi puguin accedir).</p> <p>Per a cada propietat, s'afegeixen m\u00e8todes p\u00fablics (getter/setter):  </p> <pre><code>public setPropietat(tipus $param)\n\npublic getPropietat() : tipus  \n</code></pre> <p>Les constants es defineixen p\u00fabliques perqu\u00e8 siguin accessibles per tots els recursos.</p> <pre><code>&lt;?php\n\nclass MajorMenor {\n    private int $major;\n    private int $menor;\n    public function setMajor(int $maj) {\n        $this-&gt;major = $maj;\n    }\n    public function setMenor(int $men) {\n        $this-&gt;menor = $men;\n    }\n    public function getmajor() : int {\n        return $this-&gt;major;\n    }\n    public function getMenor() : int {\n        return $this-&gt;menor;\n    }\n}  \n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#rebent-i-enviant-objectes","title":"Rebent i enviant objectes","text":"<p>\u00c9s recomanable indicar-ho en el tipus de par\u00e0metres. Si l'objecte pot retornar nuls es posa <code>?</code> davant del nom de la classe.</p> <p>Objectes per refer\u00e8ncia</p> <p>Els objectes que s'envien i reben com a par\u00e0metres sempre es passen per refer\u00e8ncia.</p> <pre><code>&lt;?php\nfunction majmen(array $numeros) : ?MajorMenor {\n    $a = max($numeros);\n    $b = min($numeros);\n    $result = new MajorMenor();\n    $result-&gt;setMajor($a);\n    $result-&gt;setMenor($b);\n    return $result;\n}\n$resultat = majmen([1,76,9,388,41,39,25,97,22]);\necho \"&lt;br&gt;Major: \".$resultat-&gt;getMajor();\necho \"&lt;br&gt;Menor: \".$resultat-&gt;getMenor();  \n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#constructor","title":"Constructor","text":"<p>El constructor dels objectes es defineix mitjan\u00e7ant el m\u00e8tode m\u00e0gic <code>__construct</code>. Pot o no tenir par\u00e0metres, per\u00f2 nom\u00e9s hi pot haver un \u00fanic constructor.</p> <pre><code>&lt;?php\n\nclass Persona {\n    private string $nom;\n    public function __construct(string $nom) {\n        $this-&gt;nom = $nom;\n    }\n    public function imprimir(){\n    echo $this-&gt;nom;\n    echo '&lt;br&gt;';\n    }\n}\n$bruno = new Persona(\"Bruno D\u00edaz\");\n$bruno-&gt;imprimir();  \n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#constructors-en-php-8","title":"Constructors en PHP 8","text":"<p>Una de les grans novetats que ofereix PHP 8 \u00e9s la simplificaci\u00f3 dels constructors amb par\u00e0metres, el que es coneix com a promoci\u00f3 de les propietats del constructor.</p> <p>Per a aix\u00f2, en comptes d'haver de declarar les propietats com a privades o protegides, i despr\u00e9s dins del constructor haver d'assignar els par\u00e0metres a aquestes propietats, el mateix constructor promociona les propietats.</p> <p>Vegem-ho millor amb un exemple. Imaginem una classe <code>Punt</code> on vulguem emmagatzemar les seves coordenades:</p> <pre><code>&lt;?php\nclass Punt {\n    protected float $x;\n    protected float $y;\n    protected float $z;\n    public function __construct(\n        float $x = 0.0,\n        float $y = 0.0,\n        float $z = 0.0\n    ) {\n        $this-&gt;x = $x;\n        $this-&gt;i = $y;\n        $this-&gt;z = $z;\n    }\n}  \n</code></pre> <p>A PHP 8, quedaria de la seg\u00fcent manera (molt m\u00e9s curt, cosa que facilita la seva llegibilitat):</p> <pre><code>&lt;?php\n\nclass Punt {\n    public function __construct(\n        protected float $x = 0.0,\n        protected float $y = 0.0,\n        protected float $z = 0.0,\n    ) {}\n}  \n</code></pre> <p>L'ordre importa</p> <p>A l'hora de codificar l'ordre dels elements ha de ser:</p> <pre><code>&lt;?php\n\ndeclare( strict_types = 1);\nclass NomClasse {\n    // propietats\n    // constructor\n    // getters - setters\n    // resta de m\u00e8todes\n}\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#classes-estatiques","title":"Classes est\u00e0tiques","text":"<p>Una classe est\u00e0tica en PHP \u00e9s una classe que no necessita ser instanciada per utilitzar els seus m\u00e8todes o propietats. Tota la funcionalitat d\u2019aquest tipus de classe s\u2019accedeix directament a trav\u00e9s del nom de la classe, utilitzant l'operador de resoluci\u00f3 d\u2019\u00e0mbit ::. Les classes est\u00e0tiques serveixen per a crear m\u00e8todes i propietats que s\u00f3n comuns a totes les inst\u00e0ncies i que, per tant, no depenen d\u2019un objecte espec\u00edfic.</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#particularitats-de-les-classes-estatiques-en-php","title":"Particularitats de les classes est\u00e0tiques en PHP","text":"<ul> <li>M\u00e8todes i propietats est\u00e0tiques: S\u2019han de declarar amb la paraula clau static.</li> <li>Acc\u00e9s a membres est\u00e0tics: Es fa mitjan\u00e7ant el nom de la classe, seguit de l\u2019operador :: i el nom del membre est\u00e0tic. Per exemple: Classe::metodeEstatic().</li> <li>No necessiten instanciar-se: No cal crear un objecte de la classe per a utilitzar els seus membres est\u00e0tics, cosa que fa la seva utilitat en funcionalitats que no requereixen informaci\u00f3 d\u2019un objecte en concret.</li> <li>Limitacions: Un m\u00e8tode est\u00e0tic no pot accedir a les propietats ni a methods no est\u00e0tics directament, ja que aquestes requereixen una inst\u00e0ncia de la classe per ser accedides.\u200b</li> </ul> <p>Exemples pr\u00e0ctics</p> <ul> <li>Una funci\u00f3 que calcula un valor i que \u00e9s \u00fatil des de qualsevol lloc sense necessitat d\u2019instanciar, com una calculadora o utilitat general.</li> <li>Comptadors globals que comparteixen una variable entre totes les inst\u00e0ncies, com en el cas de comptar quantes vegades s\u2019ha cridat un m\u00e8tode.</li> </ul> <p>En resum les classes est\u00e0tiques s\u00f3n \u00fatils quan es tracta de grups de funcions o dades que s\u00f3n globals per a tota la aplicaci\u00f3, no associades a un objecte concret. Tot i aix\u00f2, s\u2019han d\u2019utilitzar amb prud\u00e8ncia, ja que poden complicar el manteniment del codi si s\u2019abusa d\u2019elles. Es declaren amb <code>static</code> i es referencia amb <code>::</code>.</p> <p>Recordau!</p> <ul> <li>Si volem accedir a un m\u00e8tode est\u00e0tic, s'anteposa el nom de la classe: <code>Producte::nouProducte()</code>.</li> <li>Si des d'un m\u00e8tode volem accedir a una propietat est\u00e0tica de la mateixa classe, s'utilitza la refer\u00e8ncia <code>self</code>: <code>self::$numProductes</code></li> </ul> <pre><code>&lt;?php\n\nclass Producte {\n    const IVA = 0.23;\n    private static $numProductes = 0; \n    public static function nouProducte() {\n        self::$numProductes++;\n    }\n\n}\n\nProducte:: nouProducte();\n$impost = Producte::IVA;  \n</code></pre> <p>Tamb\u00e9 podem tenir classes normals que tinguin alguna propietat est\u00e0tica:</p> <pre><code>&lt;?php\nclass Producte {\n    const IVA = 0.23;\n    private static $numProductes = 0;\n    private $codi;\n    public function __construct(string $cod) {\n        self::$numProductes++;\n        $this-&gt;codi = $cod;\n    }\n    public function mostrarResum() : string {\n        return \"El producte \".$this-&gt;codi.\" \u00e9s el n\u00famero \".self::$numProductes;\n    }\n}\n\n$prod1 = new Producte(\"PS5\");\n$prod2 = new Producte(\"XBOX S\u00e8ries X\");\n$prod3 = new Producte(\"Nintendo Switch\");\necho $prod3-&gt;mostrarResum();  \n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#introspeccio","title":"Introspecci\u00f3","text":"<p>En treballar amb classes i objectes, existeixen un conjunt de funcions ja definides pel llenguatge que permeten obtenir informaci\u00f3 sobre els objectes:</p> <ul> <li><code>instanceof</code>: permet comprovar si un objecte \u00e9s d'una determinada classe</li> <li><code>get_class</code>: retorna el nom de la classe</li> <li><code>get_declared_class</code>: retorna un vectoramb els noms de les classes definides</li> <li><code>class_alias</code>: crea un \u00e0lies</li> <li><code>class_exists</code> / <code>method_exists</code> / <code>property_exists</code>: <code>true</code> si la classe / m\u00e8tode / propietat est\u00e0 definida</li> <li><code>get_class_methods</code> / <code>get_class_vars</code> / <code>get_object_vars</code>: Retorna un vectoramb els noms dels m\u00e8todes / propietats d'una classe / propietats d'un objecte que s\u00f3n accessibles des d'on es fa la trucada.</li> </ul> <p>Un exemple d'aquestes funcions pot ser el seg\u00fcent:</p> <pre><code>&lt;?php\n\n$p = new Producte(\"PS5\");\n\nif ($p instanceof Producte) {\n\n    echo \"\u00c9s un producte\";\n\n    echo \"La classe \u00e9s \".get_class($p);\n\n    class_alias(\"Producte\", \"Article\");\n\n    $c = new Article(\"Nintendo Switch\");\n\n    echo \"Un article \u00e9s un \".get_class($c);\n\n    print_r(get_class_methods(\"Producte\"));\n\n    print_r(get_class_vars(\"Producte\"));\n\n    print_r(get_object_vars($p));\n\n    if (method_exists($p, \"mostrarResumen\")) {\n\n        $p-&gt;mostrarResumen();\n\n    }\n\n}  \n</code></pre> <p>Clonat</p> <p>En assignar dos objectes no es copien, es crea una nova refer\u00e8ncia. Si volem una c\u00f2pia, cal clonar-lo mitjan\u00e7ant el m\u00e8tode <code>clone(object) : object</code></p> <p>Si volem modificar el clonat per defecte, cal definir el m\u00e8tode m\u00e0gic '__clone()'que s'anomenar\u00e0 despr\u00e9s de copiar totes les propietats.</p> <p>M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.oop5.cloning.php</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#herencia","title":"Her\u00e8ncia","text":"<p>PHP suporta her\u00e8ncia simple, de manera que una classe nom\u00e9s pot heretar d'una altra, no de dues classes alhora. Per a aix\u00f2 s'utilitza la paraula clau <code>extends</code>. Si volem que la classe A hereta de la classe B farem:</p> <p><code>class A extends B</code></p> <p>El fill hereta els atributs i m\u00e8todes p\u00fablics i protegits.</p> <p>Cada classe en un arxiu</p> <p>Com ja hem comentat, haur\u00edem de col\u00b7locar cada classe en un arxiu diferent per posteriorment utilitzar-lo mitjan\u00e7ant <code>include</code>. En els seg\u00fcent exemple els hem col\u00b7locat al costat per facilitar la seva llegibilitat.</p> <p>Per exemple, tenim una classe <code>Producte</code> i una <code>Tv</code> que hereta de <code>Producte</code>:</p> <pre><code>&lt;?php\n\nclass Producte {\n\n    public $codi;\n\n    public $nombre;\n\n    public $nombreCorto;\n\n    public $PVP;\n\n    public function mostrarResumen() {\n\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codi.\" &lt;/p&gt;\";\n\n    }\n\n}\n\nclass Tv extends Producte {\n\n    public $polzades;\n\n    public $tecnologia;\n\n}  \n</code></pre> <p>Podem utilitzar les seg\u00fcents funcions per esbrinar si hi ha relaci\u00f3 entre dues classes:</p> <ul> <li><code>get_parent_class( object): string</code></li> <li><code>is_subclass_of( object, string): bool</code></li> </ul> <pre><code>&lt;?php\n$t = new Tv();\n$t-&gt;codi = 33;\nif ($t instanceof Producte) {\n    echo $t-&gt;mostrarResumen();\n}\n$pare = get_parent_class($t);\necho \"&lt;br&gt;La classe pare \u00e9s: \" . $pare;\n$objectePare = new $pare;\necho $objectePare-&gt;mostrarResum();\nif (is_subclass_of($t, 'Producte')) {\n    echo \"&lt;br&gt;Som un fill de Producte\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#sobreescriure-metodes","title":"Sobreescriure m\u00e8todes","text":"<p>Podem crear m\u00e8todes en els fills amb el mateix nom que el pare, canviant el seu comportament. Per invocar els m\u00e8todes del pare -&gt; <code>parent::nomMetodo()</code> </p><pre><code>&lt;?php\nclass Tv extends Producte {\npublic $polzades;\npublic $tecnologia;\npublic function mostrarResum() {\n      parent::mostrarResum();\n      echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;polzades.\" &lt;/p&gt;\";\n}\n}\n</code></pre><p></p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#constructor-en-fills","title":"Constructor en fills","text":"<p>En els fills no es crea cap constructor de manera autom\u00e0tica. Per la qual cosa si no n'hi ha, s'invoca autom\u00e0ticament el del pare. En canvi, si el definim en el fill, hem d'invocar el del pare de manera expl\u00edcita.</p> PHP7PHP8 <pre><code>&lt;?php\nclass Producte {\n    public string $codi;\n    public function __construct(string $codi) {\n        $this-&gt;codi = $codi;\n    }\n    public function mostrarResum() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codi.\" &lt;/p&gt;\";\n    }\n}\nclass Tv extends Producte {\n    public $polzades;\n    public $tecnologia;\n    public function __construct(string $codi, int $polzades, string $tecnologia) {\n        parent::__construct($codi);\n        $this-&gt;polzades = $polzades;\n        $this-&gt;tecnologia = $tecnologia;\n    }\n    public function mostrarResum() {\n        parent::mostrarResum();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;polzades.\" &lt;/p&gt;\";\n    }\n}\n</code></pre> <pre><code>&lt;?php\nclass Producte {\n    public function __construct(private string $codi) { }\n    public function mostrarResum() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codi.\" &lt;/p&gt;\";\n    }\n}\nclass Tv extends Producte {\n    public function __construct(\n        string $codi,\n        private int $polzades,\n        private string $tecnologia)\n    {\n        parent::__construct($codi);\n    }\n    public function mostrarResum() {\n        parent::mostrarResum();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;polzades.\" &lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#classes-abstractes","title":"Classes abstractes","text":"<p>Les classes abstractes obliguen a heretar d'una classe, ja que no es permet la seva inst\u00e0ncia. Es defineix mitjan\u00e7ant <code>abstract class NombreClase {</code>. Una classe abstracta pot contenir propietats i m\u00e8todes no-abstractes, i/o m\u00e8todes abstractes.</p> <pre><code>&lt;?php\n// Classe abstracta\nabstract class Producte {\n    private $codi;\n    public function getCodi() : string {\n        return $this-&gt;codi;\n    }\n    // M\u00e8tode abstracte\n    abstract public function mostrarResum();\n}\n</code></pre> <p>Quan una classe hereta d'una classe abstracta, obligat\u00f2riament ha d'implementar els m\u00e8todes que t\u00e9 el pare marcats com a abstractes.</p> <pre><code>&lt;?php\nclass Tv extends Producte {\n    public $polzades;\n    public $tecnologia;\n    public function mostrarResum() { //obligat a implementar-lo\n        echo \"&lt;p&gt;Codi \".$this-&gt;getCodi().\" &lt;/p&gt;\";\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;polzades.\" &lt;/p&gt;\";\n    }\n}\n$t = new Tv();\necho $t-&gt;getCodi();\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#classes-finals","title":"Classes finals","text":"<p>S\u00f3n classes oposades a abstractes, ja que eviten que es pugui heretar una classe o m\u00e8tode per sobreescriure'l.</p> <pre><code>&lt;?php\nclass Producte {\n    private $codi;\n    public function getCodi() : string {\n        return $this-&gt;codi;\n    }\n    final public function mostrarResum() : string {\n        return \"Producte \".$this-&gt;codi;\n    }\n}\n\n// No podrem heretar de Microones\n\nfinal class Microones extends Producte {\n    private $potencia;\n    public function getPotencia() : int {\n        return $this-&gt;pot\u00e8ncia;\n    }\n\n    // No podem implementar mostrarResum()\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#interficies","title":"Interf\u00edcies","text":"<p>Permet definir un contracte amb les firmes dels m\u00e8todes a complir. Aix\u00ed doncs, nom\u00e9s cont\u00e9 declaracions de funcions i totes han de ser p\u00fabliques.</p> <p>Es declaren amb la paraula clau <code>interf\u00edcie</code> i despr\u00e9s les classes que compleixin el contracte el realitzen mitjan\u00e7ant la paraula clau <code>implements</code>.</p> <pre><code>&lt;?php\ninterface Nombrable {\n// declaraci\u00f3 de funcions\n}\n\nclass NombClasse implements NomInterface {\n\n// codi de la classe\n</code></pre> <p>Es permet l'her\u00e8ncia d'interf\u00edcies. A m\u00e9s, una classe pot implementar diversos interf\u00edcies (en aquest cas, s\u00ed que suporta l'her\u00e8cia m\u00faltiple, per\u00f2 nom\u00e9s d'interf\u00edcies).</p> <pre><code>&lt;?php\n\ninterface Mostrable {\n    public function mostrarResum() : string;\n}\n\ninterface MostrableTot extends Mostrable {\n    public function mostrarTot() : string;\n}\n\ninterface Facturable {\n    public function generarFactura() : string;\n}\n\nclass Producte implements MostrableTot, Facturable {\n    // Implementacions dels m\u00e8todes\n    // Obligat\u00f2riament haur\u00e0 d'implementar public function mostrarResum, mostrarTot i generarFactura\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#metodes-encadenats","title":"M\u00e8todes encadenats","text":"<p>Segueix el plantejament de la programaci\u00f3 funcional, i tamb\u00e9 es coneix com a method chaining. Planteja que sobre un objecte es realitzen diverses trucades.</p> <pre><code>&lt;?php\n$p1 = new Llibre();\n$p1-&gt;setNom(\"Harry Potter\");\n$p1-&gt;setAutor(\"JK Rowling\");\necho $p1;\n\n// Method chaining\n$p2 = new Llibre();\n$p2-&gt;setNom(\"Patria\")-&gt;setAutor(\"Aramburu\");\necho $p2;\n</code></pre> <p>Per facilitar-ho, anam modificar tots els seus m\u00e8todes mutadors (que modifiquen dades, setters, ...) perqu\u00e8 retornin una refer\u00e8ncia a <code>$this</code>:</p> <pre><code>&lt;?php\nclass Llibre {\n    private string $nom;\n    private string $autor;\n    public function getNom() : string {\n        return $this-&gt;nom;\n    }\n    public function setNomb(string $nombre) : Llibre {\n        $this-&gt;nom = $nom;\n        return $this;\n    }\n    public function getAutor() : string {\n        return $this-&gt;autor;\n    }\n    public function setAutor(string $autor) : Llibre {\n        $this-&gt;autor = $autor;\n        return $this;\n    }\n\n    public function __toString() : string {\n        return $this-&gt;nom.\" de \".$this-&gt;autor;\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#metodes-magics","title":"M\u00e8todes m\u00e0gics","text":"<p>Totes les classes PHP ofereixen un conjunt de m\u00e8todes, tamb\u00e9 coneguts com a magic methods que es poden sobreescriure per substituir el seu comportament. Alguns d'ells ja els hem utilitzat.</p> <p>Davant de qualsevol dubte, \u00e9s convenient consultar la documentaci\u00f3 oficial.</p> <p>Els m\u00e9s destacables s\u00f3n:</p> <ul> <li><code>__construct()</code></li> <li><code>__destruct()</code> \u2192 s'invoca en perdre la refer\u00e8ncia. S'utilitza per tancar una connexi\u00f3 a la BD, tancar un fitxer, ...</li> <li><code>__toString()</code> \u2192 representaci\u00f3 de l'objecte com a cadena. \u00c9s a dir, quan fem <code>esclat $objecte</code> s'executa autom\u00e0ticament aquest m\u00e8tode.</li> <li><code>__get(propietat)</code>, <code>__set(propietat, valor)</code> \u2192 Permetria accedir a les propietats privades, tot i que sempre \u00e9s m\u00e9s llegible/mantenible codificar els getter/setter.</li> <li><code>__isset(propietat)</code>, <code>__unset(propietat)</code> \u2192 Permet esbrinar o treure el valor a una propietat.</li> <li><code>__sleep()</code>, <code>__wakeup()</code> \u2192 S'executen en recuperar (unserialize) o emmagatzemar un objecte que se serialitza (serialize), i s'utilitzen per a definir quines propietats se serialitzen.</li> <li><code>__call()</code>, <code>__callStatic()</code> \u2192 S'executen en cridar a un m\u00e8tode que no \u00e9s p\u00fablic. Permeten sobrecarreguen m\u00e8todes.</li> </ul>"},{"location":"Moduls/DWES/UT03PHPPOO.html#espai-de-noms","title":"Espai de noms","text":"<p>Des de PHP 5.3 i tamb\u00e9 coneguts com a Namespaces, permeten organitzar les classes/interf\u00edcies, funcions i/o constants de forma similar als paquets a Java.</p> <p>Recomanaci\u00f3</p> <p>Un sol namespace per arxiu i crear una estructura de carpetes respectant els nivells/subnivells (igual que es fa a Java)</p> <p>Es declaren en la primera l\u00ednia mitjan\u00e7ant la paraula clau <code>namespace</code> seguida del nom de l'espai de noms assignat (cada subnivell se separa amb la barra invertida <code>\\</code>):</p> <p>Per exemple, per col\u00b7locar la classe <code>Producte</code> dins del namespace <code>Dwes\\Exemples</code> ho far\u00edem aix\u00ed:</p> <pre><code>&lt;?php\nnamespace DWES\\Exemples;\n\nconst IVA = 0.21;\n\nclass Producte {\n    public $nombre;\n\n    public function mostra() : void {\n        echo\"&lt;p&gt;Prod:\" . $this-&gt;nom . \"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#acces","title":"Acc\u00e9s","text":"<p>Per referenciar un recurs que cont\u00e9 un namespace, primer hem de tenir-lo disponible fent \u00fas d'<code>include</code> o <code>require</code>. Si el recurs \u00e9s al mateix namespace, es realitza un acc\u00e9s directe (es coneix com a acc\u00e9s sense qualificar).</p> <p>Realment hi ha tres tipus d'acc\u00e9s:</p> <ul> <li>sense qualificar: <code>recurs</code></li> <li>qualificat: <code>rutaRelativa\\recurs</code> \u2192 no cal posar el namespace complet</li> <li>totalment qualificat: <code>\\rutaAbsoluta\\recurs</code></li> </ul> <pre><code>&lt;?php\nnamespace DWES\\Exemples;\n\ninclude_once(\"Producte.php\");\n\necho IVA; // sense qualificar\necho Utilidades\\IVA; // acc\u00e9s qualificat. Donaria error, no existeix \\DWES\\Exemples\\Utilitats\\IVA\necho \\DWES\\Exemples\\IVA; //totalment qualificat\n\n$p1 = new Producte(); // el busca al mateix namespace i troba \\DWES\\Exemples\\Producte\n$p2 = new Model\\Producte(); // donaria error, no existeix el namespace Model. Est\u00e0 buscant \\DWES\\Exemples\\Model\\Producte\n$p3 =new \\DWES\\Exemples\\Producte(); // \\DWES\\Exemples\\Producte\n</code></pre> <p>Per evitar la refer\u00e8ncia qualificada podem declarar l'\u00fas mitjan\u00e7ant <code>use</code> (similar a fer <code>import</code> a Java). Es fa a la cap\u00e7alera, despr\u00e9s del <code>namespace</code>:</p> <p>Els tipus possibles s\u00f3n:</p> <ul> <li><code>use const nomQualificatConstant</code></li> <li><code>use function nomQualificatFuncio</code></li> <li><code>use nomQualificatClasse</code></li> <li><code>use nomQualificatClasse as NouNom</code> // per renomenar elements</li> </ul> <p>Per exemple, si volem utilitzar la classe <code>\\DWES\\Exemples\\Producte</code> des d'un recurs que es troba a l'arrel, per exemple a <code>inici.php</code>, far\u00edem:</p> <pre><code>&lt;?php\ninclude_once(\"DWES\\Exemple\\Producte.php\");\n\nuse const DWES\\Exemples\\IVA;\nuse \\DWES\\Exemples\\Producte;\n\necho IVA;\n$p1 = new Producte();\n</code></pre> <p>To <code>use</code> or not to <code>use</code></p> <p>En resum, <code>use</code> permet accedir sense qualificar recursos que estan en un altre namespace. Si estem en el mateix espai de nom, no necessitem <code>use</code>.</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#organitzacio","title":"Organitzaci\u00f3","text":"<p>Tot projecte, a mesura que creix, necessita organitzar el seu codi font. Es planteja una organitzaci\u00f3 en la qual els arxius que interactuen amb el navegador es col\u00b7loquen en l'arrel, i les classes que defensem van dins d'un namespace (i dins de la seva pr\u00f2pia carpeta <code>o</code> <code>app</code>).</p> Organitzaci\u00f3 del codi font <p>Organitzaci\u00f3, includes i usos</p> <ul> <li>Col\u00b7locarem cada recurs en un fitxer a part. </li> <li>En la primera l\u00ednia indicarem el seu namespace (si no est\u00e0 en l'arrel). </li> <li>Si utilitzem altres recursos, farem un <code>include_once</code> d'aquests recursos (classes, interf\u00edcies, etc...). </li> <li>Cada recurs ha d'incloure tots els altres recursos que referenci\u00ef: la classe de la qual hereta,  interf\u00edcies que implementa, classes utilitzades/rebudes com par\u00e0metres, etc... </li> <li>Si els recursos estan en un espai de noms diferent al que estem, emprarem <code>use</code> amb la ruta completa per a despr\u00e9s utilitzar refer\u00e8ncies sense qualificar.</li> </ul>"},{"location":"Moduls/DWES/UT03PHPPOO.html#autoload","title":"Autoload","text":"<p>No \u00e9s tedi\u00f3s haver de fer l <code>'include</code> de les classes? L 'autoload ve al rescat.</p> <p>Aix\u00ed doncs, permet carregar les classes (no les constants ni les funcions) que s'utilitzaran i evitar haver de fer el <code>include_once</code> de cadascuna d'elles. Per a aix\u00f2, s'utilitza la funci\u00f3 <code>spl_autoload_register</code></p> <pre><code>&lt;?php\nspl_autoload_register( function( $nomClasse ) {\n    include_once $nomClasse.'. php';\n} );\n?&gt;\n</code></pre> <p>Per qu\u00e8 s'anomenen autoload?</p> <p>Perqu\u00e8 abans es realitzava mitjan\u00e7ant el m\u00e8tode m\u00e0gic <code>__autoload()</code>, el qual est\u00e0 deprecated des de PHP 7.2</p> <p>I com organitzem ara el nostre codi aprofitant l 'autoload?</p> Organitzaci\u00f3 amb autoload <p>Per facilitar la recerca dels recursos a incloure, \u00e9s recomanable col\u00b7locar totes les classes dins d'una mateixa carpeta. Nosaltres la vam col\u00b7locar dins d <code>'app</code> (m\u00e9s endavant, quan estudiem Laravel veurem el motiu d'aquesta decisi\u00f3). Altres carpetes que podem crear s\u00f3n <code>test</code> per col\u00b7locar les proves PhpUnit que despr\u00e9s realitzarem, o la carpeta <code>vendor</code> on s'emmagatzemaran les llibreries del projecte (aquesta carpeta \u00e9s un est\u00e0ndard dins de PHP, ja que Composer la crea autom\u00e0ticament).</p> <p>Com hem col\u00b7locat tots els nostres recursos dins d <code>'app</code>, ara el nostre <code>autoload.php</code> (el qual col\u00b7loquem a la carpeta arrel) nom\u00e9s va a buscar dins d'aquesta carpeta:</p> <pre><code>&lt;?php\nspl_autoload_register( function( $nomClasse ) {\n    include_once \"app/\".$nomClasse.'. php';\n} );\n?&gt;\n</code></pre> <p>Autoload i rutes err\u00f2nies</p> <p>A Ubuntu en  fer l'incllueix de la classe que rep com a par\u00e0metre, les barres dels namespace (<code>\\</code>) s\u00f3n diferents a les de les rutes (<code>/</code>). Per aix\u00f2, \u00e9s millor que utilitzem el fitxer autoload:</p> <pre><code>&lt;?php\nspl_autoload_register( function( $nomClasse ) {\n    $ruta = \"app\\\\\".$nomClasse.'. php';\n    $ruta = str_replace(\"\\\\\", \"/\", $ruta); // Substitu\u00efm les barres\n    include_once $ruta';\n} );\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#gestio-derrors","title":"Gesti\u00f3 d'Errors","text":"<p>PHP classifica els errors que ocorren en diferents nivells. Cada nivell s'identifica amb una constant. Per exemple:</p> <ul> <li><code>E_ERROR</code>: errors fatals, no recuperables. S'interromp l'script.</li> <li><code>E_WARNING</code>: advert\u00e8ncies en temps d'execuci\u00f3. L'script no s'interromp.</li> <li><code>E_NOTICE</code>: avisos en temps d'execuci\u00f3.</li> </ul> <p>Podeu comprovar el llistat complet de constants de https://www.php.net/manual/es/errorfunc.constants.php</p> <p>Per a la configuraci\u00f3 dels errors podem fer-ho de dues formes:</p> <ul> <li>A nivell de <code>php.ini</code>:<ul> <li><code>error_reporting</code>: indica els nivells d'errors a notificar<ul> <li><code>error_reporting = E_ALL &amp; ~E_NOTICE</code> -&gt; Tots els errors menys els avisos en temps d'execuci\u00f3.</li> </ul> </li> <li><code>display_errors</code>: indica si mostrar o no els errors per pantalla. En entorns de producci\u00f3 \u00e9s com\u00fa posar-lo a <code>off</code></li> </ul> </li> <li>mitjan\u00e7ant codi amb les funcions seg\u00fcents:<ul> <li><code>error_reporting(codi)</code> -&gt; Controla quins errors notificar</li> <li><code>set_error_handler(nomManejador)</code> -&gt; Indica que s'invocar\u00e0 cada vegada que es trobi un error. El manejador rep com a par\u00e0metres el nivell de l'error i el missatge</li> </ul> </li> </ul> <p>A continuaci\u00f3 tenim un exemple mitjan\u00e7ant codi:</p> Funcions per a la gesti\u00f3 d'errorsConsola <pre><code>&lt;?php\nerror_reporting(E_ALL &amp;E_NOTICE &amp;E_WARNING);\n$resultat = $divident / $divisor;\nerror_reporting(E_ALL &amp;E_NOTICE);\nset_error_handler(\"manejadorErrors\");\n$resultat = $divident / $divisor;\nrestore_error_handler(); // torna a l'anterior\nfunction manejadorErrors($nivell, $missatge) {\n    switch($nivell) {\n        case E_WARNING:\n            echo \"&lt;strong&gt;Warning&lt;/strong&gt;: $missatge.&lt;br/&gt;\";\n            break;\n        default:\n            echo \"Error de tipus no especificat: $missatge.&lt;br/&gt;\";\n    }\n}\n</code></pre> <pre><code>Error de tipus no especificat: Undefined variable: dividend.\nError de tipus no especificat: Undefined variable: divisor.\nError de tipo Warning: Division by zero.\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#excepcions","title":"Excepcions","text":"<p>La gesti\u00f3 d'excepcions forma part des de PHP 5. El seu funcionament \u00e9s similar a Java, fent \u00fas d'un bloc <code>try / catch / finally</code>. Si detectem una situaci\u00f3 an\u00f2mala i volem llan\u00e7ar una excepci\u00f3, haurem de realitzar <code>throw new Exception</code> (adjuntant el missatge que l'ha provocat).</p> <pre><code>&lt;?php\ntry {\n    if ($divisor == 0\\) {\n        throw new Exception(\"Divisi\u00f3 per zero.\");\n    }\n    $resultat = $divident / $divisor;\n} catch (Exception $e) {\n    echo \"S'ha produ\u00eft el seg\u00fcent error: \".$e-&gt;getMessage();\n}\n</code></pre> <p>La classe <code>Exception</code> \u00e9s la classe pare de totes les excepcions. El seu constructor rep <code>missatge[,codiError][,excepcionPrevia]</code>.</p> <p>A partir d'un objecte <code>Exception</code>, podem accedir als m\u00e8todes <code>getMessage()</code>i <code>getCode()</code> per obtenir el missatge i el codi d'error de l'excepci\u00f3 capturada.</p> <p>El propi llenguatge ofereix un conjunt d'excepcions ja definides, les quals podem capturar (i llan\u00e7ar des de PHP 7). Es recomana la seva consulta en la documentaci\u00f3 oficial.</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#creant-excepcions","title":"Creant excepcions","text":"<p>Per crear una excepci\u00f3, la forma m\u00e9s curta \u00e9s crear una classe que \u00fanicament hereti d <code>'Exception</code>.</p> <pre><code>&lt;?php\nclass HolaExcepcio extends Exception {}\n</code></pre> <p>Si volem, i \u00e9s recomanable depenent dels requisits, podem sobrecarregar els m\u00e8todes m\u00e0gics, per exemple, sobrecarregant el constructor i trucant al constructor del pare, o rescriure el m\u00e8tode <code>__toString</code> per canviar el seu missatge:</p> <pre><code>&lt;?php\nclass Excepcio extends Exception {\n    public function __construct($msj, $codi = 0, Exception $previa = null) {\n        // codi propi\n        parent::__construct$msj, $codi, $previa);\n\n    public function __toString() {\n        return __CLASS__ . \": [{$this-&gt;codxxe}]: {$this-&gt;message}\\n\";\n    }\n    public function laMevaFuncio() {\n        echo \"Una funci\u00f3 personalitzada per a aquest tipus d'excepci\u00f3\\n\";\n    }\n}\n</code></pre> <p>Si definim una excepci\u00f3 d'aplicaci\u00f3 dins d'un namespace, quan referenciem a <code>Exception</code>, haurem de referenciar-la mitjan\u00e7ant el seu nom totalment qualificat (<code>\\Exception</code>), o utilitzant <code>use</code>:</p> Mitjan\u00e7ant nom totalment qualificatMitjan\u00e7ant 'use' <pre><code>&lt;?php\nnamespace \\DWES\\Exemples;\n    class AppExcepcio extends Exception {}\n</code></pre> <pre><code>&lt;?php\nnamespace \\DWES\\Exemples;\n    use Exception;\n    class AppExcepcion extends Exception {}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#excepcions-multiples","title":"Excepcions m\u00faltiples","text":"<p>Es poden fer servir excepcions m\u00faltiples per comprovar diferents condicions. A l'hora de capturar-les, es fa de m\u00e9s espec\u00edfica a m\u00e9s general.</p> <pre><code>&lt;?php\n$email = \"exemple@exemple.com\";\ntry {\n    // Comprova si l'email \u00e9s v\u00e0lid\n    if(filter_var($email, FILTER_VALIDATE_EMAIL) === FALSE) {\n        throw new Excepcio($email);\n    }\n\n    // Comprova la paraula exemple en la direcci\u00f3 email\n    if(strpos($email, \"exemple\") !== FALSE) {\n        throw new Exception(\"$email \u00e9s un email d'exemple no v\u00e0lid\");\n    }\n} catch (Excepcio $e) {\n    echo $e-&gt;laMevaFuncio();\n} catch(Exception $e) {\n    echo $e-&gt;getMessage();\n}\n</code></pre> <p>Autoavaluaci\u00f3</p> <p>Qu\u00e8 passaria en executar el seg\u00fcent codi?</p> <pre><code>&lt;?php\nclass MainException extends Exception {}\nclass SubException extends MainException {}\n    try {\n    throw new SubException(\"Llan\u00e7ada SubException\");\n    } catch (MainException $e) {\n      echo \"Capturada MainException \" . $e-&gt;getMessage();\n    } catch (SubException $e) {\n      echo \"Capturada SubException \" . $e-&gt;getMessage();\n    } catch (Exception $e) {\n     echo \"Capturada Exception \" . $e-&gt;getMessage();\n    }\n</code></pre> <p>Si en el mateix 'catch' volem capturar diverses excepcions, hem d'utilitzar l'operador '|':</p> <pre><code>&lt;?php\n\nclass MainException extends Exception {}\nclass SubException extends MainException {}\ntry {\n  throw new SubException(\"Llan\u00e7ada SubException\");\n\n} catch (MainException | SubException $e ) {\n  echo \"Capturada Exception \" . $e-&gt;getMessage();\n}\n</code></pre> <p>Des de PHP 7, existeix el tipus <code>Throwable</code>, el qual \u00e9s un interf\u00edcie que implementen tant els errors com les excepcions, i ens permet capturar els dos tipus alhora:</p> <pre><code>&lt;?php\ntry {\n    // el teu codi\n} catch (Throwable $e) {\n    echo 'Forma de capturar errors i excepcions alhora';\n}\n</code></pre> <p>Si nom\u00e9s volem capturar els errors fatals, podem fer \u00fas de la classe <code>Error</code>:</p> <pre><code>&lt;?php\ntry {\n    // Genera una notificaci\u00f3 que no es captura\n    echo $variableNoAsignada;\n    // Error fatal que es captura\n    funcionQueNoExiste();\n} catch (Error $e) {\n    echo \"Error capturat: \" . $e-&gt;getMessage();\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#rellancar-excepcions","title":"Rellan\u00e7ar excepcions","text":"<p>En les aplicacions reals, \u00e9s molt com\u00fa capturar una excepci\u00f3 de sistema i llan\u00e7ar-n'una d'aplicaci\u00f3 que hem definit nosaltres. Tamb\u00e9 podem llan\u00e7ar les excepcions sense necessitat d'estar dins d'un <code>try/catch</code>.</p> <pre><code>&lt;?php\nclass AppException extends Exception {}\n\ntry {\n    // Codi de negoci que falla\n} catch (Exception $e) {\n    throw new AppException(\"AppException: \".$e-&gt;getMessage(), $e-&gt;getCode(), $e);\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#spl","title":"SPL","text":"<p>Standard PHP Library \u00e9s el conjunt de funcions i utilitats que ofereix PHP, com:</p> <ul> <li>Estructures de dades<ul> <li>Pila, cua, cua de prioritat, llista doblement enlla\u00e7ada, etc...</li> </ul> </li> <li>Conjunt d'iteradors dissenyats per rec\u00f3rrer estructures agregades<ul> <li>arrays, resultats de bases de dades, arbres XML, llistats de directoris, etc.</li> </ul> </li> </ul> <p>Podeu consultar la documentaci\u00f3 a https://www.php.net/manual/es/book.spl.php o veure alguns exemples a https://diego.com.es/tutorial-de-la-libreria-spl-de-php</p> <p>Tamb\u00e9 defineix un conjunt d'excepcions que podem utilitzar perqu\u00e8 les llancin les nostres aplicacions:</p> <ul> <li><code>LogicException</code> (<code>extends Exception</code>)<ul> <li><code>BadFunctionCallException</code></li> <li><code>BadMethodCallException</code></li> <li><code>DomainException</code></li> <li><code>InvalidArgumentException</code></li> <li><code>LengthException</code></li> <li><code>OutOfRangeException</code></li> </ul> </li> <li><code>RuntimeException</code> (<code>extends Exception</code>)<ul> <li><code>OutOfBoundsException</code></li> <li><code>OverflowException</code></li> <li><code>RangeException</code></li> <li><code>UnderflowException</code></li> <li><code>UnexpectedValueException</code></li> </ul> </li> </ul> <p>Tamb\u00e9 podeu consultar la documentaci\u00f3 d'aquestes excepcions a https://www.php.net/manual/es/spl.exceptions.php.</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#referencies","title":"Refer\u00e8ncies","text":"<ul> <li>Manual de PHP</li> <li>Manual d'OO en PHP - www.desarrolloweb.com</li> <li>[Lloc web d'Aitor Medrano}(https://aitor-medrano.github.io/)</li> </ul>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html","title":"PHP Orientado a Objetos","text":""},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#php-orientado-a-objetos","title":"PHP Orientado a Objetos","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 18 sesiones</p> <p>Resultado de aprendizaje:</p> <ol> <li>Desarrolla aplicaciones Web identificando y aplicando mecanismos para separar el c\u00f3digo de presentaci\u00f3n de la l\u00f3gica de negocio.</li> </ol> <p>Criterios de evaluaci\u00f3n:</p> <ol> <li>Se han identificado las ventajas de separar la l\u00f3gica de negocio de los aspectos de presentaci\u00f3n de la aplicaci\u00f3n. </li> <li>Se han analizado tecnolog\u00edas y mecanismos que permiten realizar esta separaci\u00f3n y sus caracter\u00edsticas principales. </li> <li>Se han utilizado objetos y controles en el servidor para generar el aspecto visual de la aplicaci\u00f3n web en el cliente. </li> <li>Se han utilizado formularios generados de forma din\u00e1mica para responder a los eventos de la aplicaci\u00f3n Web. </li> <li>Se han escrito aplicaciones Web con mantenimiento de estado y separaci\u00f3n de la l\u00f3gica de negocio. </li> <li>Se han aplicado los principios de la programaci\u00f3n orientada a objetos. </li> <li>Se ha probado y documentado el c\u00f3digo.</li> </ol>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#clases-y-objetos","title":"Clases y Objetos","text":"<p>PHP sigue un paradigma de programaci\u00f3n orientada a objetos (POO) basada en clases.</p> <p>Un clase es un plantilla que define las propiedades y m\u00e9todos para poder crear objetos. De este manera, un objeto es una instancia de una clase.</p> <p>Tanto las propiedades como los m\u00e9todos se definen con una visibilidad (quien puede acceder)</p> <ul> <li>Privado - <code>private</code>:  S\u00f3lo puede acceder la propia clase.</li> <li>Protegido - <code>protected</code>: S\u00f3lo puede acceder la propia clase o sus descendientes.</li> <li>P\u00fablico - <code>public</code>: Puede acceder cualquier otra clase.</li> </ul> <p>Para declarar una clase, se utiliza la palabra clave <code>class</code> seguido del nombre de la clase. Para instanciar un objeto a partir de la clase, se utiliza <code>new</code>:</p> <pre><code>&lt;?php\nclass NombreClase {\n// propiedades\n// y m\u00e9todos\n}\n\n$ob = new NombreClase();\n</code></pre> <p>Clases con may\u00fascula</p> <p>Todas las clases empiezan por letra may\u00fascula.</p> <p>Cuando un proyecto crece, es normal modelar las clases mediante UML (\u00bfrecord\u00e1is Entornos de Desarrollo?). La clases se representan mediante un cuadrado, separando el nombre, de las propiedades y los m\u00e9todos:</p> <p></p> <p>Una vez que hemos creado un objeto, se utiliza el operador <code>-&gt;</code> para acceder a una propiedad o un m\u00e9todo:</p> <pre><code>$objeto-&gt;propiedad;\n$objeto-&gt;m\u00e9todo(par\u00e1metros);\n</code></pre> <p>Si desde dentro de la clase, queremos acceder a una propiedad o m\u00e9todo de la misma clase, utilizaremos la referencia <code>$this</code>;</p> <pre><code>$this-&gt;propiedad;\n$this-&gt;m\u00e9todo(par\u00e1metros);  \n</code></pre> <p>As\u00ed pues, como ejemplo, codificar\u00edamos una persona en el fichero <code>Persona.php</code> como:</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0setNombre(string $nom)\u00a0{\n        $this-&gt;nombre=$nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n        echo\u00a0$this-&gt;nombre;\n        echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(); // creamos un objeto\n$bruno-&gt;setNombre(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre> <p>Aunque se pueden declarar varias clases en el mismo archivo, es una mala pr\u00e1ctica. As\u00ed pues, cada fichero contedr\u00e1 una sola clase, y se nombrar\u00e1 con el nombre de la clase.</p>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#encapsulacion","title":"Encapsulaci\u00f3n","text":"<p>Las propiedades se definen privadas o protegidas (si queremos que las clases heredadas puedan acceder).</p> <p>Para cada propiedad, se a\u00f1aden m\u00e9todos p\u00fablicos (getter/setter):</p> <pre><code>public setPropiedad(tipo $param)\npublic getPropiedad() : tipo\n</code></pre> <p>Las constantes se definen p\u00fablicas para que sean accesibles por todos los recursos.</p> <pre><code>&lt;?php\nclass\u00a0MayorMenor\u00a0{\n    private\u00a0int $mayor;\n    private\u00a0int $menor;\n\n    public\u00a0function\u00a0setMayor(int\u00a0$may)\u00a0{\n        $this-&gt;mayor\u00a0=\u00a0$may;\n    }\n\n    public\u00a0function\u00a0setMenor(int\u00a0$men)\u00a0{\n        $this-&gt;menor\u00a0=\u00a0$men;\n    }\n\n    public\u00a0function\u00a0getMayor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;mayor;\n    }\n\n    public\u00a0function\u00a0getMenor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;menor;\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#recibiendo-y-enviando-objetos","title":"Recibiendo y enviando objetos","text":"<p>Es recomendable indicarlo en el tipo de par\u00e1metros. Si el objeto puede devolver nulos se pone <code>?</code> delante del nombre de la clase.</p> <p>Objetos por referencia</p> <p>Los objetos que se env\u00edan y reciben como par\u00e1metros siempre se pasan por referencia.</p> <pre><code>&lt;?php\nfunction\u00a0maymen(array\u00a0$numeros)\u00a0:\u00a0?MayorMenor\u00a0{\n    $a\u00a0=\u00a0max($numeros);\n    $b\u00a0=\u00a0min($numeros);\n\n    $result\u00a0=\u00a0new\u00a0MayorMenor();\n    $result-&gt;setMayor($a);\n    $result-&gt;setMenor($b);\n\n    return\u00a0$result;\n}\n\n$resultado\u00a0=\u00a0\u00a0maymen([1,76,9,388,41,39,25,97,22]);\necho\u00a0\"&lt;br&gt;Mayor:\u00a0\".$resultado-&gt;getMayor();\necho\u00a0\"&lt;br&gt;Menor:\u00a0\".$resultado-&gt;getMenor();\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#constructor","title":"Constructor","text":"<p>El constructor de los objetos se define mediante el m\u00e9todo m\u00e1gico <code>__construct</code>. Puede o no tener par\u00e1metros, pero s\u00f3lo puede haber un \u00fanico constructor.</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0__construct(string $nom)\u00a0{\n        $this-&gt;nombre = $nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n    \u00a0\u00a0echo\u00a0$this-&gt;nombre;\n    \u00a0\u00a0echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#constructores-en-php-8","title":"Constructores en PHP 8","text":"<p>Una de las grandes novedades que ofrece PHP 8 es la simplificaci\u00f3n de los constructores con par\u00e1metros, lo que se conoce como promoci\u00f3n de las propiedades del constructor.</p> <p>Para ello, en vez de tener que declarar las propiedades como privadas o protegidas, y luego dentro del constructor tener que asignar los par\u00e1metros a est\u00e1s propiedades, el propio constructor promociona las propiedades.</p> <p>Ve\u00e1moslo mejor con un ejemplo. Imaginemos una clase <code>Punto</code> donde queramos almacenar sus coordenadas:</p> <pre><code>&lt;?php\nclass Punto {\n    protected float $x;\n    protected float $y;\n    protected float $z;\n\n    public function __construct(\n        float $x = 0.0,\n        float $y = 0.0,\n        float $z = 0.0\n    ) {\n        $this-&gt;x = $x;\n        $this-&gt;y = $y;\n        $this-&gt;z = $z;\n    }\n}\n</code></pre> <p>En PHP 8, quedar\u00eda del siguiente modo (mucho m\u00e1s corto, lo que facilita su legibilidad):</p> <pre><code>&lt;?php\nclass Punto {\n    public function __construct(\n        protected float $x = 0.0,\n        protected float $y = 0.0,\n        protected float $z = 0.0,\n    ) {}\n}\n</code></pre> <p>El orden importa</p> <p>A la hora de codificar el orden de los elementos debe ser:</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n\nclass NombreClase {\n    // propiedades\n\n    // constructor\n\n    // getters - setters\n\n    // resto de m\u00e9todos\n}\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#clases-estaticas","title":"Clases est\u00e1ticas","text":"<p>Son aquellas que tienen propiedades y/o m\u00e9todos est\u00e1ticos (tambi\u00e9n se conocen como de clase, por que su valor se comparte entre todas las instancias de la misma clase).</p> <p>Se declaran con <code>static</code> y se referencian con <code>::</code>.</p> <ul> <li>Si queremos acceder a un m\u00e9todo est\u00e1tico, se antepone el nombre de la clase: <code>Producto::nuevoProducto()</code>.</li> <li>Si desde un m\u00e9todo queremos acceder a una propiedad est\u00e1tica de la misma clase, se utiliza la referencia <code>self</code>: <code>self::$numProductos</code></li> </ul> <pre><code>&lt;?php\nclass Producto {\n    const IVA = 0.23;\n    private static $numProductos = 0; \n\n    public static function nuevoProducto() {\n        self::$numProductos++;\n    }\n}\n\nProducto::nuevoProducto();\n$impuesto = Producto::IVA;\n</code></pre> <p>Tambi\u00e9n podemos tener clases normales que tengan alguna propiedad est\u00e1tica:</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    const\u00a0IVA\u00a0=\u00a00.23;\n    private\u00a0static\u00a0$numProductos\u00a0=\u00a00;\u00a0\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0__construct(string\u00a0$cod)\u00a0{\n        self::$numProductos++;\n        $this-&gt;codigo\u00a0=\u00a0$cod;\n    }\n\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"El\u00a0producto\u00a0\".$this-&gt;codigo.\" es\u00a0el\u00a0n\u00famero\u00a0\".self::$numProductos;\n    }\n}\n\n$prod1\u00a0=\u00a0new\u00a0Producto(\"PS5\");\n$prod2\u00a0=\u00a0new\u00a0Producto(\"XBOX\u00a0Series\u00a0X\");\n$prod3\u00a0=\u00a0new\u00a0Producto(\"Nintendo\u00a0Switch\");\necho\u00a0$prod3-&gt;mostrarResumen();\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#introspeccion","title":"Introspecci\u00f3n","text":"<p>Al trabajar con clases y objetos, existen un conjunto de funciones ya definidas por el lenguaje que permiten obtener informaci\u00f3n sobre los objetos:</p> <ul> <li><code>instanceof</code>: permite comprobar si un objeto es de una determinada clase</li> <li><code>get_class</code>: devuelve el nombre de la clase</li> <li><code>get_declared_class</code>: devuelve un array con los nombres de las clases definidas</li> <li><code>class_alias</code>: crea un alias</li> <li><code>class_exists</code> / <code>method_exists</code> / <code>property_exists</code>: <code>true</code> si la clase / m\u00e9todo / propiedad est\u00e1 definida</li> <li><code>get_class_methods</code> / <code>get_class_vars</code> / <code>get_object_vars</code>: Devuelve un array con los nombres de los m\u00e9todos / propiedades de una clase / propiedades de un objeto que son accesibles desde d\u00f3nde se hace la llamada.</li> </ul> <p>Un ejemplo de estas funciones puede ser el siguiente:</p> <pre><code>&lt;?php\n$p\u00a0=\u00a0new\u00a0Producto(\"PS5\");\nif\u00a0($p\u00a0instanceof\u00a0Producto)\u00a0{\n    echo\u00a0\"Es\u00a0un\u00a0producto\";\n    echo\u00a0\"La\u00a0clase\u00a0es\u00a0\".get_class($p);\n\n    class_alias(\"Producto\",\u00a0\"Articulo\");\n    $c\u00a0=\u00a0new\u00a0Articulo(\"Nintendo\u00a0Switch\");\n    echo\u00a0\"Un\u00a0articulo\u00a0es\u00a0un\u00a0\".get_class($c);\n\n    print_r(get_class_methods(\"Producto\"));\n    print_r(get_class_vars(\"Producto\"));\n    print_r(get_object_vars($p));\n\n    if\u00a0(method_exists($p,\u00a0\"mostrarResumen\"))\u00a0{\n        $p-&gt;mostrarResumen();\n    }\n}\n</code></pre> <p>Clonado</p> <p>Al asignar dos objetos no se copian, se crea una nueva referencia. Si queremos una copia, hay que clonarlo mediante el m\u00e9todo <code>clone(object) : object</code></p> <p>Si queremos modificar el clonado por defecto, hay que definir el m\u00e9todo m\u00e1gico <code>__clone()</code> que se llamar\u00e1 despu\u00e9s de copiar todas las propiedades.</p> <p>M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/language.oop5.cloning.php</p>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#herencia","title":"Herencia","text":"<p>PHP soporta herencia simple, de manera que una clase solo puede heredar de otra, no de dos clases a la vez. Para ello se utiliza la palabra clave <code>extends</code>. Si queremos que la clase A hereda de la clase B haremos:</p> <pre><code>class A extends B\n</code></pre> <p>El hijo hereda los atributos y m\u00e9todos p\u00fablicos y protegidos.</p> <p>Cada clase en un archivo</p> <p>Como ya hemos comentado, deber\u00edamos colocar cada clase en un archivo diferente para posteriormente utilizarlo mediante <code>include</code>. En los siguiente ejemplo los hemos colocado junto para facilitar su legibilidad.</p> <p>Por ejemplo, tenemos una clase <code>Producto</code> y una <code>Tv</code> que hereda de <code>Producto</code>:</p> <pre><code>&lt;?php\nclass Producto {\n    public $codigo;\n    public $nombre;\n    public $nombreCorto;\n    public $PVP;\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n}\n</code></pre> <p>Podemos utilizar las siguientes funciones para averiguar si hay relaci\u00f3n entre dos clases:</p> <ul> <li><code>get_parent_class(object): string</code></li> <li><code>is_subclass_of(object, string): bool</code></li> </ul> <pre><code>&lt;?php\n$t = new Tv();\n$t-&gt;codigo = 33;\nif ($t instanceof Producto) {\n    echo $t-&gt;mostrarResumen();\n}\n\n$padre = get_parent_class($t);\necho \"&lt;br&gt;La clase padre es: \" . $padre;\n$objetoPadre = new $padre;\necho $objetoPadre-&gt;mostrarResumen();\n\nif (is_subclass_of($t, 'Producto')) {\n    echo \"&lt;br&gt;Soy un hijo de Producto\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#sobreescribir-metodos","title":"Sobreescribir m\u00e9todos","text":"<p>Podemos crear m\u00e9todos en los hijos con el mismo nombre que el padre, cambiando su comportamiento. Para invocar a los m\u00e9todos del padre -&gt; <code>parent::nombreMetodo()</code></p> <pre><code>&lt;?php\nclass Tv extends Producto {\n   public $pulgadas;\n   public $tecnologia;\n\n   public function mostrarResumen() {\n      parent::mostrarResumen();\n      echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n   }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#constructor-en-hijos","title":"Constructor en hijos","text":"<p>En los hijos no se crea ning\u00fan constructor de manera autom\u00e1tica. Por lo que si no lo hay, se invoca autom\u00e1ticamente al del padre. En cambio, si lo definimos en el hijo, hemos de invocar al del padre de manera expl\u00edcita.</p> PHP7PHP8 <pre><code>&lt;?php\nclass Producto {\n    public string $codigo;\n\n    public\u00a0function\u00a0__construct(string $codigo) {\n        $this-&gt;codigo =\u00a0$codigo;\n    }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public\u00a0function\u00a0__construct(string\u00a0$codigo,\u00a0int\u00a0$pulgadas,\u00a0string\u00a0$tecnologia)\u00a0{\n        parent::__construct($codigo);\n        $this-&gt;pulgadas\u00a0=\u00a0$pulgadas;\n        $this-&gt;tecnologia\u00a0=\u00a0$tecnologia;\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre> <pre><code>&lt;?php\nclass Producto {\n    public\u00a0function\u00a0__construct(private string $codigo) { }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }        \n}\n\nclass Tv extends Producto {\n\n    public\u00a0function\u00a0__construct(\n        string\u00a0$codigo,\n        private int\u00a0$pulgadas,\n        private string\u00a0$tecnologia)\n    {\n        parent::__construct($codigo);\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#clases-abstractas","title":"Clases abstractas","text":"<p>Las clases abstractas obligan a heredar de una clase, ya que no se permite su instanciaci\u00f3n. Se define mediante <code>abstract class NombreClase {</code>. Una clase abstracta puede contener propiedades y m\u00e9todos no-abstractos, y/o m\u00e9todos abstractos.</p> <pre><code>&lt;?php\n//\u00a0Clase\u00a0abstracta\nabstract\u00a0class\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n    //\u00a0M\u00e9todo\u00a0abstracto\n    abstract\u00a0public\u00a0function\u00a0mostrarResumen();\n}\n</code></pre> <p>Cuando una clase hereda de una clase abstracta, obligatoriamente debe implementar los m\u00e9todos que tiene el padre marcados como abstractos.</p> <pre><code>&lt;?php\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public function mostrarResumen() { //obligado a implementarlo\n        echo \"&lt;p&gt;C\u00f3digo \".$this-&gt;getCodigo().\"&lt;/p&gt;\";\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n\n$t = new Tv();\necho $t-&gt;getCodigo();\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#clases-finales","title":"Clases finales","text":"<p>Son clases opuestas a abstractas, ya que evitan que se pueda heredar una clase o m\u00e9todo para sobreescribirlo.</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n\n    final\u00a0public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"Producto\u00a0\".$this-&gt;codigo;\n    }\n}\n\n// No podremos heredar de Microondas\nfinal\u00a0class\u00a0Microondas\u00a0extends\u00a0Producto\u00a0{\n    private\u00a0$potencia;\n\n    public\u00a0function\u00a0getPotencia()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;potencia;\n    }\n\n    // No podemos implementar mostrarResumen()\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#interfaces","title":"Interfaces","text":"<p>Permite definir un contrato con las firmas de los m\u00e9todos a cumplir. As\u00ed pues, s\u00f3lo contiene declaraciones de funciones y todas deben ser p\u00fablicas.</p> <p>Se declaran con la palabra clave <code>interface</code> y luego las clases que cumplan el contrato lo realizan mediante la palabra clave <code>implements</code>.</p> <pre><code>&lt;?php\ninterface Nombreable {\n// declaraci\u00f3n de funciones\n}\nclass NombreClase implements NombreInterfaz {\n// c\u00f3digo de la clase\n</code></pre> <p>Se permite la herencia de interfaces. Adem\u00e1s, una clase puede implementar varios interfaces (en este caso, s\u00ed soporta la herecia m\u00faltiple, pero s\u00f3lo de interfaces).</p> <pre><code>&lt;?php\ninterface\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string;\n}\n\ninterface\u00a0MostrableTodo\u00a0extends\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarTodo()\u00a0:\u00a0string;\n}\n\ninterface\u00a0Facturable\u00a0{\n    public\u00a0function\u00a0generarFactura()\u00a0:\u00a0string;\n}\n\nclass\u00a0Producto\u00a0implements\u00a0MostrableTodo,\u00a0Facturable\u00a0{\n    //\u00a0Implementaciones\u00a0de\u00a0los\u00a0m\u00e9todos\n    // Obligatoriamente deber\u00e1 implementar public\u00a0function\u00a0mostrarResumen, mostrarTodo y generarFactura\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#metodos-encadenados","title":"M\u00e9todos encadenados","text":"<p>Sigue el planteamiento de la programaci\u00f3n funcional, y tambi\u00e9n se conoce como method chaining. Plantea que sobre un objeto se realizan varias llamadas.</p> <pre><code>&lt;?php\n$p1\u00a0=\u00a0new\u00a0Libro();\n$p1-&gt;setNombre(\"Harry\u00a0Potter\");\n$p1-&gt;setAutor(\"JK\u00a0Rowling\");\necho\u00a0$p1;\n\n// Method chaining\n$p2\u00a0=\u00a0new\u00a0Libro();\n$p2-&gt;setNombre(\"Patria\")-&gt;setAutor(\"Aramburu\");\necho\u00a0$p2;\n</code></pre> <p>Para facilitarlo, vamos a modificar todos sus m\u00e9todos mutadores (que modifican datos, setters, ...) para que devuelvan una referencia a <code>$this</code>:</p> <pre><code>&lt;?php\nclass\u00a0Libro\u00a0{\n    private\u00a0string\u00a0$nombre;\n    private\u00a0string\u00a0$autor;\n\n    public\u00a0function\u00a0getNombre()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre;\n    }\n    public\u00a0function\u00a0setNombre(string\u00a0$nombre)\u00a0:\u00a0Libro\u00a0{\u00a0\n        $this-&gt;nombre\u00a0=\u00a0$nombre;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0getAutor()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;autor;\n    }\n    public\u00a0function\u00a0setAutor(string\u00a0$autor)\u00a0:\u00a0Libro\u00a0{\n        $this-&gt;autor\u00a0=\u00a0$autor;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0__toString()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre.\"\u00a0de\u00a0\".$this-&gt;autor;\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#metodos-magicos","title":"M\u00e9todos m\u00e1gicos","text":"<p>Todas las clases PHP ofrecen un conjunto de m\u00e9todos, tambi\u00e9n conocidos como magic methods que se pueden sobreescribir para sustituir su comportamiento. Algunos de ellos ya los hemos utilizado.</p> <p>Ante cualquier duda, es conveniente consultar la documentaci\u00f3n oficial.</p> <p>Los m\u00e1s destacables son:</p> <ul> <li><code>__construct()</code></li> <li><code>__destruct()</code> \u2192 se invoca al perder la referencia. Se utiliza para cerrar una conexi\u00f3n a la BD, cerrar un fichero, ...</li> <li><code>__toString()</code> \u2192 representaci\u00f3n del objeto como cadena. Es decir, cuando hacemos <code>echo $objeto</code> se ejecuta autom\u00e1ticamente este m\u00e9todo.</li> <li><code>__get(propiedad)</code>, <code>__set(propiedad, valor)</code> \u2192 Permitir\u00eda acceder a las propiedad privadas, aunque siempre es m\u00e1s legible/mantenible codificar los getter/setter.</li> <li><code>__isset(propiedad)</code>, <code>__unset(propiedad)</code> \u2192 Permite averiguar o quitar el valor a una propiedad.</li> <li><code>__sleep()</code>, <code>__wakeup()</code> \u2192 Se ejecutan al recuperar (unserialize^) o almacenar un objeto que se serializa (serialize), y se utilizan para permite definir qu\u00e9 propiedades se serializan.</li> <li><code>__call()</code>, <code>__callStatic()</code> \u2192 Se ejecutan al llamar a un m\u00e9todo que no es p\u00fablico. Permiten sobrecargan m\u00e9todos.</li> </ul>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#espacio-de-nombres","title":"Espacio de nombres","text":"<p>Desde PHP 5.3 y tambi\u00e9n conocidos como Namespaces, permiten organizar las clases/interfaces, funciones y/o constantes de forma similar a los paquetes en Java.</p> <p>Recomendaci\u00f3n</p> <p>Un s\u00f3lo namespace por archivo y crear una estructura de carpetas respectando los niveles/subniveles (igual que se hace en Java)</p> <p>Se declaran en la primera l\u00ednea mediante la palabra clave <code>namespace</code> seguida del nombre del espacio de nombres asignado (cada subnivel se separa con la barra invertida <code>\\</code>):</p> <p>Por ejemplo, para colocar la clase <code>Producto</code> dentro del namespace <code>Dwes\\Ejemplos</code> lo har\u00edamos as\u00ed:</p> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Ejemplos;\n\nconst\u00a0IVA\u00a0=\u00a00.21;\n\nclass\u00a0Producto\u00a0{\n    public\u00a0$nombre;\n    \u00a0\u00a0\n    public\u00a0function\u00a0muestra()\u00a0:\u00a0void\u00a0{\n        echo\"&lt;p&gt;Prod:\"\u00a0.\u00a0$this-&gt;nombre\u00a0.\u00a0\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#acceso","title":"Acceso","text":"<p>Para referenciar a un recurso que contiene un namespace, primero hemos de tenerlo disponible haciendo uso de <code>include</code> o <code>require</code>. Si el recurso est\u00e1 en el mismo namespace, se realiza un acceso directo (se conoce como acceso sin cualificar).</p> <p>Realmente hay tres tipos de acceso:</p> <ul> <li>sin cualificar: <code>recurso</code></li> <li>cualificado: <code>rutaRelativa\\recurso</code> \u2192 no hace falta poner el namespace completo</li> <li>totalmente cualificado: <code>\\rutaAbsoluta\\recurso</code></li> </ul> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Ejemplos;\n\ninclude_once(\"Producto.php\");\n\necho\u00a0IVA;\u00a0//\u00a0sin\u00a0cualificar\necho\u00a0Utilidades\\IVA;\u00a0// acceso cualificado. Dar\u00eda error, no existe \\Dwes\\Ejemplos\\Utilidades\\IVA\necho\u00a0\\Dwes\\Ejemplos\\IVA;\u00a0//\u00a0totalmente\u00a0cualificado\n\n$p1\u00a0=\u00a0new\u00a0Producto();\u00a0//\u00a0lo busca en el mismo namespace y encuentra \\Dwes\\Ejemplos\\Producto\n$p2\u00a0=\u00a0new\u00a0Model\\Producto(); // dar\u00eda error, no existe el namespace Model. Est\u00e1 buscando \\Dwes\\Ejemplos\\Model\\Producto\n$p3\u00a0=\u00a0new\u00a0\\Dwes\\Ejemplos\\Producto(); //\u00a0\\Dwes\\Ejemplos\\Producto\n</code></pre> <p>Para evitar la referencia cualificada podemos declarar el uso mediante <code>use</code> (similar a hacer <code>import</code> en Java). Se hace en la cabecera, tras el <code>namespace</code>:</p> <p>Los tipos posibles son:</p> <ul> <li><code>use const nombreCualificadoConstante</code></li> <li><code>use function nombreCualificadoFuncion</code></li> <li><code>use nombreCualificadoClase</code></li> <li><code>use nombreCualificadoClase as NuevoNombre</code> // para renombrar elementos</li> </ul> <p>Por ejemplo, si queremos utilizar la clase <code>\\Dwes\\Ejemplos\\Producto</code> desde un recurso que se encuentra en la ra\u00edz, por ejemplo en <code>inicio.php</code>, har\u00edamos:</p> <pre><code>&lt;?php\ninclude_once(\"Dwes\\Ejemplo\\Producto.php\");\n\nuse\u00a0const\u00a0Dwes\\Ejemplos\\IVA;\nuse\u00a0\\Dwes\\Ejemplos\\Producto;\n\necho\u00a0IVA;\n$p1\u00a0=\u00a0new\u00a0Producto();\n</code></pre> <p>To <code>use</code> or not to <code>use</code></p> <p>En resumen, <code>use</code> permite acceder sin cualificar a recursos que est\u00e1n en otro namespace. Si estamos en el mismo espacio de nombre, no necesitamos <code>use</code>.</p>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#organizacion","title":"Organizaci\u00f3n","text":"<p>Todo proyecto, conforme crece, necesita organizar su c\u00f3digo fuente. Se plantea una organizaci\u00f3n en la que los archivos que interactuan con el navegador se colocan en el ra\u00edz, y las clases que definamos van dentro de un namespace (y dentro de su propia carpeta <code>src</code> o <code>app</code>).</p> Organizaci\u00f3n del c\u00f3digo fuente <p>Organizaci\u00f3n, includes y usos</p> <ul> <li>Colocaremos cada recurso en un fichero aparte.</li> <li>En la primera l\u00ednea indicaremos su namespace (si no est\u00e1 en el ra\u00edz).</li> <li>Si utilizamos otros recursos, haremos un <code>include_once</code> de esos recursos (clases, interfaces, etc...).</li> <li>Cada recurso debe incluir todos los otros recursos que referencie: la clase de la que hereda, interfaces que implementa, clases utilizadas/recibidas como par\u00e1metros, etc...</li> <li>Si los recursos est\u00e1n en un espacio de nombres diferente al que estamos, emplearemos <code>use</code> con la ruta completa para luego utilizar referencias sin cualificar.</li> </ul>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#autoload","title":"Autoload","text":"<p>\u00bfNo es tedioso tener que hacer el <code>include</code> de las clases? El autoload viene al rescate.</p> <p>As\u00ed pues, permite cargar las clases (no las constantes ni las funciones) que se van a utilizar y evitar tener que hacer el <code>include_once</code> de cada una de ellas. Para ello, se utiliza la funci\u00f3n <code>spl_autoload_register</code></p> <pre><code>&lt;?php\nspl_autoload_register(\u00a0function(\u00a0$nombreClase\u00a0)\u00a0{\n    include_once\u00a0$nombreClase.'.php';\n}\u00a0);\n?&gt;\n</code></pre> <p>\u00bfPor qu\u00e9 se llaman autoload?</p> <p>Porque antes se realizaba mediante el m\u00e9todo m\u00e1gico <code>__autoload()</code>, el cual est\u00e1 deprecated desde PHP 7.2</p> <p>Y \u00bfc\u00f3mo organizamos ahora nuestro c\u00f3digo aprovechando el autoload?</p> Organizaci\u00f3n con autoload <p>Para facilitar la b\u00fasqueda de los recursos a incluir, es recomendable colocar todas las clases dentro de una misma carpeta. Nosotros la vamos a colocar dentro de <code>app</code> (m\u00e1s adelante, cuando estudiemos Laravel veremos el motivo de esta decisi\u00f3n). Otras carpetas que podemos crear son <code>test</code> para colocar las pruebas PhpUnit que luego realizaremos, o la carpeta <code>vendor</code> donde se almacenar\u00e1n las librer\u00edas del proyecto (esta carpeta es un est\u00e1ndard dentro de PHP, ya que Composer la crea autom\u00e1ticamente).</p> <p>Como hemos colocado todos nuestros recursos dentro de <code>app</code>, ahora nuestro <code>autoload.php</code> (el cual colocamos en la carpeta ra\u00edz) s\u00f3lo va a buscar dentro de esa carpeta:</p> <pre><code>&lt;?php\nspl_autoload_register(\u00a0function(\u00a0$nombreClase\u00a0)\u00a0{\n    include_once\u00a0\"app/\".$nombreClase.'.php';\n}\u00a0);\n?&gt;\n</code></pre> <p>Autoload y rutas err\u00f3neas</p> <p>En Ubuntu al hacer el include de la clase que recibe como par\u00e1metro, las barras de los namespace (<code>\\</code>) son diferentes a las de las rutas (<code>/</code>). Por ello, es mejor que utilicemos el fichero autoload:</p> <pre><code>&lt;?php\nspl_autoload_register(\u00a0function(\u00a0$nombreClase\u00a0)\u00a0{\n    $ruta = \"app\\\\\".$nombreClase.'.php';\n    $ruta = str_replace(\"\\\\\", \"/\", $ruta); // Sustituimos las barras\n    include_once\u00a0$ruta';\n}\u00a0);\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#gestion-de-errores","title":"Gesti\u00f3n de Errores","text":"<p>PHP clasifica los errores que ocurren en diferentes niveles. Cada nivel se identifica con una constante. Por ejemplo:</p> <ul> <li><code>E_ERROR</code>: errores fatales, no recuperables. Se interrumpe el script.</li> <li><code>E_WARNING</code>: advertencias en tiempo de ejecuci\u00f3n. El script no se interrumpe.</li> <li><code>E_NOTICE</code>: avisos en tiempo de ejecuci\u00f3n.</li> </ul> <p>Pod\u00e9is comprobar el listado completo de constantes de https://www.php.net/manual/es/errorfunc.constants.php</p> <p>Para la configuraci\u00f3n de los errores podemos hacerlo de dos formas:</p> <ul> <li>A nivel de <code>php.ini</code>:<ul> <li><code>error_reporting</code>: indica los niveles de errores a notificar<ul> <li><code>error_reporting = E_ALL &amp; ~E_NOTICE</code> -&gt; Todos los errores menos los avisos en tiempo de ejecuci\u00f3n.</li> </ul> </li> <li><code>display_errors</code>: indica si mostrar o no los errores por pantalla. En entornos de producci\u00f3n es com\u00fan ponerlo a <code>off</code></li> </ul> </li> <li>mediante c\u00f3digo con las siguientes funciones:<ul> <li><code>error_reporting(codigo)</code> -&gt; Controla qu\u00e9 errores notificar</li> <li><code>set_error_handler(nombreManejador)</code> -&gt; Indica que funci\u00f3n se invocar\u00e1 cada vez que se encuentre un error. El manejador recibe como par\u00e1metros el nivel del error y el mensaje</li> </ul> </li> </ul> <p>A continuaci\u00f3n tenemos un ejemplo mediante c\u00f3digo:</p> Funciones para la gesti\u00f3n de erroresConsola <pre><code>&lt;?php\nerror_reporting(E_ALL\u00a0&amp;\u00a0~E_NOTICE\u00a0&amp;\u00a0~E_WARNING);\n$resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\n\nerror_reporting(E_ALL\u00a0&amp;\u00a0~E_NOTICE);\nset_error_handler(\"miManejadorErrores\");\n$resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\nrestore_error_handler();\u00a0//\u00a0vuelve\u00a0al\u00a0anterior\n\nfunction\u00a0miManejadorErrores($nivel,\u00a0$mensaje)\u00a0{\n    switch($nivel)\u00a0{\n        case\u00a0E_WARNING:\n            echo\u00a0\"&lt;strong&gt;Warning&lt;/strong&gt;:\u00a0$mensaje.&lt;br/&gt;\";\n            break;\n        default:\n            echo\u00a0\"Error\u00a0de\u00a0tipo\u00a0no\u00a0especificado:\u00a0$mensaje.&lt;br/&gt;\";\n    }\n}\n</code></pre> <pre><code>Error de tipo no especificado: Undefined variable: dividendo.\nError de tipo no especificado: Undefined variable: divisor.\nError de tipo Warning: Division by zero.\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#excepciones","title":"Excepciones","text":"<p>La gesti\u00f3n de excepciones forma parte desde PHP 5. Su funcionamiento es similar a Java, haciendo uso de un bloque <code>try / catch / finally</code>. Si detectamos una situaci\u00f3n an\u00f3mala y queremos lanzar una excepci\u00f3n, deberemos realizar <code>throw new Exception</code> (adjuntando el mensaje que lo ha provocado).</p> <pre><code>&lt;?php\ntry\u00a0{\n    if\u00a0($divisor\u00a0==\u00a00) {\n        throw\u00a0new\u00a0Exception(\"Divisi\u00f3n\u00a0por\u00a0cero.\");\n    }\n    $resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n    echo\u00a0\"Se\u00a0ha\u00a0producido\u00a0el\u00a0siguiente\u00a0error:\u00a0\".$e-&gt;getMessage();\n}\n</code></pre> <p>La clase <code>Exception</code> es la clase padre de todas las excepciones. Su constructor recibe <code>mensaje[,codigoError][,excepcionPrevia]</code>.</p> <p>A partir de un objeto <code>Exception</code>, podemos acceder a los m\u00e9todos <code>getMessage()</code>y <code>getCode()</code> para obtener el mensaje y el c\u00f3digo de error de la excepci\u00f3n capturada.</p> <p>El propio lenguaje ofrece un conjunto de excepciones ya definidas, las cuales podemos capturar (y lanzar desde PHP 7). Se recomienda su consulta en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#creando-excepciones","title":"Creando excepciones","text":"<p>Para crear una excepci\u00f3n, la forma m\u00e1s corta es crear una clase que \u00fanicamente herede de <code>Exception</code>.</p> <pre><code>&lt;?php\nclass\u00a0HolaExcepcion\u00a0extends\u00a0Exception\u00a0{}\n</code></pre> <p>Si queremos, y es recomendable dependiendo de los requisitos, podemos sobrecargar los m\u00e9todos m\u00e1gicos, por ejemplo, sobrecargando el constructor y llamando al constructor del padre, o rescribir el m\u00e9todo <code>__toString</code> para cambiar su mensaje:</p> <pre><code>&lt;?php\nclass\u00a0MiExcepcion\u00a0extends\u00a0Exception\u00a0{\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__construct($msj,\u00a0$codigo\u00a0=\u00a00,\u00a0Exception\u00a0$previa\u00a0=\u00a0null)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0c\u00f3digo\u00a0propio\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parent::__construct($msj,\u00a0$codigo,\u00a0$previa);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__toString()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0__CLASS__\u00a0.\u00a0\":\u00a0[{$this-&gt;code}]:\u00a0{$this-&gt;message}\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0miFuncion()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Una\u00a0funci\u00f3n\u00a0personalizada\u00a0para\u00a0este\u00a0tipo\u00a0de\u00a0excepci\u00f3n\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n}\n</code></pre> <p>Si definimos una excepci\u00f3n de aplicaci\u00f3n dentro de un namespace, cuando referenciemos a <code>Exception</code>, deberemos referenciarla mediante su nombre totalmente cualificado (<code>\\Exception</code>), o utilizando <code>use</code>:</p> Mediante nombre totalmente cualificado <pre><code>&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\n    class\u00a0AppExcepcion\u00a0extends\u00a0\\Exception\u00a0{}\n    ```\n=== \"Mediante `use`\"\n``` php\n&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\n    use Exception;\n\n    class\u00a0AppExcepcion\u00a0extends\u00a0Exception\u00a0{}\n    ```\n\n### Excepciones m\u00faltiples\n\nSe pueden usar excepciones m\u00faltiples para comprobar diferentes condiciones. A la hora de capturarlas, se hace de m\u00e1s espec\u00edfica a m\u00e1s general.\n\n``` php\n&lt;?php\n$email\u00a0=\u00a0\"ejemplo@ejemplo.com\";\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0si\u00a0el\u00a0email\u00a0es\u00a0v\u00e1lido\n\u00a0\u00a0\u00a0\u00a0if(filter_var($email,\u00a0FILTER_VALIDATE_EMAIL)\u00a0===\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0MiExcepcion($email);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0la\u00a0palabra\u00a0ejemplo\u00a0en\u00a0la\u00a0direcci\u00f3n\u00a0email\n\u00a0\u00a0\u00a0\u00a0if(strpos($email,\u00a0\"ejemplo\")\u00a0!==\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0Exception(\"$email\u00a0es\u00a0un\u00a0email\u00a0de\u00a0ejemplo no v\u00e1lido\");\n\u00a0\u00a0\u00a0\u00a0}\n}\u00a0catch\u00a0(MiExcepcion\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;miFuncion();\n}\u00a0catch(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Autoevaluaci\u00f3n</p> <p>\u00bfQu\u00e9 pasar\u00eda al ejectuar el siguiente c\u00f3digo?</p> <pre><code>&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\n    try\u00a0{\n    \u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n    }\u00a0catch\u00a0(MainException\u00a0$e)\u00a0{\n    \u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0MainException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n    }\u00a0catch\u00a0(SubException\u00a0$e)\u00a0{\n    \u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0SubException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n    }\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n    \u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n    }\n    ```\n\nSi en el mismo `catch` queremos capturar varias excepciones, hemos de utilizar el operador `|`:\n\n``` php\n&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n}\u00a0catch\u00a0(MainException\u00a0|\u00a0SubException\u00a0$e\u00a0)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Desde PHP 7, existe el tipo <code>Throwable</code>, el cual es un interfaz que implementan tanto los errores como las excepciones, y nos permite capturar los dos tipos a la vez:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0tu\u00a0codigo\n}\u00a0catch\u00a0(Throwable\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0'Forma\u00a0de\u00a0capturar\u00a0errores\u00a0y\u00a0excepciones\u00a0a\u00a0la\u00a0vez';\n}\n</code></pre> <p>Si s\u00f3lo queremos capturar los errores fatales, podemos hacer uso de la clase <code>Error</code>:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Genera\u00a0una\u00a0notificaci\u00f3n\u00a0que\u00a0no\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$variableNoAsignada;\n\u00a0\u00a0\u00a0\u00a0//\u00a0Error\u00a0fatal\u00a0que\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0funcionQueNoExiste();\n}\u00a0catch\u00a0(Error\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Error\u00a0capturado:\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#relanzar-excepciones","title":"Relanzar excepciones","text":"<p>En las aplicaciones reales, es muy com\u00fan capturar una excepci\u00f3n de sistema y lanzar una de aplicaci\u00f3n que hemos definido nostros. Tambi\u00e9n podemos lanzar las excepciones sin necesidad de estar dentro de un <code>try/catch</code>.</p> <pre><code>&lt;?php\nclass\u00a0AppException\u00a0extends\u00a0Exception\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0C\u00f3digo\u00a0de\u00a0negocio\u00a0que\u00a0falla\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0AppException(\"AppException:\u00a0\".$e-&gt;getMessage(), $e-&gt;getCode(),\u00a0$e);\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#spl","title":"SPL","text":"<p>Standard PHP Library es el conjunto de funciones y utilidades que ofrece PHP, como:</p> <ul> <li>Estructuras de datos<ul> <li>Pila, cola, cola de prioridad, lista doblemente enlazada, etc...</li> </ul> </li> <li>Conjunto de iteradores dise\u00f1ados para recorrer estructuras agregadas<ul> <li>arrays, resultados de bases de datos, \u00e1rboles XML, listados de directorios, etc.</li> </ul> </li> </ul> <p>Pod\u00e9is consultar la documentaci\u00f3n en https://www.php.net/manual/es/book.spl.php o ver algunos ejemplos en https://diego.com.es/tutorial-de-la-libreria-spl-de-php</p> <p>Tambi\u00e9n define un conjunto de excepciones que podemos utilizar para que las lancen nuestras aplicaciones:</p> <ul> <li><code>LogicException</code> (<code>extends Exception</code>)<ul> <li><code>BadFunctionCallException</code></li> <li><code>BadMethodCallException</code></li> <li><code>DomainException</code></li> <li><code>InvalidArgumentException</code></li> <li><code>LengthException</code></li> <li><code>OutOfRangeException</code></li> </ul> </li> <li><code>RuntimeException</code> (<code>extends Exception</code>)<ul> <li><code>OutOfBoundsException</code></li> <li><code>OverflowException</code></li> <li><code>RangeException</code></li> <li><code>UnderflowException</code></li> <li><code>UnexpectedValueException</code></li> </ul> </li> </ul> <p>Tambi\u00e9n pod\u00e9is consultar la documentaci\u00f3n de estas excepciones en https://www.php.net/manual/es/spl.exceptions.php.</p>"},{"location":"Moduls/DWES/UT03PHPPOO_2425.html#referencias","title":"Referencias","text":"<ul> <li>Manual de PHP</li> <li>Manual de OO en PHP - www.desarrolloweb.com</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html","title":"Programaci\u00f3n Web","text":""},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#programacion-web","title":"Programaci\u00f3n Web","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 12 sesiones</p> Resultado de aprendizaje Criterios de evaluaci\u00f3n 4. Desarrolla aplicaciones Web embebidas en lenguajes de marcas analizando e incorporando funcionalidades seg\u00fan especificaciones. a) Se han identificado los mecanismos disponibles para el mantenimiento de la informaci\u00f3n que concierne a un cliente web concreto y se han se\u00f1alado sus ventajas. b) Se han utilizado sesiones para mantener el estado de las aplicaciones Web.  c) Se han utilizado cookies para almacenar informaci\u00f3n en el cliente Web y para recuperar su contenido.  d) Se han identificado y caracterizado los mecanismos disponibles para la autentificaci\u00f3n de usuarios.  e) Se han escrito aplicaciones que integren mecanismos de autentificaci\u00f3n de usuarios.  f) Se han realizado adaptaciones a aplicaciones Web existentes como gestores de contenidos u otras.  g) Se han utilizado herramientas y entornos para facilitar la programaci\u00f3n, prueba y depuraci\u00f3n del c\u00f3digo."},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#variables-de-servidor","title":"Variables de servidor","text":"<p>PHP almacena la informaci\u00f3n del servidor y de las peticiones HTTP en seis arrays globales:</p> <ul> <li><code>$_ENV</code>: informaci\u00f3n sobre las variables de entorno</li> <li><code>$_GET</code>: par\u00e1metros enviados en la petici\u00f3n GET</li> <li><code>$_POST</code>: par\u00e1metros enviados en el envio POST</li> <li><code>$_COOKIE</code>: contiene las cookies de la petici\u00f3n, las claves del array son los nombres de las cookies</li> <li><code>$_SERVER</code>: informaci\u00f3n sobre el servidor</li> <li><code>$_FILES</code>: informaci\u00f3n sobre los ficheros cargados via upload</li> </ul> <p>Si nos centramos en el array <code>$_SERVER</code> podemos consultar las siguientes propiedades:</p> <ul> <li><code>PHP_SELF</code>: nombre del script ejecutado, relativo al document root (p.ej: <code>/tienda/carrito.php</code>)</li> <li><code>SERVER_SOFTWARE</code>: (p.ej: Apache)</li> <li><code>SERVER_NAME</code>: dominio, alias DNS (p.ej: <code>www.elche.es</code>)</li> <li><code>REQUEST_METHOD</code>: GET</li> <li><code>REQUEST_URI</code>: URI, sin el dominio</li> <li><code>QUERY_STRING</code>: todo lo que va despu\u00e9s de <code>?</code> en la URL (p.ej: <code>heroe=Batman&amp;nombre=Bruce</code>)</li> </ul> <p>M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/reserved.variables.server.php</p> <pre><code>&lt;?php\necho $_SERVER[\"PHP_SELF\"].\"&lt;br&gt;\"; // /u4/401server.php\necho $_SERVER[\"SERVER_SOFTWARE\"].\"&lt;br&gt;\"; // Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.4.9\necho $_SERVER[\"SERVER_NAME\"].\"&lt;br&gt;\"; // localhost\n\necho $_SERVER[\"REQUEST_METHOD\"].\"&lt;br&gt;\"; // GET\necho $_SERVER[\"REQUEST_URI\"].\"&lt;br&gt;\"; // /u4/401server.php?heroe=Batman\necho $_SERVER[\"QUERY_STRING\"].\"&lt;br&gt;\"; // heroe=Batman\n</code></pre> <p>Otras propiedades relacionadas:</p> <ul> <li><code>PATH_INFO</code>: ruta extra tras la petici\u00f3n. Si la URL es <code>http://www.php.com/php/pathInfo.php/algo/cosa?foo=bar</code>, entonces <code>$_SERVER['PATH_INFO']</code> ser\u00e1 <code>/algo/cosa</code>.</li> <li><code>REMOTE_HOST</code>: hostname que hizo la petici\u00f3n</li> <li><code>REMOTE_ADDR</code>: IP del cliente</li> <li><code>AUTH_TYPE</code>: tipo de autenticaci\u00f3n (p.ej: Basic)</li> <li><code>REMOTE_USER</code>: nombre del usuario autenticado</li> </ul> <p>Apache crea una clave para cada cabecera HTTP, en may\u00fasculas y sustituyendo los guiones por subrayados:</p> <ul> <li><code>HTTP_USER_AGENT</code>: agente (navegador)</li> <li><code>HTTP_REFERER</code>: p\u00e1gina desde la que se hizo la petici\u00f3n</li> </ul> <pre><code>&lt;?php\necho $_SERVER[\"HTTP_USER_AGENT\"].\"&lt;br&gt;\"; // Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#formularios","title":"Formularios","text":"<p>A la hora de enviar un formulario, debemos tener claro cuando usar GET o POST</p> <ul> <li> <p>GET: los par\u00e1metros se pasan en la URL</p> <ul> <li>&lt;2048 caracteres, s\u00f3lo ASCII</li> <li>Permite almacenar la direcci\u00f3n completa (marcador  / historial)</li> <li>Idempotente: dos llamadas con los mismos datos siempre debe dar el mismo resultado</li> <li>El navegador puede cachear las llamadas</li> </ul> </li> <li> <p>POST: par\u00e1metros ocultos (no encriptados)</p> <ul> <li>Sin l\u00edmite de datos, permite datos binarios.</li> <li>No se pueden cachear</li> <li>No idempotente \u2192 actualizar la BBDD</li> </ul> </li> </ul> <p>As\u00ed pues, para recoger los datos accederemos al array dependiendo del m\u00e9todo del formulario que nos ha invocado:</p> <pre><code>&lt;?php\n$par = $_GET[\"parametro\"]\n$par = $_POST[\"parametro\"]\n</code></pre> <p>Para los siguientes apartados nos vamos a basar en el siguiente ejemplo:</p> <pre><code>&lt;form action=\"formulario.php\" method=\"GET\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"\" /&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\" /&gt;\n        &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\" /&gt;\n        &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\" /&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#validacion","title":"Validaci\u00f3n","text":"<p>Respecto a la validaci\u00f3n, es conveniente siempre hacer validaci\u00f3n doble:</p> <ul> <li>En el cliente mediante JS</li> <li>En servidor, antes de llamar a negocio, es conveniente volver a validar los datos.</li> </ul> <pre><code>&lt;?php\nif (isset($_GET[\"parametro\"])) {\n    $par = $_GET[\"parametro\"];\n    // comprobar si $par tiene el formato adecuado, su valor, etc...\n}\n</code></pre> <p>Librer\u00edas de validaci\u00f3n</p> <p>Existen diversas librer\u00edas que facilitan la validaci\u00f3n de los formularios, como son respect/validation o particle/validator. Cuando estudiemos Laravel profundizaremos en la validaci\u00f3n de forma declarativa.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#parametro-multivalor","title":"Par\u00e1metro multivalor","text":"<p>Existen elementos HTML que env\u00edan varios valores:</p> <ul> <li><code>select multiple</code></li> <li><code>checkbox</code></li> </ul> <p>Para recoger los datos, el nombre del elemento debe ser un array.</p> <pre><code>&lt;select name=\"lenguajes[]\" multiple=\"true\"&gt;\n    &lt;option value=\"c\"&gt;C&lt;/option&gt;\n    &lt;option value=\"java\"&gt;Java&lt;/option&gt;\n    &lt;option value=\"php\"&gt;PHP&lt;/option&gt;\n    &lt;option value=\"python\"&gt;Python&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"c\" /&gt; C&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"java\" /&gt; Java&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"php\" /&gt; Php&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"python\" /&gt; Python&lt;br /&gt;\n</code></pre> <p>De manera que luego al recoger los datos:</p> <pre><code>&lt;?php\n$lenguajes = $_GET[\"lenguajes\"];\n\nforeach ($lenguajes as $lenguaje) {\n    echo \"$lenguaje &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#volviendo-a-rellenar-un-formulario","title":"Volviendo a rellenar un formulario","text":"<p>Un sticky form es un formulario que recuerda sus valores. Para ello, hemos de rellenar los atributos <code>value</code> de los elementos HTML con la informaci\u00f3n que conten\u00edan:</p> <pre><code>&lt;?php\nif (!empty($_POST['modulos']) &amp;&amp; !empty($_POST['nombre'])) {\n  // Aqu\u00ed se incluye el c\u00f3digo a ejecutar cuando los datos son correctos\n} else {\n  // Generamos el formulario\n  $nombre = $_POST['nombre'] ?? \"\";\n  $modulos = $_POST['modulos'] ?? [];\n  ?&gt;\n  &lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n   &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"&lt;?= $nombre ?&gt;\" /&gt; \n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\"\n    &lt;?php if(in_array(\"DWES\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\"\n    &lt;?php if(in_array(\"DWEC\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\"/&gt;\n  &lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#subiendo-archivos","title":"Subiendo archivos","text":"<p>Se almacenan en el servidor en el array <code>$_FILES</code> con el nombre del campo del tipo <code>file</code> del formulario.</p> <pre><code>&lt;form enctype=\"multipart/form-data\" action=\"&lt;?php echo $_SERVER['PHP_SELF']; ?&gt;\"  method=\"POST\"&gt;\n    Archivo: &lt;input name=\"archivoEnviado\" type=\"file\" /&gt;\n    &lt;br /&gt;\n    &lt;input type=\"submit\" name=\"btnSubir\" value=\"Subir\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Configuraci\u00f3n en <code>php.ini</code></p> <ul> <li><code>file_uploads</code>: on / off</li> <li><code>upload_max_filesize</code>: 2M</li> <li><code>upload_tmp_dir</code>: directorio temporal. No es necesario configurarlo, coger\u00e1 el predeterminado del sistema</li> <li><code>post_max_size</code>: tama\u00f1o m\u00e1ximo de los datos POST. Debe ser mayor a upload_max_filesize.</li> <li><code>max_file_uploads</code>: n\u00famero m\u00e1ximo de archivos que se pueden cargar a la vez.</li> <li><code>max_input_time</code>: tiempo m\u00e1ximo empleado en la carga (GET/POST y upload \u2192 normalmente se configura en 60)</li> <li><code>memory_limit</code>: 128M</li> <li><code>max_execution_time</code>: tiempo de ejecuci\u00f3n de un script (no tiene en cuenta el upload)</li> </ul> <p>Para cargar los archivos, accedemos al array <code>$_FILES</code>:</p> <pre><code>&lt;?php\nif (isset($_POST['btnSubir']) &amp;&amp; $_POST['btnSubir'] == 'Subir') {\n    if (is_uploaded_file($_FILES['archivoEnviado']['tmp_name'])) {\n        // subido con \u00e9xito\n        $nombre = $_FILES['archivoEnviado']['name'];\n        move_uploaded_file($_FILES['archivoEnviado']['tmp_name'], \"./uploads/{$nombre}\");\n\n        echo \"&lt;p&gt;Archivo $nombre subido con \u00e9xito&lt;/p&gt;\";\n    }\n}\n</code></pre> <p>Cada archivo cargado en <code>$_FILES</code> tiene:</p> <ul> <li><code>name</code>: nombre</li> <li><code>tmp_name</code>: ruta temporal</li> <li><code>size</code>: tama\u00f1o en bytes</li> <li><code>type</code>: tipo MIME</li> <li><code>error</code>: si hay error, contiene un mensaje. Si ok \u2192 0.</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#cabeceras-de-respuesta","title":"Cabeceras de respuesta","text":"<p>Debe ser lo primero a devolver. Se devuelven mediante la funci\u00f3n <code>header(cadena)</code>. Mediante las cabeceras podemos configurar el tipo de contenido, tiempo de expiraci\u00f3n, redireccionar el navegador, especificar errores HTTP, etc.</p> <pre><code>&lt;?php header(\"Content-Type: text/plain\"); ?&gt;\n&lt;?php header(\"Location: http://www.ejemplo.com/inicio.html\");\nexit(); \n</code></pre> <p>Se puede comprobar en las herramientas del desarrollador de los navegadores web mediante Developer Tools \u2192 Network \u2192 Headers.</p> <p>Es muy com\u00fan configurar las cabeceras para evitar consultas a la cach\u00e9 o provocar su renovaci\u00f3n:</p> <pre><code>&lt;?php\nheader(\"Expires: Sun, 31 Jan 2021 23:59:59 GMT\");\n// tres horas\n$now = time();\n$horas3 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 60 * 60 * 3);\nheader(\"Expires: {$horas3}\");\n// un a\u00f1o\n$now = time();\n$anyo1 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 365 * 86440);\nheader(\"Expires: {$anyo1}\");\n// se marca como expirado (fecha en el pasado)\n$pasado = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\");\nheader(\"Expires: {$pasado}\");\n// evitamos cache de navegador y/o proxy\nheader(\"Expires: Mon, 26 Jul 1997 05:00:00 GMT\");\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\nheader(\"Cache-Control: no-store, no-cache, must-revalidate\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#gestion-del-estado","title":"Gesti\u00f3n del estado","text":"<p>HTTP es un protocolo stateless, sin estado. Por ello, se simula el estado mediante el uso de cookies, tokens o la sesi\u00f3n. El estado es necesario para procesos tales como el carrito de la compra, operaciones asociadas a un usuario, etc... El mecanismo de PHP para gestionar la sesi\u00f3n emplea cookies de forma interna. Las cookies se almacenan en el navegador, y la sesi\u00f3n en el servidor web.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#cookies","title":"Cookies","text":"<p>Las cookies se almacenan en el array global <code>$_COOKIE</code>. Lo que coloquemos dentro del array, se guardar\u00e1 en el cliente. Hay que tener presente que el cliente puede no querer almacenarlas.</p> <p>Existe una limitaci\u00f3 de 20 cookies por dominio y 300 en total en el navegador.</p> <p>En PHP, para crear una cookie se utiliza la funci\u00f3n <code>setcookie</code>:</p> <pre><code>&lt;?php\nsetcookie(nombre [, valor [, expira [, ruta [, dominio [, seguro [, httponly ]]]]]]);\nsetcookie(nombre [, valor = \"\" [, opciones = [] ]] )\n?&gt;\n</code></pre> <p>Destacar que el nombre no puede contener espacios ni el caracter <code>;</code>. Respecto al contenido de la cookie, no puede superar los 4 KB.</p> <p>Por ejemplo, mediante cookies podemos comprobar la cantidad de visitas diferentes que realiza un usuario:</p> <pre><code>&lt;?php\n$accesosPagina = 0;\nif (isset($_COOKIE['accesos'])) { \n    $accesosPagina = $_COOKIE['accesos']; // recuperamos una cookie\n    setcookie('accesos', ++$accesosPagina); // le asignamos un valor\n}\n?&gt;\n</code></pre> <p>Inspeccionando las cookies</p> <p>Si queremos ver que contienen las cookies que tenemos almacenadas en el navegador, se puede comprobar su valor en Dev Tools \u2192 Application \u2192 Storage</p> <p>El tiempo de vida de las cookies puede ser tan largo como el sitio web en el que residen. Ellas seguir\u00e1n ah\u00ed, incluso si el navegador est\u00e1 cerrado o abierto.</p> <p>Para borrar una cookie se puede poner que expiren en el pasado:</p> <pre><code>&lt;?php\nsetcookie(nombre, \"\", 1) // pasado\n</code></pre> <p>O que caduquen dentro de un periodo de tiempo deteminado:</p> <pre><code>&lt;?php\nsetcookie(nombre, valor, time() + 3600) // Caducan dentro de una hora\n</code></pre> Comunicaci\u00f3n con cookies <p>Se utilizan para:</p> <ul> <li>Recordar los inicios de sesi\u00f3n</li> <li>Almacenar valores temporales de usuario</li> <li>Si un usuario est\u00e1 navegando por una lista paginada de art\u00edculos, ordenados de cierta manera, podemos almacenar el ajuste de la clasificaci\u00f3n.</li> </ul> <p>La alternativa en el cliente para almacenar informaci\u00f3n en el navegador es el objeto LocalStorage.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#sesion","title":"Sesi\u00f3n","text":"<p>La sesi\u00f3n a\u00f1ade la gesti\u00f3n del estado a HTTP, almacenando en este caso la informaci\u00f3n en el servidor. Cada visitante tiene un ID de sesi\u00f3n \u00fanico, el cual por defecto se almacena en una cookie denominada <code>PHPSESSID</code>. Si el cliente no tiene las cookies activas, el ID se propaga en cada URL dentro del mismo dominio. Cada sesi\u00f3n tiene asociado un almac\u00e9n de datos mediante el array global <code>$_SESSION</code>, en el cual podemos almacenar y recuperar informaci\u00f3n.</p> <p>La sesi\u00f3n comienza al ejecutar un script PHP. Se genera un nuevo ID y se cargan los datos del almac\u00e9n:</p> Comunicaci\u00f3n con sesi\u00f3n <p>Las operaciones que podemos realizar con la sesi\u00f3n son:</p> <pre><code>&lt;?php\nsession_start(); // carga la sesi\u00f3n\nsession_id() // devuelve el id\n$_SESSION[clave] = valor; // inserci\u00f3n\nsession_destroy(); // destruye la sesi\u00f3n\nunset($_SESSION[clave]; // borrado\n</code></pre> <p>Vamos a ver mediante un ejemplo como podemos insertar en un p\u00e1gina datos en la sesi\u00f3n para posteriormente en otra p\u00e1gina acceder a esos datos. Por ejemplo, en <code>sesion1.php</code> tendr\u00edamos</p> <pre><code>&lt;?php\nsession_start(); // inicializamos\n$_SESSION[\"ies\"] = \"IES Severo Ochoa\"; // asignaci\u00f3n\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Estamos en el $instituto \";\n?&gt;\n&lt;br /&gt;\n&lt;a href=\"sesion2.php\"&gt;Y luego&lt;/a&gt;\n</code></pre> <p>Y posteriormente podemos acceder a la sesi\u00f3n en <code>sesion2.php</code>:</p> <pre><code>&lt;?php\nsession_start();\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Otra vez, en el $instituto \";\n?&gt;\n</code></pre> <p>Configurando la sesi\u00f3n en <code>php.ini</code></p> <p>Las siguiente propiedades de <code>php.ini</code> permiten configurar algunos aspectos de la sesi\u00f3n:</p> <ul> <li><code>session.save_handler</code>: controlador que gestiona c\u00f3mo se almacena (<code>files</code>)</li> <li><code>session.save_path</code>: ruta donde se almacenan los archivos con los datos (si tenemos un cluster, podr\u00edamos usar <code>/mnt/sessions</code> en todos los servidor de manera que apuntan a una carpeta compartida)</li> <li><code>session.name</code>: nombre de la sesi\u00f3n (<code>PHSESSID</code>)</li> <li><code>session.auto_start</code>: Se puede hacer que se autocargue con cada script. Por defecto est\u00e1 deshabilitado</li> <li><code>session.cookie_lifetime</code>: tiempo de vida por defecto</li> </ul> <p>M\u00e1s informaci\u00f3n en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#autentificacion-de-usuarios","title":"Autentificaci\u00f3n de usuarios","text":"<p>Una sesi\u00f3n establece una relaci\u00f3n an\u00f3nima con un usuario particular, de manera que podemos saber si es el mismo usuario entre dos peticiones distintas. Si preparamos un sistema de login, podremos saber quien utiliza nuestra aplicaci\u00f3n.</p> <p>Para ello, preparemos un sencillo sistema de autenticaci\u00f3n:</p> <ul> <li>Mostrar el formulario login/password</li> <li>Comprobar los datos enviados</li> <li>A\u00f1adir el login a la sesi\u00f3n</li> <li>Comprobar el login en la sesi\u00f3n para realizar tareas espec\u00edficas del usuario</li> <li>Eliminar el login de la sesi\u00f3n cuando el usuario la cierra.</li> </ul> <p>Vamos a ver en c\u00f3digo cada paso del proceso. Comenzamos con el archivo <code>index.php</code>:</p> <pre><code>&lt;form action='login.php' method='post'&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Login&lt;/legend&gt;\n    &lt;div&gt;&lt;span class='error'&gt;&lt;?php echo $error; ?&gt;&lt;/span&gt;&lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='usuario'&gt;Usuario:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='text' name='inputUsuario' id='usuario' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='password'&gt;Contrase\u00f1a:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='password' name='inputPassword' id='password' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;input type='submit' name='enviar' value='Enviar' /&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n  &lt;/form&gt;\n</code></pre> <p>Al hacer submit nos lleva a <code>login.php</code>, el cual hace de controlador:</p> <pre><code>&lt;?php\n// Comprobamos si ya se ha enviado el formulario\nif (isset($_POST['enviar'])) {\n    $usuario = $_POST['inputUsuario'];\n    $password = $_POST['inputPassword'];\n\n    // validamos que recibimos ambos par\u00e1metros\n    if (empty($usuario) || empty($password)) {\n        $error = \"Debes introducir un usuario y contrase\u00f1a\";\n        include \"index.php\";\n    } else {\n        if ($usuario == \"admin\" &amp;&amp; $password == \"admin\") {\n            // almacenamos el usuario en la sesi\u00f3n\n            session_start();\n            $_SESSION['usuario'] = $usuario;\n            // cargamos la p\u00e1gina principal\n            include \"main.php\";\n        } else {\n            // Si las credenciales no son v\u00e1lidas, se vuelven a pedir\n            $error = \"Usuario o contrase\u00f1a no v\u00e1lidos!\";\n            include \"index.php\";\n        }\n    }\n}\n</code></pre> <p>Dependiendo del usuario que se haya logueado, vamos a ir a una vista o a otra. Por ejemplo, en <code>main.php</code> tendr\u00edamos:</p> <pre><code>&lt;?php\n    // Recuperamos la informaci\u00f3n de la sesi\u00f3n\n    if(!isset($_SESSION)) {\n        session_start();\n    }\n\n    // Y comprobamos que el usuario se haya autentificado\n    if (!isset($_SESSION['usuario'])) {\n       die(\"Error - debe &lt;a href='index.php'&gt;identificarse&lt;/a&gt;.&lt;br /&gt;\");\n    }\n?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Listado de productos&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Bienvenido &lt;?= $_SESSION['usuario'] ?&gt;&lt;/h1&gt;\n    &lt;p&gt;Pulse &lt;a href=\"logout.php\"&gt;aqu\u00ed&lt;/a&gt; para salir&lt;/p&gt;\n    &lt;p&gt;Volver al &lt;a href=\"main.php\"&gt;inicio&lt;/a&gt;&lt;/p&gt;\n    &lt;h2&gt;Listado de productos&lt;/h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Producto 1&lt;/li&gt;\n        &lt;li&gt;Producto 2&lt;/li&gt;\n        &lt;li&gt;Producto 3&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Finalmente, necesitamos la opci\u00f3n de cerrar la sesi\u00f3n que colocamos en <code>logout.php</code>:</p> <pre><code>&lt;?php\n// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n\n// Y la destruimos\nsession_destroy();\nheader(\"Location: index.php\");\n?&gt;\n</code></pre> <p>Autenticaci\u00f3n en producci\u00f3n</p> <p>En la actualidad la autenticaci\u00f3n de usuario no se realiza gestionando la sesi\u00f3n direcamente, sino que se realiza mediante alg\u00fan framekwork que abstrae todo el proceso o la integraci\u00f3n de mecanismos de autenticaci\u00f3n tipo OAuth, como  estudiaremos en la \u00faltima unidad mediante Laravel.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#referencias","title":"Referencias","text":"<ul> <li>Cookies en PHP</li> <li>Manejo de sesiones en PHP</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html","title":"Programaci\u00f3n Web","text":""},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#programacion-web","title":"Programaci\u00f3n Web","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 12 sesiones</p> Resultado de aprendizaje Criterios de evaluaci\u00f3n 4. Desarrolla aplicaciones Web embebidas en lenguajes de marcas analizando e incorporando funcionalidades seg\u00fan especificaciones. a) Se han identificado los mecanismos disponibles para el mantenimiento de la informaci\u00f3n que concierne a un cliente web concreto y se han se\u00f1alado sus ventajas. b) Se han utilizado sesiones para mantener el estado de las aplicaciones Web.  c) Se han utilizado cookies para almacenar informaci\u00f3n en el cliente Web y para recuperar su contenido.  d) Se han identificado y caracterizado los mecanismos disponibles para la autentificaci\u00f3n de usuarios.  e) Se han escrito aplicaciones que integren mecanismos de autentificaci\u00f3n de usuarios.  f) Se han realizado adaptaciones a aplicaciones Web existentes como gestores de contenidos u otras.  g) Se han utilizado herramientas y entornos para facilitar la programaci\u00f3n, prueba y depuraci\u00f3n del c\u00f3digo."},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#variables-de-servidor","title":"Variables de servidor","text":"<p>PHP almacena la informaci\u00f3n del servidor y de las peticiones HTTP en seis arrays globales:</p> <ul> <li><code>$_ENV</code>: informaci\u00f3n sobre las variables de entorno</li> <li><code>$_GET</code>: par\u00e1metros enviados en la petici\u00f3n GET</li> <li><code>$_POST</code>: par\u00e1metros enviados en el envio POST</li> <li><code>$_COOKIE</code>: contiene las cookies de la petici\u00f3n, las claves del array son los nombres de las cookies</li> <li><code>$_SERVER</code>: informaci\u00f3n sobre el servidor</li> <li><code>$_FILES</code>: informaci\u00f3n sobre los ficheros cargados via upload</li> </ul> <p>Si nos centramos en el array <code>$_SERVER</code> podemos consultar las siguientes propiedades:</p> <ul> <li><code>PHP_SELF</code>: nombre del script ejecutado, relativo al document root (p.ej: <code>/tienda/carrito.php</code>)</li> <li><code>SERVER_SOFTWARE</code>: (p.ej: Apache)</li> <li><code>SERVER_NAME</code>: dominio, alias DNS (p.ej: <code>www.elche.es</code>)</li> <li><code>REQUEST_METHOD</code>: GET</li> <li><code>REQUEST_URI</code>: URI, sin el dominio</li> <li><code>QUERY_STRING</code>: todo lo que va despu\u00e9s de <code>?</code> en la URL (p.ej: <code>heroe=Batman&amp;nombre=Bruce</code>)</li> </ul> <p>M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/reserved.variables.server.php</p> <pre><code>&lt;?php\necho $_SERVER[\"PHP_SELF\"].\"&lt;br&gt;\"; // /u4/401server.php\necho $_SERVER[\"SERVER_SOFTWARE\"].\"&lt;br&gt;\"; // Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.4.9\necho $_SERVER[\"SERVER_NAME\"].\"&lt;br&gt;\"; // localhost\n\necho $_SERVER[\"REQUEST_METHOD\"].\"&lt;br&gt;\"; // GET\necho $_SERVER[\"REQUEST_URI\"].\"&lt;br&gt;\"; // /u4/401server.php?heroe=Batman\necho $_SERVER[\"QUERY_STRING\"].\"&lt;br&gt;\"; // heroe=Batman\n</code></pre> <p>Otras propiedades relacionadas:</p> <ul> <li><code>PATH_INFO</code>: ruta extra tras la petici\u00f3n. Si la URL es <code>http://www.php.com/php/pathInfo.php/algo/cosa?foo=bar</code>, entonces <code>$_SERVER['PATH_INFO']</code> ser\u00e1 <code>/algo/cosa</code>.</li> <li><code>REMOTE_HOST</code>: hostname que hizo la petici\u00f3n</li> <li><code>REMOTE_ADDR</code>: IP del cliente</li> <li><code>AUTH_TYPE</code>: tipo de autenticaci\u00f3n (p.ej: Basic)</li> <li><code>REMOTE_USER</code>: nombre del usuario autenticado</li> </ul> <p>Apache crea una clave para cada cabecera HTTP, en may\u00fasculas y sustituyendo los guiones por subrayados:</p> <ul> <li><code>HTTP_USER_AGENT</code>: agente (navegador)</li> <li><code>HTTP_REFERER</code>: p\u00e1gina desde la que se hizo la petici\u00f3n</li> </ul> <pre><code>&lt;?php\necho $_SERVER[\"HTTP_USER_AGENT\"].\"&lt;br&gt;\"; // Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#formularios","title":"Formularios","text":"<p>A la hora de enviar un formulario, debemos tener claro cuando usar GET o POST</p> <ul> <li> <p>GET: los par\u00e1metros se pasan en la URL</p> <ul> <li>&lt;2048 caracteres, s\u00f3lo ASCII</li> <li>Permite almacenar la direcci\u00f3n completa (marcador  / historial)</li> <li>Idempotente: dos llamadas con los mismos datos siempre debe dar el mismo resultado</li> <li>El navegador puede cachear las llamadas</li> </ul> </li> <li> <p>POST: par\u00e1metros ocultos (no encriptados)</p> <ul> <li>Sin l\u00edmite de datos, permite datos binarios.</li> <li>No se pueden cachear</li> <li>No idempotente \u2192 actualizar la BBDD</li> </ul> </li> </ul> <p>As\u00ed pues, para recoger los datos accederemos al array dependiendo del m\u00e9todo del formulario que nos ha invocado:</p> <pre><code>&lt;?php\n$par = $_GET[\"parametro\"]\n$par = $_POST[\"parametro\"]\n</code></pre> <p>Para los siguientes apartados nos vamos a basar en el siguiente ejemplo:</p> <pre><code>&lt;form action=\"formulario.php\" method=\"GET\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"\" /&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\" /&gt;\n        &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\" /&gt;\n        &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\" /&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#validacion","title":"Validaci\u00f3n","text":"<p>Respecto a la validaci\u00f3n, es conveniente siempre hacer validaci\u00f3n doble:</p> <ul> <li>En el cliente mediante JS</li> <li>En servidor, antes de llamar a negocio, es conveniente volver a validar los datos.</li> </ul> <pre><code>&lt;?php\nif (isset($_GET[\"parametro\"])) {\n    $par = $_GET[\"parametro\"];\n    // comprobar si $par tiene el formato adecuado, su valor, etc...\n}\n</code></pre> <p>Librer\u00edas de validaci\u00f3n</p> <p>Existen diversas librer\u00edas que facilitan la validaci\u00f3n de los formularios, como son respect/validation o particle/validator. Cuando estudiemos Laravel profundizaremos en la validaci\u00f3n de forma declarativa.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#parametro-multivalor","title":"Par\u00e1metro multivalor","text":"<p>Existen elementos HTML que env\u00edan varios valores:</p> <ul> <li><code>select multiple</code></li> <li><code>checkbox</code></li> </ul> <p>Para recoger los datos, el nombre del elemento debe ser un array.</p> <pre><code>&lt;select name=\"lenguajes[]\" multiple=\"true\"&gt;\n    &lt;option value=\"c\"&gt;C&lt;/option&gt;\n    &lt;option value=\"java\"&gt;Java&lt;/option&gt;\n    &lt;option value=\"php\"&gt;PHP&lt;/option&gt;\n    &lt;option value=\"python\"&gt;Python&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"c\" /&gt; C&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"java\" /&gt; Java&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"php\" /&gt; Php&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"python\" /&gt; Python&lt;br /&gt;\n</code></pre> <p>De manera que luego al recoger los datos:</p> <pre><code>&lt;?php\n$lenguajes = $_GET[\"lenguajes\"];\n\nforeach ($lenguajes as $lenguaje) {\n    echo \"$lenguaje &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#volviendo-a-rellenar-un-formulario","title":"Volviendo a rellenar un formulario","text":"<p>Un sticky form es un formulario que recuerda sus valores. Para ello, hemos de rellenar los atributos <code>value</code> de los elementos HTML con la informaci\u00f3n que conten\u00edan:</p> <pre><code>&lt;?php\nif (!empty($_POST['modulos']) &amp;&amp; !empty($_POST['nombre'])) {\n  // Aqu\u00ed se incluye el c\u00f3digo a ejecutar cuando los datos son correctos\n} else {\n  // Generamos el formulario\n  $nombre = $_POST['nombre'] ?? \"\";\n  $modulos = $_POST['modulos'] ?? [];\n  ?&gt;\n  &lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n   &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"&lt;?= $nombre ?&gt;\" /&gt; \n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\"\n    &lt;?php if(in_array(\"DWES\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\"\n    &lt;?php if(in_array(\"DWEC\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\"/&gt;\n  &lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#subiendo-archivos","title":"Subiendo archivos","text":"<p>Se almacenan en el servidor en el array <code>$_FILES</code> con el nombre del campo del tipo <code>file</code> del formulario.</p> <pre><code>&lt;form enctype=\"multipart/form-data\" action=\"&lt;?php echo $_SERVER['PHP_SELF']; ?&gt;\"  method=\"POST\"&gt;\n    Archivo: &lt;input name=\"archivoEnviado\" type=\"file\" /&gt;\n    &lt;br /&gt;\n    &lt;input type=\"submit\" name=\"btnSubir\" value=\"Subir\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Configuraci\u00f3n en <code>php.ini</code></p> <ul> <li><code>file_uploads</code>: on / off</li> <li><code>upload_max_filesize</code>: 2M</li> <li><code>upload_tmp_dir</code>: directorio temporal. No es necesario configurarlo, coger\u00e1 el predeterminado del sistema</li> <li><code>post_max_size</code>: tama\u00f1o m\u00e1ximo de los datos POST. Debe ser mayor a upload_max_filesize.</li> <li><code>max_file_uploads</code>: n\u00famero m\u00e1ximo de archivos que se pueden cargar a la vez.</li> <li><code>max_input_time</code>: tiempo m\u00e1ximo empleado en la carga (GET/POST y upload \u2192 normalmente se configura en 60)</li> <li><code>memory_limit</code>: 128M</li> <li><code>max_execution_time</code>: tiempo de ejecuci\u00f3n de un script (no tiene en cuenta el upload)</li> </ul> <p>Para cargar los archivos, accedemos al array <code>$_FILES</code>:</p> <pre><code>&lt;?php\nif (isset($_POST['btnSubir']) &amp;&amp; $_POST['btnSubir'] == 'Subir') {\n    if (is_uploaded_file($_FILES['archivoEnviado']['tmp_name'])) {\n        // subido con \u00e9xito\n        $nombre = $_FILES['archivoEnviado']['name'];\n        move_uploaded_file($_FILES['archivoEnviado']['tmp_name'], \"./uploads/{$nombre}\");\n\n        echo \"&lt;p&gt;Archivo $nombre subido con \u00e9xito&lt;/p&gt;\";\n    }\n}\n</code></pre> <p>Cada archivo cargado en <code>$_FILES</code> tiene:</p> <ul> <li><code>name</code>: nombre</li> <li><code>tmp_name</code>: ruta temporal</li> <li><code>size</code>: tama\u00f1o en bytes</li> <li><code>type</code>: tipo MIME</li> <li><code>error</code>: si hay error, contiene un mensaje. Si ok \u2192 0.</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#cabeceras-de-respuesta","title":"Cabeceras de respuesta","text":"<p>Debe ser lo primero a devolver. Se devuelven mediante la funci\u00f3n <code>header(cadena)</code>. Mediante las cabeceras podemos configurar el tipo de contenido, tiempo de expiraci\u00f3n, redireccionar el navegador, especificar errores HTTP, etc.</p> <pre><code>&lt;?php header(\"Content-Type: text/plain\"); ?&gt;\n&lt;?php header(\"Location: http://www.ejemplo.com/inicio.html\");\nexit(); \n</code></pre> <p>Se puede comprobar en las herramientas del desarrollador de los navegadores web mediante Developer Tools \u2192 Network \u2192 Headers.</p> <p>Es muy com\u00fan configurar las cabeceras para evitar consultas a la cach\u00e9 o provocar su renovaci\u00f3n:</p> <pre><code>&lt;?php\nheader(\"Expires: Sun, 31 Jan 2021 23:59:59 GMT\");\n// tres horas\n$now = time();\n$horas3 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 60 * 60 * 3);\nheader(\"Expires: {$horas3}\");\n// un a\u00f1o\n$now = time();\n$anyo1 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 365 * 86440);\nheader(\"Expires: {$anyo1}\");\n// se marca como expirado (fecha en el pasado)\n$pasado = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\");\nheader(\"Expires: {$pasado}\");\n// evitamos cache de navegador y/o proxy\nheader(\"Expires: Mon, 26 Jul 1997 05:00:00 GMT\");\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\nheader(\"Cache-Control: no-store, no-cache, must-revalidate\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#gestion-del-estado","title":"Gesti\u00f3n del estado","text":"<p>HTTP es un protocolo stateless, sin estado. Por ello, se simula el estado mediante el uso de cookies, tokens o la sesi\u00f3n. El estado es necesario para procesos tales como el carrito de la compra, operaciones asociadas a un usuario, etc... El mecanismo de PHP para gestionar la sesi\u00f3n emplea cookies de forma interna. Las cookies se almacenan en el navegador, y la sesi\u00f3n en el servidor web.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#cookies","title":"Cookies","text":"<p>Las cookies se almacenan en el array global <code>$_COOKIE</code>. Lo que coloquemos dentro del array, se guardar\u00e1 en el cliente. Hay que tener presente que el cliente puede no querer almacenarlas.</p> <p>Existe una limitaci\u00f3 de 20 cookies por dominio y 300 en total en el navegador.</p> <p>En PHP, para crear una cookie se utiliza la funci\u00f3n <code>setcookie</code>:</p> <pre><code>&lt;?php\nsetcookie(nombre [, valor [, expira [, ruta [, dominio [, seguro [, httponly ]]]]]]);\nsetcookie(nombre [, valor = \"\" [, opciones = [] ]] )\n?&gt;\n</code></pre> <p>Destacar que el nombre no puede contener espacios ni el caracter <code>;</code>. Respecto al contenido de la cookie, no puede superar los 4 KB.</p> <p>Por ejemplo, mediante cookies podemos comprobar la cantidad de visitas diferentes que realiza un usuario:</p> <pre><code>&lt;?php\n$accesosPagina = 0;\nif (isset($_COOKIE['accesos'])) { \n    $accesosPagina = $_COOKIE['accesos']; // recuperamos una cookie\n    setcookie('accesos', ++$accesosPagina); // le asignamos un valor\n}\n?&gt;\n</code></pre> <p>Inspeccionando las cookies</p> <p>Si queremos ver que contienen las cookies que tenemos almacenadas en el navegador, se puede comprobar su valor en Dev Tools \u2192 Application \u2192 Storage</p> <p>El tiempo de vida de las cookies puede ser tan largo como el sitio web en el que residen. Ellas seguir\u00e1n ah\u00ed, incluso si el navegador est\u00e1 cerrado o abierto.</p> <p>Para borrar una cookie se puede poner que expiren en el pasado:</p> <pre><code>&lt;?php\nsetcookie(nombre, \"\", 1) // pasado\n</code></pre> <p>O que caduquen dentro de un periodo de tiempo deteminado:</p> <pre><code>&lt;?php\nsetcookie(nombre, valor, time() + 3600) // Caducan dentro de una hora\n</code></pre> Comunicaci\u00f3n con cookies <p>Se utilizan para:</p> <ul> <li>Recordar los inicios de sesi\u00f3n</li> <li>Almacenar valores temporales de usuario</li> <li>Si un usuario est\u00e1 navegando por una lista paginada de art\u00edculos, ordenados de cierta manera, podemos almacenar el ajuste de la clasificaci\u00f3n.</li> </ul> <p>La alternativa en el cliente para almacenar informaci\u00f3n en el navegador es el objeto LocalStorage.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#sesion","title":"Sesi\u00f3n","text":"<p>La sesi\u00f3n a\u00f1ade la gesti\u00f3n del estado a HTTP, almacenando en este caso la informaci\u00f3n en el servidor. Cada visitante tiene un ID de sesi\u00f3n \u00fanico, el cual por defecto se almacena en una cookie denominada <code>PHPSESSID</code>. Si el cliente no tiene las cookies activas, el ID se propaga en cada URL dentro del mismo dominio. Cada sesi\u00f3n tiene asociado un almac\u00e9n de datos mediante el array global <code>$_SESSION</code>, en el cual podemos almacenar y recuperar informaci\u00f3n.</p> <p>La sesi\u00f3n comienza al ejecutar un script PHP. Se genera un nuevo ID y se cargan los datos del almac\u00e9n:</p> Comunicaci\u00f3n con sesi\u00f3n <p>Las operaciones que podemos realizar con la sesi\u00f3n son:</p> <pre><code>&lt;?php\nsession_start(); // carga la sesi\u00f3n\nsession_id() // devuelve el id\n$_SESSION[clave] = valor; // inserci\u00f3n\nsession_destroy(); // destruye la sesi\u00f3n\nunset($_SESSION[clave]; // borrado\n</code></pre> <p>Vamos a ver mediante un ejemplo como podemos insertar en un p\u00e1gina datos en la sesi\u00f3n para posteriormente en otra p\u00e1gina acceder a esos datos. Por ejemplo, en <code>sesion1.php</code> tendr\u00edamos</p> <pre><code>&lt;?php\nsession_start(); // inicializamos\n$_SESSION[\"ies\"] = \"IES Severo Ochoa\"; // asignaci\u00f3n\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Estamos en el $instituto \";\n?&gt;\n&lt;br /&gt;\n&lt;a href=\"sesion2.php\"&gt;Y luego&lt;/a&gt;\n</code></pre> <p>Y posteriormente podemos acceder a la sesi\u00f3n en <code>sesion2.php</code>:</p> <pre><code>&lt;?php\nsession_start();\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Otra vez, en el $instituto \";\n?&gt;\n</code></pre> <p>Configurando la sesi\u00f3n en <code>php.ini</code></p> <p>Las siguiente propiedades de <code>php.ini</code> permiten configurar algunos aspectos de la sesi\u00f3n:</p> <pre><code>* `session.save_handler`: controlador que gestiona c\u00f3mo se almacena (`files`)\n* `session.save_path`: ruta donde se almacenan los archivos con los datos (si tenemos un cluster, podr\u00edamos usar `/mnt/sessions` en todos los servidor de manera que apuntan a una carpeta compartida)\n* `session.name`: nombre de la sesi\u00f3n (`PHSESSID`)\n* `session.auto_start`: Se puede hacer que se autocargue con cada script. Por defecto est\u00e1 deshabilitado\n* `session.cookie_lifetime`: tiempo de vida por defecto\n\nM\u00e1s informaci\u00f3n en la [documentaci\u00f3n oficial](https://www.php.net/manual/es/session.configuration.php).\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#autentificacion-de-usuarios","title":"Autentificaci\u00f3n de usuarios","text":"<p>Una sesi\u00f3n establece una relaci\u00f3n an\u00f3nima con un usuario particular, de manera que podemos saber si es el mismo usuario entre dos peticiones distintas. Si preparamos un sistema de login, podremos saber quien utiliza nuestra aplicaci\u00f3n.</p> <p>Para ello, preparemos un sencillo sistema de autenticaci\u00f3n:</p> <ul> <li>Mostrar el formulario login/password</li> <li>Comprobar los datos enviados</li> <li>A\u00f1adir el login a la sesi\u00f3n</li> <li>Comprobar el login en la sesi\u00f3n para realizar tareas espec\u00edficas del usuario</li> <li>Eliminar el login de la sesi\u00f3n cuando el usuario la cierra.</li> </ul> <p>Vamos a ver en c\u00f3digo cada paso del proceso. Comenzamos con el archivo <code>index.php</code>:</p> <pre><code>&lt;form action='login.php' method='post'&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Login&lt;/legend&gt;\n    &lt;div&gt;&lt;span class='error'&gt;&lt;?php echo $error; ?&gt;&lt;/span&gt;&lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='usuario'&gt;Usuario:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='text' name='inputUsuario' id='usuario' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='password'&gt;Contrase\u00f1a:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='password' name='inputPassword' id='password' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;input type='submit' name='enviar' value='Enviar' /&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n  &lt;/form&gt;\n</code></pre> <p>Al hacer submit nos lleva a <code>login.php</code>, el cual hace de controlador:</p> <pre><code>&lt;?php\n// Comprobamos si ya se ha enviado el formulario\nif (isset($_POST['enviar'])) {\n    $usuario = $_POST['inputUsuario'];\n    $password = $_POST['inputPassword'];\n\n    // validamos que recibimos ambos par\u00e1metros\n    if (empty($usuario) || empty($password)) {\n        $error = \"Debes introducir un usuario y contrase\u00f1a\";\n        include \"index.php\";\n    } else {\n        if ($usuario == \"admin\" &amp;&amp; $password == \"admin\") {\n            // almacenamos el usuario en la sesi\u00f3n\n            session_start();\n            $_SESSION['usuario'] = $usuario;\n            // cargamos la p\u00e1gina principal\n            include \"main.php\";\n        } else {\n            // Si las credenciales no son v\u00e1lidas, se vuelven a pedir\n            $error = \"Usuario o contrase\u00f1a no v\u00e1lidos!\";\n            include \"index.php\";\n        }\n    }\n}\n</code></pre> <p>Dependiendo del usuario que se haya logueado, vamos a ir a una vista o a otra. Por ejemplo, en <code>main.php</code> tendr\u00edamos:</p> <pre><code>&lt;?php\n    // Recuperamos la informaci\u00f3n de la sesi\u00f3n\n    if(!isset($_SESSION)) {\n        session_start();\n    }\n\n    // Y comprobamos que el usuario se haya autentificado\n    if (!isset($_SESSION['usuario'])) {\n       die(\"Error - debe &lt;a href='index.php'&gt;identificarse&lt;/a&gt;.&lt;br /&gt;\");\n    }\n?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Listado de productos&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Bienvenido &lt;?= $_SESSION['usuario'] ?&gt;&lt;/h1&gt;\n    &lt;p&gt;Pulse &lt;a href=\"logout.php\"&gt;aqu\u00ed&lt;/a&gt; para salir&lt;/p&gt;\n    &lt;p&gt;Volver al &lt;a href=\"main.php\"&gt;inicio&lt;/a&gt;&lt;/p&gt;\n    &lt;h2&gt;Listado de productos&lt;/h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Producto 1&lt;/li&gt;\n        &lt;li&gt;Producto 2&lt;/li&gt;\n        &lt;li&gt;Producto 3&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Finalmente, necesitamos la opci\u00f3n de cerrar la sesi\u00f3n que colocamos en <code>logout.php</code>:</p> <pre><code>&lt;?php\n// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n\n// Y la destruimos\nsession_destroy();\nheader(\"Location: index.php\");\n?&gt;\n</code></pre> <p>Autenticaci\u00f3n en producci\u00f3n</p> <p>En la actualidad la autenticaci\u00f3n de usuario no se realiza gestionando la sesi\u00f3n direcamente, sino que se realiza mediante alg\u00fan framekwork que abstrae todo el proceso o la integraci\u00f3n de mecanismos de autenticaci\u00f3n tipo OAuth, como  estudiaremos en la \u00faltima unidad mediante Laravel.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#referencias","title":"Referencias","text":"<ul> <li>Cookies en PHP</li> <li>Manejo de sesiones en PHP</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#actividades","title":"Actividades","text":"<ol> <li><code>401server.php</code>: igual que el ejemplo visto en los apuntes, muestra los valores de <code>$_SERVER</code> al ejecutar un script en tu ordenador.      Prueba a pasarle par\u00e1metros por GET (y a no pasarle ninguno).      Prepara un formulario (<code>401post.html</code>) que haga un env\u00edo por POST y compru\u00e9balo de nuevo.      Crea una p\u00e1gina (<code>401enlace.html</code>) que tenga un enlace a <code>401server.php</code> y comprueba el valor de <code>HTTP_REFERER</code>.</li> </ol>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#formularios_1","title":"Formularios","text":"<ol> <li> <p><code>402formulario.html</code> y <code>402formulario.php</code>: Crea un formulario que solicite:</p> <ul> <li>Nombre y apellidos.</li> <li>Email.</li> <li>URL p\u00e1gina personal.</li> <li>Sexo (radio).</li> <li>N\u00famero de convivientes en el domicilio.</li> <li>Aficiones (checkboxes) \u2013 poner m\u00ednimo 4 valores.</li> <li>Men\u00fa favorito (lista selecci\u00f3n m\u00faltiple) \u2013 poner m\u00ednimo 4 valores.</li> </ul> <p>Muestra los valores cargados en una tabla-resumen.</p> </li> <li> <p><code>403validacion.php</code>: A partir del formulario anterior, introduce validaciones en HTML mediante el atributo <code>required</code> de los campos (uso los tipos adecuados para cada campo), y en comprueba los tipos de los datos y que cumplen los valores esperados (por ejemplo, en los checkboxes que los valores recogidos forman parte de todos los posibles). Puedes probar a pasarle datos erroneos via URL y comprobar su comportamiento.      Tip: Investiga el uso de la funci\u00f3n <code>filter_var</code>.</p> </li> <li> <p><code>404subida.html</code> y <code>404subida.php</code>: Crea un formulario que permita subir un archivo al servidor.      Adem\u00e1s del fichero, debe pedir en el mismo formulario dos campos num\u00e9ricos que soliciten la anchura y la altura. Comprueba que tanto el fichero como los datos llegan correctamente.</p> </li> <li> <p><code>405subidaImagen.php</code>: Modifica el ejercicio anterior para que \u00fanicamente permita subir im\u00e1genes (comprueba la propiedad <code>type</code> del archivo subido). Si el usuario selecciona otro tipo de archivos, se le debe informar del error y permitir que suba un nuevo archivo.      En el caso de subir el tipo correcto, visualizar la imagen con el tama\u00f1o de anchura y altura recibido como par\u00e1metro.</p> </li> </ol>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#cookies-y-sesion","title":"Cookies y Sesi\u00f3n","text":"<ol> <li> <p><code>406contadorVisitas.php</code>: Mediante el uso de cookies, informa al usuario de si es su primera visita, o si no lo es, muestre su valor (valor de un contador).      Adem\u00e1s, debes permitir que el usuario reinicialice su contador de visitas.</p> </li> <li> <p><code>407fondo.php</code>: Mediante el uso de cookies, crea una p\u00e1gina con un desplegable con varios colores, de manera que el usuario pueda cambiar el color de fondo de la p\u00e1gina (atributo <code>bgcolor</code>).      Al cerrar la p\u00e1gina, \u00e9sta debe recordar, al menos durante 24h, el color elegido y la pr\u00f3xima vez que se cargue la pagina, lo haga con el \u00faltimo color seleccionado.</p> </li> <li> <p><code>408fondoSesion1.php</code>: Modifica el ejercicio anterior para almacenar el color de fondo en la sesi\u00f3n y no emplear cookies. Adem\u00e1s, debe contener un enlace al siguiente archivo.      <code>408fondoSesion2.php</code>: Debe mostrar el color y dar la posibilidad de:</p> <ul> <li>volver a la p\u00e1gina anterior mediante un enlace</li> <li>y mediante otro enlace, vaciar la sesi\u00f3n y volver a la p\u00e1gina anterior.</li> </ul> </li> <li> <p>Haciendo uso de la sesi\u00f3n, vamos a dividir el formulario del ejercicio <code>402formulario.php</code> en 2 subformularios:</p> <ul> <li><code>409formulario1.php</code> env\u00eda los datos (nombre y apellidos, email, url y sexo) a <code>409formulario2.php</code>.</li> <li><code>409formulario2.php</code> lee los datos y los mete en la sesi\u00f3n. A continuaci\u00f3n, muestra el resto de campos del formulario a rellenar (convivientes, aficiones y men\u00fa). Env\u00eda estos datos a <code>409formulario3.php</code>.</li> <li><code>409formulario3.php</code> recoge los datos enviados en el paso anterior y junto a los que ya estaban en la sesi\u00f3n, se muestran todos los datos en una tabla/lista desordenada.</li> </ul> </li> </ol>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#autenticacion","title":"Autenticaci\u00f3n","text":"<p>En los siguientes ejercicios vamos a montar una estructura de inicio de sesi\u00f3n similar a la vista en los apuntes.</p> <ol> <li><code>410index.php</code>: formulario de inicio de sesi\u00f3n</li> <li><code>411login.php</code>: hace de controlador, por lo que debe comprobar los datos recibidos (solo permite la entrada de <code>usuario/usuario</code> y si todo es correcto, ceder el control a la vista del siguiente ejercicio. No contiene c\u00f3digo HTML.</li> <li><code>412peliculas.php</code>: vista que muestra como t\u00edtulo \"Listado de Pel\u00edculas\", y una lista desordenada con tres pel\u00edculas.</li> <li><code>413logout.php</code>: vac\u00eda la sesi\u00f3n y nos lleva de nuevo al formulario de inicio de sesi\u00f3n. No contiene c\u00f3digo HTML</li> <li><code>414series.php</code>: A\u00f1ade un nueva vista similar a <code>412peliculas.php</code> que muestra un \"Listado de Series\" con una lista desordenada con tres series. Tanto <code>412pelicuas.php</code> como la vista recien creadas, deben tener un peque\u00f1o men\u00fa (sencillo, mediante enlaces) que permita pasar de un listado a otro.      Comprueba que si se accede directamente a cualquiera de las vistas sin tener un usuario logueado via URL del navegador, no se muestra el listado.</li> <li>Modifica tanto el controlador como las vistas para que:<ul> <li>los datos los obtenga el controlador (almacena en la sesi\u00f3n un array de pel\u00edculas y otro de series)</li> <li>coloque los datos en la sesi\u00f3n</li> <li>En las vistas, los datos se recuperan de la sesi\u00f3n y se pintan en la lista desordenada recorriendo el array correspondiente.</li> </ul> </li> </ol>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#proyecto-videoclub-30","title":"Proyecto Videoclub 3.0","text":"<ol> <li> <p>Para el Videoclub, vamos a crear una p\u00e1gina <code>index.php</code> con un formulario que contenga un formulario de login/password.      Se comprobar\u00e1n los datos en <code>login.php</code>. Los posibles usuarios son admin/admin o usuario/usuario</p> <ul> <li>Si el usuario es correcto, en <code>main.php</code> mostrar un mensaje de bienvenida con el nombre del usuario, junto a un enlace para cerrar la sesi\u00f3n, que lo llevar\u00eda de nuevo al login.</li> <li>Si el usuario es incorrecto, debe volver a cargar el formulario dando informaci\u00f3n al usuario de acceso incorrecto.</li> </ul> </li> <li> <p>Si el usuario es administrador, se cargar\u00e1n en la sesi\u00f3n los datos de soportes y clientes del videoclub que ten\u00edamos en nuestras pruebas (no mediante <code>include</code> sino copiando los datos e insert\u00e1ndolos en un array asociativo, el cual colocaremos posteriormente en la sesi\u00f3n).</p> <p>En la siguiente unidad los obtendremos de la base de datos. En <code>mainAdmin.php</code>, adem\u00e1s de la bienvenida, debe mostrar:     * Listado de clientes     * Listado de soportes</p> <p></p> Esquema navegaci\u00f3n ejercicio 423 <p></p> </li> <li> <p>Vamos a modificar la clase <code>Cliente</code> para almacenar el <code>user</code> y la <code>password</code> de cada cliente.      Tras codificar los cambios, modificar el listado de clientes de <code>mainAdmin.php</code> para a\u00f1adir al listado el usuario.</p> </li> <li> <p>Si el usuario que accede no es administrador y coincide con alguno de los clientes que tenemos cargados tras el login, debe cargar <code>mainCliente.php</code> donde se mostrar\u00e1 un listado de los alquileres del cliente. Para ello, modificaremos la clase <code>Cliente</code> para ofrecer el m\u00e9todo <code>getAlquileres() : array</code>, el cual llamaremos y luego recorreremos para mostrar el listado solicitado.</p> </li> </ol> <p>Ahora volvemos a la parte de administraci\u00f3n</p> <ol> <li> <p>Adem\u00e1s de mostrar el listado de clientes, vamos a ofrecer la opci\u00f3n de dar de alta a un nuevo cliente en <code>formCreateCliente.php</code>.      Los datos se enviar\u00e1n mediante POST a <code>createCliente.php</code> que los introducir\u00e1 en la sesi\u00f3n.      Una vez creado el cliente, debe volver a cargar <code>mainAdmin.php</code> donde se podr\u00e1 ver el cliente insertado.      Si hay alg\u00fan dato incorrecto, debe volver a cargar el formulario de alta.</p> </li> <li> <p>Crea en <code>formUpdateCliente.php</code> un formulario que permita editar los datos de un cliente.      Debes recoger los datos en <code>updateCliente.php</code>      Los datos de cliente se deben poder modificar desde la propia p\u00e1gina de un cliente, as\u00ed como desde el listado del administrador.</p> </li> <li> <p>Desde el listado de clientes del administrador debes ofrecer la posibilidad de borrar un cliente.      En el navegador, antes de redirigir al servidor, el usuario debe confirmar mediante JS que realmente desea eliminar al cliente.      Finalmente, en <code>removeCliente.php</code> elimina al cliente de la sesi\u00f3n.      Una vez eliminado, debe volver al listado de clientes.</p> </li> </ol> Esquema navegaci\u00f3n Videoclub 3.0"},{"location":"Moduls/DWES/UT05AccesADades.html","title":"UT05AccesADades","text":""},{"location":"Moduls/DWES/UT05AccesADades.html#acceso-a-datos","title":"Acceso a datos","text":"<p>En esta unidad vamos a aprender a acceder a datos que se encuentran en un servidor; recuperando, editando y creando dichos datos a trav\u00e9s de una base de datos.</p> <p>A trav\u00e9s de las distintas capas o niveles, de las cuales 2 de ellas ya conocemos (Apache, PHP) y MySQL la que vamos a estudiar en este tema.</p> Foto de Tima Miroshnichenko"},{"location":"Moduls/DWES/UT05AccesADades.html#estructura-de-una-base-de-datos","title":"Estructura de una base de datos","text":"<p>Sabemos que una base de datos tiene muchos campos con sus nombres y valores, pero adem\u00e1s sabemos que la base de datos debe tener un nombre. por tanto tendr\u00edamos la siguiente estructura para una base de datos:</p> <pre><code>NombreBaseDeDatos\n    |__Tabla-#1\n    |       |__DatosTabla-#1\n    |\n    |__Tabla-#2\n    |       |__DatosTabla-#2\n    |\n    |__Tabla-#3\n    |       |__DatosTabla-#3\n    [...]\n</code></pre> <p>Ve\u00e1moslo en un ejemplo real</p> <pre><code>Ryanair\n    |__pasajero\n    |    |__id[*]\n    |    |__nombre\n    |    |__apellidos\n    |    |__edad\n    |    |__id_vuelo[^]\n    |\n    |__vuelo\n    |    |__id[*]\n    |    |__n_plazas\n    |    |__disponible\n    |    |__id_pais[^]\n    |\n    |__pais\n         |__id[*]\n         |__nombre\n</code></pre>      [*] Clave primaria [^] Clave For\u00e1nea"},{"location":"Moduls/DWES/UT05AccesADades.html#chollosevero","title":"CholloSevero","text":"<p>Como muy bien hab\u00e9is elegido, a lo largo de esta unidad vamos a trabajar con una base de datos que iremos confeccionando conforme avancemos, donde almacenaremos la informaci\u00f3n relacionada con ofertas que publiquen los usuarios y los listaremos en funci\u00f3n de varios filtros; nuevos, m\u00e1s votados, m\u00e1s vistos, m\u00e1s comentados entre otros, al m\u00e1s puro estilo Chollometro.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#sql","title":"SQL","text":"<p>Este lenguaje de consulta estructurada (Structured Query Language) es el que vamos a utilizar para realizar las consultas a nuestras bases de datos para mostrar el contenido en las distintas interfaces web que creemos a lo largo de la unidad. Si quieres saber m\u00e1s detalles visita Wiki SQL</p> <p>Ejemplo de una sentencia SQL donde seleccionamos todas las filas y columnas de nuestra tabla llamada 'pais'</p> <pre><code>SELECT * FROM pais\n</code></pre> <p>Estas sentencias pueden invocarse desde la consola de comandos mediante el int\u00e9rprete mysql (previamente instalado en el sistema) o a trav\u00e9s de la herramienta phpMyAdmin.</p> <p>Las sentencias SQL tambi\u00e9n las podemos usar dentro de nuestro c\u00f3digo php, de tal manera que cuando se cargue nuestra interfaz web, lance una sentecia SQL para mostrar los datos que queramos.</p> <pre><code>&lt;?php\n    // Listado de clientes, ordenados por DNI de manera ASCendente\n    $clientesOrdenadosPorDNI = \"SELECT * FROM `pasajero` ORDER BY `dni`\" ASC;\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#mysqli","title":"MySQLi","text":"<p>PHP hace uso de esta extensi\u00f3n mejorada para poder comunicarse con las bases de datos, ya sean MySQL (4.1 o superior) o MariaDB.</p> <p>Cualquier consulta que queramos hacer a una base de datos necesitaremos hacer uso de la extensi\u00f3n mysqli()</p> <p>Veamos como conectarnos con una base de datos a trav\u00e9s del c\u00f3digo PHP</p> <pre><code>&lt;?php\n    // \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 pruebas.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    // \"SERVIDOR\", \"USUARIO\", \"CONTRASE\u00d1A\", \"BASE DE DATOS\"\n    $conexion = mysqli_connect(\"d939ebf6a741\",\"tuUsuario\",\"1234\",\"pruebas\");\n\n    // COMPROBAMOS LA CONEXI\u00d3N\n    if(mysqli_connect_errno()) {\n        echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n        exit();\n    }\n\n    echo \"&lt;h1&gt;Bienvenid@ a MySQL !!&lt;/h1&gt;\";\n?&gt;\n</code></pre> <ul> <li><code>servidor</code>: El servidor donde se encuentra la base de datos que queremos usar suele ser localhost, pero en nuestro caso, al utilizar Docker ser\u00e1 el nombre de la imagen mysql:8.0 que aparece al dejar el rat\u00f3n encima en el Visual Studio Code</li> </ul> <ul> <li><code>usuarioDB</code>: El usuario de la base de datos</li> <li><code>passwordDB</code>: La contrase\u00f1a para ese usuario de la base de datos</li> <li><code>baseDeDatos</code>: Nombre de la base de datos que queramos usar</li> </ul> <p>Si todo ha salido bien habr\u00e9is visto un mensaje diciendo Bienvenid@ a MySQL !!</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#recuperando-datos-de-una-bd","title":"Recuperando datos de una BD","text":"<p>Ahora que ya sabemos c\u00f3mo conectarnos a una base de datos alojada en nuestro servidor, lo que necesitamos saber es c\u00f3mo recuperar datos almacenados en la base de datos.</p> <p>Durante la instalaci\u00f3n de la imagen de Docker, se ha creado una tabla llamada Pruebas que contiene varios registros de distintas personas.</p> <p>Vamos a recuperar esos datos para ver de qu\u00e9 forma se hace con PHP.</p> <pre><code>&lt;?php\n    // \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 pruebas.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $conexion = mysqli_connect(\"d939ebf6a741\", \"lupa\", \"1234\", \"pruebas\");\n\n    // COMPROBAMOS LA CONEXI\u00d3N\n    if (mysqli_connect_errno()) {\n        echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n        exit();\n    }\n\n    // CONSULTA A LA BASE DE DATOS\n    $consulta = \"SELECT * FROM `Person`\";\n    $listaUsuarios = mysqli_query($conexion, $consulta);\n\n    // COMPROBAMOS SI EL SERVIDOR NOS HA DEVUELTO RESULTADOS\n    if($listaUsuarios) {\n\n        // RECORREMOS CADA RESULTADO QUE NOS DEVUELVE EL SERVIDOR\n        foreach ($listaUsuarios as $usuario) {\n            echo \"\n                $usuario[id]\n                $usuario[name]\n                &lt;br&gt;\n            \";\n        }\n    }\n?&gt;\n</code></pre> <p>Si todo ha salido bien, por pantalla ver\u00e1s el siguiente listado</p> <pre><code>\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 http://localhost/pruebas.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n1 William\n2 Marc\n3 John\n4 Antonio Moreno\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#php-data-objects-pdo","title":"PHP Data Objects :: PDO","text":"<p>De la misma manera que hemos visto con mysqli, PHP Data Objects (o PDO) es un driver de PHP que se utiliza para trabajar bajo una interfaz de objetos con la base de datos. A d\u00eda de hoy es lo que m\u00e1s se utiliza para manejar informaci\u00f3n desde una base de datos, ya sea relacional o no relacional.</p> <p>De igual manera que pasaba con los objetos en PHP nativos, en la interfaz de MySQL la cosa cambia la hora de conectarnos con una base de datos.</p> <pre><code>&lt;?php\n    $conexion = new PDO('mysql:host=localhost; dbname=dwes', 'dwes', 'abc123');\n</code></pre> <p>Adem\u00e1s, con PDO podemos usar las excepciones con try catch para gestionar los errores que se produzcan en nuestra aplicaci\u00f3n, para ello, como hac\u00edamos antes, debemos encapsular el c\u00f3digo entre bloques try / catch.</p> <p></p><pre><code>&lt;?php\n\n    $dsn = 'mysql:dbname=prueba;host=127.0.0.1';\n    $usuario = 'usuario';\n    $contrase\u00f1a = 'contrase\u00f1a';\n\n    try {\n        $mbd = new PDO($dsn, $usuario, $contrase\u00f1a);\n        $mbd-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n    } catch (PDOException $e) {\n        echo 'Fall\u00f3 la conexi\u00f3n: ' . $e-&gt;getMessage();\n    }\n</code></pre> En primer lugar, creamos la conexi\u00f3n con la base de datos a trav\u00e9s del constructor PDO pas\u00e1ndole la informaci\u00f3n de la base de datos.<p></p> <p>En segundo lugar, establecemos los par\u00e1metros para manejar las excepciones, en este caso hemos utilizado:</p> <ul> <li><code>PDO::ATTR_ERRMODE</code> indic\u00e1ndole a PHP que queremos un reporte de errores.</li> <li><code>PDO::ERRMODE_EXCEPTION</code> con este atributo obligamos a que lance excepciones, adem\u00e1s de ser la opci\u00f3n m\u00e1s humana y legible que hay a la hora de controlar errores.</li> </ul> <p>Cualquier error que se lance a trav\u00e9s de PDO, el sistema lanzar\u00e1 una PDOException.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#fichero-de-configuracion-de-la-bd","title":"Fichero de configuraci\u00f3n de la BD","text":"<p>De la misma manera que creamos nuestro archivo de funciones <code>funciones-php</code> y albergamos todas las funciones que se usan de manera global en la aplicaci\u00f3n, podemos establecer un archivo de constantes donde definamos los par\u00e1metros de conexi\u00f3n con la base de datos.</p> <pre><code>&lt;?php\n\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 conexion.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    constDSN = \"mysql:host=localhost;dbname=dwes\";\n    constUSUARIO = \"dwes\";\n    constPASSWORD = \"abc123\";\n\n    /*  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 NO SUBAS ESTE ARCHIVO A git \u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 */\n</code></pre> <p>Este archivo contiene informaci\u00f3n muy sensible as\u00ed que no es recomendable que subas este archivo a git.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#sentencias-preparadas","title":"Sentencias preparadas","text":"<p>Se trata de sentencias que se establecen como si fueran plantillas de la SQL que vamos a lanzar, aceptando par\u00e1metros que son establecidos a posteriori de la declaraci\u00f3n de la sentencia preparada.</p> <p>Las sentencias preparadas evitan la injecci\u00f3n de SQL (SQL Injection) y mejoran el rendimiento de nuestras aplicaci\u00f3nes o p\u00e1ginas web.</p> <pre><code>&lt;?php\n    $sql = \"INSERT INTO Clientes VALUES (?, ?, ?, ?)\";\n</code></pre> <p>Cada interrogante es un par\u00e1metro que estableceremos despu\u00e9s, unas cuantas l\u00edneas m\u00e1s abajo.</p> <p>Una vez tenemos la plantilla de nuestra consulta, debemos seguir con la preparaci\u00f3n junto con 3 m\u00e9todos m\u00e1s de PHP para su completa ejecuci\u00f3n:</p> <ul> <li><code>prepare:</code> prepara la sentenci\u00e1n antes de ser ejecutada</li> <li><code>bind</code>: el tipo de uni\u00f3n (bind) de dato que puede ser mediante ' ? ' o ' :parametro '</li> <li><code>execute</code> se ejecuta la consulta uniendo la plantilla con las bariables o par\u00e1metros que hemos establecido.</li> </ul>"},{"location":"Moduls/DWES/UT05AccesADades.html#ejemplo-parametros","title":"Ejemplo par\u00e1metros","text":"<pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Borrando con par\u00e1metros \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try { \n        $cantidad = $_GET[\"cantidad\"];\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = ?\";\n        $sentencia = $conexion -&gt; prepare($sql);\n\n        $isOk = $sentencia -&gt; execute([$cantidad]);\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#ejemplo-bindparam","title":"Ejemplo bindParam","text":"<p>Muy parecido a utilizar par\u00e1metros pero esta vez la variable est\u00e1 dentro de la sentencia SQL, en este caso la hemos llamado <code>:cant</code></p> <pre><code>&lt;?php\n    include \"config/database.inc.php\";\n\n    $conexion=null;\n\n    try {\n        $cantidad = $_GET[\"cantidad\"] ?? 0;\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; bindParam(\":cant\", $cantidad);\n\n        $isOk = $sentencia -&gt; execute();\n\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#bindparam-vs-bindvalue","title":"bindParam VS bindValue","text":"<p>Utilizaremos <code>bindValue()</code> cuando tengamos que insertar datos s\u00f3lo una vez, en cambio, deberemos usar <code>bindParam()</code> cuando tengamos que pasar datos m\u00faltiples, como por ejemplo, un array.</p> <pre><code>&lt;?php\n    // se asignan nombre a los par\u00e1metros\n    $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // bindParam enlaza por referencia\n    $cantidad = 0;\n\n    $sentencia -&gt; bindParam(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 1\n    $isOk = $sentencia -&gt; execute();\n\n    // bindValue enlaza por valor\n    $cantidad = 0;\n\n    $sentencia -&gt; bindValue(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 0\n    $isOk = $sentencia-&gt;execute();\n</code></pre> <p>Para m\u00e1s informaci\u00f3n y uso de las variables PDO consulta el manual de PHP.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#insertando-registros","title":"Insertando registros","text":"<p>A la hora de insertar registros en una base de datos, debemos tener en cuenta que en la tabla puede haber valores autoincrementados. Para salvaguardar \u00e9sto, lo que debemos hacer es dejar ese cambpo autoincrementado vac\u00edo, pero a la hora de hacer la conexi\u00f3n, debemos recuperarlo con el m\u00e9todo <code>lastInsertId()</code>.</p> <pre><code>&lt;?php\n    $nombre = $_GET[\"nombre\"] ?? \"SUCURSAL X\";\n    $telefono = $_GET[\"telefono\"] ?? \"636123456\";\n\n    $sql=\"INSERT INTO tienda(nombre, tlf) VALUES (:nombre, :telefono)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; bindParam(\":nombre\", $nombre);\n    $sentencia -&gt; bindParam(\":telefono\", $telefono);\n\n    $isOk = $sentencia -&gt; execute();\n    $idGenerado = $conexion -&gt; lastInsertId();\n\n    echo $idGenerado;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#consultando-registros","title":"Consultando registros","text":"<p>A la hora de recuperar los resultados de una consulta, bastar\u00e1 con invocar al m\u00e9todo <code>PDOStatement::fetch</code> para listar las filas generadas por la consulta.</p> <p>Pero debemos elegir el tipo de dato que queremos recibir entre los 3 que hay disponibles:</p> <ul> <li><code>PDO::FETCH_ASSOC:</code> array indexado cuyos keys son el nombre de las columnas.</li> <li><code>PDO::FETCH_NUM:</code> array indexado cuyos keys son n\u00fameros.</li> <li><code>PDO::FETCH_BOTH:</code> valor por defecto. Devuelve un array indexado cuyos keys son tanto el nombre de las columnas como n\u00fameros.</li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try{\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"select * from tienda\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n        $sentencia -&gt; execute();\n\n        while($fila = $sentencia -&gt; fetch()){\n            echo \"Codigo:\" . $fila[\"cod\"] . \"&lt;br /&gt;\";\n            echo \"Nombre:\" . $fila[\"nombre\"] . \"&lt;br /&gt;\";\n            echo \"Tel\u00e9fono:\" . $fila[\"tlf\"] . \"&lt;br /&gt;\";\n        }\n\n    }catch(PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre> <p>Recuperando datos con una matriz como resultado de nuestra consulta</p> <p></p><pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n\n    foreach($tiendasas$tienda) {\n        echo\"Codigo:\" . $tienda[\"cod\"] . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $tienda[\"nombre\"] . \"&lt;br /&gt;\";\n    }\n</code></pre> Pero si lo que queremos es leer datos con forma de objeto utilizando <code>PDO::FETCH_OBJ</code>, debemos crear un objeto con propiedades p\u00fablicas con el mismo nombre que las columnas de la tabla que vayamos a consultar.<p></p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con formato de objeto \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_OBJ);\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo\"Codigo:\" . $t -&gt; cod . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $t -&gt; nombre . \"&lt;br /&gt;\";\n        echo\"Tel\u00e9fono:\" . $t -&gt; tlf . \"&lt;br /&gt;\";\n    }\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#consultas-con-modelos","title":"Consultas con modelos","text":"<p>Llevamos tiempo creando clases en PHP y las consultas tambi\u00e9n admiten este tipo de datos mediante el uso de <code>PDO::FETCH_CLASS</code></p> <p>Si usamos este m\u00e9todo, debemos tener en cuenta que los nombres de los atributos privados deben coincidir con los nombres de las columnas de la tabla que vayamos a manejar.</p> <p>As\u00ed pues, si por lo que sea cambiamos la estructura de la tabla DEBEMOS CAMBIAR nuestra clase para que todo siga funcionando.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    classTienda {\n        private int $cod;\n        private string $nombre;\n        private ? string $tlf;\n\n        public function getCodigo() : int {\n            return $this -&gt; cod;\n        }\n\n        public function getNombre() : string {\n            return $this -&gt; nombre;\n        }\n\n        public function getTelefono() : ?string {\n            return $this -&gt; tlf;\n        }\n    }\n</code></pre> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consultando a trav\u00e9s de la clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // Aqu\u00ed 'Tienda' es el nombre de nuestra clase\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS, \"Tienda\");\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo \"Codigo: \" . $t -&gt; getCodigo() . \"&lt;br /&gt;\";\n        echo \"Nombre: \" . $t -&gt; getNombre() . \"&lt;br /&gt;\";\n        echo \"Tel\u00e9fono: \" . $t -&gt; getTelefono() . \"&lt;br /&gt;\";\n\n        var_dump($t);\n    }\n</code></pre> <p>Pero \u00bfqu\u00e9 pasa si nuestras clases tienen constructor? pues que debemos indicarle, al m\u00e9todo FECTH, que rellene las propiedades despu\u00e9s de llamar al constructor y para ello hacemos uso de <code>PDO::FETCH_PROPS_LATE</code>.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consulta para una clase con constructor \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#consultas-con-like","title":"Consultas con LIKE","text":"<p>Para utilizar el comod\u00edn LIKE u otros comodines, debemos asociarlo al dato y NUNCA en la propia consulta.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Utilizando comodines :: LIKE \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda where nombre like :nombre or tlf like :tlf\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n\n    $cadBuscar = \"%\" . $busqueda . \"%\";\n\n    $sentencia -&gt; execute([\"nombre\" =&gt; $cadBuscar,\"tlf\" =&gt; $cadBuscar]);\n\n    $result = $sentencia -&gt; fetchAll();\n</code></pre> <p>Ten\u00e9is una lista de ejemplos muy completa en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#login-password","title":"Login &amp; Password","text":"<p>Para manejar un sistema completo de login y password con contrase\u00f1as cifradas, necesitamos un m\u00e9todo que cifre esos strings que el usuario introduce como contrase\u00f1a; tanto en el formulario de registro como en el del login, ya que al codificar una contrase\u00f1a, despu\u00e9s tenemos que decodificarla para comprobar que ambas contras\u00f1eas (la que instroduce el usuario en el login y la que tenemos en la base de datos) coincidan.</p> <p>Necesitamos pues:</p> <ul> <li> <p><code>password_hash()</code> para almacenar la contrase\u00f1a en la base de datos a la hora de hacer el INSERT</p> <ul> <li> <p><code>PASSWORD_DEFAULT</code> almacenamos la contrase\u00f1a usando el m\u00e9todo de encriptaci\u00f3n bcrypt</p> </li> <li> <p><code>PASSWORD_BCRYPT</code> almacenamos la contrase\u00f1a usando el algoritmo CRYPT_BLOWFISH compatible con crypt()</p> </li> </ul> </li> <li> <p><code>password_verify()</code> para verificar el usuario y la contrase\u00f1a</p> </li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Almacenando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"usuario\"];\n    $pas = $_POST[\"password\"];\n\n    $sql = \"INSERT INTO usuarios(usuario, password) VALUES (:usuario, :password)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    $isOk = $sentencia -&gt; execute([\n        \"usuario\" =&gt; $usu,\n        \"password\" =&gt; password_hash($pas,PASSWORD_DEFAULT)\n    ]);\n</code></pre> <p>Ahora que tenemos el usuario codificado y guardado en la base de datos, vamos a recuperarlo para poder loguearlo correctamente.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Recuperando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"login\"] ?? \"\";\n\n    $sql = \"select * from usuarios where usuario = ?\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; execute([$usu]);\n\n    $usuario = $sentencia -&gt; fetch();\n\n    if($usuario &amp;&amp; password_verify($_POST['pass'], $usuario['password'])) {\n        echo\"OK!\";\n    } else {\n        echo\"KO\";\n    }\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#acceso-a-ficheros","title":"Acceso a ficheros","text":"<p>Gracias a la funcion fopen() desde PHP podemos abrir archivos que se encuentren en nuestros servidor o una URL.</p> <p>A esta funci\u00f3n hay que pasarle 2 par\u00e1metros; el nombre del archivo que queremos abrir y el modo en el que se abrir\u00e1</p> <pre><code>$fp = fopen(\"miarchivo.txt\", \"r\");\n</code></pre> <p>Muchas veces no podemos abrir el archivo porque \u00e9ste no se encuentra o no tenemos acceso a \u00e9l, por eso es recomendable comprobar que podemos hacerlo</p> <pre><code>if (!$fp = fopen(\"miarchivo.txt\", \"r\")){\n    echo \"No se ha podido abrir el archivo\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#modos-de-apertura-de-ficheros","title":"Modos de apertura de ficheros","text":"<ul> <li><code>r</code>:  Modo lectura. Puntero al principio del archivo.</li> <li><code>r+</code>: Apertura para lectura y escritura. Puntero al principio del archivo</li> <li><code>w</code>: Apertura para escritura. Puntero al principio del archivo y lo sobreescribe. Si no existe se intenta crear.</li> <li><code>w+</code>: Apertura para lectura y escritura. Puntero al principio del archivo y lo sobreescribe. Si no existe se intenta crear.</li> <li><code>a</code>: Apertura para escritura. Puntero al final del archivo. Si no existe se intenta crear.</li> <li><code>a+</code>: Apertura para lectura y escritura. Puntero al final del archivo. Si no existe se intenta crear.</li> <li><code>x</code>: Creaci\u00f3n y apertura para s\u00f3lo escritura. Puntero al principio del archivo. Si el archivo ya existe dar\u00e1 error E_WARNING. Si no existe se intenta crear.</li> <li><code>x+</code>: Creaci\u00f3n y apertura para lectura y escritura. Mismo comportamiento que x.</li> <li><code>c</code>: Apertura para escritura. Si no existe se crea. Si existe no se sobreescribe ni da ning\u00fan error. Puntero al principio del archivo.</li> <li><code>c+</code>: Apertura para lectura y escritura. Mismo comportamiento que C.</li> <li><code>b</code>: Cuando se trabaja con archivos binarios como jpg, pdf, png y dem\u00e1s. Se suele colocar al final del modo, es decir rb, r+b, x+b, wb...</li> </ul>"},{"location":"Moduls/DWES/UT05AccesADades.html#operaciones-con-archivos","title":"Operaciones con archivos","text":"<p>Para poder leer un archivo necesitamos usar la funci\u00f3n fread() de PHP</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Abriendo un archivo y leyendo su contenido \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$fp = fopen($file, \"r\");\n\n// filesize() nos devuelve el tama\u00f1o del archivo en cuesti\u00f3n\n$contents = fread($fp, filesize($file));\n\n// Cerramos la conexi\u00f3n con el archivo\nfclose();\n</code></pre> <p>Si lo que queremos es escribir en un archivo, deberemos hacer uso de la funci\u00f3n fwrite()</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Escribiendo en un archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Hola que tal\";\n\n$fp = fopen($file, \"w\");\n\nfwrite($fp, $texto);\nfclose($fp);\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#informacion-de-un-fichero","title":"Informaci\u00f3n de un fichero","text":"<p>Con PHP y su m\u00e9todo stat() podemos obtener informaci\u00f3n sobre los archivos que le indiquemos. Este m\u00e9todo devuelve hasta un total de 12 elementos con ifnormaci\u00f3n acerca de nuestro archivo.</p> <pre><code>0   dev         n\u00famero de dispositivo\n1   ino         n\u00famero de i-nodo\n2   mode        modo de protecci\u00f3n del i-nodo\n3   nlink       n\u00famero de enlaces\n4   uid         ID de usuario del propietario\n5   gid         ID de grupo del propietario\n6   rdev        tipo de dispositivo, si es un dispositivo i-nodo\n7   size        tama\u00f1o en bytes\n8   atime       momento del \u00faltimo acceso (tiempo Unix)\n9   mtime       momento de la \u00faltima modificaci\u00f3n (tiempo Unix)\n10  ctime       momento de la \u00faltima modificaci\u00f3n del i-nodo (tiempo Unix)\n11  blksize     tama\u00f1o del bloque E/S del sistema de ficheros\n12  blocks      n\u00famero de bloques de 512 bytes asignados\n</code></pre> <p>Unos ejemplos...</p> <pre><code>&lt;?php\n\n//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Informaci\u00f3n del archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Todos somos muy ignorantes, lo que ocurre es que no todos ignoramos las mismas cosas.\";\n\n$fp = fopen($file, \"w\");\nfwrite($fp, $texto);\n\n$datos = stat($file);\n\necho $datos[3] . \"&lt;br&gt;\"; // N\u00famero de enlaces, 1\necho $datos[7] . \"&lt;br&gt;\"; // Tama\u00f1o en bytes, 85\necho $datos[8] . \"&lt;br&gt;\"; // Momento de \u00faltimo acceso, 1444138104\necho $datos[9] . \"&lt;br&gt;\"; // Momento de \u00faltima modificaci\u00f3n, 1444138251\n\n?&gt;\n</code></pre> <p>Echa un vistazo a las funciones de directorios que tiene PHP, es muy interesante.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#archivos-pdf","title":"Archivos PDF","text":"<p>Con PHP podemos manejar todo tipo de archivos como ya hemos visto pero, \u00bfqu\u00e9 pasa si queremos generar ficheros PDF con datos sacados de una base de datos?</p> <p>Gracias a una clase escrita en PHP, podemos generar archivos PDF sin necesidad de instalar librer\u00edas adicionales en nuestro servidor.</p> <p>Para ello, como tenemos composer dentro de nuestra imagen de Docker, usaremos composer para instalar esta dependencia.</p> <p>Acu\u00e9rdate que debemes haber hecho <code>composer init</code> para empezar un proyecto con composer, de lo contrario no podr\u00e1s a\u00f1adir ning\u00fan paquete.</p> <p>Veamos un ejemplo de Hello World convertido a PDF</p> <p></p><pre><code>&lt;?php\n\nob_end_clean();\nrequire('fpdf/fpdf.php');\n\n// Instanciamos la clase\n// P = Portrait | mm = unidades en mil\u00edmetros | A4 = formato\n$pdf = new FPDF('P','mm','A4');\n\n// A\u00f1adimos una p\u00e1gina\n$pdf-&gt;AddPage();\n\n// Establecemos la fuente y el tama\u00f1o de letra\n$pdf-&gt;SetFont('Arial', 'B', 18);\n\n// Imprimimos una celda con el texto que nosotros queramos\n$pdf-&gt;Cell(60,20,'Hello World!');\n\n// Terminamos el PDF\n$pdf-&gt;Output();\n\n?&gt;\n</code></pre> Hay muchos ejemplos y tutoriales, as\u00ed como documentaci\u00f3n de la clase FPDF en la p\u00e1gina oficial.<p></p> <p>Visita la secci\u00f3n de tutoriales y el manual para sacar mayor partido a esta clase.</p> <pre><code>&lt;?php\n\nrequire('fpdf/fpdf.php');\n\nclass PDF extends FPDF {\n\n    // Cabecera\n    function Header() {\n\n        // A\u00f1adimos un logotipo\n        $this-&gt;Image('logo.png',10,8,33);\n\n        // establecemos la fuente y el tama\u00f1o\n        $this-&gt;SetFont('Arial','B',20);\n\n        // Movemos el contenido un poco a la derecha\n        $this-&gt;Cell(80);\n\n        // Pintamos la celda\n        $this-&gt;Cell(50,10,'Cabecera',1,0,'C');\n\n        // Pasamos a la siguiente l\u00ednea\n        $this-&gt;Ln(20);\n    }\n\n    // Pie de p\u00e1gina\n    function Footer() {\n\n        // Nos posicionamos a 1.5 cm  desde abajo del todo de la p\u00e1gina\n        $this-&gt;SetY(-15);\n\n        // Arial italic 8\n        $this-&gt;SetFont('Arial','I',8);\n\n        // N\u00famero de p\u00e1gina\n        $this-&gt;Cell(0,10,'P\u00e1gina ' . \n            $this-&gt;PageNo() . '/{nb}',0,0,'C');\n    }\n}\n\n// Instanciamos la clase\n$pdf = new PDF();\n\n// Definimos un alias para la numeraci\u00f3n de p\u00e1ginas\n$pdf-&gt;AliasNbPages();\n\n$pdf-&gt;AddPage();\n$pdf-&gt;SetFont('Times','',14);\n\nfor($i = 1; $i &lt;= 30; $i++)\n    $pdf-&gt;Cell(0, 10, 'N\u00famero de l\u00ednea ' \n            . $i, 0, 1);\n$pdf-&gt;Output();\n\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html","title":"Acc\u00e9s a bases de dades amb MySQL","text":""},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#acces-a-bases-de-dades-amb-mysql","title":"Acc\u00e9s a bases de dades amb MySQL","text":"<p>Introducci\u00f3</p> <p>1.Estats en l\u2019execuci\u00f3 de sent\u00e8ncies SQL</p> <ul> <li>1.1.Transaccions</li> </ul> <p>2.Par\u00e0metres de configuraci\u00f3 de la connexi\u00f3</p> <p>3.Realitzaci\u00f3 i comprovaci\u00f3 de la connexi\u00f3</p> <p>4.Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades</p> <p>5.Consulta de dades</p> <ul> <li> <p>5.1.Realitzaci\u00f3 de la consulta</p> </li> <li> <p>5.2.Acc\u00e9s i gesti\u00f3 de les dades retornades per una consulta</p> </li> <li> <p>5.3.Finalitzaci\u00f3 de la consulta</p> </li> </ul> <p>6.Desconnexi\u00f3 de la base de dades</p> <p>7.Gesti\u00f3 i control d\u2019errors i obtenci\u00f3 d\u2019informaci\u00f3</p> <p>8.Consideracions generals i bones pr\u00e0ctiques</p> <ul> <li> <p>8.1.Restricci\u00f3 d\u2019identitat (claus prim\u00e0ries)</p> </li> <li> <p>8.2.Restricci\u00f3 d\u2019integritat referencial (claus foranes)</p> </li> </ul> <p>9.Annex: codi emprat als exemples</p> <p>10.Manuals i fonts d\u2019informaci\u00f3 addicionals</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#introduccio","title":"Introducci\u00f3","text":"<p>L\u2019acc\u00e9s a una base de dades des d\u2019un llenguatge de programaci\u00f3 \u00e9s la base de gaireb\u00e9 tots els sistemes de gesti\u00f3 de l\u2019actualitat. En aquests casos, la gesti\u00f3 de la informaci\u00f3 es fa a trav\u00e9s d\u2019un programa que accedeix a la base de dades per a poder executar les funcionalitats requerides.</p> <p>En aquest m\u00f2dul veurem com accedir a una base de dades MySQL des d\u2019un programa PHP. En particular, farem la connexi\u00f3 via PDO MySQL.</p> <p>Per a realitzar la gesti\u00f3 de la base de dades emmagatzemada en un servidor MySQL a trav\u00e9s de codi escrit en PHP, es far\u00e0 servir l\u2019extensi\u00f3 mysqli de PHP. Aquesta extensi\u00f3 del llenguatge PHP consta d\u2019una s\u00e8rie de funcionalitats extres que milloren les extensions mysql que es feien servir en versions de MySQL anteriors a la 4.1.3. Aquesta extensi\u00f3 ja ve inclosa a les versions de PHP5 i posteriors. Entre les millores m\u00e9s importants destaquen la interf\u00edcie orientada a objectes o el suport per a transaccions.</p> <p>Connectors de programes amb bases de dades</p> <p>Existeixen diversos sistemes per a interconnectar el codi dels programes amb les bases de dades, coneguts com a connectors. Aquests s\u00f3n alguns:</p> <p>PDO (PHP Data Objects) per a connectar PHP amb diferents SGBDs</p> <p>ADO: (ActiveX Data Objects) de Microsoft</p> <p>JDBC (Java DataBase Connectivity) per interconnexi\u00f3 del llenguatge Java amb bases de dades.</p> <p>PDO MySQL</p> <p>El connector PDO MySQL s\u2019instal\u00b7la amb WAMP i \u00e9s totalment transparent a l\u2019usuari.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#1estats-en-lexecucio-de-sentencies-sql","title":"1.Estats en l\u2019execuci\u00f3 de sent\u00e8ncies SQL","text":"<p>A l\u2019hora d\u2019accedir i manipular les dades d\u2019una base de dades des de qualsevol programa, a part d\u2019executar la sent\u00e8ncia d\u2019acc\u00e9s o manipulaci\u00f3 de dades, caldr\u00e0 passar per una s\u00e8rie d\u2019estats, independentment del llenguatge de programaci\u00f3 i del SGBD que es faci servir. Aquests estats s\u00f3n necessaris per tal d\u2019accedir a la base de dades (el que s\u2019anomena connectar-se a la base de dades), analitzar com ha anat l\u2019operaci\u00f3 SQL i tancar la connexi\u00f3 amb la base de dades.</p> <p>Aquests estats es poden veure en el seg\u00fcent diagrama pel cas d\u2019exemple d\u2019una operaci\u00f3 de SELECT:</p> <p></p> <p>El primer que cal fer per a poder accedir a una base de dades emmagatzemada a un servidor de bases de dades, \u00e9s configurar els par\u00e0metres de connexi\u00f3, amb dades com el nom de la base de dades, la seva ubicaci\u00f3 i les credencials d\u2019acc\u00e9s de l\u2019usuari que vol connectar.</p> <p>Una vegada configurada la connexi\u00f3, cal executar una instrucci\u00f3, connectar, per a fer efectiva aquesta connexi\u00f3. Si els par\u00e0metres proporcionats s\u00f3n correctes i el servidor de bases de dades est\u00e0 disponible, s\u2019establir\u00e0 la connexi\u00f3 entre el programa i la base de dades. Cal tenir en compte que la connexi\u00f3 pot no establir-se per diferents motius. Per tant, ser\u00e0 important assegurar-se que tot ha anat b\u00e9 despr\u00e9s d\u2019executar la instrucci\u00f3 de connectar.</p> <p>La connexi\u00f3 a la base de dades estar\u00e0 oberta fins que el programa finalitzi la seva execuci\u00f3. Per tal d\u2019assegurar-se que els recursos utilitzats s\u00f3n alliberats, \u00e9s important tancar la connexi\u00f3 un cop ja no s\u2019hagin de fer m\u00e9s accessos a la base de dades. Per a fer-ho existeix una acci\u00f3 de desconnectar.</p> <p>Quan la connexi\u00f3 est\u00e0 establerta, es poden realitzar diferents accions sobre la base de dades. Tres d\u2019aquestes accions tenen un efecte immediat; s\u2019executa l\u2019acci\u00f3 sobre la base de dades i es genera un resultat. Aquestes accions s\u00f3n:</p> <ul> <li>Donar d\u2019alta noves dades: es poden inserir noves dades a les taules de la base de dades. Si la sent\u00e8ncia SQL d\u2019inserci\u00f3 s\u2019executa correctament (sense errors), la inserci\u00f3 es fa efectiva immediatament.</li> <li>Donar de baixa dades: es poden eliminar dades de la base de dades mitjan\u00e7ant una sent\u00e8ncia SQL. Aquesta acci\u00f3 comporta una eliminaci\u00f3 d\u2019informaci\u00f3, amb el que cal assegurar-se que s\u2019elimina la informaci\u00f3 que realment es vol eliminar. En els sistemes transaccionals, existeix el concepte de transacci\u00f3, on un conjunt d\u2019instruccions s\u2019executen com si fossin una sola instrucci\u00f3. Si es fan servir les transaccions, es pot desfer una eliminaci\u00f3 de dades (amb la instrucci\u00f3 rollback), per\u00f2 nom\u00e9s en el cas que la transacci\u00f3 no s\u2019hagi donat per finalitzada amb \u00e8xit. D\u2019altra banda, \u00e9s important realitzar c\u00f2pies de seguretat per a poder recuperar, en cas d\u2019eliminacions err\u00f2nies, les dades anteriors de la darrera c\u00f2pia de seguretat.</li> <li>Modificar les dades de la base de dades: una modificaci\u00f3 \u00e9s el fet de canviar una dada que ja est\u00e0 inserida a la base de dades per tal d\u2019actualitzar-la o corregir-la. La modificaci\u00f3 tamb\u00e9 elimina informaci\u00f3, ja que en modificar una dada, el valor anterior al que s\u2019ha modificat, es perd. S\u2019ha d\u2019assegurar que la dada que es vol modificar ser\u00e0 l\u2019\u00fanica que es modificar\u00e0, i que la instrucci\u00f3 no afectar\u00e0 altres dades. Com en el cas anterior, en fer servir transaccions, hi ha la possibilitat de revertir la instrucci\u00f3 de modificaci\u00f3 (sempre que es faci rollback abans d\u2019acabar la transacci\u00f3).</li> </ul> <p>La quarta de les accions que es pot fer una vegada establerta la connexi\u00f3 \u00e9s la consulta de dades. Aquesta acci\u00f3 \u00e9s una mica diferent, ja que els resultats d\u2019una consulta poden contenir molts elements que s\u2019han de tractar per blocs (es pot pensar en una llista de productes d\u2019una botiga que es presenten de 20 en 20, per exemple). Per aquest motiu, la consulta no \u00e9s una acci\u00f3 immediata com les anteriors, sin\u00f3 que la seva execuci\u00f3 genera una connexi\u00f3 amb la base de dades, que t\u00e9 un estat i que permet anar consultant les dades de mica en mica. M\u00e9s concretament, el que passa en fer una consulta \u00e9s el seg\u00fcent:</p> <ul> <li>Obrir la consulta: s\u2019executa una sent\u00e8ncia SQL de consulta sobre la base de dades. Si no hi ha cap error s\u2019obtenen les dades de la base de dades. Llavors, ja es poden obtenir les dades pel seu tractament.</li> <li>Acc\u00e9s a dades de la consulta: es consulten les dades resultants de la consulta. Mentre s\u2019est\u00e0 realitzant una consulta (fins que no es tanqui la consulta), l\u2019\u00fanica acci\u00f3 que pot fer el programa amb la connexi\u00f3 a la base de dades \u00e9s obtenir m\u00e9s dades de la consulta realitzada. No es pot ni inserir, ni modificar, ni eliminar dades.</li> <li>Tancar la consulta: una vegada el programa (o l\u2019usuari) han acabat el tractament de les dades o s\u2019han obtingut totes les dades, cal donar per finalitzada la consulta. Aix\u00f2 permetr\u00e0 tornar a l\u2019estat de \u201cconnexi\u00f3 establerta\u201d i poder executar noves operacions SQL sobre la base de dades. A aquesta acci\u00f3 tamb\u00e9 se l\u2019anomena Tancar la consulta.</li> </ul> <p>Exemple de modificaci\u00f3 de dades</p> <p>Es pot imaginar el cas de voler modificar el preu d\u2019un producte de 2 \u20ac a 1 \u20ac, fer-ho malament i acabant modificant TOTS els preus de la botiga a 1 \u20ac. Com es recuperen els anteriors preus de tots els productes afectats? Si s\u2019ha fet servir el sistema de transaccions, es pot fer un rollback. Si no, amb una c\u00f2pia de seguretat anterior.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#11transaccions","title":"1.1.Transaccions","text":"<p>El concepte de transacci\u00f3 es fa servir quan es vol executar un conjunt d\u2019instruccions SQL amb la caracter\u00edstica que s\u2019han d\u2019executar totes les instruccions del conjunt, i si no es pot, no se n\u2019ha d\u2019executar cap.</p> <p>Una transacci\u00f3 comen\u00e7a amb una instrucci\u00f3 (<code>Begin</code>, <code>Begin transaction</code> o <code>Start transaction</code>, depenent del sistema gestor de bases de dades que es faci servir), continua amb totes les instruccions que s\u2019han d\u2019executar, i pot acabar de dues maneres:</p> <ul> <li>Confirmada: si totes les instruccions de la transacci\u00f3 s\u2019han executat correctament i la transacci\u00f3 es d\u00f3na per bona, es confirma amb la instrucci\u00f3 <code>commit</code>.</li> <li>Avortada: si s\u2019ha produ\u00eft algun error en l\u2019execuci\u00f3 de les instruccions de la transacci\u00f3, cal deixar la base de dades en el mateix estat que hi era ABANS del comen\u00e7ament de la transacci\u00f3. Una transacci\u00f3 s\u2019avorta amb la instrucci\u00f3 <code>rollback.</code></li> </ul> <p>En els sistemes transaccionals hi ha un mode anomenat autocommit, que fa un <code>commit</code> (confirmaci\u00f3) autom\u00e0tic al final de cada instrucci\u00f3 SQL que s\u2019executa. Fer servir aquest mode autocommit pot esdevenir problem\u00e0tic en haver de desfer un conjunt d\u2019operacions.</p> <p>Exemple de transacci\u00f3</p> <p>Qualsevol transfer\u00e8ncia banc\u00e0ria \u00e9s una transacci\u00f3. Suposem que es vol realitzar una transfer\u00e8ncia banc\u00e0ria de 1.000 euros d\u2019un compte X a un compte Y. Fer una transfer\u00e8ncia implica, com a m\u00ednim, fer dues modificacions a la base de dades: 1) Restar 1.000 euros del saldo del compte X i 2) Afegir 1.000 euros del saldo del compte Y. Si ambdues operacions acaben correctament, la transfer\u00e8ncia \u00e9s acceptada i acaba correctament. Per\u00f2 suposem que l\u2019operaci\u00f3 d\u2019afegir 1000 euros al compte Y acaba amb error. Si no fem servir transaccions i no podem anul\u00b7lar la transacci\u00f3 sencera es perdran 1.000 euros, ja que s\u2019haur\u00e0 restat 1.000 euros del compte X (definitiu) per\u00f2 aquests no han anat a parar enlloc, ja que no s\u2019han afegit al compte Y. Si anul\u00b7lem la transacci\u00f3 mitjan\u00e7ant un rollback, es desfaran les operacions que componen la transacci\u00f3 i els saldos dels comptes X i Y quedaran com si mai s\u2019haguessin transferit al compte.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#2parametres-de-configuracio-de-la-connexio","title":"2.Par\u00e0metres de configuraci\u00f3 de la connexi\u00f3","text":"<p>Com s\u2019ha indicat pr\u00e8viament, el primer que cal fer \u00e9s connectar-se a la base de dades. Els par\u00e0metres de connexi\u00f3 necessaris per a fer-ho s\u00f3n, en la majoria dels casos:</p> <ul> <li>Servidor: \u00e9s el nom del servidor (o l\u2019adre\u00e7a IP) on est\u00e0 ubicat el SGBD que allotja la base de dades a la que es vol connectar. Si el servidor est\u00e0 a la mateixa m\u00e0quina, llavors ser\u00e0 localhost.</li> <li>Usuari: la connexi\u00f3 sempre s\u2019ha de fer mitjan\u00e7ant les credencials d\u2019un determinat usuari de la base de dades. Aix\u00f2 permetr\u00e0 controlar a quines dades t\u00e9 acc\u00e9s i amb quins permisos. S\u2019ha de proveir doncs el nom de l\u2019usuari amb que ens volem connectar a la base de dades.</li> <li>Paraula de pas: \u00e9s necess\u00e0ria per a autentificar a l\u2019usuari de la base de dades.</li> <li>Base de dades: nom de la base de dades ubicada al servidor, a la que es vol connectar per a fer la gesti\u00f3 de les dades.</li> </ul> <p>Despr\u00e9s d\u2019introduir tota aquesta informaci\u00f3, el programa estar\u00e0 preparat per a intentar establir la connexi\u00f3 amb la base de dades.</p> <p>PHP: exemple de par\u00e0metres de configuraci\u00f3. S\u00f3n les variables que despr\u00e9s es passaran a la instrucci\u00f3 de connexi\u00f3:</p> <p></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#3realitzacio-i-comprovacio-de-la-connexio","title":"3.Realitzaci\u00f3 i comprovaci\u00f3 de la connexi\u00f3","text":"<p>La connexi\u00f3 amb la base de dades es fa sempre a trav\u00e9s d\u2019una variable del programa, que \u00e9s l\u2019encarregada de realitzar la comunicaci\u00f3 bidireccional amb el connector de MySQL.</p> <p>La instrucci\u00f3 necess\u00e0ria per realitzar la connexi\u00f3 retorna aquesta variable, una vegada executada amb els par\u00e0metres de connexi\u00f3 especificats en l\u2019apartat anterior.</p> <p>PHP: retorna una variable amb la connexi\u00f3 establerta, que despr\u00e9s s\u2019haur\u00e0 de fer servir per a la resta de tasques amb la base de dades. Si la variable ($con en aquest cas) \u00e9s FALS despr\u00e9s d\u2019haver realitzat la instrucci\u00f3, \u00e9s que no s\u2019ha pogut establir la connexi\u00f3.</p> <p> Figura 1: Codi de connexi\u00f3 amb la base de dades</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#4insercio-modificacio-i-eliminacio-de-dades","title":"4.Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades","text":"<p>La instrucci\u00f3 per a realitzar aquestes tasques, sol ser la mateixa. El que canvia \u00e9s la comanda SQL que es passa a la instrucci\u00f3. Com que aquesta comanda SQL \u00e9s puntual (un <code>INSERT</code>, un <code>DELETE</code> o un <code>UPDATE</code>) es fan sense que calgui cap m\u00e9s intervenci\u00f3 per part de l\u2019usuari. Aix\u00f2 \u00e9s diferent en la comanda <code>SELECT</code>, on normalment es demanaran dades de diferents files, i caldr\u00e0 que l\u2019usuari vagi demanant les dades retornades per la comanda SQL a mesura que les vagi necessitant.</p> <p>PHP: retorna una variable amb el resultat d\u2019haver realitzat una comanda SQL. Si aquest resultat \u00e9s CERT, la comanda s\u2019ha realitzat correctament. Se li ha de passar com a par\u00e0metres la connexi\u00f3 establerta anteriorment i la instrucci\u00f3 a realitzar.</p> <p>Figura 2: codi d\u2019inserci\u00f3 d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>Figura 3: codi de modificaci\u00f3 d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>Figura 4: codi d\u2019eliminaci\u00f3 d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>Com es pot veure, l\u2019\u00fanica difer\u00e8ncia entre una inserci\u00f3, una modificaci\u00f3 i un esborrat \u00e9s el codi de la instrucci\u00f3 que s\u2019executa. Es munta primer la cadena de car\u00e0cters amb la instrucci\u00f3 de SQL que es vol executar, despr\u00e9s se li passa com a par\u00e0metre, junt amb la variable de la connexi\u00f3 pr\u00e8viament establerta, a la instrucci\u00f3 <code>mysql_query</code> i aquesta retorna un resultat. Si el resultat \u00e9s CERT, la instrucci\u00f3 s\u2019ha realitzat correctament.</p> <p>Aquestes tres instruccions modifiquen el contingut de la base de dades, ja sigui inserint, modificant o eliminant dades. Als exemples mostrats, si es produeix algun error en l\u2019execuci\u00f3 de la instrucci\u00f3 (que la instrucci\u00f3 SQL sigui sint\u00e0cticament incorrecta, per exemple) es genera un error i la instrucci\u00f3 no s\u2019executa. Per\u00f2 en el cas que tot estigui correcte, el contingut de la base de dades ser\u00e0 modificat, i no es podr\u00e0 desfer aquesta modificaci\u00f3, a menys que es faci servir el sistema de transaccions, d\u2019aquesta manera:</p> <p>Figura 5: codi d\u2019eliminaci\u00f3 d\u2019una dada amb transaccions. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>El resultat de l\u2019execuci\u00f3 d\u2019aquest codi \u00e9s el seg\u00fcent:</p> <p></p> <p>Com es pot veure, es fa la connexi\u00f3 a la base de dades, es fa l\u2019eliminaci\u00f3 de l\u2019estudiant amb DNI 52666666F (el resultat mostra que hi ha 0 estudiants amb aquest DNI), es fa rollback, i es torna a fer una consulta del mateix estudiant. El resultat \u00e9s 1, perqu\u00e8 el rollback desf\u00e0 els canvis realitzats dintre de la transacci\u00f3.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#5consulta-de-dades","title":"5.Consulta de dades","text":"<p>En aquest apartat aprendrem a fer una consulta a la base de dades.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#51realitzacio-de-la-consulta","title":"5.1.Realitzaci\u00f3 de la consulta","text":"<pre><code>La instrucci\u00f3 per a fer una consulta a la base de dades, o sigui, executar una comanda `SELECT` de SQL, pot variar respecte a la comanda per a fer `INSERT`, `UPDATE` o `DELETE` depenent del llenguatge. En el cas de PHP, la instrucci\u00f3 \u00e9s la mateixa en ambd\u00f3s casos.\n</code></pre> <p>Una vegada executada la comanda <code>SELECT</code>, la informaci\u00f3 demanada ja est\u00e0 disponible, per\u00f2 encara cal que el programa carregi la informaci\u00f3 obtinguda en variables, per a realitzar el tractament corresponent (que pot ser mostrar aquestes dades a l\u2019usuari, per exemple). Per aix\u00f2, una vegada realitzada la instrucci\u00f3 de consultar, encara queda la feina d\u2019obtenir les dades consultades i emmagatzemar-les dintre de variables del programa en PHP per tal de ser tractades.</p> <p>La unitat m\u00ednima de tractament de les dades d\u2019una consulta \u00e9s la fila o registre. Quan es realitza una consulta, aquesta pot retornar una gran quantitat de files, amb un cert nombre de camps o atributs per a cada fila. Per\u00f2 si hi accedim des d\u2019un programa les dades s\u2019hauran de tractar fila a fila.</p> <p>PHP: en aquest cas, la instrucci\u00f3 que ha realitzat la consulta (<code>mysqli_query</code>) retorna un enlla\u00e7 a les dades consultades. Si la consulta no s\u2019ha pogut realitzar (per un error a la comanda <code>SELECT</code>, per exemple) la variable <code>$res</code> ser\u00e0 NULL.</p> <p>Figura 6: codi de consulta d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1</p> <p></p> <p>En aquest cas, el comportament de la variable <code>$res</code> \u00e9s diferent del cas d\u2019inserci\u00f3, modificaci\u00f3 o esborrat, ja que si la consulta s\u2019ha pogut realitzar amb \u00e8xit, la variable <code>$res</code> cont\u00e9 un apuntador a la zona de mem\u00f2ria que s\u2019haur\u00e0 de consultar per a obtenir la informaci\u00f3.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#52acces-i-gestio-de-les-dades-retornades-per-una-consulta","title":"5.2.Acc\u00e9s i gesti\u00f3 de les dades retornades per una consulta","text":"<p>Una instrucci\u00f3 de consulta de dades pot retornar una gran quantitat d\u2019informaci\u00f3. Per a accedir a aquesta informaci\u00f3, cal fer-lo de forma ordenada.</p> <p>Per a poder realitzar aquestes funcionalitats, es fa servir el concepte de cursor de dades. Conceptualment podem definir un cursor de dades com una variable que apunta a la zona de mem\u00f2ria que cont\u00e9 el resultat d\u2019una consulta SQL (de tipus <code>SELECT</code>) i permet iterar per les diferents files els resultats d\u2019aquesta consulta, una per una. En cada iteraci\u00f3 s\u2019obt\u00e9 les dades de la fila i es passa a la seg\u00fcent fila. Aquesta acci\u00f3 \u00e9s el que s\u2019anomena fer un fetch del cursor.</p> <p></p> <p>Just despr\u00e9s d\u2019executar la instrucci\u00f3 de consulta, si no s\u2019ha produ\u00eft cap error, la variable que retorna la instrucci\u00f3 de consulta <code>($res</code> en aquest cas) juga el rol d\u2019un cursor i apunta a la primera fila de dades retornada.</p> <p>PHP: per a accedir a una fila de dades retornada per una instrucci\u00f3 <code>mysqli_query</code> (la primera o qualsevol altre fila), es fa servir la instrucci\u00f3 <code>mysqli_fetch_assoc</code>, que, a partir d\u2019un conjunt de dades retornat per la instrucci\u00f3 de consulta, retorna la fila actual de dades en forma d\u2019array associatiu. En aquest cas, es retorna un vector <code>($fila</code>) amb tantes posicions com columnes hi hagi al resultat de la consulta, i per a accedir a un d\u2019aquests resultats, nom\u00e9s cal referenciar la posici\u00f3 del vector amb el nom del camp.</p> <p></p> <p>Cada vegada que es fa un <code>mysqli_fetch_assoc</code>, a m\u00e9s de retornar una fila de dades, s\u2019avan\u00e7a una posici\u00f3 en els resultats del <code>SELECT</code> perqu\u00e8 a la seg\u00fcent crida a <code>mysqli_fetch_assoc</code>, es pugui retornar la fila adient.</p> <p>Si la crida a la instrucci\u00f3 <code>mysqli_fetch_assoc</code> retorna un valor NULL, vol dir que ja no hi ha m\u00e9s files de dades.</p> <p>Quan la consulta realitzada retorna m\u00e9s d\u2019una fila de dades, cal fer el tractament de la informaci\u00f3 fila a fila, seguint l\u2019estructura d\u2019un cursor de dades. Per a poder fer-ho cal programar un bucle per a anar accedint una per una a cada fila, fent a cada pas el tractament corresponent a aquella fila. Aquest bucle s\u2019ha d\u2019anar repetint mentre hi hagi files de dades a tractar. \u00c9s molt important recon\u00e8ixer aquest fet per a no programar bucles infinits, o amb errors.</p> <p>PHP: per a poder fer el tractament de totes les files de dades retornades per una consulta, s\u2019ha de programar un bucle que a cada iteraci\u00f3, comprovi si la fila obtinguda \u00e9s o no un valor NULL. En cas que NO sigui NULL, s\u2019accedeix als resultats, es fa el tractament corresponent (en aquest cas, el tractament consisteix a mostrar la informaci\u00f3 per pantalla) i s\u2019accedeix a la seg\u00fcent fila. Si la fila accedida resulta que \u00e9s NULL, ja pot acabar el bucle, ja que no hi ha m\u00e9s dades retornades a la consulta.</p> <p></p> <p>El seg\u00fcent diagrama mostra de forma gr\u00e0fica com actuen les tres instruccions necess\u00e0ries per a accedir, a partir d\u2019una sent\u00e8ncia <code>SELECT</code>, a un valor individual d\u2019una fila de dades.</p> <p>Primer s\u2019obt\u00e9 el resultat de la consulta <code>SELECT</code> amb <code>mysqli_query</code>, despr\u00e9s s\u2019obt\u00e9 la fila de dades actual amb <code>mysqli_fetch_assoc</code>, que tamb\u00e9 avan\u00e7a la fila actual, i finalment s\u2019obt\u00e9 la dada individual accedint a l\u2019array associatiu mitjan\u00e7ant el nom del camp: $nom = $fila[\u2018nom\u2019];</p> <p></p> <p>Array associatiu</p> <p>Un array associatiu \u00e9s un vector (Array) on l\u2019acc\u00e9s als seus elements NO es fa per posici\u00f3, com en els arrays comuns, sin\u00f3 que es fa mitjan\u00e7ant un \u00edndex de text:</p> <p>Array com\u00fa: vc[4] = 32;</p> <p>Array Associatiu: va[\u2018edat\u2019] = 32;</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#53finalitzacio-de-la-consulta","title":"5.3.Finalitzaci\u00f3 de la consulta","text":"<p>Quan s\u2019ha acabat de treballar amb les dades d\u2019una consulta, cal tancar-la per a alliberar els recursos que s\u2019han fet servir, com per exemple, la mem\u00f2ria RAM per a emmagatzemar les dades.</p> <p>PHP: quan finalitza un script, autom\u00e0ticament es tanquen les consultes obertes i s\u2019allibera mem\u00f2ria. De totes maneres, hi ha una instrucci\u00f3 per a tancar expl\u00edcitament les consultes obertes, a la que se li ha de passar el conjunt de resultats obtinguts de fer un <code>mysqli_query</code>:</p> <p></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#6desconnexio-de-la-base-de-dades","title":"6.Desconnexi\u00f3 de la base de dades","text":"<p>Una vegada acabada la feina de gesti\u00f3 de les dades, cal desconnectar el programa de la base de dades.</p> <p>PHP: Quan finalitza un script, autom\u00e0ticament es tanquen les connexions establertes amb la base de dades. No obstant aix\u00f2, hi ha una instrucci\u00f3 per a tancar expl\u00edcitament les connexions establertes:</p> <p></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#7gestio-i-control-derrors-i-obtencio-dinformacio","title":"7.Gesti\u00f3 i control d\u2019errors i obtenci\u00f3 d\u2019informaci\u00f3","text":"<p>PHP disposa de dues instruccions per a controlar els errors que es poden produir durant la transfer\u00e8ncia de dades des de i cap a la base de dades amb el sistema mysqli. Aquestes dues instruccions s\u00f3n les seg\u00fcents:</p> <p></p> <p>Retorna el codi d\u2019error si n\u2019hi ha algun. Retorna 0 si no s\u2019ha produ\u00eft cap error a l\u2019execuci\u00f3 de la darrera instrucci\u00f3 <code>mysqli_query</code>.</p> <p></p> <p>Retorna el text d\u2019error de la darrera instrucci\u00f3 SQL executada amb <code>mysqli_query</code>, si \u00e9s que s\u2019ha produ\u00eft un error. Per exemple:</p> <p></p> <p>A banda, hi ha tamb\u00e9 una instrucci\u00f3 molt \u00fatil a l\u2019hora de no tenir problemes amb els car\u00e0cters especials, com els accents, di\u00e8resis, etc. Aquesta instrucci\u00f3 \u00e9s:</p> <p></p> <p>Estableix el conjunt de car\u00e0cters especials per a fer servir a la connexi\u00f3. Per exemple:</p> <p></p> <p>Finalment, hi ha una instrucci\u00f3 que retorna el nombre de files o registres afectats per la darrera instrucci\u00f3 <code>mysql_query</code>. Aquestes files poden ser, per exemple, el nombre de files seleccionades per un <code>SELECT</code>, o eliminades per un <code>DELETE</code>:</p> <p></p> <p>Per exemple:</p> <p></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#8consideracions-generals-i-bones-practiques","title":"8.Consideracions generals i bones pr\u00e0ctiques","text":"<p>Quan s\u2019aborda el problema de programar una gesti\u00f3 de dades, cal tenir en compte algunes consideracions, que tenen a veure amb la consist\u00e8ncia de les dades. En aquest apartat indicarem com tenir en compte les restriccions d\u2019identitat i d\u2019integritat referencial. Si es tenen en consideraci\u00f3, s\u2019evitar\u00e0 cometre errors, que en alguns casos poden ser molt greus, deixant la base de dades en un estat inconsistent o eliminant dades rellevants per error.</p> <pre><code>Les restriccions d\u2019integritat s\u00f3n condicions que han de complir els valors de la base de dades per a garantir que les dades representades a la base de dades componen una inst\u00e0ncia v\u00e0lida del model representat.\n</code></pre> <p>Exemples de restriccions d\u2019integritat serien: l\u2019edat d\u2019una persona no pot ser negativa o una persona tan sols pot tenir una mare biol\u00f2gica.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#81restriccio-didentitat-claus-primaries","title":"8.1.Restricci\u00f3 d\u2019identitat (claus prim\u00e0ries)","text":"<pre><code>La restricci\u00f3 d\u2019identitat de clau prim\u00e0ria fa refer\u00e8ncia als valors que es poden assignar a un atribut declarat com a clau prim\u00e0ria. Aquests valors no poden ser valor NULL, i han de ser tots diferents, o sigui, no hi pot haver repetits.\n</code></pre> <p>Aquestes caracter\u00edstiques de les claus prim\u00e0ries comporten que cal tenir en compte una s\u00e8rie de consideracions a l\u2019hora de realitzar diferents operacions on estiguin implicades.</p> <p>1) Inserci\u00f3. La consideraci\u00f3 fonamental a l\u2019hora de fer una inserci\u00f3 de dades a una base de dades \u00e9s comprovar que les dades no existeixen a la base de dades. Aqu\u00ed, suposant que volem inserir dades que ja es troben a la base de dades, ens podem trobar amb dos casos, en funci\u00f3 de si proporcionem nosaltres les claus prim\u00e0ries o fem que la clau prim\u00e0ria sigui un camp autoincremental:</p> <ul> <li>Si proporcionem nosaltres la clau prim\u00e0ria: en cas que ja hi hagi una clau prim\u00e0ria amb el valor introdu\u00eft, l\u2019operaci\u00f3 d\u2019inserci\u00f3 acabar\u00e0 amb error i no es produir\u00e0.</li> <li>Clau prim\u00e0ria autoincremental: aquest cas \u00e9s m\u00e9s greu, perqu\u00e8 com el sistema gestor de bases de dades no sap que les dades que inserim ja existeixen a la base de dades, les torna a crear amb una nova clau. El resultat \u00e9s que introduirem una inconsist\u00e8ncia en les dades, ja que tindrem el mateix objecte representat dues vegades.</li> </ul> <p>Abans de fer una inserci\u00f3 podem comprovar que la dada no estigui ja a la base de dades. Aquesta comprovaci\u00f3 es pot fer executant una consulta pr\u00e8via, que retorni el nombre de files que hi ha amb la mateixa clau prim\u00e0ria (o consultant els camps que calgui) que la fila a inserir. Si aquesta consulta retorna 0 (zero), ja es pot inserir sense por de tenir un error de clau prim\u00e0ria.</p> <p>2) Eliminaci\u00f3. En el cas de l\u2019eliminaci\u00f3 d\u2019una o m\u00e9s dades, no es genera cap error que tingui a veure amb la restricci\u00f3 d\u2019integritat de clau prim\u00e0ria.</p> <p>3) Modificaci\u00f3. En realitzar una instrucci\u00f3 de modificaci\u00f3, si les dades a modificar no inclouen atributs que formin part de la clau prim\u00e0ria, no hi ha cap problema.</p> <p>En cas que es vulgui modificar el valor de la clau prim\u00e0ria total o parcialment (en casos on les claus prim\u00e0ries estiguin compostes per diversos atributs) cal tenir en compte que el nou valor a modificar, no coincideixi amb el valor de la clau prim\u00e0ria de cap altra fila de dades. Cal tenir en compte que una modificaci\u00f3 de la clau prim\u00e0ria es pot veure com una eliminaci\u00f3 de la dada antiga i una inserci\u00f3 de la dada nova, aix\u00ed que s\u2019aplica tot el que s\u2019aplicava a inserci\u00f3.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#82restriccio-dintegritat-referencial-claus-foranes","title":"8.2.Restricci\u00f3 d\u2019integritat referencial (claus foranes)","text":"<pre><code>La restricci\u00f3 d\u2019integritat referencial limita els valors que pot agafar un camp sobre el qual hi ha definida una clau forana. Aquests valors poden ser, o b\u00e9 valor NULL (quan no est\u00e0 relacionada amb cap altra fila o no sabem amb quina fila est\u00e0 relacionada), o b\u00e9 el valor de la clau prim\u00e0ria referenciada.\n</code></pre> <p>Per exemple, en el cas que tinguem dues taules a la base de dades, una d\u2019estudiants i l\u2019altra de cursos, podr\u00edem definir una clau forana a la taula estudiant que ens indiqu\u00e9s quin curs est\u00e0 realitzant l\u2019estudiant (aix\u00f2 implicaria que un estudiant no pot fer m\u00e9s d\u2019un curs a l\u2019hora, per\u00f2 a efectes d\u2019aquest exemple aix\u00f2 no importa).</p> <p>Hi ha molts conflictes que poden apareixen en fer modificacions a la base de dades amb les claus foranes. Aqu\u00ed en veurem els m\u00e9s importants. Alguns d\u2019aquests conflictes poden solucionar-se de diferents formes. Per exemple, suposem que tenim un estudiant, en Joan Pere Pau, que est\u00e0 matriculat del 3r Grau d\u2019inform\u00e0tica (per tant, t\u00e9 una clau forana a la fila de cursos que representa el 3r Grau d\u2019inform\u00e0tica). Suposem que arran d\u2019una modificaci\u00f3 a la taula de cursos es vol eliminar el 3r Grau d\u2019inform\u00e0tica. Fer aquesta eliminaci\u00f3 sense m\u00e9s provocaria que la base de dades caigu\u00e9s en un estat inconsistent, ja que es violaria la restricci\u00f3 d\u2019integritat referencial (els estudiants del 3r Grau d\u2019inform\u00e0tica tindrien un valor de clau forana inexistent a la taula de cursos). Per tal de solucionar aquesta inconsist\u00e8ncia, el sistema gestor de base de dades t\u00e9 diferents opcions:</p> <ul> <li>No deixar fer l\u2019eliminaci\u00f3. En aquest cas no es permetria eliminar el 3r Grau d\u2019Inform\u00e0tica de la taula de cursos.</li> <li>Deixar fer l\u2019eliminaci\u00f3 i posar els valors de clau forana que hi apunten a NULL. En aquest cas s\u2019eliminaria el 3r Grau d\u2019Inform\u00e0tica de la taula de cursos i es modificaria a NULL la clau forana dels estudiants que l\u2019estaven cursant. Per tant, es perdr\u00e0 informaci\u00f3 ja que tindrem estudiants per\u00f2 no tindrem const\u00e0ncia sobre el curs que estan o estaven fent.</li> <li>Fer l\u2019eliminaci\u00f3 en cascada. En aquest cas, s\u2019eliminaria el 3r Grau d\u2019Inform\u00e0tica de la taula de cursos. A m\u00e9s a m\u00e9s, s\u2019eliminarien de la taula d\u2019estudiants totes aquelles persones que estiguessin fent el curs de 3r Grau d\u2019Inform\u00e0tica. Aix\u00ed, com no hi ha ning\u00fa que apunti al curs eliminat, es garanteix que no es viola la restricci\u00f3 d\u2019integritat.</li> </ul> <p>Fer que el sistema gestor de base de dades utilitzi una o una altra estrat\u00e8gia \u00e9s una decisi\u00f3 de disseny que el dissenyador de la base de dades haur\u00e0 d\u2019avaluar. A continuaci\u00f3 mostrarem algunes de les violacions de les restriccions d\u2019integritat referencial pels casos d\u2019insercions, modificacions i esborrats a la base de dades i com poden tractar-se. Tamb\u00e9 mostrarem com definir a MySQL les tres estrat\u00e8gies abans esmentades.</p> <p>1) Inserci\u00f3. A l\u2019hora d\u2019inserir una dada, a banda de controlar la restricci\u00f3 d\u2019identitat, cal tenir en compte tamb\u00e9 si hi ha dades relacionades a la taula on es vol inserir la dada mitjan\u00e7ant claus foranes.</p> <p>Si a la inserci\u00f3 hi ha un camp de la taula que \u00e9s clau forana cap a la clau prim\u00e0ria d\u2019una altra taula, el que s\u2019ha de fer \u00e9s comprovar que aquest valor ja existeix a l\u2019altre taula. Altrament el sistema gestor de base de dades no permetr\u00e0 fer la inserci\u00f3. Per exemple, si a la base de dades hi ha aquestes dues taules:</p> <p></p> <p>Es podria inserir \u201cIrene Riaza Dot\u201d, perqu\u00e8 el curs que fa, 3GInf, est\u00e0 a la clau prim\u00e0ria de la taula de cursos. En canvi, no es podria inserir \u201cVictor Serra Piquer\u201d perqu\u00e8 vol fer un curs, 1GFis que no est\u00e0 a clau prim\u00e0ria de la taula de cursos. Abans de fer la inserci\u00f3, caldria comprovar aquesta situaci\u00f3.</p> <p>2) Eliminaci\u00f3. En el cas de l\u2019eliminaci\u00f3 de dades, cal comprovar que no hi hagi cap clau forana apuntant a la fila o files que es volen eliminar. Que passa si es vol eliminar el curs 1GInf de la taula CURS? Que es fa amb els alumnes que fan aquest curs, Mariano Fad\u00f3 Gim\u00e9nez i S\u00edlvia Mart\u00ednez Espa\u00f1ol?</p> <p>Hi ha tres possibles solucions:</p> <p>a) Restricci\u00f3: no es pot eliminar la informaci\u00f3 apuntada per una clau forana. Cal eliminar primer la informaci\u00f3 relacionada. Si es vol eliminar el curs \u201c1GInf\u201d, es generaria un error dient que hi ha alumnes al curs i no es podr\u00e0 eliminar.</p> <p></p> <p>MySQL: per a indicar que una clau forana ha d\u2019actuar de forma restrictiva quan es produeix una eliminaci\u00f3 de dades, no cal afegir res a la instrucci\u00f3, ja que \u00e9s el comportament per defecte de les claus foranes a MySQL. De totes maneres, la instrucci\u00f3 seria:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete restrict;</code></p> <p>b) Posar a NULL: abans d\u2019eliminar el curs, es modifica el curs dels dos alumnes afectats i es posa a NULL. D\u2019aquesta manera, a la taula ESTUDIANT ja no hi \u00e9s el curs \u201c1Ginf\u201d a eliminar. Despr\u00e9s, s\u2019elimina aquest curs de la taula CURS. Les dues taules de l\u2019exemple quedarien aix\u00ed:</p> <p></p> <p>MySQL: per a indicar que una clau forana es comporti de forma \u201cposar a NULL\u201d quan es produeix una eliminaci\u00f3 de dades, es fa de la seg\u00fcent manera:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete set null;</code></p> <p>c) Cascada: l\u2019eliminaci\u00f3 en cascada s\u2019ha de definir per a cada relaci\u00f3 entre taules que volem que s\u2019apliqui. \u00c9s perillosa, ja que elimina m\u00e9s dades de les que en un principi es veurien afectades per la instrucci\u00f3 que s\u2019executa. Aquest sistema consisteix a eliminar primer de la taula relacionada (ESTUDIANT en aquest cas), tots els registres que poden donar un problema d\u2019integritat referencial (el segon i el quart, en aquest cas), i despr\u00e9s fer l\u2019eliminaci\u00f3 demanada a la primera taula (CURS en aquest cas). Les dues taules quedarien aix\u00ed:</p> <p></p> <p>MySQL: per a indicar que una clau forana elimini dades en cascada en fer una eliminaci\u00f3 de dades, es fa de la seg\u00fcent manera:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete cascade;</code></p> <p>3) Modificaci\u00f3: com ja s\u2019ha vist amb anterioritat, una modificaci\u00f3 es pot equiparar a una eliminaci\u00f3 de les dades velles, i una inserci\u00f3 de les dades noves. Llavors, cal tenir en compte aquests dos fets, pel que fa a evitat errors d\u2019integritat referencial.</p> <p>El valor que es vol modificar, si est\u00e0 referenciat per una clau forana, se li apliquen les mateixes regles que en el cas de l\u2019eliminaci\u00f3, o sigui: restricci\u00f3, posar a NULL o cascada. Aix\u00f2 \u00e9s aix\u00ed perqu\u00e8 a tots els efectes, el valor a modificar es perdr\u00e0, sobreescrit pel nou valor, i aix\u00f2 pot afectar els valors referenciats.</p> <p>A l\u2019exemple anterior, si a la taula CURS es vol canviar el nom del curs \u201c3GM\u201d per \u201c3GMul\u201d, afectar\u00e0 l\u2019estudiant Claudina Marinas Salvanya, que est\u00e0 fent un curs anomenat 3GM.</p> <p>De la mateixa manera, si es vol modificar el valor d\u2019un atribut que \u00e9s clau forana cap a una altra taula, es pot fer, sempre que es continu\u00efn complint les regles d\u2019integritat, referencial, o sigui, que el nou valor sigui NULL, o b\u00e9 un altre valor de la clau prim\u00e0ria referenciada. Per exemple, Jaume Serra Lessner vol canviar-se de curs. T\u00e9 clar que no vol fer \u201c1GM\u201d. Hi ha tres possibilitats:</p> <ul> <li>No t\u00e9 clar quin nou curs vol fer. S\u2019ho pensa. Per ara, el valor del curs que fa \u00e9s NULL, que \u00e9s un valor v\u00e0lid per a una clau forana.</li> <li>T\u00e9 clar qu\u00e8 vol fer \u201c1GInf\u201d. Es pot canviar el valor sense cap problema, perqu\u00e8 \u00e9s un dels valors de la clau prim\u00e0ria de CURS.</li> <li>T\u00e9 clar qu\u00e8 vol fer \u201cAstrof\u00edsica Aplicada\u201d. Doncs no ho pot fer, perqu\u00e8 no \u00e9s un dels valors de la clau prim\u00e0ria de CURS. Si es fes una modificaci\u00f3 amb aquest valor, es generaria un error d\u2019integritat referencial.</li> </ul> <p>MySQL. Per a indicar com es vol que reaccioni la taula en modificar un valor d\u2019una clau forana, la sintaxi \u00e9s molt similar al cas de l\u2019eliminaci\u00f3 de dades:</p> <ul> <li>Restrictiu: <code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on update restrict;</code></li> <li>Posar a NULL: <code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on update set null;</code></li> <li>Cascada: <code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on update cascade;</code></li> </ul> <p>A una mateixa clau forana es poden combinar les accions pel cas de l\u2019eliminaci\u00f3 i pel cas de la modificaci\u00f3. No cal fer dues instruccions, nom\u00e9s cal concatenar:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete set null on update cascade;</code></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#9annex-codi-emprat-als-exemples","title":"9.Annex: codi emprat als exemples","text":"<p>1) Codi de connexi\u00f3, inserci\u00f3, modificaci\u00f3, eliminaci\u00f3, consulta d\u2019una dada i consulta de diverses dades amb un cursor.</p> <pre><code>&lt;?php\n   //par\u00e0metres de connexi\u00f3\n   $servidor = \"localhost\";\n   $usuari = \"root\";\n   $contrasenya = \"\";\n   $bd = \"bdprova\";\n\n   //realitzaci\u00f3 de la connexi\u00f3\n   $con = mysqli_connect ($servidor, $usuari, $contrasenya, $bd);\n   if (!$con)\n   {\n      die(\"No s'ha pogut realitzar la connexi\u00f3. ERROR:\" .\n      mysqli_connect_error() . \"&lt;br&gt;\");\n   }\n\n   //inserci\u00f3 d'una dada\n   $instruccio = \"insert into estudiant \n                  values ('52666666F','Toni Blanco Serra',23,'2GM')\";\n   $res = mysqli_query($con, $instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut inserir la dada&lt;br&gt;\");\n   }\n   echo \"Dada inserida&lt;br&gt;\";\n\n   //modificaci\u00f3 d'una dada\n   $instruccio = \"update estudiant set edat = 25 \n   where DNI = '52666666F'\";\n   $res = mysqli_query($con, $instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut modificar la dada&lt;br&gt;\");\n   }\n   echo \"Dada modificada&lt;br&gt;\";\n\n   //eliminaci\u00f3 d'una dada\n   $instruccio = \"delete from estudiant where DNI = '52666666F'\";\n   $res = mysqli_query($con, $instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut eliminar la dada&lt;br&gt;\");\n   }\n   echo \"Dada eliminada&lt;br&gt;\";\n\n\n   //consulta d'una dada simple\n   $instruccio = \"select nom from estudiant where dni = '52222222B'\";\n   $res = mysqli_query($con,$instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut consultar la dada&lt;br&gt;\");\n   }\n   echo \"Dada consultada&lt;br&gt;\";\n   $fila = mysqli_fetch_assoc($res);\n   $camp = 'nom';\n   $dada = $fila['nom'];\n   echo $dada . \"&lt;br&gt;\";\n\n   //consulta de varies files de dades\n   $instruccio = \"select nom, edat from estudiant\";\n   $res = mysqli_query($con,$instruccio);\n   if ($res != null)\n   {\n      $fila = mysqli_fetch_assoc($res);\n      while ($fila != null)\n      {   \n         $nom = $fila['nom'];\n         $edat = $fila['edat'];\n         echo \"Nom: \" . $nom . \" | edat: \" . $edat . \"&lt;br&gt;\";\n         $fila = mysqli_fetch_assoc($res);\n      }\n   }\n   mysqli_free_result($res);\n   mysqli_close ($con);\n\n?&gt;\n</code></pre> <p>Codi d\u2019eliminaci\u00f3 d\u2019una dada dintre d\u2019una transacci\u00f3, i posterior rollback per a desfer la transacci\u00f3.</p> <pre><code>&lt;?php\n   //par\u00e0metres de connexi\u00f3\n   $servidor = \"localhost\";\n   $usuari = \"root\";\n   $contrasenya = \"\";\n   $bd = \"bdprova\";\n\n   //realitzaci\u00f3 de la connexi\u00f3\n   $con = mysqli_connect ($servidor, $usuari, $contrasenya, $bd);\n   if (!$con)\n   {\n      die(\"No s'ha pogut realitzar la connexi\u00f3. ERROR:\" .\n      mysqli_connect_error() . \"&lt;br&gt;\");\n   }\n   else\n   {\n      echo \"S'ha connectat a la base de dades&lt;br&gt;\";\n      //eliminaci\u00f3 d'una dada\n      mysqli_query($con, \"begin\");\n      $instruccio = \"delete from estudiant where \n                     DNI = '52666666F'\";\n      $res = mysqli_query($con, $instruccio);\n      if (mysqli_errno($con) != 0) //si error es finalitza\n      {\n         die(\"No s'ha pogut eliminar la dada\");\n      }\n      else\n      {\n         //Despr\u00e9s de l'eliminaci\u00f3, comprovem que no hi ha cap \n         //estudiant amb aquest DNI\n         $res = mysqli_query($con,\"select count(*) as quants \n            from estudiant where DNI = '52666666F'\");\n         $fila = mysqli_fetch_assoc($res);\n         $num = $fila['quants'];\n         echo \"Estudiants amb DNI = 52666666F: \" . $num . \"&lt;br&gt;\";\n      }\n      mysqli_query($con,\"rollback\");\n      //Despr\u00e9s de l'eliminaci\u00f3, i de desfer la transacci\u00f3 amb un \n      //\"rollback\",comprovem que l'estudiant no ha estat eliminat \n      //de la base de dades\n      $res = mysqli_query($con,\"select count(*) as quants from \n         estudiant where DNI = '52666666F'\");\n      $fila = mysqli_fetch_assoc($res);\n      $num = $fila['quants'];\n      echo \"Estudiants amb DNI = 52666666F: \" . $num . \"&lt;br&gt;\";\n   }\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#10manuals-i-fonts-dinformacio-addicionals","title":"10.Manuals i fonts d\u2019informaci\u00f3 addicionals","text":"<p>1) MySQL:</p> <ul> <li>https://dev.mysql.com/doc/refman/8.0/en/sql-syntax.html</li> <li>https://downloads.mysql.com/docs/refman-5.0-es.pdf</li> </ul> <p>2) PHP i MySQL:</p> <ul> <li>https://downloads.mysql.com/docs/apis-php-en.pdf</li> <li>https://php.net/manual/es/book.mysqli.php</li> </ul>"},{"location":"Moduls/DWES/_DWES24245.html","title":"Desenvolupament web en entorn servidor - DAW","text":""},{"location":"Moduls/DWES/_DWES24245.html#desenvolupament-web-en-entorn-servidor-daw","title":"Desenvolupament web en entorn servidor - DAW","text":"<ul> <li> <p> DAW DWES Desenvolupament Web Entorn Servidor</p> </li> </ul> <p> Continguts UT02</p> <p> Continguts UT03</p> <p> Exercicis</p>"},{"location":"Moduls/DWES/spring.html","title":"Spring","text":"<ul> <li>Spring Framework</li> <li>Spring Boot</li> <li>M\u00f3dulos principales de Spring</li> <li>Beans</li> <li>Inversi\u00f3n de Control e Inyecci\u00f3n de Dependencias</li> <li>Pr\u00e1ctica de clase: Spring Boot</li> </ul>"},{"location":"Moduls/DWES/spring.html#spring-framework","title":"Spring Framework","text":"<p>Spring \u00e9s un marc de treball (framework) de codi obert per al desenvolupament d'aplicacions a la plataforma JVM. Va ser creat per abordar la complexitat del desenvolupament empresarial i \u00e9s \u00e0mpliament adoptat a causa de les seves caracter\u00edstiques, com ara:</p> <ol> <li> <p>Inversi\u00f3 de Control (IoC): Spring maneja la creaci\u00f3 i gesti\u00f3 d'objectes, la qual cosa redueix la depend\u00e8ncia entre els components del programari.</p> </li> <li> <p>Programaci\u00f3 Orientada a Aspectes (AOP): Spring proporciona un suport potent per a la programaci\u00f3 orientada a aspectes, la qual cosa permet als desenvolupadors aplicar funcionalitats transversals de manera declarativa, com registre, seguretat, transaccions, etc.</p> </li> <li> <p>Integraci\u00f3 de la base de dades: Spring proporciona una abstracci\u00f3 de la base de dades a trav\u00e9s del seu m\u00f2dul JDBC i ORM, la qual cosa facilita la integraci\u00f3 amb diferents bases de dades.</p> </li> <li> <p>Suport per a transaccions: Spring proporciona un mecanisme de gesti\u00f3 de transaccions que es pot integrar amb una varietat de tecnologies de persist\u00e8ncia.</p> </li> <li> <p>Integraci\u00f3 amb tecnologies de middleware: Spring s'integra b\u00e9 amb tecnologies de middleware com JMS, EJB, etc.</p> </li> <li> <p>Suport per a proves: Spring proporciona suport per a proves unit\u00e0ries i d'integraci\u00f3, la qual cosa ajuda els desenvolupadors a verificar el seu codi de manera m\u00e9s eficient.</p> </li> </ol>"},{"location":"Moduls/DWES/spring.html#spring-boot","title":"Spring Boot","text":"<p>Spring Boot es un proyecto que se basa en el Spring Framework y simplifica el proceso de configuraci\u00f3n y ejecuci\u00f3n de aplicaciones Spring. Las caracter\u00edsticas clave de Spring Boot incluyen:</p> <ol> <li> <p>Autoconfiguraci\u00f3n: Spring Boot puede configurar autom\u00e1ticamente una aplicaci\u00f3n basada en las dependencias que se han agregado al proyecto.</p> </li> <li> <p>Standalone: Spring Boot permite crear aplicaciones independientes con un servidor embebido, lo que significa que no necesitas un servidor web o de aplicaciones separado.</p> </li> <li> <p>Opini\u00f3n predefinida: Spring Boot tiene una opini\u00f3n predefinida para configurar proyectos Spring, aunque permite a los desarrolladores modificar la configuraci\u00f3n para satisfacer sus necesidades.</p> </li> <li> <p>Dependencias de inicio: Proporciona starters que son un conjunto de dependencias convenientes que simplifican la configuraci\u00f3n de la aplicaci\u00f3n.</p> </li> <li> <p>Actuator: Proporciona funcionalidades de producci\u00f3n listas para usar, como la monitorizaci\u00f3n y la gesti\u00f3n de la aplicaci\u00f3n.</p> </li> <li> <p>Pruebas: Spring Boot proporciona soporte para pruebas con Spring Boot Test Starter, lo que facilita la escritura de pruebas para las aplicaciones Spring Boot.</p> </li> </ol>"},{"location":"Moduls/DWES/spring.html#modulos-principales-de-spring","title":"M\u00f3dulos principales de Spring","text":"<p>Spring Framework est\u00e1 dise\u00f1ado de manera modular, lo que significa que puedes elegir usar solo los m\u00f3dulos que necesitas para tu aplicaci\u00f3n. Aqu\u00ed te describo algunos de los m\u00f3dulos m\u00e1s comunes:</p> <p></p> <ol> <li> <p>Spring Core: Este es el m\u00f3dulo central del framework Spring que proporciona la implementaci\u00f3n fundamental de la Inversi\u00f3n de Control (IoC) y la Inyecci\u00f3n de Dependencias (DI).</p> </li> <li> <p>Spring AOP: Este m\u00f3dulo proporciona soporte para la Programaci\u00f3n Orientada a Aspectos (AOP), que permite a los desarrolladores definir m\u00e9todos que se ejecutan antes, despu\u00e9s o alrededor de los m\u00e9todos de negocio.</p> </li> <li> <p>Spring DAO / Spring JDBC: Estos m\u00f3dulos proporcionan una capa de abstracci\u00f3n sobre las operaciones de bajo nivel de JDBC, lo que facilita el manejo de las operaciones de la base de datos.</p> </li> <li> <p>Spring ORM: Este m\u00f3dulo proporciona integraci\u00f3n con tecnolog\u00edas de mapeo objeto-relacional como Hibernate, JPA, JDO, etc.</p> </li> <li> <p>Spring Web MVC: Este m\u00f3dulo proporciona un marco para el desarrollo de aplicaciones web y RESTful utilizando el patr\u00f3n Modelo-Vista-Controlador.</p> </li> <li> <p>Spring WebFlux: Este m\u00f3dulo es la respuesta de Spring al desarrollo de aplicaciones reactivas y permite la construcci\u00f3n de aplicaciones no bloqueantes.</p> </li> </ol> <p>Adem\u00e1s de estos m\u00f3dulos, Spring tiene varios proyectos que extienden su funcionalidad:</p> <ol> <li> <p>Spring Boot: Facilita la creaci\u00f3n de aplicaciones Spring aut\u00f3nomas y basadas en la producci\u00f3n, simplificando la configuraci\u00f3n y el despliegue.</p> </li> <li> <p>Spring Security: Es un marco de seguridad altamente personalizable que proporciona autenticaci\u00f3n y autorizaci\u00f3n, protecci\u00f3n contra ataques, etc.</p> </li> <li> <p>Spring Data: Simplifica la persistencia de datos y proporciona soporte para diferentes tecnolog\u00edas de base de datos, incluyendo JPA, Hibernate, JDBC, MongoDB, Redis, etc.</p> </li> <li> <p>Spring Cloud: Proporciona herramientas para el desarrollo de aplicaciones en la nube, incluyendo la configuraci\u00f3n centralizada, el descubrimiento de servicios, el enrutamiento, etc.</p> </li> <li> <p>Spring Integration: Proporciona una implementaci\u00f3n del patr\u00f3n de integraci\u00f3n de sistemas empresariales (EIP) para facilitar la integraci\u00f3n con otros sistemas mediante la mensajer\u00eda.</p> </li> <li> <p>Spring Batch: Proporciona funciones robustas para el procesamiento por lotes, incluyendo servicios de transacci\u00f3n, tareas programadas, etc.</p> </li> </ol> <p>Cada uno de estos m\u00f3dulos y proyectos proporciona funcionalidad espec\u00edfica, lo que permite a los desarrolladores elegir y usar solo lo que necesitan para sus aplicaciones.</p>"},{"location":"Moduls/DWES/spring.html#beans","title":"Beans","text":"<p>En Spring y Spring Boot, los Beans son los objetos fundamentales que forman la columna vertebral de tus aplicaciones. Son objetos que son instanciados, ensamblados y administrados por el contenedor Spring.</p> <p>Los Beans son creados a partir de las clases de tu aplicaci\u00f3n. Puedes configurar c\u00f3mo se crean los beans, c\u00f3mo se inyectan las dependencias y c\u00f3mo se gestionan en el tiempo de vida de la aplicaci\u00f3n.</p> <p>La creaci\u00f3n de beans se puede configurar de varias maneras en Spring:</p> <ol> <li>Anotaciones: Puedes usar anotaciones como <code>@Component</code>, <code>@Service</code>, <code>@Repository</code> y <code>@Controller</code> para marcar una clase como bean. Spring entonces autom\u00e1ticamente detectar\u00e1 estas clases y las registrar\u00e1 como beans en el contenedor.</li> </ol> <p></p> <pre><code>@Service\npublic class MyService {\n    //...\n}\n</code></pre> <ol> <li>Archivos de configuraci\u00f3n XML: En aplicaciones Spring m\u00e1s antiguas, puedes definir beans en archivos de configuraci\u00f3n XML. Sin embargo, este enfoque se utiliza con menos frecuencia en aplicaciones modernas.</li> </ol> <pre><code>&lt;bean id=\"myService\" class=\"com.example.MyService\"/&gt;\n</code></pre> <ol> <li>Clases de configuraci\u00f3n de Java: Tambi\u00e9n puedes definir beans en clases de configuraci\u00f3n de Java usando la anotaci\u00f3n <code>@Configuration</code> y el m\u00e9todo <code>@Bean</code>.</li> </ol> <pre><code>@Configuration\npublic class MyConfiguration {\n\n    @Bean\n    public MyService myService() {\n        return new MyService();\n    }\n}\n</code></pre> <p>Una vez que los beans est\u00e1n en el contenedor Spring, puedes inyectarlos en otras partes de tu aplicaci\u00f3n usando la anotaci\u00f3n <code>@Autowired</code>. Spring se encargar\u00e1 de buscar el bean correcto y de inyectarlo en tu clase.</p> <pre><code>public class MyController {\n\n    private final MyService myService;\n\n    @Autowired\n    public MyController(MyService myService) {\n        this.myService = myService;\n    }\n\n    //...\n}\n</code></pre> <p>En este ejemplo, Spring inyectar\u00e1 autom\u00e1ticamente el bean <code>MyService</code> en <code>MyController</code> cuando este \u00faltimo sea creado.</p> <p>Los beans son \u00fatiles porque te permiten abstraer la creaci\u00f3n y gesti\u00f3n de objetos. Esto hace que tu c\u00f3digo sea m\u00e1s limpio, m\u00e1s f\u00e1cil de probar y m\u00e1s modular. Adem\u00e1s, los beans de Spring pueden tener \u00e1mbitos (como singleton, prototype, request, session, etc.) que te permiten controlar cu\u00e1ndo y c\u00f3mo se crean y destruyen los beans.</p>"},{"location":"Moduls/DWES/spring.html#inversion-de-control-e-inyeccion-de-dependencias","title":"Inversi\u00f3n de Control e Inyecci\u00f3n de Dependencias","text":"<p>Inversi\u00f3n de Control (IoC) y Inyecci\u00f3n de Dependencias (DI) son dos conceptos fundamentales en Spring y Spring Boot que facilitan la creaci\u00f3n de aplicaciones modulares y flexibles.</p> <p>Inversi\u00f3n de Control (IoC): IoC es un principio de dise\u00f1o de software que invierte el control del flujo de la aplicaci\u00f3n. En un programa tradicional, el flujo de control est\u00e1 dictado por el propio programa, lo que significa que el programa controla la creaci\u00f3n y gesti\u00f3n de los objetos. Sin embargo, en un programa que utiliza IoC, este control se invierte, es decir, el framework (en este caso, Spring) se encarga de la creaci\u00f3n y gesti\u00f3n de los objetos. Esto reduce el acoplamiento entre las clases y permite una mayor flexibilidad y modularidad.</p> <p>Inyecci\u00f3n de Dependencias (DI): DI es una t\u00e9cnica que implementa el principio de IoC para la gesti\u00f3n de dependencias entre objetos. En lugar de que los objetos creen o busquen sus dependencias, estas se \"inyectan\" en ellos por el framework. En Spring, esto se puede hacer a trav\u00e9s de constructores, m\u00e9todos setter o campos directamente. La DI facilita la prueba unitaria, ya que las dependencias pueden ser f\u00e1cilmente sustituidas por mockups.</p> <p>En Spring y Spring Boot, estos conceptos se implementan a trav\u00e9s del contenedor Spring. El contenedor Spring crea y gestiona los objetos de la aplicaci\u00f3n, que se conocen como beans. Los beans y sus dependencias se configuran en archivos de configuraci\u00f3n XML o mediante anotaciones en el c\u00f3digo.</p> <p>Por ejemplo, si tienes una clase <code>A</code> que depende de una clase <code>B</code>, en lugar de crear un objeto <code>B</code> dentro de <code>A</code> con <code>new B()</code>, declaras esta dependencia y Spring se encarga de inyectarla. Esto se puede hacer mediante anotaciones como <code>@Autowired</code>.</p> <pre><code>public class A {\n    private B b;\n\n    @Autowired\n    public A(B b) {\n        this.b = b;\n    }\n\n    // resto de la clase\n}\n</code></pre> <p>En este ejemplo, Spring crear\u00e1 un bean de <code>B</code> y lo inyectar\u00e1 en <code>A</code> cuando cree un bean de <code>A</code>. Esto significa que no tienes que preocuparte por la creaci\u00f3n y gesti\u00f3n de <code>B</code> - eso es manejado por Spring, lo que es IoC y DI en acci\u00f3n.</p>"},{"location":"Moduls/DWES/spring.html#practica-de-clase-spring-boot","title":"Pr\u00e1ctica de clase: Spring Boot","text":"<p>Investiga sobre proyectos servicios que conozcas que usen Spring Boot. \u00bfEn qu\u00e9 parten lo usan? \u00bfQu\u00e9 m\u00f3dulos de Spring usan? \u00bfQu\u00e9 ventajas les da Spring Boot?</p>"},{"location":"Moduls/DWES/exercicisisolucions/DWESUT0501_PracticaInicialPHPBD.html","title":"Enunciat de la Pr\u00e0ctica","text":""},{"location":"Moduls/DWES/exercicisisolucions/DWESUT0501_PracticaInicialPHPBD.html#enunciat-de-la-practica","title":"Enunciat de la Pr\u00e0ctica","text":"<p>Gestor de tasques</p> <p>Crear una aplicaci\u00f3 web b\u00e0sica per gestionar una llista de tasques.</p> <p>Requisits:</p> <p>Base de Dades MySQL:</p> <p>Crea una base de dades anomenada todolist. Crea una taula anomenada tasks amb les seg\u00fcents columnes:</p> <p></p><pre><code>id (INT, AUTO_INCREMENT, PRIMARY KEY)\ntask (VARCHAR(255))\nstatus (ENUM(\u2018pending\u2019, \u2018completed\u2019))\n</code></pre> Interf\u00edcie HTML:<p></p> <p>Crea una p\u00e0gina HTML amb un formulari per afegir noves tasques. El formulari ha de tenir un camp de text per a la tasca i un bot\u00f3 per enviar. Mostra la llista de tasques existents en una taula. Cada fila ha de tenir la tasca i el seu estat (pendent o completada).</p> <p>PHP:</p> <p>Crea un fitxer PHP per gestionar la connexi\u00f3 a la base de dades. Crea un fitxer PHP per processar el formulari d\u2019afegir tasques. Aquest fitxer ha d\u2019inserir la nova tasca a la base de dades. Crea un fitxer PHP per mostrar la llista de tasques des de la base de dades.</p> <p>Com entregar-ho</p> <p>Heu de crear un fitxer anomenat DWESUT0501_PracticaInicialPHPBD_.html i pujar-lo al hosting que teniu creat.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html","title":"Exercici Gesti\u00f3 Botiga","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#exercici-gestio-botiga","title":"Exercici Gesti\u00f3 Botiga","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#gestio-duna-botiga-en-linia-amb-productes-i-categories","title":"Gesti\u00f3 d'una botiga en l\u00ednia amb productes i categories","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#enunciat","title":"Enunciat:","text":"<p>Crea una aplicaci\u00f3 PHP que simuli una botiga en l\u00ednia. L'aplicaci\u00f3 ha de permetre:</p> <ul> <li>Crear productes Cada producte tindr\u00e0 un nom, una descripci\u00f3, un preu i una categoria.</li> <li>Crear categories: Cada categoria tindr\u00e0 un nom i una descripci\u00f3.</li> <li>Assignar productes a categories: Un producte pot pert\u00e0nyer a una o m\u00e9s categories.</li> <li>Mostrar una llista de productes: El llistat ha de permetre filtrar per categoria.</li> <li>Mostrar el detall d'un producte: En seleccionar un producte, es mostrar\u00e0 tota la informaci\u00f3, incloent-hi les categories a qu\u00e8 pertany.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#estructura-del-projecte","title":"Estructura del projecte:","text":"<ul> <li>index.php:<ul> <li>Cont\u00e9 el codi principal del programa.</li> <li>Inclou les dades inicials (productes, categories).</li> <li>Truca a les funcions definides al fitxer <code>funcions.php</code> per fer les operacions.</li> </ul> </li> <li>funcions.php:<ul> <li>Cont\u00e9 totes les funcions necess\u00e0ries per gestionar els productes i les categories.</li> </ul> </li> </ul> <p>index.php (exemple):</p> <pre><code>&lt;?php\n\nrequire_once 'funcions.php';\n\n// Dades inicials (exemple)\n\n$producte1 = crearProducte('Samarreta', 'Samarreta de cot\u00f3', 19.99);\n\n$producte2 = crearProducte('Pantalons', 'Pantalons vaquer', 39.99);\n\n$categoria1 = crearCategoria('Roba', 'Secci\u00f3 de roba');\n\n$categoria2 = crearCategoria('Home', 'Productes per a home');\n\nagregarCategoriaAProducte($producte1, $categoria1);\n\nagregarCategoriaAProducte($producte1, $categoria2);\n\nagregarCategoriaAProducte($producte2, $categoria1);\n\n// Mostrar productes de la categoria \"Roba\"\n\n$productesRoba = obtenirProductesPorCategoria($categoria1);\n\nmostrarProductes($productesRoba);\n</code></pre> <p>funcions.php (exemple):</p> <pre><code>&lt;?php\n\nclass Producte {\n\n    //... \n\n}\n\nclasse Categoria {\n\n    //... \n\n}\n\nfunction crearProducte($nom, $descripcio, $preu) {\n\n    //...\n\n}\n\nfunction crearCategoria($nom, $descripcio) {\n\n    //...\n\n}\n\nfunction agregarCategoriaAProducte(Producte $producte, Categoria $categoria) {\n\n    //...\n\n}\n\nfunction obtenirProductsPorCategoria(Categoria $categoria) {\n\n    //...\n\n}\n\nfunction mostrarProductes(array $productes) {\n\n    //...\n\n}\n</code></pre>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#instruccions","title":"Instruccions:","text":"<ol> <li>Crear els fitxers: Crea dos fitxers: <code>index.php</code> i <code>funcions.php</code>.</li> <li>Implementar les funcions: Completa les funcions a <code>funcions.php</code> segons la descripci\u00f3 de lexercici.</li> <li>Utilitzar les funcions: A <code>index.php</code>, crea els productes i categories necessaris i utilitza les funcions per realitzar les operacions sol\u00b7licitades.</li> <li>Mostra resultats: La funci\u00f3 <code>mostrarProductes</code> ha d'imprimir a la pantalla la informaci\u00f3 dels productes.</li> </ol>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#aspectes-que-savaluaran","title":"Aspectes que s\u2019avaluaran:","text":"<ul> <li>Correcci\u00f3 del codi: Les funcions han de fer les tasques correctament.</li> <li>Modularitat: El codi ha d'estar ben organitzat en funcions.</li> <li>Reutilitzaci\u00f3 de codi: Cal evitar duplicacions de codi.</li> <li>Documentaci\u00f3: Es recomana afegir comentaris a les funcions per explicar-ne el prop\u00f2sit.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#ampliacions","title":"Ampliacions:","text":"<ul> <li>Validaci\u00f3 de dades: Afegir validacions per assegurar que les dades ingressades siguin correctes.</li> <li>Maneig d'errors: Implementar un maneig d'errors adequat per evitar que el programa s'aturi inesperadament.</li> <li>Persist\u00e8ncia de dades: Desar les dades en un fitxer o base de dades.</li> <li>Interf\u00edcie d'usuari: Crear una interf\u00edcie web simple utilitzant HTML i formularis per interactuar amb l'aplicaci\u00f3.</li> <li>Sortida HTML: Un cop funcioni el teu codi, prepara\u2019l per presentar les dades de sortida en format HTML. Concretament utilitzant taules.</li> <li>Sortida HTML utilitzant imatges dels productes</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#comentaris-i-observacions","title":"Comentaris i observacions:","text":"<p>En separar la l\u00f2gica en funcions i fitxers separats el codi \u00e9s m\u00e9s net, eficient i reutilitzable, preparant-los per a projectes m\u00e9s complexos.</p> <ul> <li>Major organitzaci\u00f3: El codi est\u00e0 m\u00e9s estructurat i \u00e9s m\u00e9s f\u00e0cil entendre i mantenir.</li> <li>Reutilitzaci\u00f3 de codi: Les funcions poden ser utilitzades a diferents parts del programa.</li> <li>Facilitat de prova: \u00c9s m\u00e9s f\u00e0cil provar les funcions de manera individual.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#exemple-dexecucio-sortida-esperada-del-vostre-codi","title":"Exemple d'execuci\u00f3 (sortida esperada del vostre codi)","text":"<p>Dades d'entrada:</p> <ul> <li>Productes:<ul> <li>Samarreta: Samarreta de cot\u00f3, 19.99\u20ac</li> <li>Pantalons: Pantalons texans, 39.99\u20ac</li> </ul> </li> <li>Categories:<ul> <li>Roba</li> <li>Home</li> </ul> </li> </ul> <p>Codi executat: S'ha cridat a la funci\u00f3 <code>mostrarProductesPerCategoria</code> amb la categoria \"Roba\".</p> <p>Sortida per pantalla:</p> <p>Productes de la categoria \"Roba\":</p> <p>Nom: Samarreta</p> <p>Preu: 19.99\u20ac</p> <p>Categories: Roba Home</p> <p>Nom: Pantalons</p> <p>Preu: 39.99\u20ac</p> <p>Categories: Roba</p> <p>Explicaci\u00f3 de la sortida:</p> <ul> <li>Es mostren tots els productes que pertanyen a la categoria \u201cRoba\u201d.</li> <li>Per a cada producte es mostra el nom, el preu i les categories a qu\u00e8 pertany.</li> <li>En aquest cas, tots dos productes (Samarreta i Pantalons) pertanyen a la categoria \"Roba\", per la qual cosa tots dos es mostren a la sortida.</li> </ul> <p>Un altre exemple:</p> <p>Dades d'entrada:</p> <ul> <li>Es busca el producte \"Samarreta\".</li> </ul> <p>Sortida per pantalla:</p> <p>Detall del producte:</p> <p>Nom: Samarreta</p> <p>Preu: 19.99\u20ac</p> <p>Categories: Roba Home</p> <p>Explicaci\u00f3 de la sortida:</p> <ul> <li>Es mostra la informaci\u00f3 detallada del producte \"Samarreta\", incloent-hi el nom, el preu i les categories a qu\u00e8 pertany.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#rubrica-davaluacio","title":"R\u00fabrica d'avaluaci\u00f3","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#llista-de-verifiacio","title":"Llista de verifiaci\u00f3","text":"<p>Enlla\u00e7 a la llista de verificaci\u00f3</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisCookieSession.html","title":"ExercicisCookieSession","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExercicisCookieSession.html#exercicis-php-cookies-i-session","title":"Exercicis PHP Cookies i Session","text":"<p>\u270f\ufe0f   EXERCICI 123   (<code>exercici123comptadorVisites.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, informa l'usuari de si \u00e9s la seva primera visita, o si no ho \u00e9s, mostri el seu valor (valor d'un comptador).      A m\u00e9s, has de permetre que l'usuari reinicialitzi el seu comptador de visites.</p> <p>\u270f\ufe0f   EXERCICI 124   (<code>exercici124fons.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, crea una p\u00e0gina amb un desplegable amb diversos colors, de manera que l'usuari pugui canviar el color de fons de la p\u00e0gina (atribut <code>bgcolor</code>).      En tancar la p\u00e0gina, aquesta ha de recordar, almenys durant 24h, el color triat i la propera vegada que es carregui la pagina, ho faci amb l'\u00faltim color seleccionat.</p> <p>\u270f\ufe0f   EXERCICI 125   (<code>exercici125fonsSessio1.php</code>): Modifica l'exercici anterior per emmagatzemar el color de fons en la sessi\u00f3 i no emprar cookies. A m\u00e9s, ha de contenir un enlla\u00e7 al seg\u00fcent arxiu.</p> <p>\u270f\ufe0f   EXERCICI 126   (<code>exercici126fonsSessio2.php</code>): Ha de mostrar el color i donar la possibilitat de:</p> <ul> <li>tornar a la p\u00e0gina anterior mitjan\u00e7ant un enlla\u00e7</li> <li>i mitjan\u00e7ant un altre enlla\u00e7, buidar la sessi\u00f3 i tornar a la p\u00e0gina anterior.</li> </ul> <p>\u270f\ufe0f   EXERCICI 127   Fent \u00fas de la sessi\u00f3, crearem 2 formularios:</p> <ul> <li><code>exercici127formulari1.php</code> envia les dades (nom i cognoms, email, url i sexe) a 'exercici127formulari2.php`.</li> <li><code>exercici127formulari2.php</code> llegeix les dades i les fica a la sessi\u00f3. A continuaci\u00f3, mostra la resta de camps del formulari a omplir (convivents, aficions i men\u00fa). Envia aquestes dades a <code>exercici127formulari3.php</code>.</li> <li><code>exercici127formulari3.php</code> recull les dades enviades en el pas anterior i al costat dels que ja estaven en la sessi\u00f3, es mostren totes les dades en una taula/llista desordenada.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html","title":"ExercicisUT04","text":"<p>\u270f\ufe0f Exercici 123: (<code>123server.php</code>): Mostra els valors de <code>$_SERVER</code> en executar un script al teu ordinador. Prova a passar-li par\u00e0metres per GET (i a no passar-li cap). Prepara un formulari ('123post.html') que faci un enviament per POST i comprovam de nou. Crea una p\u00e0gina ('123enlace.html') que tingui un enlla\u00e7 a <code>123server.php</code> i comprova el valor de `HTTP_REFERER'.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html#formularis","title":"Formularis","text":"<p>\u270f\ufe0f Exercici 124: (<code>124formulari.html</code> <code>124formulari.php</code>): Creeu un formulari que sol\u00b7liciti:</p> <ul> <li>Nom i cognoms.</li> <li>Email.</li> <li>URL p\u00e0gina personal.</li> <li>Sexe (r\u00e0dio).</li> <li>Nombre de convivents al domicili.</li> <li>Aficions (checkboxes) \u2013 posar m\u00ednim 4 valors.</li> <li>Men\u00fa favorit (llista selecci\u00f3 m\u00faltiple) \u2013 posar m\u00ednim 4 valors.</li> </ul> <p>Mostra els valors carregats en una taula-resum.</p> <p>\u270f\ufe0f Exercici 125: (<code>125validacio.php</code>): A partir del formulari anterior, introdueix validacions en HTML mitjan\u00e7ant l'atribut <code>required</code> dels camps (usa els tipus adequats per a cada camp), i comprova els tipus de les dades i que compleixen els valors esperats (per exemple, en els checkboxes que els valors recollits formen part de tots els possibles). Pots provar de passar-li dades err\u00f2nies via URL i comprovar el seu comportament.  Tip: Investiga l'\u00fas de la funci\u00f3 <code>filter_var</code>.</p> <p>\u270f\ufe0f Exercici 126: (<code>126pujada.html</code> y <code>126pujada.php</code>): Crea un formulari que permeti pujar un arxiu al servidor. A m\u00e9s del fitxer, ha de demanar en el mateix formulari dos camps num\u00e8rics que demanin l'amplada i l'al\u00e7ada. Comprova que tant el fitxer com les dades arriben correctament.</p> <p>\u270f\ufe0f Exercici 127: (<code>127pujadaImatge.php</code>): Modifica l'exercici anterior perqu\u00e8 \u00fanicament permeti pujar imatges (comprova la propietat <code>type</code> de l'arxiu pujat). Si l'usuari selecciona un altre tipus d'arxius, se l'ha d'informar de l'error i permetre que pugi un nou arxiu. En el cas de pujar el tipus correcte, visualitzar la imatge amb la mida d'amplada i al\u00e7ada rebut com a par\u00e0metre.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html#cookies-i-sessio","title":"Cookies i Sessi\u00f3","text":"<p>\u270f\ufe0f Exercici 128: (<code>128comptadorVisites.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, informa l'usuari de si \u00e9s la seva primera visita, o si no ho \u00e9s, mostri el seu valor (valor d'un comptador). A m\u00e9s, has de permetre que l'usuari reinicialitzi el seu comptador de visites.</p> <p>\u270f\ufe0f Exercici 129: (<code>129fons.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, crea una p\u00e0gina amb un desplegable amb diversos colors, de manera que l'usuari pugui canviar el color de fons de la p\u00e0gina (atribut `bgcolor'). En tancar la p\u00e0gina, aquesta ha de recordar, almenys durant 24h, el color triat i la pr\u00f2xima vegada que es carregui la p\u00e0gina, ho faci amb l'\u00faltim color seleccionat.</p> <p>\u270f\ufe0f Exercici 130: (<code>130fonsSessio1.php</code>): Modifica l'exercici anterior per emmagatzemar el color de fons en la sessi\u00f3 i no emprar cookies. A m\u00e9s, ha de contenir un enlla\u00e7 al seg\u00fcent arxiu. <code>130fonsSessio2.php</code>: Ha de mostrar el color i donar la possibilitat de:</p> <ul> <li>tornar a la p\u00e0gina anterior mitjan\u00e7ant un enlla\u00e7</li> <li>i mitjan\u00e7ant un altre enlla\u00e7, buidar la sessi\u00f3 i tornar a la p\u00e0gina anterior.</li> </ul> <p>\u270f\ufe0f Exercici 131: (Fent \u00fas de la sessi\u00f3, anam a dividir el formulari de l'exercici <code>124formulari.php</code> en 2 subformularis:</p> <ul> <li><code>131formulari.php</code> envia les dades (nom i cognoms, email, url i sexe) a <code>131formulari2.php</code>.</li> <li><code>131formulari2.php</code> llegeix les dades i les fica a la sessi\u00f3. A continuaci\u00f3, mostra la resta de camps del formulari a omplir (convivents, aficions i men\u00fa). Envia aquestes dades a <code>131formulari3.php</code>.</li> <li><code>131formulari3.php</code> recull les dades enviades en el pas anterior i al costat dels que ja estaven en la sessi\u00f3, es mostren totes les dades en una taula/llista desordenada.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html#autenticacio","title":"Autenticaci\u00f3","text":"<p>En els seg\u00fcents exercicis anam a muntar una estructura d'inici de sessi\u00f3 similar a la vista a classe.</p> <p>\u270f\ufe0f Exercici 132: (<code>132index.php</code>): formulari d'inici de sessi\u00f3</p> <p>\u270f\ufe0f Exercici 133: (<code>133login.php</code>): fa de controlador, per la qual cosa ha de comprovar les dades rebudes (nom\u00e9s permet l'entrada de <code>usuari/usuari</code> i si tot \u00e9s correcte, cedir el control a la vista del seg\u00fcent exercici. No cont\u00e9 codi HTML.</p> <p>\u270f\ufe0f Exercici 134: (<code>134pelicules.php</code>): vista que mostra com a t\u00edtol \"Llistat de Pel\u00b7l\u00edcules\", i una llista desordenada amb tres pel\u00b7l\u00edcules.</p> <p>\u270f\ufe0f Exercici 135: (<code>135logout.php</code>): buida la sessi\u00f3 i ens porta de nou al formulari d'inici de sessi\u00f3. No cont\u00e9 codi HTML.</p> <p>\u270f\ufe0f Exercici 136: (<code>136series.php</code>): Afegeix una nova vista similar a <code>134pelicules.php</code> que mostra un \"Llistat de S\u00e8ries\" amb una llista desordenada amb tres s\u00e8ries. Tant <code>134pelicules.php</code> com la vista acabada de crear, han de tenir un petit men\u00fa (senzill, mitjan\u00e7ant enlla\u00e7os) que permeti passar d'un llistat a un altre. Comprova que si s'accedeix directament a qualsevol de les vistes sense tenir un usuari amb sessi\u00f3 iniciada, via URL del navegador, no es mostra el llistat.</p> <p>\u270f\ufe0f Exercici 137: Modifica tant el controlador com les vistes perqu\u00e8:</p> <ul> <li>les dades les obtingui el controlador (emmagatzema en la sessi\u00f3 un array de pel\u00b7l\u00edcules i un altre de s\u00e8ries)</li> <li>col\u00b7loqueu les dades en la sessi\u00f3</li> <li>En les vistes, les dades es recuperen de la sessi\u00f3 i es pinten en la llista desordenada recorrent l'vector corresponent.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html#projecte-videoclub-30","title":"Projecte Videoclub 3.0","text":"<p>\u270f\ufe0f Exercici 138: Per al Videoclub, anam a crear una p\u00e0gina <code>index.php</code> amb un formulari que contingui un formulari de login/password. Es comprovaran les dades en <code>login.php</code>. Els possibles usuaris s\u00f3n admin/admin o usuari/usuari.</p> <ul> <li>Si l'usuari \u00e9s correcte, en <code>main.php</code> mostrar un missatge de benvinguda amb el nom de l'usuari, al costat d'un enlla\u00e7 per tancar la sessi\u00f3, que el portaria de nou al login.</li> <li>Si l'usuari \u00e9s incorrecte, ha de tornar a carregar el formulari donant informaci\u00f3 a l'usuari d'acc\u00e9s incorrecte.</li> </ul> <p>\u270f\ufe0f Exercici 139: Si l'usuari \u00e9s administrador, es carregaran en la sessi\u00f3 les dades de suports i clients del videoclub que ten\u00edem en les nostres proves (no mitjan\u00e7ant <code>include</code> sin\u00f3 copiant les dades i inserint-les en un vector associatiu, el qual col\u00b7locarem posteriorment en la sessi\u00f3).</p> <p>En la seg\u00fcent unitat els obtindrem de la base de dades. En <code>mainAdmin.php</code>, a m\u00e9s de la benvinguda, ha de mostrar:</p> <ul> <li>Llistat de clients</li> <li>Llistat de suports</li> </ul> Esquema navegaci\u00f3 exercici 141 <p>\u270f\ufe0f Exercici 140: Anam a modificar la classe <code>Client</code> per emmagatzemar l'<code>user</code> i la <code>password</code> de cada client. Despr\u00e9s de codificar els canvis, modificar el llistat de clients de <code>mainAdmin.php</code> per afegir al llistat l'usuari.</p> <p>\u270f\ufe0f Exercici 141: Si l'usuari que accedeix no \u00e9s administrador i coincideix amb algun dels clients que tenim carregats despr\u00e9s del login, ha de carregar <code>mainCliente.php</code> on es mostrar\u00e0 un llistat dels lloguers del client. Per a aix\u00f2, modificarem la classe <code>Client</code> per oferir el m\u00e8tode <code>getLloguers() : array</code>, el qual invocarem i despr\u00e9s recorrerem per mostrar el llistat sol\u00b7licitat.</p> <p>Ara tornem a la part d'administraci\u00f3</p> <p>\u270f\ufe0f Exercici 142: A m\u00e9s de mostrar el llistat de clients, vam oferir l'opci\u00f3 de donar d'alta un nou client a <code>formCreateCliente.php'. Les dades s'enviaran mitjan\u00e7ant POST a</code>createCliente.php<code>que les introduir\u00e0 en la sessi\u00f3. Un cop creat el client, ha de tornar a carregar</code>mainAdmin.php` on es podr\u00e0 veure el client inserit. Si hi ha alguna dada incorrecta, ha de tornar a carregar el formulari d'alta.</p> <p>\u270f\ufe0f Exercici 143: Crea en <code>formUpdateCliente.php</code> un formulari que permeti editar les dades d'un client. Has de recollir les dades a <code>updateCliente.php</code>. Les dades de client s'han de poder modificar des de la pr\u00f2pia p\u00e0gina d'un client, aix\u00ed com des del llistat de l'administrador.</p> <p>\u270f\ufe0f Exercici 144: Des del llistat de clients de l'administrador has d'oferir la possibilitat d'esborrar un client. Al navegador, abans de redirigir el servidor, l'usuari ha de confirmar mitjan\u00e7ant JS que realment desitja eliminar el client. Finalment, a <code>removeCliente.php</code> elimina el client de la sessi\u00f3. Un cop eliminat, ha de tornar al llistat de clients.</p> Esquema navegaci\u00f3 Videoclub 3.0"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html","title":"Exercicis expressions regulars en PHP:","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercicis-expressions-regulars-en-php","title":"Exercicis expressions regulars en PHP:","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-118-validacio-de-correu-electronic","title":"\u270f\ufe0f   Exercici 118: Validaci\u00f3 de Correu Electr\u00f2nic","text":"<p>Crea una funci\u00f3 que validi si una cadena \u00e9s un correu electr\u00f2nic v\u00e0lid. La funci\u00f3 ha de retornar <code>true</code> si la cadena \u00e9s un correu electr\u00f2nic v\u00e0lid i <code>false</code> en cas contrari.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui el patr\u00f3 d'un correu electr\u00f2nic, com ara <code>'/^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,6}$/'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-119-extraccio-de-numeros-de-telefon","title":"\u270f\ufe0f   Exercici 119: Extracci\u00f3 de N\u00fameros de Tel\u00e8fon","text":"<p>Escriu una funci\u00f3 que extregui tots els n\u00fameros de tel\u00e8fon d'una cadena de text. Els n\u00fameros de tel\u00e8fon poden estar en diferents formats, com ara <code>(123) 456-7890</code>, <code>123-456-7890</code>, o <code>123.456.7890</code>.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui patrons de n\u00fameros de tel\u00e8fon, com ara <code>'/\\(?\\d{3}\\)?[-.\\s]?\\d{3}[-.\\s]?\\d{4}/'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-120-validacio-de-contrasenyes","title":"\u270f\ufe0f   Exercici 120: Validaci\u00f3 de Contrasenyes","text":"<p>Crea una funci\u00f3 que validi si una contrasenya compleix amb els seg\u00fcents requisits: - Almenys 8 car\u00e0cters de llargada. - Cont\u00e9 almenys una lletra maj\u00fascula. - Cont\u00e9 almenys una lletra min\u00fascula. - Cont\u00e9 almenys un n\u00famero. - Cont\u00e9 almenys un car\u00e0cter especial (com ara <code>!@#$%^&amp;*</code>).</p> Pista <p>Utilitza una expressi\u00f3 regular que combini aquests requisits, com ara <code>'/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&amp;*]).{8,}$/'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-121-extraccio-de-urls","title":"\u270f\ufe0f   Exercici 121: Extracci\u00f3 de URLs","text":"<p>Escriu una funci\u00f3 que extregui totes les URLs d'una cadena de text. Les URLs poden comen\u00e7ar amb <code>http://</code>, <code>https://</code>, o <code>www.</code>.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui patrons de URLs, com ara <code>'/\\b(?:https?:\\/\\/|www\\.)\\S+\\b/'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-122-substitucio-de-paraules-prohibides","title":"\u270f\ufe0f   Exercici 122: Substituci\u00f3 de Paraules Prohibides","text":"<p>Crea una funci\u00f3 que substitueixi totes les paraules prohibides d'una cadena de text per una s\u00e8rie d'asteriscs (<code>*</code>). La llista de paraules prohibides ha de ser un array passat com a par\u00e0metre a la funci\u00f3.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui les paraules prohibides dins de la cadena, com ara <code>'/\\b(' . implode('|', $paraules_prohibides) . ')\\b/i'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/UT02PHPExercicis.html","title":"Activitats","text":""},{"location":"Moduls/DWES/exercicisisolucions/UT02PHPExercicis.html#1-conceptes-basics-integracio-de-php-en-html-variables-operadors","title":"1. Conceptes b\u00e0sics: Integraci\u00f3 de PHP en HTML. Variables. Operadors","text":"<p>\u270f\ufe0f   EXERCICI 01 Escriu un programa que mostri el teu nom per pantalla. Utilitza codi PHP.</p> <p>\u270f\ufe0f   EXERCICI 02 Modifica el programa anterior perqu\u00e8 mostri la teva adre\u00e7a i el teu n\u00famero de tel\u00e8fon. Cada dada s'ha de mostrar en una l\u00ednia diferent. Barreja d'alguna manera les sortides per pantalla, utilitzant tant HTML com PHP.</p> <p>\u270f\ufe0f   EXERCICI 03 Escriu un programa que mostri per pantalla 10 paraules en angl\u00e8s al costat de la seva corresponent traducci\u00f3 al castell\u00e0. Les paraules han d'estar distribu\u00efdes en dues columnes. Utilitza l'etiqueta  d'HTML.<p></p><p>\u270f\ufe0f   EXERCICI 04 Escriu un programa que mostri el teu horari de classe mitjan\u00e7ant una taula. Tot i que es pot fer \u00edntegrament a HTML (igual que els exercicis anteriors), veu intercalant codi HTML i PHP per familiaritzar-te amb aquest \u00faltim.</p><p>\u270f\ufe0f   EXERCICI 05 Escriu un programa que utilitzi les variables $x i $y. Assignals els valors 144 i 999 respectivament. A continuaci\u00f3, mostra per pantalla el valor de cada variable, la suma, la resta, la divisi\u00f3 i la multiplicaci\u00f3.</p><p>\u270f\ufe0f   EXERCICI 06 Crea la variable $nombre i aix\u00ed el teu nom complet. Mostra el seu valor per pantalla de tal forma que el resultat sigui el mateix que el de l'exercici 1.</p><p>\u270f\ufe0f   EXERCICI 07 Crea les variables $nombre, $direccion i $telefono i aix\u00ed els valors adequats. Mostra els valors per pantalla de tal forma que el resultat sigui el mateix que el de l'exercici 2.</p><p>\u270f\ufe0f   EXERCICI 08 Realitza un conversor d'euros a pessetes. La quantitat en euros que es vol convertir haur\u00e0 d'estar emmagatzemada en una variable.</p><p>\u270f\ufe0f   EXERCICI 09 Realitza un conversor de pessetes a euros. La quantitat en pessetes que es vol convertir haur\u00e0 d'estar emmagatzemada en una variable.</p><p>\u270f\ufe0f   EXERCICI 10 Escriu un programa que pinti per pantalla una pir\u00e0mide farcida a base d'asteriscs. La base de la pir\u00e0mide ha d'estar formada per 9 asteriscs.</p><p>\u270f\ufe0f   EXERCICI 11 Igual que el programa anterior, per\u00f2 aquesta vegada la pir\u00e0mide estar\u00e0 buida (s'ha de veure \u00fanicament el contorn fet amb asteriscs).</p><p>\u270f\ufe0f   EXERCICI 12 Igual que el programa anterior, per\u00f2 aquesta vegada la pir\u00e0mide ha d'apar\u00e8ixer invertida, amb el v\u00e8rtex cap avall.</p></p>"},{"location":"Moduls/DWES/exercicisisolucions/UT02PHPExercicis.html#2-recollida-de-dades-per-teclat-mitjancant-formularis","title":"2. Recollida de dades per teclat mitjan\u00e7ant formularis","text":"<p>\u270f\ufe0f   EXERCICI 13 Realitza un programa que demani dos n\u00fameros i despr\u00e9s mostri el resultat de la seva multiplicaci\u00f3.</p><p>\u270f\ufe0f   EXERCICI 14 Realitza un conversor d'euros a pessetes. Ara la quantitat en euros que es vol convertir s'haur\u00e0 d'introduir per teclat.</p><p>\u270f\ufe0f   EXERCICI 15 Realitza un conversor de pessetes a euros. La quantitat en pessetes que es vol convertir s'haur\u00e0 d'introduir per teclat.</p><p>\u270f\ufe0f   EXERCICI 16 Escriu un programa que sumi, resti, multipliqui i divideixi dos n\u00fameros introdu\u00efts per teclat.</p><p>\u270f\ufe0f   EXERCICI 17 Escriu un programa que calculi l'\u00e0rea d'un rectangle.</p><p>\u270f\ufe0f   EXERCICI 18 Escriu un programa que calculi l'\u00e0rea d'un triangle.</p><p>\u270f\ufe0f   EXERCICI 19 Escriu un programa que calculi el total d'una factura a partir de la base imposable.</p><p>\u270f\ufe0f   EXERCICI 20 Escriu un programa que calculi el salari setmanal d'un treballador en base a les hores treballades. Es pagaran 12 euros per hora.</p><p>\u270f\ufe0f   EXERCICI 21 Escriu un programa que calculi el volum d'un con mitjan\u00e7ant la f\u00f3rmula</p><p>\u270f\ufe0f   EXERCICI 22 Realitza un conversor de Mb a Kb.</p><p>\u270f\ufe0f   EXERCICI 23 Realitza un conversor de Kb a Mb.</p>"},{"location":"Moduls/DWES/exercicisisolucions/UT02PHPExercicis.html#3-sentencia-condicional-if-i-switch","title":"3. Sent\u00e8ncia condicional (if i switch)","text":"<p>\u270f\ufe0f   EXERCICI 24 Escriu un programa que demani per teclat un dia de la setmana i que digui quina assignatura toca a primera hora aquell dia.</p><p>\u270f\ufe0f   EXERCICI 25 Realitza un programa que demani una hora per teclat i que mostri despr\u00e9s bons dies, bones tardes o bones nits segons l'hora. S'utilitzaran els trams de 6 a 12, de 13 a 20 i de 21 a 5. respectivament. Nom\u00e9s es tenen en compte les hores, els minuts no s'han d'introduir per teclat.</p><p>\u270f\ufe0f   EXERCICI 26 Escriu un programa en qu\u00e8 donat un n\u00famero de l'1 a 7 escrigui el corresponent nom del dia de la setmana.</p><p>\u270f\ufe0f   EXERCICI 27 Vam ampliar un dels exercicis de la relaci\u00f3 anterior per considerar les hores extres. Escriu un programa que calculi el salari setmanal d'un treballador tenint en compte que les hores ordin\u00e0ries (40 primeres hores de treball) es paguen a 12 euros l'hora. A partir de l'hora 41, es paguen a 16 euros l'hora.</p><p>\u270f\ufe0f   EXERCICI 28 Realitza un programa que resolgui una equaci\u00f3 de primer grau (del tipus ax + b =0).</p><p>\u270f\ufe0f   EXERCICI 29 Realitza un programa que calculi el temps que trigar\u00e0 a caure un objecte des d'una al\u00e7ada h. Aplica la f\u00f3rmula  sent g = 9.81m/s2</p><p>\u270f\ufe0f   EXERCICI 30 Realitza un programa que calculi la mitjana de tres notes.</p><p>\u270f\ufe0f   EXERCICI 31 Amplia el programa anterior perqu\u00e8 digui la nota del butllet\u00ed (insuficient, suficient, b\u00e9, notable o sobresortint).</p><p>\u270f\ufe0f   EXERCICI 32 Realitza un programa que resolgui una equaci\u00f3 de segon grau (del tipus ax2+ bx + c =0).</p><p>\u270f\ufe0f   EXERCICI 33 Escriu un programa que ens digui l'hor\u00f2scop a partir del dia i el mes de naixement.</p><p>\u270f\ufe0f   EXERCICI 34 Escriu un programa que donada una hora determinada (hores i minuts), calculi els segons que falten per arribar a la mitjanit.</p><p>\u270f\ufe0f   EXERCICI 35 Realitza un miniq\u00fcestionari amb 10 preguntes tipus test sobre les assignatures que s'imparteixen en el curs. Cada pregunta encertada sumar\u00e0 un punt. El programa mostrar\u00e0 al final la qualificaci\u00f3 obtinguda. P\u00e1sale el miniq\u00fcestionari als teus companys i p\u00eddeles que ho facin per veure qu\u00e8 tal anessin de coneixements en les diferents assignatures del curs.</p><p>\u270f\ufe0f   EXERCICI 36 Escriu un programa que ordeni tres nombres enters introdu\u00efts per teclat.</p><p>\u270f\ufe0f   EXERCICI 37 Realitza un programa que digui si un nombre introdu\u00eft per teclat \u00e9s parell i/o divisible entre 5.</p><p>\u270f\ufe0f   EXERCICI 38 Escriu un programa que digui quina \u00e9s l'\u00faltima xifra d'un n\u00famero sencer introdu\u00eft per teclat.</p><p>\u270f\ufe0f   EXERCICI 39 Escriu un programa que digui quina \u00e9s la primera xifra d'un n\u00famero sencer introdu\u00eft per teclat. Es permeten n\u00fameros de fins a 5 xifres.</p><p>\u270f\ufe0f   EXERCICI 40 Realitza un programa que ens digui quants d\u00edgits t\u00e9 un nombre sencer que pot ser positiu o negatiu. Es permeten n\u00fameros de fins a 5 d\u00edgits.</p><p>\u270f\ufe0f   EXERCICI 41 Realitza un programa que digui si un nombre sencer positiu introdu\u00eft per teclat \u00e9s capic\u00faa. Es permeten n\u00fameros de fins a 5 xifres.</p>"},{"location":"Moduls/DWES/exercicisisolucions/UT02PHPExercicis.html#4-bucles","title":"4. Bucles","text":"<p>\u270f\ufe0f   EXERCICI 42 Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle for.</p><p>\u270f\ufe0f   EXERCICI 43 Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle while.</p><p>\u270f\ufe0f   EXERCICI 44 Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle do-while.</p><p>\u270f\ufe0f   EXERCICI 45 Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle for.</p><p>\u270f\ufe0f   EXERCICI 46 Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle while.</p><p>\u270f\ufe0f   EXERCICI 47 Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle do-while.</p><p>\u270f\ufe0f   EXERCICI 48 Realitza el control d'acc\u00e9s a una caixa forta. La combinaci\u00f3 ser\u00e0 un nombre de 4 xifres. El programa ens demanar\u00e0 la combinaci\u00f3 per obrir-la. Si no encertem, se'ns mostrar\u00e0 el missatge \"Ho sento, aquesta no \u00e9s la combinaci\u00f3\" i si encertem se'ns dir\u00e0 \"La caixa forta s'ha obert satisfact\u00f2riament\". Tindrem quatre oportunitats per obrir la caixa forta.</p><p>\u270f\ufe0f   EXERCICI 49 Mostra la taula de multiplicar d'un nombre introdu\u00eft per teclat. El resultat s'ha de mostrar en una taula (&lt;table&gt; en HTML).</p><p>\u270f\ufe0f   EXERCICI 50 Realitza un programa que ens digui quants d\u00edgits t\u00e9 un n\u00famero introdu\u00eft per teclat.</p><p>\u270f\ufe0f   EXERCICI 51 Escriu un programa que calculi la mitjana d'un conjunt de nombres positius introdu\u00efts per teclat. A priori, el programa no sap quants n\u00fameros s'introduiran. L'usuari indicar\u00e0 que ha acabat d'introduir les dades quan meta un n\u00famero negatiu.</p><p>\u270f\ufe0f   EXERCICI 52 Escriu un programa que mostri en tres columnes, el quadrat i el cubell dels 5 primers nombres sencers a partir d'un que s'introdueix per teclat.</p><p>\u270f\ufe0f   EXERCICI 53 Escriu un programa que mostri els n primers termes de la s\u00e8rie de Fibonacci. El primer terme de la s\u00e8rie de Fibonacci \u00e9s 0, el segon \u00e9s 1 i la resta es calcula sumant els dos anteriors, per la qual cosa haur\u00edem de ser 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144... El n\u00famero n s'ha d'introduir per teclat.</p><p>\u270f\ufe0f   EXERCICI 54 Escriu un programa que llegeixi una llista de deu n\u00fameros i determini quants s\u00f3n positius, i quants s\u00f3n negatius.</p><p>\u270f\ufe0f   EXERCICI 55 Escriu un programa que demani una base i un exponent (sencer positiu) i que calculi la pot\u00e8ncia.</p><p>\u270f\ufe0f   EXERCICI 56 Escriu un programa que donats dos n\u00fameros, un de real (base) i un sencer positiu (exponent), tregui per pantalla totes les pot\u00e8ncies amb base el n\u00famero donat i exponents entre un i l'exponent introdu\u00eft. No s'han d'utilitzar funcions d'exponenciaci\u00f3. Per exemple, si introdu\u00efm el 2 i el 5, s'hauran de mostrar 2\u00b9, 2 \u00b2, 2 \u00b3, 2\u2074, 2\u2075.</p><p>\u270f\ufe0f   EXERCICI 57 Escriu un programa que digui si un n\u00famero introdu\u00eft per teclat \u00e9s o no cos\u00ed. Un n\u00famero cos\u00ed \u00e9s aquell que nom\u00e9s \u00e9s divisible entre ell mateix i la unitat.</p><p>\u270f\ufe0f   EXERCICI 58 Realitza un programa que sumi els 100 n\u00fameros seg\u00fcents a un nombre sencer i positiu introdu\u00eft per teclat. S'ha de comprovar que la dada introdu\u00efda \u00e9s correcta (que \u00e9s un nombre positiu).</p><p>\u270f\ufe0f   EXERCICI 59 Escriu un programa que obtingui els nombres enters compresos entre dos nombres introdu\u00efts per teclat i validats com a diferents, el programa ha de comen\u00e7ar pel menor dels enters introdu\u00efts i anar incrementant de 7 en 7.</p><p>\u270f\ufe0f   EXERCICI 60 Realitza un programa que pinti una pir\u00e0mide per pantalla. L'al\u00e7ada s'ha de demanar per teclat mitjan\u00e7ant un formulari. La pir\u00e0mide estar\u00e0 feta de boletes, maons o qualsevol altra imatge de les 5 que s'han de donar a elegir mitjan\u00e7ant un formulari.</p><p>\u270f\ufe0f   EXERCICI 61 Igual que l'exercici anterior per\u00f2 aquesta vegada s'ha de pintar una pir\u00e0mide fuita.</p><p>\u270f\ufe0f   EXERCICI 62 Realitza un programa que vagi demanant n\u00fameros fins que s'introdueixi un nombre negatiu i ens digui quants n\u00fameros s'han introdu\u00eft, la mitjana dels senars i el m\u00e9s gran dels parells . El nombre negatiu nom\u00e9s s'utilitza per indicar el final de la introducci\u00f3 de dades per\u00f2 no s'inclou en el c\u00f2mput.</p><p>\u270f\ufe0f   EXERCICI 63 Mostra per pantalla tots els n\u00fameros cosins entre 2 i 100, ambd\u00f3s inclosos.</p><p>\u270f\ufe0f   EXERCICI 64 Escriu un programa que permeti anar introduint una s\u00e8rie indeterminada de n\u00fameros fins que la suma d'ells superi el valor 10000. Quan aix\u00f2 \u00faltim passi, s'ha de mostrar el total acumulat, el comptador dels n\u00fameros introdu\u00efts i la mitjana.</p><p>\u270f\ufe0f   EXERCICI 65 Escriu un programa que llegeixi un n\u00famero N i imprimeixi una pir\u00e0mide de n\u00fameros amb N files com en la seg\u00fcent figura. Recorda utilitzar un tipus de lletra d'ample fix com per exemple Courier perqu\u00e8 els espais tinguin la mateixa amplada que els n\u00fameros. 1</p><p>\u270f\ufe0f   EXERCICI 66 Realitza un programa que demani un n\u00famero per teclat i que despr\u00e9s mostri aquest n\u00famero al rev\u00e9s.</p><p>\u270f\ufe0f   EXERCICI 67 Realitza un programa que demani primer un n\u00famero i a continuaci\u00f3 un d\u00edgit. El programa ens ha de donar la posici\u00f3 (o posicions) comptant d'esquerra a dreta que ocupa aquest d\u00edgit en el n\u00famero introdu\u00eft.</p><p>\u270f\ufe0f   EXERCICI 68 Escriu un programa que mostri, compti i sumi els m\u00faltiples de 3 que hi ha entre 1 i un n\u00famero llegit per teclat.</p><p>\u270f\ufe0f   EXERCICI 69 Escriu un programa que calculi el factorial d'un n\u00famero sencer llegit per teclat.</p><p>\u270f\ufe0f   EXERCICI 70 Escriu un programa que mostri per pantalla tots els n\u00fameros enters positius menors a un llegit per teclat que no siguin divisibles entre un altre tamb\u00e9 llegit de la mateixa manera.</p>"},{"location":"Moduls/DWES/exercicisisolucions/UT02PHPExercicis.html#5-matrius","title":"5. Matrius","text":"<p>\u270f\ufe0f   EXERCICI 71    Defineix tres arrays de 20 n\u00fameros sencers cadascuna, amb noms \"numero\", \"quadrat\" i \"cub\". Carrega la matriu \"numero\" amb valors aleatoris entre 0 i 100. En la matriu \"quadrat\" s'han d'emmagatzemar els quadrats dels valors que hi ha a la matriu \"numero\". En la matriu \"cub\" s'han d'emmagatzemar les pot\u00e8ncies de tres dels valors que hi ha en \"numero\". A continuaci\u00f3, mostra el contingut de les tres matrius disposades en tres columnes.</p><p>\u270f\ufe0f   EXERCICI 72    Escriu un programa que demani 10 n\u00fameros per teclat i que despr\u00e9s mostri els n\u00fameros introdu\u00efts juntament amb les paraules \"m\u00e0xim\" i \"m\u00ednim\" al costat del m\u00e0xim i del m\u00ednim respectivament.</p><p>\u270f\ufe0f   EXERCICI 73    Escriu un programa que llegeixi 15 n\u00fameros per teclat i que els emmagatzemi en una matriu. Rota els elements d'aquesta matriu, \u00e9s a dir, l' element de la posici\u00f3 0 ha de passar a la posici\u00f3 1, el de la 1 a la 2, etc. El nombre que es troba en l'\u00faltima posici\u00f3 ha de passar a la posici\u00f3 0. Finalment, mostra el contingut de la matriu.</p><p>\u270f\ufe0f   EXERCICI 74    Escriu un programa que generi 100 n\u00fameros aleatoris del 0 al 20 i que els mostri per pantalla separats per espais. El programa demanar\u00e0 llavors per teclat dos valors i a continuaci\u00f3 canviar\u00e0 totes les ocurr\u00e8ncies del primer valor pel segon en la llista generada anteriorment. Els n\u00fameros que s' han canviat han d' apar\u00e8ixer ressaltats d' un color diferent.</p><p>\u270f\ufe0f   EXERCICI 75    Realitza un programa que demani la temperatura mitjana que ha fet en cada mes d'un determinat any i que mostri a continuaci\u00f3 un diagrama de barres horitzontals amb aquestes dades. Les barres del diagrama es poden dibuixar a base de la concatenaci\u00f3 d' una imatge.</p><p>\u270f\ufe0f   EXERCICI 76    Realitza un programa que demani 8 n\u00fameros enters i que despr\u00e9s mostri aquests n\u00fameros de colors, els parells d'un color i els senars d'un altre.</p><p>\u270f\ufe0f   EXERCICI 77    Escriu un programa que generi 20 n\u00fameros sencers aleatoris entre 0 i 100 i que els emmagatzemo en una matriu. El programa ha de ser capa\u00e7 de passar tots els n\u00fameros parells a les primeres posicions de la matriu (del 0 en endavant) i tots els n\u00fameros senars a les cel\u00b7les restants. Utilitza arrays auxiliars si \u00e9s necessari.</p><p>\u270f\ufe0f   EXERCICI 78    Realitza un programa que demani 10 n\u00fameros per teclat i que els emmagatzemi en una matriu. A continuaci\u00f3 es mostrar\u00e0 el contingut d'aquesta array al costat de l'\u00edndex (0 \u2013 9) utilitzant per a aix\u00f2 una taula. Seguidament el programa passar\u00e0 els nombres primers a les primeres posicions, despla\u00e7ant la resta de n\u00fameros (els que no s\u00f3n primers) de tal manera que no se'n perdi cap. Al final s' ha de mostrar la matriu resultant. Per exemple:</p><p></p><p>\u270f\ufe0f   EXERCICI 79    Realitza un programa que demani 10 n\u00fameros per teclat i que els emmagatzemi en una matriu. A continuaci\u00f3 es mostrar\u00e0 el contingut d'aquest array al costat de l'\u00edndex (0 \u2013 9). Seguidament el programa demanar\u00e0 dues posicions a les quals anomenarem \"inicial\" i \"final\". S'ha de comprovar que inicial \u00e9s menor que final i que ambd\u00f3s n\u00fameros estan entre 0 i 9. El programa haur\u00e0 de col\u00b7locar el n\u00famero de la posici\u00f3 inicial en la posici\u00f3 final, rotant la resta de n\u00fameros perqu\u00e8 no se'n perdi cap. Al final s'ha de mostrar la matriu resultant.</p><p></p><p></p><p>\u270f\ufe0f   EXERCICI 80    Realitza un programa que esculli a l'atzar 10 cartes de la baralla espanyola i que digui quants punts sumen segons el joc de la brisca. Empra una matriu associativa per obtenir els punts a partir del nom de la figura de la carta. Assegura't que no es repeteix cap carta, igual que si les hagu\u00e9ssim agafat d'una baralla de veritat.</p><p>\u270f\ufe0f   EXERCICI 81    Crea un mini-diccionari espanyol-angl\u00e8s que contingui, almenys, 20 paraules (amb la seva traducci\u00f3). Utilitza una matriu associativa per emmagatzemar les parelles de paraules. El programa demanar\u00e0 una paraula en espanyol i donar\u00e0 la corresponent traducci\u00f3 en angl\u00e8s.</p><p>\u270f\ufe0f   EXERCICI 82    Realitza un programa que esculli a l'atzar 5 paraules en espanyol del mini-diccionari de l'exercici anterior. El programa demanar\u00e0 que l'usuari teclegi la traducci\u00f3 a l'angl\u00e8s de cadascuna de les paraules i comprovar\u00e0 si s\u00f3n correctes. Al final, el programa haur\u00e0 de mostrar quantes respostes s\u00f3n v\u00e0lides i quantes err\u00f2nies.</p><p>\u270f\ufe0f   EXERCICI 83    Omple una matriu bidimensional de 6 files per 9 columnes amb nombres enters positius compresos entre 100 i 999 (ambd\u00f3s inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no se'n pot repetir cap. Mostra a continuaci\u00f3 per pantalla el contingut de la matriu de tal forma que es compleixin els requisits seg\u00fcents:</p><ul> <li>Els n\u00fameros de les dues diagonals on hi ha el m\u00ednim han d'apar\u00e8ixer en color verd.</li> <li>El m\u00ednim ha d'apar\u00e8ixer en color blau.</li> <li>La resta de n\u00fameros ha d'apar\u00e8ixer en color negre.</li> </ul><p>\u270f\ufe0f   EXERCICI 84    Escriu un programa que, atesa una posici\u00f3 en un tauler d'escacs, ens digui a quines caselles podria saltar un alfil que es troba en aquesta posici\u00f3. Indica\u2019l de forma gr\u00e0fica sobre el tauler amb un color diferent per a aquestes caselles on pot saltar la figura. L'alfil es mou sempre en diagonal. El tauler compta amb 64 caselles. Les columnes s'indiquen amb les lletres de la \"a\" a la \"h\" i les files s'indiquen de l'1 al 8.</p><p>\u270f\ufe0f   EXERCICI 85    Realitza un programa que sigui capa\u00e7 de rotar tots els elements d\u2019una matriu quadrada una posici\u00f3 en el sentit de les agulles del rellotge. La matriu ha de tenir 12 files per 12 columnes i ha de contenir n\u00fameros generats a l' atzar entre 0 i 100. S' ha de mostrar tant la matriu original com la matriu resultat, ambdues amb els n\u00fameros convenientment alineats.</p><p>\u270f\ufe0f   EXERCICI 86    Omple una matriu amb 50 n\u00fameros aleatoris compresos entre el 0 i el 99, i despr\u00e9s mostra-la en una llista desordenada. Per crear un n\u00famero aleatori, utilitza la funci\u00f3 'rand(inici, fi)'. Per exemple:</p><pre><code>$num = rand(0, 99)\n</code></pre><p>\u270f\ufe0f   EXERCICI 87    Prepara un formulari (html) amb un textbox que realitzi una pregunta a l'usuari.  A partir del formulari anterior, crea un programa que mostri la pregunta rebuda i generi una resposta de manera aleat\u00f2ria entre un conjunt de respostes predefinides, emmagatzemades en una matriu: Si, no, potser, clar que s\u00ed, per suposat que no, no ho tinc clar, segur, jo diria que s\u00ed, ni de conya, etc... Aquest exercici es basa en el joc de la Bolla 8 m\u00e0gica</p><p>\u270f\ufe0f   EXERCICI 88    A partir de l'exercici 86, genera una matriu aleat\u00f2ria de 33 elements amb nombres compresos entre el 0 i 100 i calcula:</p><ul> <li>El major</li> <li>El menor</li> <li>La mitjana</li> </ul><p>\u270f\ufe0f   EXERCICI 89    Omple una matriu de 100 elements de manera aleat\u00f2ria amb valors 'M' o 'F' (per exemple '[\"M\", \"M\", \"F\", \"M\", ...]`). Una vegada completat, torna a rec\u00f3rrer-la i calcula quants elements hi ha de cadascun dels valors emmagatzemant el resultat en una matriu '['M' =&gt; 44, 'F' =&gt; 66]' (no utilitzis variables per comptar les 'M' o les 'F'). Finalment, mostra el resultat per pantalla.</p><p>\u270f\ufe0f   EXERCICI 90    Mitjan\u00e7ant una matriu associativa, emmagatzema el nom i l'al\u00e7ada de 5 persones ('nom =&gt;'al\u00e7ada'). Posteriorment, recorre l' arrelament i mostra\u2019l en una taula HTML. Finalment afegeix una \u00faltima fila a la taula amb l'al\u00e7ada mitjana.</p><p>\u270f\ufe0f   EXERCICI 91    Mitjan\u00e7ant una matriu bidimensional, emmagatzema el nom, al\u00e7ada i email de 5 persones. Per a aix\u00f2, crea una matriu de persones, sent cada persona una matriu associativa: '[ ['nom'=&gt;'Tofol', 'altura'=&gt;182, 'email'=&gt;'tofol@correu.com'],[...],... ]' Posteriorment, recorre la matriu i mostra-la en una taula HTML.</p><p>\u270f\ufe0f   EXERCICI 92    Omple una matriu bidimensional de 6 files per 9 columnes amb n\u00fameros aleatoris compresos entre 100 i 999 (ambd\u00f3s inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no se'n pot repetir cap.  Mostra a continuaci\u00f3 per pantalla el contingut de la matriu de tal forma que:</p><ul> <li>La columna del m\u00e0xim ha d'apar\u00e8ixer en blau.</li> <li>La fila del m\u00ednim ha d'apar\u00e8ixer en verd</li> <li>La resta de n\u00fameros han d'apar\u00e8ixer en negre.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/UT02PHPExercicis.html#6-funcions","title":"6. Funcions","text":"<p>\u270f\ufe0f   EXERCICI 93    Crea les seg\u00fcents funcions:</p><ul> <li>Una funci\u00f3 que esbrini si un n\u00famero \u00e9s parell: 'esParell(int $num): bool' </li> <li>Una funci\u00f3 que retorni una matriu de mida '\\(tam' amb n\u00fameros aleatoris compr\u00e8s entre '\\)min' i '$max' : 'arrayAleatori(int $tam, int $min, int $max) : array' </li> <li>Una funci\u00f3 que rebi un '\\(array' per refer\u00e8ncia i retorni la quantitat de n\u00fameros parells que hi ha emmagatzemats:  'arrayParells(array &amp;\\)array): int'</li> </ul><p>\u270f\ufe0f   EXERCICI 94    Crea les funcions seg\u00fcents:</p><ul> <li>Una funci\u00f3 que retorni el m\u00e9s gran de tots els n\u00fameros rebuts com a par\u00e0metres: 'function major(): int'. Utilitza les funcions 'func_get_args()', etc... No pots fer servir la funci\u00f3 'max()'.    </li> <li>Una funci\u00f3 que concateni tots els par\u00e0metres rebuts separant-los amb un espai: 'function concatenar(...$paraules) : string'. Utilitza l'operador '...'.</li> </ul><p>\u270f\ufe0f   EXERCICI 95    Afegeix les seg\u00fcents funcions:</p><ul> <li>'digits(int $num): int' \u2192 retorna la quantitat de d\u00edgits d'un n\u00famero.    </li> <li>'digitN(int $num, int \\(pos): int' \u2192 retorna el d\u00edgit que ocupa, comen\u00e7ant per l'esquerra, la posici\u00f3 '\\)pos'.    </li> <li>'llevaPerDarrera(int $num, int \\(quant): int' \u2192 li treu per darrere (dreta) '\\)quant' d\u00edgits.    </li> <li> <p>'llevaPerDavant(int $num, int \\(quant): int' \u2192 li treu per davant (esquerra) '\\)quant' d\u00edgits.</p> <p>Per provar les funcions, fes \u00fas tant de pas d'arguments posicionals com arguments amb nom.</p> </li> </ul><p>\u270f\ufe0f   EXERCICI 96    Crea un arxiu amb funcions per sumar, restar, multiplicar i dividir dos n\u00fameros.</p><p>\u270f\ufe0f   EXERCICI 97    Fent \u00fas d'una matriu que emmagatzemi el nom de les funcions de l'arxiu anterior, a partir de dos n\u00fameros rebuts per URL, recorre la matriu i invoca les funcions de manera din\u00e0mica fent \u00fas de funcions variable.</p><p>\u270f\ufe0f   EXERCICI 98    Crea una biblioteca amb dues funcions:</p><ul> <li>pessetes2euros: passa de pessetes a euros </li> <li>euros2pesetes: passa d'euros a pessetes </li> </ul><p>Cada funci\u00f3 ha de rebre dos par\u00e0metres:</p><ul> <li>La quantitat a transformar </li> <li>La cotitzaci\u00f3, amb un par\u00e0metre per defecte amb el factor de transformaci\u00f3.</li> </ul><p>\u270f\ufe0f   EXERCICI 99    Utilitza l\u2019exercici98 i prova les funcions passant tant les quantitats amb la cotitzaci\u00f3 per defecte, com amb noves cotitzacions. Recorda que 1 euro s\u00f3n/eren 166.360 pessetes.</p><p>\u270f\ufe0f   EXERCICI 100   Despr\u00e9s de llegir les dades del tiquet de compra, enumera en una taula els productes, amb el seu preu en euros i pessetes, i finalment, en una \u00faltima fila, totalitzar en ambdues monedes.</p>"},{"location":"Moduls/DWES/exercicisisolucions/UT02PHPExercicis.html#7-funcions-predefinides","title":"7. Funcions predefinides","text":"<p>Tots els exercicis s'han de realitzar creant noves funcions per encapsular el codi. A m\u00e9s de la pr\u00f2pia funci\u00f3, l'exercici ha de contenir codi per poder provar-ho.</p><p>\u270f\ufe0f   EXERCICI 101   Llegeix una frase i en retorna una de nova amb nom\u00e9s els car\u00e0cters de les posicions senars. (exercici101frasesenars.php)</p><p>\u270f\ufe0f   EXERCICI 102   A partir d'una frase, retorna la quantitat de cadascuna de les vocals, i el total d' elles. (exercici102vocals.php)</p><p>\u270f\ufe0f   EXERCICI 103   A partir d'una frase amb paraules nom\u00e9s separades per espais, retornar: *   Lletres totals i quantitat de paraules  *   Una l\u00ednia per cada paraula indicant la seva mida (exercici103analitzador.php)</p><ul> <li>Nota: no es pot fer servir <code>str_word_count</code></li> </ul><p>\u270f\ufe0f   EXERCICI 104   Investiga que fa la funci\u00f3 <code>str_word_count</code>, i torna a fer l'exercici 103.(exercici104analitzadorwc.php):</p><p>\u270f\ufe0f   EXERCICI 105   EsCrIu UnA fUnCi\u00d3 qUe TrAnSfOrMi UnA cAdEnA eN cAnI (exercici105cani.php) {millor no utilitzar les funmcions str_replace i str_split)</p><p>\u270f\ufe0f   EXERCICI 106   Escriu una funci\u00f3 que retorni un boole\u00e0 indicant si una paraula \u00e9s pal\u00edndroma (es llegeix igual d'esquerra a dreta que de dreta a esquerra, per exemple, \" A la galera far\u00e8 la gala\" o \u201cL\u00facid, ir\u00f2nic, i no ridicul\u201d, en espanyol podr\u00edem tenir \u201cA Luci le pasa la pel\u00edcula\u201d i en angl\u00e8s \u201cA dog! A panic in a pagoda!\u201d). (exercici106palindrom.php)</p><p>\u270f\ufe0f   EXERCICI 107   Utilitzant les funcions per treballar amb car\u00e0cters, a partir d'una cadena i un despla\u00e7ament (exercici107codificar.php) :</p><ul> <li>Si el despla\u00e7ament \u00e9s 1, substitueix la A per B, la B per C, etc.</li> <li>El despla\u00e7ament no pot ser negatiu</li> <li>Si se surt de l'abecedari, ha de tornar a comen\u00e7ar</li> <li>Cal respectar els espais, punts i comes.</li> </ul><p>\u270f\ufe0f   EXERCICI 108   Crea un programa que permeti a l'usuari llegir un conjunt de n\u00fameros separats per espais. (exercici108filtrat.html) El programa filtrar\u00e0 els n\u00fameros llegits per tornar a mostrar \u00fanicament els n\u00fameros parells i indicar\u00e0 quant de n\u00fameros parells hi ha. (exercici108filtrat.php) </p><pre><code>Dona\u2019m n\u00fameros:     1   4   7   9   23  10  8\nEls 3 num parells s\u00f3n:  4   10  8\n</code></pre> \u270f\ufe0f   EXERCICI 109   Investiga les seg\u00fcents funcions de cadena (explica per a qu\u00e8 serveixen mitjan\u00e7ant comentaris, i programa un petit exemple de cadascuna d'elles): <code>ucwords</code>, <code>strrev</code>, <code>str_repeat</code> y <code>md5</code>. (exercici109investiga.php)<p></p> <p>Note</p> <p>Els seg\u00fcents exercicis es basen en la generaci\u00f3 de nombres aleatoris.</p> <p>\u270f\ufe0f   EXERCICI 110   Crea una funci\u00f3 que permeti generar una lletra aleat\u00f2ria, maj\u00fascula o min\u00fascula. (exercici110generador.php)</p><p>\u270f\ufe0f   EXERCICI 111   Crea una funci\u00f3 que a partir d'una mida, generi una contrasenya aleat\u00f2ria composta de lletres i d\u00edgits de manera aleat\u00f2ria. (exercici111generaContrasenya.php)</p>"},{"location":"Moduls/DWES/exercicisisolucions/UT03PHPPOOExercicis.html","title":"Activitats","text":""},{"location":"Moduls/DWES/exercicisisolucions/UT03PHPPOOExercicis.html#exercicis-php-orientat-a-objectes","title":"Exercicis PHP Orientat a objectes","text":"<p>\u270f\ufe0f   EXERCICI 112   (<code>exercici112Empleat.php</code>): Crea una classe Empleat amb el seu nom, llinatges i sou. Encapsula les propietats mitjan\u00e7ant <code>getters/setters</code> i afegeix m\u00e8todes per a:</p> <ul> <li>Obtenir el seu nom complet \u2192 getNomComplet(): string</li> <li>Que retorni un boole\u00e0 indicant si ha de pagar o no impostos (es paguen quan el sou \u00e9s superior a 3333\u20ac) \u2192 hadePagarImpostos(): bool</li> </ul> <p>\u270f\ufe0f   EXERCICI 113 (<code>exercici113EmpleatTelefons.php</code>): Copia la classe de l'exercici 112 i modifica-la. Afegeix una propietat privada que emmagatzemi una matriu de n\u00fameros de tel\u00e8fons. Afegeix els m\u00e8todes seg\u00fcents:</p> <ul> <li><code>public function afegirTelefon(int $telefo) : void</code> \u2192 Afegeix un tel\u00e8fon a la matriu</li> <li><code>public function llistarTelefons(): string</code> \u2192 Mostra els tel\u00e8fons separats per comes</li> <li><code>public function buidarTelefons(): void</code> \u2192 Elimina tots els tel\u00e8fons</li> </ul> <p>\u270f\ufe0f   EXERCICI 114 (<code>exercici114EmpleatConstructor.php</code>): Copia la classe de l'exercici 113 i modifica-la. Elimina els setters de <code>nom</code> i <code>llinatges</code>, de manera que aquestes dades s'assignin mitjan\u00e7ant el constructor (utilitza la sintaxi de PHP7). Si el constructor rep un tercer par\u00e0metre, ser\u00e0 el sou del <code>Empleat</code>. Si no, se li assignaran 1000\u20ac com a sou inicial.</p> <p><code>exercici114EmpleatConstructor8.php</code>: Modifica la classe i utilitza la sintaxi del PHP 8 de promoci\u00f3 de les propietats del constructor.</p> <p>\u270f\ufe0f   EXERCICI 115 (<code>exercici115EmpleatConstant.php</code>): Copia la classe de l'exercici 114 i modifica-la. Afegeix una constant <code>SOU_MAXIM</code> amb el valor del sou que ha de pagar impostos, i modifica el codi per utilitzar la constant.</p> <p>\u270f\ufe0f   EXERCICI 116 (<code>exercici116EmpleatSou.php</code>):Copia la classe de l'exercici 115 i modifica-la. Canvia la constant per una variable est\u00e0tica <code>souMaxim</code>, de manera que mitjan\u00e7ant <code>getter/setter</code> puguis modificar el seu valor.</p> <p>\u270f\ufe0f   EXERCICI 117 (<code>exercici117EmpleatStatic.php</code>: Copia la classe de l'exercici 116 i modifica-la.      Completa el m\u00e8tode seg\u00fcent amb una cadena HTML que mostri les dades d'un empleat dins d'un par\u00e0graf i tots els tel\u00e8fons mitjan\u00e7ant una llista ordenada (per a aix\u00f2, haur\u00e0s de crear un getter per als tel\u00e8fons):</p> <ul> <li><code>public static function toHtml(Empleat $emp): string</code></li> </ul> <p>\u270f\ufe0f   EXERCICI 118 (<code>exercici118Persona.php</code>): Copia la classe de l'exercici anterior a <code>exercici118Empleat.php</code> i modif\u00edcala.</p> <p>Crea una classe Persona que sigui pare d'Empleat, de manera que Persona contingui el nom i els cognoms, i en Empleat quedi el salari i els tel\u00e8fons.</p> Exercici 118 <p>\u270f\ufe0f   EXERCICI 119 (<code>exercici119PersonaH.php</code>): Copia les classes de l'exercici anterior i modif\u00edcales. Crea en Persona el m\u00e8tode est\u00e0tic toHtml(Persona $p), i modifica en Empleat el mateix m\u00e8tode toHtml(Persona $p), per\u00f2 canvia la funci\u00f3 perqu\u00e8 rebi una Persona com a par\u00e0metre. Per accedir a les propietats de l'empleat amb la persona que rebem com a par\u00e0metre, comprovarem el seu tipus:</p> <pre><code>&lt;?php\nclass Empleat extends Persona {\n    /// reste del codi\n\n\n    public static function toHtml(Persona $p): string {\n        if ($p instanceof Empleat) {\n            // Aqui ja podem accedir a les propietats i m\u00e8todes d'Empleat\n        }\n    }\n}\n</code></pre> <p>\u270f\ufe0f   EXERCICI 120 (<code>exercici120PersonaE.php</code>): Copia les classes de l'exercici anterior i modif\u00edcales. Afegeix en <code>Persona</code> un atribut <code>edat</code> A l'hora de saber si un empleat ha de pagar impostos, ho far\u00e0 sempre que tingui m\u00e9s de 21 anys i depengui del valor del seu sou. Modifica tot el codi necessari per mostrar i/o editar l'edat quan sigui necessari.</p> <p>\u270f\ufe0f   EXERCICI 121 (<code>exercici121PersonaS.php</code>): Copia les classes de l'exercici anterior i modif\u00edcales. Afegeix nous m\u00e8todes que facin una representaci\u00f3 de totes les propietats de les classes Persona i Empleat, de forma similar als realitzats en HTML, per\u00f2 sense que siguin est\u00e0tics, de manera que obtingui les dades mitjan\u00e7ant <code>$this</code>.</p> <p><code>function public __toString(): string</code></p> <p>Magic methods</p> <p>El m\u00e8tode<code>__toString()</code> \u00e9s un m\u00e8tode m\u00e0gic que s'invoca autom\u00e0ticament quan volem obtenir la representaci\u00f3 en cadena d'un objecte.</p> <p>\u270f\ufe0f   EXERCICI 122 (<code>exercici122PersonaA.php</code>): Copia les classes de l'exercici anterior i modif\u00edcales.      Transforma <code>Persona</code> a una classe abstracta on el seu m\u00e8tode est\u00e0tic <code>toHtml(Persona $p)</code> hagi de ser redefinit en tots els seus fills.</p> <p>\u270f\ufe0f   EXERCICI 123 (<code>exercici123Treballador.php</code>): Copia les classes de l'exercici anterior i modif\u00edcales.</p> <ul> <li>Canvia l'estructura de classes conforme al gr\u00e0fic respectant tots els m\u00e8todes que ja estan fets.</li> <li><code>Treballador</code> \u00e9s una classe abstracta que ara emmagatzema els <code>telefons</code> i on <code>calcularSou</code> \u00e9s un m\u00e8tode abstracte de manera que:</li> <li>El sou d'un <code>Empleat</code> es calcula a partir de les hores treballades i el que cobra per hora.</li> <li>Per als <code>Gerent</code>s, el seu sou s'incrementa percentualment en base a la seva edat: <code>salari + salari*edat/100</code></li> </ul> Exercici 123 <p>\u270f\ufe0f   EXERCICI 124 (<code>exercici124Empresa.php</code>): Utilitzant les classes dels exercicis anteriors:</p> <ul> <li>Crea una classe <code>Empresa</code> que a m\u00e9s del nom i la direcci\u00f3, contingui una propietat amb un vector de <code>Treballador</code>, ja siguin <code>Empleat</code>s o <code>Gerent</code>s.</li> <li>Afegeix getters/setters per al nom i adre\u00e7a.</li> <li>Afegeix m\u00e8todes per afegir i llistar els treballadors.</li> <li><code>public function afegirTreballador(Treballador $t)</code></li> <li><code>public function llistarTreballadorsHtml() : string</code> -&gt; utiliza <code>Treballador::toHtml(Persona $p)</code></li> <li>Afegeix un m\u00e8tode per obtenir el cost total en n\u00f2mines.</li> <li><code>public function getCostNomines(): float</code> -&gt; recorre els treballadors i invoca el m\u00e8tode 'calcularSou()'.</li> </ul> <p>\u270f\ufe0f   EXERCICI 125 (<code>exercici125EmpresaI.php</code>): Copia les classes de l'exercici anterior i modif\u00edcales.</p> <ul> <li>Crea un interf\u00edcie JSerialitzable, de manera que ofereixi els m\u00e8todes:</li> <li><code>toJSON(): string</code> \u2192 utilitza la funci\u00f3 <code>json_encode(mixed)</code>. Tingues en compte que com que tenim les propietats dels objectes privats, has de rec\u00f3rrer les propietats i col\u00b7locar-les en un mapa. Per exemple:</li> </ul> <p></p><pre><code>&lt;?php\npublic function toJSON(): string {\n    foreach ($this as $clau =&gt; $valor) {\n        $mapa-&gt;$clau = $valor;\n    }\n    return json_encode($mapa);\n}\n?&gt;\n</code></pre> * <code>toSerialize(): string</code> \u2192 utilitza la funci\u00f3 <code>serialize(mixed)</code> * Modifica totes les classes que no s\u00f3n abstractes perqu\u00e8 implementin l'interf\u00edcie creat.<p></p> Projecte Videoclub <p>En els seg\u00fcents exercicis simularem un petit projecte d'un Videoclub (basat en la proposta que fa el tutorial de desarrolloweb.com), el qual realitzarem mitjan\u00e7ant un desenvolupament incremental i seguint la pr\u00e0ctica de programaci\u00f3 en parelles (pair programming).</p> <p>Abans de res, crea un repositori privat a GitHub i puja el projecte actual de Videoclub. Un cop creat, convida el teu company al repositori com a col\u00b7laborador.</p> <ul> <li>Inicialitza en local el teu repostori de git, mitjan\u00e7ant <code>git init</code></li> <li>Afegeix i puja els canvis al teu repositori, mitjan\u00e7ant <code>git add .</code> i despr\u00e9s <code>git commit -m 'Inicialitzant projecte'.</code></li> <li>Connecta el teu repositori amb GitHub i puja els canvis (mira les instruccions de GitHub: ordres <code>git remote</code> y <code>git push</code>).</li> <li>El teu company haur\u00e0 de descarregar el projecte amb les seves credencials.</li> </ul> <p>Projecte no real</p> <p>El seg\u00fcent projecte est\u00e0 pensat des d'un punt de vista formatiu. Algunes de les decisions que es prenen no s'han de fer servir (com fer <code>echo</code>, dins de les classes) o provar el codi comparant el resultat al navegador.</p> <p>Cada classe ha d'anar en un arxiu php separat. Per facilitar la seva implementaci\u00f3, es mostra l'estructura UML del model i un fragment de codi per provar les classes:</p> <p></p> Cream el soport <p></p> <p>\u270f\ufe0f   EXERCICI 126. Crea una classe per emmagatzemar suports (<code>Soport.php</code>). Aquesta classe ser\u00e0 la classe pare dels diferents suports amb els quals treballi el nostre videoclub (cintes de v\u00eddeo, videojocs, etc...):</p> <ul> <li>Crea el constructor que inicialitzi les seves propietats. Fixeu-vos que la classe no t\u00e9 m\u00e8todes setters.</li> <li>Definir una constant mitjan\u00e7ant una propietat privada i est\u00e0tica anomenada <code>IVA</code> amb un valor del 21%</li> <li>Crear un arxiu ('inici.php') per usar les classes i copia el seg\u00fcent fragment:</li> </ul> Codi de provaNavegador <pre><code>&lt;?php\ninclude \"Soport.php\";\n\n$soport1=new Soport(\"Tenet\", 22, 3);\necho \"&lt;strong&gt;\" . $soport1-&gt;titol . \"&lt;/strong&gt;\";\necho \"&lt;br&gt;Preu: \" . $soport1-&gt;getPreu() . \" euros\";\necho \"&lt;br&gt;Preu IVA inclos: \" . $soport1-&gt;getPreuAmbIva() . \" euros\";\n$soport1-&gt;mostraResum();\n</code></pre> <p></p><pre>Tenet\nPreu: 3 euros\nPreu IVA inclos: 3.48 euros\nTenet\n3 \u20ac (IVA no inclos)\n</pre><p></p> <p></p> Afegim cinta de video <p></p> <p>\u270f\ufe0f   EXERCICI 127. Crea la classe <code>CintaVideo</code> la qual hereta de <code>Soport</code>. Afegeix l'atribut <code>durada</code> sobreescriu tant el contructor com el m\u00e8tode <code>mostraResum</code> (des de <code>CintaVideo</code> haur\u00e0s d'invocar al m\u00e8tode <code>mostraResum</code> del pare).</p> <p>Afegeix a 'inici.php' el codi per provar la classe:</p> Codi de provaNavegador <pre><code>&lt;?php\ninclude \"CintaVideo.php\";\n\n$laMevaCinta = new CintaVideo(\"Los cazafantasmas\", 23, 3.5, 107);\necho \"&lt;strong&gt;\" . $laMevaCinta-&gt;titol . \"&lt;/strong&gt;\";\necho \"&lt;br&gt;Preu: \" . $laMevaCinta-&gt;getPreu() . \" euros\";\necho \"&lt;br&gt;Preu IVA inclos: \" . $laMevaCinta-&gt;getPreuAmbIva() . \" euros\";\n$laMevaCinta-&gt;mostraResum();\n</code></pre> <p></p><pre> Los cazafantasmas\n Preu: 3.5 euros\n Preu IVA inclos: 4.06 euros\n Pel\u00b7L\u00edcula en VHS:\n Los cazafantasmas\n 3.5 \u20ac (IVA no inclos)\n Durada: 107 minutos\n </pre><p></p> <p></p> <p></p> <p></p> <p></p> Afegim DVD <p></p> <p>\u270f\ufe0f   EXERCICI 128. Crea la classe <code>DVD</code> la qual hereta de <code>Soport</code>. Afegeix els atributs <code>idiomes</code> i <code>formatPantalla</code>. A continuaci\u00f3 sobreescriu tant el contructor com el m\u00e8tode <code>mostraResum</code>.</p> <p>Afegeix a 'inici.php' el codi per provar la classe:</p> Codi de provaNavegador <pre><code>&lt;?php\ninclude \"Dvd.php\";\n\n$elMeuDvd = new Dvd(\"Origen\", 24, 15, \"es,en,fr\", \"16:9\");\necho \"&lt;strong&gt;\" . $elMeuDvd-&gt;titol . \"&lt;/strong&gt;\";\necho \"&lt;br&gt;Preu: \" . $elMeuDvd-&gt;getPreu() . \" euros\";\necho \"&lt;br&gt;Preu IVA inclos: \" . $elMeuDvd-&gt;getPreuAmbIva() . \" euros\";\n$elMeuDvd-&gt;mostraResum();\n</code></pre> <p></p><pre>Origen\nPreu: 15 euros\nPreu IVA inclos: 17.4 euros\nPel\u00b7L\u00edcula en DVD:\nOrigen\n15 \u20ac (IVA no inclos)\nIdiomes:es,en,fr\nFormat Pantalla:16:9\n</pre><p></p> <p></p> <p></p> <p></p> <p></p> Afegim Joc <p></p> <p>\u270f\ufe0f   EXERCICI 129. Crea la classe <code>Joc</code> la qual hereta de <code>Soport</code>. Afegeix els atributs <code>consola</code>, <code>minNumJugadors</code> y <code>maxNumJugadors</code>. A continuaci\u00f3 afegeix el m\u00e8tode <code>mostraJugadorsPossibles</code>, el qual ha de mostrar Per a un jugador, Per a X jugadors o De X a Y jugadors depenent dels valors de les atributs creats. Finalment, sobreescriu tant el contructor com el m\u00e8tode <code>mostraResum</code>.</p> <p>Afegeix a 'inici.php' el codi per provar la classe:</p> Codi de provaNavegador <pre><code>&lt;?php\ninclude \"Joc.php\";\n\n$elMeuJoc = new Joc(\"The Last of Us Part II\", 26, 49.99, \"PS4\", 1, 1);\necho \"&lt;strong&gt;\" . $elMeuJoc-&gt;titol . \"&lt;/strong&gt;\";\necho \"&lt;br&gt;Preu: \" . $elMeuJoc-&gt;getPreu() . \" euros\";\necho \"&lt;br&gt;Preu IVA inclos: \" . $elMeuJoc-&gt;getPreuAmbIva() . \" euros\";\n$elMeuJoc-&gt;mostraResum();\n</code></pre> <p></p><pre>Joc per PS4: The Last of Us Part II\n49.99 \u20ac (IVA no inclos)\nPer a 1 jugadorThe Last of Us Part II`\nPreu: 49.99 euros\nPreu IVA inclos: 60.4879 euros\nJoc per PS4: The Last of Us Part II\n49.99 \u20ac (IVA no inclos)\nPer a 1 jugador\n</pre><p></p> <p>Arribats a aquest punt, el nostre model \u00e9s similar al seg\u00fcent diagrama:</p> <p></p> Model inicial de Videoclub <p></p> <p></p> Afegim Client <p></p> <p>\u270f\ufe0f   EXERCICI 130. Crear la classe <code>Client</code>. El constructor rebr\u00e0 el <code>nom</code>, <code>numero</code> y <code>maxLloguerConcurrent</code>, aquest \u00faltim podent ser opcional i prenent com a valor per defecte 3. Despr\u00e9s d'aix\u00f2, afegeix getter/setter \u00fanicament a <code>numero</code>, i un getter a <code>numSoportsLlogats</code> (aquest camp ha d'emmagatzemar un comptador del total de lloguers que ha realitzat). La matriu de soports llogats contindr\u00e0 classes que heretin de <code>Soport</code>. Finalment, afegeix el m\u00e8tode <code>mostraResum</code> que mostri el nom i la quantitat de lloguers (tamany de la matriu <code>soportsLlogats</code>).</p> <p>\u270f\ufe0f   EXERCICI 131. Dins de <code>Client</code>, afegeix les operacions seg\u00fcents:</p> <ul> <li><code>teLlogat(Soport $s): bool</code> \u2192 Recorre el vector de soports i comprova si hi ha el soport</li> <li><code>llogar(Soport $s): bool</code> -\u2192 Ha de comprovar si el soport est\u00e0 llogat i si no ha superat la quota de lloguers. En llogar, incrementar\u00e0 el <code>numSoportsLlogats</code> i emmagatzemar\u00e0 el soport al vector. Per cada cas ha de mostrar un missatge informant de l'ocorregut.</li> </ul> <p>\u270f\ufe0f   EXERCICI 132. Seguim amb <code>Client</code> per afegir les operacions:</p> <ul> <li><code>tornar(int $numSoport): bool</code> \u2192 Ha de comprovar que el soport estava llogat i actualitzar la quantitat de soports llogats. Per cada cas ha de mostrar un missatge informant de l'ocorregut</li> <li><code>llistarLloguers(): void</code> \u2192 Informa de quants lloguers t\u00e9 el client i els mostra.</li> </ul> <p>Crea l'arxiu <code>inici2.php</code> amb el seg\u00fcent codi font per provar la classe:</p> Codi de provaNavegador <pre><code>&lt;?php\ninclude_once \"CintaVideo.php\";\ninclude_once \"Dvd.php\";\ninclude_once \"Joc.php\";\ninclude_once \"Client.php\";\n\n//instanciam un parell d'objectes client\n$client1 = new Client(\"Bruce Wayne\", 23);\n$client2 = new Client(\"Clark Kent\", 33);\n\n//mostrem el n\u00famero de cada client creat\necho \"&lt;/br&gt;L'identificador del client 1 \u00e9s: \" . $client1-&gt;getNumero();\necho \"&lt;/br&gt;L'identificador del client 2 \u00e9s: \" . $client2-&gt;getNumero();\necho \"&lt;/br&gt;\";\n//instancio alguns soports\n$soport1 = new CintaVideo(\"Los cazafantasmas\", 23, 3.5, 107);\necho \"&lt;/br&gt;\";\n$soport2 = new Joc(\"The Last of Us Part II\", 26, 49.99, \"PS4\", 1, 1);\necho \"&lt;/br&gt;\";\n$soport3 = new Dvd(\"Origen\", 24, 15, \"es,en,fr\", \"16:9\");\necho \"&lt;/br&gt;\";\n$soport4 = new Dvd(\"El Imperio Contraataca\", 4, 3, \"es,en\",\"16:9\");\necho \"&lt;/br&gt;\";\n//Llog alguns soports\n$client1-&gt;llogar($soport1);\n$client1-&gt;llogar($soport2);\n$client1-&gt;llogar($soport3);\n\necho \"&lt;/br&gt;\";\n//vaig intentar llogar de nou un soport que ja t\u00e9 llogat\n$client1-&gt;llogar($soport1);\n\necho \"&lt;/br&gt;\";\n//el client t\u00e9 3 soports de lloguer com a m\u00e0xim\n//aquest soport no el pot llogar\n$client1-&gt;llogar($soport4);\n\necho \"&lt;/br&gt;\";\n//aquest soport no el t\u00e9 llogat\n$client1-&gt;tornar(4);\necho \"&lt;/br&gt;\";\n//torna un soport que s\u00ed que t\u00e9 llogat\n$client1-&gt;tornar(26);\necho \"&lt;/br&gt;\";\n//llog un altre soport\n$client1-&gt;llogar($soport4);\necho \"&lt;/br&gt;\";\n//faig un llistat dels elements llogats\n$client1-&gt;llistaLlogers();\necho \"&lt;/br&gt;\";\n//aquest client no t\u00e9 lloguers\n$client2-&gt;tornar(\n</code></pre> <p></p><pre>L'identificador del client 1 \u00e9s: 23\nL'identificador del client 2 \u00e9s: 33<p></p>\n<p>Pel\u00b7l\u00edcula en VHS Los cazafantasmas\n3.5 \u20ac (IVA no inclos)\nDurada: 107 minuts</p>\n<p>Joc per PS4: The Last of Us Part II\n49.99 \u20ac (IVA no inclos)\nPer a 1 jugador</p>\n<p>Pel\u00b7l\u00edcula en DVD Origen\n15 \u20ac (IVA no inclos)\nIdiomes: es,en,fr\nFormat Pantalla: 16:9</p>\n<p>Pel\u00b7l\u00edcula en DVD El Imperio Contraataca\n3 \u20ac (IVA no inclos)\nIdiomes: es,en\nFormat Pantalla: 16:9</p>\n<p>Llogat correctament: Los cazafantasmas a client: Bruce Wayne\nLlogat correctament: The Last of Us Part II a client: Bruce Wayne\nLlogat correctament: Origen a client: Bruce Wayne</p>\n<p>Ja tens aquest suport \"Los cazafantasmas\" llogat.</p>\n<p>Has arribat al m\u00e0xim de lloguers.</p>\n<p>No tens aquest suport llogat.</p>\n<p>\"The Last of Us Part II\" Suport retornat correctament.</p>\n<p>Llogat correctament: El Imperio Contraataca a client: Bruce Wayne</p>\n<p>Bruce Wayne t\u00e9 3 lloguers:\nPel\u00b7l\u00edcula en VHS Los cazafantasmas\n3.5 \u20ac (IVA no inclos)\nDurada: 107 minuts</p>\n\n<p>Pel\u00b7l\u00edcula en DVD Origen\n15 \u20ac (IVA no inclos)\nIdiomes: es,en,fr\nFormat Pantalla: 16:9</p>\n\n<p>Pel\u00b7l\u00edcula en DVD El Imperio Contraataca\n3 \u20ac (IVA no inclos)\nIdiomes: es,en\nFormat Pantalla: 16:9</p>\n\n<p>No tens aquest suport llogat.\n</p></pre><p></p> <p>\u270f\ufe0f   EXERCICI 132. Arribat a aquest punt, anam a relacionar els clients i els soports mitjan\u00e7ant la classe <code>Videoclub</code>. Aix\u00ed doncs crea la classe que representa el gr\u00e0fic, tenint en compte que:</p> <ul> <li><code>products</code> \u00e9s un array de <code>Soport</code></li> <li><code>socis</code> \u00e9s un array de <code>Client</code></li> <li>Els m\u00e8todes p\u00fablics d'incloure algun soport, crearan la classe i cridaran al m\u00e8tode privat de <code>incloureProducte</code>, el qual \u00e9s l'encarregat d'introduir-lo dins el vector.</li> </ul> <p>El model complet es semblar\u00e0 a aix\u00f2:</p> <p></p> Model complet de Videoclub <p></p> <p>I per provar el projecte, dins <code>inici3.php</code> col\u00b7locarem:</p> Codi de provaNavegador <pre><code>&lt;?php\ninclude_once \"Videoclub.php\"; // No incloem res m\u00e9s\n\n$vc = new Videoclub(\"Cas Concos 45 baixos\");\n\n//inclour\u00e9 uns quants soports de prova\n$vc-&gt;incloureJoc(\"God of War\", 19.99, \"PS4\", 1, 1);\n$vc-&gt;incloureJoc(\"The Last of Us Part II\", 49.99, \"PS4\", 1, 1);\n$vc-&gt;incloureDvd(\"Torrente\", 4.5, \"es\",\"16:9\");\n$vc-&gt;incloureDvd(\"Origen\", 4.5, \"es,en,fr\", \"16:9\");\n$vc-&gt;incloureDvd(\"El Imperio Contraataca\", 3, \"es,en\",\"16:9\");\n$vc-&gt;incloureCintaVideo(\"Los cazafantasmas\", 3.5, 107);\n$vc-&gt;incloureCintaVideo(\"El nombre de la Rosa\", 1.5, 140);\n\n//llist els productes\n$vc-&gt;llistarProductes();\necho \"&lt;/br&gt;\";\n//crear\u00e9 alguns socis\n$vc-&gt;incloureSoci(\"Tofol Verdera\", 2);\n$vc-&gt;incloureSoci(\"Biel Calafell\");\necho \"&lt;/br&gt;\";\n$vc-&gt;llogarSociProducte(1,2);\n$vc-&gt;llogarSociProducte(1,3);\n// llogar una altra vegada el soport 2 al soci 1.\n// no ha de deixar-me perqu\u00e8 ja el t\u00e9 llogat\n$vc-&gt;llogarSociProducte(1,2);\n// llogar el soport 6 al soci 1.\n// no es pot perqu\u00e8 el soci 1 t\u00e9 2 lloguers com a m\u00e0xim\n$vc-&gt;llogarSociProducte(1,6);\n\n// llist els socis\n$vc-&gt;llistarSocis();\n</code></pre> <p></p><pre>Joc per PS4: God of War\n19.99 \u20ac (IVA no inclos)\nPer a 1 jugador\n======\nIncl\u00f2s soport 1\n======\nJoc per PS4: The Last of Us Part II\n49.99 \u20ac (IVA no inclos)\nPer a 1 jugador\n======\nIncl\u00f2s soport 2\n======\nPel\u00b7l\u00edcula en DVD Torrente\n4.5 \u20ac (IVA no inclos)\nIdiomes: es\nFormat Pantalla: 16:9\n======\nIncl\u00f2s soport 3\n======\nPel\u00b7l\u00edcula en DVD Origen\n4.5 \u20ac (IVA no inclos)\nIdiomes: es,en,fr\nFormat Pantalla: 16:9\n======\nIncl\u00f2s soport 4\n======\nPel\u00b7l\u00edcula en DVD El Imperio Contraataca\n3 \u20ac (IVA no inclos)\nIdiomes: es,en\nFormat Pantalla: 16:9\n======\nIncl\u00f2s soport 5\n======\nPel\u00b7l\u00edcula en VHS Los cazafantasmas\n3.5 \u20ac (IVA no inclos)\nDurada: 107 minuts\n======\nIncl\u00f2s soport 6\n======\nPel\u00b7l\u00edcula en VHS El nombre de la Rosa\n1.5 \u20ac (IVA no inclos)\nDurada: 140 minuts\n======\nIncl\u00f2s soport 7\n======\nLlista de productes\n7 productes disponibles<p></p>\n<p>Joc per PS4: God of War\n19.99 \u20ac (IVA no inclos)\nPer a 1 jugador\nJoc per PS4: The Last of Us Part II\n49.99 \u20ac (IVA no inclos)\nPer a 1 jugador\nPel\u00b7l\u00edcula en DVD Torrente\n4.5 \u20ac (IVA no inclos)\nIdiomes: es\nFormat Pantalla: 16:9\nPel\u00b7l\u00edcula en DVD Origen\n4.5 \u20ac (IVA no inclos)\nIdiomes: es,en,fr\nFormat Pantalla: 16:9\nPel\u00b7l\u00edcula en DVD El Imperio Contraataca\n3 \u20ac (IVA no inclos)\nIdiomes: es,en\nFormat Pantalla: 16:9\nPel\u00b7l\u00edcula en VHS Los cazafantasmas\n3.5 \u20ac (IVA no inclos)\nDurada: 107 minuts\nPel\u00b7l\u00edcula en VHS El nombre de la Rosa\n1.5 \u20ac (IVA no inclos)\nDurada: 140 minuts</p>\n<p>======\nIncl\u00f2s soci Tofol Verdera amb n\u00famero 1\n======\n======\nIncl\u00f2s soci Biel Calafell amb n\u00famero 2\n======</p>\n<p>Llogat correctament: The Last of Us Part II a client: Tofol Verdera\nLlogat correctament: Torrente a client: Tofol Verdera\nJa tens aquest suport \"The Last of Us Part II\" llogat.\nHas arribat al m\u00e0xim de lloguers.\nLlista de socis</p>\n<p>Client Tofol Verdera amb 2 lloguers.\nClient Biel Calafell amb 0 lloguers.\n</p></pre><p></p> <p>\u270f\ufe0f   EXERCICI 133. Transforma <code>Soport</code> a una classe abstracta i comprova que tot continua funcionant. Qu\u00e8 aconseguim en fer-la abstracta?</p> <p>\u270f\ufe0f   EXERCICI 134. Crea un interf\u00edcie <code>Resumible</code>, de manera que les classes que l'implementin han d'oferir el m\u00e8tode <code>mostraResum()</code>. Modifica la classe <code>Soport</code> i fes que implementi l'interf\u00edcie. Fa falta que tamb\u00e9 l'implementin els fills?</p>  ??? info \"Projecte Videoclub 2.0\"       Antes de comenzar con la segunda parte del videoclub, crea una etiqueta mediante `git tag` con el nombre `v0.329` y sube los cambios a GitHub.       330. Modifica las operaciones de llogar, tanto en `Cliente` como en `Videoclub`, per dar soport al encadenamiento de m\u00e9todos.      Posteriormente, modifica el codi de prova per utilizar esta t\u00e9cnica.      331. Haciendo uso de *namespaces*:           * Coloca todas las clases/interfaces en `Dwes\\ProyectoVideoclub`           * Cada clase debe hacer `include_once` de los recursos que emplea           * Coloca el/los archivos de prueba en el ra\u00edz (sin espacio de nombres)           * Desde el archivo de pruebas, utiliza `use` per poder realizar accesos sin cualificar           * Etiqueta los cambios como `v0.331`.      332. Reorganiza las carpeta tal como hemos visto en los apuntes: `app`, `test` y `vendor`.           * Crea un fichero `autoload.php` per registrar la ruta donde encontrar las clases           * Modifica todo el c\u00f3digo necesario, incluyendo `autoload.php` donde sea necesario y borrando los *includes* previos.      333. A continuaci\u00f3n vamos a crear un conjunto de excepciones de aplicaci\u00f3n. Estas excepciones son simples, no necesitan sobreescribir ning\u00fan m\u00e9todo. As\u00ed pues, crea la excepci\u00f3n de aplicaci\u00f3n `VideoclubException` en el *namespace* `Dwes\\ProyectoVideoclub\\Util`.           Posteriormente crea los siguientes hijos (deben heredar de `VideoclubException`), cada uno en su propio archivo:           * `SoportYaAlquiladoException`           * `CupoSuperadoException`           * `SoportNoEncontradoException`           * `ClienteNoEncontradoException`      334. En `Cliente`, modifica los m\u00e9todos `llogar` y `tornar`, per que hagan uso de las nuevas excepciones (lanz\u00e1ndolas cuando sea necesario) y funcionen como m\u00e9todos encadenados. Destacar que estos m\u00e9todos, no se capturar est\u00e1s excepciones, s\u00f3lo se lanzan.           En `Videoclub`, modifica `llogarSocioPelicula` per capturar todas las excepciones que ahora lanza `Cliente` e informar al usuario en consecuencia.      335. Vamos a modificar el proyecto per que el videoclub sepa qu\u00e9 productos est\u00e1n o no alquilados:           * En `Soport`, crea una propiedad p\u00fablica cuyo nombre sea `alquilado` que inicialmente estar\u00e1 a `false`. Cuando se alquile, se pondr\u00e1 a `true`. Al tornar, la volveremos a poner a `false`.           * En `Videoclub`, crea dos nuevas propiedades y sus getters:           * `numProductosAlquilados`           * `numTotalAlquileres`      336. Crea un nuevo m\u00e9todo en `Videoclub` llamado `llogarSocioProductos(int numSocio, array numerosProductos)`, el cual debe recibir un array con los productos a llogar.Antes de llogar-los, debe comprobar que todos los soports est\u00e9n disponibles, de manera que si uno no lo est\u00e1, no se le alquile ninguno.      337. Crea dos nuevos m\u00e9todos en `Videoclub`, y mediante la definici\u00f3n, deduce qu\u00e9 deben realizar:           * `tornarSocioProducto(int numSocio, int numeroProducto)`           * `tornarSocioProductos(int numSocio, array numerosProductos)`      Deben soportar el encadenamiento de m\u00e9todos.     Recuerda actualizar la propiedad`alquilado` de los diferentes soports.       Cuando hayas realizado todos los ejercicios, crea una etiqueta mediante `git tag` con el nombre `v0.337` y sube los cambios a GitHub."},{"location":"Moduls/DWES/exercicisisolucions/prova.html","title":"Solucionari d'Exercicis","text":""},{"location":"Moduls/DWES/exercicisisolucions/prova.html#solucionari-dexercicis","title":"Solucionari d'Exercicis","text":"<p>Benvingut/da al solucionari interactiu. </p>"},{"location":"Moduls/DWES/exercicisisolucions/prova.html#que-trobaras-aqui","title":"Qu\u00e8 trobar\u00e0s aqu\u00ed","text":"<ul> <li>Exercicis progressius de PHP</li> <li>Solucions detallades amb explicacions paso a pas</li> <li>Solucionari interactiu per practicar de forma din\u00e0mica</li> <li>Recursos addicionals per aprofundir en els conceptes</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/prova.html#com-usar-aquest-solucionari","title":"Com usar aquest solucionari","text":"<ol> <li>Comen\u00e7a pels enunciats - Revisa la llista completa d'exercicis</li> <li>Intenta resoldre - Prova de fer els exercicis pel teu compte primer</li> <li>Consulta les solucions - Usa el solucionari interactiu quan necessitis ajuda</li> <li>Practica m\u00e9s - Experimenta amb variacions del codi</li> </ol>"},{"location":"Moduls/DWES/exercicisisolucions/prova.html#navegacio-rapida","title":"Navegaci\u00f3 r\u00e0pida","text":"<ul> <li> <p> Enunciats</p> <p>Consulta la llista completa dels 50 exercicis organitzats per nivells</p> <p> Veure enunciats</p> </li> <li> <p> Solucionari Interactiu</p> <p>Accedeix al solucionari interactiu amb solucions i explicacions</p> <p> Solucionari</p> </li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/prova.html#1-conceptes-basics-integracio-de-php-en-html-variables-operadors","title":"1. Conceptes b\u00e0sics: Integraci\u00f3 de PHP en HTML. Variables. Operadors","text":""},{"location":"Moduls/DWES/exercicisisolucions/prova.html#2-recollida-de-dades-per-teclat-mitjancant-formularis","title":"2. Recollida de dades per teclat mitjan\u00e7ant formularis","text":""},{"location":"Moduls/DWES/exercicisisolucions/prova.html#3-sentencia-condicional-if-i-switch","title":"3. Sent\u00e8ncia condicional (if i switch)","text":""},{"location":"Moduls/DWES/exercicisisolucions/prova.html#4-bucles","title":"4. Bucles","text":""},{"location":"Moduls/DWES/exercicisisolucions/prova.html#5-matrius","title":"5. Matrius","text":""},{"location":"Moduls/DWES/exercicisisolucions/prova.html#6-funcions","title":"6. Funcions","text":""},{"location":"Moduls/DWES/exercicisisolucions/prova.html#7-funcions-predefinides","title":"7. Funcions predefinides","text":"<p>Aquest material est\u00e0 dissenyat espec\u00edficament per als m\u00f2duls DWEC i DWES de formaci\u00f3 professional.</p>"},{"location":"Moduls/DWES/exercicisisolucions/solucionsExpressionsRegularsPHP.html","title":"Solucions exercicis expressions regulars","text":""},{"location":"Moduls/DWES/exercicisisolucions/solucionsExpressionsRegularsPHP.html#solucions-exercicis-expressions-regulars","title":"Solucions exercicis expressions regulars","text":"<p>Aqu\u00ed tens possibles solucions per als cinc exercicis amb expressions regulars en PHP:</p> Soluci\u00f3 exercici 1: Validaci\u00f3 de Correu Electr\u00f2nic <pre><code>function validarEmail($email) {\n    return preg_match('/^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,6}$/', $email);\n}\n\n// Exemple d'\u00fas\n$email = \"exemple@domini.com\";\nif (validarEmail($email)) {\n    echo \"El correu electr\u00f2nic \u00e9s v\u00e0lid.\";\n} else {\n    echo \"El correu electr\u00f2nic no \u00e9s v\u00e0lid.\";\n}\n</code></pre> Soluci\u00f3 exercici 2: Extracci\u00f3 de N\u00fameros de Tel\u00e8fon <pre><code>function extreureNumerosTelefon($text) {\n    preg_match_all('/\\(?\\d{3}\\)?[-.\\s]?\\d{3}[-.\\s]?\\d{4}/', $text, $matches);\n    return $matches[0];\n}\n\n// Exemple d'\u00fas\n$text = \"Contacta'ns al (123) 456-7890 o 123-456-7890.\";\n$numeros = extreureNumerosTelefon($text);\nprint_r($numeros);\n</code></pre> Soluci\u00f3 exercici 3: Validaci\u00f3 de Contrasenyes <pre><code>function validarContrasenya($contrasenya) {\n    return preg_match('/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&amp;*]).{8,}$/', $contrasenya);\n}\n\n// Exemple d'\u00fas\n$contrasenya = \"Exemple1!\";\nif (validarContrasenya($contrasenya)) {\n    echo \"La contrasenya \u00e9s v\u00e0lida.\";\n} else {\n    echo \"La contrasenya no \u00e9s v\u00e0lida.\";\n}\n</code></pre> Soluci\u00f3 exercici 4: Extracci\u00f3 de URLs <pre><code>function extreureURLs($text) {\n    preg_match_all('/\\b(?:https?:\\/\\/|www\\.)\\S+\\b/', $text, $matches);\n    return $matches[0];\n}\n\n// Exemple d'\u00fas\n$text = \"Visita https://www.exemple.com o www.exemple.org per m\u00e9s informaci\u00f3.\";\n$urls = extreureURLs($text);\nprint_r($urls);\n</code></pre> Soluci\u00f3 exercici 5: Substituci\u00f3 de Paraules Prohibides <pre><code>function substituirParaulesProhibides($text, $paraules_prohibides) {\n    $pattern = '/\\b(' . implode('|', $paraules_prohibides) . ')\\b/i';\n    return preg_replace($pattern, '****', $text);\n}\n\n// Exemple d'\u00fas\n$text = \"Aquest text cont\u00e9 paraules prohibides com exemple i prova.\";\n$paraules_prohibides = ['exemple', 'prova'];\n$text_nou = substituirParaulesProhibides($text, $paraules_prohibides);\necho $text_nou;\n</code></pre>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html","title":"Col\u00b7lecci\u00f3 de 50 Exercicis de JavaScript - Enunciats","text":""},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#colleccio-de-50-exercicis-de-javascript-enunciats","title":"Col\u00b7lecci\u00f3 de 50 Exercicis de JavaScript - Enunciats","text":""},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#introduccio","title":"Introducci\u00f3","text":"<p>Aquesta col\u00b7lecci\u00f3 de 50 exercicis est\u00e0 dissenyada per a estudiants que comencen amb JavaScript i volen progressar fins a un nivell intermedi. Els exercicis estan organitzats de forma progressiva, des dels conceptes m\u00e9s b\u00e0sics fins als m\u00e9s avan\u00e7ats.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#com-utilitzar-aquests-exercicis","title":"Com utilitzar aquests exercicis","text":"<ol> <li>Llegeix l'enunciat amb atenci\u00f3</li> <li>Intenta resoldre l'exercici pel teu compte primer</li> <li>Consulta el solucionari interactiu quan necessitis ajuda</li> <li>Experimenta amb variacions del codi per aprendre m\u00e9s</li> </ol>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercicis-de-nivell-basic-1-15","title":"Exercicis de Nivell B\u00e0sic (1-15)","text":""},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-1-primer-programa","title":"Exercici 1: Primer programa","text":"<p>Escriu un programa que mostri un alert amb el missatge \"Hola M\u00f3n\".</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-2-escriptura-a-la-pagina","title":"Exercici 2: Escriptura a la p\u00e0gina","text":"<p>Escriu un programa que escrigui \"Benvingut a JavaScript\" a la p\u00e0gina web utilitzant <code>document.write()</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-3-operacions-aritmetiques","title":"Exercici 3: Operacions aritm\u00e8tiques","text":"<p>Crea un programa que sumi dos n\u00fameros (per exemple, 15 + 25) i mostri el resultat per consola utilitzant <code>console.log()</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-4-variables-basiques","title":"Exercici 4: Variables b\u00e0siques","text":"<p>Declara dues variables: <code>nom</code> i <code>edat</code>. Assigna els teus valors personals i mostra'ls per consola amb un missatge personalitzat com \"Hola, em dic [nom] i tinc [edat] anys\".</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-5-entrada-de-dades","title":"Exercici 5: Entrada de dades","text":"<p>Crea un programa que demani el nom de l'usuari amb <code>prompt()</code> i el saludi amb un alert personalitzat.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-6-calculadora-simple","title":"Exercici 6: Calculadora simple","text":"<p>Demana dos n\u00fameros a l'usuari utilitzant <code>prompt()</code>, suma'ls i mostra el resultat amb un alert. Recorda utilitzar <code>parseInt()</code> o <code>parseFloat()</code> per convertir els strings a n\u00fameros.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-7-comparacio-de-numeros","title":"Exercici 7: Comparaci\u00f3 de n\u00fameros","text":"<p>Escriu un programa que demani dos n\u00fameros a l'usuari i determini quin \u00e9s el m\u00e9s gran, o si s\u00f3n iguals.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-8-paritat","title":"Exercici 8: Paritat","text":"<p>Crea un programa que demani un n\u00famero a l'usuari i determini si \u00e9s parell o senar utilitzant l'operador m\u00f2dul (%).</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-9-comptador-amb-bucle-for","title":"Exercici 9: Comptador amb bucle for","text":"<p>Escriu un bucle <code>for</code> que compti del 1 al 10 i mostri cada n\u00famero per consola.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-10-comptador-invers-amb-while","title":"Exercici 10: Comptador invers amb while","text":"<p>Utilitza un bucle <code>while</code> per comptar del 10 al 1 en ordre descendent i mostrar cada n\u00famero per consola.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-11-taula-de-multiplicar","title":"Exercici 11: Taula de multiplicar","text":"<p>Crea un programa que demani un n\u00famero a l'usuari i mostri la seva taula de multiplicar del 1 al 10.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-12-validacio-dedat","title":"Exercici 12: Validaci\u00f3 d'edat","text":"<p>Escriu un programa que demani l'edat de l'usuari i indiqui si \u00e9s menor d'edat (menor de 18 anys), adult (18-65 anys) o jubilat (m\u00e9s de 65 anys).</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-13-comptar-vocals","title":"Exercici 13: Comptar vocals","text":"<p>Crea una funci\u00f3 que rebi un text i compti quantes vocals (a, e, i, o, u) cont\u00e9. Mostra el resultat per consola.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-14-array-basic","title":"Exercici 14: Array b\u00e0sic","text":"<p>Crea un array amb els noms de 5 fruites i utilitza un bucle per mostrar cada fruita per consola amb el seu \u00edndex.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-15-suma-delements-darray","title":"Exercici 15: Suma d'elements d'array","text":"<p>Escriu un programa que tingui un array de n\u00fameros i calculi la suma de tots els seus elements.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercicis-de-nivell-intermedi-16-35","title":"Exercicis de Nivell Intermedi (16-35)","text":""},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-16-element-maxim","title":"Exercici 16: Element m\u00e0xim","text":"<p>Crea una funci\u00f3 que rebi un array de n\u00fameros i retorni el valor m\u00e0xim sense utilitzar <code>Math.max()</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-17-manipulacio-del-dom","title":"Exercici 17: Manipulaci\u00f3 del DOM","text":"<p>Crea una p\u00e0gina HTML amb un bot\u00f3. Quan es cliqui el bot\u00f3, ha de canviar el text d'un par\u00e0graf.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-18-canvi-de-colors","title":"Exercici 18: Canvi de colors","text":"<p>Escriu un programa que canvi\u00ef el color de fons d'un element <code>&lt;h1&gt;</code> quan es faci clic sobre ell.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-19-generador-de-numeros-aleatoris","title":"Exercici 19: Generador de n\u00fameros aleatoris","text":"<p>Crea un programa que generi un n\u00famero aleatori entre 1 i 100 cada vegada que es premi un bot\u00f3 i el mostri a la p\u00e0gina.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-20-calculadora-de-preus-amb-iva","title":"Exercici 20: Calculadora de preus amb IVA","text":"<p>Desenvolupa un programa que demani el preu d'un producte i el percentatge d'IVA, i calculi el preu final.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-21-validador-de-contrasenya","title":"Exercici 21: Validador de contrasenya","text":"<p>Crea una funci\u00f3 que validi si una contrasenya t\u00e9 almenys 8 car\u00e0cters i cont\u00e9 almenys una lletra maj\u00fascula i una min\u00fascula.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-22-calculadora-dimc","title":"Exercici 22: Calculadora d'IMC","text":"<p>Crea un programa que calculi l'\u00cdndex de Massa Corporal (IMC = pes / altura\u00b2) i indiqui la categoria corresponent.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-23-ordenacio-de-tres-numeros","title":"Exercici 23: Ordenaci\u00f3 de tres n\u00fameros","text":"<p>Escriu un programa que demani tres n\u00fameros i els mostri ordenats de menor a major.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-24-joc-dendevinar-numeros","title":"Exercici 24: Joc d'endevinar n\u00fameros","text":"<p>Crea un joc on l'ordinador pensi un n\u00famero entre 1 i 10, i l'usuari hagi d'endevinar-lo amb m\u00e0xim 3 intents.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-25-comptador-de-paraules","title":"Exercici 25: Comptador de paraules","text":"<p>Escriu una funci\u00f3 que compti el nombre de paraules en una frase. Les paraules estan separades per espais.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-26-calculadora-amb-funcions","title":"Exercici 26: Calculadora amb funcions","text":"<p>Crea una calculadora amb funcions separades per sumar, restar, multiplicar i dividir. Inclou validaci\u00f3 per la divisi\u00f3 per zero.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-27-array-de-numeros-parells","title":"Exercici 27: Array de n\u00fameros parells","text":"<p>Crea un programa que generi un array amb els primers 10 n\u00fameros parells (2, 4, 6, 8, ...).</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-28-inversio-dun-string","title":"Exercici 28: Inversi\u00f3 d'un string","text":"<p>Escriu una funci\u00f3 que rebi un string i el retorni invertit (per exemple: \"hola\" -&gt; \"aloh\").</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-29-comprovador-de-palindroms","title":"Exercici 29: Comprovador de pal\u00edndroms","text":"<p>Crea una funci\u00f3 que determini si una paraula \u00e9s un pal\u00edndrom (es llegeix igual cap endavant i cap enrere).</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-30-cerca-en-array","title":"Exercici 30: Cerca en array","text":"<p>Escriu una funci\u00f3 que cerqui un element en un array i retorni la seva posici\u00f3, o -1 si no el troba.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-31-generador-de-nombres-aleatoris","title":"Exercici 31: Generador de nombres aleatoris","text":"<p>Crea una funci\u00f3 que generi un array de n n\u00fameros aleatoris entre un valor m\u00ednim i m\u00e0xim.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-32-filtre-de-numeros-parells","title":"Exercici 32: Filtre de n\u00fameros parells","text":"<p>Donat un array de n\u00fameros, crea un nou array que contingui nom\u00e9s els n\u00fameros parells.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-33-comptador-de-caracters","title":"Exercici 33: Comptador de car\u00e0cters","text":"<p>Escriu una funci\u00f3 que compti quantes vegades apareix cada car\u00e0cter en un string i mostri els resultats.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-34-validador-demail","title":"Exercici 34: Validador d'email","text":"<p>Crea una funci\u00f3 que validi si un string t\u00e9 format d'email v\u00e0lid (cont\u00e9 @ i punt despr\u00e9s de @).</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-35-ordenacio-darray","title":"Exercici 35: Ordenaci\u00f3 d'array","text":"<p>Implementa l'algoritme de bombolla (bubble sort) per ordenar un array de n\u00fameros de menor a major.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercicis-de-nivell-avancat-36-50","title":"Exercicis de Nivell Avan\u00e7at (36-50)","text":""},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-36-calculadora-de-factorial","title":"Exercici 36: Calculadora de factorial","text":"<p>Escriu una funci\u00f3 que calculi el factorial d'un n\u00famero (n! = n \u00d7 (n-1) \u00d7 ... \u00d7 1).</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-37-conversor-de-temperatura","title":"Exercici 37: Conversor de temperatura","text":"<p>Crea un programa que converteixi temperatures entre Celsius, Fahrenheit i Kelvin.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-38-comptador-de-vocals-i-consonants","title":"Exercici 38: Comptador de vocals i consonants","text":"<p>Escriu una funci\u00f3 que compti separately les vocals i consonants d'un text.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-39-cerca-del-segon-element-mes-gran","title":"Exercici 39: Cerca del segon element m\u00e9s gran","text":"<p>Troba el segon element m\u00e9s gran d'un array de n\u00fameros sense utilitzar <code>sort()</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-40-generador-de-patrons","title":"Exercici 40: Generador de patrons","text":"<p>Crea un programa que generi un patr\u00f3 triangular d'asteriscs de n files.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-41-validador-de-numero-de-telefon","title":"Exercici 41: Validador de n\u00famero de tel\u00e8fon","text":"<p>Crea una funci\u00f3 que validi si un n\u00famero de tel\u00e8fon espanyol t\u00e9 el format correcte (9 d\u00edgits comen\u00e7ant per 6, 7, 8 o 9).</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-42-calculadora-de-mitjana-i-mediana","title":"Exercici 42: Calculadora de mitjana i mediana","text":"<p>Escriu funcions per calcular la mitjana aritm\u00e8tica i la mediana d'un array de n\u00fameros.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-43-joc-de-pedra-paper-tisora","title":"Exercici 43: Joc de pedra, paper, tisora","text":"<p>Implementa el joc cl\u00e0ssic de pedra, paper, tisora contra l'ordinador.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-44-comptador-de-paraules-uniques","title":"Exercici 44: Comptador de paraules \u00faniques","text":"<p>Escriu una funci\u00f3 que compti quantes paraules \u00faniques (sense repeticions) hi ha en un text.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-45-convertidor-de-numeros-romans","title":"Exercici 45: Convertidor de n\u00fameros romans","text":"<p>Crea una funci\u00f3 que converteixi n\u00fameros enters (1-3999) a numeraci\u00f3 romana.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-46-analizador-de-text","title":"Exercici 46: Analizador de text","text":"<p>Crea un programa complet que analitzi un text i mostri estad\u00edstiques: paraules, car\u00e0cters, frases, paraula m\u00e9s llarga, etc.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-47-sistema-de-notes-destudiants","title":"Exercici 47: Sistema de notes d'estudiants","text":"<p>Crea un sistema que gestioni notes d'estudiants: afegir notes, calcular mitjanes, determinar aprovats/suspesos.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-48-calendari-simple","title":"Exercici 48: Calendari simple","text":"<p>Crea un programa que mostri el calendari d'un mes determinat (introdu\u00eft per l'usuari).</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-49-codificadordescodificador-caesar","title":"Exercici 49: Codificador/Descodificador Caesar","text":"<p>Implementa el xifratge Caesar que despla\u00e7a cada lletra un n\u00famero determinat de posicions en l'alfabet.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#exercici-50-simulador-de-llancament-de-daus","title":"Exercici 50: Simulador de llan\u00e7ament de daus","text":"<p>Crea un simulador que llanci m\u00faltiples daus i mostri estad\u00edstiques dels resultats obtinguts.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#consells-per-resoldre-els-exercicis","title":"Consells per resoldre els exercicis","text":""},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#per-als-exercicis-basics-1-15","title":"Per als exercicis b\u00e0sics (1-15):","text":"<ul> <li>Comen\u00e7a sempre provant el codi al navegador</li> <li>Utilitza <code>console.log()</code> per veure qu\u00e8 est\u00e0 passant</li> <li>No tinguis por de cometre errors, s\u00f3n part de l'aprenentatge</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#per-als-exercicis-intermedis-16-35","title":"Per als exercicis intermedis (16-35):","text":"<ul> <li>Planifica abans de codificar</li> <li>Divideix el problema en parts m\u00e9s petites</li> <li>Utilitza funcions per organitzar millor el codi</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#per-als-exercicis-avancats-36-50","title":"Per als exercicis avan\u00e7ats (36-50):","text":"<ul> <li>Llegeix l'enunciat diverses vegades</li> <li>Pensa en casos especials o l\u00edmits</li> <li>Prova amb diferents entrades per validar la soluci\u00f3</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>Consola del navegador: Prem F12 per obrir-la</li> <li>JSFiddle: jsfiddle.net</li> <li>CodePen: codepen.io</li> <li>MDN Web Docs: developer.mozilla.org</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats-exercicis-50.html#nota-important","title":"Nota important","text":"<p>Aquests exercicis estan dissenyats per ser resolts progressivament. Si trobeu dificultats amb un exercici, no dubteu a consultar el solucionari interactiu o demanar ajuda al professor.</p> <p>Bona sort amb els exercicis! \ud83d\ude80</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html","title":"Col\u00b7lecci\u00f3 de 50 Exercicis de JavaScript - Enunciats","text":""},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#colleccio-de-50-exercicis-de-javascript-enunciats","title":"Col\u00b7lecci\u00f3 de 50 Exercicis de JavaScript - Enunciats","text":""},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#introduccio","title":"Introducci\u00f3","text":"<p>Aquesta col\u00b7lecci\u00f3 de 50 exercicis est\u00e0 dissenyada per a estudiants que comencen amb JavaScript i volen progressar fins a un nivell intermedi. Els exercicis estan organitzats de forma progressiva, des dels conceptes m\u00e9s b\u00e0sics fins als m\u00e9s avan\u00e7ats.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#com-utilitzar-aquests-exercicis","title":"Com utilitzar aquests exercicis","text":"<ol> <li>Llegeix l'enunciat amb atenci\u00f3</li> <li>Intenta resoldre l'exercici pel teu compte primer</li> <li>Consulta el solucionari interactiu quan necessitis ajuda</li> <li>Experimenta amb variacions del codi per aprendre m\u00e9s</li> </ol>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#1-conceptes-basics-integracio-de-php-en-html-variables-operadors","title":"1. Conceptes b\u00e0sics: Integraci\u00f3 de PHP en HTML. Variables. Operadors","text":"<p>\u270f\ufe0f   EXERCICI 01    Escriu un programa que mostri el teu nom per pantalla. Utilitza codi PHP.</p> <p>\u270f\ufe0f   EXERCICI 02    Modifica el programa anterior perqu\u00e8 mostri la teva adre\u00e7a i el teu n\u00famero de tel\u00e8fon. Cada dada s'ha de mostrar en una l\u00ednia diferent. Barreja d'alguna manera les sortides per pantalla, utilitzant tant HTML com PHP.</p> <p>\u270f\ufe0f   EXERCICI 03    Escriu un programa que mostri per pantalla 10 paraules en angl\u00e8s al costat de la seva corresponent traducci\u00f3 al castell\u00e0. Les paraules han d'estar distribu\u00efdes en dues columnes. Utilitza l'etiqueta  d'HTML.<p></p><p>\u270f\ufe0f   EXERCICI 04    Escriu un programa que mostri el teu horari de classe mitjan\u00e7ant una taula. Tot i que es pot fer \u00edntegrament a HTML (igual que els exercicis anteriors), veu intercalant codi HTML i PHP per familiaritzar-te amb aquest \u00faltim.</p><p>\u270f\ufe0f   EXERCICI 05    Escriu un programa que utilitzi les variables $x i $y. Assignals els valors 144 i 999 respectivament. A continuaci\u00f3, mostra per pantalla el valor de cada variable, la suma, la resta, la divisi\u00f3 i la multiplicaci\u00f3.</p><p>\u270f\ufe0f   EXERCICI 06    Crea la variable $nombre i aix\u00ed el teu nom complet. Mostra el seu valor per pantalla de tal forma que el resultat sigui el mateix que el de l'exercici 1.</p><p>\u270f\ufe0f   EXERCICI 07    Crea les variables $nombre, $direccion i $telefono i aix\u00ed els valors adequats. Mostra els valors per pantalla de tal forma que el resultat sigui el mateix que el de l'exercici 2.</p><p>\u270f\ufe0f   EXERCICI 08    Realitza un conversor d'euros a pessetes. La quantitat en euros que es vol convertir haur\u00e0 d'estar emmagatzemada en una variable.</p><p>\u270f\ufe0f   EXERCICI 09    Realitza un conversor de pessetes a euros. La quantitat en pessetes que es vol convertir haur\u00e0 d'estar emmagatzemada en una variable.</p><p>\u270f\ufe0f   EXERCICI 10    Escriu un programa que pinti per pantalla una pir\u00e0mide farcida a base d'asteriscs. La base de la pir\u00e0mide ha d'estar formada per 9 asteriscs.</p><p>\u270f\ufe0f   EXERCICI 11    Igual que el programa anterior, per\u00f2 aquesta vegada la pir\u00e0mide estar\u00e0 buida (s'ha de veure \u00fanicament el contorn fet amb asteriscs).</p><p>\u270f\ufe0f   EXERCICI 12    Igual que el programa anterior, per\u00f2 aquesta vegada la pir\u00e0mide ha d'apar\u00e8ixer invertida, amb el v\u00e8rtex cap avall.</p></p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#2-recollida-de-dades-per-teclat-mitjancant-formularis","title":"2. Recollida de dades per teclat mitjan\u00e7ant formularis","text":"<p>\u270f\ufe0f   EXERCICI 13    Realitza un programa que demani dos n\u00fameros i despr\u00e9s mostri el resultat de la seva multiplicaci\u00f3.</p><p>\u270f\ufe0f   EXERCICI 14    Realitza un conversor d'euros a pessetes. Ara la quantitat en euros que es vol convertir s'haur\u00e0 d'introduir per teclat.</p><p>\u270f\ufe0f   EXERCICI 15    Realitza un conversor de pessetes a euros. La quantitat en pessetes que es vol convertir s'haur\u00e0 d'introduir per teclat.</p><p>\u270f\ufe0f   EXERCICI 16    Escriu un programa que sumi, resti, multipliqui i divideixi dos n\u00fameros introdu\u00efts per teclat.</p><p>\u270f\ufe0f   EXERCICI 17    Escriu un programa que calculi l'\u00e0rea d'un rectangle.</p><p>\u270f\ufe0f   EXERCICI 18    Escriu un programa que calculi l'\u00e0rea d'un triangle.</p><p>\u270f\ufe0f   EXERCICI 19    Escriu un programa que calculi el total d'una factura a partir de la base imposable.</p><p>\u270f\ufe0f   EXERCICI 20    Escriu un programa que calculi el salari setmanal d'un treballador en base a les hores treballades. Es pagaran 12 euros per hora.</p><p>\u270f\ufe0f   EXERCICI 21    Escriu un programa que calculi el volum d'un con mitjan\u00e7ant la f\u00f3rmula</p><p>\u270f\ufe0f   EXERCICI 22    Realitza un conversor de Mb a Kb.</p><p>\u270f\ufe0f   EXERCICI 23    Realitza un conversor de Kb a Mb.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#3-sentencia-condicional-if-i-switch","title":"3. Sent\u00e8ncia condicional (if i switch)","text":"<p>\u270f\ufe0f   EXERCICI 24    Escriu un programa que demani per teclat un dia de la setmana i que digui quina assignatura toca a primera hora aquell dia.</p><p>\u270f\ufe0f   EXERCICI 25    Realitza un programa que demani una hora per teclat i que mostri despr\u00e9s bons dies, bones tardes o bones nits segons l'hora. S'utilitzaran els trams de 6 a 12, de 13 a 20 i de 21 a 5. respectivament. Nom\u00e9s es tenen en compte les hores, els minuts no s'han d'introduir per teclat.</p><p>\u270f\ufe0f   EXERCICI 26    Escriu un programa en qu\u00e8 donat un n\u00famero de l'1 a 7 escrigui el corresponent nom del dia de la setmana.</p><p>\u270f\ufe0f   EXERCICI 27    Vam ampliar un dels exercicis de la relaci\u00f3 anterior per considerar les hores extres. Escriu un programa que calculi el salari setmanal d'un treballador tenint en compte que les hores ordin\u00e0ries (40 primeres hores de treball) es paguen a 12 euros l'hora. A partir de l'hora 41, es paguen a 16 euros l'hora.</p><p>\u270f\ufe0f   EXERCICI 28    Realitza un programa que resolgui una equaci\u00f3 de primer grau (del tipus ax + b =0).</p><p>\u270f\ufe0f   EXERCICI 29    Realitza un programa que calculi el temps que trigar\u00e0 a caure un objecte des d'una al\u00e7ada h. Aplica la f\u00f3rmula  sent g = 9.81m/s2</p><p>\u270f\ufe0f   EXERCICI 30    Realitza un programa que calculi la mitjana de tres notes.</p><p>\u270f\ufe0f   EXERCICI 31    Amplia el programa anterior perqu\u00e8 digui la nota del butllet\u00ed (insuficient, suficient, b\u00e9, notable o sobresortint).</p><p>\u270f\ufe0f   EXERCICI 32    Realitza un programa que resolgui una equaci\u00f3 de segon grau (del tipus ax2+ bx + c =0).</p><p>\u270f\ufe0f   EXERCICI 33    Escriu un programa que ens digui l'hor\u00f2scop a partir del dia i el mes de naixement.</p><p>\u270f\ufe0f   EXERCICI 34    Escriu un programa que donada una hora determinada (hores i minuts), calculi els segons que falten per arribar a la mitjanit.</p><p>\u270f\ufe0f   EXERCICI 35    Realitza un miniq\u00fcestionari amb 10 preguntes tipus test sobre les assignatures que s'imparteixen en el curs. Cada pregunta encertada sumar\u00e0 un punt. El programa mostrar\u00e0 al final la qualificaci\u00f3 obtinguda. P\u00e1sale el miniq\u00fcestionari als teus companys i p\u00eddeles que ho facin per veure qu\u00e8 tal anessin de coneixements en les diferents assignatures del curs.</p><p>\u270f\ufe0f   EXERCICI 36    Escriu un programa que ordeni tres nombres enters introdu\u00efts per teclat.</p><p>\u270f\ufe0f   EXERCICI 37    Realitza un programa que digui si un nombre introdu\u00eft per teclat \u00e9s parell i/o divisible entre 5.</p><p>\u270f\ufe0f   EXERCICI 38    Escriu un programa que digui quina \u00e9s l'\u00faltima xifra d'un n\u00famero sencer introdu\u00eft per teclat.</p><p>\u270f\ufe0f   EXERCICI 39    Escriu un programa que digui quina \u00e9s la primera xifra d'un n\u00famero sencer introdu\u00eft per teclat. Es permeten n\u00fameros de fins a 5 xifres.</p><p>\u270f\ufe0f   EXERCICI 40    Realitza un programa que ens digui quants d\u00edgits t\u00e9 un nombre sencer que pot ser positiu o negatiu. Es permeten n\u00fameros de fins a 5 d\u00edgits.</p><p>\u270f\ufe0f   EXERCICI 41    Realitza un programa que digui si un nombre sencer positiu introdu\u00eft per teclat \u00e9s capic\u00faa. Es permeten n\u00fameros de fins a 5 xifres.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#4-bucles","title":"4. Bucles","text":"<p>\u270f\ufe0f   EXERCICI 42    Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle for.</p><p>\u270f\ufe0f   EXERCICI 43    Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle while.</p><p>\u270f\ufe0f   EXERCICI 44    Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle do-while.</p><p>\u270f\ufe0f   EXERCICI 45    Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle for.</p><p>\u270f\ufe0f   EXERCICI 46    Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle while.</p><p>\u270f\ufe0f   EXERCICI 47    Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle do-while.</p><p>\u270f\ufe0f   EXERCICI 48    Realitza el control d'acc\u00e9s a una caixa forta. La combinaci\u00f3 ser\u00e0 un nombre de 4 xifres. El programa ens demanar\u00e0 la combinaci\u00f3 per obrir-la. Si no encertem, se'ns mostrar\u00e0 el missatge \"Ho sento, aquesta no \u00e9s la combinaci\u00f3\" i si encertem se'ns dir\u00e0 \"La caixa forta s'ha obert satisfact\u00f2riament\". Tindrem quatre oportunitats per obrir la caixa forta.</p><p>\u270f\ufe0f   EXERCICI 49    Mostra la taula de multiplicar d'un nombre introdu\u00eft per teclat. El resultat s'ha de mostrar en una taula (&lt;table&gt; en HTML).</p><p>\u270f\ufe0f   EXERCICI 50    Realitza un programa que ens digui quants d\u00edgits t\u00e9 un n\u00famero introdu\u00eft per teclat.</p><p>\u270f\ufe0f   EXERCICI 51    Escriu un programa que calculi la mitjana d'un conjunt de nombres positius introdu\u00efts per teclat. A priori, el programa no sap quants n\u00fameros s'introduiran. L'usuari indicar\u00e0 que ha acabat d'introduir les dades quan meta un n\u00famero negatiu.</p><p>\u270f\ufe0f   EXERCICI 52    Escriu un programa que mostri en tres columnes, el quadrat i el cubell dels 5 primers nombres sencers a partir d'un que s'introdueix per teclat.</p><p>\u270f\ufe0f   EXERCICI 53    Escriu un programa que mostri els n primers termes de la s\u00e8rie de Fibonacci. El primer terme de la s\u00e8rie de Fibonacci \u00e9s 0, el segon \u00e9s 1 i la resta es calcula sumant els dos anteriors, per la qual cosa haur\u00edem de ser 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144... El n\u00famero n s'ha d'introduir per teclat.</p><p>\u270f\ufe0f   EXERCICI 54    Escriu un programa que llegeixi una llista de deu n\u00fameros i determini quants s\u00f3n positius, i quants s\u00f3n negatius.</p><p>\u270f\ufe0f   EXERCICI 55    Escriu un programa que demani una base i un exponent (sencer positiu) i que calculi la pot\u00e8ncia.</p><p>\u270f\ufe0f   EXERCICI 56    Escriu un programa que donats dos n\u00fameros, un de real (base) i un sencer positiu (exponent), tregui per pantalla totes les pot\u00e8ncies amb base el n\u00famero donat i exponents entre un i l'exponent introdu\u00eft. No s'han d'utilitzar funcions d'exponenciaci\u00f3. Per exemple, si introdu\u00efm el 2 i el 5, s'hauran de mostrar 2\u00b9, 2 \u00b2, 2 \u00b3, 2\u2074, 2\u2075.</p><p>\u270f\ufe0f   EXERCICI 57    Escriu un programa que digui si un n\u00famero introdu\u00eft per teclat \u00e9s o no cos\u00ed. Un n\u00famero cos\u00ed \u00e9s aquell que nom\u00e9s \u00e9s divisible entre ell mateix i la unitat.</p><p>\u270f\ufe0f   EXERCICI 58    Realitza un programa que sumi els 100 n\u00fameros seg\u00fcents a un nombre sencer i positiu introdu\u00eft per teclat. S'ha de comprovar que la dada introdu\u00efda \u00e9s correcta (que \u00e9s un nombre positiu).</p><p>\u270f\ufe0f   EXERCICI 59    Escriu un programa que obtingui els nombres enters compresos entre dos nombres introdu\u00efts per teclat i validats com a diferents, el programa ha de comen\u00e7ar pel menor dels enters introdu\u00efts i anar incrementant de 7 en 7.</p><p>\u270f\ufe0f   EXERCICI 60    Realitza un programa que pinti una pir\u00e0mide per pantalla. L'al\u00e7ada s'ha de demanar per teclat mitjan\u00e7ant un formulari. La pir\u00e0mide estar\u00e0 feta de boletes, maons o qualsevol altra imatge de les 5 que s'han de donar a elegir mitjan\u00e7ant un formulari.</p><p>\u270f\ufe0f   EXERCICI 61    Igual que l'exercici anterior per\u00f2 aquesta vegada s'ha de pintar una pir\u00e0mide fuita.</p><p>\u270f\ufe0f   EXERCICI 62    Realitza un programa que vagi demanant n\u00fameros fins que s'introdueixi un nombre negatiu i ens digui quants n\u00fameros s'han introdu\u00eft, la mitjana dels senars i el m\u00e9s gran dels parells . El nombre negatiu nom\u00e9s s'utilitza per indicar el final de la introducci\u00f3 de dades per\u00f2 no s'inclou en el c\u00f2mput.</p><p>\u270f\ufe0f   EXERCICI 63    Mostra per pantalla tots els n\u00fameros cosins entre 2 i 100, ambd\u00f3s inclosos.</p><p>\u270f\ufe0f   EXERCICI 64    Escriu un programa que permeti anar introduint una s\u00e8rie indeterminada de n\u00fameros fins que la suma d'ells superi el valor 10000. Quan aix\u00f2 \u00faltim passi, s'ha de mostrar el total acumulat, el comptador dels n\u00fameros introdu\u00efts i la mitjana.</p><p>\u270f\ufe0f   EXERCICI 65    Escriu un programa que llegeixi un n\u00famero N i imprimeixi una pir\u00e0mide de n\u00fameros amb N files com en la seg\u00fcent figura. Recorda utilitzar un tipus de lletra d'ample fix com per exemple Courier perqu\u00e8 els espais tinguin la mateixa amplada que els n\u00fameros. 1</p><p>\u270f\ufe0f   EXERCICI 66    Realitza un programa que demani un n\u00famero per teclat i que despr\u00e9s mostri aquest n\u00famero al rev\u00e9s.</p><p>\u270f\ufe0f   EXERCICI 67    Realitza un programa que demani primer un n\u00famero i a continuaci\u00f3 un d\u00edgit. El programa ens ha de donar la posici\u00f3 (o posicions) comptant d'esquerra a dreta que ocupa aquest d\u00edgit en el n\u00famero introdu\u00eft.</p><p>\u270f\ufe0f   EXERCICI 68    Escriu un programa que mostri, compti i sumi els m\u00faltiples de 3 que hi ha entre 1 i un n\u00famero llegit per teclat.</p><p>\u270f\ufe0f   EXERCICI 69    Escriu un programa que calculi el factorial d'un n\u00famero sencer llegit per teclat.</p><p>\u270f\ufe0f   EXERCICI 70    Escriu un programa que mostri per pantalla tots els n\u00fameros enters positius menors a un llegit per teclat que no siguin divisibles entre un altre tamb\u00e9 llegit de la mateixa manera.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#5-matrius","title":"5. Matrius","text":"<p>\u270f\ufe0f   EXERCICI 71    Defineix tres arrays de 20 n\u00fameros sencers cadascuna, amb noms \"numero\", \"quadrat\" i \"cub\". Carrega la matriu \"numero\" amb valors aleatoris entre 0 i 100. En la matriu \"quadrat\" s'han d'emmagatzemar els quadrats dels valors que hi ha a la matriu \"numero\". En la matriu \"cub\" s'han d'emmagatzemar les pot\u00e8ncies de tres dels valors que hi ha en \"numero\". A continuaci\u00f3, mostra el contingut de les tres matrius disposades en tres columnes.</p><p>\u270f\ufe0f   EXERCICI 72    Escriu un programa que demani 10 n\u00fameros per teclat i que despr\u00e9s mostri els n\u00fameros introdu\u00efts juntament amb les paraules \"m\u00e0xim\" i \"m\u00ednim\" al costat del m\u00e0xim i del m\u00ednim respectivament.</p><p>\u270f\ufe0f   EXERCICI 73    Escriu un programa que llegeixi 15 n\u00fameros per teclat i que els emmagatzemi en una matriu. Rota els elements d'aquesta matriu, \u00e9s a dir, l' element de la posici\u00f3 0 ha de passar a la posici\u00f3 1, el de la 1 a la 2, etc. El nombre que es troba en l'\u00faltima posici\u00f3 ha de passar a la posici\u00f3 0. Finalment, mostra el contingut de la matriu.</p><p>\u270f\ufe0f   EXERCICI 74    Escriu un programa que generi 100 n\u00fameros aleatoris del 0 al 20 i que els mostri per pantalla separats per espais. El programa demanar\u00e0 llavors per teclat dos valors i a continuaci\u00f3 canviar\u00e0 totes les ocurr\u00e8ncies del primer valor pel segon en la llista generada anteriorment. Els n\u00fameros que s' han canviat han d' apar\u00e8ixer ressaltats d' un color diferent.</p><p>\u270f\ufe0f   EXERCICI 75    Realitza un programa que demani la temperatura mitjana que ha fet en cada mes d'un determinat any i que mostri a continuaci\u00f3 un diagrama de barres horitzontals amb aquestes dades. Les barres del diagrama es poden dibuixar a base de la concatenaci\u00f3 d' una imatge.</p><p>\u270f\ufe0f   EXERCICI 76    Realitza un programa que demani 8 n\u00fameros enters i que despr\u00e9s mostri aquests n\u00fameros de colors, els parells d'un color i els senars d'un altre.</p><p>\u270f\ufe0f   EXERCICI 77    Escriu un programa que generi 20 n\u00fameros sencers aleatoris entre 0 i 100 i que els emmagatzemo en una matriu. El programa ha de ser capa\u00e7 de passar tots els n\u00fameros parells a les primeres posicions de la matriu (del 0 en endavant) i tots els n\u00fameros senars a les cel\u00b7les restants. Utilitza arrays auxiliars si \u00e9s necessari.</p><p>\u270f\ufe0f   EXERCICI 78    Realitza un programa que demani 10 n\u00fameros per teclat i que els emmagatzemi en una matriu. A continuaci\u00f3 es mostrar\u00e0 el contingut d'aquesta array al costat de l'\u00edndex (0 \u2013 9) utilitzant per a aix\u00f2 una taula. Seguidament el programa passar\u00e0 els nombres primers a les primeres posicions, despla\u00e7ant la resta de n\u00fameros (els que no s\u00f3n primers) de tal manera que no se'n perdi cap. Al final s' ha de mostrar la matriu resultant. Per exemple:</p><p></p><p>\u270f\ufe0f   EXERCICI 79    Realitza un programa que demani 10 n\u00fameros per teclat i que els emmagatzemi en una matriu. A continuaci\u00f3 es mostrar\u00e0 el contingut d'aquest array al costat de l'\u00edndex (0 \u2013 9). Seguidament el programa demanar\u00e0 dues posicions a les quals anomenarem \"inicial\" i \"final\". S'ha de comprovar que inicial \u00e9s menor que final i que ambd\u00f3s n\u00fameros estan entre 0 i 9. El programa haur\u00e0 de col\u00b7locar el n\u00famero de la posici\u00f3 inicial en la posici\u00f3 final, rotant la resta de n\u00fameros perqu\u00e8 no se'n perdi cap. Al final s'ha de mostrar la matriu resultant.</p><p></p><p></p><p>\u270f\ufe0f   EXERCICI 80    Realitza un programa que esculli a l'atzar 10 cartes de la baralla espanyola i que digui quants punts sumen segons el joc de la brisca. Empra una matriu associativa per obtenir els punts a partir del nom de la figura de la carta. Assegura't que no es repeteix cap carta, igual que si les hagu\u00e9ssim agafat d'una baralla de veritat.</p><p>\u270f\ufe0f   EXERCICI 81    Crea un mini-diccionari espanyol-angl\u00e8s que contingui, almenys, 20 paraules (amb la seva traducci\u00f3). Utilitza una matriu associativa per emmagatzemar les parelles de paraules. El programa demanar\u00e0 una paraula en espanyol i donar\u00e0 la corresponent traducci\u00f3 en angl\u00e8s.</p><p>\u270f\ufe0f   EXERCICI 82    Realitza un programa que esculli a l'atzar 5 paraules en espanyol del mini-diccionari de l'exercici anterior. El programa demanar\u00e0 que l'usuari teclegi la traducci\u00f3 a l'angl\u00e8s de cadascuna de les paraules i comprovar\u00e0 si s\u00f3n correctes. Al final, el programa haur\u00e0 de mostrar quantes respostes s\u00f3n v\u00e0lides i quantes err\u00f2nies.</p><p>\u270f\ufe0f   EXERCICI 83    Omple una matriu bidimensional de 6 files per 9 columnes amb nombres enters positius compresos entre 100 i 999 (ambd\u00f3s inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no se'n pot repetir cap. Mostra a continuaci\u00f3 per pantalla el contingut de la matriu de tal forma que es compleixin els requisits seg\u00fcents:</p><ul> <li>Els n\u00fameros de les dues diagonals on hi ha el m\u00ednim han d'apar\u00e8ixer en color verd.</li> <li>El m\u00ednim ha d'apar\u00e8ixer en color blau.</li> <li>La resta de n\u00fameros ha d'apar\u00e8ixer en color negre.</li> </ul><p>\u270f\ufe0f   EXERCICI 84    Escriu un programa que, atesa una posici\u00f3 en un tauler d'escacs, ens digui a quines caselles podria saltar un alfil que es troba en aquesta posici\u00f3. Indica\u2019l de forma gr\u00e0fica sobre el tauler amb un color diferent per a aquestes caselles on pot saltar la figura. L'alfil es mou sempre en diagonal. El tauler compta amb 64 caselles. Les columnes s'indiquen amb les lletres de la \"a\" a la \"h\" i les files s'indiquen de l'1 al 8.</p><p>\u270f\ufe0f   EXERCICI 85    Realitza un programa que sigui capa\u00e7 de rotar tots els elements d\u2019una matriu quadrada una posici\u00f3 en el sentit de les agulles del rellotge. La matriu ha de tenir 12 files per 12 columnes i ha de contenir n\u00fameros generats a l' atzar entre 0 i 100. S' ha de mostrar tant la matriu original com la matriu resultat, ambdues amb els n\u00fameros convenientment alineats.</p><p>\u270f\ufe0f   EXERCICI 86    Omple una matriu amb 50 n\u00fameros aleatoris compresos entre el 0 i el 99, i despr\u00e9s mostra-la en una llista desordenada. Per crear un n\u00famero aleatori, utilitza la funci\u00f3 'rand(inici, fi)'. Per exemple:</p><pre><code>$num = rand(0, 99)\n</code></pre><p>\u270f\ufe0f   EXERCICI 87    Prepara un formulari (html) amb un textbox que realitzi una pregunta a l'usuari.  A partir del formulari anterior, crea un programa que mostri la pregunta rebuda i generi una resposta de manera aleat\u00f2ria entre un conjunt de respostes predefinides, emmagatzemades en una matriu: Si, no, potser, clar que s\u00ed, per suposat que no, no ho tinc clar, segur, jo diria que s\u00ed, ni de conya, etc... Aquest exercici es basa en el joc de la Bolla 8 m\u00e0gica</p><p>\u270f\ufe0f   EXERCICI 88    A partir de l'exercici 86, genera una matriu aleat\u00f2ria de 33 elements amb nombres compresos entre el 0 i 100 i calcula:</p><ul> <li>El major</li> <li>El menor</li> <li>La mitjana</li> </ul><p>\u270f\ufe0f   EXERCICI 89    Omple una matriu de 100 elements de manera aleat\u00f2ria amb valors 'M' o 'F' (per exemple '[\"M\", \"M\", \"F\", \"M\", ...]`). Una vegada completat, torna a rec\u00f3rrer-la i calcula quants elements hi ha de cadascun dels valors emmagatzemant el resultat en una matriu '['M' =&gt; 44, 'F' =&gt; 66]' (no utilitzis variables per comptar les 'M' o les 'F'). Finalment, mostra el resultat per pantalla.</p><p>\u270f\ufe0f   EXERCICI 90    Mitjan\u00e7ant una matriu associativa, emmagatzema el nom i l'al\u00e7ada de 5 persones ('nom =&gt;'al\u00e7ada'). Posteriorment, recorre l' arrelament i mostra\u2019l en una taula HTML. Finalment afegeix una \u00faltima fila a la taula amb l'al\u00e7ada mitjana.</p><p>\u270f\ufe0f   EXERCICI 91    Mitjan\u00e7ant una matriu bidimensional, emmagatzema el nom, al\u00e7ada i email de 5 persones. Per a aix\u00f2, crea una matriu de persones, sent cada persona una matriu associativa: '[ ['nom'=&gt;'Tofol', 'altura'=&gt;182, 'email'=&gt;'tofol@correu.com'],[...],... ]' Posteriorment, recorre la matriu i mostra-la en una taula HTML.</p><p>\u270f\ufe0f   EXERCICI 92    Omple una matriu bidimensional de 6 files per 9 columnes amb n\u00fameros aleatoris compresos entre 100 i 999 (ambd\u00f3s inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no se'n pot repetir cap.  Mostra a continuaci\u00f3 per pantalla el contingut de la matriu de tal forma que:</p><ul> <li>La columna del m\u00e0xim ha d'apar\u00e8ixer en blau.</li> <li>La fila del m\u00ednim ha d'apar\u00e8ixer en verd</li> <li>La resta de n\u00fameros han d'apar\u00e8ixer en negre.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#6-funcions","title":"6. Funcions","text":"<p>\u270f\ufe0f   EXERCICI 93    Crea les seg\u00fcents funcions:</p><ul> <li>Una funci\u00f3 que esbrini si un n\u00famero \u00e9s parell: 'esParell(int $num): bool'</li> <li>Una funci\u00f3 que retorni una matriu de mida '\\(tam' amb n\u00fameros aleatoris compr\u00e8s entre '\\)min' i '$max' : 'arrayAleatori(int $tam, int $min, int $max) : array'</li> <li>Una funci\u00f3 que rebi un '\\(array' per refer\u00e8ncia i retorni la quantitat de n\u00fameros parells que hi ha emmagatzemats:  'arrayParells(array &amp;\\)array): int'</li> </ul><p>\u270f\ufe0f   EXERCICI 94    Crea les funcions seg\u00fcents:</p><ul> <li>Una funci\u00f3 que retorni el m\u00e9s gran de tots els n\u00fameros rebuts com a par\u00e0metres: 'function major(): int'. Utilitza les funcions 'func_get_args()', etc... No pots fer servir la funci\u00f3 'max()'.</li> <li>Una funci\u00f3 que concateni tots els par\u00e0metres rebuts separant-los amb un espai: 'function concatenar(...$paraules) : string'. Utilitza l'operador '...'.</li> </ul><p>\u270f\ufe0f   EXERCICI 95    Afegeix les seg\u00fcents funcions:</p><ul> <li>'digits(int $num): int' \u2192 retorna la quantitat de d\u00edgits d'un n\u00famero.</li> <li>'digitN(int $num, int \\(pos): int' \u2192 retorna el d\u00edgit que ocupa, comen\u00e7ant per l'esquerra, la posici\u00f3 '\\)pos'.</li> <li>'llevaPerDarrera(int $num, int \\(quant): int' \u2192 li treu per darrere (dreta) '\\)quant' d\u00edgits.</li> <li> <p>'llevaPerDavant(int $num, int \\(quant): int' \u2192 li treu per davant (esquerra) '\\)quant' d\u00edgits.</p> <p>Per provar les funcions, fes \u00fas tant de pas d'arguments posicionals com arguments amb nom.</p> </li> </ul><p>\u270f\ufe0f   EXERCICI 96    Crea un arxiu amb funcions per sumar, restar, multiplicar i dividir dos n\u00fameros.</p><p>\u270f\ufe0f   EXERCICI 97    Fent \u00fas d'una matriu que emmagatzemi el nom de les funcions de l'arxiu anterior, a partir de dos n\u00fameros rebuts per URL, recorre la matriu i invoca les funcions de manera din\u00e0mica fent \u00fas de funcions variable.</p><p>\u270f\ufe0f   EXERCICI 98    Crea una biblioteca amb dues funcions:</p><ul> <li>pessetes2euros: passa de pessetes a euros</li> <li>euros2pesetes: passa d'euros a pessetes</li> </ul><p>Cada funci\u00f3 ha de rebre dos par\u00e0metres:</p><ul> <li>La quantitat a transformar</li> <li>La cotitzaci\u00f3, amb un par\u00e0metre per defecte amb el factor de transformaci\u00f3.</li> </ul><p>\u270f\ufe0f   EXERCICI 99    Utilitza l\u2019exercici98 i prova les funcions passant tant les quantitats amb la cotitzaci\u00f3 per defecte, com amb noves cotitzacions. Recorda que 1 euro s\u00f3n/eren 166.360 pessetes.</p><p>\u270f\ufe0f   EXERCICI 100   Despr\u00e9s de llegir les dades del tiquet de compra, enumera en una taula els productes, amb el seu preu en euros i pessetes, i finalment, en una \u00faltima fila, totalitzar en ambdues monedes.</p>"},{"location":"Moduls/DWES/exercicisisolucions/exercicis/enunciats.html#7-funcions-predefinides","title":"7. Funcions predefinides","text":"<p>Tots els exercicis s'han de realitzar creant noves funcions per encapsular el codi. A m\u00e9s de la pr\u00f2pia funci\u00f3, l'exercici ha de contenir codi per poder provar-ho.</p><p>\u270f\ufe0f   EXERCICI 101   Llegeix una frase i en retorna una de nova amb nom\u00e9s els car\u00e0cters de les posicions senars. (exercici101frasesenars.php)</p><p>\u270f\ufe0f   EXERCICI 102   A partir d'una frase, retorna la quantitat de cadascuna de les vocals, i el total d' elles. (exercici102vocals.php)</p><p>\u270f\ufe0f   EXERCICI 103   A partir d'una frase amb paraules nom\u00e9s separades per espais, retornar: *   Lletres totals i quantitat de paraules *   Una l\u00ednia per cada paraula indicant la seva mida      (exercici103analitzador.php)</p><ul> <li>Nota: no es pot fer servir <code>str_word_count</code></li> </ul><p>\u270f\ufe0f   EXERCICI 104   Investiga que fa la funci\u00f3 <code>str_word_count</code>, i torna a fer l'exercici 103.(exercici104analitzadorwc.php):</p><p>\u270f\ufe0f   EXERCICI 105   EsCrIu UnA fUnCi\u00d3 qUe TrAnSfOrMi UnA cAdEnA eN cAnI (exercici105cani.php) {millor no utilitzar les funmcions str_replace i str_split)</p><p>\u270f\ufe0f   EXERCICI 106   Escriu una funci\u00f3 que retorni un boole\u00e0 indicant si una paraula \u00e9s pal\u00edndroma (es llegeix igual d'esquerra a dreta que de dreta a esquerra, per exemple, \" A la galera far\u00e8 la gala\" o \u201cL\u00facid, ir\u00f2nic, i no ridicul\u201d, en espanyol podr\u00edem tenir \u201cA Luci le pasa la pel\u00edcula\u201d i en angl\u00e8s \u201cA dog! A panic in a pagoda!\u201d). (exercici106palindrom.php)</p><p>\u270f\ufe0f   EXERCICI 107   Utilitzant les funcions per treballar amb car\u00e0cters, a partir d'una cadena i un despla\u00e7ament (exercici107codificar.php) :</p><ul> <li>Si el despla\u00e7ament \u00e9s 1, substitueix la A per B, la B per C, etc.</li> <li>El despla\u00e7ament no pot ser negatiu</li> <li>Si se surt de l'abecedari, ha de tornar a comen\u00e7ar</li> <li>Cal respectar els espais, punts i comes.</li> </ul><p>\u270f\ufe0f   EXERCICI 108   Crea un programa que permeti a l'usuari llegir un conjunt de n\u00fameros separats per espais. (exercici108filtrat.html) El programa filtrar\u00e0 els n\u00fameros llegits per tornar a mostrar \u00fanicament els n\u00fameros parells i indicar\u00e0 quant de n\u00fameros parells hi ha. (exercici108filtrat.php) </p><pre><code>Dona\u2019m n\u00fameros:     1   4   7   9   23  10  8\nEls 3 num parells s\u00f3n:  4   10  8\n</code></pre> \u270f\ufe0f   EXERCICI 109   Investiga les seg\u00fcents funcions de cadena (explica per a qu\u00e8 serveixen mitjan\u00e7ant comentaris, i programa un petit exemple de cadascuna d'elles): <code>ucwords</code>, <code>strrev</code>, <code>str_repeat</code> y <code>md5</code>. (exercici109investiga.php)<p></p> <p>Note</p> <p>Els seg\u00fcents exercicis es basen en la generaci\u00f3 de nombres aleatoris.</p><p>\u270f\ufe0f   EXERCICI 110   Crea una funci\u00f3 que permeti generar una lletra aleat\u00f2ria, maj\u00fascula o min\u00fascula. (exercici110generador.php)</p><p>\u270f\ufe0f   EXERCICI 111   Crea una funci\u00f3 que a partir d'una mida, generi una contrasenya aleat\u00f2ria composta de lletres i d\u00edgits de manera aleat\u00f2ria. (exercici111generaContrasenya.php)</p><p>Bona sort amb els exercicis! \ud83d\ude80</p>"},{"location":"Moduls/DWES/flashcards/flashcards-DWES-UT01.html","title":"Flashcards DWES UT01 - Arquitectures Web","text":""},{"location":"Moduls/DWES/flashcards/flashcards-DWES-UT01.html#flashcards-dwes-ut01-arquitectures-web","title":"Flashcards DWES UT01 - Arquitectures Web","text":"Fes clic a la targeta per veure la resposta          Targeta 1 de 30 \u2190 Anterior Seg\u00fcent \u2192 \ud83d\udd00 Barrejar"},{"location":"Moduls/DWES/flashcards/flashcards-DWES-UT01.html#instruccions-dus","title":"Instruccions d'\u00fas","text":"<ul> <li>Clic a la targeta: Gira la targeta per veure la resposta</li> <li>Botons de navegaci\u00f3: Navega entre targetes</li> <li>Tecles del teclat:</li> <li><code>\u2190</code> Targeta anterior</li> <li><code>\u2192</code> Targeta seg\u00fcent</li> <li><code>Espai</code> Girar targeta actual</li> <li>Barrejar: Barreja l'ordre de les targetes per estudiar aleat\u00f2riament</li> </ul>"},{"location":"Moduls/DWES/mm/DWESUT01.mm.html","title":"Mapa conceptual","text":""},{"location":"Moduls/DWES/mm/DWESUT01.mm.html#mapa-conceptual-ut01","title":"Mapa Conceptual UT01","text":""},{"location":"Moduls/DWES/mm/DWESUT01.mm.html#ut01-arquitectures-web","title":"UT01 Arquitectures Web","text":"IyBVVDAxLiBBcnF1aXRlY3R1cmVzIFdlYgoKIyMgQ2xpZW50IC8gU2Vydmlkb3IKLSBNb2RlbCBiw6BzaWM6IGNsaWVudHMgYWNjZWRlaXhlbiBhIHNlcnZpZG9yCi0gTm92ZXMgYXJxdWl0ZWN0dXJlczogYmFsYW5jZWphZG9yIGRlIGPDoHJyZWdhICsgTiBzZXJ2aWRvcnMKLSBDbGllbnQgd2ViOiBuYXZlZ2Fkb3IKLSBQcm90b2NvbDogR0VUL1BPU1QgKHBvcnQgODAvNDQzKQotIFJlcXVlc3QgaSBSZXNwb25zZQoKIyMjIFDDoGdpbmEgd2ViIGRpbsOgbWljYQotIFDDoGdpbmEgZXN0w6B0aWNhOiBIVE1MICsgQ1NTCi0gUMOgZ2luYSBkaW7DoG1pY2EgKDIgYWx0ZXJuYXRpdmVzKQogIC0gTGxlbmd1YXRnZSBzZXJ2aWRvciAoQkQgbyBzZXJ2ZWlzIGV4dGVybnMpCiAgLSBTZXJ2ZWlzIFJFU1QgZGVzIGRlIEpTCgojIyMjIFRlY25vbG9naWVzIGkgcGVyZmlscwotIEZyb250LWVuZC9jbGllbnQKICAtIE5hdmVnYWRvciBXZWIKICAtIEhUTUwgKyBDU1MgKyBKYXZhc2NyaXB0Ci0gQmFjay1lbmQvc2Vydmlkb3IKICAtIFNlcnZpZG9yIFdlYiArIEJCREQKICAtIFBIUCwgUHl0aG9uLCBSdWJ5LCBKYXZhL0pTUCwgLk5ldC8uYXNwCi0gRnVsbC1zdGFjayBkZXZlbG9wZXI6IGRvbWluYSBmcm9udC1lbmQgaSBiYWNrLWVuZAoKIyMjIFNpbmdsZSBQYWdlIEFwcGxpY2F0aW9uIChTUEEpCi0gVHJhbnNpY2nDsyBkJ2FycXVpdGVjdHVyYSBjbGllbnQtc2Vydmlkb3IgY2zDoHNzaWNhCi0gQ2xpZW50IGFtYiBtYWpvciBwZXMKLSBQcm9ncmFtYWNpw7MgcmVhY3RpdmEKLSBBY2PDqXMgYSBzZXJ2ZWlzIFJFU1QKLSBDb211bmljYWNpw7MgdmlhIEpTT04KCiMjIEFycXVpdGVjdHVyYSBkZSAzIGNhcGVzCgojIyMgVGllciAoY2FwYSBmw61zaWNhKQotIEVsZW1lbnQgbWFxdWluYXJpIHNlcGFyYXQgZsOtc2ljYW1lbnQKLSBQcm90ZWNjacOzOiBmaXJld2FsbHMgaSBWUE4KLSBFeGVtcGxlIDMgdGllcgogIC0gU2Vydmlkb3IgV2ViCiAgLSBTZXJ2aWRvciBkJ0FwbGljYWNpb25zCiAgLSBTZXJ2aWRvciBkZSBiYXNlIGRlIGRhZGVzCi0gQ2zDunN0ZXI6IG3Dumx0aXBsZXMgc2Vydmlkb3JzIGVuIHVuYSBjYXBhCiAgLSBUb2xlcsOgbmNpYSBhIGVycm9ycwogIC0gRXNjYWxhYmlsaXRhdCBob3JpdHpvbnRhbAoKIyMjIExheWVyIChjYXBhIGzDsmdpY2EpCi0gT3JnYW5pdHphY2nDsyBkZWwgY29kaSBwZXIgZnVuY2lvbmFsaXRhdAogIC0gUHJlc2VudGFjacOzCiAgLSBOZWdvY2kvQXBsaWNhY2nDsy9Qcm9jw6lzCiAgLSBEYWRlcy9QZXJzaXN0w6huY2lhCi0gSW1wbGVtZW50YWNpw7MgYW1iIGRpZmVyZW50cyBsbGVuZ3VhdGdlcwoKIyMgTVZDIChNb2RlbC1WaWV3LUNvbnRyb2xsZXIpCi0gU2VwYXJhIGRhZGVzIGkgbMOyZ2ljYSBkZSBuZWdvY2kgZGUgbGEgaW50ZXJmw61jaWUKLSBBdmFudGF0Z2VzOiByZXV0aWxpdHphY2nDsyBjb2RpLCBtaWxsb3Igb3JnYW5pdHphY2nDswotIENvbXBvbmVudHMKICAtIE1vZGVsOiBnZXN0aW9uYSBkYWRlcyBpIGFjY2Vzc29zIChCRCkKICAtIENvbnRyb2xhZG9yOiByZXNwb24gYWNjaW9ucyB1c3VhcmksIHBldGljaW9ucyBhbCBtb2RlbAogIC0gVmlzdGE6IHByZXNlbnRhIGluZm9ybWFjacOzIGEgbCd1c3VhcmkKCiMjIERlY2lzaW9ucyBkZSBkaXNzZW55Ci0gR3JhbmTDoHJpYSBkZWwgcHJvamVjdGUKLSBMbGVuZ3VhdGdlcyBkZSBwcm9ncmFtYWNpw7MgY29uZWd1dHMKLSBFaW5lcyBjb2RpIG9iZXJ0IHZzIHByb3BpZXTDoHJpZXMKLSBEZXNlbnZvbHVwYW1lbnQgaW5kaXZpZHVhbCB2cyBlcXVpcAotIERpc3BvbmliaWxpdGF0IHNlcnZpZG9yIHdlYi9CRAotIFRpcHVzIGRlIGxsaWPDqG5jaWEKCiMjIEVpbmVzCgojIyMgU2Vydmlkb3IgV2ViCi0gUHJvZ3JhbWFyaSBxdWUgcmVwIHBldGljaW9ucyBIVFRQCi0gUmV0b3JuYSByZWN1cnNvcyAoSFRNTCwgQ1NTLCBKUywgSlNPTiwgaW1hdGdlcykKLSBBcGFjaGUgV2ViIFNlcnZlcgogIC0gQ3JlYXQgMTk5NQogIC0gUHJvZ3JhbWFyaSBsbGl1cmUgaSBtdWx0aXBsYXRhZm9ybWEKICAtIFNpc3RlbWEgbcOyZHVscyBkaW7DoG1pY3MgKFBIUCwgUHl0aG9uLCBQZXJsKQogIC0gQ29uZmlndXJhY2nDszogLmh0YWNjZXNzCi0gTmdpbngKICAtIENyZWF0IDIwMDQKICAtIE1pbGxvciByZW5kaW1lbnQgZW4gZGV0ZXJtaW5hdHMgZXNjZW5hcmlzCgojIyMgU2Vydmlkb3IgZCdBcGxpY2FjaW9ucwotIFNlcnZlaXMgYWRkaWNpb25hbHMgYSBzZXJ2aWRvciB3ZWIKICAtIENsdXN0ZXJpbmcKICAtIEJhbGFuY2VpZyBkZSBjw6BycmVnYQogIC0gVG9sZXLDoG5jaWEgYSBmYWxsYWRlcwotIFRvbWNhdAogIC0gT3BlbiBzb3VyY2UgaSBtdWx0aXBsYXRhZm9ybWEKICAtIFJlZmVyw6huY2lhIHBlciBhcnF1aXRlY3R1cmEgSmF2YQogIC0gQ29udGVuaWRvciBXZWIgSmF2YSAoU2VydmxldHMgaSBKU1ApCgojIyMgTGxlbmd1YXRnZXMgZW4gZWwgc2Vydmlkb3IKLSBQSFAKLSBKYXZhRUU6IFNlcnZsZXRzL0pTUAotIFB5dGhvbgotIEFTUC5ORVQgKFZpc3VhbCBCYXNpYyAuTkVUIC8gQyMpCi0gUnVieQoKIyMjIyBKYXZhRUUKLSBKYXZhIEVudGVycHJpc2UgRWRpdGlvbgotIFNvbHVjacOzIHBlciBhcGxpY2FjaW9ucyBlbnRlcnByaXNlCi0gQXJxdWl0ZWN0dXJhIGNvbXBsZXRhLCBlc2NhbGFibGUsIHRvbGVyYW50IGEgZmFsbGFkZXMKLSBQZXIgZ3JhbnMgc2lzdGVtZXMKCiMjIyMgUEhQCi0gTGxlbmd1YXRnZSBwcm9ww7JzaXQgZ2VuZXJhbCBwZXIgcMOgZ2luZXMgZGluw6BtaXF1ZXMKLSBJbmljaWFsbWVudCBubyB0aXBhdAotIFZlcnNpw7MgYWN0dWFsOiA4IChtw61uaW0gNy4wKQotIENvZGkgZW1iZWd1dCBlbiBIVE1MCi0gRXRpcXVldGVzOiA8P3BocCBpID8+Ci0gSW5zdHJ1Y2Npw7M6IGVjaG8KLSBGcmFtZXdvcmtzOiBMYXJhdmVsLCBTeW1mb255LCBDb2RlaWduaXRlciwgWmVuZAoKIyMgUG9zYWRhIGVuIG1hcnhhCgojIyMgWEFNUFAKLSBEaXN0cmlidWNpw7MgYW1iIHByb2dyYW1hcmkgcGVyIGRlc2Vudm9sdXBhbWVudCBzZXJ2aWRvcgotIENvbXBvbmVudHMgKHNpZ2xlcykKICAtIFg6IHNpc3RlbWEgb3BlcmF0aXUgKExBTVAvV0FNUCkKICAtIEE6IEFwYWNoZQogIC0gTTogTXlTUUwvTWFyaWFEQiArIHBocE15QWRtaW4KICAtIFA6IFBIUAogIC0gUDogUGVybAotIERlc2PDoHJyZWdhIHBlciBzaXN0ZW1hIG9wZXJhdGl1CgojIyMgRG9ja2VyCi0gR2VzdG9yIGRlIGNvbnRlbmlkb3JzCi0gVmlydHVhbGl0emFjacOzIHNpc3RlbWEgb3BlcmF0aXUKLSBNZW55cyByZWN1cnNvcyBxdWUgbcOgcXVpbmEgdmlydHVhbAotIExsYW7Dp2FtZW50IGkgZGV0ZW5jacOzIHLDoHBpZHMKLSBEb2NrZXIgRGVza3RvcAogIC0gSW5jbG91IERvY2tlciBpIGRvY2tlciBjb21wb3NlCiAgLSBXaW5kb3dzOiBuZWNlc3NpdGEgV1NMIDIKLSBWZXJzaW9ucyB1dGlsaXR6YWRlcwogIC0gUEhQOiA4LjAKICAtIERvY2tlcjogMjAuMTAKICAtIGRvY2tlciBjb21wb3NlOiAyLjE5CiAgLSBEb2NrZXIgRGVza3RvcDogNC4wCgojIyMjIFBsYW50aWxsYSBTZXJ2aWRvciBXZWIgKyBQSFAKLSBJbWF0Z2VzIHBlciBjcmVhciBjb250ZW5pZG9ycwotIERvY2tlciBDb21wb3NlOiBtw7psdGlwbGVzIGNvbnRlbmlkb3JzCi0gRml0eGVyOiBkb2NrZXItY29tcG9zZS55YW1sCi0gU2VydmVpcyBkaXNwb25pYmxlcwogIC0gQXBhY2hlICsgUEhQCiAgLSBOZ2lueCArIFBIUAotIENhcnBldGEgc3JjOiBjb2RpIGZvbnQKCiMjIyMjIENvbWFuZGVzIHByaW5jaXBhbHMKLSBkb2NrZXItY29tcG9zZSB1cCAtZDogbGxhbsOnYXIgc2VydmVpCi0gZG9ja2VyLWNvbXBvc2UgbG9ncyAtZjogdmV1cmUgbG9ncwotIGRvY2tlciBjcDogY29waWFyIGZpdHhlcnMKLSBkb2NrZXIgZXhlYyAtaXQ6IHRlcm1pbmFsIGludGVyYWN0aXUKLSBkb2NrZXIgcHM6IHZldXJlIGNvbnRlbmlkb3JzCi0gZG9ja2VyIGltYWdlczogdmV1cmUgaW1hdGdlcwotIERvY2tlciBEZXNrdG9wOiBpbnRlcmbDrWNpZSBncsOgZmljYQoKIyMjIyMgQWx0ZXJuYXRpdmVzIGNvbXBsZXRlcwotIERldmlsYm94Ci0gTGFyYWRvY2sKCiMjIyBFbnRvcm4gZGUgZGVzZW52b2x1cGFtZW50Ci0gUGhwU3Rvcm0gLyBJbnRlbGxpSiAobGxpY8OobmNpZXMgRWR1Y2F0aW9uKQotIFZpc3VhbCBTdHVkaW8gQ29kZQotIEVjbGlwc2UgKG3DqXMgcGVzYXQp mindmap   root((\"Arquitectures Web\"))     id1[\"Client / Servidor\"]       id2[\"Model b\u00e0sic N clients - 1 servidor\"]       id3[\"Balancejador c\u00e0rrega + N servidors\"]       id4[\"Client: navegador web\"]       id5[\"Protocol HTTP GET/POST port 80/443\"]       id6[\"Request i Response\"]       id7[\"P\u00e0gina din\u00e0mica\"]         id8[\"Est\u00e0tica: HTML + CSS\"]         id9[\"Din\u00e0mica: servidor BD o REST JS\"]       id10[\"Tecnologies\"]         id11[\"Front-end: HTML+CSS+JS\"]         id12[\"Back-end: PHP, Python, Java, .Net\"]         id13[\"Full-stack: front + back\"]       id14[\"SPA Single Page Application\"]         id15[\"Client amb major pes\"]         id16[\"Programaci\u00f3 reactiva\"]         id17[\"Serveis REST + JSON\"]      id18[\"Arquitectura 3 capes\"]       id19[\"Tier - capa f\u00edsica\"]         id20[\"Element maquinari separat\"]         id21[\"Protecci\u00f3: firewalls, VPN\"]         id22[\"3 tier: Web, Aplicacions, BD\"]         id23[\"Cl\u00faster per toler\u00e0ncia errors\"]       id24[\"Layer - capa l\u00f2gica\"]         id25[\"Presentaci\u00f3\"]         id26[\"Negoci/Aplicaci\u00f3/Proc\u00e9s\"]         id27[\"Dades/Persist\u00e8ncia\"]         id28[\"Diferents llenguatges\"]      id29[\"MVC Model-View-Controller\"]       id30[\"Separa dades de interf\u00edcie\"]       id31[\"Reutilitzaci\u00f3 i organitzaci\u00f3\"]       id32[\"Model: gesti\u00f3 dades i BD\"]       id33[\"Controlador: respon accions\"]       id34[\"Vista: presenta informaci\u00f3\"]      id35[\"Decisions de disseny\"]       id36[\"Grand\u00e0ria projecte\"]       id37[\"Llenguatges coneguts\"]       id38[\"Eines open source vs propiet\u00e0ries\"]       id39[\"Individual vs equip\"]       id40[\"Disponibilitat servidor\"]       id41[\"Tipus llic\u00e8ncia\"]      id42[\"Servidor Web\"]       id43[\"Rep peticions HTTP\"]       id44[\"Retorna recursos HTML/CSS/JS\"]       id45[\"Apache Web Server\"]         id46[\"Creat 1995\"]         id47[\"Lliure i multiplataforma\"]         id48[\"M\u00f2duls PHP, Python, Perl\"]         id49[\"Configuraci\u00f3 .htaccess\"]       id50[\"Nginx\"]         id51[\"Creat 2004\"]         id52[\"Millor rendiment\"]      id53[\"Servidor Aplicacions\"]       id54[\"Serveis addicionals\"]         id55[\"Clustering\"]         id56[\"Balanceig c\u00e0rrega\"]         id57[\"Toler\u00e0ncia fallades\"]       id58[\"Tomcat\"]         id59[\"Open source\"]         id60[\"Arquitectura Java\"]         id61[\"Servlets i JSP\"]      id62[\"Llenguatges servidor\"]       id63[\"PHP\"]         id64[\"Prop\u00f2sit general\"]         id65[\"Versi\u00f3 8, m\u00ednim 7.0\"]         id66[\"Codi embegut HTML\"]         id67[\"Etiquetes \"]         id68[\"Frameworks: Laravel, Symfony\"]       id69[\"JavaEE\"]         id70[\"Enterprise Edition\"]         id71[\"Escalable, tolerant fallades\"]         id72[\"Grans sistemes\"]       id73[\"Python, ASP.NET, Ruby\"]      id74[\"Posada en marxa\"]       id75[\"XAMPP\"]         id76[\"Distribuci\u00f3 completa\"]         id77[\"X: sistema operatiu\"]         id78[\"A: Apache\"]         id79[\"M: MySQL/MariaDB\"]         id80[\"P: PHP\"]         id81[\"P: Perl\"]       id82[\"Docker\"]         id83[\"Gestor contenidors\"]         id84[\"Menys recursos que VM\"]         id85[\"Docker Desktop + compose\"]         id86[\"PHP 8.0\"]         id87[\"Plantilles Apache/Nginx\"]         id88[\"Comandes principals\"]           id89[\"docker-compose up -d\"]           id90[\"docker-compose logs\"]           id91[\"docker ps, docker exec\"]         id92[\"Alternatives: Devilbox, Laradock\"]       id93[\"Entorn desenvolupament\"]         id94[\"PhpStorm / IntelliJ\"]         id95[\"Visual Studio Code\"]         id96[\"Eclipse\"]"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html","title":"Estructura exemple gen\u00e8ric d'un document formal per una comparativa","text":""},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#estructura-exemple-generic-dun-document-formal-per-una-comparativa","title":"Estructura exemple gen\u00e8ric d'un document formal per una comparativa","text":"<p>Un document formal que resumeixi els resultats d'una comparativa hauria de tenir una estructura clara i ben organitzada per garantir que la informaci\u00f3 sigui f\u00e0cil de comprendre i d'analitzar. Les parts essencials s\u00f3n les seg\u00fcents:</p> <p></p>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#1-titol","title":"1. T\u00edtol","text":"<ul> <li>Ha de ser clar i conc\u00eds, indicant el contingut del document. Exemple: \"Comparativa de rendiment entre serveis d'emmagatzematge al n\u00favol\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#2-introduccio","title":"2. Introducci\u00f3","text":"<ul> <li>Breu descripci\u00f3 de l'objectiu del document i el context de la comparativa.</li> <li>Explicaci\u00f3 de per qu\u00e8 s'ha realitzat la comparaci\u00f3 i quina \u00e9s la seva import\u00e0ncia. Exemple: \"Aquest document analitza les caracter\u00edstiques principals de tres serveis d'emmagatzematge al n\u00favol per identificar quina opci\u00f3 s'adapta millor a les necessitats d'una empresa mitjana\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#3-metodologia","title":"3. Metodologia","text":"<ul> <li>Descripci\u00f3 del criteri o factors utilitzats per a la comparativa (ex.: preu, velocitat, facilitat d'\u00fas).</li> <li>Fonts d'informaci\u00f3 i eines utilitzades (ex.: proves pr\u00e0ctiques, dades publicades).</li> <li>Declaraci\u00f3 de l\u00edmits o condicions que poden afectar els resultats. Exemple: \"S'han avaluat tres plataformes basant-se en preus mensuals, l\u00edmits d'emmagatzematge, i funcionalitats col\u00b7laboratives\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#4-resultats-de-la-comparativa","title":"4. Resultats de la comparativa","text":"<ul> <li>Taules o gr\u00e0fics: Presentar dades visuals per facilitar la comprensi\u00f3. Exemple: Una taula comparativa que inclogui caracter\u00edstiques clau, com preus, capacitat, seguretat, etc.</li> <li>An\u00e0lisi textual: Descripci\u00f3 dels punts forts i febles de cada opci\u00f3. Exemple: \"El servei A destaca per la seva interf\u00edcie intu\u00eftiva, mentre que el servei B \u00e9s m\u00e9s assequible a llarg termini\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#5-discussio-i-analisi","title":"5. Discussi\u00f3 i an\u00e0lisi","text":"<ul> <li>Interpretaci\u00f3 dels resultats: Qu\u00e8 significa la informaci\u00f3 presentada?</li> <li>Comparaci\u00f3 entre els elements: Quin \u00e9s el guanyador o millor opci\u00f3, i per qu\u00e8?</li> <li>Consideracions addicionals o situacions en qu\u00e8 una altra opci\u00f3 podria ser m\u00e9s adequada.</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#6-conclusio","title":"6. Conclusi\u00f3","text":"<ul> <li>Resum breu dels punts m\u00e9s rellevants de la comparativa.</li> <li>Recomanaci\u00f3 basada en els resultats obtinguts. Exemple: \"Recomanem el servei A per empreses amb necessitats b\u00e0siques, mentre que el servei B \u00e9s m\u00e9s adient per a usos intensius\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#7-referencies","title":"7. Refer\u00e8ncies","text":"<ul> <li>Citar fonts d'informaci\u00f3 utilitzades per a la comparaci\u00f3 (articles, estudis, p\u00e0gines web, etc.).</li> <li>Assegurar-se que segueixen un format de citaci\u00f3 formal (ex.: APA, MLA).</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#8-annexos-opcional","title":"8. Annexos (opcional)","text":"<ul> <li>Incloure dades addicionals, gr\u00e0fics o explicacions t\u00e8cniques que donin suport a l'an\u00e0lisi, per\u00f2 que no s\u00f3n essencials per al cos principal del document.</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html","title":"Estructura exemple gen\u00e8ric d'un document formal per una comparativa","text":""},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#estructura-exemple-generic-dun-document-formal-per-una-comparativa","title":"Estructura exemple gen\u00e8ric d'un document formal per una comparativa","text":"<p>Una presentaci\u00f3 formal que pretengui resumir el resultat d'una comparativa ha de ser clara, concisa i estructurada. Les diapositives han de presentar la informaci\u00f3 de manera visual i atractiva, tot destacant els punts clau de l'an\u00e0lisi. A continuaci\u00f3 es descriuen les diapositives recomanades, a mode d'exemple:</p> <p></p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#1-portada","title":"1. Portada","text":"<ul> <li>T\u00edtol de la presentaci\u00f3.</li> <li>Subt\u00edtol o breu descripci\u00f3 de la comparativa (opcional).</li> <li>Nom del presentador, data i entitat/organitzaci\u00f3 (si escau).</li> </ul> <p>Exemple: - T\u00edtol: \"Comparativa de serveis d'emmagatzematge al n\u00favol\". - Subt\u00edtol: \"An\u00e0lisi de preu, capacitat i funcionalitats\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#2-introduccio","title":"2. Introducci\u00f3","text":"<ul> <li>Context i objectiu de la comparativa.</li> <li>Breu explicaci\u00f3 de per qu\u00e8 s'ha realitzat i quina \u00e9s la seva rellev\u00e0ncia.</li> </ul> <p>Exemple: \"Aquesta an\u00e0lisi t\u00e9 com a objectiu identificar el millor servei d'emmagatzematge al n\u00favol per a una empresa mitjana\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#3-metodologia","title":"3. Metodologia","text":"<ul> <li>Factors avaluats en la comparativa (ex.: cost, seguretat, velocitat).</li> <li>Fonts d'informaci\u00f3 o eines utilitzades.</li> <li>Condicions o l\u00edmits que cal tenir en compte.</li> </ul> <p>Exemple: \"Els criteris d'an\u00e0lisi inclouen preu mensual, capacitat m\u00e0xima i caracter\u00edstiques col\u00b7laboratives\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#4-presentacio-de-les-opcions-comparades","title":"4. Presentaci\u00f3 de les opcions comparades","text":"<ul> <li>Breu descripci\u00f3 de les alternatives o opcions analitzades.</li> <li>Si \u00e9s possible, incloure una taula o llista amb els noms i les caracter\u00edstiques generals.</li> </ul> <p>Exemple: - Opci\u00f3 A: Google Drive. - Opci\u00f3 B: Dropbox. - Opci\u00f3 C: OneDrive.</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#5-resultats-visuals","title":"5. Resultats (visuals)","text":"<ul> <li>Taules, gr\u00e0fics o altres elements visuals que mostrin els resultats de manera clara.</li> <li>Comparacions clau en funci\u00f3 dels factors analitzats.</li> </ul> <p>Exemple: - Un gr\u00e0fic de barres que compari els costos anuals. - Una taula amb puntuacions per categoria (ex.: seguretat, facilitat d'\u00fas, preu).</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#6-analisi-dels-resultats","title":"6. An\u00e0lisi dels resultats","text":"<ul> <li>Punts forts i febles de cada opci\u00f3.</li> <li>Interpretaci\u00f3 dels resultats obtinguts i relaci\u00f3 amb els objectius inicials.</li> </ul> <p>Exemple: - \"Google Drive destaca per la seva integraci\u00f3 amb altres eines, mentre que Dropbox ofereix m\u00e9s flexibilitat per equips col\u00b7laboratius\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#7-conclusio","title":"7. Conclusi\u00f3","text":"<ul> <li>Resum de les troballes principals.</li> <li>Reconeixement de l'opci\u00f3 m\u00e9s adequada segons els criteris establerts.</li> </ul> <p>Exemple: \"Segons l'an\u00e0lisi, Google Drive \u00e9s la millor opci\u00f3 per relaci\u00f3 qualitat-preu, especialment per usuaris que utilitzen l'ecosistema de Google\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#8-recomanacions-opcional","title":"8. Recomanacions (opcional)","text":"<ul> <li>Passos o suggeriments per aplicar la decisi\u00f3 final.</li> <li>Consideracions a tenir en compte per a altres contextos o necessitats.</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#9-preguntes-i-agraiments","title":"9. Preguntes i agra\u00efments","text":"<ul> <li>Una diapositiva amb un fons net, un t\u00edtol de \"Preguntes?\" o \"Dubtes?\" i espai visual per promoure la interacci\u00f3.</li> <li>Acompanyar amb un missatge d'agra\u00efment pel temps i l'atenci\u00f3 del p\u00fablic.</li> </ul> <p>Exemple: \"Gr\u00e0cies! Alguna pregunta?\"</p>"},{"location":"Moduls/GENERAL/audios.html","title":"Recull \u00e0udios interessants","text":""},{"location":"Moduls/GENERAL/audios.html#recull-audios-interessants","title":"Recull \u00e0udios interessants","text":"<p>Advert\u00e8ncia</p> <p>No tots els \u00e0udios tenen una vessant estrictament relacionada amb la doc\u00e8ncia.</p> <p></p> <ul> <li> <p> El futur del catal\u00e0 \u00e9s a les nostres mans</p> <p>\u00c0udio extret del programa \"La primera pedra\" de RAC1 on Abel Espinosa en la secci\u00f3 \"Treu la ll\u00e8ngua\" parla sobre l'empitjorament de la situaci\u00f3 ling\u00fc\u00edstica del catal\u00e0, per\u00f2 des d'una vessant optimista i no victimista.   </p> <p>    El teu navegador no suporta l'element d'\u00e0udio. </p>  Font original completa sense editar de RAC1 <p></p> </li> <li> <p> \u00c9s es colmo!!</p> <p>Pere Sampol, indignat, en una m\u00edtica i extraordin\u00e0ria intervenci\u00f3 durant una comissi\u00f3 parlament\u00e0ria al Parlament de les Illes en l'\u00e0mbit del \"cas Rasput\u00edn\" (Un dels m\u00faltiples esc\u00e0ndols del PP en aquest cas en l'\u00e8poca de'n Jaume Matas.)</p> <p>    El teu navegador no suporta l'element d'\u00e0udio. </p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul>"},{"location":"Moduls/PFC/comPFC.html","title":"Com fer el Projecte Final del Cicle Superior de DAM/DAW? (PFC)","text":""},{"location":"Moduls/PFC/comPFC.html#com-fer-el-projecte-final-del-cicle-superior-de-damdaw-pfc","title":"Com fer el Projecte Final del Cicle Superior de DAM/DAW? (PFC)","text":""},{"location":"Moduls/PFC/comPFC.html#passes-a-seguir","title":"Passes a seguir","text":"<ol> <li>Escull el tema del projecte. \u00c9s essencial triar el tema del projecte. El m\u00e9s important per triar el tema sobre el qual vols fer el teu projecte \u00e9s que et motivi. Pensa que seran 11/12 setmanes ben intenses de feina. Per tant, molt millor si fas feina sobre aix\u00f2 que t'agradi. El teu tutor haur\u00e0 de valorar i acceptar la tem\u00e0tica que proposis.</li> </ol> <p>Bibliografia</p> <p>Al document del teu projecte haur\u00e0s d'afegir totes les refer\u00e8ncies de la informaci\u00f3 que utilitzis i que no sigui d'elaboraci\u00f3 pr\u00f2pia. Les normes APA s\u00f3n les m\u00e9s utilitzades per fer refer\u00e8ncia a la bibliografia emprada.</p> <ol> <li>Recopila i cerca informaci\u00f3. Recopila tota la informaci\u00f3 que puguis del cicle formatiu i que guardi relaci\u00f3 amb el teu tema de projecte. A partir d'aqu\u00ed cerca informaci\u00f3 i documents que puguin ser \u00fatils pel teu projecte. No t'oblidis apuntar d'on has obtingut la informaci\u00f3. Ho necessites per crear una bona bibliografia en la mem\u00f2ria.</li> <li>Estructura i d\u00f3na-li forma \"sobre paper\". Abans de comen\u00e7ar a escriure el teu document de projecte \u00e9s fonamental que tinguis clara l'estructura que ha de tenir. Per aix\u00f2 el m\u00e9s recomanable \u00e9s fer un o diversos esbossos del teu projecte. Et recomano que ho facis fent servir \"paper i llapis\". M\u00e9s abaix en aquesta p\u00e0gina trobar\u00e0s un apartat que et pot ajudar a tenir una refer\u00e8ncia.</li> <li>Comen\u00e7ar a escriure la mem\u00f2ria del projecte. Despr\u00e9s, has de comen\u00e7ar a redactar la mem\u00f2ria del projecte. I, per aix\u00f2, \u00e9s fonamental que facis un esquema que inclogui els punts rellevants del projecte. D'aquesta manera, et resultar\u00e0 molt m\u00e9s senzill. Aquest esquema \u00e9s per organitzar millor la teva feina aix\u00ed que no et preocupis per la forma ni \"color\", simplement procura que et sigui \u00fatil a tu.</li> <li>Corregir les faltes d'ortografia. Finalment, \u00e9s imprescindible que corregeixis les possibles faltes d'ortografia que pugui tenir el text. Pensa que es tracta d'un treball seri\u00f3s que podries presentar el dia de dem\u00e0 en una empresa per aconseguir una bona feina.</li> </ol>"},{"location":"Moduls/PFC/comPFC.html#quina-estructura-ha-de-seguir-el-projecte","title":"Quina estructura ha de seguir el Projecte?","text":"<p>L'estructura del Projecte Final pot variar depenent del contingut i tema del treball. Tanmateix, aquests s\u00f3n els apartats principals que se solen incloure:</p> <ol> <li>An\u00e0lisi de requisits: Identificaci\u00f3 i comprensi\u00f3 dels requisits funcionals i no funcionals.</li> <li> <p>Disseny de la soluci\u00f3: Creaci\u00f3 dels diagrames i models necessaris per representar l'arquitectura de la soluci\u00f3 plantejada, la seva interf\u00edcie d'usuari i la seva base de dades (si correspon).</p> <p>2.1.  Descripci\u00f3 arquitectura</p> <p>2.2.  Justificaci\u00f3 t\u00e8cnica</p> <p>2.3.  Eines de desenvolupament</p> </li> <li> <p>Planificaci\u00f3: Defineix les etapes del teu projecte i ub\u00edcales en el temps en l'ordre en qu\u00e8 s'hagin d'executar. Aix\u00ed mateix, defineix la durada, de forma realista, de les diferents etapes que hagis definit.</p> </li> <li> <p>Desenvolupament de la soluci\u00f3: Planteja el desenvolupament de la soluci\u00f3 utilitzant tot l'apr\u00e8s durant el cicle.</p> <p>4.1.  Metodologia de treball</p> <p>4.2.  Esb\u00f3s o prototip de la soluci\u00f3</p> <p>4.3.  Documentaci\u00f3: Elaboraci\u00f3 de documentaci\u00f3 t\u00e8cnica que descrigui la soluci\u00f3, el seu funcionament i les decisions preses durant el desenvolupament.</p> </li> </ol> <p>Trucs per redactar el teu Projecte de Final del Cicle</p> <p>Si arribats a aquest punt, encara tens dubtes sobre com redactar el Projecte Final, presta atenci\u00f3 als seg\u00fcents trucs:</p> <ul> <li>Defineix clarament els objectius i requisits del projecte.</li> <li>Utilitza un llenguatge clar i conc\u00eds, evitant l'\u00fas excessiu de tecnicismes.</li> <li>Estructura el document de manera organitzada, dividint-lo en seccions i subseccions.</li> <li>Inclou exemples i captures de pantalla per il\u00b7lustrar el teu treball.</li> <li>Revisa i edita acuradament per assegurar la coher\u00e8ncia i la correcci\u00f3 gramatical.</li> <li>Tota aquella informaci\u00f3 excessivament t\u00e8cnica o detallada, simplement refer\u00e9nciala en la mem\u00f2ria i l'aportes de forma \u00edntegra com un annex.</li> <li>Utilitza el m\u00e0xim de recursos que has vist durant el cicle formatiu. </li> </ul> Recomanaci\u00f3 per gestionar la teva bibliografia: Zotero <p>Zotero \u00e9s una eina gratu\u00efta i f\u00e0cil d'utilitzar per a la gesti\u00f3 de refer\u00e8ncies bibliogr\u00e0fiques. Permet als usuaris recopilar, organitzar, citar i compartir fonts de recerca. Amb Zotero, pots:</p> <ul> <li>Recopilar refer\u00e8ncies autom\u00e0ticament mentre navegues per la web.</li> <li>Organitzar les teves fonts en col\u00b7leccions i etiquetar-les amb paraules clau.</li> <li>Citar en diversos estils directament en editors de text com Word, LibreOffice i Google Docs.</li> <li>Sincronitzar les dades entre dispositius per mantenir la informaci\u00f3 actualitzada.</li> <li>Col\u00b7laborar amb altres persones en projectes de recerca123.</li> <li>\u00c9s una eina molt \u00fatil per a investigadors i estudiants que necessiten gestionar grans quantitats d'informaci\u00f3 bibliogr\u00e0fica.</li> </ul>"},{"location":"Moduls/PFC/indexPFC.html","title":"Projecte de desenvolupament de DAM/DAW (PFC)","text":""},{"location":"Moduls/PFC/indexPFC.html#projecte-de-desenvolupament-de-damdaw-pfc","title":"Projecte de desenvolupament de DAM/DAW (PFC)","text":"<ul> <li> <p> PFC Projecte Final Cicle</p> <p> Com fer el PFC (Guia pr\u00e0ctica)</p> <p> Ordres que regulen el PFC</p> <p> Exemple mem\u00f2ria del PFC</p> <p> Planificaci\u00f3 de les tasques del PFC</p> </li> </ul>"},{"location":"Moduls/PFC/indexPFC.html#exemple-memoria-de-pfc","title":"Exemple Mem\u00f2ria de PFC","text":"<p>Enlla\u00e7 al document</p>"},{"location":"Moduls/PFC/indexPFC.html#planificacio-del-pfc","title":"Planificaci\u00f3 del PFC","text":"--- config:   theme: forest --- gantt     title Planificaci\u00f3 del PFC     dateFormat  YYYY-MM-DD     section Introducci\u00f3         Introducci\u00f3 al PFC  : 2025-03-14, 1d     section Tutories         1a Tutoria          :done, t1, 2025-03-14, 1d         2a Tutoria          :done, t2, 2025-03-24, 1d         3a Tutoria          :done, t3, 2025-04-14, 1d         4a Tutoria          :done, t4, 2025-04-28, 1d         5a Tutoria          :t5, 2025-05-12, 1d         6a Tutoria          :t6, 2025-05-26, 1d         7a Tutoria          :t7, 2025-06-09, 1d     section Desenv. PFC         Presentaci\u00f3 idea i tema del PFC :done, d1, 2025-03-17, 1d         Recopilaci\u00f3 material i redacci\u00f3 esborranys dels apartats :active d2, after d1, 2025-05-25         Creaci\u00f3 esquelet mem\u00f2ria    :done, d3, 2025-03-24, 2025-04-14         Redacci\u00f3 esborrany mem\u00f2ria :active, d4, 2025-03-28,2025-05-12         Entrega esborrany   :milestone, m3, 2025-05-12,1d         Redacci\u00f3 mem\u00f2ria definitiva:    : d5, 2025-05-07, 2025-06-09     section Tasques finals         Entrega document: milestone, m1, 2025-06-10,1d         Preparaci\u00f3 presentaci\u00f3 defensa  :tf1, 2025-06-03,2025-06-13     DEFENSA PFC :milestone, m2, 2025-06-16, 1d"},{"location":"Moduls/PFC/marclegalPFC.html","title":"Marc legal - M\u00f2dul projecte de desenvolupament d'aplicacions web / multiplataforma","text":""},{"location":"Moduls/PFC/marclegalPFC.html#marc-legal-modul-projecte-de-desenvolupament-daplicacions-web-multiplataforma","title":"Marc legal - M\u00f2dul projecte de desenvolupament d'aplicacions web / multiplataforma","text":"<p>Orden EDU/2887/2010 (DAW) Orden EDU/2000/2010 (DAM)</p> <p>Article 5. M\u00f2dul professional de projecte.</p> <ol> <li> <p>El m\u00f2dul professional de projecte t\u00e9 un car\u00e0cter interdisciplinari i incorpora les variables tecnol\u00f2giques i organitzatives relacionades amb els aspectes essencials de la compet\u00e8ncia professional del t\u00edtol de T\u00e8cnic Superior en Desenvolupament d'Aplicacions Multiplataforma.</p> </li> <li> <p>Amb car\u00e0cter general aquest m\u00f2dul ser\u00e0 impartit pel professorat que exerceix la tutoria de formaci\u00f3 en centres de treball.</p> </li> <li> <p>El m\u00f2dul professional de projecte es desenvolupar\u00e0 durant el mateix per\u00edode que el m\u00f2dul professional de formaci\u00f3 en centres de treball. El professorat responsable del seu desenvolupament haur\u00e0 d'anticipar les activitats d'ensenyament i aprenentatge que facilitin el desenvolupament posterior del m\u00f2dul.</p> </li> <li> <p>El desenvolupament i seguiment del m\u00f2dul professional de projecte haur\u00e0 de compaginar la tutoria individual i col\u00b7lectiva. En qualsevol cas, almenys el 50 % de la durada total es dur\u00e0 a terme de forma presencial, completant-se amb la tutoria a dist\u00e0ncia emprant les tecnologies de la informaci\u00f3 i la comunicaci\u00f3.</p> </li> <li> <p>L'avaluaci\u00f3 d'aquest m\u00f2dul professional quedar\u00e0 condicionada a l'avaluaci\u00f3 positiva de la resta dels m\u00f2duls professionals del cicle formatiu, incl\u00f2s el de formaci\u00f3 en centres de treball.</p> </li> </ol> <p>Codis del m\u00f2dul:  0616 (DAW) / 0491 (DAM)</p>"},{"location":"Moduls/PFC/marclegalPFC.html#resultats-daprenentatge","title":"Resultats d'aprenentatge","text":"RA1RA2RA3RA4"},{"location":"Moduls/PFC/marclegalPFC.html#1-identifica-necessitats-del-sector-productiu-i-de-lorganitzacio-de-lempresa","title":"1. Identifica necessitats del sector productiu i de l'organitzaci\u00f3 de l'empresa.","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>1.1 Identificaci\u00f3 de les funcions dels llocs de treball.</p> <p>1.2 Estructura i organitzaci\u00f3 empresarial del sector.</p> <p>1.3 Activitat de l' empresa i la seva ubicaci\u00f3 en el sector.</p> <p>1.4 Organigrama de la empresa. Relaci\u00f3 funcional entre departaments.</p> <p>1.5 Tend\u00e8ncies del sector: productives, econ\u00f2miques, organitzatives, d' ocupaci\u00f3 i altres.</p> <p>1.6 Procediments de treball en l' \u00e0mbit de l' empresa. Sistemes i m\u00e8todes de treball.</p> <p>1.7 Determinaci\u00f3 de les relacions laborals excloses i relacions laborals especials.</p> <p>1.8 Conveni col.lectiu aplicable a l' \u00e0mbit professional.</p> <p>1.9 La cultura de l' empresa: imatge corporativa.</p> <p>1.10 Sistemes de qualitat i seguretat aplicables en el sector.</p>"},{"location":"Moduls/PFC/marclegalPFC.html#2-disseny-de-projectes-relacionats-amb-el-sector","title":"2. Disseny de projectes relacionats amb el sector.","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>2.1 An\u00e0lisi de la realitat local, de l' oferta empresarial del sector a la zona i del context en el qual es desenvolupar\u00e0 el m\u00f2dul professional de formaci\u00f3 en centres de treball.</p> <p>2.2 Recopilaci\u00f3 d' informaci\u00f3.</p> <p>2.3 Estructura general d' un projecte.</p> <p>2.4 Elaboraci\u00f3 d' un gui\u00f3 de treball.</p> <p>2.5 Planificaci\u00f3 de l' execuci\u00f3 del projecte: objectius, continguts, recursos, metodologia, activitats, temporalitzaci\u00f3 i avaluaci\u00f3.</p> <p>2.6 Viabilitat i oportunitat del projecte.</p> <p>2.7 Revisi\u00f3 de la normativa aplicable.</p>"},{"location":"Moduls/PFC/marclegalPFC.html#3-planificacio-de-lexecucio-del-projecte","title":"3. Planificaci\u00f3 de l'execuci\u00f3 del projecte","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>3.1 Seq\u00fcenciaci\u00f3 d'activitats.</p> <p>3.2 Elaboraci\u00f3 d' instruccions de treball.</p> <p>Elaboraci\u00f3 d' un pla de prevenci\u00f3 de riscos.</p> <p>Documentaci\u00f3 necess\u00e0ria per a la planificaci\u00f3 de l' execuci\u00f3 del projecte.</p> <p>Compliment de normes de seguretat i ambientals.</p> <p>Indicadors de garantia de la qualitat de projectes.</p>"},{"location":"Moduls/PFC/marclegalPFC.html#4-definicio-de-procediments-de-control-i-avaluacio-de-l-execucio-del-projecte","title":"4. Definici\u00f3 de procediments de control i avaluaci\u00f3 de l' execuci\u00f3 del projecte","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>4.1 Propuesta de soluciones a los objetivos planteados en el proyecto y justificaci\u00f3n de las seleccionadas.</p> <p>4.2 Definici\u00f3 del procediment d' avaluaci\u00f3 del projecte.</p> <p>4.3 Determinaci\u00f3 de les variables susceptibles d' avaluaci\u00f3.</p> <p>4.4 Documentaci\u00f3 necess\u00e0ria per a l' avaluaci\u00f3 del projecte.</p> <p>4.5 Control de qualitat de proc\u00e9s i producte final.</p> <p>4.6 Registre de resultats.</p>"},{"location":"Moduls/PI/index.html","title":"Introducci\u00f3 i \u00edndex","text":""},{"location":"Moduls/PI/index.html#projecte-intermodular-daw","title":"Projecte intermodular DAW","text":"<p>It's a long way to the top, if you wanna ...</p> <p>El cam\u00ed cap a l\u2019\u00e8xit \u00e9s llarg i ple d\u2019esfor\u00e7, per\u00f2 cada pas que feu us apropa al vostre objectiu. Com a la can\u00e7\u00f3 d\u2019AC/DC, cal perseverar i treballar dur per triomfar. No perdeu la motivaci\u00f3, encara que sigui dif\u00edcil, la feina ben feta sempre t\u00e9 recompensa. Endavant, que el cim valdr\u00e0 cada esfor\u00e7!</p> <p></p> <p></p> <p></p> <p> </p> <p></p> <p></p> <ul> <li> <p> PFC Projecte Final Cicle</p> <p> Com fer el PFC (Guia pr\u00e0ctica)</p> <p> Ordres que regulen el PFC</p> <p> Exemple mem\u00f2ria del PFC</p> <p> Planificaci\u00f3 de les tasques del PFC</p> </li> </ul>"},{"location":"Moduls/PI/index.html#planificacio-del-pfc","title":"Planificaci\u00f3 del PFC","text":"--- config: theme: forest --- gantt     title Cronograma M12 - Projecte DAW (28 setmanes)     dateFormat  YYYY-WW     axisFormat  \"W%W\"      section Bloc 1: Identificaci\u00f3 i An\u00e0lisi         Tasques 1.1\u20131.9       :done,    b1, 2025-36, 4w     section Bloc 2: Disseny i Planificaci\u00f3         Tasques 2.1\u20132.18      :active,  b2, 2025-40, 6w     section Bloc 3: Desenvolupament i Implementaci\u00f3         Tasques 3.1\u20133.24      :         b3, 2025-46, 10w     section Bloc 4: Documentaci\u00f3 i Presentaci\u00f3         Tasques 4.1\u20134.20      :         b4, 2026-04, 5w     section Bloc 5: Avaluaci\u00f3 i Millora Cont\u00ednua         Tasques 5.1\u20135.24      :         b5, 2026-09, 3w"},{"location":"Moduls/PI/index.html#planificacio-del-pfc_1","title":"Planificaci\u00f3 del PFC","text":"--- config: theme: forest --- gantt   title Cronograma complet M12 \u2013 Projecte DAW (95 tasques)     dateFormat  YYYY-MM-DD   axisFormat  \"W%W\"    section Bloc 1: Identificaci\u00f3 i An\u00e0lisi de Necessitats   Tasca 1.1: Investigaci\u00f3 mercat         :     2025-36, 1w   Tasca 1.2: Identificaci\u00f3 necessitats    :     2025-37, 1w   Tasca 1.3: Objectius SMART             :     2025-38, 1w   Tasca 1.4: Definici\u00f3 abast             :     2025-39, 1w   Tasca 1.5: Viabilitat t\u00e8cnica          :     2025-40, 1w   Tasca 1.6: Viabilitat econ\u00f2mica        :     2025-41, 1w   Tasca 1.7: Benchmarking competitiu     :     2025-42, 1w   Tasca 1.8: Selecci\u00f3 tecnologies        :     2025-43, 1w   Tasca 1.9: Justificaci\u00f3 tecnol\u00f2gica    :     2025-44, 1w    section Bloc 2: Disseny i Planificaci\u00f3 del Projecte   Tasca 2.1: Diagrama casos d\u2019\u00fas         :     2025-45, 1w   Tasca 2.2: Diagrames seq\u00fc\u00e8ncia        :     2025-46, 1w   Tasca 2.3: Diagrama de classes        :     2025-47, 1w   Tasca 2.4: Diagrama components        :     2025-48, 1w   Tasca 2.5: Selecci\u00f3 arquitectura       :     2025-49, 1w   Tasca 2.6: Disseny capa presentaci\u00f3   :     2025-50, 1w   Tasca 2.7: Disseny capa negoci        :     2025-51, 1w   Tasca 2.8: Disseny capa dades         :     2025-52, 1w   Tasca 2.9: Disseny model dades        :     2025-53, 1w   Tasca 2.10: Normalitzaci\u00f3 BD          :     2025-54, 1w   Tasca 2.11: \u00cdndexs BD                 :     2025-55, 1w   Tasca 2.12: Wireframes i mockups      :     2025-56, 1w   Tasca 2.13: Prototip interactiu       :     2025-57, 1w   Tasca 2.14: Responsive &amp; WCAG         :     2025-58, 1w   Tasca 2.15: Metodologia \u00e0gil          :     2025-59, 1w   Tasca 2.16: Product Backlog           :     2025-60, 1w   Tasca 2.17: Planificaci\u00f3 sprints      :     2025-61, 1w   Tasca 2.18: Estimaci\u00f3 recursos        :     2025-62, 1w    section Bloc 3: Desenvolupament i Implementaci\u00f3   Tasca 3.1: Configuraci\u00f3 entorn dev     :     2025-63, 1w   Tasca 3.2: Arquitectura backend       :     2025-64, 1w   Tasca 3.3: Desenvolupament APIs       :     2025-65, 1w   Tasca 3.4: Autenticaci\u00f3/Autoritzaci\u00f3  :     2025-66, 1w   Tasca 3.5: Errors i logging           :     2025-67, 1w   Tasca 3.6: L\u00f2gica de negoci          :     2025-68, 1w   Tasca 3.7: Validacions serv/client    :     2025-69, 1w   Tasca 3.8: Frontend responsive        :     2025-70, 1w   Tasca 3.9: UI interactiva             :     2025-71, 1w   Tasca 3.10: Gesti\u00f3 estats frontend     :    2025-72, 1w   Tasca 3.11: Optimitzaci\u00f3 front        :     2025-73, 1w   Tasca 3.12: Connexi\u00f3 SGBD             :     2025-74, 1w   Tasca 3.13: Model dades implementaci\u00f3 :     2025-75, 1w   Tasca 3.14: Consultes optimitzades    :     2025-76, 1w   Tasca 3.15: Gesti\u00f3 transaccions       :     2025-77, 1w   Tasca 3.16: Upload multim\u00e8dia         :     2025-78, 1w   Tasca 3.17: Reproducci\u00f3 multim\u00e8dia    :     2025-79, 1w   Tasca 3.18: Func. interact. avan\u00e7ades :     2025-80, 1w   Tasca 3.19: Optimitz. recursos mm     :     2025-81, 1w   Tasca 3.20: Docs endpoints API        :     2025-82, 1w   Tasca 3.21: Testing unitari/integraci\u00f3:     2025-83, 1w   Tasca 3.22: Versionat Git             :     2025-84, 1w   Tasca 3.23: Code review i qualitat    :     2025-85, 1w   Tasca 3.24: Integraci\u00f3 cont\u00ednua (CI)  :     2025-86, 1w    section Bloc 4: Documentaci\u00f3 i Presentaci\u00f3   Tasca 4.1: Manual arquitectura         :     2025-87, 1w   Tasca 4.2: Manual instal\u00b7laci\u00f3        :     2025-88, 1w   Tasca 4.3: Manual configuraci\u00f3        :     2025-89, 1w   Tasca 4.4: Docs base dades            :     2025-90, 1w   Tasca 4.5: Docs APIs                  :     2025-91, 1w   Tasca 4.6: Manual usuari - introducci\u00f3:     2025-92, 1w   Tasca 4.7: Manual usuari - funcions    :     2025-93, 1w   Tasca 4.8: Troubleshooting usuari     :     2025-94, 1w   Tasca 4.9: Casos d\u2019\u00fas                  :     2025-95, 1w   Tasca 4.10: Comentaris codi            :    2025-96, 1w   Tasca 4.11: README.md                  :    2025-97, 1w   Tasca 4.12: Swagger API               :    2025-98, 1w   Tasca 4.13: UML finals                 :    2025-99, 1w   Tasca 4.14: Informe resum executiu    :    2026-00, 1w   Tasca 4.15: Informe metodologia       :    2026-01, 1w   Tasca 4.16: Informe resultats        :    2026-02, 1w   Tasca 4.17: Informe conclusions      :    2026-03, 1w   Tasca 4.18: Informe millores futures :    2026-04, 1w   Tasca 4.19: Presentaci\u00f3 executiva     :    2026-05, 1w   Tasca 4.20: Demo interactiva          :    2026-06, 1w    section Bloc 5: Avaluaci\u00f3 i Millora Cont\u00ednua   Tasca 5.1: Testing unitari backend     :    2026-07, 1w   Tasca 5.2: Testing integr. APIs        :    2026-08, 1w   Tasca 5.3: Testing funcional frontend  :    2026-09, 1w   Tasca 5.4: Testing E2E                 :    2026-10, 1w   Tasca 5.5: Testing rendiment           :    2026-11, 1w   Tasca 5.6: Testing c\u00e0rrega             :    2026-12, 1w   Tasca 5.7: Testing seguretat           :    2026-13, 1w   Tasca 5.8: Testing cross-browser       :    2026-14, 1w   Tasca 5.9: Auditoria accessibilitat    :    2026-15, 1w   Tasca 5.10: Testing usabilitat         :    2026-16, 1w   Tasca 5.11: An\u00e0lisi m\u00e8triques UX       :    2026-17, 1w   Tasca 5.12: Validaci\u00f3 responsive       :    2026-18, 1w   Tasca 5.13: Refactoring codi           :    2026-19, 1w   Tasca 5.14: Optimitzaci\u00f3 consultes BD  :    2026-20, 1w   Tasca 5.15: Optimitzaci\u00f3 frontend      :    2026-21, 1w   Tasca 5.16: Implementaci\u00f3 cache        :    2026-22, 1w   Tasca 5.17: Configuraci\u00f3 producci\u00f3     :    2026-23, 1w   Tasca 5.18: Desplegament aplicaci\u00f3     :    2026-24, 1w   Tasca 5.19: Config. monitoritzaci\u00f3     :    2026-25, 1w   Tasca 5.20: Document desplegament      :    2026-26, 1w   Tasca 5.21: An\u00e0lisi vs objectius       :    2026-27, 1w   Tasca 5.22: Identificaci\u00f3 millores     :    2026-28, 1w   Tasca 5.23: Roadmap evolutiu           :    2026-29, 1w   Tasca 5.24: Avaluaci\u00f3 cr\u00edtica global   :    2026-30, 1w     --- config: theme: forest --- gantt     title Planificaci\u00f3 del PFC     dateFormat  YYYY-MM-DD     section Introducci\u00f3         Introducci\u00f3 al PFC  : 2025-03-14, 1d     section Tutories         1a Tutoria          :done, t1, 2025-03-14, 1d         2a Tutoria          :done, t2, 2025-03-24, 1d         3a Tutoria          :done, t3, 2025-04-14, 1d         4a Tutoria          :done, t4, 2025-04-28, 1d         5a Tutoria          :t5, 2025-05-12, 1d         6a Tutoria          :t6, 2025-05-26, 1d         7a Tutoria          :t7, 2025-06-09, 1d     section Desenv. PFC         Presentaci\u00f3 idea i tema del PFC :done, d1, 2025-03-17, 1d         Recopilaci\u00f3 material i redacci\u00f3 esborranys dels apartats :active d2, after d1, 2025-05-25         Creaci\u00f3 esquelet mem\u00f2ria    :done, d3, 2025-03-24, 2025-04-14         Redacci\u00f3 esborrany mem\u00f2ria :active, d4, 2025-03-28,2025-05-12         Entrega esborrany   :milestone, m3, 2025-05-12,1d         Redacci\u00f3 mem\u00f2ria definitiva:    : d5, 2025-05-07, 2025-06-09     section Tasques finals         Entrega document: milestone, m1, 2025-06-10,1d         Preparaci\u00f3 presentaci\u00f3 defensa  :tf1, 2025-06-03,2025-06-13         DEFENSA PFC :milestone, m2, 2025-06-16, 1d"},{"location":"Moduls/PI/comPFC.html","title":"Com comen\u00e7ar a fer el projecte del Cicle Superior de DAM/DAW? (PFC)","text":""},{"location":"Moduls/PI/comPFC.html#com-comencar-a-fer-el-projecte-del-cicle-superior-de-damdaw-pfc","title":"Com comen\u00e7ar a fer el projecte del Cicle Superior de DAM/DAW? (PFC)","text":""},{"location":"Moduls/PI/comPFC.html#passes-a-seguir","title":"Passes a seguir","text":"<ol> <li>Escull el tema del projecte. \u00c9s essencial triar el tema del projecte. El m\u00e9s important per triar el tema sobre el qual vols fer el teu projecte \u00e9s que et motivi. Pensa que ser\u00e0 una feina intensa. Per tant, molt millor si fas feina sobre aix\u00f2 que t'agradi. El teu tutor haur\u00e0 de valorar i acceptar la tem\u00e0tica que proposis.</li> </ol> <p>Bibliografia</p> <p>Al document del teu projecte haur\u00e0s d'afegir totes les refer\u00e8ncies de la informaci\u00f3 que utilitzis i que no sigui d'elaboraci\u00f3 pr\u00f2pia. Les normes APA s\u00f3n les m\u00e9s utilitzades per fer refer\u00e8ncia a la bibliografia emprada.</p> <ol> <li>Recopila i cerca informaci\u00f3. Recopila tota la informaci\u00f3 que puguis del cicle formatiu i que guardi relaci\u00f3 amb el teu tema de projecte. A partir d'aqu\u00ed cerca informaci\u00f3 i documents que puguin ser \u00fatils pel teu projecte. No t'oblidis apuntar d'on has obtingut la informaci\u00f3. Ho necessites per crear una bona bibliografia en la mem\u00f2ria.</li> <li>Estructura i d\u00f3na-li forma \"sobre paper\". Abans de comen\u00e7ar a escriure el teu document de projecte \u00e9s fonamental que tinguis clara l'estructura que ha de tenir. Per aix\u00f2 el m\u00e9s recomanable \u00e9s fer un o diversos esbossos del teu projecte. Et recomano que ho facis fent servir \"paper i llapis\". M\u00e9s abaix en aquesta p\u00e0gina trobar\u00e0s un apartat que et pot ajudar a tenir una refer\u00e8ncia.</li> <li>Comen\u00e7ar a escriure la mem\u00f2ria del projecte. Despr\u00e9s, has de comen\u00e7ar a redactar la mem\u00f2ria del projecte. I, per aix\u00f2, \u00e9s fonamental que facis un esquema que inclogui els punts rellevants del projecte. D'aquesta manera, et resultar\u00e0 molt m\u00e9s senzill. Aquest esquema \u00e9s per organitzar millor la teva feina aix\u00ed que no et preocupis per la forma ni \"color\", simplement procura que et sigui \u00fatil a tu.</li> <li>Corregir les faltes d'ortografia. Finalment, \u00e9s imprescindible que corregeixis les possibles faltes d'ortografia que pugui tenir el text. Pensa que es tracta d'un treball seri\u00f3s que podries presentar el dia de dem\u00e0 en una empresa per aconseguir una bona feina.</li> </ol>"},{"location":"Moduls/PI/comPFC.html#quina-estructura-ha-de-seguir-el-projecte","title":"Quina estructura ha de seguir el Projecte?","text":"<p>L'estructura del Projecte Final pot variar depenent del contingut i tema del treball. Tanmateix, aquests s\u00f3n els apartats principals que se solen incloure:</p> <ol> <li>An\u00e0lisi de requisits: Identificaci\u00f3 i comprensi\u00f3 dels requisits funcionals i no funcionals.</li> <li> <p>Disseny de la soluci\u00f3: Creaci\u00f3 dels diagrames i models necessaris per representar l'arquitectura de la soluci\u00f3 plantejada, la seva interf\u00edcie d'usuari i la seva base de dades (si correspon).</p> <p>2.1.  Descripci\u00f3 arquitectura</p> <p>2.2.  Justificaci\u00f3 t\u00e8cnica</p> <p>2.3.  Eines de desenvolupament</p> </li> <li> <p>Planificaci\u00f3: Defineix les etapes del teu projecte i ub\u00edcales en el temps en l'ordre en qu\u00e8 s'hagin d'executar. Aix\u00ed mateix, defineix la durada, de forma realista, de les diferents etapes que hagis definit.</p> </li> <li> <p>Desenvolupament de la soluci\u00f3: Planteja el desenvolupament de la soluci\u00f3 utilitzant tot l'apr\u00e8s durant el cicle.</p> <p>4.1.  Metodologia de treball</p> <p>4.2.  Esb\u00f3s o prototip de la soluci\u00f3</p> <p>4.3.  Documentaci\u00f3: Elaboraci\u00f3 de documentaci\u00f3 t\u00e8cnica que descrigui la soluci\u00f3, el seu funcionament i les decisions preses durant el desenvolupament.</p> </li> </ol> <p>Trucs per redactar el teu Projecte de Final del Cicle</p> <p>Si arribats a aquest punt, encara tens dubtes sobre com redactar el Projecte Final, presta atenci\u00f3 als seg\u00fcents trucs:</p> <ul> <li>Defineix clarament els objectius i requisits del projecte.</li> <li>Utilitza un llenguatge clar i conc\u00eds, evitant l'\u00fas excessiu de tecnicismes.</li> <li>Estructura el document de manera organitzada, dividint-lo en seccions i subseccions.</li> <li>Inclou exemples i captures de pantalla per il\u00b7lustrar el teu treball.</li> <li>Revisa i edita acuradament per assegurar la coher\u00e8ncia i la correcci\u00f3 gramatical.</li> <li>Tota aquella informaci\u00f3 excessivament t\u00e8cnica o detallada, simplement refer\u00e9nciala en la mem\u00f2ria i l'aportes de forma \u00edntegra com un annex.</li> <li>Utilitza el m\u00e0xim de recursos que has vist durant el cicle formatiu. </li> </ul> Recomanaci\u00f3 per gestionar la teva bibliografia: Zotero <p>Zotero \u00e9s una eina gratu\u00efta i f\u00e0cil d'utilitzar per a la gesti\u00f3 de refer\u00e8ncies bibliogr\u00e0fiques. Permet als usuaris recopilar, organitzar, citar i compartir fonts de recerca. Amb Zotero, pots:</p> <ul> <li>Recopilar refer\u00e8ncies autom\u00e0ticament mentre navegues per la web.</li> <li>Organitzar les teves fonts en col\u00b7leccions i etiquetar-les amb paraules clau.</li> <li>Citar en diversos estils directament en editors de text com Word, LibreOffice i Google Docs.</li> <li>Sincronitzar les dades entre dispositius per mantenir la informaci\u00f3 actualitzada.</li> <li>Col\u00b7laborar amb altres persones en projectes de recerca123.</li> <li>\u00c9s una eina molt \u00fatil per a investigadors i estudiants que necessiten gestionar grans quantitats d'informaci\u00f3 bibliogr\u00e0fica.</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html","title":"Guia elaboracio projecte pel professor","text":"<p>L'alumne ha de generar un producte concret i completament funcional al final del m\u00f2dul. Aquest \u00e9s el detall:</p>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#producte-final-esperat","title":"\ud83c\udfaf Producte Final Esperat","text":""},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#aplicacio-web-completa-i-funcional","title":"Aplicaci\u00f3 Web Completa i Funcional","text":"<ul> <li>URL p\u00fablica accessible (desplegada en producci\u00f3)</li> <li>Frontend responsive (m\u00f2bil, tablet, desktop)</li> <li>Backend amb APIs RESTful funcionals</li> <li>Base de dades amb dades reals/demo</li> <li>Sistema d'autenticaci\u00f3 operatiu</li> <li>Funcionalitats core implementades i testejades</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#entregables-concrets-del-producte","title":"\ud83d\udce6 Entregables Concrets del Producte","text":""},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#1-aplicacio-desplegada-tasca-518","title":"1. Aplicaci\u00f3 Desplegada (Tasca 5.18)","text":"<pre><code>\u2705 URL p\u00fablica funcional\n\u2705 Registre i login d'usuaris\n\u2705 \u226510 funcionalitats principals operatives\n\u2705 Responsive design verificat\n\u2705 Performance &gt;85 Lighthouse\n</code></pre>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#2-repositori-githubgitlab-complet","title":"2. Repositori GitHub/GitLab Complet","text":"<pre><code>\u2705 Codi font complet i documentat\n\u2705 README.md professional\n\u2705 \u226550 commits amb historial net\n\u2705 Tests automatitzats (coverage &gt;80%)\n\u2705 CI/CD pipeline funcional\n</code></pre>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#3-documentacio-professional","title":"3. Documentaci\u00f3 Professional","text":"<pre><code>\u2705 Manual d'usuari (PDF)\n\u2705 Documentaci\u00f3 t\u00e8cnica completa\n\u2705 API docs amb Swagger UI\n\u2705 Diagrames UML actualitzats\n\u2705 Informe final acad\u00e8mic\n</code></pre>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#4-demo-i-presentacio","title":"4. Demo i Presentaci\u00f3","text":"<pre><code>\u2705 Presentaci\u00f3 executiva (15-20 min)\n\u2705 Demo en viu funcional\n\u2705 V\u00eddeo backup per emerg\u00e8ncies\n\u2705 Dades de demo atractives\n</code></pre>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#exemples-de-productes-reals","title":"\ud83c\udfd7\ufe0f Exemples de Productes Reals","text":"<p>Segons el sector escollit, l'alumne podria desenvolupar:</p>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#e-commerce","title":"E-commerce","text":"<ul> <li>Botiga online amb carret, pagaments, gesti\u00f3 productes</li> <li>Admin panel per gestionar comandes i inventari</li> <li>Sistema de valoracions i comentaris</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#gestio-de-projectes","title":"Gesti\u00f3 de Projectes","text":"<ul> <li>Dashboard per crear i assignar tasques</li> <li>Calendari integrat amb deadlines</li> <li>Chat en temps real entre membres d'equip</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#xarxa-social-tematica","title":"Xarxa Social Tem\u00e0tica","text":"<ul> <li>Perfils d'usuari personalitzables</li> <li>Timeline amb posts, likes, comentaris</li> <li>Sistema de seguiment i notificacions</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#plataforma-educativa","title":"Plataforma Educativa","text":"<ul> <li>Cursos amb v\u00eddeos i materials</li> <li>Sistema de progr\u00e9s i certificats</li> <li>F\u00f2rums de discussi\u00f3 per assignatura</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#evidencies-de-funcionament","title":"\ud83d\udcca Evid\u00e8ncies de Funcionament","text":""},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#metriques-objectives-tasca-521","title":"M\u00e8triques Objectives (Tasca 5.21)","text":"<ul> <li>Rendiment: Temps de c\u00e0rrega &lt;3s</li> <li>Funcionalitat: 100% funcions core operatives</li> <li>Accessibilitat: WCAG 2.1 AA compliance</li> <li>Seguretat: 0 vulnerabilitats cr\u00edtiques</li> <li>Testing: &gt;80% coverage, tots els tests passing</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#validacio-amb-usuaris-reals-tasca-510","title":"Validaci\u00f3 amb Usuaris Reals (Tasca 5.10)","text":"<ul> <li>Sessions d'usabilitat documentades</li> <li>SUS Score &gt;70 (acceptable)</li> <li>Task completion rate &gt;85%</li> <li>Feedback positiu majoritari</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#valor-professional-del-producte","title":"\ud83c\udf93 Valor Professional del Producte","text":""},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#portfolio-destacat","title":"Portfolio Destacat","text":"<p>El producte final serveix com a:</p> <ul> <li>Projecte estrella del portfolio professional</li> <li>Evid\u00e8ncia tangible de compet\u00e8ncies fullstack</li> <li>Demostraci\u00f3 pr\u00e0ctica per entrevistes de feina</li> <li>Base per emprenedoria o projectes futurs</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#competencies-demostrades","title":"Compet\u00e8ncies Demostrades","text":"<p>L'aplicaci\u00f3 final evidencia domini de:</p> <ul> <li>Desenvolupament fullstack modern</li> <li>Metodologies \u00e0gils (Scrum/Kanban)</li> <li>DevOps i desplegament en producci\u00f3</li> <li>UX/UI i accessibilitat</li> <li>Testing i qualitat de codi</li> <li>Documentaci\u00f3 professional</li> </ul>"},{"location":"Moduls/PI/guia_elaboracio_projecte_pel_professor.html#timeline-de-creacio-del-producte","title":"\u23f1\ufe0f Timeline de Creaci\u00f3 del Producte","text":"Setmanes Fase Entregables Parcials 1-4 An\u00e0lisi Requisits, objectius, tecnologies 5-10 Disseny UML, BD, prototips, planificaci\u00f3 11-20 Desenvolupament Aplicaci\u00f3 funcional (MVP) 21-25 Documentaci\u00f3 Manuals, testing, optimitzaci\u00f3 26-28 Desplegament Producte final + presentaci\u00f3 <p>El producte creix incrementalment cada setmana, assegurant un resultat final robust i professional que l'alumne pot mostrar orgullosament a employers o clients potencials.</p>"},{"location":"Moduls/PI/marclegalPFC.html","title":"Marc legal - M\u00f2dul projecte de desenvolupament d'aplicacions web / multiplataforma","text":""},{"location":"Moduls/PI/marclegalPFC.html#marc-legal-modul-projecte-de-desenvolupament-daplicacions-web-multiplataforma","title":"Marc legal - M\u00f2dul projecte de desenvolupament d'aplicacions web / multiplataforma","text":"<p>Orden EDU/2887/2010 (DAW) Orden EDU/2000/2010 (DAM)</p> <p>Article 5. M\u00f2dul professional de projecte.</p> <ol> <li> <p>El m\u00f2dul professional de projecte t\u00e9 un car\u00e0cter interdisciplinari i incorpora les variables tecnol\u00f2giques i organitzatives relacionades amb els aspectes essencials de la compet\u00e8ncia professional del t\u00edtol de T\u00e8cnic Superior en Desenvolupament d'Aplicacions Multiplataforma.</p> </li> <li> <p>Amb car\u00e0cter general aquest m\u00f2dul ser\u00e0 impartit pel professorat que exerceix la tutoria de formaci\u00f3 en centres de treball.</p> </li> <li> <p>El m\u00f2dul professional de projecte es desenvolupar\u00e0 durant el mateix per\u00edode que el m\u00f2dul professional de formaci\u00f3 en centres de treball. El professorat responsable del seu desenvolupament haur\u00e0 d'anticipar les activitats d'ensenyament i aprenentatge que facilitin el desenvolupament posterior del m\u00f2dul.</p> </li> <li> <p>El desenvolupament i seguiment del m\u00f2dul professional de projecte haur\u00e0 de compaginar la tutoria individual i col\u00b7lectiva. En qualsevol cas, almenys el 50 % de la durada total es dur\u00e0 a terme de forma presencial, completant-se amb la tutoria a dist\u00e0ncia emprant les tecnologies de la informaci\u00f3 i la comunicaci\u00f3.</p> </li> <li> <p>L'avaluaci\u00f3 d'aquest m\u00f2dul professional quedar\u00e0 condicionada a l'avaluaci\u00f3 positiva de la resta dels m\u00f2duls professionals del cicle formatiu, incl\u00f2s el de formaci\u00f3 en centres de treball.</p> </li> </ol> <p>Codis del m\u00f2dul:  0616 (DAW) / 0491 (DAM)</p>"},{"location":"Moduls/PI/marclegalPFC.html#resultats-daprenentatge","title":"Resultats d'aprenentatge","text":"RA1RA2RA3RA4"},{"location":"Moduls/PI/marclegalPFC.html#1-identifica-necessitats-del-sector-productiu-i-de-lorganitzacio-de-lempresa","title":"1. Identifica necessitats del sector productiu i de l'organitzaci\u00f3 de l'empresa.","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>1.1 Identificaci\u00f3 de les funcions dels llocs de treball.</p> <p>1.2 Estructura i organitzaci\u00f3 empresarial del sector.</p> <p>1.3 Activitat de l' empresa i la seva ubicaci\u00f3 en el sector.</p> <p>1.4 Organigrama de la empresa. Relaci\u00f3 funcional entre departaments.</p> <p>1.5 Tend\u00e8ncies del sector: productives, econ\u00f2miques, organitzatives, d' ocupaci\u00f3 i altres.</p> <p>1.6 Procediments de treball en l' \u00e0mbit de l' empresa. Sistemes i m\u00e8todes de treball.</p> <p>1.7 Determinaci\u00f3 de les relacions laborals excloses i relacions laborals especials.</p> <p>1.8 Conveni col.lectiu aplicable a l' \u00e0mbit professional.</p> <p>1.9 La cultura de l' empresa: imatge corporativa.</p> <p>1.10 Sistemes de qualitat i seguretat aplicables en el sector.</p>"},{"location":"Moduls/PI/marclegalPFC.html#2-disseny-de-projectes-relacionats-amb-el-sector","title":"2. Disseny de projectes relacionats amb el sector.","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>2.1 An\u00e0lisi de la realitat local, de l' oferta empresarial del sector a la zona i del context en el qual es desenvolupar\u00e0 el m\u00f2dul professional de formaci\u00f3 en centres de treball.</p> <p>2.2 Recopilaci\u00f3 d' informaci\u00f3.</p> <p>2.3 Estructura general d' un projecte.</p> <p>2.4 Elaboraci\u00f3 d' un gui\u00f3 de treball.</p> <p>2.5 Planificaci\u00f3 de l' execuci\u00f3 del projecte: objectius, continguts, recursos, metodologia, activitats, temporalitzaci\u00f3 i avaluaci\u00f3.</p> <p>2.6 Viabilitat i oportunitat del projecte.</p> <p>2.7 Revisi\u00f3 de la normativa aplicable.</p>"},{"location":"Moduls/PI/marclegalPFC.html#3-planificacio-de-lexecucio-del-projecte","title":"3. Planificaci\u00f3 de l'execuci\u00f3 del projecte","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>3.1 Seq\u00fcenciaci\u00f3 d'activitats.</p> <p>3.2 Elaboraci\u00f3 d' instruccions de treball.</p> <p>Elaboraci\u00f3 d' un pla de prevenci\u00f3 de riscos.</p> <p>Documentaci\u00f3 necess\u00e0ria per a la planificaci\u00f3 de l' execuci\u00f3 del projecte.</p> <p>Compliment de normes de seguretat i ambientals.</p> <p>Indicadors de garantia de la qualitat de projectes.</p>"},{"location":"Moduls/PI/marclegalPFC.html#4-definicio-de-procediments-de-control-i-avaluacio-de-l-execucio-del-projecte","title":"4. Definici\u00f3 de procediments de control i avaluaci\u00f3 de l' execuci\u00f3 del projecte","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>4.1 Propuesta de soluciones a los objetivos planteados en el proyecto y justificaci\u00f3n de las seleccionadas.</p> <p>4.2 Definici\u00f3 del procediment d' avaluaci\u00f3 del projecte.</p> <p>4.3 Determinaci\u00f3 de les variables susceptibles d' avaluaci\u00f3.</p> <p>4.4 Documentaci\u00f3 necess\u00e0ria per a l' avaluaci\u00f3 del projecte.</p> <p>4.5 Control de qualitat de proc\u00e9s i producte final.</p> <p>4.6 Registre de resultats.</p>"},{"location":"Moduls/PI/tasques_enunciats.html","title":"Enunciats Complets M12 \u2013 Projecte DAW","text":""},{"location":"Moduls/PI/tasques_enunciats.html#enunciats-complets-m12-projecte-daw","title":"Enunciats Complets M12 \u2013 Projecte DAW","text":"<p>Total de tasques: 95 Duraci\u00f3: 28 setmanes Intensitat mitjana: 3.4 tasques/setmana</p>"},{"location":"Moduls/PI/tasques_enunciats.html#taula-de-continguts","title":"Taula de Continguts","text":"<ul> <li>Bloc 1 \u2013 Identificaci\u00f3 i An\u00e0lisi de Necessitats (9 tasques)</li> <li>Bloc 2 \u2013 Disseny i Planificaci\u00f3 del Projecte (18 tasques)</li> <li>Bloc 3 \u2013 Desenvolupament i Implementaci\u00f3 (24 tasques)</li> <li>Bloc 4 \u2013 Documentaci\u00f3 i Presentaci\u00f3 (20 tasques)</li> <li>Bloc 5 \u2013 Avaluaci\u00f3 i Millora Cont\u00ednua (24 tasques)</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#bloc-1","title":"Bloc 1 \u2013 Identificaci\u00f3 i An\u00e0lisi de Necessitats","text":""},{"location":"Moduls/PI/tasques_enunciats.html#tasca-11-investigacio-del-mercat-tecnologic","title":"Tasca 1.1: Investigaci\u00f3 del mercat tecnol\u00f2gic","text":"<ul> <li>Termini: Setmana 1\u20132</li> <li>Entregable: Informe d\u2019an\u00e0lisi de mercat (PDF, 3\u20134 p\u00e0gines)</li> <li>Enunciat:   Realitza un estudi de mercat identificant almenys 5 tend\u00e8ncies tecnol\u00f2giques actuals, 3 empreses l\u00edders i 2 oportunitats de negoci. Elabora un informe amb an\u00e0lisi de mercat, gaps tecnol\u00f2gics, evoluci\u00f3 sectorial dels darrers 3 anys i previsions de futur. Utilitza fonts fiables i inclou refer\u00e8ncies bibliogr\u00e0fiques.</li> <li>Criteris: Profunditat 25% | Fonts fiables 25% | Identificaci\u00f3 tend\u00e8ncies 25% | Presentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-12-identificacio-de-necessitats-reals","title":"Tasca 1.2: Identificaci\u00f3 de necessitats reals","text":"<ul> <li>Termini: Setmana 1\u20132</li> <li>Entregable: Informe de necessitats + evid\u00e8ncies (entrevistes/enquestes)</li> <li>Enunciat:   Identifica 3 necessitats reals d\u2019usuaris o empreses mitjan\u00e7ant 5 entrevistes en profunditat o 1 enquesta de m\u00ednim 30 respostes. Documenta cada necessitat: descripci\u00f3, usuaris afectats, freq\u00fc\u00e8ncia/impacte, solucions existents i limitacions. Prioritza-les amb matriu impacte\u2013viabilitat i justifica la que abordar\u00e0 el teu projecte.</li> <li>Criteris: Validaci\u00f3 amb usuaris 30% | Documentaci\u00f3 necessitats 30% | Prioritzaci\u00f3 40%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-13-formulacio-dobjectius-smart","title":"Tasca 1.3: Formulaci\u00f3 d\u2019objectius SMART","text":"<ul> <li>Termini: Setmana 2</li> <li>Entregable: Document objectius SMART + taula de verificaci\u00f3</li> <li>Enunciat:   Formula entre 3 i 5 objectius SMART (Espec\u00edfic, Mesurable, Assolible, Rellevant, Temporal). Per cada objectiu especifica: descripci\u00f3, indicador, valor objectiu, recursos necessaris i data l\u00edmit. Presenta una taula que demostri el compliment dels 5 criteris.</li> <li>Criteris: Compliment SMART 50% | Coher\u00e8ncia 30% | Mesurabilitat 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-14-definicio-de-labast-del-projecte","title":"Tasca 1.4: Definici\u00f3 de l\u2019abast del projecte","text":"<ul> <li>Termini: Setmana 2\u20133</li> <li>Entregable: Document Statement of Work (SOW)</li> <li>Enunciat:   Delimita clarament qu\u00e8 inclou i qu\u00e8 no. Inclou descripci\u00f3 general, requisits funcionals (\u226510, MoSCoW), requisits no funcionals, limitacions, exclusions i criteris d\u2019acceptaci\u00f3. Acompanya casos d\u2019\u00fas o user stories per il\u00b7lustrar l\u2019abast.</li> <li>Criteris: Claredat abast 30% | Completesa funcions 35% | Funcions no incloses 35%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-15-analisi-de-viabilitat-tecnica","title":"Tasca 1.5: An\u00e0lisi de viabilitat t\u00e8cnica","text":"<ul> <li>Termini: Setmana 3</li> <li>Entregable: Informe viabilitat t\u00e8cnica + diagrama arquitectura</li> <li>Enunciat:   Avalua requisits de hardware i software, compatibilitat amb sistemes existents, escalabilitat, mantenibilitat, seguretat i rendiment. Identifica riscos amb probabilitat, impacte i pla de mitigaci\u00f3. Inclou diagrama t\u00e8cnic preliminar.</li> <li>Criteris: An\u00e0lisi riscos 30% | Escalabilitat 25% | Seguretat 25% | Viabilitat 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-16-analisi-de-viabilitat-economica","title":"Tasca 1.6: An\u00e0lisi de viabilitat econ\u00f2mica","text":"<ul> <li>Termini: Setmana 3</li> <li>Entregable: Pressupost detallat (Excel) + an\u00e0lisi comparativa</li> <li>Enunciat:   Calcula costos de desenvolupament, hosting, llic\u00e8ncies i manteniment. Estima ROI i punt d\u2019equilibri. Compara \u22652 alternatives d\u2019infraestructura (cloud vs on-premise) i justifica l\u2019elecci\u00f3.</li> <li>Criteris: Realisme pressupost 40% | Detall partides 30% | Cost-benefici 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-17-benchmarking-competitiu","title":"Tasca 1.7: Benchmarking competitiu","text":"<ul> <li>Termini: Setmana 2\u20133</li> <li>Entregable: Taula comparativa + informe d\u2019an\u00e0lisi</li> <li>Enunciat:   Analitza \u22653 aplicacions web competidores. Documenta funcions, tecnologia, model de negoci, punts forts i febles per a cada una. Proposa \u22655 millores diferencials per al teu projecte.</li> <li>Criteris: Qualitat an\u00e0lisi 40% | Propostes millora 30% | Presentaci\u00f3 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-18-seleccio-de-tecnologies","title":"Tasca 1.8: Selecci\u00f3 de tecnologies","text":"<ul> <li>Termini: Setmana 3\u20134</li> <li>Entregable: Document stack tecnol\u00f2gic</li> <li>Enunciat:   Selecciona llenguatges backend/frontend, frameworks, SGBD, servidor web, IDE, control de versions, eines de testing i hosting. Justifica cada elecci\u00f3 segons requisits, rendiment i costos.</li> <li>Criteris: Adequaci\u00f3 requisits 40% | Justificaci\u00f3 t\u00e8cnica 30% | Coher\u00e8ncia stack 20% | Actualitat 10%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-19-justificacio-tecnologica","title":"Tasca 1.9: Justificaci\u00f3 tecnol\u00f2gica","text":"<ul> <li>Termini: Setmana 4</li> <li>Entregable: Document de justificaci\u00f3 + matrius de decisi\u00f3</li> <li>Enunciat:   Argumenta cada elecci\u00f3 tecnol\u00f2gica comparant \u22652 alternatives per a cada element cr\u00edtic (framework, SGBD, ORM, hosting). Utilitza matrius ponderades per criteris t\u00e8cnics, econ\u00f2mics i d\u2019integraci\u00f3.</li> <li>Criteris: Argumentaci\u00f3 50% | Alternatives 25% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#bloc-2","title":"Bloc 2 \u2013 Disseny i Planificaci\u00f3 del Projecte","text":""},{"location":"Moduls/PI/tasques_enunciats.html#tasca-21-diagrama-de-casos-dus","title":"Tasca 2.1: Diagrama de casos d\u2019\u00fas","text":"<ul> <li>Termini: Setmana 4\u20135</li> <li>Entregable: Diagrama UML + fitxes descriptives</li> <li>Enunciat:   Dibuixa actors (2\u20135), casos d\u2019\u00fas principals (\u22658) i secundaris (\u22654). Utilitza relacions include, extend i generalitzaci\u00f3. Per cada cas inclou nom, actors, precondicions, flux normal i alternatiu, postcondicions i requisits no funcionals.</li> <li>Criteris: Completesa actors i casos 40% | Correctesa notaci\u00f3 30% | Claredat 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-22-diagrames-de-sequencia","title":"Tasca 2.2: Diagrames de seq\u00fc\u00e8ncia","text":"<ul> <li>Termini: Setmana 5\u20136</li> <li>Entregable: 5 diagrames UML + documentaci\u00f3</li> <li>Enunciat:   Crea \u22655 diagrames de seq\u00fc\u00e8ncia per processos cr\u00edtics (autenticaci\u00f3, CRUD, negoci, APIs externes, errors). Inclou objectes, missatges, fragments alt, opt i loop.</li> <li>Criteris: Coher\u00e8ncia cas \u00fas 30% | Notaci\u00f3 UML 30% | Cobertura funcional 40%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-23-diagrama-de-classes","title":"Tasca 2.3: Diagrama de classes","text":"<ul> <li>Termini: Setmana 6\u20137</li> <li>Entregable: Diagrama UML complet</li> <li>Enunciat:   Dissenya \u226510 classes amb atributs (tipus, visibilitat), m\u00e8todes (par\u00e0metres, retorn), relacions (her\u00e8ncia, composici\u00f3, agregaci\u00f3) i paquets l\u00f2gics.</li> <li>Criteris: Disseny OO 40% | Aplicaci\u00f3 patrons 30% | Completesa 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-24-diagrama-de-componentsdesplegament","title":"Tasca 2.4: Diagrama de components/desplegament","text":"<ul> <li>Termini: Setmana 7</li> <li>Entregable: Diagrama components + diagrama desplegament</li> <li>Enunciat:   Dibuixa components (presentaci\u00f3, negoci, dades, APIs) amb interf\u00edcies i depend\u00e8ncies. Afegeix diagrama de desplegament amb nodes, artefactes, protocols i consideracions de seguretat.</li> <li>Criteris: Correspond\u00e8ncia real 40% | Claredat 30% | Nivell detall 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-25-seleccio-darquitectura","title":"Tasca 2.5: Selecci\u00f3 d\u2019arquitectura","text":"<ul> <li>Termini: Setmana 5</li> <li>Entregable: Document matriu decisi\u00f3 + diagrama arquitect\u00f2nic</li> <li>Enunciat:   Compara 3 patrons arquitect\u00f2nics (MVC, n\u2010tier, microserveis, hexagonal). Avalua complexitat, escalabilitat, mantenibilitat, rendiment i cost. Utilitza matriu ponderada i justifica l\u2019elecci\u00f3 final.</li> <li>Criteris: Justificaci\u00f3 t\u00e8cnica 50% | Adequaci\u00f3 requisits 30% | Consideraci\u00f3 alternatives 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-26-disseny-de-la-capa-de-presentacio","title":"Tasca 2.6: Disseny de la capa de presentaci\u00f3","text":"<ul> <li>Termini: Setmana 7\u20138</li> <li>Entregable: Diagrama components frontend + document especificaci\u00f3</li> <li>Enunciat:   Defineix estructura de vistes (\u22658 pantalles), routing, components (\u226515), gesti\u00f3 d\u2019estats (Context API, Redux, Vuex o similar), binding de dades i patrons MVC/MVVM.</li> <li>Criteris: Separaci\u00f3 responsabilitats 40% | Aplicaci\u00f3 patrons 30% | Documentaci\u00f3 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-27-disseny-de-la-capa-de-negoci","title":"Tasca 2.7: Disseny de la capa de negoci","text":"<ul> <li>Termini: Setmana 8</li> <li>Entregable: Diagrames flux + document serveis negoci</li> <li>Enunciat:   Documenta \u226510 regles de negoci, 5 serveis de domini, gesti\u00f3 de transaccions i errors, algoritmes complexos. Aplica SOLID i patrons (Strategy, Factory, Observer).</li> <li>Criteris: Principis SOLID 40% | Gesti\u00f3 errors 30% | Qualitat codi 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-28-disseny-de-la-capa-de-dades","title":"Tasca 2.8: Disseny de la capa de dades","text":"<ul> <li>Termini: Setmana 8</li> <li>Entregable: Document estrat\u00e8gia acc\u00e9s dades + diagrama + exemples codi</li> <li>Enunciat:   Defineix patr\u00f3 d\u2019acc\u00e9s (Repository, DAO), operacions CRUD, pool connexions, gesti\u00f3 transaccions, ORM seleccionat i optimitzacions d\u2019acc\u00e9s.</li> <li>Criteris: Efici\u00e8ncia acc\u00e9s 40% | Gesti\u00f3 transaccions 30% | Separaci\u00f3 capes 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-29-disseny-del-model-de-dades","title":"Tasca 2.9: Disseny del model de dades","text":"<ul> <li>Termini: Setmana 6\u20137</li> <li>Entregable: Diagrama ER + diccionari de dades</li> <li>Enunciat:   Dibuixa \u226510 entitats amb atributs, tipus dades, claus prim\u00e0ries i foranes, relacions (1:1, 1:N, N:M) i restriccions d\u2019integritat.</li> <li>Criteris: Completesa model 35% | Correctesa relacions 35% | Adequaci\u00f3 tipus 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-210-normalitzacio-de-la-base-de-dades","title":"Tasca 2.10: Normalitzaci\u00f3 de la base de dades","text":"<ul> <li>Termini: Setmana 7</li> <li>Entregable: Document normalitzaci\u00f3 + diagrama normalitzat + scripts SQL</li> <li>Enunciat:   Aplica formes normals (1FN, 2FN, 3FN, BCNF). Documenta cada pas i justifica desnormalitzacions per rendiment.</li> <li>Criteris: Aplicaci\u00f3 normals 50% | Justificaci\u00f3 30% | Documentaci\u00f3 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-211-definicio-dindexs-i-optimitzacions","title":"Tasca 2.11: Definici\u00f3 d\u2019\u00edndexs i optimitzacions","text":"<ul> <li>Termini: Setmana 8</li> <li>Entregable: Document estrat\u00e8gia indexaci\u00f3 + scripts SQL CREATE INDEX</li> <li>Enunciat:   Defineix \u00edndexs primaris, \u00fanics, simples i compostos (\u22655). Especifica tipus (B-tree, GIN), justificaci\u00f3 per consultes i impacte rendiment.</li> <li>Criteris: Adequaci\u00f3 \u00edndexs 40% | Justificaci\u00f3 t\u00e8cnica 30% | Impacte rendiment 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-212-wireframes-i-mockups","title":"Tasca 2.12: Wireframes i mockups","text":"<ul> <li>Termini: Setmana 8\u20139</li> <li>Entregable: Wireframes (10) + mockups (5) + user flows detalls</li> <li>Enunciat:   Dissenya wireframes de baixa fidelitat per 10 pantalles i mockups alta fidelitat per 5 pantalles clau, aplicant guia estil i estats UI.</li> <li>Criteris: Cobertura funcional 40% | Claredat fluxos 30% | Qualitat visual 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-213-prototip-interactiu","title":"Tasca 2.13: Prototip interactiu","text":"<ul> <li>Termini: Setmana 9\u201310</li> <li>Entregable: Enlla\u00e7 prototip + document explicaci\u00f3</li> <li>Enunciat:   Crea un prototip interactiu amb Figma/Adobe XD d\u2019alta fidelitat (10 pantalles, \u22653 fluxos) amb navegaci\u00f3, transicions i dades reals.</li> <li>Criteris: Fidelitat prototip 30% | Interactivitat 30% | Usabilitat 40%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-214-disseny-responsive-i-accessible","title":"Tasca 2.14: Disseny responsive i accessible","text":"<ul> <li>Termini: Setmana 10</li> <li>Entregable: Responsive designs (3 breakpoints) + checklist WCAG 2.1 AA</li> <li>Enunciat:   Implementa mobile-first per m\u00f2bil, tablet i desktop. Aplica WCAG AA: contrast, navegaci\u00f3 per teclat, etiquetes ARIA i mides touch targets.</li> <li>Criteris: Adaptabilitat 35% | Accessibilitat 35% | Coher\u00e8ncia visual 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-215-planificacio-amb-metodologia-agil","title":"Tasca 2.15: Planificaci\u00f3 amb metodologia \u00e0gil","text":"<ul> <li>Termini: Setmana 5</li> <li>Entregable: Document metodologia + configuraci\u00f3 eina (Jira/Trello)</li> <li>Enunciat:   Decideix entre Scrum i Kanban. Defineix rols, cerim\u00f2nies, artefactes, WIP limits i m\u00e8triques (Lead Time, Cycle Time).</li> <li>Criteris: Adequaci\u00f3 metodolog\u00eda 40% | Definici\u00f3 rols 30% | Cerim\u00f2nies 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-216-product-backlog-i-user-stories","title":"Tasca 2.16: Product Backlog i User Stories","text":"<ul> <li>Termini: Setmana 5\u20136</li> <li>Entregable: Backlog complet (\u226520 stories) + Epics agrupats</li> <li>Enunciat:   Redacta \u226520 user stories en format \u201cCom a [ROL] vull [FUNC] per [BENEF]\u201d amb criteris d\u2019acceptaci\u00f3 (\u22653), prioritzaci\u00f3 MoSCoW i estimaci\u00f3 Fibonacci.</li> <li>Criteris: Qualitat stories 40% | Prioritzaci\u00f3 30% | Estimaci\u00f3 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-217-planificacio-de-sprints","title":"Tasca 2.17: Planificaci\u00f3 de sprints","text":"<ul> <li>Termini: Setmana 6</li> <li>Entregable: Sprint Backlog per \u22653 primers sprints + diagrama Gantt/Roadmap</li> <li>Enunciat:   Divideix el projecte en \u22656 sprints de 1\u20132 setmanes. Assigna User Stories a cada sprint basant-te en velocitat i depend\u00e8ncies. Inclou hites i buffers (10\u201315%).</li> <li>Criteris: Realisme temporal 40% | Equilibri sprints 30% | Definici\u00f3 objectius 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-218-estimacio-de-temps-i-recursos","title":"Tasca 2.18: Estimaci\u00f3 de temps i recursos","text":"<ul> <li>Termini: Setmana 6</li> <li>Entregable: Full d\u2019estimacions + matriu de riscos</li> <li>Enunciat:   Utilitza Planning Poker o Story Points (Fibonacci). Afegeix conting\u00e8ncia +20%. Calcula velocitat setmanal i ruta cr\u00edtica. Elabora matriu riscos amb probabilitat, impacte i pla de mitigaci\u00f3.</li> <li>Criteris: Realisme estimacions 40% | Gesti\u00f3 depend\u00e8ncies 30% | Riscos 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#bloc-3","title":"Bloc 3 \u2013 Desenvolupament i Implementaci\u00f3","text":""},{"location":"Moduls/PI/tasques_enunciats.html#tasca-31-configuracio-entorn-desenvolupament","title":"Tasca 3.1: Configuraci\u00f3 entorn desenvolupament","text":"<ul> <li>Termini: Setmana 10\u201311</li> <li>Entregable: README.md + scripts + repositori</li> <li>Enunciat:   Configura entorn local amb IDE (VS Code/WebStorm), Git, runtime backend (Node.js/PHP/Python), framework, SGBD, servidor web, testing i depend\u00e8ncies. Opcional Docker amb docker-compose.</li> <li>Criteris: Completesa setup 40% | Funcionalitat entorn 30% | Documentaci\u00f3 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-32-implementacio-arquitectura-backend","title":"Tasca 3.2: Implementaci\u00f3 arquitectura backend","text":"<ul> <li>Termini: Setmana 11\u201312</li> <li>Entregable: Estructura codi + doc. arquitectura + 3 endpoints prova</li> <li>Enunciat:   Implementa patr\u00f3 backend (MVC o capes). Inclou models, controladors, serveis, repositoris, configuraci\u00f3 de rutes, middlewares i entrypoint.</li> <li>Criteris: Adher\u00e8ncia arquitectura 40% | Separaci\u00f3 capes 30% | Mantenibilitat 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-33-apis-restful","title":"Tasca 3.3: APIs RESTful","text":"<ul> <li>Termini: Setmana 12\u201314</li> <li>Entregable: API completa (\u226515 endpoints) + col\u00b7lecci\u00f3 Postman</li> <li>Enunciat:   Desenvolupa endpoints REST amb m\u00e8todes HTTP, URLs sem\u00e0ntiques, JSON consistent, paginaci\u00f3, filtrat, versionat, CORS i rate limiting.</li> <li>Criteris: Est\u00e0ndards REST 35% | Cobertura funcional 35% | Gesti\u00f3 errors 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-34-autenticacio-i-autoritzacio","title":"Tasca 3.4: Autenticaci\u00f3 i autoritzaci\u00f3","text":"<ul> <li>Termini: Setmana 13\u201314</li> <li>Entregable: Sistema auth complet + doc. flux + tests</li> <li>Enunciat:   Registre, login amb JWT o sessions segures, hash contrasenyes, refresh tokens, roles RBAC i permissions.</li> <li>Criteris: Seguretat 40% | Funcionalitat roles 35% | Gesti\u00f3 sessions 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-35-gestio-derrors-i-logging","title":"Tasca 3.5: Gesti\u00f3 d\u2019errors i logging","text":"<ul> <li>Termini: Setmana 12\u201313</li> <li>Entregable: Logging + doc. errors + exemples</li> <li>Enunciat:   Captura global errors, middleware errors, JSON errors est\u00e0ndard, llibreria logging amb rotaci\u00f3 i logs estructurats.</li> <li>Criteris: Cobertura errors 40% | Qualitat logs 30% | UX errors 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-36-logica-de-negoci","title":"Tasca 3.6: L\u00f2gica de negoci","text":"<ul> <li>Termini: Setmana 14\u201316</li> <li>Entregable: Codi serveis + tests unitaris + doc.</li> <li>Enunciat:   Implementa serveis de negoci seguint SOLID i patrons (Strategy, Factory). Crea 5 serveis, validacions, c\u00e0lculs i integracions.</li> <li>Criteris: SOLID 40% | Patrons 30% | Qualitat codi 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-37-validacions-servidor-i-client","title":"Tasca 3.7: Validacions servidor i client","text":"<ul> <li>Termini: Setmana 13\u201315</li> <li>Entregable: Validacions + doc. + tests</li> <li>Enunciat:   Validacions servidor (tipus, rangs, sanititzaci\u00f3) i client (realtime, missatges clars, indicadors visuals).</li> <li>Criteris: Cobertura validacions 40% | Missatges clars 30% | Coher\u00e8ncia 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-38-frontend-responsive","title":"Tasca 3.8: Frontend responsive","text":"<ul> <li>Termini: Setmana 15\u201317</li> <li>Entregable: Codi HTML/CSS + validaci\u00f3 W3C + screenshots</li> <li>Enunciat:   Sem\u00e0ntica HTML5, CSS Grid/Flexbox, mobile-first, breakpoints, imatges responsives, tipografia fluida, accesibilitat b\u00e0sica.</li> <li>Criteris: Sem\u00e0ntica 30% | Responsive 40% | Compatibilitat 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-39-interaccio-ui","title":"Tasca 3.9: Interacci\u00f3 UI","text":"<ul> <li>Termini: Setmana 16\u201318</li> <li>Entregable: JavaScript/Framework + doc.</li> <li>Enunciat:   DOM dinamici, AJAX/Fetch, SPA behaviour, spinners, modals, animacions, drag&amp;drop i paginaci\u00f3 din\u00e0mica.</li> <li>Criteris: Funcionalitat 40% | Animacions 30% | UX 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-310-gestio-estats-frontend","title":"Tasca 3.10: Gesti\u00f3 estats frontend","text":"<ul> <li>Termini: Setmana 17\u201318</li> <li>Entregable: Sistema estats + diagrama</li> <li>Enunciat:   Context API/Redux/Vuex o Observer pattern vanilla per estats globals i locals, sincronitzaci\u00f3 amb backend.</li> <li>Criteris: Correctesa 50% | Rendiment 25% | Mantenibilitat 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-311-optimitzacio-rendiment-frontend","title":"Tasca 3.11: Optimitzaci\u00f3 rendiment frontend","text":"<ul> <li>Termini: Setmana 19\u201320</li> <li>Entregable: Lighthouse reports before/after + doc.</li> <li>Enunciat:   Lazy load, code splitting, minificaci\u00f3, compressi\u00f3, tree shaking, critical CSS, prefetch, service workers i fonts optimizats.</li> <li>Criteris: Millora rendiment 50% | Implementaci\u00f3 t\u00e8cniques 30% | Testing 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-312-connexio-i-configuracio-sgbd","title":"Tasca 3.12: Connexi\u00f3 i configuraci\u00f3 SGBD","text":"<ul> <li>Termini: Setmana 11</li> <li>Entregable: Connexi\u00f3 SSL, pool, doc. config</li> <li>Enunciat:   Separar config, .env, pool connexions, SSL, health check i retry logic.</li> <li>Criteris: Estabilitat 40% | Seguretat 30% | Documentaci\u00f3 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-313-implementacio-model-de-dades","title":"Tasca 3.13: Implementaci\u00f3 model de dades","text":"<ul> <li>Termini: Setmana 11\u201312</li> <li>Entregable: Scripts SQL, migrations, seed data</li> <li>Enunciat:   Crear taules, vistes, triggers, procediments i dades de prova (\u226550 registres) seguint diagrama ER.</li> <li>Criteris: Fidelitat model 40% | Qualitat SQL 35% | Rendiment 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-314-consultes-optimitzades","title":"Tasca 3.14: Consultes optimitzades","text":"<ul> <li>Termini: Setmana 14\u201316</li> <li>Entregable: SQL queries + execution plans</li> <li>Enunciat:   SELECT, JOINs, CTEs, agregacions, paginaci\u00f3, full-text. Analitza amb EXPLAIN i evita scans innecessaris.</li> <li>Criteris: Efici\u00e8ncia queries 45% | Correctesa 35% | \u00cdndexs 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-315-gestio-transaccions","title":"Tasca 3.15: Gesti\u00f3 transaccions","text":"<ul> <li>Termini: Setmana 15</li> <li>Entregable: Codi transaccions + tests</li> <li>Enunciat:   Implementa BEGIN/COMMIT/ROLLBACK amb nivells a\u00efllament, locks pessimistes/optimistes i retry logic.</li> <li>Criteris: Atomicitat 50% | Gesti\u00f3 errors 30% | Rendiment 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-316-upload-i-gestio-fitxers-multimedia","title":"Tasca 3.16: Upload i gesti\u00f3 fitxers multim\u00e8dia","text":"<ul> <li>Termini: Setmana 16\u201317</li> <li>Entregable: Form upload, validaci\u00f3 server/client, thumbnails</li> <li>Enunciat:   Input file, validaci\u00f3 MIME i mida, noms \u00fanics, emmagatzematge (filesystem o S3), thumbnails, endpoint desc\u00e0rrega i permisos.</li> <li>Criteris: Seguretat upload 40% | Funcionalitat completa 35% | Gesti\u00f3 errors 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-317-reproduccio-multimedia","title":"Tasca 3.17: Reproducci\u00f3 multim\u00e8dia","text":"<ul> <li>Termini: Setmana 17\u201318</li> <li>Entregable: Controls v\u00eddeo/\u00e0udio personalitzats + tests</li> <li>Enunciat:   HTML5 / amb controls, subt\u00edtols, keyboard shortcuts, suport formats, fallbacks i analytics.</li> <li>Criteris: Compatibilitat 35% | Qualitat controls 35% | UX 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-318-funcionalitats-interactives-avancades","title":"Tasca 3.18: Funcionalitats interactives avan\u00e7ades","text":"<ul> <li>Termini: Setmana 18\u201320</li> <li>Entregable: \u22653 funcionalitats + doc. + demo</li> <li>Enunciat:   Drag&amp;drop, autocomplete, filtres, export CSV/PDF, gr\u00e0fics, mapes, push notifications, rich text, calendari o chat.</li> <li>Criteris: Innovaci\u00f3 30% | Implementaci\u00f3 40% | UX 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-319-optimitzacio-recursos-multimedia","title":"Tasca 3.19: Optimitzaci\u00f3 recursos multim\u00e8dia","text":"<ul> <li>Termini: Setmana 19</li> <li>Entregable: Pipeline scripts + metrics before/after</li> <li>Enunciat:   Compressi\u00f3 imatges (WebP/AVIF), v\u00eddeos (H.264), lazy loading, sprites, LQIP, CDN si cal.</li> <li>Criteris: Millora rendiment 45% | Qualitat t\u00e8cnica 35% | Impacte 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-320-documentacio-endpoints-api","title":"Tasca 3.20: Documentaci\u00f3 endpoints API","text":"<ul> <li>Termini: Setmana 14\u201315</li> <li>Entregable: Swagger UI + OpenAPI spec</li> <li>Enunciat:   Documenta tots els endpoints amb OpenAPI 3.0: par\u00e0metres, schemas, exemples, autenticaci\u00f3 i tags.</li> <li>Criteris: Completesa docs 40% | Exemples clars 30% | Execuci\u00f3 \u201cTry it out\u201d 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-321-testing-unitari-i-integracio-apis","title":"Tasca 3.21: Testing unitari i integraci\u00f3 APIs","text":"<ul> <li>Termini: Setmana 16\u201318</li> <li>Entregable: Suites tests + coverage &gt;80%</li> <li>Enunciat:   Jest/Mocha o PHPUnit tests per l\u00f2gica de negoci i Supertest/N  ewman per integraci\u00f3. Cobertura \u226580%.</li> <li>Criteris: Cobertura tests 40% | Qualitat assertions 35% | Integraci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-322-versionat-amb-git","title":"Tasca 3.22: Versionat amb Git","text":"<ul> <li>Termini: Continu; m\u00ednim 50 commits</li> <li>Entregable: Repositori net + branching strategy</li> <li>Enunciat:   .gitignore, commits sem\u00e0ntics (Conventional Commits), GitFlow o trunk-based, PRs, tags vX.Y.Z.</li> <li>Criteris: Historial net 35% | Commits sem\u00e0ntics 30% | Branching 35%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-323-code-review-i-qualitat-codi","title":"Tasca 3.23: Code review i qualitat codi","text":"<ul> <li>Termini: Setmana 18\u201320</li> <li>Entregable: Linting, SonarQube + checklist review</li> <li>Enunciat:   ESLint/Prettier, Pylint/PHPStan, SonarQube, pre-commit hooks, code smells i complexitat baixa.</li> <li>Criteris: Compliment est\u00e0ndards 40% | Resultats linting 30% | Millora cont\u00ednua 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-324-integracio-continua-ci","title":"Tasca 3.24: Integraci\u00f3 cont\u00ednua (CI)","text":"<ul> <li>Termini: Setmana 20</li> <li>Entregable: Pipeline CI (GitHub Actions/Jenkins) + badge</li> <li>Enunciat:   Configura pipeline per linting, tests, build i coverage. Notificacions i badge en README.</li> <li>Criteris: Automatitzaci\u00f3 40% | Efic\u00e0cia pipeline 35% | Temps execuci\u00f3 &lt;10m 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#bloc-4","title":"Bloc 4 \u2013 Documentaci\u00f3 i Presentaci\u00f3","text":""},{"location":"Moduls/PI/tasques_enunciats.html#tasca-41-manual-tecnic-arquitectura","title":"Tasca 4.1: Manual t\u00e8cnic \u2013 Arquitectura","text":"<ul> <li>Termini: Setmana 23\u201324</li> <li>Entregable: Cap\u00edtol arquitectura (PDF) + diagrames</li> <li>Enunciat:   Documenta arquitectura amb diagrama alt nivell, components finals, desplegament, decisions, patrons disseny i seguretat.</li> <li>Criteris: Completesa arquitectura 40% | Claredat diagrames 30% | Justificaci\u00f3 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-42-manual-tecnic-installacio","title":"Tasca 4.2: Manual t\u00e8cnic \u2013 Instal\u00b7laci\u00f3","text":"<ul> <li>Termini: Setmana 21\u201322</li> <li>Entregable: Guia instal\u00b7laci\u00f3 + scripts</li> <li>Enunciat:   Pas a pas: prerequisits, clonaci\u00f3 repo, depend\u00e8ncies, config BD, migrations, .env, build i start.</li> <li>Criteris: Claredat instruccions 40% | Funcionalitat scripts 30% | Completesa 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-43-manual-tecnic-configuracio","title":"Tasca 4.3: Manual t\u00e8cnic \u2013 Configuraci\u00f3","text":"<ul> <li>Termini: Setmana 22\u201323</li> <li>Entregable: Document config + fitxers exemple</li> <li>Enunciat:   Documenta arxius config principals, variables .env, entorns, logging, cache, email i seguretat.</li> <li>Criteris: Precisi\u00f3 config 50% | Troubleshooting 25% | Actualitzaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-44-manual-tecnic-base-de-dades","title":"Tasca 4.4: Manual t\u00e8cnic \u2013 Base de dades","text":"<ul> <li>Termini: Setmana 23</li> <li>Entregable: Documentaci\u00f3 BD completa + scripts</li> <li>Enunciat:   Diagrama ER final, diccionari dades, scripts creaci\u00f3, vistes, procediments, triggers, backup i manteniment.</li> <li>Criteris: Correspond\u00e8ncia model 40% | Qualitat scripts 30% | Documentaci\u00f3 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-45-manual-tecnic-apis","title":"Tasca 4.5: Manual t\u00e8cnic \u2013 APIs","text":"<ul> <li>Termini: Setmana 20\u201321</li> <li>Entregable: Docs Markdown + Swagger UI + Postman</li> <li>Enunciat:   Guia inici r\u00e0pid, auth, rate limits, versionat, esquemes, exemples request/response i changelog.</li> <li>Criteris: Completesa endpoints 40% | Exemples clars 30% | Execuci\u00f3 Swagger 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-46-manual-dusuari-introduccio","title":"Tasca 4.6: Manual d\u2019usuari \u2013 Introducci\u00f3","text":"<ul> <li>Termini: Setmana 24</li> <li>Entregable: PDF amb disseny</li> <li>Enunciat:   Explica qu\u00e8 \u00e9s l\u2019app, p\u00fablic objectiu, requisits, accessibilitat, screenshots anotats i convencions de manual.</li> <li>Criteris: Claredat objectius 35% | Adequaci\u00f3 audi\u00e8ncia 35% | Precisi\u00f3 requisits 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-47-manual-dusuari-funcionalitats","title":"Tasca 4.7: Manual d\u2019usuari \u2013 Funcionalitats","text":"<ul> <li>Termini: Setmana 24\u201325</li> <li>Entregable: PDF amb guies pas a pas i screenshots</li> <li>Enunciat:   Per \u226510 funcions: t\u00edtol, descripci\u00f3, passos numerats amb captures, camps, resultats i consells.</li> <li>Criteris: Cobertura funcions 40% | Qualitat screenshots 30% | \u00das pr\u00e0ctic 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-48-manual-dusuari-troubleshooting","title":"Tasca 4.8: Manual d\u2019usuari \u2013 Troubleshooting","text":"<ul> <li>Termini: Setmana 25</li> <li>Entregable: PDF FAQs + solucions</li> <li>Enunciat:   Secci\u00f3 errors comuns amb causes, solucions i contacte suport. Inclou FAQs \u226510 i guies resoluci\u00f3.</li> <li>Criteris: Utilitat 40% | Claredat solucions 35% | Completesa 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-49-manual-dusuari-casos-dus","title":"Tasca 4.9: Manual d\u2019usuari \u2013 Casos d\u2019\u00fas","text":"<ul> <li>Termini: Setmana 25</li> <li>Entregable: PDF narratives + screenshots</li> <li>Enunciat:   \u22655 casos d\u2019\u00fas reals amb context, passos, screenshots, variations i personas fict\u00edcies.</li> <li>Criteris: Realisme 40% | Detall 35% | Narrativa 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-410-documentacio-codi-comentaris","title":"Tasca 4.10: Documentaci\u00f3 codi \u2013 Comentaris","text":"<ul> <li>Termini: Continu (11\u201325)</li> <li>Entregable: Codi comentat + docs HTML</li> <li>Enunciat:   JSDoc/PHPDoc/Sphinx amb descripci\u00f3 classes, m\u00e8todes, par\u00e0metres, retorns i examples.</li> <li>Criteris: Cobertura comentaris 40% | Qualitat docs 35% | Generaci\u00f3 autom\u00e0tica 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-411-readmemd","title":"Tasca 4.11: README.md","text":"<ul> <li>Termini: Setmana 21</li> <li>Entregable: README complet</li> <li>Enunciat:   T\u00edtol, badges, screenshots, bullets funcions, demo link, stack, prereqs, instal\u00b7laci\u00f3, \u00fas, tests, contributing, llic\u00e8ncia, autors.</li> <li>Criteris: Completesa 35% | Claredat 35% | Professional 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-412-api-docs-swagger","title":"Tasca 4.12: API docs Swagger","text":"<ul> <li>Termini: Setmana 20\u201321</li> <li>Entregable: Swagger UI + OpenAPI spec</li> <li>Enunciat:   Documentaci\u00f3 auto generada amb operativa \u201cTry it out\u201d i export JSON/YAML.</li> <li>Criteris: Cobertura total 40% | Funcionalitat try it out 35% | Mantenibilitat 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-413-diagrames-tecnics-actualitzats","title":"Tasca 4.13: Diagrames t\u00e8cnics actualitzats","text":"<ul> <li>Termini: Setmana 24</li> <li>Entregable: UML finals en /docs/diagrams</li> <li>Enunciat:   Actualitza casos d\u2019\u00fas, seq\u00fc\u00e8ncia, classes, components, desplegament i ER segons la implementaci\u00f3 final.</li> <li>Criteris: Fidelitat 50% | Qualitat visual 30% | Actualitzaci\u00f3 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-414-informe-final-resum-executiu","title":"Tasca 4.14: Informe final \u2013 Resum executiu","text":"<ul> <li>Termini: Setmana 26</li> <li>Entregable: PDF (2 p\u00e0g.)</li> <li>Enunciat:   Sintetitza problema, objectius, soluci\u00f3, metodologia, tecnologies, resultats clau, impacte i recomanacions top 3.</li> <li>Criteris: S\u00edntesi 40% | Presentaci\u00f3 resultats 35% | Claredat 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-415-informe-final-metodologia","title":"Tasca 4.15: Informe final \u2013 Metodologia","text":"<ul> <li>Termini: Setmana 26</li> <li>Entregable: PDF (3\u20134 p\u00e0g.)</li> <li>Enunciat:   Documenta fases, sprints, ceremonies, eines, Gantt vs real, burndown, gesti\u00f3 riscos i lli\u00e7ons apreses.</li> <li>Criteris: Justificaci\u00f3 40% | Reflexi\u00f3 adaptacions 35% | Documentaci\u00f3 lli\u00e7ons 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-416-informe-final-resultats","title":"Tasca 4.16: Informe final \u2013 Resultats","text":"<ul> <li>Termini: Setmana 26\u201327</li> <li>Entregable: PDF (4\u20135 p\u00e0g.)</li> <li>Enunciat:   Presenta entregables implementats, cobertura tests, rendiment, m\u00e8triques QA, usabilitat i compliance WCAG.</li> <li>Criteris: Evid\u00e8ncia 40% | Compliment SMART 35% | Dades objectivables 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-417-informe-final-conclusions","title":"Tasca 4.17: Informe final \u2013 Conclusions","text":"<ul> <li>Termini: Setmana 27</li> <li>Entregable: PDF (3\u20134 p\u00e0g.)</li> <li>Enunciat:   Reflexiona \u00e8xits i errors, decisions t\u00e8cniques, dificultats, compet\u00e8ncies desenvolupades i aplicabilitat laboral.</li> <li>Criteris: An\u00e0lisi cr\u00edtica 40% | Reflexi\u00f3 personal 35% | Objectivitat 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-418-informe-final-millores-futures","title":"Tasca 4.18: Informe final \u2013 Millores futures","text":"<ul> <li>Termini: Setmana 27</li> <li>Entregable: PDF (2\u20133 p\u00e0g.) + roadmap</li> <li>Enunciat:   Proposa funcionalitats pendents, refactoring, evoluci\u00f3 UX, integracions, internacionalitzaci\u00f3 i seguretat. Prioritza amb matriu impacte/esfor\u00e7.</li> <li>Criteris: Viabilitat 35% | Prioritzaci\u00f3 35% | Estimaci\u00f3 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-419-presentacio-executiva","title":"Tasca 4.19: Presentaci\u00f3 executiva","text":"<ul> <li>Termini: Setmana 27\u201328</li> <li>Entregable: Slides PPT/Google + PDF exportat</li> <li>Enunciat:   15\u201320 min. Slide deck amb context, objectius, arquitectura simplificada, funcions clau, demo, resultats, conclusions i roadmap.</li> <li>Criteris: Estructura 30% | Storytelling 25% | Visuals 25% | Timing 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-420-demo-interactiva","title":"Tasca 4.20: Demo interactiva","text":"<ul> <li>Termini: Setmana 28</li> <li>Entregable: Demo en viu + backup v\u00eddeo/screenshots</li> <li>Enunciat:   Prepara escenari realista amb dades de demo, mostra login, CRUD principal, funcionalitats interactives i fallback plan.</li> <li>Criteris: Funcionalitat 40% | Preparaci\u00f3 30% | Gesti\u00f3 imprevistos 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#bloc-5","title":"Bloc 5 \u2013 Avaluaci\u00f3 i Millora Cont\u00ednua","text":""},{"location":"Moduls/PI/tasques_enunciats.html#tasca-51-testing-unitari-backend","title":"Tasca 5.1: Testing unitari backend","text":"<ul> <li>Termini: Setmanes 16\u201320</li> <li>Entregable: Test suite + coverage &gt;80%</li> <li>Enunciat:   Crea tests unitaris per serveis i helpers. Mocking dep. externes, fixtures, teardown, assertions clares i tests parametritzats.</li> <li>Criteris: Coverage 40% | Qualitat assertions 35% | Organitzaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-52-testing-integracio-apis","title":"Tasca 5.2: Testing integraci\u00f3 APIs","text":"<ul> <li>Termini: Setmanes 17\u201320</li> <li>Entregable: Tests integraci\u00f3 + report</li> <li>Enunciat:   Automatitza tests HTTP per endpoints cr\u00edtics: happy path, validacions, errors 401/403/404, CRUD. BD test separada i seed data.</li> <li>Criteris: Cobertura endpoints 40% | Qualitat tests 30% | Gesti\u00f3 errors 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-53-testing-funcional-frontend","title":"Tasca 5.3: Testing funcional frontend","text":"<ul> <li>Termini: Setmanes 18\u201321</li> <li>Entregable: Cypress/Selenium suite + screenshots</li> <li>Enunciat:   Testing UI: navegaci\u00f3, formularis, modals, drag&amp;drop, responsive, upload, feedback visuals.</li> <li>Criteris: Cobertura fluxos 40% | Qualitat tests 35% | Mantenibilitat 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-54-testing-e2e","title":"Tasca 5.4: Testing E2E","text":"<ul> <li>Termini: Setmana 21\u201322</li> <li>Entregable: E2E tests + v\u00eddeos execuci\u00f3</li> <li>Enunciat:   Fluxos complets: registre/login, CRUD, checkout, paginaci\u00f3. BD de test i videos per doc.</li> <li>Criteris: Cobertura escenaris 45% | Robustesa tests 30% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-55-testing-rendiment","title":"Tasca 5.5: Testing rendiment","text":"<ul> <li>Termini: Setmana 22</li> <li>Entregable: Lighthouse &amp; GTmetrix reports + doc.</li> <li>Enunciat:   Mesura Core Web Vitals i optimitza segons resultats.</li> <li>Criteris: Millora m\u00e8triques 50% | An\u00e0lisi detallat 30% | Implementaci\u00f3 20%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-56-testing-carrega-i-estres","title":"Tasca 5.6: Testing c\u00e0rrega i estr\u00e8s","text":"<ul> <li>Termini: Setmana 22</li> <li>Entregable: Load test reports + gr\u00e0fics</li> <li>Enunciat:   Simula 50\u2013500 usuaris, ramp-up, spike, soak testing. Mesura temps resposta, throughput i error rate.</li> <li>Criteris: Determinaci\u00f3 l\u00edmits 40% | An\u00e0lisi resultats 35% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-57-testing-seguretat","title":"Tasca 5.7: Testing seguretat","text":"<ul> <li>Termini: Setmana 21\u201322</li> <li>Entregable: Security audit report + fix</li> <li>Enunciat:   OWASP ZAP/Burp scans, npm/composer audit, headers seguretat, CSRF, XSS, injection tests.</li> <li>Criteris: Identificaci\u00f3 vulnerabilitats 40% | Remediaci\u00f3 35% | Doc. fixes 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-58-testing-cross-browser","title":"Tasca 5.8: Testing cross-browser","text":"<ul> <li>Termini: Setmana 23</li> <li>Entregable: Matriu compatibilitat + screenshots</li> <li>Enunciat:   Test manual/automatitzat en Chrome, Firefox, Safari, Edge i m\u00f2bils. Detecta issues i aplica polyfills.</li> <li>Criteris: Cobertura navegadors 40% | Resoluci\u00f3 issues 35% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-59-auditoria-accessibilitat-wcag","title":"Tasca 5.9: Auditoria accessibilitat WCAG","text":"<ul> <li>Termini: Setmana 23</li> <li>Entregable: AXE/WAVE/Lighthouse report + fixes</li> <li>Enunciat:   Verifica WCAG 2.1 AA: contrast, focus, labels, ARIA, teclat only i screen reader tests.</li> <li>Criteris: Compliment 50% | Documentaci\u00f3 issues 25% | Fixes aplicats 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-510-testing-usabilitat","title":"Tasca 5.10: Testing usabilitat","text":"<ul> <li>Termini: Setmana 24</li> <li>Entregable: Usability report + v\u00eddeos</li> <li>Enunciat:   Sessions think-aloud amb 5\u201310 usuaris, tasques realistes, SUS survey, recordings i notes d\u2019observacions.</li> <li>Criteris: Task completion 35% | Time on task 35% | Satisfaction 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-511-analisi-metriques-ux","title":"Tasca 5.11: An\u00e0lisi m\u00e8triques UX","text":"<ul> <li>Termini: Setmana 24</li> <li>Entregable: Dashboard m\u00e8triques + insights</li> <li>Enunciat:   Configura Google Analytics/Mixpanel: events, funnels, heatmaps i grava sessions. Analitza completion rate, error rate i satisfacci\u00f3.</li> <li>Criteris: Recollida m\u00e8triques 40% | An\u00e0lisi insights 35% | Recomanacions 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-512-validacio-responsive-design","title":"Tasca 5.12: Validaci\u00f3 responsive design","text":"<ul> <li>Termini: Setmana 23</li> <li>Entregable: Checklist + screenshots m\u00faltiples breakpoints</li> <li>Enunciat:   Test responsive en dispositius reals i emuladors per 8 breakpoints. Verifica layout, text, botons i taules.</li> <li>Criteris: Cobertura breakpoints 40% | Qualitat fixes 35% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-513-refactoring-i-optimitzacio-codi","title":"Tasca 5.13: Refactoring i optimitzaci\u00f3 codi","text":"<ul> <li>Termini: Setmana 25</li> <li>Entregable: Codi refactoritzat + SonarQube report</li> <li>Enunciat:   Utilitza SonarQube per identificar code smells, complexitat \u226510 i duplicaci\u00f3. Aplica SOLID, DRY, patterns i tests passing.</li> <li>Criteris: Reducci\u00f3 debt &gt;50% | Tests passing 100% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-514-optimitzacio-consultes-bd","title":"Tasca 5.14: Optimitzaci\u00f3 consultes BD","text":"<ul> <li>Termini: Setmana 25</li> <li>Entregable: EXPLAIN reports + benchmarks</li> <li>Enunciat:   Analitza slow queries, afegeix \u00edndexs, partitioning, views materialitzades, caching i ORM eager loading.</li> <li>Criteris: Millora rendiment &gt;50% | Correctesa consultes 35% | Documentaci\u00f3 15%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-515-optimitzacio-recursos-frontend","title":"Tasca 5.15: Optimitzaci\u00f3 recursos frontend","text":"<ul> <li>Termini: Setmana 25\u201326</li> <li>Entregable: Lighthouse reports + bundle analysis</li> <li>Enunciat:   Lazy loading, code splitting, minify, tree shaking, compressi\u00f3, critical CSS i fonts optimizats.</li> <li>Criteris: Score &gt;90 | M\u00e8triques Core Web Vitals 50% | Bundle size 25% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-516-implementacio-cache-estrategic","title":"Tasca 5.16: Implementaci\u00f3 cache estrat\u00e8gic","text":"<ul> <li>Termini: Setmana 26</li> <li>Entregable: Document arquitectura cache + metrics</li> <li>Enunciat:   Cache navegador (HTTP), app (Redis), CDN, invalidation strategy i monitoring cache hit rate.</li> <li>Criteris: Hit rate 45% | Estrat\u00e8gia 30% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-517-configuracio-entorn-produccio","title":"Tasca 5.17: Configuraci\u00f3 entorn producci\u00f3","text":"<ul> <li>Termini: Setmana 26</li> <li>Entregable: Infraestructura doc + security checklist</li> <li>Enunciat:   Setup servidor cloud, SSL, firewall, backups, SSH keys, fail2ban, rate limiting i logs rotaci\u00f3.</li> <li>Criteris: Seguretat 40% | Automatitzaci\u00f3 35% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-518-desplegament-aplicacio","title":"Tasca 5.18: Desplegament aplicaci\u00f3","text":"<ul> <li>Termini: Setmana 27</li> <li>Entregable: Deployment scripts + CI/CD pipeline</li> <li>Enunciat:   Blue/Green o Rolling deployment amb zero downtime, migrations i smoke tests. Documenta rollback i health checks.</li> <li>Criteris: Zero downtime 45% | Automatitzaci\u00f3 30% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-519-configuracio-monitoritzacio","title":"Tasca 5.19: Configuraci\u00f3 monitoritzaci\u00f3","text":"<ul> <li>Termini: Setmana 27</li> <li>Entregable: APM dashboards + alertes</li> <li>Enunciat:   Integra New Relic/Datadog, metrics servidors, BD, errors (Sentry) i uptime checks amb alertes.</li> <li>Criteris: Cobertura metrics 40% | Alerts config 35% | Documentaci\u00f3 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-520-documentacio-desplegament","title":"Tasca 5.20: Documentaci\u00f3 desplegament","text":"<ul> <li>Termini: Setmana 27\u201328</li> <li>Entregable: Manual operacions + runbooks</li> <li>Enunciat:   Documenta procediments deployment, rollback, backups, troubleshooting i scaling. Inclou runbooks i scripts.</li> <li>Criteris: Completesa 40% | Claredat 35% | Facilitat uso 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-521-analisi-resultats-vs-objectius","title":"Tasca 5.21: An\u00e0lisi resultats vs objectius","text":"<ul> <li>Termini: Setmana 28</li> <li>Entregable: Dashboard + root cause analysis</li> <li>Enunciat:   Compara resultats reals amb SMART inicials. Calcula percentatge de compliment i analitza desviacions.</li> <li>Criteris: Quantificaci\u00f3 45% | Root causes 30% | Claredat 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-522-identificacio-punts-millora","title":"Tasca 5.22: Identificaci\u00f3 punts millora","text":"<ul> <li>Termini: Setmana 28</li> <li>Entregable: Matriu impacte/esfor\u00e7 + action plan</li> <li>Enunciat:   Analitza t\u00e8cnic, UX/UI i proc\u00e9s per identificar \u00e0rees de millora priorit\u00e0ries.</li> <li>Criteris: Identificaci\u00f3 gaps 40% | Prioritzaci\u00f3 35% | Viabilitat 25%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-523-roadmap-evolutiu","title":"Tasca 5.23: Roadmap evolutiu","text":"<ul> <li>Termini: Setmana 28</li> <li>Entregable: Roadmap visual + backlog futures</li> <li>Enunciat:   Planifica v1.1, v1.2 i v2.0 amb themes, features, estimacions, recursos i timeline.</li> <li>Criteris: Realisme 35% | Prioritzaci\u00f3 35% | Documentaci\u00f3 30%</li> </ul>"},{"location":"Moduls/PI/tasques_enunciats.html#tasca-524-avaluacio-critica-global","title":"Tasca 5.24: Avaluaci\u00f3 cr\u00edtica global","text":"<ul> <li>Termini: Setmana 28</li> <li>Entregable: Essay reflexiu (3\u20135 p\u00e0g.)</li> <li>Enunciat:   Reflexiona sobre \u00e8xits, fracassos, decisions, metodologies, compet\u00e8ncies apreses i recomanacions futures.</li> <li>Criteris: An\u00e0lisi cr\u00edtica 35% | Reflexi\u00f3 personal 35% | Lli\u00e7ons aprend 30%</li> </ul>"},{"location":"blog/index.html","title":"Bloc","text":""},{"location":"blog/index.html#bloc","title":"Bloc","text":"<p>Foto de Suzy Hazelwood (una mica retallada)</p>"},{"location":"blog/2024/11/18/simulaci%C3%B3-aparcament-amb-java.html","title":"Simulaci\u00f3 aparcament amb Java","text":""},{"location":"blog/2024/11/18/simulaci%C3%B3-aparcament-amb-java.html#simulacio-aparcament-amb-java","title":"Simulaci\u00f3 aparcament amb Java","text":""},{"location":"blog/2024/11/18/simulaci%C3%B3-aparcament-amb-java.html#enunciat","title":"Enunciat","text":"<p>Heu de crear una classe parking que anomenareu PRU04E05Parking_nom_llinatge.java</p> <p>Aquesta classe ha de simular el funcionament d\u2019un programa de gesti\u00f3 de parking, tal i com se va explicar a classe.</p> <p>Com a m\u00ednim ha de tenir un constructor tal i com es veu a la imatge.</p> <p>M\u00e8todes p\u00fablics que ha de tenir la vostra classe parking (han de ser literalment aquests per qu\u00e8 despr\u00e9s se puguin intercanviar les classes):</p> <p></p> <p>Si considereu necessari crear altres m\u00e8todes, aquests han de ser privats.</p> <p>La classe haur\u00e0 \u201cd\u2019avisar\u201d quan detecti ocupacions de m\u00e9s del 85% a cada tipus de parking.</p> <p>Igualment haur\u00e0 d\u2019avisar quan les places s'exhaureixin i no podran entrar m\u00e9s cotxes, excepte en el cas de que les places exhaurides siguin de discapacitats. Aleshores el cotxe de discapacitat ocupar\u00e0 una pla\u00e7a de parking per no discapacitats i a partir d\u2019aqu\u00ed ser\u00e0 considerat com a no discapacitat.</p> <p>Per comprovar el seu funcionament haureu de crear una classe de prova anomenada PRU04E05ParkingTest_nom_llinatge.java</p> <p>Aquesta segona classe ha de poder rebre un par\u00e0metre que sigui el path complet d\u2019un fitxer. Si \u00e9s el cas, el primer que haur\u00e0 de fer ser\u00e0 omplir el parking amb les matr\u00edcules contingudes al fitxer*. S\u2019ha d\u2019implementar men\u00fa amb les seg\u00fcents opcions:</p> <ul> <li>Omplir parking a partir de fitxer*</li> <li>Entrar Cotxe</li> <li>Entrar Cotxe Discapacitat</li> <li>Surtir Cotxe</li> <li>Surtir Cotxe Discapacitat</li> <li>Guardar llistat de matricules en fitxer*</li> <li>Sortir</li> </ul> <p>* El fitxer es guardar\u00e0 / llegir\u00e0 com a fitxer de text pla i tindr\u00e0 una sola matr\u00edcula per l\u00ednia. Si el fitxer quan es va a llegir no t\u00e9 format correcte, el programa donar\u00e0 advert\u00e8ncia i no continuar\u00e0 amb l\u2019operaci\u00f3 de lectura.</p> <p>CONSIDERACIONS FINALS Si un discapacitat troba tots els llocs espec\u00edfics per ell ocupats, ocupar\u00e0 pla\u00e7a de no discapacitats i ser\u00e0 tractat com a no discapacitat.</p> <p>Heu de comprovar que les matr\u00edcules segueixen el patr\u00f3 [0-9]{4}[A-Z]{3} Si no el compleix haur\u00e0 de donar una excepci\u00f3.</p> <p>En cap cas el programa de prova ha d\u2019acabar, excepte si l\u2019opci\u00f3 escollida \u00e9s acabar.</p> <p>TipusPlacesParking ha de ser un enum amb valors Discapacitat i No_Discapacitat.</p> <p>Missatges d\u2019excepci\u00f3 que han de botar quan pertoqui (els textos han de ser literalment aquests):</p> El cotxe ja est\u00e0 al parking. No pot entrar. ALERTA =====&gt; Garrulo detected!!! Ha aparcat a la pla\u00e7a: \\&lt;num_pla\u00e7a&gt; ALERTA =====&gt; Parking per discapacitats ple. Ha ocupat pla\u00e7a normal num: \\&lt;num_pla\u00e7a&gt; ALERTA =====&gt; Parking per no discapacitats ple. ALERTA =====&gt; Ocupaci\u00f3 de places per no discapacitats supera el 85%. ALERTA =====&gt; Parking per discapacitats ple. ALERTA =====&gt; Ocupaci\u00f3 de places per discapacitats supera el 85%. El cotxe no \u00e9s al parking. ALERTA =====&gt; Matr\u00edcula incorrecte. ALERTA =====&gt; Fitxer incorrecte o inexistent. <p>Per simular els llocs ocupats al parking pels cotxes, heu de fer servir necess\u00e0riament HashMap. Reviseu la documentaci\u00f3 a https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html i exemples a: https://beginnersbook.com/2013/12/hashmap-in-java-with-example/</p>"},{"location":"blog/2024/11/18/exemple-formulari-htmljsphppoo.html","title":"Exemple formulari HTML+JS+PHP+POO","text":""},{"location":"blog/2024/11/18/exemple-formulari-htmljsphppoo.html#exemple-formulari-htmljsphppoo","title":"Exemple formulari HTML+JS+PHP+POO","text":"Foto de Markus Spiske"},{"location":"blog/2024/11/18/exemple-formulari-htmljsphppoo.html#codi","title":"Codi","text":"<p>A continuaci\u00f3 teniu el codi que hem vist avui a classe , separat amb tres arxiux:</p> <ul> <li>script.js</li> <li>formulari.html</li> <li>formulari.php</li> </ul> HTML - formulari.htmlJavascript - script.jsPHP - formulari.php <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"cat\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Formulari Persona&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Formulario de Persona&lt;/h1&gt;\n&lt;form id=\"personaForm\" action=\"formulari.php\" method=\"get\"&gt;\n    &lt;label for=\"nom\"&gt;Nombre:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"nom\" name=\"nom\" required&gt;&lt;br&gt;&lt;br&gt;\n\n    &lt;label for=\"edad\"&gt;Edad:&lt;/label&gt;\n    &lt;input type=\"number\" id=\"edat\" name=\"edat\" required&gt;&lt;br&gt;&lt;br&gt;\n\n    &lt;label for=\"dni\"&gt;DNI:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"dni\" name=\"dni\" required&gt;&lt;br&gt;&lt;br&gt;\n\n    &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;script src=\"./script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>document.getElementById('personaForm').addEventListener('submit', function(event) {\nevent.preventDefault(); // Evita enviament per defecte\n\n    // Crear la classe Persona\n    class Persona {\n        constructor(nom, edat, dni) {\n            this.nom = nom;\n            this.edat = edat;\n            this.dni = dni;\n        }\n    }\n\n    // Obtenir els valors del formulari\n    const nom = document.getElementById('nom').value;\n    const edat = document.getElementById('edat').value;\n    const dni = document.getElementById('dni').value;\n\n    // Crear una instancia de Persona\n    const persona = new Persona(nom, edat, dni);\n\n    // Construir la URL amb els parametres\n    debugger;\n    const url = new URL('formulari.php', window.location.href);\n    url.searchParams.append('nom', persona.nom);\n    url.searchParams.append('edat', persona.edat);\n    url.searchParams.append('dni', persona.dni);\n\n    // Redirigir a la URL amb els par\u00e0metres\n    window.location.href = url;\n});\n</code></pre> <pre><code>&lt;?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"GET\") {\n    $nom = $_GET['nom'];\n    $edat = $_GET['edat'];\n    $dni = $_GET['dni'];\n\n    // Aqu\u00ed puedes procesar los datos como desees\n    echo \"Nom: $nom, Edat: $edat, DNI: $dni\";\n}\n?&gt;\n</code></pre> <p>Podeu comprovar el funcionament aqu\u00ed:</p> <p>Example</p> <p></p>"},{"location":"blog/2025/09/25/introducci%C3%B3-a-docker.html","title":"Introducci\u00f3 a Docker","text":""},{"location":"blog/2025/09/25/introducci%C3%B3-a-docker.html#introduccio-a-docker","title":"Introducci\u00f3 a Docker","text":"<p>Simplement aquesta entrada per adjuntar-vos un enlla\u00e7 molt interessant per introdu\u00efr-vos al Docker</p> <p>https://sergarb1.github.io/CursoIntroduccionADocker/</p>"},{"location":"blog/2024/11/10/una-o-m%C3%BAltiples-coes.html","title":"Una o m\u00faltiples coes?","text":""},{"location":"blog/2024/11/10/una-o-m%C3%BAltiples-coes.html#una-o-multiples-coes","title":"Una o m\u00faltiples coes?","text":""},{"location":"blog/2024/11/10/una-o-m%C3%BAltiples-coes.html#unica-cua","title":"\u00danica cua","text":"<p>Avantatges:</p> <ul> <li> <p>Equitat: Els clients s\u00f3n atesos en l'ordre d'arribada, evitant la frustraci\u00f3 de veure com altres cues avancen m\u00e9s r\u00e0pidament.</p> </li> <li> <p>Efici\u00e8ncia: Pot ser m\u00e9s f\u00e0cil per als clients triar una cua, ja que no han de decidir quina caixa sembla m\u00e9s r\u00e0pida.</p> </li> </ul> <p>Inconvenients:</p> <ul> <li> <p>Espai: Pot requerir m\u00e9s espai per acomodar una cua \u00fanica, especialment en hores punta.</p> </li> <li> <p>Gesti\u00f3: Pot ser m\u00e9s complicat gestionar una cua \u00fanica si hi ha molts clients.</p> </li> </ul>"},{"location":"blog/2024/11/10/una-o-m%C3%BAltiples-coes.html#multiples-cues","title":"M\u00faltiples cues","text":"<p>Avantatges:</p> <ul> <li> <p>Flexibilitat: Els clients poden triar la cua que sembla m\u00e9s r\u00e0pida, i les cues poden ser m\u00e9s curtes en espais redu\u00efts.</p> </li> <li> <p>Especialitzaci\u00f3: Algunes caixes poden ser designades per a clients amb poques compres o per a pagaments r\u00e0pids.</p> </li> </ul> <p>Inconvenients:</p> <ul> <li> <p>Inequitat: Els clients poden sentir-se frustrats si una cua avan\u00e7a m\u00e9s r\u00e0pidament que una altra.</p> </li> <li> <p>Decisi\u00f3: Els clients han de decidir quina cua triar, cosa que pot causar estr\u00e8s o indecisi\u00f3.</p> </li> </ul> <p>En general, la millor opci\u00f3 pot dependre de la mida del supermercat, el nombre de clients i l'espai disponible. Alguns supermercats opten per una combinaci\u00f3 de les dues opcions, amb una cua \u00fanica per a caixes r\u00e0pides i m\u00faltiples cues per a caixes normals. Qu\u00e8 en penses? Quina opci\u00f3 creus que funcionaria millor en el teu supermercat? Resposta d'un sistema d'IA. Ara te toca a t\u00fa, formular una nova hip\u00f2tesi o mantenir la que ja tenies una vegada fetes les simulacions proposades als exercicis.</p>"},{"location":"blog/2024/11/06/dist%C3%A0ncia-euclidiana.html","title":"Dist\u00e0ncia Euclidiana?","text":""},{"location":"blog/2024/11/06/dist%C3%A0ncia-euclidiana.html#distancia-euclidiana","title":"Dist\u00e0ncia Euclidiana?","text":"<p>Qu\u00e8 \u00e9s la dist\u00e0ncia euclidiana?</p> <p>Arran de l'enunciat del seg\u00fcent exercici: \"Implementa una funci\u00f3 que calculi la dist\u00e0ncia euclidiana (comunment anomenada dist\u00e0ncia) entre dos punts en un pla 2D utilitzant l'objecte Math.\", explic, molt breument, qu\u00e8 \u00e9s la dist\u00e0ncia euclidiana i com es calcula.</p> <p>Qu\u00e8 \u00e9s la dist\u00e0ncia euclidiana?</p> <p>La dist\u00e0ncia euclidiana \u00e9s una mesura de la dist\u00e0ncia directa entre dos punts en un espai euclidi\u00e0 (un espai de geometria plana). \u00c9s la forma m\u00e9s comuna de calcular la dist\u00e0ncia entre dos punts en un pla o en un espai tridimensional. En un pla 2D, la dist\u00e0ncia euclidiana entre dos punts (A(x1, y1)) i (B(x2, y2)) es calcula utilitzant la f\u00f3rmula:</p> \\[ \\sqrt{(x_{2}-x_{1})^{2}+(y_{2}-y_{1})^{2}} \\] <p>https://ca.wikipedia.org/wiki/Dist%C3%A0ncia_euclidiana</p>"},{"location":"blog/2024/10/28/crear-una-esfera-3d.html","title":"Crear una esfera 3d","text":""},{"location":"blog/2024/10/28/crear-una-esfera-3d.html#crear-una-esfera-3d","title":"Crear una esfera 3d","text":"Captura de pantalla de l'execuci\u00f3 de l'exemple. <p>A partir d'all\u00f2 que hem vist a classe se va demanar  fer modificacions per fer, utilitzant llibreries externes una esfera 3D proporcional al radi inserit per l'usuari.</p> <p>Aqu\u00ed teniu un exemple utilitzant la llibreria threeJS. Feu click a l'enlla\u00e7 anterior per accedir a una introducci\u00f3 a la llibreria ThreeJS</p> <p>Aquest \u00e9s el codi de radi_circumferencia3.js </p><pre><code>// Configuraci\u00f3 b\u00e0sica de Three.js\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\n// Carregar la textura\nconst textureLoader = new THREE.TextureLoader();\nconst texture = textureLoader.load('https://threejsfundamentals.org/threejs/resources/images/wall.jpg'); // URL de la textura\n\n// Crear una esfera\nlet sphere;\nfunction createSphere(radius) {\n    if (sphere) {\n        scene.remove(sphere);\n    }\n    const geometry = new THREE.SphereGeometry(radius, 32, 32);\n    const material = new THREE.MeshBasicMaterial({ map: texture });\n    sphere = new THREE.Mesh(geometry, material);\n    scene.add(sphere);\n}\n\n// Posicionar la c\u00e0mera\ncamera.position.z = 5;\n\n// Funci\u00f3 d'animaci\u00f3\nfunction animate() {\n    requestAnimationFrame(animate);\n    if (sphere) {\n        sphere.rotation.y += 0.01; // Rotaci\u00f3 sobre l'eix Y\n    }\n    renderer.render(scene, camera);\n}\nanimate();\n\n// Ajustar la mida del renderer quan la finestra canvia de mida\nwindow.addEventListener('resize', () =&gt; {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n});\n\n// Gestionar el formulari\ndocument.getElementById('radiusForm').addEventListener('submit', function(event) {\n    event.preventDefault();\n    const radius = parseFloat(document.getElementById('radius').value);\n    if (isNaN(radius) || radius &lt;= 0) {\n        alert('Si us plau, introdueix un radi v\u00e0lid.');\n        return;\n    }\n    createSphere(radius/100);\n});\n</code></pre><p></p> <p>I aqu\u00ed teniu el codi html radi_circumferencia3.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;Esfera 3D amb Three.js&lt;/title&gt;\n  &lt;style&gt;\n    body { margin: 0; font-family: Arial, sans-serif; text-align: center; }\n    canvas { display: block; margin: 0 auto; }\n    form { margin: 20px; }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Esfera 3D amb Three.js&lt;/h1&gt;\n&lt;form id=\"radiusForm\"&gt;\n  &lt;label for=\"radius\"&gt;Radi:&lt;/label&gt;\n  &lt;input type=\"number\" id=\"radius\" name=\"radius\" required&gt;\n  &lt;button type=\"submit\"&gt;Calcula&lt;/button&gt;\n&lt;/form&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"radi_circumferencia3.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"blog/2024/10/28/crear-una-esfera-3d.html#vista-captura-ampliada","title":"Vista captura ampliada","text":"Captura de pantalla de l'execuci\u00f3 de l'exemple. <p>Accediu a l'execuci\u00f3 de l'exemple</p>"},{"location":"blog/2024/10/23/let-o-var.html","title":"Let o Var?","text":""},{"location":"blog/2024/10/23/let-o-var.html#let-o-var","title":"Let o Var?","text":"Foto de Markus Spiske (una mica retallada) <p>Quines s\u00f3n les difer\u00e8ncies entre <code>let</code> i <code>var</code> en JavaScript?</p> <p>La tria entre <code>let</code> i <code>var</code> en JavaScript pot semblar trivial al principi, per\u00f2 t\u00e9 implicacions importants en el comportament del teu codi. Vegem les principals difer\u00e8ncies:</p>"},{"location":"blog/2024/10/23/let-o-var.html#abast-scope","title":"Abast (Scope)","text":"<ul> <li>var: T\u00e9 un abast funcional. Aix\u00f2 significa que una variable declarada amb <code>var</code> dins d'una funci\u00f3 \u00e9s accessible des de qualsevol part d'aquella funci\u00f3, fins i tot si es declara dins d'un bloc (com un <code>if</code> o un <code>for</code>).</li> <li>let: T\u00e9 un abast de bloc. Una variable declarada amb <code>let</code> nom\u00e9s \u00e9s accessible dins del bloc en qu\u00e8 es declara. Si es declara dins d'un bloc, no estar\u00e0 disponible fora d'ell.</li> </ul>"},{"location":"blog/2024/10/23/let-o-var.html#redeclaracio","title":"Redeclaraci\u00f3","text":"<ul> <li>var: Pots redeclarar una variable <code>var</code> dins del mateix \u00e0mbit. La nova declaraci\u00f3 simplement sobreescriur\u00e0 l'anterior.</li> <li>let: No pots redeclarar una variable <code>let</code> dins del mateix \u00e0mbit. Aix\u00f2 evitar\u00e0 errors comuns i far\u00e0 el teu codi m\u00e9s predictible.</li> </ul>"},{"location":"blog/2024/10/23/let-o-var.html#hoisting","title":"Hoisting ?","text":"<ul> <li>var: Les variables declarades amb <code>var</code> s\u00f3n \"hoistejades\", el que significa que la declaraci\u00f3 es mou al principi de l'\u00e0mbit, fins i tot si la declaraci\u00f3 real apareix m\u00e9s avall. No obstant aix\u00f2, el seu valor segueix sent <code>undefined</code> fins que se li assigna un valor.</li> <li>let: Les variables declarades amb <code>let</code> tamb\u00e9 s\u00f3n hoistejades, per\u00f2 no s'inicialitzen amb <code>undefined</code>. Si intentes utilitzar una variable <code>let</code> abans de declarar-la, obtindr\u00e0s un error de refer\u00e8ncia.</li> </ul>"},{"location":"blog/2024/10/23/let-o-var.html#resum-de-les-diferencies","title":"Resum de les difer\u00e8ncies:","text":"Caracter\u00edstica var let Abast Funcional De bloc Redeclaraci\u00f3 Permesa No permesa Hoisting S\u00ed, amb valor inicial undefined S\u00ed, per\u00f2 no s'inicialitza"},{"location":"blog/2024/10/23/let-o-var.html#quan-utilitzar-que","title":"Quan utilitzar qu\u00e8?","text":"<ul> <li>var: Generalment s'evita utilitzar <code>var</code> en el JavaScript modern a causa del seu comportament menys predictible. No obstant aix\u00f2, pot ser \u00fatil en alguns casos espec\u00edfics, com quan es treballa amb codi heretat.</li> <li>let: \u00c9s l'opci\u00f3 preferida per a la majoria dels casos, ja que proporciona un abast m\u00e9s controlat i evita errors comuns.</li> <li>const: Si el valor d'una variable no va a canviar, \u00e9s recomanable utilitzar <code>const</code> per garantir que no es modifiqui accidentalment.</li> </ul>"},{"location":"blog/2024/10/23/let-o-var.html#exemple","title":"Exemple:","text":"<pre><code>if (true) {\n  var x = 10;\n  let y = 20;\n  const z = 30;\n}\n\nconsole.log(x); // Imprimeix 10 (x \u00e9s accessible fora del bloc)\nconsole.log(y); // Error: y is not defined (y nom\u00e9s \u00e9s accessible dins del bloc)\nconsole.log(z); // Error: z is not defined (z nom\u00e9s \u00e9s accessible dins del bloc)\n</code></pre> <p>En resum, <code>let</code> ofereix un major control sobre l'abast de les variables i ajuda a evitar errors comuns. Per tant, \u00e9s l'opci\u00f3 recomanada en la majoria dels casos.</p>"},{"location":"blog/2024/10/30/informaci%C3%B3-sobre-amazon-sdk-php.html","title":"Informaci\u00f3 sobre Amazon SDK PHP","text":""},{"location":"blog/2024/10/30/informaci%C3%B3-sobre-amazon-sdk-php.html#informacio-sobre-amazon-sdk-php","title":"Informaci\u00f3 sobre Amazon SDK PHP","text":"<p>Enlla\u00e7 a exemples al Github </p> <p>https://github.com/awsdocs/aws-doc-sdk-examples/tree/main/php/example_code/dynamodb#code-examples</p> <p>Qu\u00e8 \u00e9s dynamoDB?</p> <p>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html</p>"},{"location":"blog/2024/10/23/el-bloc.html","title":"El bloc!","text":""},{"location":"blog/2024/10/23/el-bloc.html#el-bloc","title":"El bloc!","text":"<p>Foto de Miguel \u00c1. Padri\u00f1\u00e1n</p> <p>Doncs en aquest lloc web que estic fent aquest curs, notava a faltar qualcuna manera de publicar documentaci\u00f3 que realment no t\u00e9 una estructura clara per\u00f2 que vos pot resultar interessant. Aleshores he revisat si amb el mkdocs - material es podia crear qualcuna cosa semblant a un bloc  i efectivament. I a m\u00e9s a m\u00e9s, amb la mateixa facilitat que la resta de coses.</p> <p>Aix\u00ed doncs, a partir d'ara, tamb\u00e9 tindrem \"entrades\" al bloc per documentar coses que no entren dins l'estructura dels cursos.</p>"},{"location":"blog/2025/09/30/scrum-i-els-sprints.html","title":"Scrum i els sprints","text":""},{"location":"blog/2025/09/30/scrum-i-els-sprints.html#scrum-i-els-sprints","title":"Scrum i els sprints","text":"<p>Entrada basada en informaci\u00f3 d'IA</p> <p>Scrum \u00e9s una metodologia \u00e0gil per gestionar projectes mitjan\u00e7ant cicles curts i iteratius anomenats sprints, que permeten lliurar valor de manera constant i millorar cont\u00ednuament el proc\u00e9s de treball.<sup>1</sup><sup>2</sup><sup>3</sup></p>"},{"location":"blog/2025/09/30/scrum-i-els-sprints.html#funcionament-de-scrum","title":"Funcionament de Scrum","text":"<ul> <li>El projecte es divideix en petites parts (sprints) de durada fixa, generalment d\u20191 a 4 setmanes, en qu\u00e8 l\u2019equip treballa per aconseguir un objectiu concret i lliurable (increment del producte).<sup>2</sup><sup>14</sup><sup>3</sup></li> </ul> <ul> <li>Cada sprint comen\u00e7a amb una sessi\u00f3 de planificaci\u00f3 (Sprint Planning), on es defineixen les tasques i el seu objectiu.<sup>3</sup><sup>1</sup></li> <li>Durant el sprint, es fan reunions di\u00e0ries (Daily Scrum) per compartir l\u2019estat del treball, solucionar problemes i coordinar l\u2019equip.<sup>1</sup><sup>3</sup></li> <li>Al final de cada sprint s\u2019organitza una revisi\u00f3 (Sprint Review), on es presenta el resultat a clients o persones interessades i es recapta feedback.<sup>15</sup><sup>3</sup><sup>1</sup></li> <li>Es conclou amb una retrospectiva (Sprint Retrospective) per analitzar qu\u00e8 ha anat b\u00e9, qu\u00e8 cal millorar i acordar accions per aplicar en el proper sprint.<sup>3</sup><sup>15</sup><sup>1</sup></li> </ul>"},{"location":"blog/2025/09/30/scrum-i-els-sprints.html#que-son-els-sprints","title":"Qu\u00e8 s\u00f3n els Sprints?","text":"<ul> <li>Un sprint \u00e9s un per\u00edode curt, amb una durada m\u00e1xima d\u2019un mes, en qu\u00e8 l\u2019equip es compromet a completar una quantitat de treball establerta i entregable.<sup>14</sup><sup>2</sup></li> <li>Els objectius i tasques d\u2019un sprint no haurien de canviar durant la seva execuci\u00f3 excepte acord amb el Product Owner.<sup>2</sup><sup>14</sup></li> <li>El resultat de cada sprint \u00e9s un increment del producte usable, permetent lliuraments freq\u00fcents i adaptaci\u00f3 a canvis basats en el feedback.<sup>15</sup><sup>2</sup></li> <li>Els sprints s\u2019encadenen sense pausa entre un i l\u2019altre, afavorint la millora cont\u00ednua i la col\u00b7laboraci\u00f3 dins l\u2019equip.<sup>14</sup><sup>3</sup></li> </ul>"},{"location":"blog/2025/09/30/scrum-i-els-sprints.html#beneficis-dels-sprints","title":"Beneficis dels Sprints","text":"<ul> <li>Permeten detectar errors abans, reduir riscos i garantir un enfocament constant en aportar valor real.<sup>2</sup><sup>14</sup></li> <li>Fan possible planificar millor, motivar l\u2019equip i adaptar-se r\u00e0pidament als canvis del projecte o el negoci.<sup>3</sup><sup>2</sup></li> <li>Les retrospectivas fomenten l\u2019aprenentatge i la millora cont\u00ednua del proc\u00e9s.<sup>15</sup><sup>3</sup></li> </ul> <p>Scrum afavoreix la comunicaci\u00f3, la rapidesa i la qualitat en l\u2019entrega de resultats, fent-lo ideal per a entorns canviants o d\u2019alta incertesa.<sup>1</sup><sup>2</sup><sup>3</sup> <sup>4</sup><sup>5</sup><sup>6</sup><sup>7</sup><sup>8</sup><sup>9</sup><sup>10</sup><sup>11</sup><sup>12</sup><sup>13</sup></p> \u2042 <ol> <li> <p>https://www.ilimit.com/blog/tecnologic-2/metodologia-scrum-2\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://www.obsbusiness.school/blog/las-5-etapas-en-los-sprints-de-un-desarrollo-scrum\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://www.ilunion.com/es/blog-puntoilunion/scrum\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://www.atlassian.com/es/agile/scrum/sprints\u00a0\u21a9</p> </li> <li> <p>https://www.iebschool.com/hub/metodologia-scrum-agile-scrum/\u00a0\u21a9</p> </li> <li> <p>https://scrumguides.org/docs/scrumguide/v2020/2020-Scrum-Guide-Catalan.pdf\u00a0\u21a9</p> </li> <li> <p>https://www.piensasolutions.com/blog/metodologia-scrum-que-es-como-funciona-y-cuando-aplicarla\u00a0\u21a9</p> </li> <li> <p>https://www.fundaciocreativacio.org/ca/blog/el-blog-creativador/scrum-metodologies-agils-per-al-desenvolupament-de-projectes/\u00a0\u21a9</p> </li> <li> <p>https://www.productiviza.com/que-es-un-sprint-en-la-metodologia-scrum-ejemplo-real/\u00a0\u21a9</p> </li> <li> <p>https://www.scrumio.com/scrum/el-sprint/\u00a0\u21a9</p> </li> <li> <p>https://asana.com/es/resources/what-is-scrum\u00a0\u21a9</p> </li> <li> <p>https://donetonic.com/es/que-es-un-sprint-en-la-metodologia-scrum/\u00a0\u21a9</p> </li> <li> <p>https://www.inesdi.com/blog/metodologia-scrum-que-es-como-funciona/\u00a0\u21a9</p> </li> <li> <p>https://donetonic.com/es/que-son-los-sprints-en-scrum/\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>https://learn.microsoft.com/es-es/devops/plan/what-is-scrum\u00a0\u21a9\u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html","title":"Spring Boot Qu\u00e8 \u00e9s i com funciona?","text":""},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#spring-boot-que-es-i-com-funciona","title":"Spring Boot Qu\u00e8 \u00e9s i com funciona?","text":"<p>Spring Boot \u00e9s una de les tecnologies dins del m\u00f3n de Spring de les que m\u00e9s es fa servir actualment .\u00bfQu\u00e8 \u00e9s i com funciona Spring Boot? . Per entendre el concepte primer hem de reflexionar sobre com constru\u00efm aplicacions amb Spring Framework antigament.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#primeres-passes-sense-spring-boot","title":"Primeres passes sense Spring Boot","text":"<p>Fonamentalment existien tres passes a realitzar. El primer \u00e9s crear un projecte Maven/Gradle i descarregar les depend\u00e8ncies necess\u00e0ries. En segon lloc hi ha el proc\u00e9s de crear l'aplicaci\u00f3, per\u00f2 per aix\u00f2 ens agradi o no hem d'abordar un proc\u00e9s ampli de configuraci\u00f3 de l'aplicaci\u00f3, amb fitxers XML o anotacions i configuracions molt especifiques que moltes vegades nom\u00e9s un expert era capa\u00e7 d'abordar amb garanties. Finalment haur\u00edem de desplegar-la en un servidor.</p> <p>Problemes</p> <p>Si ens posem a pensar una mica a detall en el tema, \u00fanicament la passa n\u00famero dos \u00e9s una tasca de desenvolupament i dins d'aquesta tasca 2 fins i tot la part de configuraci\u00f3 no est\u00e0 clar que sigui desenvolupament en si. S\u00f3n coses que estan m\u00e9s orientats a infraestructura que al desenvolupament en si mateix.</p> <p>No haur\u00edem d'estar triant cont\u00ednuament les depend\u00e8ncies i el servidor de desplegament aix\u00ed com realitzar una configuraci\u00f3 inicial. Aix\u00f2 \u00e9s un tema nom\u00e9s per a experts i que aporta realment poc hauria de ser automatic.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#spring-boot","title":"Spring Boot","text":"<p>SpringBoot neix amb la intenci\u00f3 de simplificar els passos 1 i 3. Simplificar la configuraci\u00f3, que ens puguem centrar en el desenvolupament de la nostra aplicaci\u00f3. Com funciona?. L'enfocament \u00e9s senzill i ho entendrem realitzant un exemple. Per aix\u00f2 anem a connectar-nos a l'assistent de Boot que es denomina Spring Initializer.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#string-boot-starter-y-simplificaciones","title":"String Boot Starter y simplificaciones","text":"<p>L'assistent \u00e9s intu\u00eftiu, elegim el package al qual volem que les nostres classes pertanyin, elegim el nom del projecte i per \u00faltim les depend\u00e8ncies. Aix\u00f2 s\u00ed que ja no es tracta de triar JAR per JAR sin\u00f3 per tipus d'aplicaci\u00f3 que necessitem a aquest concepte se l'anomena Spring Starter. Per tant en comptes d'haver de triar 10 o 20 depend\u00e8ncies \u00e9s molt m\u00e9s c\u00f2mode triar 2 starters i Spring Boot s'encarrega de la resta.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#starters-i-avantatges","title":"Starters i avantatges","text":"<p>L'avantatge \u00e9s abismal ja que no nom\u00e9s redueixo les depend\u00e8ncies sin\u00f3 tamb\u00e9 els temes a configurar ja que els starter poden encarregar-se d'afegir carpetes etc.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#construint-laplicacio","title":"Construint l'aplicaci\u00f3","text":"<p>En aquest cas vaig a construir una aplicaci\u00f3 Spring MVC i trio la depend\u00e8ncia web o Starter Web. Posem generar projecte i ens descarregar\u00e0 un projecte Maven en format zip. Descomprimim el projecte i aquest \u00e9s el seu contingut.</p> <p>Una aplicaci\u00f3 de Spring amb estructura Maven totalment configurada i carpetes addicionals per cobrir les nostres necessitats. El seg\u00fcent pas importar aquesta aplicaci\u00f3 al nostre IDE (IntelliJ al nostre cas). Anam a veure el contingut de la classe DemoApplication.</p> <pre><code>package edu.xaviersastre.demo;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n    public static void main(String[] args) {\n    SpringApplication.run(DemoApplication.class, args);\n}\n</code></pre> <p>Aquesta classe \u00e9s l'encarregada d'arrencar la nostra aplicaci\u00f3 de Spring a difer\u00e8ncia d'un enfocament cl\u00e0ssic no cal desplegar-la en un servidor web ja que Spring Boot proveeix d'un (cont\u00e9 un Tomcat incrustat)</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#spring-boot-controller","title":"Spring Boot Controller","text":"<p>Anam a construir un controlador de Demo molt senzill:</p> <p></p><pre><code>package edu.xaviersastre.demo;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(DemoApplication.class, args);\n    }\n\n}\n</code></pre> Aquest controlador registra la url de / perqu\u00e8 ens retorni \u201cHola M\u00f3n\u201d. \u00c9s moment d'executar la nostra aplicaci\u00f3, directament des d'IntelliJ o amb mvn. Si obrim un navegador i accedim a la url per defecte del tomcat incrustat http://localhost:8080 veurem quelcom semblant a aix\u00f2.<p></p> <p>Aquesta \u00e9s la manera com estam executant el nostre codi des d'IntelliJ</p> <p>SpringBoot ens ha simplificat tota l'operativa a l'hora de construir l'aplicaci\u00f3 pr\u00e0cticament no hem hagut de seleccionar depend\u00e8ncies de Spring i no ha fet falta definir cap servidor Tomcat en el nostre entorn de desenvolupament ja que Spring Boot en porta un integrat.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#spring-boot-tomcat-i-docker","title":"Spring Boot Tomcat i Docker","text":"<p>Perqu\u00e8 Spring Boot porta integrat Tomcat?. Molt senzill perqu\u00e8 a partir d'ara els desplegaments no es realitzaran a Servidors Web Standard que emmagatzemen desenes d'aplicacions sin\u00f3 que cadascuna de les aplicacions es desplegar\u00e0 en un contenidor Docker completament a\u00efllada de la resta i independent. El contenidor necessita que l'aplicaci\u00f3 sigui completament operativa per si sola.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#spring-boot-war","title":"Spring Boot WAR","text":"<p>Si el teu problema \u00e9s que ara per ara no tens contenidors Docker ni tens Kubernetes entre les teves eines de desplegament, no hi ha problema. Pots seguir usant Spring Boot i desplegar-lo en un entorn de Tomcat o JBoss directament simplement modificant l'inici i fent que la nostra aplicaci\u00f3 en comptes de desplegar-se com a JAR es desplegui com a WAR.</p> <p>En aquest cas s'haur\u00e0 d'afegir una classe que es cuida d'integrar el projecte amb Tomcat de forma transparent:</p> <pre><code>package edu.xaviersastre.demo;\n\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n\npublic class ServletInitializer extends SpringBootServletInitializer {\n\n    @Override\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\n        return application.sources(DemoApplication.class);\n    }\n\n}\n</code></pre>"},{"location":"llibre/src/SUMMARY.html","title":"Summary DWEC","text":""},{"location":"llibre/src/SUMMARY.html#summary-dwec","title":"Summary DWEC","text":"<ul> <li>Introducci\u00f3</li> <li>Cap\u00edtol 1</li> <li>Cap\u00edtol 2</li> <li>PROVA</li> </ul>"},{"location":"llibre/src/capitol1.html","title":"Cap\u00edtol 1","text":""},{"location":"llibre/src/capitol1.html#capitol-1","title":"Cap\u00edtol 1","text":""},{"location":"llibre/src/capitol1.html#ut03-model-dobjectes-predefinits-a-javascript","title":"UT03 Model d\u2019objectes predefinits a JavaScript.","text":""},{"location":"llibre/src/capitol1.html#1-objectes-de-mes-alt-nivell-a-javascript","title":"1.- Objectes de m\u00e9s alt nivell a Javascript.","text":"<p>Introducci\u00f3</p> <p>Anam a aprofundir en els objectes b\u00e0sics i de m\u00e9s alt nivell de JavaScript. Aquests objectes, els trobareu en pr\u00e0cticament la majoria d'aplicacions que faceu amb JavaScript, per la qual cosa ser\u00e0 fonamental, que tingui molt clares les caracter\u00edstiques i diferents funcionalitats que aquests objectes li aportaran a les seves aplicacions.</p> <p>Una p\u00e0gina web, \u00e9s un document HTML que ser\u00e0 interpretat pels navegadors de forma gr\u00e0fica, per\u00f2 que tamb\u00e9 ha de permetre'n l'acc\u00e9s al codi font.</p> <p>El Model d'Objectes del Document (DOM), permet veure el mateix document d'una altra manera, descrivint el contingut del document com un conjunt d'objectes, sobre els quals un programa de Javascript pot interactuar.</p> <p>Segons el W3C, el Model d'Objectes del Document \u00e9s una interf\u00edcie de programaci\u00f3 d'aplicacions (API), per a documents v\u00e0lids HTML i ben constru\u00efts XML. Defineix l\u2019estructura l\u00f2gica dels documents, i la manera com s\u2019accedeixen i es manipulen.</p> <p>Ara que ja has vist en la unitat anterior, els fonaments de la programaci\u00f3, anem a aprofundir una mica m\u00e9s pel que fa als objectes, que podrem col\u00b7locar en la majoria dels nostres documents.</p> <p>Definim com a objecte, una entitat amb una s\u00e8rie de propietats que defineixen el seu estat, i uns m\u00e8todes (funcions), que actuen sobre aquestes propietats.</p> <p>La forma d\u2019accedir a una propietat d\u2019un objecte \u00e9s la seg\u00fcent:</p> <p><code>nomObjecte.propietat</code></p> <p>La forma d\u2019accedir a un m\u00e8tode d\u2019un objecte \u00e9s la seg\u00fcent:</p> <p><code>nomObjecte.metode([par\u00e0metres opcionals])</code></p> <p>Tamb\u00e9 podem referenciar una propietat d\u2019un objecte, pel seu \u00edndex en la creaci\u00f3. Els \u00edndexs comencen per 0.</p> <p>En aquesta unitat, ens enfocarem en objectes d'alt nivell, que trobar\u00e0s freq\u00fcentment en les teves aplicacions de JavaScript: window, location, navigator i document. L'objectiu, no \u00e9s nom\u00e9s indicar-te les nocions b\u00e0siques perqu\u00e8 puguis comen\u00e7ar a realitzar tasques senzilles, sin\u00f3 tamb\u00e9, el preparar-te per aprofundir en les propietats i m\u00e8todes, gestors d'esdeveniments, etc. que trobar\u00e0s en unitats posteriors.</p> <p>Nom\u00e9s veurem les propietats b\u00e0siques, i els m\u00e8todes dels objectes esmentats anteriorment.</p> <p>Et mostrem aqu\u00ed el gr\u00e0fic del model d'objectes d'alt nivell, per a tots els navegadors que permetin fer servir JavaScript.</p> <p></p> <p>\u00c9s molt important que tinguis aquest gr\u00e0fic en ment perqu\u00e8 ha de ser la guia al llarg de tota aquesta unitat.</p> <p>Alerta</p> <p>En aquesta unitat no parlarem de l'\u00fas de frames ja que el seu \u00fas est\u00e0 totalment desaconsellat per motius d'accessibilitat i usabilitat, per la qual cosa et recomanem no usar-los.</p>"},{"location":"llibre/src/capitol1.html#11-objecte-window","title":"1.1.- Objecte window.","text":"Everaldo Coelho\u00a0(GNU/GPL) <p>En la jerarquia d'objectes, tenim a la part superior l'objecte window.</p> <p>Aquest objecte est\u00e0 situat justament aqu\u00ed, perqu\u00e8 \u00e9s el contenidor principal de tot el contingut que es visualitza al navegador. Tan aviat com s'obre una finestra (window) al navegador, fins i tot encara que no s'hi carregui cap document, aquest objecte window ja estar\u00e0 definit en mem\u00f2ria.</p> <p>A m\u00e9s de la secci\u00f3 de contingut de l\u2019objecte window, que \u00e9s justament on es carregaran els documents, el camp d\u2019influ\u00e8ncia d\u2019aquest objecte, abasta tamb\u00e9 les dimensions de la finestra, aix\u00ed com tot el que envolta l\u2019\u00e0rea de contingut: les barres de despla\u00e7ament, barra d\u2019eines, barra d\u2019estat, etc.</p> <p>Com es veu en el gr\u00e0fic de la jerarquia d'objectes, sota l'objecte window tenim altres objectes com el navigator, screen, history, location i l'objecte document. Aquest objecte document ser\u00e0 el que contindr\u00e0 tota la jerarquia d\u2019objectes, que tinguem dins la nostra p\u00e0gina HTML.</p> <p></p> <p>Atenci\u00f3</p> <p>Atenci\u00f3 En els navegadors m\u00e9s moderns, els usuaris tenen la possibilitat d'obrir les p\u00e0gines tant en noves pestanyes dins d'un navegador, com en noves finestres de navegador. Per a JavaScript tant les finestres de navegador, com les pestanyes, s\u00f3n tots dos objectes window.</p> <p>Acc\u00e9s a propietats i m\u00e8todes.</p> <p>Per accedir a les propietats i m\u00e8todes de l'objecte window, ho podrem fer de diferents formes, depenent m\u00e9s del nostre estil, que de requeriments sint\u00e0ctics. Aix\u00ed, la forma m\u00e9s l\u00f2gica i comuna de realitzar aquesta refer\u00e8ncia, inclouria l\u2019objecte window tal com es mostra en aquest exemple:</p> <pre><code> window.nombrePropietat  \n window.nomM\u00e9todo([par\u00e0metres])\n</code></pre> <p>Com pots veure, els par\u00e0metres van entre corxets, indicant que s\u00f3n opcionals i que dependran del m\u00e8tode al qual estem cridant.</p> <p>Un objecte window tamb\u00e9 es podr\u00e0 referenciar mitjan\u00e7ant la paraula self, quan estem fent la refer\u00e8ncia des del propi document contingut en aquesta finestra:</p> <pre><code> self.nombrePropietat  \n self.nomM\u00e9todo([par\u00e0metres])\n</code></pre> <p>Podrem fer servir qualsevol de les dues refer\u00e8ncies anteriors, per\u00f2 intentarem deixar la paraula reservada self, per a scripts m\u00e9s complexos en qu\u00e8 tinguem m\u00faltiples marcs i finestres.</p> <p>At\u00e8s que l'objecte window sempre estar\u00e0 present quan executem els nostres scripts, podrem ometre'l, en refer\u00e8ncies als objectes dins d'aquesta finestra. Aix\u00ed que, si escrivim:</p> <pre><code> nomPropietat  \n nomM\u00e9todo([par\u00e0metres])\n</code></pre> <p>Tamb\u00e9 funcionaria sense cap problema, perqu\u00e8 s'assumeix que aquestes propietats o m\u00e8todes, s\u00f3n de l'objecte de m\u00e9s jerarquia (l'objecte window) en el qual ens trobem.</p> <p>Cites per pensar</p> <p>\"Nom\u00e9s tancant les portes darrere d'un mateix, s'obren finestres cap al pervenir.\"</p> <p>SAGAN, Fran\u00e7oise.</p>"},{"location":"llibre/src/capitol1.html#111-gestio-de-finestres","title":"1.1.1.- Gesti\u00f3 de finestres.","text":"Everaldo Coelho\u00a0(GNU/GPL) <p>Un script no crear\u00e0 mai la finestra principal d'un navegador. \u00c9s l'usuari, qui realitza aquesta tasca obrint una URL al navegador o un arxiu des del men\u00fa d'obrir. Per\u00f2 tanmateix, un script que estigui executant-se en una de les finestres principals del navegador, si que podr\u00e0 crear o obrir noves sub-finestres.</p> <p>El m\u00e8tode que genera una nova finestra \u00e9s window.open(). Aquest m\u00e8tode cont\u00e9 fins a tres par\u00e0metres, que defineixen les caracter\u00edstiques de la nova finestra: la URL del document a obrir, el nom d'aquesta finestra i la seva aparen\u00e7a f\u00edsica (tamany, color,etc.).</p> <p>Per exemple, si considerem la seg\u00fcent instrucci\u00f3 que obre una nova finestra d\u2019una mida determinada i amb el contingut d\u2019un document HTML:</p> <p><code>let subVentana = window.open(\"nueva.html\", \"nova\", \"height=800, width=600\");</code></p> <p>L'important d'aquesta instrucci\u00f3, \u00e9s l'assignaci\u00f3 que hem fet en la variable subVentana. D'aquesta manera podrem al llarg del nostre codi, referenciar a la nova finestra des de l'script original de la finestra principal. Per exemple, si volgu\u00e9ssim tancar la nova finestra des del nostre script, simplement haur\u00edem de fer: subVentana.</p> <p>Aqu\u00ed si que cal especificar subVentana, ja que si escriv\u00edssim window.close(), self.close() o close() estar\u00edem intentant tancar la nostra pr\u00f2pia finestra (pr\u00e8via confirmaci\u00f3), per\u00f2 no la subVentana que creiem en els passos anteriors.</p> <p>Vegeu el seg\u00fcent exemple que permet obrir i tancar una sub-finestra:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"content-type\" content=\"text/html; charset = utf-8\"&gt;\n    &lt;title&gt;Apertura i Tancament de Finestres&lt;/title&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        const inicialitzar = () =&gt; {\n            document.getElementById(\"crear-finestra\").onclick = crearNova;\n            document.getElementById(\"tancar-finestra\").onclick = tancarNova;\n        }\n\n        let novaFinestra;\n\n        const crearNova = () =&gt; {\n            novaFinestra = window.open(\"https://docencia.xaviersastre.cat\", \"\", \"height = 400,width = 800\");\n        }\n\n        const tancarNova = () =&gt; {\n            if (novaFinestra) {\n                novaFinestra.close();\n                novaFinestra = null;\n            }\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body onLoad=\"inicialitzar()\"&gt;\n&lt;h1&gt; Obrim i tanquem finestres&lt;/h1&gt;\n&lt;form&gt;\n    &lt;input type=\"button\" id=\"crear-finestra\" value=\"Crear Nova Finestra\"&gt;\n    &lt;input type=\"button\" id=\"tancar-finestra\" value=\"Tancar Nova Finestra\"&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"llibre/src/capitol1.html#112-propietats-i-metodes","title":"1.1.2.- Propietats i m\u00e8todes.","text":"<p>L'objecte window representa una finestra oberta en un navegador. Si un document cont\u00e9 marcs (\\&lt;frame&gt; o \\&lt;iframe&gt;), el navegador crea un objecte window per al document HTML, i un objecte window addicional per a cada marc.</p> quinn.anya\u00a0CC BY-SA <p>Propietats de l\u2019objecte Window</p> Propietat Descripci\u00f3 closed Retorna un valor Boolean indicant quan una finestra ha estat tancada o no. defaultStatus Ajusta o retorna el valor per defecte de la barra d\u2019estat d\u2019una finestra. document Retorna l\u2019objecte document per a la finestra. frames Retorna un arrelament de tots els marcs (inclosos iframes) de la finestra actual. history Retorna l\u2019objecte history de la finestra. length Retorna el nombre de frames (incloent-hi iframes) que hi ha a dins d'una finestra. location Retorna la Localitzaci\u00f3 de l'objecte d'urL del fitxer. name Ajusta o retorna el nom d\u2019una finestra. navigator Retorna l\u2019objecte navigator d\u2019una finestra. opener Retorna la refer\u00e8ncia a la finestra que va obrir la finestra actual. parent Retorna la finestra pare de la finestra actual. self Retorna la finestra actual. estatus Ajusta el text de la barra d\u2019estat d\u2019una finestra. <p>M\u00e8todes de l\u2019objecte Window</p> M\u00e8tode Descripci\u00f3 alert() Mostra una finestra emergent d'alerta i un bot\u00f3 d'acceptar. blur() Elimina el focus de la finestra actual. clearInterval() Reseteja el cron\u00f2metre ajustat amb setInterval(). setInterval() Crida a una funci\u00f3 o avalua una expressi\u00f3 en un interval especificat (en mil\u00b7lisegons). close() Tanca la finestra actual. confirm() Mostra una finestra emergent amb un missatge, un bot\u00f3 d'acceptar i un bot\u00f3 de cancel\u00b7lar. focus() Col\u00b7loca el focus en la finestra actual. open() Obre una nova finestra de navegaci\u00f3. prompt() Mostra una finestra de di\u00e0leg per introduir dades. <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte Window i totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Window.</p>"},{"location":"llibre/src/capitol1.html#12-objecte-location","title":"1.2.- Objecte location.","text":"<p>L\u2019objecte location cont\u00e9 informaci\u00f3 referent a la URL actual.</p> <p>Aquest objecte, \u00e9s part de l\u2019objecte window i hi accedeixen a trav\u00e9s de la propietat window.location.</p> chrisdlugosz\u00a0CC BY <p>L\u2019objecte location cont\u00e9 informaci\u00f3 referent a la URL actual.</p> <p>Aquest objecte, \u00e9s part de l\u2019objecte window i hi accedeixen a trav\u00e9s de la propietat window.location.</p> <p>Propietats de l\u2019objecte Location</p> Propietat Descripci\u00f3 hash Cadena que cont\u00e9 el nom de l\u2019enlla\u00e7, dins la URL. host Cadena que cont\u00e9 el nom del servidor i el n\u00famero del port, dins la URL. hostname Cadena que cont\u00e9 el nom de domini del servidor (o l'adre\u00e7a IP), dins la URL. href Cadena que cont\u00e9 la URL completa. pathname Cadena que cont\u00e9 el cam\u00ed al recurs, dins la URL. port Cadena que cont\u00e9 el n\u00famero de port del servidor, dins la URL. protocol Cadena que cont\u00e9 el protocol utilitzat (incloent-hi els dos punts), dins de la URL. search Cadena que cont\u00e9 la informaci\u00f3 passada en una trucada a un script, dins de la URL. <p>M\u00e8todes de l\u2019objecte Location</p> assign() Carrega un nou document. reload() Torna a carregar la URL especificada en la propietat href de l\u2019objecte location. replaci() Reempla\u00e7a l'historial actual mentre carrega la URL especificada en cadenaURL. <p>Cites per pensar</p> <p>\"Mil rutes s'allunyen de la fi escollida, per\u00f2 n'hi ha una que hi arriba.\"</p> <p>MONTAIGNE, Michel de.</p> <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte Location i totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Location.</p>"},{"location":"llibre/src/capitol1.html#13-objecte-navigator","title":"1.3.- Objecte navigator.","text":"<p>Aquest objecte navigator, cont\u00e9 informaci\u00f3 sobre el navegador que estem utilitzant quan obrim una URL o un document local.</p> Caitlinator\u00a0CC BY <p>Propietats de l\u2019objecte Navigator</p> Propietat Descripci\u00f3 appCodeName Cadena que cont\u00e9 el nom en codi del navegador. appName Cadena que cont\u00e9 el nom del client. appVersion Cadena que cont\u00e9 informaci\u00f3 sobre la versi\u00f3 del client. cookieEnabled Determina si les cookies estan o no habilitades al navegador. platform Cadena amb la plataforma sobre la qual s'est\u00e0 executant el programa client. userAgent Cadena que cont\u00e9 la cap\u00e7alera completa de l\u2019agent enviada en una petici\u00f3 HTTP. Cont\u00e9 la informaci\u00f3 de les propietats appCodeName i appVersion. <p>M\u00e8todes de l\u2019objecte Navigator</p> M\u00e8tode Descripci\u00f3 javaEnabled() Retorna true si el client permet la utilitzaci\u00f3 de Java, en cas contrari, retorna false. <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte Navigator i totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Navigator.</p>"},{"location":"llibre/src/capitol1.html#14-objecte-document","title":"1.4.- Objecte document.","text":"infilmity\u00a0CC BY-NC-SA <p>Cada document carregat en una finestra del navegador, ser\u00e0 un objecte de tipus document.</p> <p>L\u2019objecte document proporciona als scripts, l\u2019acc\u00e9s a tots els elements HTML dins d\u2019una p\u00e0gina.</p> <p>Aquest objecte forma part a m\u00e9s de l'objecte window, i pot ser accedit a trav\u00e9s de la propietat window.document o directament document (ja que podem ometre la refer\u00e8ncia a la window actual).</p> <p>Col\u00b7leccions de l'objecte Document</p> Col\u00b7lecci\u00f3 Descripci\u00f3 anchors[] \u00c9s un arrelament que cont\u00e9 tots els hiperenlla\u00e7os del document. forms[] \u00c9s un arrelament que cont\u00e9 tots els formularis del document. images[modifica] \u00c9s un arrelament que cont\u00e9 totes les imatges del document. links[] \u00c9s un arrelament que cont\u00e9 tots els enlla\u00e7os del document. <p>Propietats de l\u2019objecte Document</p> Propietat Descripci\u00f3 cookie Retorna tots els noms/valors de les cookies en el document. domain Cadena que cont\u00e9 el nom de domini del servidor que va carregar el document. referrer Cadena que cont\u00e9 la URL del document des del qual arribem al document actual. title Retorna o ajusta el t\u00edtol del document. URL Retorna la URL completa del document. <p>Propietats de l\u2019objecte Document</p> M\u00e8tode Descripci\u00f3 close() Tanca el flux obert pr\u00e8viament amb document. getElementById() Per accedir a un element identificat per l\u2019id escrit entre par\u00e8ntesis. getElementsByName() Per accedir als elements identificats per l\u2019atribut name escrit entre par\u00e8ntesis. getElementsByTagName() Per accedir als elements identificats pel tag o l\u2019etiqueta escrita entre par\u00e8ntesis. open() Obre el flux d\u2019escriptura per poder utilitzar document.write() o document.writeln en el document. write() Per poder escriure expressions HTML o codi de JavaScript dins d\u2019un document. writeln() El mateix que write() per\u00f2 afegeix un salt de l\u00ednia al final de cada instrucci\u00f3. <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte Document totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Document.</p>"},{"location":"llibre/src/capitol1.html#2-objectes-nadius-a-javascript","title":"2.- Objectes nadius a Javascript.","text":"<p>Aquests objectes, fan refer\u00e8ncia al treball amb cadenes de text, operacions matem\u00e0tiques, nombres, valors booleans i treball amb dates i hores.</p> <p>Aquest li ser\u00e0 molt \u00fatil per realitzar la seva aplicaci\u00f3 ja que haur\u00e0 de realitzar diferents tipus de conversions de dades, treballar intensivament amb cadenes i per suposat amb dates i hores.</p> <p>Tot i que no hem vist com crear objectes, s\u00ed que ja hem donat unes pinzellades al que s\u00f3n els objectes, propietats i m\u00e8todes.</p> <p>En aquesta secci\u00f3 vam fer una ullada a objectes que s\u00f3n nadius a JavaScript, aix\u00f2 \u00e9s, all\u00f2 que JavaScript ens dona, llestos per a la seva utilitzaci\u00f3 en la nostra aplicaci\u00f3.</p> <p>Enxampem una ullada als objectes String, Math, Number, Boolean i Date.</p> <p>Cites per pensar</p> <p>\"Si m'haguessin fet objecte seria objectiu, per\u00f2 em van fer subjecte.\"</p> <p>BERGAM\u00cdN, Jos\u00e9. </p> <p>Reflexiona</p> <p>T'has parat a pensar alguna vegada que el nostre m\u00f3n est\u00e0 envoltat d'objectes arreu?</p> <p>Saps que pr\u00e0cticament, tots aquests objectes tenen algunes propietats com poden ser mida, color, pes, tipus de corrent que fan servir, temperatura, tipus de combustible, etc.?</p> <p>Saps que tamb\u00e9 podem realitzar accions amb aquests objectes, com poden ser encendre, apagar, moure, obrir, tancar, pujar temperatura, baixar temperatura, marcar nombre, penjar, etc.?</p>"},{"location":"llibre/src/capitol1.html#21-objecte-string","title":"2.1.- Objecte String.","text":"faccig\u00a0(CC BY-SA) <p>Una cadena (string) consta d'un o m\u00e9s car\u00e0cters de text, envoltats de cometes simples o dobles; dona igual que usem ja que es considerar\u00e0 una cadena de tota manera, per\u00f2 en alguns casos resulta m\u00e9s c\u00f2mode l'\u00fas d'unes o altres.</p> <p>Recorda que de com definir les cadenes ja hem parlat i que no se t'oblidin les plantilles de cadenes que et fan molt f\u00e0cil la seva composici\u00f3 en comptes d'estar concatenant que de vegades resulta engreixat.</p> <p>Car\u00e0cters especials o car\u00e0cters d\u2019escapament.</p> <p>La forma en qu\u00e8 es creen les cadenes a JavaScript, fa que quan haguem d'emprar certs car\u00e0cters especials en una cadena de text, haguem d'escapar-los, emprant el s\u00edmbol \\ seguit del car\u00e0cter.</p> <p>Veiem aqu\u00ed un llistat dels car\u00e0cters especials o d'escapament a JavaScript:</p> <p>Car\u00e0cters d\u2019escapament i especials en JavaScript</p> S\u00edmbols Explicaci\u00f3 \\\" Cometes dobles. \\' Comella simple. \\ Barra inclinada. \\b Reculada. \\t Tabulador. \\n Nova l\u00ednia. \\r Salt de l\u00ednia. \\f Avan\u00e7 de p\u00e0gina. <p>Has de con\u00e8ixer</p> <p>El seg\u00fcent enlla\u00e7 amplia informaci\u00f3 sobre l'objecte String i totes les seves propietats i m\u00e8todes.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte String.</p>"},{"location":"llibre/src/capitol1.html#211-propietats-i-metodes-de-lobjecte-string","title":"2.1.1.- Propietats i m\u00e8todes de l\u2019objecte String.","text":"Josep Ma. Rosell\u00a0(CC BY) <p>Per crear un objecte String ho podrem fer de les formes:</p> <pre><code>let cadena1 = new String('Primera cadena');  \nlet cadena2 = \"Segona cadena\";  \nlet cadena3 = 'Tercera cadena';  \nlet totesCadenes = '${cadena1} \\- ${cadena2} \\- ${cadena3}';\n</code></pre> <p>\u00c9s a dir, cada vegada que tinguem una cadena de text, en realitat \u00e9s un objecte String que t\u00e9 propietats i m\u00e8todes:</p> <pre><code> cadena.propietat;  \n cadena.metode( [par\u00e0metres] );\n</code></pre> <p>Propietats de l\u2019objecte String</p> Propietat Descripci\u00f3 length Cont\u00e9 la longitud d\u2019una cadena. <p>M\u00e8todes de l\u2019objecte String</p> M\u00e8todes Descripci\u00f3 charAt() Retorna el car\u00e0cter especificat per la posici\u00f3 que s\u2019indica entre par\u00e8ntesis. charCodeAt() Retorna l\u2019Unicode del car\u00e0cter especificat per la posici\u00f3 que s\u2019indica entre par\u00e8ntesis. concat() Uneix una o m\u00e9s cadenes i retorna el resultat d'aquesta uni\u00f3. fromCharCode() Converteix valors Unicode a car\u00e0cters. indexOf() Retorna la posici\u00f3 de la primera ocurr\u00e8ncia del car\u00e0cter buscat a la cadena. lastIndexOf() Retorna la posici\u00f3 de l'\u00faltima ocurr\u00e8ncia del car\u00e0cter buscat a la cadena. match() Busca una coincid\u00e8ncia entre una expressi\u00f3 regular i una cadena i retorna les coincid\u00e8ncies o null si no ha trobat res. replaci() Busca una subcadena a la cadena i la reempla\u00e7a per la nova cadena especificada. search() Busca una subcadena a la cadena i retorna la posici\u00f3 on es va trobar. slice() Extreu una part de la cadena i retorna una nova cadena. split() Divideix una cadena en un arrelament de subcadenes. substr() Extreu els car\u00e0cters d\u2019una cadena, comen\u00e7ant en una determinada posici\u00f3 i amb el nombre de car\u00e0cters indicat. substring() Extreu els car\u00e0cters d\u2019una cadena entre dos \u00edndexs especificats. toLowerCase() Converteix una cadena en min\u00fascules. toUpperCase() Converteix una cadena en maj\u00fascules. <p>\u00c9s un est\u00e0ndard de codificaci\u00f3 de car\u00e0cters dissenyat per facilitar el tractament inform\u00e0tic, transmissi\u00f3 i visualitzaci\u00f3 correcta de textos realitzats en diferents idiomes, de tal manera que els car\u00e0cters especials de cada idioma siguin mostrats correctament independentment de la nostra configuraci\u00f3 d\u2019idioma local. El terme Unicode prov\u00e9 dels tres objectius perseguits: universalitat, uniformitat i unicitat.</p>"},{"location":"llibre/src/capitol1.html#22-objecte-math","title":"2.2.- Objecte Math.","text":"conskeptical\u00a0(CC BY-NC-SA) <p>Ja vam veure anteriorment algunes funcions, que ens permetien convertir cadenes a diferents formats num\u00e8rics (parseInt, parseFloat). A banda d'aquestes funcions, disposem d'un objecte Math a JavaScript, que ens permet realitzar operacions matem\u00e0tiques. L'objecte Math no posseeix un constructor (no ens permetr\u00e0 per tant crear o inst\u00e0nciar nous objectes que siguin de tipus Math), per la qual cosa per anomenar les seves propietats i m\u00e8todes, ho farem anteposant Math a la propietat o el m\u00e8tode. Per exemple:</p> <pre><code>let x = Math.PI;             // Retorna el n\u00famero PI.  \nlet i = Math.sqrt( 16);      // Retorna l'arrel quadrada de 16\\.\n</code></pre> <p>Propietats de l\u2019objecte Math</p> Propietat Descripci\u00f3 E Retorna el n\u00famero Euler (aproximadament 2.718). LN2 Retorna el logaritme neperi\u00e0 de 2 ( aproximadament 0.693). LN10 Retorna el logaritme neperi\u00e0 de 10 ( aproximadament 2.302). LOG2E Retorna el logaritme base 2 d'E ( aproximadament 1.442). LOG10E Retorna el logaritme base 10 d'E ( aproximadament 0.434). PI Retorna el n\u00famero PI ( aproximadament 3.14159). SQRT2 Retorna l'arrel quadrada de 2 ( aproximadament 1.414). <p>M\u00e8todes de l\u2019objecte Math</p> M\u00e8tode Descripci\u00f3 abs( x) Retorna el valor absolut de x. acos( x) Retorna l\u2019arc de x, en radians. asin( x) Retorna l\u2019arcos\u00e8 de x, en radians. atan( x) Retorna l'arcotangent de x, en radians amb un valor entre -PI/2 i PI/2. atan2( i,x) Retorna l'arcotangent del quocient dels seus arguments. ceil( x) Retorna el n\u00famero x arrodonit a l\u2019alta cap al seg\u00fcent sencer. cos( x) Retorna el cosin de x (x est\u00e0 en radians). floor( x) Retorna el n\u00famero x arrodonit a la baixa cap a l\u2019anterior sencer. log( x) Retorna el logaritme neperiant (base E) de x. max( x,y,z,...,n) Retorna el nombre m\u00e9s alt dels que es passen com a par\u00e0metres. min( x,y,z,...,n) Retorna el nombre m\u00e9s baix dels que es passen com a par\u00e0metres. pow( x,y) Retorna el resultat de x elevat a i. random() Retorna un n\u00famero a l'atzar entre 0 i 1. round( x) Arrodoneix x a l\u2019enter m\u00e9s proper. sense( x) Retorna el si de x (x est\u00e0 en radians). sqrt( x) Retorna l\u2019arrel quadrada de x. tan( x) Retorna la tangent d'un angle."},{"location":"llibre/src/capitol1.html#23-objecte-number","title":"2.3.- Objecte Number.","text":"Darwin BellCC BY <p>L'objecte Number es fa servir molt rarament, ja que per a la major part dels casos, JavaScript satisf\u00e0 les necessitats del dia a dia amb els valors num\u00e8rics que emmagatzemem en variables. Per\u00f2 l'objecte Number cont\u00e9 alguna informaci\u00f3 i capacitats molt interessants per a programadors m\u00e9s seriosos.</p> <p>El primer, \u00e9s que l\u2019objecte Number cont\u00e9 propietats que ens indiquen el rang de nombres suportats en el llenguatge. El nombre m\u00e9s alt \u00e9s 1.79E + 308; el nombre m\u00e9s baix \u00e9s 2.22E-308. Qualsevol nombre m\u00e9s gran que el nombre m\u00e9s alt, ser\u00e0 considerat com a infinit positiu, i si \u00e9s m\u00e9s petit que el nombre m\u00e9s baix, ser\u00e0 considerat infinit negatiu.</p> <p>Els n\u00fameros i els seus valors estan definits internament a JavaScript, com a valors de doble precisi\u00f3 i de 64 bits.</p> <p>L\u2019objecte Number, \u00e9s un objecte embolcall per a valors num\u00e8rics primitius.</p> <p>Els objectes Number s\u00f3n creats amb new Number().</p> <p>Propietats de l\u2019objecte Number</p> Propietat Descripci\u00f3 constructor Retorna la funci\u00f3 que va crear l'objecte Number. MAX_VALUE Retorna el n\u00famero m\u00e9s alt disponible a JavaScript. MIN_VALUE Retorna el nombre m\u00e9s petit disponible a JavaScript. NEGATIVE_INFINITY Representa infinit negatiu (es retorna en cas d'overflow). POSITIVE_INFINITY Representa infinit positiu (es retorna en cas d'overflow). prototype Permet afegir les nostres pr\u00f2pies propietats i m\u00e8todes a un objecte. <p>M\u00e8todes de l\u2019objecte Number</p> toExponential( x) Converteix un n\u00famero a la seva notaci\u00f3 exponencial. toFixed( x) Formatea un nombre amb x digits decimals despr\u00e9s del punt decimal. toPrecision(x) Formatea un n\u00famero a la longitud x. toString() Converteix un objecte Number en una cadena. Si se\u2019n posa 2 com a par\u00e0metre es mostrar\u00e0 el n\u00famero en binari. Si se\u2019n posa 8 com a par\u00e0metre es mostrar\u00e0 el n\u00famero en octal. Si se\u2019n posa 16 com a par\u00e0metre es mostrar\u00e0 el n\u00famero en hexadecimal. valueOf() Retorna el valor primitiu d\u2019un objecte Number. <p>\u00c9s un sistema num\u00e8ric en base 2 (usa 2 s\u00edmbols) i utilitza els d\u00edgits 0 i 1 com a representaci\u00f3 num\u00e8rica.</p> <p>\u00c9s un sistema num\u00e8ric en base 8 (usa 8 s\u00edmbols) i utilitza els d\u00edgits del 0 al 7 com a representaci\u00f3 num\u00e8rica.</p> <p>\u00c9s un sistema num\u00e8ric en base 16 (usa 16 s\u00edmbols) i utilitza els d\u00edgits del 0 a 9 i les lletres de l'A a la F com a representaci\u00f3 num\u00e8rica.</p>"},{"location":"llibre/src/capitol1.html#24-objecte-boolean","title":"2.4.- Objecte Boolean.","text":"<p>L'objecte Boolean s'utilitza per convertir un valor no l\u00f2gic, a un valor l\u00f2gic (true o false).</p> Darwin Bell\u00a0(GNU/GPL) <p>Propietats de l\u2019objecte Boolean</p> constructor Retorna la funci\u00f3 que va crear l'objecte Boolean. prototype Et permetr\u00e0 afegir propietats i m\u00e8todes a un objecte. <p>M\u00e8todes de l\u2019objecte Boolean</p> toString() Converteix un valor Boolean a una cadena i retorna el resultat. valueOf() Retorna el valor primitiu d\u2019un objecte Boolean. <p>Per saber-ne m\u00e9s</p> <p>En el seg\u00fcent enlla\u00e7 podr\u00e0s trobar exemples sobre l'\u00fas de l'objecte Boolean.</p> <p>M\u00e9s informaci\u00f3 i exemples sobre l'objecte Boolean.</p>"},{"location":"llibre/src/capitol1.html#25-objecte-date","title":"2.5.- Objecte Date.","text":"Darwin Bell\u00a0(GNU/GPL) <p>L'objecte Date s'utilitza per treballar amb dates i hores. Els objectes Date es creen amb new Date().</p> <p>Hi ha 4 formes d'inst\u00e0ncia (crear un objecte de tipus Date):</p> <pre><code>let dia1 = new Date();  \nlet dia2 = new Date(milisegundos);  \nlet dia3 = new Date(cadena de Data);  \nlet dia4 = new Date( any, mes, dia, hores, minuts, segons, mil\u00b7lisegons);\n</code></pre> <p>Propietats de l\u2019objecte Date</p> Propietat Descripci\u00f3 constructor Retorna la funci\u00f3 que va crear l'objecte Date. prototype Et permetr\u00e0 afegir propietats i m\u00e8todes a un objecte. <p>M\u00e8todes de l\u2019objecte Date</p> getDate() Retorna el dia del mes (d'1-31). getDay() Retorna el dia de la setmana (de 0-6). getFullYear() Retorna l'any (4 d\u00edgits). getHours() Torna l'hora (de 0-23). getMilliseconds() Retorna els mil\u00b7lisegons (de 0-999). getMinutes() Torna els minuts (de 0-59). getMonth() Torna el mes (de 0-11). getSeconds() Retorna els segons (de 0-59). getTime() Retorna els mil\u00b7lisegons des de mitja nit de l'1 de Gener de 1970. getTimezoneOffset() Retorna la difer\u00e8ncia de temps entre GMT i l'hora local, en minuts. getUTCDate() Retorna el dia del mes en base a l'hora UTC (d'1-31). getUTCDay() Retorna el dia de la setmana en base a l'hora UTC (de 0-6). getUTCFullYear() Retorna l'any en base a l'hora UTC (4 d\u00edgits). setDate() Ajusta el dia del mes de l'objecte (d'1-31). setFullYear() Ajusta l'any de l'objecte (4 d\u00edgits). setHours() Ajusta l'hora de l'objecte (de 0-23)."},{"location":"llibre/src/capitol2.html","title":"Cap\u00edtol 2","text":""},{"location":"llibre/src/capitol2.html#capitol-2","title":"Cap\u00edtol 2","text":""},{"location":"llibre/src/introduccio.html","title":"Introducci\u00f3","text":""},{"location":"llibre/src/introduccio.html#introduccio","title":"Introducci\u00f3","text":""},{"location":"blog/archive/2025.html","title":"2025","text":""},{"location":"blog/archive/2025.html#2025","title":"2025","text":""},{"location":"blog/archive/2024.html","title":"2024","text":""},{"location":"blog/archive/2024.html#2024","title":"2024","text":""},{"location":"blog/category/projecte-intermodular.html","title":"Projecte intermodular","text":""},{"location":"blog/category/projecte-intermodular.html#projecte-intermodular","title":"Projecte intermodular","text":""},{"location":"blog/category/daw.html","title":"DAW","text":""},{"location":"blog/category/daw.html#daw","title":"DAW","text":""},{"location":"blog/category/docker.html","title":"Docker","text":""},{"location":"blog/category/docker.html#docker","title":"Docker","text":""},{"location":"blog/category/dwes.html","title":"DWES","text":""},{"location":"blog/category/dwes.html#dwes","title":"DWES","text":""},{"location":"blog/category/dwec.html","title":"DWEC","text":""},{"location":"blog/category/dwec.html#dwec","title":"DWEC","text":""},{"location":"blog/category/java.html","title":"Java","text":""},{"location":"blog/category/java.html#java","title":"Java","text":""},{"location":"blog/category/springboot.html","title":"SpringBoot","text":""},{"location":"blog/category/springboot.html#springboot","title":"SpringBoot","text":""},{"location":"blog/category/js.html","title":"JS","text":""},{"location":"blog/category/js.html#js","title":"JS","text":""},{"location":"blog/category/php.html","title":"PHP","text":""},{"location":"blog/category/php.html#php","title":"PHP","text":""},{"location":"blog/category/html.html","title":"HTML","text":""},{"location":"blog/category/html.html#html","title":"HTML","text":""},{"location":"blog/category/programaci%C3%B3.html","title":"Programaci\u00f3","text":""},{"location":"blog/category/programaci%C3%B3.html#programacio","title":"Programaci\u00f3","text":""},{"location":"blog/category/dam.html","title":"DAM","text":""},{"location":"blog/category/dam.html#dam","title":"DAM","text":""},{"location":"blog/category/psp.html","title":"PSP","text":""},{"location":"blog/category/psp.html#psp","title":"PSP","text":""},{"location":"blog/category/programci%C3%B3-multifil.html","title":"Programci\u00f3 multifil","text":""},{"location":"blog/category/programci%C3%B3-multifil.html#programcio-multifil","title":"Programci\u00f3 multifil","text":""},{"location":"blog/category/matem%C3%A0tiques.html","title":"Matem\u00e0tiques","text":""},{"location":"blog/category/matem%C3%A0tiques.html#matematiques","title":"Matem\u00e0tiques","text":""},{"location":"blog/category/coneixements-generals.html","title":"Coneixements generals","text":""},{"location":"blog/category/coneixements-generals.html#coneixements-generals","title":"Coneixements generals","text":""},{"location":"blog/category/amazon.html","title":"Amazon","text":""},{"location":"blog/category/amazon.html#amazon","title":"Amazon","text":""},{"location":"blog/category/aws.html","title":"AWS","text":""},{"location":"blog/category/aws.html#aws","title":"AWS","text":""},{"location":"blog/category/dynamodb.html","title":"DynamoDB","text":""},{"location":"blog/category/dynamodb.html#dynamodb","title":"DynamoDB","text":""},{"location":"blog/category/javascript.html","title":"Javascript","text":""},{"location":"blog/category/javascript.html#javascript","title":"Javascript","text":""},{"location":"blog/category/general.html","title":"General","text":""},{"location":"blog/category/general.html#general","title":"General","text":""},{"location":"blog/page/2/index.html","title":"Bloc","text":""},{"location":"blog/page/2/index.html#bloc","title":"Bloc","text":""}]}