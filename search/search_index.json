{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Recursos Doc\u00e8ncia Xavier Sastre","text":""},{"location":"index.html#curs-2025-2026","title":"Curs 2025-2026","text":"<ul> <li> <p> DAW DWES Desenvolupament Web Entorn Servidor</p> <p> Arquitectures Web </p> </li> <li> <p> DAW DWEC Desenvolupament Web Entorn Client</p> </li> </ul> <ul> <li> <p> Normativa de ciberseguretat </p> </li> <li> <p> Projecte Intermodular </p> <p> Acc\u00e9s als continguts  En revisi\u00f3 </p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT2_Presentacions.html","title":"AOFUT02. Presentacions i documents gr\u00e0fics","text":"<p>\u00cdndex de contingut</p> <p>1. Documents gr\u00e0fics</p> <p>2. Eina per gestionar documents gr\u00e0fics: Canva</p> <p>3. Consells per fer una bona presentaci\u00f3</p> <p>4. Quantes paraules per diapositiva es recomanen per a una presentaci\u00f3?</p> <p>5. Consells per parlar en p\u00fablic</p> <p>6. El format de presentaci\u00f3 Petxa-Kutxa</p> <p>7. Qu\u00e8 hem de recordar?</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT2_Presentacions.html#contingut-unitat","title":"Contingut unitat","text":""},{"location":"Moduls/ARXIU/2425/AOF/AOFUT2_Presentacions.html#documents-grafics","title":"Documents gr\u00e0fics","text":"<p>Els tipus de documents gr\u00e0fics m\u00e9s habituals s\u00f3n portades, infografies, flyers, targetes de visita, cartells, fullets, fullets informatius, afitxes, anuncis publicitaris, logotips, gr\u00e0fics i diagrames.</p> <ul> <li>Portades: s\u00f3n les p\u00e0gines principals d'un document, llibre o publicaci\u00f3, i solen incloure el t\u00edtol, l'autor i el disseny gr\u00e0fic que representa el contingut del document.</li> <li>Infografies: s\u00f3n gr\u00e0fics que combinen text i imatges per presentar informaci\u00f3 de manera visual i clara. Poden incloure gr\u00e0fics, diagrames, mapes i altres elements visuals per representar dades i conceptes.</li> <li>Flyers: s\u00f3n fullets o panflets que s'utilitzen per difondre informaci\u00f3 sobre un esdeveniment, producte o servei. Solen ser de mida redu\u00efda i es distribueixen en llocs p\u00fablics o s'envien per correu.</li> <li>Targetes de visita: s\u00f3n petits documents que contenen informaci\u00f3 b\u00e0sica sobre una persona o empresa, com el nom, el c\u00e0rrec, el tel\u00e8fon, l'adre\u00e7a i el correu electr\u00f2nic. S'intercanvien en reunions professionals per facilitar el contacte posterior.</li> <li>Cartells: s\u00f3n avisos o anuncis impresos en mida gran i es col\u00b7loquen en llocs p\u00fablics per cridar l'atenci\u00f3 sobre un esdeveniment, producte o servei.</li> <li>Fullets: s\u00f3n documents que s'utilitzen per donar a con\u00e8ixer informaci\u00f3 sobre un tema en particular. Poden ser informatius, publicitaris o educatius i solen contenir imatges i text breu.</li> <li>Roll-up: \u00e9s una pancarta o cartell publicitari que es pot enrotllar i desenrotllar de manera f\u00e0cil i r\u00e0pida. S'utilitza sovint en esdeveniments i fires per promocionar un producte o servei, i sol tenir un suport telesc\u00f2pic que permet ajustar la seva al\u00e7ada.</li> <li>Anuncis publicitaris: s\u00f3n missatges creats per tal de promoure un producte, servei o marca. Poden apar\u00e8ixer en mitjans impresos, digitals o en televisi\u00f3 i r\u00e0dio.</li> <li>Logotips: s\u00f3n s\u00edmbols o imatges que representen una empresa, marca o producte. Solen ser dissenyats amb una combinaci\u00f3 de colors, formes i lletres que els fan \u00fanics i f\u00e0cilment reconeixibles.</li> <li>Gr\u00e0fics: s\u00f3n representacions visuals de dades o informaci\u00f3 que s'utilitzen per facilitar-ne la comprensi\u00f3. Poden ser de diferents tipus, com barres, l\u00ednies, pastissos o mapes.</li> <li>Diagrames: s\u00f3n gr\u00e0fics que s'utilitzen per representar informaci\u00f3 de manera esquem\u00e0tica. Poden ser de diferents tipus, com fluxogrames, organigrames o diagrames de Venn.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT2_Presentacions.html#eina-per-gestionar-documents-grafics-canva","title":"Eina per gestionar documents gr\u00e0fics: Canva","text":"<p>Canva \u00e9s una plataforma en l\u00ednia que ofereix una \u00e0mplia gamma d'eines i recursos per crear i editar gr\u00e0fics i dissenys de manera f\u00e0cil i senzilla. Canva ofereix una interf\u00edcie intu\u00eftiva i amigable que permet als usuaris crear dissenys atractius sense necessitat de coneixements previs en disseny gr\u00e0fic.</p> <p>Canva compta amb una gran quantitat de plantilles predissenyades per a diferents tipus de documents gr\u00e0fics, com portades, infografies, flyers, targetes de visita, cartells, roll-ups, fullets, anuncis publicitaris, logotips, gr\u00e0fics i diagrames. Pots personalitzar aquestes plantilles amb els teus propis textos, imatges, colors i fonts, o b\u00e9 crear els teus dissenys des de zero utilitzant les eines de dibuix i edici\u00f3 de Canva.</p> <p>A m\u00e9s, Canva compta amb una \u00e0mplia biblioteca d'imatges, icones i fonts que pots utilitzar en els teus dissenys. Pots triar entre milers d'imatges gratu\u00eftes o adquirir imatges d'alta qualitat de la seva biblioteca d'imatges premium. Tamb\u00e9 pots pujar les teves pr\u00f2pies imatges i utilitzar-les en els teus dissenys.</p> <p>Un dels principals avantatges de Canva \u00e9s que permet col\u00b7laborar amb altres usuaris en temps real. Pots compartir els teus dissenys amb altres usuaris i treballar-hi junts, cosa que facilita la creaci\u00f3 de dissenys en equip i accelera el proc\u00e9s de disseny.</p> <p>En resum, Canva \u00e9s una eina molt completa i vers\u00e0til que ofereix una \u00e0mplia gamma d'opcions per crear i editar documents gr\u00e0fics d'alta qualitat. Si desitges crear dissenys atractius i professionals sense haver d'invertir en programari de disseny cost\u00f3s, Canva \u00e9s una excel\u00b7lent opci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT2_Presentacions.html#consells-per-fer-una-bona-presentacio","title":"Consells per fer una bona presentaci\u00f3","text":"<p>Si vols fer una bona presentaci\u00f3, hi ha diversos consells que pots seguir:</p> <ol> <li>Primer, assegura't de tenir una bona comprensi\u00f3 del tema que vas presentar. Investiga i prepara material de suport per poder respondre qualsevol pregunta que pugui sorgir.</li> <li>Planifica la teva presentaci\u00f3 acuradament. Defineix una estructura clara i organitzada, i fa servir un llenguatge senzill i f\u00e0cil d'entendre. Evita incloure massa informaci\u00f3 en la teva presentaci\u00f3, i en el seu lloc, en els punts principals.</li> <li>Utilitza un llenguatge corporal i vocal positiu durant la teva presentaci\u00f3. Mantenen una postura segura i confiada, parla en un to de veu clar i audible, i fa servir gestos i moviments adequats per emfatitzar els teus punts principals.</li> <li>Utilitza eines visuals de manera efectiva per donar suport a la teva presentaci\u00f3. Aix\u00f2 pot incloure diapositives, v\u00eddeos, gr\u00e0fics, imatges, etc. Assegura't que aquests recursos siguin clars i f\u00e0cils d'entendre, i evita fer servir massa text en les teves diapositives.</li> <li>Interactua amb la teva audi\u00e8ncia durant la presentaci\u00f3. Pregunteu-los sobre els seus coneixements i opinions, i fes que se sentin part de la presentaci\u00f3. Tamb\u00e9 pots fer preguntes i enquestes per mantenir el seu inter\u00e8s i participaci\u00f3.</li> <li>Practica la teva presentaci\u00f3 diverses vegades abans de donar-la en p\u00fablic. Aix\u00f2 t'ajudar\u00e0 a identificar qualsevol error o problema, i et donar\u00e0 la confian\u00e7a necess\u00e0ria per presentar de manera efectiva.</li> <li>Finalment, assegura't de mantenir una actitud positiva i relaxada durant la presentaci\u00f3. Si comets un error, no et preocupis massa. En el seu lloc, mantenen la calma i segueix endavant. La teva audi\u00e8ncia probablement no es donar\u00e0 compte de l'error, i si ho fan, segurament ho entendran i el perdonaran.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT2_Presentacions.html#quantes-paraules-per-diapositiva-es-recomanen-per-a-una-presentacio","title":"Quantes paraules per diapositiva es recomanen per a una presentaci\u00f3?","text":"<p>No hi ha un nombre exacte de paraules que hagi de tenir una diapositiva utilitzada per un bon comunicador. En general, el m\u00e9s important \u00e9s que la diapositiva sigui clara i concisa, i que ajudi a emfatitzar els punts principals de la teva presentaci\u00f3. Massa paraules en una diapositiva poden distreure l'audi\u00e8ncia i fer que perdin l'inter\u00e8s en la teva presentaci\u00f3. En el seu lloc, es recomana utilitzar imatges, gr\u00e0fics i altres recursos visuals per donar suport als teus punts principals, i nom\u00e9s incloure el text necessari per emfatitzar-los. En general, es recomana utilitzar menys de 10 paraules per diapositiva com a guia general. Tanmateix, el m\u00e9s important \u00e9s que la diapositiva sigui clara i concisa, i que ajudi a transmetre el teu missatge de manera efectiva.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT2_Presentacions.html#consells-per-parlar-en-public","title":"Consells per parlar en p\u00fablic","text":"<p>Aqu\u00ed hi ha alguns consells per presentar i parlar en p\u00fablic:</p> <ol> <li>Prepara't: assegura't que tinguis una bona comprensi\u00f3 del tema que vas presentar i que hagis organitzat les teves idees de manera clara i l\u00f2gica.</li> <li>Practica: assaja la teva presentaci\u00f3 diverses vegades per assegurar-te que estigui ben enfocada i que compleixis amb el temps l\u00edmit.</li> <li>Utilitza recursos visuals: utilitza imatges i gr\u00e0fics per il\u00b7lustrar les teves idees i fer que la teva presentaci\u00f3 sigui m\u00e9s atractiva visualment.</li> <li>Parla en un to de veu clar i conc\u00eds: utilitza un to de veu que sigui f\u00e0cil d'escoltar i que no es torni mon\u00f2ton.</li> <li>Fes contacte visual amb el p\u00fablic: assegura't de fer contacte visual amb diferents membres del p\u00fablic mentre parles, per mostrar que est\u00e0s parlant amb ells.</li> <li>Prepara't per a preguntes: deixa temps al final de la presentaci\u00f3 per respondre preguntes i assegura't d'estar preparat per a qualsevol pregunta que puguin fer-te.</li> <li>Mantenen la calma: si et sents nervi\u00f3s, recorda que \u00e9s normal sentir-se nervi\u00f3s quan es parla en p\u00fablic. Respira profundament i tracta de mantenir la calma perqu\u00e8 puguis parlar amb confian\u00e7a.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT2_Presentacions.html#el-format-de-presentacio-petxa-kutxa","title":"El format de presentaci\u00f3 Petxa-Kutxa","text":"<p>Petxa-Kutxa \u00e9s un format de presentaci\u00f3 en qu\u00e8 els oradors mostren 20 diapositives durant un temps fix de 20 segons per diapositiva. Aix\u00f2 dona com a resultat una presentaci\u00f3 de 6 minuts i 40 segons en total. El format va ser creat a T\u00f2quio el 2003 com una manera de donar als dissenyadors gr\u00e0fics una plataforma per compartir les seves idees de manera concisa i clara. Des d'aleshores, s'ha utilitzat en una varietat de contextos, des de confer\u00e8ncies de negocis fins a tallers educatius. L'objectiu del format Petxa-Kutxa \u00e9s ajudar els oradors a presentar idees de manera clara i concisa, sense el risc de perdre l'atenci\u00f3 del p\u00fablic.</p> <p>El format Petxa-Kutxa \u00e9s una eina popular per a presentacions de negocis, confer\u00e8ncies educatives i xerrades en l'\u00e0mbit acad\u00e8mic. Tamb\u00e9 s'ha utilitzat en tallers creatius i en reunions de networking. La idea darrere del format \u00e9s que, en tenir un temps limitat per a cada diapositiva, els oradors han de ser concisos i al gra en presentar les seves idees. Aix\u00f2 ajuda a evitar que les presentacions es tornin mon\u00f2tones o es desvi\u00efn del tema principal.</p> <p>Aqu\u00ed hi ha alguns consells per dissenyar una presentaci\u00f3 en format Petxa-Kutxa:</p> <ol> <li>Tria un tema que coneguis b\u00e9. Aix\u00f2 t'ajudar\u00e0 a parlar amb entusiasme i a mantenir l'atenci\u00f3 del p\u00fablic.</li> <li>Fes un esquema de la teva presentaci\u00f3 per organitzar les teves idees i assegurar-te que incloguis tota la informaci\u00f3 que vols compartir.</li> <li>Limita la teva presentaci\u00f3 a 20 diapositives i assegura't que cadascuna d'elles es mostri durant 20 segons. Aix\u00f2 t'ajudar\u00e0 a mantenir el ritme i a complir amb el temps l\u00edmit.</li> <li>Utilitza imatges i gr\u00e0fics per il\u00b7lustrar les teves idees i fer que la teva presentaci\u00f3 sigui m\u00e9s atractiva visualment.</li> <li>Practica la teva presentaci\u00f3 diverses vegades per assegurar-te que estigui ben enfocada i que compleixis amb el temps l\u00edmit.</li> <li>Durant la presentaci\u00f3, parla en un to de veu clar i conc\u00eds i assegura't de fer contacte visual amb el p\u00fablic.</li> <li>Deixa temps al final de la presentaci\u00f3 per respondre preguntes i fer un resum dels teus principals punts.</li> </ol> <p>Hi ha diverses alternatives al format Petxa-Kutxa, algunes de les quals inclouen:</p> <ol> <li>Presentacions de diapositives tradicionals: en lloc de mostrar 20 diapositives durant 20 segons cadascuna, pots optar per una presentaci\u00f3 de diapositives tradicional en la qual canvi\u00efs les diapositives al teu propi ritme.</li> <li>Presentacions en viu: en lloc d'utilitzar diapositives, pots optar per una presentaci\u00f3 en viu en la qual parlis directament al p\u00fablic i utilitzis recursos visuals com taules o gr\u00e0fics.</li> <li>Presentacions en v\u00eddeo: en lloc de fer una presentaci\u00f3 en persona, pots gravar un v\u00eddeo en el qual expliquis les teves idees i el comparteixes amb el p\u00fablic.</li> <li>Tallers participatius: en lloc d'una presentaci\u00f3 tradicional, pots optar per un taller participatiu en el qual els participants treballin junts per resoldre un problema o completar una tasca.</li> <li>Di\u00e0legs en grup: en lloc d'una presentaci\u00f3 formal, pots optar per un di\u00e0leg en grup en el qual diferents persones comparteixin les seves idees i perspectives sobre un tema determinat.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT2_Presentacions.html#que-hem-de-recordar","title":"Qu\u00e8 hem de recordar?","text":"<ul> <li>Con\u00e8ixer els diferents tipus de documents gr\u00e0fics que es poden realitzar.</li> <li>Ser capa\u00e7 de realitzar els diferents tipus de documents gr\u00e0fics usant Canva.</li> <li>Con\u00e8ixer els principals consells per preparar una presentaci\u00f3 en p\u00fablic.</li> <li>Con\u00e8ixer el nombre de paraules adequada que ha d'acompanyar cada diapositiva d'una presentaci\u00f3.</li> <li>Con\u00e8ixer el format Petxa-Kutxa i els avantatges del seu \u00fas.</li> </ul> <p>\u2755 Atenci\u00f3: a m\u00e9s d'aquests apunts, entra el treballat en activitats.</p> <p> Afegeix aqu\u00ed totes les eines per fer presentacions que coneguis.</p> <p>Autors: Xavier Sastre, basat en el treball de Sergi Garc\u00eda Barea, Gloria Mu\u00f1oz Gonz\u00e1lez!</p> <p>Actualitzat Octubre 2024</p> <p></p> Llic\u00e8ncia <p>Reconeixement - No comercial - CompartirIgual (BY-NC-SA): No es permet un \u00fas comercial de l'obra original ni de les possibles obres derivades, la distribuci\u00f3 de les quals s'ha de fer amb una llic\u00e8ncia igual a la que regula l'obra original. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html","title":"Edici\u00f3 i creaci\u00f3 d'imatges amb GIMP.","text":"<p>Des de fa ja uns anys haur\u00e0s pogut comprovar l'auge de les c\u00e0meres fotogr\u00e0fiques digitals, en detriment de les antigues c\u00e0meres amb rodet.</p> <p>Aix\u00ed com aquestes c\u00e0meres han anat millorant i fent-se m\u00e9s populars, han anat sorgint en el mercat del programari inform\u00e0tic programes que permeten la desc\u00e0rrega d'aquestes fotografies a l'ordinador, aix\u00ed com la seva edici\u00f3, tamb\u00e9 permeten la creaci\u00f3 de noves imatges a partir d'un llen\u00e7 en blanc.</p> <p>Un d'aquests programes \u00e9s el GIMP (GNU Image Manipulation Program), \u00e9s un programa de codi obert i gratu\u00eft, amb ell podem editar les imatges obtingudes amb les nostres c\u00e0meres, aix\u00ed com fer composicions i crear les nostres pr\u00f2pies imatges.</p> <p>La seva capacitat per a l'edici\u00f3 d'imatges arriba als nivells d'altres programes propietaris i de pagament.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#1-la-imatge-digital-caracteristiques","title":"1. La imatge digital. Caracter\u00edstiques.","text":"<p>Ja saps que els ordinadors treballen amb informaci\u00f3 digital i amb informaci\u00f3 num\u00e8rica. En un ordinador la informaci\u00f3 anal\u00f2gica de textos, imatges i sons es codifica per mitj\u00e0 de bits.</p> <p>Una imatge digital \u00e9s una representaci\u00f3 bidimensional d'una imatge anal\u00f2gica utilitzant bits (uns i zeros).</p> <p>A l'hora d'editar imatges digitals et trobar\u00e0s, que hi ha dues grans categories on es pot englobar. Si la resoluci\u00f3 de la imatge \u00e9s est\u00e0tica es diu que el gr\u00e0fic \u00e9s rasteritzat o de mapa de bits,  no obstant aix\u00f2, si la resoluci\u00f3 de la imatge \u00e9s din\u00e0mica es diu que \u00e9s un gr\u00e0fic vectorial.</p> <p>Les imatges vectorials es formen a partir de vectors. Les imatges es construeixen a partir de rectes, angles, corbes, definits amb punts que creen l\u00ednies farcides. Aquests vectors es creen mitjan\u00e7ant f\u00f3rmules i relacions matem\u00e0tiques com les de B\u00e9zier, usades per crear corbes. Un arxiu vectorial no pot definir una imatge de tonalitat continu, per\u00f2 s\u00ed que pot definir l\u00ednies i dibuixos.</p> <p>Les imatges de mapa de bits defineixen la imatge indicant la tonalitat dels p\u00edxels de la imatge. De la resoluci\u00f3 de la imatge, dependr\u00e0 el que ocupi finalment l'arxiu. Prestarem atenci\u00f3 a la profunditat de color que pot guardar.</p> <p>Les imatges que m\u00e9s utilitzar\u00e0s en la vida real s\u00f3n les de mapa de bits, per aix\u00f2, durant aquest cap\u00edtol ens centrarem en elles, i en la seva manipulaci\u00f3.</p> <p>+ informaci\u00f3</p> <p>Com ja hem dit ens centrarem en aquesta unitat en el programari per a l'edici\u00f3 d'imatges digitals de mapa de bits, ja que s\u00f3n les m\u00e9s utilitzades. Per saber m\u00e9s sobre un altre tipus de programari per a l'edici\u00f3 d'imatges vectorials, pots consultar aquest enlla\u00e7, en el qual trobar\u00e0s la p\u00e0gina web d'Inkscape, que \u00e9s un programari per a l'edici\u00f3 d'imatges vectorials.</p> <p>Programari per a l'edici\u00f3 d'imatges vetorials (Inkscape).</p> <p>GIMP</p> <p>GIMP \u00e9s el Programa de Manipulaci\u00f3 d'Imatges GNU. \u00c9s programari lliure, i la seva distribuci\u00f3 \u00e9s gratu\u00efta. S'utilitza tant per a tasques de retoc fotogr\u00e0fic, com de composici\u00f3 d'imatges i creaci\u00f3 d'imatge. Funciona en molts sistemes operatius i est\u00e0 tradu\u00eft a una gran varietat d'idiomes.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#11-imatges-escalars-i-vectorials","title":"1.1. Imatges escalars i vectorials.1. Quin dels seg\u00fcents programes \u00e9s l'adequat per a l'edici\u00f3 d'imatges vectorials?","text":"<p>Hi ha dues formes de representar una imatge, la vectorial i la de mapa de bits.</p> <p>La imatge vectorial es compon d'objectes, que solen ser l\u00ednies, rectangles, arcs i corbes (les corbes de Bezier s\u00f3n les m\u00e9s t\u00edpiques), formes obertes i tancades, i textos.</p> <p>Cada objecte t\u00e9 unes caracter\u00edstiques com s\u00f3n: amplada de l\u00ednia, color, patr\u00f3 i rebliment. A m\u00e9s, cada objecte \u00e9s independent de la resta d'objectes, per la qual cosa poden ser manipulats independentment.</p> <p>Si diversos objectes se superposen, hi ha un eix de profunditat que fa que no es vegin les parts ocultes dels objectes m\u00e9s al fons de la imatge. \u00c9s possible graduar la transpar\u00e8ncia dels objectes m\u00e9s propers.</p> <p>La imatge vectorial es pot escalar sense cap problema.</p> <p>+ informaci\u00f3</p> <p>Aquests gr\u00e0fics vectorials s'utilitzen quan es vol utilitzar una imatge tant en un llen\u00e7 molt petit, com en un altre gegant\u00ed, per poder ampliar la imatge sense patir l'efecte d'escalat que pateixen l'altre tipus d'imatges. Consultar la definici\u00f3, les aplicacions i els formats dels gr\u00e0fics vectorials. Gr\u00e0fics vectorials.</p> <p>La imatge rasteritzada o de mapa de bits \u00e9s un patr\u00f3 de punts de color molt petits. \u00c9s el que prenen les c\u00e0meres fotogr\u00e0fiques per crear-les partint del m\u00f3n real.</p> <p>\u00c9s molt dif\u00edcil convertir una imatge rasteritzada a una vectorial, mentre que una vectorial pot convertir-se autom\u00e0ticament a un de mapa de bits. Quan intentis augmentar la mida d'una de les fotografies que has realitzat amb la teva c\u00e0mera digital, veur\u00e0s que la imatge perd qualitat.</p> <p>Alguna vegada, necessitar\u00e0s fer que dues imatges, una de mapa de bits, i una altra vectorial, es fonamenten en una de sola. Aix\u00f2 et ser\u00e0 possible gr\u00e0cies al seu torn que permeten la uni\u00f3 d'aquests dos tipus d'imatges, a trav\u00e9s de capes unes amb mapa de bits, i altres amb imatges vectorials. O b\u00e9, a trav\u00e9s de la inclusi\u00f3 del mapa de bits com un objecte addicional dins d'una imatge vectorial.</p> <p>Existeixen tres tipus diferents de programari per a l'edici\u00f3 d'imatges: el primer tipus \u00e9s el programari per al dibuix, \u00e9s a dir, per a la creaci\u00f3 de mapes de bits des de zero. El segon tipus \u00e9s el programari per al retoc d'imatges, \u00e9s a dir, per a la modificaci\u00f3 de mapes de bits. Finalment, el programari per crear i editar dibuixos vectorials.</p> Autoavaluaci\u00f3 <p> Test d'autoavaluaci\u00f3 GIMP Inkscape Krita Picassa </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#12-el-color","title":"1.2. El color.","text":"<p>Si ens endinsam en el m\u00f3n de les imatges de mapa de bits, una de les coses m\u00e9s importants que has de con\u00e8ixer \u00e9s el concepte del color.</p> <p>Qualsevol color es pot crear combinant els tres colors primaris, que s\u00f3n el vermell, groc i blau. Malgrat aix\u00f2, i per diversos motius el groc es substitueix pel color verd.amb llum aix\u00f2 canvia, i el verd reempla\u00e7a el groc. Aix\u00f2 donar\u00e0 lloc al terme terme RGB: xarxa (vermell), green (verd), blue (blau).</p> Perqu\u00e8 el verd i no el groc? <p>La tria dels colors verd, vermell i blau (RGB) en lloc d'incloure el groc est\u00e0 directament relacionada amb:</p> <p>En combinar-se els tres colors en la m\u00e0xima proporci\u00f3 crearem el color blanc. Es denominen additius.</p> <p>+ informaci\u00f3</p> <p>El p\u00edxel \u00e9s una unitat d'informaci\u00f3 i no de mesura, s'hi emmagatzema informaci\u00f3 de la imatge, com per exemple el color.</p> <p></p> <p>Per altra banda tenim els colors secundaris, que s\u00f3n groc, cyan i magenta (blanc menys blau, blanc menys vermell i blanc menys verd).</p> <p>Amb ells com a base tamb\u00e9 podr\u00e0s formar qualsevol color. Et sona aquest esquema de colors de les impressores, el CMYK ( Cyan (Cian) + Magenta (Magenta) + Yellow (Groc) + blacK (Negre)).</p> <p>En combinar-se C, M, Y s'absorbeixen tots els colors i es genera negre. Per aix\u00f2, se'ls anomena colors substractius.</p> <p>El negre pur (K) es fa servir a causa que les impureses de les tintes d'impressi\u00f3 produirien un marr\u00f3, m\u00e9s aviat que un negre.</p> <p>Una altra forma usual de fixar un color \u00e9s usar tres de les seves propietats; la tonalitat, la saturaci\u00f3 i la brillantor, HSB, Hue (tonalitat), Saturation (saturaci\u00f3) y Brightness (brillantor).</p> <p>La tonalitat ser\u00e0 mesurada com una posici\u00f3 en graus, en la roda de colors est\u00e0ndard. La saturaci\u00f3 ens indica la puresa que t\u00e9 un color, seguint una l\u00ednia entre el pur (100) i gris amb id\u00e8ntica brillantor (0). La brillantor indica la lluminositat del color i marcaria la l\u00ednia entre blanc (100) i negre (0).</p> <p>En inform\u00e0tica hi ha altres modes de color per a efectes, en part, obligats pel mode gr\u00e0fic en el qual estem treballant. Per exemple:</p> <ul> <li>Monocrom, per a p\u00edxels nom\u00e9s blanc o negre.</li> <li>Escala de grisos, per a imatges en blanc i negre per\u00f2 usant grisos en una escala que va del 0 (blanc) al 100 (negre), amb un nombre de bits determinat (per exemple 8 per a 256 tons diferents).</li> <li>Color indexat, es parteix d'una paleta limitada (per exemple, nom\u00e9s 8 bits de profunditat de color per a cada p\u00edxel, el que significa 256 colors). Es defineixen els colors que ha de tenir la paleta (poden agafar-se uns habituals o millor adaptar-se a cada imatge) i se substitueix cada p\u00edxel per l'\u00edndex del color de la paleta m\u00e9s proper.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#1-origen-tecnic-model-de-color-rgb","title":"1. Origen T\u00e8cnic: Model de Color RGB","text":"<p>Els sistemes digitals (pantalles, p\u00edxels) es basen en el model RGB (Red, Green, Blue), els colors primaris additius que, combinats, poden reproduir la majoria de colors visibles:</p> <ul> <li>Vermell (R) + Verd (G) = Groc (en teoria, per\u00f2 en la pr\u00e0ctica digital no \u00e9s un groc pur).</li> <li>El groc no \u00e9s un component primari en aquest model, sin\u00f3 un color secundari.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#2-raons-practiques","title":"2. Raons Pr\u00e0ctiques","text":"<ul> <li>Contrast i llegibilitat:     El verd (#00FF00 en RGB pur) ofereix millor contrast sobre fons blanc que el groc (#FFFF00), que pot semblar \"brillant\" i fatigar la vista.</li> </ul> <pre><code>  /* Groc pur (poc llegible) */\n  background-color: #FFFF00;  /* Groc */\n  color: #000;                /* Text negre */\n\n  /* Verd (m\u00e9s suau i llegible) */\n  background-color: #D4EDDA;  /* Verd clar */\n  color: #155724;            /* Verd fosc */\n</code></pre>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#3-problemes-del-groc-en-interficies","title":"3. Problemes del Groc en Interf\u00edcies","text":"<ul> <li>Accessibilitat:     El groc \u00e9s el color menys accessible per a usuaris amb daltonisme (especialment en combinaci\u00f3 amb blanc).</li> <li>Impacte visual:     En pantalles, el groc pur (#FFFF00) vibra excessivament i pot causar fatiga visual.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#4-per-que-rgb-i-no-rgy-vermell-verd-groc","title":"4. Per qu\u00e8 RGB i no RGY (vermell, verd, groc)?","text":"<ul> <li>El groc no \u00e9s un color primari en sistemes digitals:     En pantalles, el groc es sintetitza combinant vermell i verd a m\u00e0xima intensitat, per\u00f2 no \u00e9s un component b\u00e0sic com el blau.</li> <li>El blau completa la gamma crom\u00e0tica:     Permet crear colors com el magenta, cian o blanc quan es combina amb vermell i verd.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#13-la-resolucio","title":"1.3. La resoluci\u00f3Quina de les seg\u00fcents unitats de mesura utilitzaries per mesurar la resoluci\u00f3 d'una imatge?","text":"<p>Una altra de les caracter\u00edstiques que has de con\u00e8ixer de les imatges digitals \u00e9s la resoluci\u00f3. La resoluci\u00f3 \u00e9s el detall, o la qualitat, amb qu\u00e8 pots observar una imatge digital.</p> <p>Aquesta caracter\u00edstica es mesura en p\u00edxels per polzada ppp i representa la quantitat de punts utilitzats per definir una superf\u00edcie.</p> <p>Com m\u00e9s gran sigui el nombre de p\u00edxels per polzada, m\u00e9s definici\u00f3 tindr\u00e0 la nostra fotografia i major grand\u00e0ria tamb\u00e9.</p> <p>Si una imatge t\u00e9 una resoluci\u00f3 de 300 ppp (p\u00edxels per polzada) en cada polzada quadrada ens trobem la quantitat de 300 x 300 p\u00edxels. Aquesta resoluci\u00f3 ens dona un resultat de 90.000 p\u00edxels que contenen la informaci\u00f3 digital d'aquesta imatge.Si aquesta mateixa imatge t\u00e9 una resoluci\u00f3 de 96 ppp, la informaci\u00f3 digital est\u00e0 continguda en 9216 p\u00edxels,amb la qual cosa la qualitat de la imatge ser\u00e0 menor. Recorda: tindr\u00e0s menor resoluci\u00f3, menor informaci\u00f3 i menor detall.</p> <p></p> <p>La mida de la imatge dep\u00e8n de les seves dimensions (amplada i al\u00e7ada), mides en p\u00edxels o altres unitats: punts, picades, mil\u00b7l\u00edmetres, etc. Perqu\u00e8 entenguis millor aquest aspecte, has de diferenciar els conceptes que estem tractant: mida de la imatge, resoluci\u00f3 de la imatge i mida de l'arxiu.</p> <p>La resoluci\u00f3 de la imatge l'expressem en p\u00edxels per polzada. A major resoluci\u00f3 m\u00e9s p\u00edxels caben en una polzada i menor ser\u00e0 la mida dels p\u00edxels.</p> <p>** La mida de l'arxiu de la imatge** considerada com a unitat d'informaci\u00f3 digitalitzada, s'expressa en bits. Com m\u00e9s gran sigui la resoluci\u00f3, m\u00e9s gran ser\u00e0 la mida de l'arxiu.</p> <p>Els valors m\u00e9s usuals que trobar\u00e0s s\u00f3n:</p> <ul> <li>M\u00e9s de 300 ppp per a qualitat fotogr\u00e0fica.</li> <li>150 ppp per a qualitat d'impressora.</li> <li>96 ppp per a qualitat de pantalla i web.</li> </ul> <p>Tamb\u00e9 \u00e9s molt \u00fatil que s\u00e0pigues que una polzada equival a 2,54 cm.</p> <p></p> <p>La resoluci\u00f3 d'una c\u00e0mera fotogr\u00e0fica digital est\u00e0 limitada pel sensor de la c\u00e0mera (generalment un CCD o un Sensor CMOS) que respon als senyals de llum, substituint el treball de la pel\u00b7l\u00edcula en fotografia tradicional. El sensor es compon de milions de \"cubs\" que es carreguen en resposta a la llum. Generalment, aquestes galledes responen solament a una gamma limitada de longituds d'ona lleugeres, a causa d'un filtre del color sobre cadascun. Cada un d'aquests cubs es diu un p\u00edxel, i s'utilitza un algorisme de mosa\u00efcisme i interpolaci\u00f3 per unir la imatge de cada gamma de longitud d'ona per p\u00edxel en una imatge del RGB on estan les tres imatges per p\u00edxel per representar un color complet.</p> <p>Els dispositius CCD transporten la c\u00e0rrega a trav\u00e9s del xip fins a un convertidor anal\u00f2gic-digital. Aquest converteix el valor de cadascun dels p\u00edxels en un valor digital mesurant la c\u00e0rrega que li arriba. Depenent del nombre de bits del convertidor obtindrem una imatge amb m\u00e9s o menys gamma de color. Per exemple, si s'utilitz\u00e9s un sol bit, tindr\u00edem valors de 0 i 1, i nom\u00e9s podr\u00edem representar pres\u00e8ncia o abs\u00e8ncia de llum, el que suposaria una imatge en blanc i negre pur.</p> <p>D'altra banda, els aparells CMOS contenen diversos transistors en cada p\u00edxel. El proc\u00e9s de conversi\u00f3 digital es produeix a la mateixa estructura del sensor, de manera que no es necessita un convertidor afegit. El seu proc\u00e9s de fabricaci\u00f3 \u00e9s m\u00e9s senzill, i fa que les c\u00e0meres que utilitzen aquesta tecnologia resultin m\u00e9s barates.</p> <p>La quantitat de p\u00edxels resultant en la imatge determina la seva mida. Per exemple una imatge de 640 p\u00edxels d'ample per 480 p\u00edxels d'alt tindr\u00e0 307,200 p\u00edxels, o aproximadament 307 kilop\u00edxels, una imatge de 3872 p\u00edxels d'alt per 2592 p\u00edxels d'amplada tindr\u00e0 10.036.224 p\u00edxels, o aproximadament 10 megap\u00edxels.</p> <p>Segons l'experi\u00e8ncia fotogr\u00e0fica dels professionals en aquest camp afirmen que una fotografia qu\u00edmica realitzada per una c\u00e0mera compacta donaria com a resultat una fotografia de 30 megap\u00edxels.</p> Autoavaluaci\u00f3 <p> Test d'autoavaluaci\u00f3 P\u00edxels Polzada P\u00edxels per polzada Bits </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#14-tipus-dimatges-digitals","title":"1.4. Tipus d'imatges digitals.","text":"<p>Quan accedeixes a un directori del teu ordinador en el qual tens fotografies emmagatzemades, veus que les imatges tenen diferents extensions. Aquestes extensions indiquen el format de la imatge. El format \u00e9s la codificaci\u00f3 amb qu\u00e8 s'emmagatzema la imatge.</p> <p>Depenent d'aquest format la imatge ocupar\u00e0 m\u00e9s o menys espai, o es veur\u00e0 amb major o menor qualitat.</p> <p>Els formats m\u00e9s utilitzats per a imatges de mapes de bits s\u00f3n els seg\u00fcents:</p> <ul> <li>BitMap (*.bmp): \u00c9s un format de gran qualitat, la imatge s'emmagatzema sense p\u00e8rdua d'informaci\u00f3, per\u00f2 t'ocupar\u00e0 excessiu espai en disc. La soluci\u00f3 s\u00f3n els formats seg\u00fcents que sacrifiquen qualitat per disminuir l'espai que ocupen en disc.</li> <li>Graphic Interchange Format (.gif): Nom\u00e9s admet 8 bits (256 colors). Recomanat per a imatges planes, com poden ser logotips. Aquest format no \u00e9s aconsellable que l'utilitzis per a fotografies. La seva evoluci\u00f3 van ser els GIF animats utilitzats en els baners (anuncis publicitaris a internet).</li> <li>Joint Photograph Experts Group (.jpg): Usa 24bits (16M colors). Est\u00e0 recomanat per a fotografies, et permetr\u00e0 comprimir les imatges per\u00f2 tinc en compte que produeix p\u00e8rdues de qualitat, a m\u00e9s, distorsiona la imatge en fotografies planes.</li> <li>Portable Network Graphics (.png): Creat especialment per utilitzar-se a la Web. \u00c9s v\u00e0lid tant per a imatges planes com fotografies.Permet degradats i transpar\u00e8ncies a causa del seu alt grau de compressi\u00f3 sense p\u00e8rdua.</li> </ul> <p>Reflexiona</p> <p>T'has aturat a pensar alguna vegada si igual que el programari \u00e9s diferent per a les diferents plataformes, tamb\u00e9 ho puguin ser els formats d'imatges? Coneixes els formats que s'utilitzarien en un ordinador MAC?</p> <p>Els formats m\u00e9s utilitzats per a les imatges vectorials s\u00f3n els seg\u00fcents:</p> <ul> <li>Scalable Vector Graphics (.svg): S'utilitza per a vectors gr\u00e0fics escalables, \u00e9s un format molt recent per\u00f2 que pot ser usat f\u00e0cilment a Gimp.</li> <li>Windows Metafilea (.wmf): \u00c9s el format que millor s'adapta als diferents programes de dibuix.</li> </ul> <p>+ informaci\u00f3</p> <p>Els formats gr\u00e0fics comentats anteriorment s\u00f3n els m\u00e9s utilitzats, per\u00f2 n'hi ha molt m\u00e9s. Pots investigar sobre els diferents formats d'arxius de gr\u00e0fics.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#15transferencia-dimatges-a-lordinador","title":"1.5.Transfer\u00e8ncia d'imatges a l'ordinador.","text":"<p>La major part de les c\u00e0meres digitals es poden connectar directament a l'ordinador per transferir la seva informaci\u00f3. Antigament les c\u00e0meres havien de connectar-se a trav\u00e9s d'un port s\u00e8rie. L'USB \u00e9s el m\u00e8tode m\u00e9s utilitzat encara que algunes c\u00e0meres utilitzen un port FireWire o Bluetooth. La major part de les c\u00e0meres s\u00f3n reconegudes com una clau de mem\u00f2ria USB. Alguns models, per exemple la Kodak EasyShare One pot connectar-se a l'ordinador per xarxa sense fil pel protocol 802.11 (Wi-Fi).</p> <p>Una opci\u00f3 possible \u00e9s l'\u00fas d'un lector de targetes que pugui ser capa\u00e7 de llegir diversos tipus de mitjans d'emmagatzematge, aix\u00ed com efectuar la transfer\u00e8ncia de dades a l'ordinador a alta velocitat. L'\u00fas d'un lector de targetes tamb\u00e9 evita que la bateria de la c\u00e0mera fotogr\u00e0fica es descarregui durant el proc\u00e9s de la transfer\u00e8ncia directa, ja que el dispositiu pren energia del port USB.</p> <p>Un lector de targetes extern permet un adequat acc\u00e9s directe a les imatges en una col\u00b7lecci\u00f3 de mitjans d'emmagatzematge. Per\u00f2 si nom\u00e9s funciona amb una targeta d'emmagatzematge, pot ser inc\u00f2mode el despla\u00e7ament cap endavant i cap enrere entre la c\u00e0mera fotogr\u00e0fica i el lector. Moltes c\u00e0meres fotogr\u00e0fiques modernes ofereixen l'est\u00e0ndard de PictBridge, que permet l'enviament de dades directament a les impressores sense la necessitat d'un ordinador.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#2-lentorn-de-treball-gimp","title":"2. L'entorn de treball GIMP.","text":"<p>GIMP t\u00e9 moltes capacitats. Es pot fer servir com un senzill programa de pintura, un programa de retoc fotogr\u00e0fic professional, un sistema en l\u00ednia de proc\u00e9s per lots, un generador d'imatges per a producci\u00f3 en massa, un conversor de formats d'imatges, etc.</p> <p>GIMP \u00e9s ampliable i extensible. Est\u00e0 dissenyat per ampliar-se amb complements i extensions. La interf\u00edcie avan\u00e7ada de guionat (scripting) permet automatitzar des de les tasques m\u00e9s simples fins als procediments m\u00e9s complexos de manipulaci\u00f3 d'imatges.</p> <p>Un dels punts forts de GIMP \u00e9s la seva lliure disponibilitat des de diverses fonts per a molts sistemes operatius. Gaireb\u00e9 totes les distribucions de GNU/Linux inclouen el GIMP com una aplicaci\u00f3 est\u00e0ndard. GIMP tamb\u00e9 est\u00e0 disponible per a altres sistemes operatius com Microsoft Windows. GIMP \u00e9s una aplicaci\u00f3 de Programari Lliure coberta per la Llic\u00e8ncia P\u00fablica General (GPL). La GPL brinda als usuaris la llibertat d'accedir i modificar el codi font del qual es construeixen els programes.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#21-obrir-i-guardar-imatges-en-diferents-formats","title":"2.1. Obrir i guardar imatges en diferents formats.En quin format haur\u00e0s de guardar la imatge que acabes d'editar si la vols utilitzar a la nova web que est\u00e0s desenvolupant?","text":"<p>Quan vulguis obrir una imatge haur\u00e0s d'accedir al men\u00fa Arxiu i polsar en l'opci\u00f3 Obrir, t'apareixer\u00e0 una finestra com la seg\u00fcent:</p> <p></p> <p>La part inferior, en cas de no estar desplegada, haur\u00e0s de pulsar sobre el bot\u00f3 (+), on posa tipus d'arxiu. \u00c9s un filtre de tipus d'arxiu, perqu\u00e8 seleccionis el tipus d'arxiu que vulguis obrir, si et fixes, la primera opci\u00f3 \u00e9s de detecci\u00f3 autom\u00e0tic, per la qual cosa en un principi no t'haur\u00e0s de preocupar gaire d'aquesta opci\u00f3. La part superior de la finestra \u00e9s un navegador on podr\u00e0s seleccionar l'arxiu a obrir.</p> <p>La part superior de la finestra \u00e9s un navegador on podr\u00e0s seleccionar el directori on vols guardar la imatge. Quan necessitis guardar una imatge en un format determinat haur\u00e0s d'accedir a l'opci\u00f3 del men\u00fa Arxiu i polsar en l'opci\u00f3 Anomena i exporta, llavors t'apareixer\u00e0 una finestra com la seg\u00fcent:</p> <p></p> <p>Basta que escriguis l'extensi\u00f3 del tipus de fitxer que vols utilitzar. Aleshores, en funci\u00f3 del tipus d'arxiu seleccionat, apareixer\u00e0 una finestra diferent, on posar\u00e0s les dades referents a les caracter\u00edstiques d'aquest tipus d'arxiu que vols que guardi l'aplicaci\u00f3.</p> <p>+ informaci\u00f3</p> <p>Amb l'excepci\u00f3 del tipus d'arxiu nadiu XCF, la gesti\u00f3 de formats es realitza mitjan\u00e7ant complements, tamb\u00e9 anomenats plug-ins. En el seg\u00fcent enlla\u00e7 trobar\u00e0s les diferents opcions que proporciona GIMP per a cada tipus de format.</p> <p>Gesti\u00f3 Formats GIMP.</p> <p>GIMP permet guardar fotos en qualsevol tipus d'extensi\u00f3 gr\u00e0fica, per\u00f2 hi ha un format d'arxiu especial: XCF \u00e9s el format nadiu del GIMP, i \u00e9s \u00fatil perqu\u00e8 guarda tot el que hi ha en una imatge excepte la informaci\u00f3 de \"desfer\". Els arxius XCF no poden ser llegits per la majoria d'altres programes que mostren imatges, aix\u00ed que un cop hagis acabat, probablement tamb\u00e9 voldr\u00e0s guardar la imatge en un format usat m\u00e9s \u00e0mpliament, com JPEG, PNG, TIFF, etc.</p> Autoavaluaci\u00f3 <p> Test d'autoavaluaci\u00f3 .jpg .png .xcf </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#3-eines-basiques-del-gimp","title":"3. Eines b\u00e0siques del gimp","text":"<p>En el gimp una de les finestres m\u00e9s importants \u00e9s la caixa d'eines:</p> <p></p> <p>En general les eines (Men\u00fa Eines del GIMP) poden ser de cinc tipus:</p> <ul> <li>Eines de selecci\u00f3, que defineixen la part de la imatge que es veur\u00e0 afectada pels canvis que facis.</li> <li>Eines de pintura, que canviaran el color de certa part de la imatge.</li> <li>Eines de transformaci\u00f3, que variaran la geometria de la imatge.</li> <li>Eines de color, les que canviaran els colors de la imatge.</li> <li>Altres eines, que no s\u00f3n classificables en les categories anteriors.</li> </ul> <p>Pots disposar al teu gust les eines de la caixa d'eines emprant el di\u00e0leg Finestres \u2192 Di\u00e0legs empotrables \u2192 Eines. Hi ha dues raons perqu\u00e8 ho facis: primer, si rarament fas servir una eina, ser\u00e0 m\u00e9s f\u00e0cil trobar les que s\u00ed que fas servir treient la icona que no fas servir. Segon, si fas servir sovint les eines de color, \u00e9s convenient tenir les seves icones a la caixa perqu\u00e8 estiguin m\u00e9s accessibles. La majoria de les eines estan disponibles a la caixa d'eines, per\u00f2 a algunes nom\u00e9s podem accedir des dels men\u00fas. Tamb\u00e9 podem accedir a les eines amb les seves tecles acceleradores corresponents.</p> <p>Cada eina t\u00e9 el seu propi conjunt d'opcions. Els canvis que realitzis a les opcions es mantindran al llarg de la sessi\u00f3, fins que les tornis a canviar. En seleccionar qualsevol eina pots observar que apareixen, a la part de baix de la finestra, les opcions pr\u00f2pies d'aquesta eina concreta. D'aquesta manera, puguis modificar i ajustar els diferents par\u00e0metres, com per exemple l'opacitat, els pinzells, l'escala, les vores, l'enfocament, l'ajust i la sensibilitat.</p> <p>A la part inferior del di\u00e0leg d'opcions d'eines hi ha quatre botons. Amb ells podr\u00e0s guardar les opcions que has modificat, recuperar opcions que guardes en un altre moment, esborrar les opcions que hagis guardat anteriorment i tamb\u00e9 restaurar totes les opcions als valors predeterminats inicials.</p> <p>Les opcions d'eina apareixen sota la caixa d'eines en la configuraci\u00f3 per omissi\u00f3. Si la perds per algun motiu, pots restablir-la creant un nou di\u00e0leg d'opcions d'eina, escollint Finestra \u2192 Di\u00e0legs empotrables \u2192 Opcions d'eina, i despr\u00e9s encastant-lo sota la caixa d'eines.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#31-les-seleccions","title":"3.1. Les seleccions","text":"<p>Les eines de selecci\u00f3 et serviran per a\u00efllar una part de la imatge, de manera que puguis modificar-la, sense alterar-ne la resta.</p> <p>Podr\u00e0s fer qualsevol operaci\u00f3 sobre la part de la imatge que has a\u00efllat, com rotar-la, tallar-la, esborrar-la, etc. i tot aix\u00f2 ho far\u00e0s sense afectar el conjunt de la imatge, sin\u00f3 nom\u00e9s aquesta zona seleccionada.</p> <ul> <li>Selecci\u00f3 rectangular (Rectangle). Si vols que la selecci\u00f3 sigui quadrada, alhora que arrossegues el ratol\u00ed has de mantenir polsada la tecla Shift (Maj\u00fascules).</li> <li>Selecci\u00f3 el\u00b7l\u00edptica (Elipse). Si vols que la selecci\u00f3 sigui circular, alhora que arrossegues el ratol\u00ed has de mantenir polsada la tecla Shift (Maj\u00fascules).</li> <li>Selecci\u00f3 lliure (Lla\u00e7). Realitzar\u00e0s les seleccions amb el ratol\u00ed a m\u00e0 al\u00e7ada.</li> <li>Selecci\u00f3 difusa (Vareta m\u00e0gica). Selecciones regions cont\u00ednues amb els p\u00edxels del mateix color.</li> <li>Selecci\u00f3 per color (Dit selector). Selecciones totes les zones de la imatge amb el mateix color, encara que no siguin cont\u00ednues.</li> <li>Selecci\u00f3 per punts (Tisores intel\u00b7ligents). Amb les tisores ires creant punts a cada clic de ratol\u00ed i les l\u00ednies entre ells s'aniran ajustant a les l\u00ednies de color de la imatge. Has de fer coincidir l'\u00faltim punt amb el primer per tancar la selecci\u00f3.</li> <li>Selecci\u00f3 per corbes (corba B\u00e8zier). Si selecciones per corbes B\u00e8zier els punts de control van creant una ruta que despr\u00e9s podr\u00e0s manipular per fer-la coincidir amb la imatge. Un cop hagis acabat la ruta, per crear la selecci\u00f3 haur\u00e0s de fer clic al bot\u00f3 situat a les propietats de l'eina amb el text \"crear una selecci\u00f3 des de la ruta\".</li> </ul> <p>Cada vegada que selecciones una eina del quadre d'eines es modifica l'aspecte de la part inferior del quadre, on es troben les opcions de l'eina que en aquests moments tens entre mans.</p> <p>Cuando hagas una selecci\u00f3n, aparecer\u00e1n unas hormigas en tus im\u00e1genes que delimitan la parte seleccionada. Sin embargo, te ser\u00e1 \u00fatil saber que existe un Editor de Selecci\u00f3n, al que puedes acceder desde el men\u00fa Ventanas \u2192 Di\u00e1logos empotrables \u2192 Editor de selecci\u00f3n.</p> <p>Quan facis una selecci\u00f3, apareixeran unes \"formigues\" en les teves imatges que delimiten la part seleccionada. Tanmateix, et ser\u00e0 \u00fatil saber que existeix un Editor de Selecci\u00f3, al qual pots accedir des del men\u00fa Finestres \u2192 Di\u00e0legs empotrables \u2192 Editor de selecci\u00f3.</p> <p>En aquest Editor de Selecci\u00f3 tindr\u00e0s dos colors, el blanc, per a la part seleccionada, i el negre, per a la part no seleccionada.</p> <p>+ informaci\u00f3</p> <p>Pots seleccionar zones de la imatge d'una altra manera, mitjan\u00e7ant la m\u00e0scara r\u00e0pida. Quan activis la m\u00e0scara r\u00e0pida veur\u00e0s que el seleccionat queda de forma normal, mentre que la resta tindr\u00e0 una capa vermella a sobre. A continuaci\u00f3, podr\u00e0s ampliar els teus coneixements sobre la utilitzaci\u00f3 de la m\u00e0scara r\u00e0pida a GIMP.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#32-escalar-la-imatge","title":"3.2. Escalar la imatgeSi volgu\u00e9ssim engrandir una imatge mitjan\u00e7ant l'escalat d'imatge digital, quin m\u00e8tode d'interpolaci\u00f3 aplicaries per obtenir uns resultats mitjanament bons per\u00f2 amb un proc\u00e9s r\u00e0pid?","text":"<p>En algun moment et trobar\u00e0s amb la necessitat d'engrandir o empetitir una imatge, a aquesta acci\u00f3 se l'anomena escalat.</p> <p>L'escalat actua sobre la mida f\u00edsica de la imatge, de manera que aquesta passar\u00e0 a contenir m\u00e9s p\u00edxels en cas d'engrandir la imatge i menys p\u00edxels, en cas d'emp\u00e8nyer-la.</p> <p>Podr\u00e0s escalar una imatge, o escalar \u00fanicament una capa, en aquest \u00faltim cas, haur\u00e0s d'operar sobre l'opci\u00f3 escalar capa.</p> <p>Haur\u00e0s de tenir en compte que quan escales una imatge canviar\u00e0 el nombre de p\u00edxels, en definitiva, canviar\u00e0 la quantitat d'informaci\u00f3 que cont\u00e9 la imatge i aix\u00f2 afectar\u00e0 la mida f\u00edsica de l'arxiu.</p> <p>El proc\u00e9s que s'utilitzi per a aquesta sostracci\u00f3 o addici\u00f3 de p\u00edxels determinar\u00e0 la qualitat del resultat. A aquest proc\u00e9s se l'anomena interpolaci\u00f3. Es tracta d'un proc\u00e9s matem\u00e0tic per\u00f2 que en aquest cas s'aplica al tractament digital d'imatges. Tenim diversos m\u00e8todes disponibles per a la interpolaci\u00f3 del color dels p\u00edxels en una imatge escalada: Quan vulguis escalar la imatge, amb qualsevol programa de retoc fotogr\u00e0fic, el que ocorrer\u00e0 \u00e9s que es treuen alguns p\u00edxels o se n'afegiran alguns de nous.</p> <p></p> <ul> <li>Cap: No s'utilitza interpolaci\u00f3. Si vols engrandir la imatge, els p\u00edxels ampliaran la seva mida i si la vols reduir, alguns p\u00edxels s'eliminessin. Aquest m\u00e8tode et donar\u00e0 una baixa qualitat per\u00f2 \u00e9s molt r\u00e0pid.</li> <li>Lineal: Relativament r\u00e0pid, amb resultats discretament bons.</li> <li>C\u00fabica: Tindr\u00e0s millors resultats per\u00f2 tamb\u00e9 ser\u00e0 m\u00e9s lent.</li> </ul> <p>Quan vulguis canviar la mida de la impressi\u00f3, per\u00f2 sense escalar la imatge, haur\u00e0s de fer servir el quadre de di\u00e0leg que trobar\u00e0s a Imatge \u2192Tama\u00f1o de la impressi\u00f3.</p> <p>La mida de la impressi\u00f3 dep\u00e8n a m\u00e9s de la resoluci\u00f3 de la imatge, ja que determina quants p\u00edxels tindrem per polzada en el paper en el qual vam imprimir.</p> Autoavaluaci\u00f3 <p> Test d'autoavaluaci\u00f3 cap Linial C\u00fabic </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#33-modificacion-del-color","title":"3.3. Modificaci\u00f3n del color.","text":"<p>Quan cre\u00efs una imatge a GIMP, la podr\u00e0s crear en base als seg\u00fcents modes de color:</p> <ul> <li>RGB: Aquest mode de color treballa amb els colors vermell, blau i verd, i a partir d'aqu\u00ed barreja aquests colors per obtenir-ne uns de complementaris.</li> <li>Escala de grisos: Amb aquesta manera de color aconseguir\u00e0s una gamma de grisos, la qual, utilitza 8 bits de grisos.</li> <li>Color indexat: Amb aquesta manera de color crear\u00e0s una escala d'un o diversos colors.</li> <li>Per treballar amb el color a GIMP, et trobar\u00e0s amb paletes com les dels pintors. </li> </ul> <p>Existeixen diversos tipus per\u00f2 totes tenen elements comuns i zones espec\u00edfiques de cadascuna. L'espec\u00edfica de cada manera \u00e9s la que se situa en el quadrat de color, just sota les pestanyes d'acc\u00e9s al mode d'elecci\u00f3 de color. Els comuns s\u00f3n els seg\u00fcents:</p> <ul> <li>Pestanyes per accedir als altres tipus de paleta. Dalt a l'esquerra. (GIMP, impressi\u00f3, pinzell, triangle, i paleta activa en aquest ordre).</li> <li>Selecci\u00f3 de color per tonalitat, saturaci\u00f3 i brillantor (HSV).</li> <li>Selecci\u00f3 de color per la quantitat de cada color (RGB).</li> <li>Selecci\u00f3 de color pel valor hexadecimal.</li> </ul> <p>La paleta Gimp: Accedir\u00e0s a aquesta paleta per defecte, quan facis clic sobre l'opci\u00f3 Color de la caixa d'eines. Les diferents paletes que tenim a GIMP s\u00f3n les seg\u00fcents:</p> <p></p> <p>La paleta d'impressi\u00f3: A aquesta paleta (tamb\u00e9 anomenada CMYK) accedir\u00e0s fent clic al bot\u00f3 que t\u00e9 una impressora a la paleta GIMP. L'\u00fanica difer\u00e8ncia entre aquesta paleta i l'anterior \u00e9s que a la part esquerra, en comptes de sortir l'opci\u00f3 de saturaci\u00f3 de color, apareixen uns lliscants que et permetran variar la quantitat que vols donar-li a cada color. Paleta triangle: Aquesta paleta et mostrar\u00e0 el model HSV d'elecci\u00f3 de color. Hi accedir\u00e0s fent clic a l'arrel del triangle circumscrit en una circumfer\u00e8ncia, en lloc de l'opci\u00f3 de saturaci\u00f3 del color. Apareixer\u00e0 un triangle circumscrit en una circumfer\u00e8ncia. En la circumfer\u00e8ncia triar\u00e0s el color i en el triangle la saturaci\u00f3 i la brillantor. Paleta aquarel\u00b7la: Accedir\u00e0s fent clic a la icona del pinzell, aquesta paleta et permetr\u00e0 accedir a una gran varietat de colors barrejats entre si. Paleta activa: Accedir\u00e0s fent clic al bot\u00f3 amb un dit sobre una paleta de colors, amb aquesta paleta podr\u00e0s triar entre 256 colors diferents, per\u00f2 a la predeterminada nom\u00e9s podr\u00e0s accedir a 23.</p> <p>+ informaci\u00f3</p> <p>El canal alfa \u00e9s un valor amb el qual podr\u00e0s mesurar el grau de transpar\u00e8ncia de la imatge. El valor oscil\u00b7la entre 0 i 255, \u00e9s a dir, entre totalment transparent i totalment visible.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#34ajustar-la-brillantor-i-el-contrast","title":"3.4.Ajustar la brillantor i el contrast.Quina de les seg\u00fcents afirmacions \u00e9s correcta?","text":"<p>En m\u00e9s d'una ocasi\u00f3 necessitar\u00e0s ajustar la brillantor i/o el contrast d'una de les teves imatges digitals. Aquest filtre et permetr\u00e0 corregir irregularitats en imatges clares o fosques, aix\u00ed com, real\u00e7ar-los colors de les mateixes mitjan\u00e7ant el contrast.</p> <p>Amb la brillantor, podr\u00e0s regular la quantitat de llum de la imatge, si la fotografia ha quedat massa clara o massa fosca, podr\u00e0s millorar la qualitat amb la modificaci\u00f3 d'aquest par\u00e0metre.</p> <p>Amb el contrast, podr\u00e0s regular la difer\u00e8ncia de tons de color entre les diferents parts de la imatge, si veus que la fotografia que has tret amb la teva c\u00e0mera digital no distingeix correctament els colors, podr\u00e0s millorar la qualitat de la teva imatge, mitjan\u00e7ant la variaci\u00f3 d'aquest par\u00e0metre.</p> <p>Podr\u00e0s trobar aquest filtre a GIMP accedint-hi des del men\u00fa Colors \u2192 Brillo i contrast.</p> <ul> <li>Lliscant brillantor: Podr\u00e0s seleccionar per a la brillantor un valor negatiu (m\u00e9s fosc) o positiu (m\u00e9s clar), variant la brillantor de les tonalitats.</li> <li>Lliscant contrast: podr\u00e0s seleccionar per al contrast un valor negatiu (rebaixa) o positiu (incrementa).</li> <li>Vista pr\u00e8via: aquesta imatge presenta l'actualitzaci\u00f3 din\u00e0mica de l'original. Si la casella est\u00e0 marcada, els canvis es veuen immediatament.</li> </ul> <p>Un acc\u00e9s r\u00e0pid per a la brillantor i el contrast: si fas clic a la imatge, i arrossegues el ratol\u00ed amb el bot\u00f3 esquerre polsat verticalment modifiques la brillantor, si fas el mateix horitzontalment modifiques el contrast. Hi ha altres dues eines en el men\u00fa Colors que s\u00f3n Nivells... i Corbes... que permeten fer el mateix tipus d'ajustos, i podr\u00e0s tractar els colors brillants i els foscos, de manera independent.</p> Autoavaluaci\u00f3 <p> Test d'autoavaluaci\u00f3 Si fas clic a la imatge i arrossegues el ratol\u00ed amb el bot\u00f3 esquerre polsat verticalment, modifiques la brillantor. Si fas clic a la imatge i arrossegues el ratol\u00ed amb el bot\u00f3 dret polsat verticalment, modifiques la brillantor. Si fas clic a la imatge i arrossegues el ratol\u00ed amb el bot\u00f3 esquerre polsat horitzontalment. Modifiques la brillantor. Si fas clic a la imatge i arrossegues el ratol\u00ed amb el bot\u00f3 esquerre polsat verticalment, modifiques el contrast. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT6_tractamentimatgedigital.html#35-balance-de-color","title":"3.5.- Balance de color.","text":"<p>Aquest \u00e9s el filtre perfecte per corregir tints de color tant a la llum, com als tons mitjans i les ombres de manera independent entre si, i entre cadascun dels diferents canals de color. Aix\u00f2 permet augmentar i disminuir la pres\u00e8ncia de cada color en la imatge. T'haur\u00e0 ocorregut alguna vegada que en descarregar una fotografia presa amb la teva c\u00e0mera digital, per alguna ra\u00f3, es veu com si estigu\u00e9s tintada per algun dels colors primaris RGB (recorda que en imatge digital canviem el groc pel verd), aix\u00f2 t\u00e9 soluci\u00f3 mitjan\u00e7ant el filtre de balan\u00e7 de color.</p> <p>Podr\u00e0s modificar aquesta imatge amb l'opci\u00f3 de GIMP que trobar\u00e0s a Colors \u2192 Balan\u00e7 de color.</p> <p></p> <p>Les opcions que trobar\u00e0s en aquest quadre de di\u00e0leg s\u00f3n les seg\u00fcents:</p> <ul> <li>Seleccioni el rang a modificar: Seleccionant una de les opcions restringir\u00e0s el rang de colors que seran modificats amb els lliscadors i amb les caselles d'ombres, tons mitjans i punts de llum. </li> <li>** Ajustar els nivells de color**:Els lliscats i les caselles et permetran seleccionar el valor del color en el rang seleccionat.</li> <li>Conservar la lluminositat: con esta opci\u00f3n podr\u00e1s conservar el brillo de la capa activa o selecci\u00f3n. </li> <li>Reiniciar el rang: Amb aquest bot\u00f3 reiniciar\u00e0s a zero els nivells de color en el rang seleccionat.</li> <li>Vista pr\u00e8via: Aquesta imatge presenta l'actualitzaci\u00f3 din\u00e0mica de l'original. Si la casella est\u00e0 marcada, els canvis es veuen immediatament.</li> </ul> <p> </p> <p>En les imatges just a dalt podr\u00e0s comprovar el canvi realitzat en la fotografia en modificar els valors de color. La imatge de l'illa de la part de dalt \u00e9s l'original, sobre la qual vas a realitzar les modificacions del balan\u00e7 de color. La imatge de l' illa de la part inferior, \u00e9s sobre la qual haur\u00e0s realitzat les modificacions. En aquesta \u00faltima, haur\u00e0s seleccionat la part de la poma i sobre aquesta selecci\u00f3 haur\u00e0s augmentat la influ\u00e8ncia del verd i disminu\u00eftl a influ\u00e8ncia del vermell i el blau. Podr\u00e0 oc\u00f3rrer tamb\u00e9 que necessitis en algun moment una imatge determinada, per\u00f2 nom\u00e9s en trobis alguna de semblant. Fixeu-te a la teva poma, \u00e9s una illa de color groc, per\u00f2 tu necessites una poma de color verd. Per canviar-la, pots utilitzar l'eina de balan\u00e7 de color per convertir aquesta mateixa imatge de la poma groga, en una poma verda.</p> <p>Reflexiona</p> <p>Moltes vegades les fotografies que obtens amb la teva c\u00e0mera digital, tendeixen a temptar-se per la pres\u00e8ncia de males il\u00b7luminacions en les estances en qu\u00e8 les fotografies estan realitzades. Podr\u00e0s arreglar aquests desperfectes amb el \"Balan\u00e7 de color\".</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html","title":"Gesti\u00f3 de correu i agenda electr\u00f2nica","text":"<p>Ara com ara poca cosa es pot dir en l'\u00e0mbit introductori sobre el correu electr\u00f2nic. Qui m\u00e9s qui menys t\u00e9, com a m\u00ednim, un compte de correu electr\u00f2nic i, per tant, podr\u00edem dir que ja \u00e9s un sistema conegut i amplement utilitzat. Malgrat aix\u00f2, en aquesta unitat intentarem explicar detalls dels sistemes de correu electr\u00f2nic que, ben segur, no s\u00f3n tan populars.</p> <p>Els sistemes (client) de correu electr\u00f2nic m\u00e9s populars s\u00f3n els anomenats \"webmail\". S\u00f3n aquells que s\u00f3n accessibles a trav\u00e9s d'una p\u00e0gina web. En aquesta p\u00e0gina podrem llegir, esborrar i contestar els correus. No nom\u00e9s aix\u00f2 sin\u00f3 que tamb\u00e9, a trav\u00e9s d'aquesta p\u00e0gina podrem fer una gesti\u00f3 completa de totes les funcionalitats afegides que ens ofereixi el prove\u00efdor de correu. Sense oblidar tot all\u00f2 perif\u00e8ric al correu electr\u00f2nic com s\u00f3n calendaris, tasques o agenda de contactes, per mencionar-ne uns quants. </p> <p>Seguint aix\u00f2 que d\u00e8iem al par\u00e0graf anterior sobre els \"webmail\", quin no coneix o \u00e9s usuari de Gmail? o el \"reconvertit\" Outlook webmail. I \u00e9s que aquest tipus de clients s'han popularitzat molt\u00edssim, en gran part, per mor de la gran capacitat que ofereixen de forma gratu\u00efta, per\u00f2 tamb\u00e9 per la seva facilitat d'\u00fas.</p> <p>Malgrat tot el que hem dit, no podem parlar de correu electr\u00f2nic sense esmentar el Mozilla Thunderbird, client \"pesat\" de correu electr\u00f2nic, de codi lliure i gratu\u00eft. Per\u00f2 n'hi ha m\u00e9s.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#1-el-correu-electronic","title":"1.- El correu electr\u00f2nic.","text":"The noun project.svg (Domini p\u00fablic - WikiMedia Commons) <p>El correu electr\u00f2nic \u00e9s un servei de xarxa amb qu\u00e8 podr\u00e0s enviar i rebre missatges a trav\u00e9s d'Internet. Encara que originalment estava pensat per enviar missatges nom\u00e9s de text, el que \u00e9s cert \u00e9s que ja es va preveure la possibilitat de poder adjuntar fitxers de tota casta als missatges de correu.</p> <p>Per utilitzar el correu electr\u00f2nic necessitam tenir una adre\u00e7a. Aquesta adre\u00e7a, tal i succeeix amb l'adre\u00e7a del nostre domicili, permetr\u00e0 poder rebre missatges a les nostres b\u00fasties. Aquesta adre\u00e7a us ser\u00e0 subministrada per un prove\u00efdor. Cada adre\u00e7a \u00e9s \u00fanica i consta de dues parts separades pel s\u00edmbol \"@\" (arrova). La seva estructura ser\u00e0 similar a nomusuari@domini.terminacio. On nomusuari ser\u00e0 una combinaci\u00f3 de lletres, n\u00fameros i determinats s\u00edmbols (com _ o -), per\u00f2 que mai no contindr\u00e0 espais en blanc ni la majoria de car\u00e0cters especials. El domini.terminaci\u00f3 generalment far\u00e0 refer\u00e8ncia al prove\u00efdor que facilita el compte de correu, per exemple, \"gmail.com\". En el cas de les empreses, sol ser el domini d'internet que utilitza l'empresa en q\u00fcesti\u00f3. Per exemple iespolitecnic.cat</p> <p>\u2795 informaci\u00f3</p> <p>L'arrova (s\u00edmbol @) que en angl\u00e8s \u00e9s \"at\" precisament es refereix al fet de que l'adre\u00e7a de correu electr\u00f2nic, literalment es refereix a un nom d'usuari que el podrem trobar en (at en angl\u00e8s) un servidor concret o, habitualment,  en un domini d'internet.</p> <p>El s\u00edmbol @ va ser introdu\u00eft per Ray Tomlinson l'any 1971 a qui tamb\u00e9 li devem la idea del correu electr\u00f2nic.</p> <p>Molt recomanable \ud83d\udc4c llegir l'origen del correu electr\u00f2nic</p> Autoavaluaci\u00f3 <p> Test d'autoavaluaci\u00f3 Sobre Mozilla Thunderbird ... \u00c9s un programari de correu web. \u00c9s un client de correu electr\u00f2nic lliure i gratu\u00eft. \u00c9s un protocol de correu entrant. \u00c9s un protocol de correu sortint. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#11-correu-web","title":"1.1. Correu web","text":"Deans Icons (Domini p\u00fablic) <p>Els tipus de correu electr\u00f2nic que veur\u00e0s en aquesta unitat s\u00f3n dos:</p> <ul> <li>El correu web, els principals inconvenients dels quals eren la manca d'espai per emmagatzemar missatges i la manca d'aplicacions paral\u00b7leles com un gestor de tasques, un calendari, etc. Tot aix\u00f2 s'ha solucionat i ara ja no \u00e9s un inconvenient.</li> <li>El client de correu, per al qual cal establir uns protocols de comunicaci\u00f3, dels quals n'hi ha dos tipus. Un per al correu entrant, el que es rep, i un altre per al sortint, el que s'envia. Els m\u00e9s comuns s\u00f3n el POP3 i IMAP4, per al correu entrant, i SMTP per al sortint.</li> </ul> <p>La utilitzaci\u00f3 d'un client de correu electr\u00f2nic al vostre equip t\u00e9 avantatges ja que us permet descarregar i emmagatzemar tots els missatges, organitzar-los i revisar-los sense necessitat d'estar constantment connectat. Per\u00f2 hi ha una circumst\u00e0ncia clau que actua contra aquest tipus de programes: la mobilitat.</p> <p>Per consultar el correu als clients de correu has de configurar el programa i, si et trasllades, hauries de fer c\u00f2pies de les carpetes de correu i les llibretes d'adreces per poder-les portar a altres ordinadors. Davant d'aquestes situacions, el correu web presenta avantatges:</p> <ul> <li>No depens del programa gestor de correu, n'hi ha prou amb un simple navegador.</li> <li>No necessites configurar res, nom\u00e9s cal recordar el teu nom d'usuari i la teva contrasenya.</li> <li>Pots consultar-ho des de qualsevol lloc ja que els missatges romanen al servidor.</li> </ul> <p>A la part negativa pots considerar:</p> <ul> <li>Cal que estiguis connectat per consultar i respondre el correu.</li> <li>L'espai d'emmagatzematge pot ser limitat, cosa que us obligar\u00e0 a eliminar missatges. Aquesta limitaci\u00f3 es pot considerar que ha desaparegut ja que la majoria dels grans prove\u00efdors han habilitat serveis amb espais de gran mida.</li> </ul> <p>Cadascun dels servidors us oferir\u00e0 una interf\u00edcie gr\u00e0fica m\u00e9s o menys usable i algun servei especial per\u00f2, b\u00e0sicament, us ofereixen prestacions similars.</p> <p>\u2795 informaci\u00f3</p> <p>Actualment hi el WebMail \u00e9s molt popular. Seria estrany que no tingu\u00e9ssiu un compte de correu a gmail, outlook.com o yahoo mail. De fet, el percentatge aproximat d'usuaris de sistemes de webmail enfront als qui utilitzen programari client (Outlook, Thunderbird, Apple Mail, etc) \u00e9s d'un 80-90% contra 10-20%.</p> <p>Tend\u00e8ncia:</p> <p>El webmail domina clarament en l'\u00fas personal, mentre que en entorns corporatius encara es mant\u00e9 cert \u00fas de clients instal\u00b7lats (per exemple, amb Exchange).</p> <p>L'auge dels smartphones ha afavorit encara m\u00e9s el webmail i les apps m\u00f2bils, ja que clients com Thunderbird s\u00f3n gaireb\u00e9 inexistents en m\u00f2bils.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#12-programaris-gestors-de-correu-electronic","title":"1.2. Programaris gestors de correu electr\u00f2nicTest d'autoavaluaci\u00f3Quina de les afirmacions seg\u00fcents \u00e9s correcta?","text":"<p>Tot i que ja hem vist que la difer\u00e8ncia referent al tipus de client de correu emprat \u00e9s molt gran a favor del webmail, \u00e9s important que conegueu els principals programaris gestors de correu electr\u00f2nic i sobretot, els elements que possibiliten el seu funcionament. En realitat, els elements o mecanismes que utilitzen aquests programaris no s\u00f3n exclusius per aquest tipus de gestors, sin\u00f3 que tamb\u00e9 s'utilitzen (i s\u00f3n necessaris) en un webmail, per\u00f2 en un webmail no som conscients del seu \u00fas.</p> <p>Perqu\u00e8 el teu ordinador es relacioni amb els servidors de correu ha d'establir protocols de comunicaci\u00f3. Hi ha dos tipus de protocols:</p> <ul> <li>Protocol de correu entrant, \u00e9s el que es rep: POP3 (Post Office Protocol Versi\u00f3 3) i IMAP4 (Internet Message Access Protocol Versi\u00f3 4)</li> <li>Protocol de correu sortint, \u00e9s el que s'envia: SMTP (Simple Mail Transfer Protocol)</li> </ul> <p>Els veiem cadascun a continuaci\u00f3:</p> <ul> <li>POP3 va ser el primer est\u00e0ndard de correu electr\u00f2nic d'Internet i \u00e9s un dels m\u00e9s utilitzats actualment. En aquest protocol els missatges queden en espera al servidor fins que el teu ordinador es connecti i els recuperi. Els programes gestors de correu electr\u00f2nic et permetran connectar-te al servidor, agafar els missatges i filtrar-los i finalment ordenar-los per diversos criteris.</li> <li>IMAP4 \u00e9s un protocol m\u00e9s avan\u00e7at, us permet treballar amb el correu electr\u00f2nic al servidor com si fos en una xarxa d'\u00e0rea local. IMAP proporciona les mateixes funcions que POP per\u00f2 poden filtrar, ordenar i organitzar els missatges al servidor, sense necessitat de descarregar-los al teu ordinador.</li> <li>SMTP es basa en el model client servidor. D'aquesta manera la comunicaci\u00f3 entre el client i el servidor consisteix totalment en l\u00ednies de text compostes per car\u00e0cters, encara que al missatge es poden adjuntar tota mena de fitxers. Els missatges es poden acumular al vostre ordinador i ser enviats quan s'estableix la connexi\u00f3.</li> </ul> <p>Els clients de correu m\u00e9s utilitzats en l'actualitzaci\u00f3 s\u00f3n: Microsoft Outlook i Mozilla Thunderbird.</p> <p>Amb un gestor de correu electr\u00f2nic podr\u00e0s treballar amb diferents comptes de correu electr\u00f2nic alhora. Podr\u00e0s configurar diversos comptes de correu electr\u00f2nic i extreure els correus electr\u00f2nics dels seus corresponents servidors mitjan\u00e7ant POP3. No tindr\u00e0s necessitat d'accedir a la interf\u00edcie web de qu\u00e8 et subministra cada prove\u00efdor de correu electr\u00f2nic.</p> <p>Hi ha diferents gestors de correu electr\u00f2nic de manera que podr\u00e0s utilitzar el que millor s'adapti a les teves necessitats. En aquesta unitat et centrar\u00e0s al Mozilla Thunderbird.</p> <p>El correu electr\u00f2nic funciona de la manera seg\u00fcent:</p> <p>1-. Quan l'usuari envia un missatge de correu, aquest missatge es dirigeix a la b\u00fastia de correu del prove\u00efdor d'Internet.</p> <p>2.- Aquest ho emmagatzema i el reenvia al servidor de correu del destinatari, on es guarda.</p> <p>3.- Quan el destinatari sol\u00b7licita els seus missatges, el servidor del prove\u00efdor se'ls envia.</p> <p>\u2795 informaci\u00f3</p> <p></p> Autoavaluaci\u00f3 <p> POP3 \u00e9s un protocol de correu sortint que permet enviar correus a altres clients de correu electr\u00f2nic. Al protocol POP3 els missatges queden en espera al servidor fins que el teu ordinador es connecti i els agafi. Al protocol SMTP els missatges queden en espera al servidor fins que el vostre ordinador es connecti i els agafi. IMAP4 \u00e9s un protocol de correu sortint. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#13-el-client-de-correu-electronic","title":"1.3. El client de correu electr\u00f2nic","text":"<p>Ja saps que un client de correu electr\u00f2nic, \u00e9s un programa d'ordinador utilitzat per llegir i enviar correus electr\u00f2nics. Al principi els clients de correu electr\u00f2nic van ser pensats com a programes simples per llegir els missatges del correu d'usuari.</p> <p>Amb el pas del temps aquest tipus de programes han anat afegint funcionalitats com la llibreta d'adreces, el calendari, el diari, el gestor de tasques, etc. Ha passat a convertir-se en aplicacions molt completes que us ajudaran a organitzar-vos en el dia a dia. De fet, fins i tot es podria afirmar que ha esdevingut una eina imprescindible per a qualsevol empresa.</p> <p>Mozilla Thunderbird \u00e9s un client de correu gratu\u00eft i de codi obert. Aquest client de correu ser\u00e0 el que aprendr\u00e0s a instal\u00b7lar, configurar i administrar en aquesta unitat.</p> <p>Per instal\u00b7lar-lo primer haur\u00e0s de descarregar-lo des de la seva p\u00e0gina web. Un cop descarregat, la instal\u00b7laci\u00f3 \u00e9s senzilla, nom\u00e9s cal que executeu el programa d'instal\u00b7laci\u00f3 i accepteu les opcions que us ofereix.</p> <p>Haur\u00e0s de seleccionar el directori del disc dur on el vulguis instal\u00b7lar. Et preguntar\u00e0 si vols instal\u00b7lar-lo de manera personalitzada, o la versi\u00f3 est\u00e0ndard. A m\u00e9s, et preguntar\u00e0 si vols establir-ho com a la teva aplicaci\u00f3 de correu per defecte.</p> <p>Un cop instal\u00b7lat apareixer\u00e0 al teu escriptori la icona de Mozilla Thunderbird, fent doble clic sobre ell comen\u00e7ar\u00e0 a executar-se el programa.</p> <p>El client de correu electr\u00f2nic amb el pas del temps i la tecnologia s'ha convertit en alguna cosa m\u00e9s que un simple programa per a la recepci\u00f3 i l'enviament de correu electr\u00f2nic. El Mozilla Thunderbird, mitjan\u00e7ant una s\u00e8rie de complements que us podeu instal\u00b7lar, es podr\u00e0 convertir en un complet gestor de tasques, de contactes, planificador diari, etc.</p> <p>El competidor de pagament (encara que ja est\u00e0 disponible una versi\u00f3 redu\u00efda i gratuita) de Mozilla Thunderbird, ja saps que \u00e9s el Microsoft Outlook, aquest darrer ja t\u00e9 incorporades per defecte les funcionalitats de l'agenda i el calendari. Tot i aix\u00f2, a Mozilla Thunderbird haur\u00e0s d'afegir els complements necessaris per poder gaudir d'aquestes funcionalitats.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#14-configuracio-de-comptes","title":"1.4. Configuraci\u00f3 de comptes","text":"<p>Un cop executat el Mozilla Thunderbird us demanar\u00e0 que configureu un compte de correu electr\u00f2nic. Ara cal que tinguis a m\u00e0 les dades d'un compte de correu electr\u00f2nic que tinguis. Aquestes dades te les ha d'haver proporcionat (directa o indirectament el teu prove\u00efdor).</p> <p>Concretament necessitar\u00e0s el nom del compte i la seva contrasenya. A no ser que sigui un compte de correu electr\u00f2nic d'un prove\u00efdor molt especial, el Thunderbird detectar\u00e0 autom\u00e0ticament els par\u00e0metres de configuraci\u00f3 dels servidors de correu entrant i sorting.</p> <p>Pensa que si vols accedir al teu correu des de diferents \"llocs\", aleshores has de fer una configuraci\u00f3 utilitzant IMAP4.</p> <p>Exercici</p> <p>Fes la configuraci\u00f3 del Thunderbird amb un compte de correu que tinguis. Si tens dubtes o no disposes de cap compte de correu electr\u00f2nic (a part del que t'ha proporcionat l'institut), digues-li al teu professor.</p> <p>Exercici</p> <p>Fes una presentaci\u00f3 utilitzant Prezi on expliquis el funcionament del correu electr\u00f2nic.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#15-enviar-i-rebre-correus-amb-gmail","title":"1.5. Enviar i rebre correus amb GmailQuin dels camps seg\u00fcents no pertany a un correu electr\u00f2nic?Quants segons tens per desfer l'enviament d'un correu despr\u00e9s de clicar \"Enviar\"?Quina tecla de drecera et permet respondre a un correu sense obrir-lo completament?Quina opci\u00f3 no est\u00e0 disponible en reenviar un correu?On es troba l'opci\u00f3 per programar un correu a Gmail?Qu\u00e8 has de fer abans d'enviar un correu des d'un \u00e0lies?Quina caracter\u00edstica no ofereix el mode confidencial de Gmail?Quina funci\u00f3 t\u00e9 la Redacci\u00f3 intel\u00b7ligent?Com es sol\u00b7licita una confirmaci\u00f3 de lectura a Gmail?Quina eina de Google s'utilitza per enviar correus massius personalitzats?On es guarden les plantilles creades a Gmail?","text":"<p>A continuaci\u00f3 trobareu informaci\u00f3 de les principals funcionalitats relacionades amb enviar i rebre correus electr\u00f2nics. Encara que est\u00e0 centrat amb Gmail, la resta de prove\u00efdors tenen funcionalitats equivalents.</p> Enviar i rebre correus amb Gmail i una mica m\u00e9s Autoavaluaci\u00f3 <p> Assumpte T\u00edtol Text C\u00f2pia de carb\u00f3 oculta 5 segons 30 segons 4 minut Tecla \"R\" Tecla \"F\" Tecla \"Enter\" Afegir nous destinataris Eliminar l'historial del missatge original Modificar el text del missatge A la pestanya \"Arxiva\" Al desplegable del bot\u00f3 \"Enviar\" A Configuraci\u00f3 \u2192 \"Enviaments pendents\" Verificar l'adre\u00e7a alterna a Configuraci\u00f3 \u2192 \"Enviar com\" Demandar perm\u00eds a Google No cal fer res, es pot fer directament Data de caducitat del correu Encriptaci\u00f3 de punt a punt Impedir reenviament/c\u00f2pia Suggereix frases completes mentre escrius Corregir errors gramaticals autom\u00e0ticament Traduir el correu a un altre idioma Activant-ho a Configuraci\u00f3 \u2192 \"Sol\u00b7licitar confirmaci\u00f3 de lectura\" Afegint \"CONFIRMACI\u00d3\" a l'assumpte Gmail no ofereix aquesta funci\u00f3 Google Sheets + Complement \"Yet Another Mail Merge\" Google Docs Google Forms A la carpeta \"Esborranys\" A Configuraci\u00f3 \u2192 \"Plantilles\" Al Drive </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#escriure-un-correu-electronic-amb-gmail","title":"Escriure un correu electr\u00f2nic amb Gmail","text":"<ul> <li>Enviar o desfer l'enviament de missatges de Gmail</li> <li>Respondre a missatges a Gmail</li> <li>Reenviar un correu electr\u00f2nic</li> <li>Programar correus electr\u00f2nics per enviar-los</li> <li>Enviar correus electr\u00f2nics des d'una altra adre\u00e7a o des d'un altre \u00e0lies</li> <li>Enviar i obrir correus electr\u00f2nics confidencials</li> <li>Utilitzar la funci\u00f3 Redacci\u00f3 intel\u00b7ligent a Gmail</li> <li>Donar format als missatges</li> <li>Respondre a correus electr\u00f2nics utilitzant reaccions amb emojis</li> <li>Programar esdeveniments a Gmail</li> <li>Crear una plantilla a Gmail</li> <li>Utilitzar Documents de Google per redactar correus electr\u00f2nics</li> <li>Corregir l'ortografia i la gram\u00e0tica a mesura que s'escriu a Gmail</li> <li>Sol\u00b7licitar o tornar una confirmaci\u00f3 de lectura</li> <li>Enviar correus electr\u00f2nics personalitzats amb la combinaci\u00f3 de correus</li> <li>Crea correus electr\u00f2nics de marca -tipus corporatiu- amb dissenys personalitzats</li> <li>Obtenir informaci\u00f3 sobre les pr\u00e0ctiques recomanades per a correus electr\u00f2nics massius</li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#16-organitzar-el-correu","title":"1.6. Organitzar el correu","text":"<p>Tant si utilitzam webmail com client de correu, es molt convenient organitzar el correu de forma addient. De la mateixa manera que quan obrim el nostre armari i cercam la nostra camisa preferida, sabem exactament on la trobarem (o aix\u00ed hauria de ser), amb el correu electr\u00f2nic hauria de ser el mateix. Per exemple: on pots trobar tots els correu relacionat amb el m\u00f2dul d'aplicacions ofim\u00e0tiques? Segur que estau pensant en fer una cerca amb el camp corresponent (si es que existeix), i efectivament seria una bona opci\u00f3 per\u00f2 no \u00e9s la m\u00e9s recomanable. El m\u00e9s recomanable \u00e9s crear tantes carpetes i subcarpetes com hagis de menester.</p> <p>Per defecte sempre solem tenir les seg\u00fcents carpetes:</p> <ul> <li>Safata d'entrada: S'hi emmagatzemaran els correus electr\u00f2nics que vagis rebent.</li> <li>Esborranys: De tots els correus electr\u00f2nics que escriguis, se n'anir\u00e0 guardant una c\u00f2pia en aquesta carpeta, a m\u00e9s de fer-ho a la carpeta Enviats.</li> <li>Enviats: Guarda una c\u00f2pia de tots els correus electr\u00f2nics que envi\u00efs.</li> <li>Tots: En aquesta carpeta tindr\u00e0s una c\u00f2pia de tots els correus electr\u00f2nics, tant dels que envi\u00efs, com dels que rebis.</li> <li>Correu brossa: Aquesta carpeta servir\u00e0 per emmagatzemar tot aquell correu electr\u00f2nic susceptible de ser qualificat com a correu no desitjat.</li> <li>Paperera: En aquesta carpeta s'emmagatzemen tots els correus electr\u00f2nics que esborris. Quan els esborris d'aquesta carpeta, desapareixeran per sempre.</li> <li>Destacat: en aquesta carpeta apareixeran els missatges marcats com a destacats.</li> <li>Important: en aquesta carpeta s'emmagatzemaran els missatges qualificats com a importants.</li> </ul> <p>Per\u00f2 com hem comentat abans, el m\u00e9s recomanable ser\u00e0 crear carpetes o subcarpetes a partir de les que ja tenim. Per exemple: \"Safata d'entrada -&gt; AOF\" i all\u00e0 anar movent tots els correus que arribin i estiguin relacionats amb el m\u00f2dul AOF.</p> <p>De vegades, per\u00f2, tindrem situacions on un determinat correu electr\u00f2nic podria estar situat en dues carpetes a la vegada. M\u00e9s que rec\u00f3rrer a crear duplicats per ubicar-los a les diferents carpetes relacionades, podem trobar (encara que no en tots els productes) les anomenades etiquetes o categories que ens permetran etiquetar un correu electr\u00f2nic dins diferents categories o etiquetes.</p> <p>Un pot pensar que haver de fer aix\u00f2 manualment \u00e9s molt tedi\u00f3s i ens ocupa massa temps. Per mitigar aix\u00f2 podrem crear regles o filtres de correu. Les regles o filtres de missatges us permetran realitzar accions autom\u00e0tiques amb els missatges. Amb les regles podr\u00e0s fer que el client de correu analitzi els missatges entrants i, en funci\u00f3 d'unes condicions que pots personalitzar, prendre decisions sobre qu\u00e8 s'ha de fer amb aquests missatges. </p> \u2795 informaci\u00f3 sobre els filtres amb Gmail"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#crear-regles-per-filtrar-els-correus-electronics","title":"Crear regles per filtrar els correus electr\u00f2nics","text":"<p>A l'ordinador, podeu gestionar el correu entrant amb els filtres de Gmail, que permeten enviar missatges a una etiqueta, aix\u00ed com arxivar-los o reenviar-los autom\u00e0ticament.</p>  Crear un filtre Utilitzar un missatge concret per crear un filtre Editar o suprimir filtres Exportar o importar filtres <ol> <li>Obriu Gmail.</li> <li>Al quadre de cerca de la part superior, feu clic a Mostra les opcions de cerca  .</li> <li>Introdu\u00efu els criteris de cerca. Per comprovar si tornen els resultats que voleu, feu clic a Cerca i mireu quins correus electr\u00f2nics es mostren.</li> <li>A la part inferior de la finestra de cerca, feu clic a Crea un filtre.</li> <li>Trieu les opcions que vulgueu per al filtre.</li> <li>Feu clic a Crea un filtre.</li> </ol> <p>Nota: si creeu un filtre per reenviar missatges, nom\u00e9s afectar\u00e0 els missatges nous. A m\u00e9s, quan alg\u00fa respongui a un missatge que h\u00e0giu filtrat, la resposta nom\u00e9s es filtrar\u00e0 si compleix els mateixos criteris de cerca.</p> <ol> <li>Obriu Gmail.</li> <li>Marqueu la casella de selecci\u00f3 del missatge electr\u00f2nic que vulgueu.</li> <li>Feu clic a M\u00e9s .</li> <li>Feu clic a Filtra els missatges com aquest.</li> <li>Introdu\u00efu els criteris del filtre.</li> <li>Feu clic a Crea un filtre.</li> </ol> <ol> <li>Obriu Gmail.</li> <li>A la part superior dreta, feu clic a Configuraci\u00f3   Mostra tota la configuraci\u00f3.</li> <li>Feu clic a Filtres i adreces bloquejades.</li> <li>Localitzeu el filtre que voleu canviar.</li> <li>Feu clic a Edita o a Suprimeix. Quan acabeu d'editar el filtre, feu clic a Continua.</li> <li>Feu clic a Actualitza el filtre o a D'acord.</li> </ol> <p>Si teniu una c\u00f2pia de seguretat dels filtres, podeu importar-los a Gmail. Tamb\u00e9 podeu exportar els filtres.</p> <ol> <li>Obriu Gmail.</li> <li>A la part superior dreta, feu clic a Configuraci\u00f3   Mostra tota la configuraci\u00f3.</li> <li>Feu clic a Filtres i adreces bloquejades.</li> <li>Marqueu la casella del filtre corresponent.</li> </ol> Importar un filtreExportar un filtre <ol> <li>A la part inferior de la p\u00e0gina, feu clic a Importa filtres.</li> <li>Trieu el fitxer que inclou el filtre que voleu importar.</li> <li>Feu clic a Obre el fitxer.</li> <li>Feu clic a Crea els filtres.</li> </ol> <ol> <li>A la part inferior de la p\u00e0gina, feu clic a Exporta.</li> <li>Es crear\u00e0 un fitxer .xml que podreu modificar en un editor de text, si voleu.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#2-creacio-de-signatures-i-plantilles-de-correu","title":"2. Creaci\u00f3 de signatures i plantilles de correu","text":"<p>Ja heu comprovat que l'enviament i la recepci\u00f3 de correus electr\u00f2nics, una vegada heu configurat al client de correu el vostre compte de correu electr\u00f2nic, \u00e9s f\u00e0cil i r\u00e0pida.</p> <p>Hi ha eines que permetran que els vostres correus electr\u00f2nics estiguin m\u00e9s personalitzats. Ja saps que tan bon punt envies un correu electr\u00f2nic, aquest porta el teu nom i la teva adre\u00e7a de correu electr\u00f2nic. Per\u00f2, de vegades, cal afegir m\u00e9s informaci\u00f3 de contacte al correu electr\u00f2nic, i personalitzar-los amb altres elements gr\u00e0fics.</p> <p>Si per exemple vols que els teus missatges incloguin per defecte unes dades de contacte que serveixin com negoci, podeu indicar-ho a la configuraci\u00f3 del compte. D'aquesta manera podeu afegir un text que sempre anir\u00e0, per defecte, signant tots els correus electr\u00f2nics que envieu.</p> <p>Si el que vols \u00e9s adornar el teu correu electr\u00f2nic amb fons, peus de p\u00e0gina, logotips i formats, el que pots fer \u00e9s crear-ne una plantilla de correu electr\u00f2nic, on puguis inserir, per exemple, la imatge del teu logotip. Tot aix\u00f2 ho haur\u00e0s de fer en format HTML (HyperText Markup Language) ja que amb un format de correu electr\u00f2nic tradicional en text pla, no podr\u00e0s incloure res del que hem esmentat anteriorment.</p> Autoavaluaci\u00f3 <p> Quina \u00e9s la funcionalitat de la plantilla de correu? Poder inserir el logotip de la teva empresa al correu electr\u00f2nic. Enriquir el teu correu electr\u00f2nic amb fons, peus de p\u00e0gina, logotips i formats. Incloure per defecte unes dades de contacte. Afegir m\u00e9s informaci\u00f3 de contacte al correu electr\u00f2nic, i personalitzar-los amb altres elements gr\u00e0fics. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#21-firma-o-signatura","title":"2.1. Firma o signatura","text":"<p>La signatura d'un correu electr\u00f2nic \u00e9s un text que podeu afegir al final dels missatges de correu. Aquest text cont\u00e9 les dades del remitent, una salutaci\u00f3 o algun altre tipus d'informaci\u00f3.</p> Signatura amb ThunderbirdSignatura amb Gmail <p>Amb Mozilla Thunderbird pots establir la teva signatura de forma f\u00e0cil, per\u00f2 has de tenir en compte que cada signatura va associada a un compte, per tant haur\u00e0s de definir signatures diferents per a cada compte que utilitzis al Mozilla Thunderbird.</p> <p>Per configurar el vostre compte de correu electr\u00f2nic, de manera que pugueu afegir la signatura als teus missatges, haur\u00e0s d'accedir a la Configuraci\u00f3 del compte.</p> <p>Per accedir a l'opci\u00f3 de Configuraci\u00f3 del compte, a la part de l'esquerra cal que seleccioneu l'adre\u00e7a de correu que estem utilitzant, ia la part de la dreta, hem de seleccionar el bot\u00f3 Configuraci\u00f3 del compte ia la finestra que t'apareix tens dues opcions:</p> <ul> <li>Escriure el text de la teva signatura en text pla o en HTML, directament a la caixa que trobar\u00e0s en aquesta finestra.</li> <li>Definir una signatura en un fitxer extern, per tant l'\u00fanic que has de fer \u00e9s generar el fitxer amb qualsevol editor de textos i activar en aquesta finestra la casella \"Adjuntar aquesta signatura\" i seleccionar el fitxer que hagis creat.</li> </ul> <p>Primer, has de crear un missatge i situar-te al cos del missatge. Pots crear una signatura en HTML des de Mozilla Thunderbird de la seg\u00fcent manera:</p> <ol> <li>Despr\u00e9s, escrius el text que utilitzar\u00e0s com a signatura i li d\u00f3nes el format que vulguis amb la barra de format del redactor de correus electr\u00f2nics. Si vols tamb\u00e9 pots inserir alguna imatge.</li> <li>Un cop fet aix\u00f2 podr\u00e0s accedir a Fitxer \u2192 Desa com a \u2192 Fitxer... i desar el fitxer amb format HTML. En funci\u00f3 del contingut que h\u00e0gim inserit, podrem emmagatzemar-ne el contingut en un format o un altre.</li> <li>Per acabar, ja pots accedir a la configuraci\u00f3 del compte i la casella \"Adjuntar aquesta signatura\" i seleccionar el fitxer que hagis creat.</li> </ol> <p>Si la signatura que heu creat \u00e9s \u00fanicament un fitxer de text, es mostrar\u00e0 en tots els missatges, per\u00f2 si heu creat un fitxer HTML, la signatura nom\u00e9s s'enviar\u00e0 si el missatge s'envia amb format HTML.</p> <p>Una signatura de correu electr\u00f2nic \u00e9s un text, com ara la informaci\u00f3 de contacte o la vostra citaci\u00f3 preferida, que s'afegeix de manera autom\u00e0tica al final dels missatges de Gmail.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#afegir-o-canviar-una-signatura","title":"Afegir o canviar una signatura","text":"<p>Podeu utilitzar fins a 10.000 car\u00e0cters a la signatura.</p> <ol> <li>Obre Gmail.</li> <li>A la part superior dreta, feu clic a Configuraci\u00f3   Mostra tota la configuraci\u00f3.</li> <li>A la secci\u00f3 \"Signatura\", afegiu el text de la signatura al quadre. Si voleu, podeu donar format al missatge amb una imatge o canviar l'estil del text.<ul> <li>Consell: la imatge tamb\u00e9 es t\u00e9 en compte per al l\u00edmit de car\u00e0cters. Si rebeu un missatge d'error, proveu de canviar la mida de la imatge.</li> </ul> </li> <li>A la part inferior de la p\u00e0gina, feu clic a Desa els canvis.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#gestionar-diverses-signatures","title":"Gestionar diverses signatures","text":"<p>Podeu utilitzar diferents signatures per als correus electr\u00f2nics. Per exemple, podeu definir una signatura predeterminada per als correus electr\u00f2nics nous que redacteu o per als que respongueu. Tamb\u00e9 podeu triar una signatura diferent per a cada correu electr\u00f2nic que envieu.</p> <p>Consell: si voleu canviar la signatura mentre escriviu un correu electr\u00f2nic, aneu a la part inferior de la finestra i feu clic a Insereix una signatura .  </p> <p>Editar les signatures</p> <ol> <li>Obriu Gmail.</li> <li>A la part superior dreta, feu clic a Configuraci\u00f3   Mostra tota la configuraci\u00f3.</li> <li>A \"General\", desplaceu-vos fins a \"Signatura\" i feu clic a la signatura que vulgueu editar.</li> <li>Feu els canvis al quadre de text.<ul> <li>Per canviar el nom de la signatura, feu clic a Edita .</li> </ul> </li> <li>A la part inferior, feu clic a Desa els canvis.</li> </ol> <p>Consell: tamb\u00e9 podeu triar una signatura predeterminada per als correus electr\u00f2nics nous o per als que respongueu.</p> <p>Suprimir signatures</p> <ol> <li>Obriu Gmail.</li> <li>A la part superior dreta, feu clic a Configuraci\u00f3   Mostra tota la configuraci\u00f3.</li> <li>A \"General\", desplaceu-vos fins a \"Signatura\".</li> <li>Feu clic a la signatura que vulgueu suprimir.</li> <li>Feu clic a Suprimeix   Suprimeix.</li> <li>A la part inferior, feu clic a Desa els canvis.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#afegir-una-signatura-si-sutilitza-la-funcio-envia-correu-com-a","title":"Afegir una signatura si s'utilitza la funci\u00f3 \"Envia correu com a\"","text":"<p>Si utilitzeu la funci\u00f3 \"Envia correu com a\" per enviar correus des de diverses adreces electr\u00f2niques al vostre compte, podeu afegir una signatura diferent per a cada adre\u00e7a.</p> <p>Per seleccionar una adre\u00e7a, aneu a la p\u00e0gina Configuraci\u00f3 i utilitzeu el men\u00fa desplegable situat a sobre del quadre de text de la signatura.</p> <p>Si no veieu el men\u00fa desplegable:</p> <ol> <li>Obriu la p\u00e0gina de configuraci\u00f3 Comptes i importaci\u00f3.</li> <li>Comproveu que les adreces es mostrin a la secci\u00f3 \"Envia correu com a\".</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#22-plantilles-de-correu","title":"2.2.- Plantilles de correu.Quina \u00e9s la forma de definir una plantilla per als teus correus electr\u00f2nics a Mozilla Thunderbird?","text":"<p>Les plantilles de correu electr\u00f2nic que utilitzar\u00e0s als teus correus electr\u00f2nics, funcionen de la mateixa manera que les plantilles que vesteix per al processador de textos. Hi podr\u00e0s incloure formats de car\u00e0cter i formats de par\u00e0graf, a m\u00e9s d'elements que vols que es repeteixin als teus correus electr\u00f2nics, com ara fons, cap\u00e7aleres i peus de p\u00e0gina.</p> Plantilles amb ThunderbirdPlantilles amb Gmail <p>Per utilitzar plantilles que utilitzin formats de text i imatges, haureu de configurar el vostre compte de correu electr\u00f2nic perqu\u00e8 pugui redactar correus en format HTML (per defecte est\u00e0 habilitat).</p> <p>Si vols utilitzar una plantilla com a base per als teus missatges de correu haur\u00e0s de seguir els passos seg\u00fcents:</p> <ol> <li>Crear un missatge nou posant un t\u00edtol descriptiu per a la plantilla.</li> <li>Redactar el missatge amb el text, formats i imatges, que vulguis utilitzar per a la plantilla i despr\u00e9s des del men\u00fa Fitxer desar-lo com a Plantilla. Les plantilles, per defecte, es guarden a la carpeta Plantilles del tauler que es mostra a l'esquerra de l'aplicaci\u00f3.</li> <li>Quan vulguis crear un missatge amb una plantilla com a base, des d'on tinguis la plantilla guardada podr\u00e0s fer-hi doble clic i s'obrir\u00e0 la finestra de redacci\u00f3 on es mostrar\u00e0 inclosa el contingut de cont\u00e9 la plantilla.</li> <li>Escriure el teu missatge sobre la plantilla seleccionada, i un cop finalitzat, fes clic a \"Enviar\".</li> </ol> <p>Pots utilitzar complements que et facilitin la gesti\u00f3 de plantilles, com per exemple, associar una plantilla a un compte de correu o utilitzar les plantilles des del bot\u00f3 redactar. Has de tenir en compte, que els complements que instal\u00b7lis, et serviran per gestionar les plantilles que cre\u00efs, per\u00f2 cap porta plantilles ja fetes perqu\u00e8 les utilitzis.</p> <p>Si teniu un missatge que inclou informaci\u00f3 que no canvia sovint, podeu desar-lo com a plantilla a Gmail i reutilitzar-lo.</p> Autoavaluaci\u00f3 <p> No existeixen les plantilles de correu electr\u00f2nic, aquestes plantilles nom\u00e9s es poden utilitzar en els processadors de textos i en les presentacions. Creant un nou correu electr\u00f2nic i guardant-lo com una plantilla. Existeix una caixa de text a aquest efecte en la configuraci\u00f3 del compte de correu electr\u00f2nic. En les opcions del men\u00fa Eines hi ha una opci\u00f3 per crear plantilles de correu electr\u00f2nic. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#activar-les-plantilles","title":"Activar les plantilles","text":"<p>Important: nom\u00e9s podeu activar i utilitzar les plantilles de missatge de Gmail a l'ordinador.</p> <ol> <li>A l'ordinador, obriu Gmail.</li> <li>A la part superior dreta, feu clic a Configuraci\u00f3   Mostra tota la configuraci\u00f3.</li> <li>A la part superior, feu clic a Configuraci\u00f3 avan\u00e7ada.</li> <li>Al costat de \"Plantilles\", feu clic a Activa.</li> <li>A la part inferior, feu clic a Desa els canvis.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#crear-o-editar-una-plantilla","title":"Crear o editar una plantilla","text":"<p>Important: despr\u00e9s de suprimir una plantilla, no la podreu recuperar.</p> <ol> <li>A l'ordinador, obriu Gmail.</li> <li>A la part superior esquerra, feu clic a Redacta.</li> <li>A la finestra de redacci\u00f3, introdu\u00efu el text de la plantilla.</li> <li>A la part inferior de la finestra de redacci\u00f3, feu clic a M\u00e9s opcions   Plantilles.</li> <li>Trieu una opci\u00f3:<ul> <li>Per crear una plantilla: feu clic a Desa l'esborrany com a plantilla  Desa com una plantilla nova.</li> <li>Per canviar una plantilla desada anteriorment:<ul> <li>Feu clic a Desa l'esborrany com a plantilla.</li> <li>A \"Sobreescriu la plantilla\", trieu una plantilla.</li> <li>Feu clic a Desa.</li> </ul> </li> <li>Per suprimir una plantilla:<ul> <li>Feu clic a Suprimeix la plantilla.</li> <li>Trieu la plantilla que vulgueu suprimir.</li> <li>Feu clic a Suprimeix.</li> </ul> </li> </ul> </li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#inserir-una-plantilla","title":"Inserir una plantilla","text":"<ol> <li>A l'ordinador, obriu Gmail.</li> <li>A la part superior esquerra, feu clic a Redacta.</li> <li>A la part inferior de la finestra de redacci\u00f3, feu clic a M\u00e9s opcions   Plantilles.</li> <li>A \"Insereix una plantilla\", trieu una plantilla.</li> <li>Redacteu la resta del missatge.</li> <li>Feu clic a Envia.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT8_gestiocorreuiagendaelectronica.html#crear-una-resposta-automatica-per-als-missatges","title":"Crear una resposta autom\u00e0tica per als missatges","text":"<p>Important: per enviar la plantilla de missatge com a resposta autom\u00e0tica, heu de crear un filtre.</p> <ol> <li>A l'ordinador, obriu Gmail.</li> <li>Al quadre de cerca de la part superior, feu clic a Mostra les opcions de cerca .</li> <li>Introdu\u00efu els criteris de cerca.</li> <li>Opcional: per comprovar que la cerca funcioni correctament, feu clic a Cerca.<ul> <li>Per tornar al men\u00fa de filtres, feu clic a Mostra les opcions de cerca .</li> </ul> </li> <li>Feu clic a Crea un filtre.</li> <li>Marqueu la casella que hi ha al costat de l'opci\u00f3 \"Envia la plantilla\" i trieu la plantilla.</li> <li>Feu clic a Crea un filtre.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html","title":"UNITAT 9: Aplicaci\u00f3 de t\u00e8cniques de suport","text":""},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#apunts","title":"\ud83d\udcda APUNTS","text":""},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#aplicacio-de-tecniques-de-suport","title":"Aplicaci\u00f3 de t\u00e8cniques de suport.","text":"<p>En funci\u00f3 dels coneixements i \u00e0mbits d'actuaci\u00f3, es classifiquen els usuaris de les aplicacions, haur\u00e0s de con\u00e8ixer quins s\u00f3n aquests tipus d'usuaris i quins s\u00f3n els seus rols amb l'aplicaci\u00f3.</p> <p>Qualsevol aplicaci\u00f3 ofim\u00e0tica instal\u00b7lada al teu ordinador \u00e9s susceptible de tenir fallades. Per poder corregir aquestes fallades haur\u00e0s d'acudir als diferents tipus de manteniment existents i que aprendr\u00e0s en aquesta unitat.</p> <p>Perqu\u00e8 les aplicacions ofim\u00e0tiques estiguin funcionant sempre efica\u00e7ment, les haur\u00e0s de tenir sempre actualitzades i revisar-les sovint, de manera que no donin lloc a inestabilitats del programa.</p> <p>Per suposat, haur\u00e0s de crear c\u00f2pies de seguretat del contingut del teu equip per no perdre dades que podrien arribar a ser irrecuperables.</p> <p>\u00cdndex de contingut</p> <p>1. Formaci\u00f3 dels usuaris</p> <p>2. Manteniment d'una aplicaci\u00f3</p> <p>3. Assist\u00e8ncia i suport t\u00e8cnic</p> <p>4. Revisions i actualitzacions</p> <p>5. Gesti\u00f3 de c\u00f2pies de seguretat</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#1-formacio-dels-usuaris","title":"1. Formaci\u00f3 dels usuaris.","text":"<p>En inform\u00e0tica, un usuari \u00e9s la persona o programa que utilitza un sistema inform\u00e0tic, en el nostre cas, qualsevol de les aplicacions ofim\u00e0tiques que hem apr\u00e8s fins ara.</p> <p>En aquesta unitat veur\u00e0s els diferents usuaris que pots trobar en aplicar t\u00e8cniques de suport sobre les aplicacions ofim\u00e0tiques. Aprendr\u00e0s tamb\u00e9 com es fa la formaci\u00f3 a aquests usuaris i les guies d'aprenentatge que se'ls proporcionen.</p> Autoavaluaci\u00f3 <p> Test d'autoavaluaci\u00f3 Quina de les seg\u00fcents afirmacions \u00e9s correcta? Per no perdre dades que podrien ser irrecuperables haur\u00e0s de realitzar un correcte manteniment de les teves aplicacions. Haur\u00e0s de crear c\u00f2pies de seguretat per no perdre dades que podrien arribar a ser irrecuperables. Per no perdre dades que podrien arribar a ser irrecuperables haur\u00e0s de revisar totes les teves aplicacions. Per no perdre dades que podrien ser irrecuperables, haur\u00e0s de realitzar un intens proc\u00e9s de formaci\u00f3. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#11-tipus-dusuaris","title":"1.1. Tipus d'usuaris.","text":"<p>En inform\u00e0tica hi ha diferents classificacions per als usuaris, per\u00f2, en el cas del manteniment de les aplicacions ofim\u00e0tiques, haur\u00e0s d'atendre una classificaci\u00f3 pels coneixements que l'usuari o usu\u00e0ria t\u00e9 de l'aplicaci\u00f3 en q\u00fcesti\u00f3.</p> <p>Podr\u00e0s trobar en el m\u00f3n del suport de les aplicacions ofim\u00e0tiques els seg\u00fcents tipus:</p> <p>Usuaris inform\u00e0tics: s\u00f3n aquelles persones amb un alt grau de coneixements sobre l'aplicaci\u00f3 a mantenir, no nom\u00e9s d'\u00fas, sin\u00f3 tamb\u00e9 de configuraci\u00f3 i administraci\u00f3 d'aquesta. Se'ls haur\u00e0 de proporcionar una informaci\u00f3 m\u00e9s t\u00e8cnica i especialitzada.</p> <p>Usuaris finals: persones que nom\u00e9s es limiten a l'\u00fas de l'aplicaci\u00f3. S\u00f3n els usuaris que necessiten formaci\u00f3 sobre l'aplicaci\u00f3, i guies o manuals per a la seva consulta. Com en totes les aplicacions, hi haur\u00e0 funcions que s'utilitzin a diari, per\u00f2 hi haur\u00e0 altres funcions que a causa del seu poc \u00fas s'oblidin i calgui recordar-les d'alguna manera.</p> <p>Usuaris experts: s\u00f3n aquelles persones que tenen coneixements superiors als usuaris finals per\u00f2 que no arriben al grau de coneixement dels usuaris inform\u00e0tics. Aquestes persones podran ser les encarregades de donar formaci\u00f3 als nous usuaris de les aplicacions perqu\u00e8 arribin a ser usuaris finals, i fins i tot, les encarregades d'administrar certs processos menys cr\u00edtics en les aplicacions.</p> <p>\u2795 informaci\u00f3</p> <p>Els usuaris d'una aplicaci\u00f3, o d'un ordinador, s\u00f3n diferents, i l'\u00fanic que els assembla \u00e9s la funci\u00f3 que tenen respecte a l'ordinador o l'aplicaci\u00f3, una de les classificacions m\u00e9s habituals per referir-se als diferents tipus d'usuaris \u00e9s l'experi\u00e8ncia de cadasc\u00fa:</p> <p>Tipus d'usuaris en funci\u00f3 de la seva experi\u00e8ncia</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#12-guies-dus","title":"1.2. Guies d'\u00fas.Quina de les seg\u00fcents afirmacions \u00e9s correcta?","text":"<p>Sempre que es desenvolupa una aplicaci\u00f3 s'elaboren dos documents:</p> <ul> <li>Un en qu\u00e8 s'especifiquen els requisits t\u00e8cnics de l'aplicaci\u00f3.</li> <li>Un altre en qu\u00e8 es detalla com \u00e9s el funcionament de l'aplicaci\u00f3.</li> </ul> OpenClipart-Vectors (Domini p\u00fablic) <p>En la documentaci\u00f3 t\u00e8cnica trobar\u00e0s tota la informaci\u00f3 corresponent als processos d'instal\u00b7laci\u00f3, desinstal\u00b7laci\u00f3, actualitzaci\u00f3, configuraci\u00f3 i suport. En aplicacions antigues trobar\u00e0s que tota aquesta informaci\u00f3 ve en manuals impresos, de vegades, textos molt extensos de dif\u00edcil acc\u00e9s a l'usuari o usu\u00e0ria final. El primer \u00e9s l'anomenada documentaci\u00f3 t\u00e8cnica, i el segon l'anomenada guia de l'usuari, antigament denominat manual, i que venia en paper.</p> <p>Aquesta documentaci\u00f3 t\u00e8cnica ha estat substitu\u00efda per ajuts interactives, o sensibles al context, dins del propi programa. Per la qual cosa en les noves aplicacions \u00e9s dif\u00edcil que trobis aquests grans textos de refer\u00e8ncia.</p> <p>La guia de l'usuari \u00e9s un document de consulta de l'usuari final destinat a explicar les funcions m\u00e9s habituals de l'aplicaci\u00f3 a les persones que la utilitzen.</p> <p>L'avan\u00e7 de les noves tecnologies ha perm\u00e8s que puguis consultar aquestes guies d'usuari a Internet, o en suports inform\u00e0tics de diferents tipus.</p> <p>Trobar\u00e0s aplicacions que fins i tot porten la guia de l'usuari preinstal\u00b7lada amb l'aplicaci\u00f3, de manera que mitjan\u00e7ant men\u00fas d'ajuda sensible al context podr\u00e0s accedir a qualsevol informaci\u00f3 relacionada amb l'aplicaci\u00f3.</p> <p>\u2795 informaci\u00f3</p> <p>Pots trobar ajudes sensibles al context en les aplicacions pressionant F1, o polsant sobre botons amb la icona d'una interrogaci\u00f3. Pot ser que s'utilitzin altres combinacions de tecles. En el seg\u00fcent enlla\u00e7 pots veure com fer-ho a GIMP.</p> <p>Com activar ajuda sensible al context a GIMP</p> Autoavaluaci\u00f3 <p> Test d'autoavaluaci\u00f3 A la guia de l'usuari hi ha tota la informaci\u00f3 corresponent als processos d'instal\u00b7laci\u00f3, desinstal\u00b7laci\u00f3, actualitzaci\u00f3, configuraci\u00f3 i suport. En la documentaci\u00f3 t\u00e8cnica tens tota la informaci\u00f3 corresponent als processos d'instal\u00b7laci\u00f3, desinstal\u00b7laci\u00f3, actualitzaci\u00f3, configuraci\u00f3 i suport. Al manual de l'aplicaci\u00f3 trobar\u00e0s la informaci\u00f3 necess\u00e0ria per poder instal\u00b7lar l'aplicaci\u00f3. La documentaci\u00f3 t\u00e8cnica \u00e9s un document de consulta de l'usuari final destinat a explicar les funcions m\u00e9s habituals de l'aplicaci\u00f3 a les persones que la utilitzen. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#13-formacio-per-a-loperacio","title":"1.3. Formaci\u00f3 per a l'operaci\u00f3.","text":"mohamed_hassan (Domini p\u00fablic) <p>Quan implantis una nova aplicaci\u00f3 en qualsevol sistema has de saber que l'usuari final necessitar\u00e0 formaci\u00f3 per usar-la, aquesta formaci\u00f3 podr\u00e0 ser de diferents tipus, i dependr\u00e0 de la dificultat d'\u00fas de l'aplicaci\u00f3.</p> <p>Si comptes amb una aplicaci\u00f3 relativament senzilla d'utilitzar podr\u00e0 bastar que els hi donis una xerrada o una demostraci\u00f3 guiada de les funcions m\u00e9s habituals de l'aplicaci\u00f3. Tanmateix, si el que tens \u00e9s una aplicaci\u00f3 amb gran quantitat de funcionalitats i/o funcionaments molt complicats, potser cal establir un pla de formaci\u00f3 m\u00e9s organitzat.</p> <p>Per organitzar un pla de formaci\u00f3, el m\u00e9s usual seria que estructurar-lo en base a diferents cursos de formaci\u00f3 des d'un baix nivell de dificultat fins a un d'alt.</p> <p>Haur\u00e0s de considerar que els usuaris s\u00f3n diversos, i pots fer una avaluaci\u00f3 inicial de coneixements per saber quins s\u00f3n els seus coneixements previs. El m\u00e9s efica\u00e7 seria que els dividissin en grups segons els coneixements que demostrin saber.</p> <p>Un cop fet aix\u00f2, haur\u00e0s de preparar un document amb els objectius que vols complir en aquest curs, aix\u00ed com un gui\u00f3 amb els continguts que vas impartir.</p> <p>Haur\u00e0s d'elaborar els materials did\u00e0ctics amb els quals vas a impartir el curs, manuals, presentacions, exercicis, etc.</p> <p>Finalment, haur\u00e0s de preparar un proc\u00e9s d'avaluaci\u00f3 del curs que has impartit, no nom\u00e9s avaluar\u00e0s el que han apr\u00e8s l'alumnat. Tamb\u00e9 seria bona idea que preparessin un test d'avaluaci\u00f3 en qu\u00e8 els assistents, avaluessin el curs i el docent. D'aquesta manera puguis obtenir la percepci\u00f3 que als alumnes els ha quedat del teu curs de formaci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#2-manteniment-duna-aplicacio","title":"2. Manteniment d'una aplicaci\u00f3.","text":"<p>En aquest apartat aprendr\u00e0s per qu\u00e8 \u00e9s important el manteniment sobre les aplicacions, qu\u00e8 \u00e9s realment la fase de manteniment, i quins s\u00f3n els diferents tipus de manteniment que has de con\u00e8ixer, per mantenir les teves aplicacions al dia, i que funcionin el m\u00e9s \u00f2ptimament possible.</p> <p>La fase manteniment d'una aplicaci\u00f3, \u00e9s una fase dins del cicle de vida de l'aplicaci\u00f3, i \u00e9s la que segueix a la fase de proves, un cop instal\u00b7lada l'aplicaci\u00f3 i posada en marxa a l'empresa.</p> <p>\u2795 informaci\u00f3</p> <p>El proc\u00e9s de desenvolupament d'una aplicaci\u00f3 involucra variades etapes o fases, des que s'identifica un problema, fins que se soluciona mitjan\u00e7ant una aplicaci\u00f3 programari. Existeixen diferents tipus de models de processos o cicles de vida. En el seg\u00fcent enlla\u00e7 obtindr\u00e0s m\u00e9s informaci\u00f3.</p> <p>Cicle de vida</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#21-importancia-i-funcions-del-manteniment","title":"2.1. Import\u00e0ncia i funcions del manteniment.Test d'autoavaluaci\u00f3El manteniment del programari serveix per...","text":"gimono (Domini p\u00fablic) <p>Has d'entendre per manteniment, el proc\u00e9s pel qual pots modificar una aplicaci\u00f3 programari ja instal\u00b7lada i posada en marxa, per corregir els defectes que hi puguin apar\u00e8ixer, per millorar la seva rendibilitat, o per adaptar-la a un nou sistema inform\u00e0tic.</p> <p>De la definici\u00f3 anterior has de deduir que les funcions d'un bon pla de manteniment s\u00f3n les seg\u00fcents:</p> <ul> <li>Corregir defectes i solucionar problemes.</li> <li>Millorar el rendiment.</li> <li>Adaptar l'aplicaci\u00f3 als canvis.</li> </ul> <p>Una aplicaci\u00f3, o conjunt d'aplicacions, ha d'estar funcionant constantment. L'empresa per a la qual est\u00e0 funcionant no pot aturar la seva producci\u00f3 per fallades en l'aplicaci\u00f3, o per canvis en la mateixa.</p> <p>La decisi\u00f3, o parada d'una aplicaci\u00f3, podria fer que la teva empresa tingu\u00e9s p\u00e8rdues d'informaci\u00f3 molt importants, i aix\u00f2 no ho pots permetre ja que podria inc\u00f3rrer en grans p\u00e8rdues econ\u00f2miques per a la teva empresa.</p> Autoavaluaci\u00f3 <p> Corregir defectes i solucionar problemes. Corregir els defectes que puguin apar\u00e8ixer en una aplicaci\u00f3 inform\u00e0tica, per millorar-ne l'efic\u00e0cia, o per adaptar-la a un nou sistema inform\u00e0tic. Millorar el rendiment. Que la meva empresa no tingui fallades. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#22-tipus-de-manteniment","title":"2.2. Tipus de manteniment.Test d'autoavaluaci\u00f3Quin tipus de manteniment aplicar\u00e0s en el moment que sorgeixi una fallada o error?","text":"<p>Existeixen diferents tipus de manteniment. Atenent les funcions del manteniment del programari que has vist en l'apartat anterior, pots fer la classificaci\u00f3 seg\u00fcent:</p> <ul> <li>Manteniment Preventiu: Amb aquest tipus tractar\u00e0s de prevenir els problemes abans que apareguin, mitjan\u00e7ant revisions i actualitzacions.</li> <li>Manteniment Correctiu: Aquest tipus l'aplicar\u00e0s en el moment que sorgeixi la fallada o error, podr\u00e0 ser un problema com bloquejos, lentitud, mal funcionament, etc.</li> <li>Manteniment Evolutiu: Amb aquest tipus intentar\u00e0s fer evolucionar l'aplicaci\u00f3, en funci\u00f3 de les noves necessitats que vagis detectant, o que vagin sorgint a causa de l'\u00fas diari.</li> <li>Manteniment Adaptatiu: Aquest tipus de manteniment facilita que puguis modificar l'aplicaci\u00f3 o actualitzar-la perqu\u00e8 funcioni en una nova situaci\u00f3, com pot ser un canvi de plataforma, un funcionament en un entorn nou, etc.</li> </ul> Autoavaluaci\u00f3 <p> Aplicar\u00e9 el manteniment evolutiu. Aplicar\u00e9 el manteniment correctiu. Aplicar\u00e9 el manteniment adaptatiu. Aplicar\u00e9 el manteniment preventiu. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#3-assistencia-i-suport-tecnic","title":"3. Assist\u00e8ncia i suport t\u00e8cnic.","text":"<p>Existeixen diferents formes d'assistir a les persones usu\u00e0ries quan t\u00e9 problemes amb les aplicacions, el podr\u00e0s ajudar de dues formes:</p> <ul> <li>De forma indirecta, mitjan\u00e7ant l'ajut que es deixa a disposici\u00f3 de les persones que la necessiten, perqu\u00e8 la consultin, i puguin resoldre els seus problemes per si mateixes; a aquest tipus d'assist\u00e8ncia se l'anomena ajuda.</li> <li>De forma directa, amb la intervenci\u00f3 dels t\u00e8cnics o t\u00e8cniques per a la resoluci\u00f3 del problema; a aquest tipus d'assist\u00e8ncia se l'anomena suport t\u00e8cnic</li> </ul> <p>\u2795 informaci\u00f3</p> <p>Els serveis de suport t\u00e8cnic, en general, tracten d'ajudar les persones a resoldre determinats problemes amb alguna aplicaci\u00f3. La seva tasca no \u00e9s ensenyar a manejar l'aplicaci\u00f3, per aix\u00f2 hi ha els manuals o guies d'\u00fas.</p> <p>Suport t\u00e8cnic.</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#31-ajut-i-suport-tecnic","title":"3.1. Ajut i suport t\u00e8cnic.Test d'autoavaluaci\u00f3Si necessites aprendre a utilitzar una aplicaci\u00f3 ofim\u00e0tica. Quina de les seg\u00fcents opcions seleccionaria?","text":"<p>Has de saber que l'ajuda que se li presta a la persona usu\u00e0ria \u00e9s tota aquella assist\u00e8ncia destinada al que aquesta busqui les solucions per si mateixa i intenti resoldre aquests problemes.</p> <p>Pot ser de dos tipus:</p> <ul> <li>Ajut en l\u00ednia (\u201con-line\u201d). Aquesta \u00e9s l'ajuda accessible des del propi programa, pot ser que amb la instal\u00b7laci\u00f3 de l'aplicaci\u00f3 s'instal\u00b7li tamb\u00e9 l'ajuda, o que l'ajuda estigui disponible a Internet i s'hi accedeixi des d'un hipervincle a l'aplicaci\u00f3.</li> <li>Manual d'usuari. \u00c9s el document de consulta, est\u00e0 destinat a explicar les funcions m\u00e9s habituals de l'aplicaci\u00f3 a les persones que la utilitzen. Aquest tipus d'ajudes escrites en paper est\u00e0 desapareixent, donant lloc a les populars Frecuently Asked Questions (F.A.Q.).</li> </ul> <p>El suport t\u00e8cnic \u00e9s el que proporciones com a professional de la inform\u00e0tica, tant de forma presencial com remotament.</p> <p>Pot ser de quatre tipus:</p> <ul> <li>Assist\u00e8ncia in situ. Aquesta assist\u00e8ncia \u00e9s la que es proporciona en el domicili de la persona que ha contractat el servei, \u00e9s a dir, ser\u00e0 el t\u00e8cnic o t\u00e8cnica d'inform\u00e0tica qui es traslladi a la seu del contractant del servei per solucionar el problema registrat.</li> <li>Assist\u00e8ncia telef\u00f2nica. Aquest tipus d'assist\u00e8ncia se sol contractar com a part del manteniment, de vegades, ve fora d'aquest contracte. Com a persona entesa en manteniment haur\u00e0s de deixar ben clar quines seran les funcions a desenvolupar des d'aquest servei d'assist\u00e8ncia.</li> <li>Assist\u00e8ncia web. Aquesta assist\u00e8ncia es fa mitjan\u00e7ant f\u00f2rums, xats o fins i tot desc\u00e0rrega d'actualitzacions per part del client.</li> <li>Assist\u00e8ncia remota. Aquest podria ser un subtipus del tipus anterior. La persona que necessita l'assist\u00e8ncia es descarrega i instal\u00b7la un programa que permet al t\u00e8cnic o t\u00e8cnica de manteniment accedir al seu equip per poder solucionar el problema registrat.</li> </ul> Autoavaluaci\u00f3 <p> Accediria a l'ajut en l\u00ednia (\u201con-line\u201d) de l'aplicaci\u00f3 i estudiaria els diferents apartats dels quals consti. Contractaria una assist\u00e8ncia in situ, perqu\u00e8 la persona que porti el manteniment que vingu\u00e9s m'expliqu\u00e9s com funciona l'aplicaci\u00f3. Contractaria una assist\u00e8ncia remota perqu\u00e8 la persona que porti el manteniment utilitz\u00e9s l'aplicaci\u00f3 de forma remota i jo aprengu\u00e9s a utilitzar-la veient com ho fa. Accediria a l'assist\u00e8ncia web de l'aplicaci\u00f3, i en el f\u00f2rum preguntaria com s'utilitza l'aplicaci\u00f3. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#4-revisions-i-actualitzacions","title":"4. Revisions i actualitzacions.","text":"<p>Quan realitzis la revisi\u00f3 d'una aplicaci\u00f3, haur\u00e0s de realitzar un estudi detallat de les diferents funcionalitats de l'aplicaci\u00f3, de manera que puguis detectar les possibles fallades que es puguin donar a l'aplicaci\u00f3.</p> <p>Quan realitzis una actualitzaci\u00f3 haur\u00e0s de cerciorar-te que aquesta nova versi\u00f3 de l'aplicaci\u00f3 funciona correctament, i que tot el relacionat amb l'aplicaci\u00f3 s'ha restablert correctament.</p> <p>Sempre que realitzis una acci\u00f3 d'aquest \u00faltim tipus, \u00e9s una bona pr\u00e0ctica realitzar a continuaci\u00f3 una revisi\u00f3. I per suposat, realitzar les proves pr\u00e8viament en entorns virtuals.</p> athree23 (Domini p\u00fablic)"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#41-revisio-de-les-aplicacions","title":"4.1. Revisi\u00f3 de les aplicacions.Test d'autoavaluaci\u00f3Si necessites comprovar l'\u00f2ptima gesti\u00f3 dels recursos. Quina de les seg\u00fcents opcions seleccionaria?","text":"<p>Existeixen diversos tipus de revisions de les aplicacions:</p> <ul> <li>Revisions t\u00e8cniques. Tamb\u00e9 denominades control de versions. Es fan durant el desenvolupament del producte</li> <li>Inspeccions. S\u00f3n les revisions que haur\u00e0s de realitzar per saber si l'aplicaci\u00f3 instal\u00b7lada compleix amb els requisits que demana el client o clienta al producte programari.</li> <li>Auditories. En aquest tipus de revisions, a m\u00e9s d'inspeccionar l'aplicaci\u00f3 haur\u00e0s d'inspeccionar tamb\u00e9 l'entorn de treball de l'aplicaci\u00f3.</li> </ul> <p>Dins de l'\u00faltim tipus pots trobar dos grans grups d'auditories:</p> <ul> <li>Auditories globals: s\u00f3n aquelles que afecten tota l'aplicaci\u00f3. En elles haur\u00e0s de comprovar el correcte funcionament de l'aplicaci\u00f3, els diferents mitjans de seguretat, la seva efici\u00e8ncia i l'\u00f2ptima gesti\u00f3 dels recursos.</li> <li>Auditories parcials: en aquestes auditories et centrar\u00e0s \u00fanicament en una part del sistema. A continuaci\u00f3, es descriuen els diferents tipus d'auditories parcials que pots realitzar.<ul> <li>Auditories d'inversi\u00f3: amb aquest tipus d'auditoria podr\u00e0s comprovar l'\u00f2ptima gesti\u00f3 dels recursos.</li> <li>Auditories de seguretat: amb elles provar\u00e0s els diferents mitjans i t\u00e8cniques de seguretat.</li> <li>Auditories d'explotaci\u00f3: et faran poder justificar el correcte funcionament de l'aplicaci\u00f3, i si l'aplicaci\u00f3 compleix amb els requisits demanats per la clientela.</li> <li>Auditories de programari: s\u00f3n aquelles amb les quals comprovar\u00e0s la toler\u00e0ncia a fallades de l'aplicaci\u00f3, l'adaptabilitat de l'aplicaci\u00f3 a diferents plataformes, etc.</li> </ul> </li> </ul> Autoavaluaci\u00f3 <p> Realitzaria una auditoria de seguretat. Realitzaria una auditoria d'explotaci\u00f3. Realitzaria una auditoria d'inversi\u00f3. Realitzaria una auditoria de programari. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#42-actualitzacio-de-les-aplicacions","title":"4.2. Actualitzaci\u00f3 de les aplicacions.","text":"geralt (Domini p\u00fablic) <p>Una actualitzaci\u00f3 \u00e9s el reempla\u00e7ament d'una part o de tota l'aplicaci\u00f3.</p> <p>Haur\u00e0s de realitzar les actualitzacions de les teves aplicacions, no nom\u00e9s perqu\u00e8 incloguin noves funcionalitats, sin\u00f3 tamb\u00e9 perqu\u00e8 per norma general porten amb si correccions (\u201cparches\u201d) que solucionen problemes de seguretat de les anteriors versions.</p> <p>Les actualitzacions poden ser de 2 tipus:</p> <ul> <li>Manuals: on haur\u00e0s de descarregar-te i executar el programa d'instal\u00b7laci\u00f3 d'actualitzaci\u00f3 de les aplicacions.</li> <li>Autom\u00e0tiques: on un programa que s'executa autom\u00e0ticament s'encarrega d'actualitzar-hi l'aplicaci\u00f3. El sistema operatiu Windows t\u00e9 una eina que s'encarrega d'aquesta tasca, mantenint el sistema operatiu actualitzat, es diu Windows Update.</li> </ul> <p>\u2795 informaci\u00f3</p> <p>Els editors d' aplicacions de vegades actualitzen les seves aplicacions per agregar noves caracter\u00edstiques i corregir problemes. Microsoft Store de Windows pot instal\u00b7lar autom\u00e0ticament les actualitzacions de les aplicacions.</p> <p>Para Windows 10</p> <ol> <li>Selecciona la pantalla Inici i despr\u00e9s, Microsoft Store.</li> <li>A la Microsoft Store, a la part superior dreta, selecciona el men\u00fa del compte (els tres punts) i despr\u00e9s, Configuraci\u00f3.</li> <li>En Actualitzaci\u00f3 d' aplicacions, estableix Actualitzar aplicacions autom\u00e0ticament en Activat.</li> </ol> <p>Eines per a actualitzacions autom\u00e0tiques a Windows</p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#5-gestio-de-copies-de-seguretat","title":"5. Gesti\u00f3 de c\u00f2pies de seguretat.","text":"<p>La c\u00f2pia de seguretat \u00e9s un element fonamental perqu\u00e8 el treball que realitzis el puguis protegir d'aquells problemes que puguin oc\u00f3rrer.</p> <p>El seu objectiu \u00e9s recuperar les dades si hi ha errors.</p> <p>Les causes de la p\u00e8rdua de dades poden ser de diferent tipus: per exemple, un mal funcionament d'una aplicaci\u00f3, una fallada de maquinari, un virus, etc. Has de planificar i realitzar les c\u00f2pies de seguretat correctament.</p> <p>Has de planificar una pol\u00edtica de backups (c\u00f2pies de seguretat) peri\u00f2diques tant de les dades com dels arxius de la configuraci\u00f3 del sistema i els serveis.</p> <p>Haur\u00e0s de decidir el tipus de suport on vols emmagatzemar les dades. \u00c9s recomanable que utilitzis un mitj\u00e0 emmagatzematge extra\u00efble, com per exemple, cintes magn\u00e8tiques. En els \u00faltims temps, s'ha popularitzat la utilitzaci\u00f3 de discos durs per a la realitzaci\u00f3 de les c\u00f2pies de seguretat.</p> <p>Una altra decisi\u00f3 que haur\u00e0s de prendre \u00e9s la planificaci\u00f3 de la forma en qu\u00e8 realitzar\u00e0s la c\u00f2pia de seguretat. \u00c9s important que seleccions la tasca apropiada, i aix\u00ed podr\u00e0s minimitzar el nombre de cintes (o altres mitjans) i el temps emprat a realitzar aquesta tasca.</p> Autoavaluaci\u00f3 <p> Test d'autoavaluaci\u00f3 Qu\u00e8 \u00e9s una c\u00f2pia de seguretat? \u00c9s una eina que et previndr\u00e0 de possibles fallades en les teves aplicacions. \u00c9s un element fonamental perqu\u00e8 el treball que realitzis el puguis protegir d'aquells problemes que puguin oc\u00f3rrer. \u00c9s una aplicaci\u00f3 que et permetr\u00e0 recuperar la instal\u00b7laci\u00f3 d'aplicacions que han donat errors en la seva instal\u00b7laci\u00f3. \u00c9s un element fonamental perqu\u00e8 puguis actualitzar les teves aplicacions, ja que en aquesta c\u00f2pia de seguretat trobes indicis de les aplicacions instal\u00b7lades abans de l'error. </p>"},{"location":"Moduls/ARXIU/2425/AOF/AOFUT9_aplicaciotecniquesdesuport.html#51-tipus-i-periodicitat-de-copies","title":"5.1. Tipus i periodicitat de c\u00f2pies.","text":"Tumisu (Domini p\u00fablic) <p>En funci\u00f3 de la quantitat d'arxius a incloure en la c\u00f2pia de seguretat, podr\u00e0s distingir tres tipus de c\u00f2pia:</p> <ul> <li>C\u00f2pia normal o c\u00f2pia total. \u00c9s un duplicat de seguretat total de tots els arxius i directoris seleccionats.</li> <li>C\u00f2pia incremental. En un proc\u00e9s de c\u00f2pia de seguretat incremental, far\u00e0s un duplicat de seguretat nom\u00e9s dels arxius que han canviat des de l'\u00faltima c\u00f2pia de seguretat realitzada (encara que aquesta c\u00f2pia hagi estat incremental). Si has de realitzar la restauraci\u00f3 d'arxius davant d'una fallada, haur\u00e0s de disposar de la c\u00f2pia total i de tots els duplicats incrementals que hagis realitzat.</li> <li>C\u00f2pia diferencial. \u00c9s una c\u00f2pia de tots els arxius que han canviat des de l'\u00faltima c\u00f2pia de seguretat total que hagis fet. L'avantatge \u00e9s que es requereix menys espai que la c\u00f2pia total i que en el proc\u00e9s de restauraci\u00f3 \u00fanicament necessitar\u00e0s l'\u00faltima c\u00f2pia total i l'\u00faltima c\u00f2pia diferencial. Una c\u00f2pia diferencial anul\u00b7la la c\u00f2pia diferencial anterior. Per contra, es consumeix m\u00e9s temps a realitzar la c\u00f2pia i tamb\u00e9 m\u00e9s espai que en el cas de c\u00f2pia incremental.</li> </ul> <p>Si el volum de dades de la c\u00f2pia de seguretat no \u00e9s gaire elevat (menys de 4 GB), el m\u00e9s pr\u00e0ctic \u00e9s realitzar sempre c\u00f2pies totals ja que en cas de fallada, tan sols haur\u00e0s de recuperar l'\u00faltima c\u00f2pia.</p> <p>Si el volum de dades de la teva c\u00f2pia de seguretat \u00e9s molt elevat (major de 50 GB) per\u00f2 el volum de dades que es modifiquen no \u00e9s elevat (menys de 4 GB), el m\u00e9s pr\u00e0ctic \u00e9s realitzar una primera c\u00f2pia total i posteriorment realitzar sempre c\u00f2pies diferencials. Aix\u00ed, en cas de fallada, tan sols haur\u00e0s de recuperar la c\u00f2pia total i l'\u00faltima diferencial. Peri\u00f2dicament haur\u00e0s de realitzar una c\u00f2pia total i aix\u00ed comen\u00e7ar de nou.</p> <p>Si el volum de dades \u00e9s molt elevat (major de 50 GB) i el volum de dades que es modifiquen tamb\u00e9 ho \u00e9s, les c\u00f2pies diferencials ocuparan molt espai. Per tant, el m\u00e9s pr\u00e0ctic ser\u00e0 realitzar una c\u00f2pia total i despr\u00e9s fer c\u00f2pies incrementals, ja que s\u00f3n les que menys espai ocupen. En cas d'error, haur\u00e0s de recuperar l'\u00faltima c\u00f2pia total i totes les incrementals realitzades des de l'\u00faltima c\u00f2pia total. En aquests casos, conv\u00e9 fer c\u00f2pies totals m\u00e9s sovint per no haver de mantenir un nombre molt elevat de c\u00f2pies incrementals.</p> <p>En grans companyies on la realitzaci\u00f3 de c\u00f2pies de seguretat est\u00e0 perfectament planificada, se solen utilitzar sistemes mixtos. Per exemple, en un cas t\u00edpic es realitzarien les seg\u00fcents tasques:</p> <ul> <li>Tots els dies 1 de cada mes, a les 23: 00 hores: c\u00f2pia de seguretat total.</li> <li>Tots els divendres a les 23: 00 hores: c\u00f2pia de seguretat diferencial des de la c\u00f2pia de dia 1.</li> <li>Tots els dies (excepte els divendres i el dia 1) a les 23:00 hores: c\u00f2pia de seguretat incremental des de la c\u00f2pia del dia anterior.</li> </ul> <p>Amb aquesta planificaci\u00f3 t'assegures el disposar de c\u00f2pies de seguretat di\u00e0ries. En cas d'error haur\u00e0s de recuperar la c\u00f2pia total, l'\u00faltima diferencial i totes les incrementals des de l'\u00faltima diferencial.</p> <p>\u2795 informaci\u00f3</p> <p>Enlla\u00e7 per realitzar c\u00f2pies de seguretat i restauraci\u00f3 a Windows (10 i 11).</p> <p>C\u00f2pies de seguretat a Windows.</p>"},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html","title":"1. Introducci\u00f3","text":"<p>En aquesta unitat, tractarem com organitzar-nos tant individualment i col\u00b7lectivament amb ClickUp. Per aix\u00f2, veurem alguna cosa de teoria sobre gesti\u00f3 de projectes (Project management), des del punt de vista que organitzar-nos, tant individualment com col\u00b7lectivament, \u00e9s com treballar en un projecte. Despr\u00e9s d'aix\u00f2, veurem el concepte de tauler Kanban i com aplicar els temes d'organitzaci\u00f3 mitjan\u00e7ant l'eina ClickUp.</p>"},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html#2-gestio-de-projectes-project-management","title":"2. Gesti\u00f3 de projectes (Project management)","text":""},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html#21-conceptes-previs","title":"2.1. Conceptes previs","text":"<p>Pr\u00e8viament a comen\u00e7ar, definirem aquests tres conceptes:</p> <ul> <li>Projecte: un projecte \u00e9s una planificaci\u00f3, que consisteix en un conjunt d' activitats a realitzar de manera articulada entre si, per tal de produir determinats b\u00e9ns o serveis capa\u00e7os de satisfer necessitats o resoldre problemes, dins dels l\u00edmits d' un pressupost i d' un per\u00edode de temps donats.</li> <li>Project Management: en catal\u00e0, \"Gesti\u00f3 de projectes\", \u00e9s la coordinaci\u00f3 dels processos, les eines, els equips, recursos i temps que prendran part en el desenvolupament del projecte.</li> <li>Project manager: en catal\u00e0, \"Cap de projectes\", \u00e9s una persona que t\u00e9 la responsabilitat general de l'inici, la planificaci\u00f3, el disseny, l'execuci\u00f3, el seguiment, el control i el tancament exitosos d'un projecte.</li> </ul> <p></p>"},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html#22-com-desenvolupem-un-projecte","title":"2.2. Com desenvolupem un projecte?","text":"<p>A l'hora de desenvolupar un projecte haurem de contestar a aquestes quatre preguntes:</p> <ul> <li>QU\u00c8 hem de fer.<ul> <li>Hem de definir l'objectiu o objectius que volem aconseguir amb el nostre projecte, per exemple, donar a con\u00e8ixer el nostre producte, ensenyar a fer una paella, crear un producte, fer un pla de prevenci\u00f3 de riscos, etc.</li> </ul> </li> <li>COM ho hem de fer.<ul> <li>Realitzarem la planificaci\u00f3 del nostre projecte, definint el cam\u00ed a seguir per aconseguir el nostre objectiu, aix\u00ed com les tasques o treballs a realitzar.</li> </ul> </li> <li>QUI s'encarregar\u00e0.<ul> <li>Un cop tinguem les tasques a realitzar les persones del nostre equip.</li> </ul> </li> <li>QUAN es far\u00e0 cada cosa.<ul> <li>Crearem el calendari del nostre projecte, veurem els temps de realitzaci\u00f3 de cada tasca, quan s'inicia, quan s'acaba i quines tasques s\u00f3n dependents d'altres.</li> </ul> </li> </ul> <p>\ud83d\udcd6 Important: \u00e9s important tenir en compte que l'organitzaci\u00f3 de qualsevol projecte ha de ser flexible, \u00e9s a dir, pel cam\u00ed poden sorgir imprevistos o problemes que facin que haguem de canviar elements, repensar decisions i/o moure el nostre calendari.</p>"},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html#23-lorganitzacio-individual-podria-ser-un-projecte-a-gestionar","title":"2.3. L'organitzaci\u00f3 individual podria ser un projecte a gestionar?","text":"<p>Hem posat aquest punt perqu\u00e8 us sigui f\u00e0cil relacionar la gesti\u00f3 de projectes amb l'organitzaci\u00f3 individual (que us organitzeu vosaltres mateixos) i l'organitzaci\u00f3 col\u00b7lectiva (que us organiqueu en conjunt).</p> <p>L'organitzaci\u00f3 individual (per exemple, anotar deures, dates d'examen, tasques de casa, esdeveniments importants, etc.) podria simplement ser considerat com un projecte \"de la nostra vida\" on nosaltres mateix el gestionem, sent el \"project manager\".</p> <p>L'organitzaci\u00f3 col\u00b7lectiva (on diversos individus s'organitzen), ja \u00e9s, per definici\u00f3, una gesti\u00f3 d'un projecte. En alguns casos, pot tenir alguna difer\u00e8ncia, com per exemple que no tingui \"Project manager\" o que tots siguin \"Project managers\".</p>"},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html#3-tableros-kanban","title":"3. Tableros Kanban","text":"<p>Kanban \u00e9s una paraula japonesa formada per Kan, que vol dir visual, i Ban, que significa targeta. Per tant, Kanban fa refer\u00e8ncia a les targetes visuals.</p> <p>Es tracta d'un m\u00e8tode visual de gesti\u00f3 de projectes que permet als equips visualitzar els seus fluxos de treball i la c\u00e0rrega de treball. \u00c9s un tauler que est\u00e0 organitzat per columnes on es mostren les tasques i la seva situaci\u00f3. M\u00e9s informaci\u00f3 a https://es.wikipedia.org/wiki/Kanban</p> <p>Tenim diferents models que s'adapten a les nostres necessitats, aix\u00ed tenim el tauler gen\u00e8ric amb el qual anem a treballar i altres.</p> <p>Tauler Gen\u00e8ric</p> <p></p> <p>Espec\u00edfic per a un projecte</p> <p></p> <p>\ud83d\udcd6 Important: els taulers Kanban s\u00f3n \u00fatils per a la gesti\u00f3 de projectes, per\u00f2 tamb\u00e9 poden ser \u00fatils per a l'organitzaci\u00f3 individual i col\u00b7lectiva.</p>"},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html#eina-clickup","title":"4. Eina ClickUp","text":""},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html#41-que-es-clickup","title":"4.1. Qu\u00e8 \u00e9s ClickUp?","text":"<p>Clickup https://clickup.com \u00e9s una eina per a la gesti\u00f3 de projectes i tasques. Funciona per a tot tipus d'equips, podent usar-se la mateixa aplicaci\u00f3 per planificar, organitzar i col\u00b7laborar. Aquesta eina ens ofereix documents, recordatoris, objectius, calendaris, planificaci\u00f3 d'horaris, etc.</p> <p>L'eina est\u00e0 desenvolupada tant per a gerents com per a equips de treball que volen treballar de manera m\u00e9s organitzada, intel\u00b7ligent i eficient amb una plataforma que els ajudi a gestionar el seu projecte.</p> <p>Per tant, podem resumir que \u00e9s un programari de Project Management, una plataforma senzilla i intu\u00eftiva per a la gesti\u00f3 de projectes i temps. Les seves principals caracter\u00edstiques s\u00f3n:</p> <ul> <li>Permet el registre al seu web de forma gratu\u00efta.</li> <li>Possibilitat de convidar m\u00e9s col\u00b7laboradors al teu projecte.</li> <li>Permet organitzar els teus espais de treball.</li> <li>Agregar etiquetes amb les quals portar\u00e0s el control dels teus espais.</li> <li>Crees les teves tasques, defineixes qui portar\u00e0 aquesta activitat i els seus temps d'entrega.</li> <li>Tens diferents vistes.</li> <li>Pots agregar tots els projectes que desitges</li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html#42-informacio-util-per-treballar-amb-clickup","title":"4.2. Informaci\u00f3 \u00fatil per treballar amb ClickUp","text":"<p>A continuaci\u00f3 indiquem alguns enlla\u00e7os \u00fatils que ens ajudaran a treballar amb ClickUp:</p> <ul> <li>Introducci\u00f3 a ClickUp: https://youtu.be/Sy2p7-GjGEI</li> <li>ClickUp i la seva jerarquia de treball: https://youtu.be/SIBCJ63YPFw</li> <li>ClickUp organitza els teus projectes i tasques: https://youtu.be/CBuhH_LF0yk</li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/UT_organitzacio_treball.html#5-a-partir-daqui-que","title":"5. A partir d'aqu\u00ed, qu\u00e8?","text":"<p>Doncs a partir d'aqu\u00ed ja hauries de:</p> <ul> <li>Con\u00e8ixer els conceptes b\u00e0sics sobre gesti\u00f3 de projectes.</li> <li>Con\u00e8ixer que \u00e9s un tauler Kanban.</li> <li>Ser capa\u00e7 de crear i gestionar un tauler Kanban (s'apr\u00e8n durant les pr\u00e0ctiques).<ul> <li>Pot ser tant un tauler Kanban \"en paper\" com un amb ClickUp o eines semblants.</li> </ul> </li> <li>Ser capa\u00e7 d'organitzar-se individualment i col\u00b7lectivament amb ClickUp (s'apr\u00e8n durant les pr\u00e0ctiques).</li> <li>Ser capa\u00e7 de gestionar projectes amb ClickUp (s'apr\u00e8n durant les pr\u00e0ctiques).</li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/aofcompprof.html","title":"Compet\u00e8ncies \"no acad\u00e8miques\"","text":""},{"location":"Moduls/ARXIU/2425/AOF/aofcompprof.html#real-decreto-16292009","title":"Real Decreto 1629/2009","text":""},{"location":"Moduls/ARXIU/2425/AOF/aofcompprof.html#article-5-competencies-professionals-personals-i-socials","title":"Article 5. Compet\u00e8ncies professionals, personals i socials.","text":"<p>Les compet\u00e8ncies professionals, personals i socials d'aquest t\u00edtol s\u00f3n les seg\u00fcents:</p> <ol> <li> <p>Administrar sistemes operatius de servidor, instal\u00b7lant i configurant el programari, en condicions de qualitat per assegurar el funcionament del sistema.</p> </li> <li> <p>Administrar serveis de xarxa (web, missatgeria electr\u00f2nica i transfer\u00e8ncia d'arxius, entre d'altres) instal\u00b7lant i configurant el programari, en condicions de qualitat.</p> </li> <li> <p>Administrar aplicacions instal\u00b7lant i configurant el programari, en condicions de qualitat per respondre a les necessitats de lorganitzaci\u00f3.</p> </li> <li> <p>Implantar i gestionar bases de dades instal\u00b7lant i administrant el programari de gesti\u00f3 en condicions de qualitat, segons les caracter\u00edstiques de lexplotaci\u00f3.</p> </li> <li> <p>Optimitzar el rendiment del sistema configurant els dispositius de maquinari d'acord amb els requisits de funcionament.</p> </li> <li> <p>Avaluar el rendiment dels dispositius de maquinari identificant possibilitats de millores segons les necessitats de funcionament.</p> </li> <li> <p>Determinar la infraestructura de xarxes telem\u00e0tiques elaborant esquemes i seleccionant equips i elements.</p> </li> <li> <p>Integrar equips de comunicacions en infraestructures de xarxes telem\u00e0tiques, determinant la configuraci\u00f3 per assegurar-ne la connectivitat.</p> </li> <li> <p>Implementar solucions d'alta disponibilitat, analitzant les diferents opcions del mercat, per protegir i recuperar el sistema davant de situacions imprevistes.</p> </li> <li> <p>Supervisar la seguretat f\u00edsica segons especificacions del fabricant i el pla de seguretat per evitar interrupcions en la prestaci\u00f3 de serveis del sistema.</p> </li> <li> <p>Assegurar el sistema i les dades segons les necessitats d\u00fas i les condicions de seguretat establertes per prevenir errors i atacs externs.</p> </li> <li> <p>Administrar usuaris dacord amb les especificacions dexplotaci\u00f3 per garantir els accessos i la disponibilitat dels recursos del sistema.</p> </li> <li> <p>Diagnosticar les disfuncions del sistema i adoptar les mesures correctives per restablir-ne la funcionalitat.</p> </li> <li> <p>Gestionar i/o realitzar el manteniment dels recursos de la seva \u00e0rea (programant-ne i verificant-ne el compliment), en funci\u00f3 de les c\u00e0rregues de treball i el pla de manteniment.</p> </li> <li> <p>Efectuar consultes, dirigint-se a la persona adequada i saber respectar l'autonomia dels subordinats, informant-ne quan sigui convenient.</p> </li> <li> <p>Mantenir l'esperit d'innovaci\u00f3 i actualitzaci\u00f3 en l'\u00e0mbit del seu treball per adaptar-se als canvis tecnol\u00f2gics i organitzatius del seu entorn professional.</p> </li> <li> <p>Liderar situacions col\u00b7lectives que es puguin produir, mitjan\u00e7ant conflictes personals i laborals, contribuint a establir un ambient de treball agradable i actuant en tot moment de manera sincera, respectuosa i tolerant.</p> </li> <li> <p>Resoldre problemes i prendre decisions individuals, seguint les normes i els procediments establerts, definits dins l'\u00e0mbit de la seva compet\u00e8ncia.</p> </li> <li> <p>Gestionar la carrera professional, analitzant les oportunitats d'ocupaci\u00f3, autoocupaci\u00f3 i d'aprenentatge.</p> </li> <li> <p>Participar de manera activa en la vida econ\u00f2mica, social i cultural amb actitud cr\u00edtica i responsable.</p> </li> <li> <p>Crear i gestionar una petita empresa, fent un estudi de viabilitat de productes, de planificaci\u00f3 de la producci\u00f3 i de comercialitzaci\u00f3.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/ExercicisBDDER.html","title":"Exercicis de BD.","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/ExercicisBDDER.html#diagrames-entitat-relacio","title":"Diagrames Entitat Relaci\u00f3","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/avaluacioConeixementsWord.html","title":"Avaluaci\u00f3 inicial de coneixements de processament de text","text":"<p>Utilitzant el processador de text amb el que m\u00e9s c\u00f2mode et sentis fes les seg\u00fcents activitats. Recorda fer captures per poder crear un pdf on quedi evid\u00e8ncies de les tasques fetes. Si no saps fer qualcun apartat, simplement posa l'enunciat i deixa'l en blanc.</p> <ol> <li>Estils de par\u00e0graf i car\u00e0cter: Crea un par\u00e0graf de 5 l\u00ednies (pots utilitzar aquest lloc web per generar les frases). A continuaci\u00f3 aplica-li estils de par\u00e0graf i car\u00e0cter predefinits i crea tu qualcun de nou.</li> <li>Inserir i formatar gr\u00e0fics: Cerca per internet un codi QR qualsevol i insereix-lo al document de text amb unes mides exactes de 2cms x 2cms. A continuaci\u00f3 crea un altre par\u00e0graf de text qualsevol i fes que el text envolti la imatge.</li> <li>\u00das de seccions: Utilitzant seccions crea una nova p\u00e0gina plena de text de proves per\u00f2 utilitzant dues columnes. A continuaci\u00f3 crea una nova secci\u00f3 amb text per\u00f2 amb la p\u00e0gina apaisada. Finalment crea una nova secci\u00f3 amb la p\u00e0gina amb format vertical i una sola columna. Omple-la de text de proves.</li> <li>Plantilles: Crea una plantilla a partir d'una ja existent i fes-li modificacions.</li> <li>Llistes multinivell: Crea una llista multinivell i personalitza els nivells de la llista.</li> <li>Taules avan\u00e7ades: Insereix una taula i aplica-li format avan\u00e7at com ara combinar cel\u00b7les, afegir ombrejat i utilitzar f\u00f3rmules dins de la taula.</li> <li>Refer\u00e8ncies i notes al peu: afegeix notes al peu i refer\u00e8ncies dins d'un text de proves.</li> <li>Marcadors i hipervincles: Afegeix marcadors en diferents parts del document i crea hipervincles per navegar entre aquests marcadors.</li> <li>Opcions de disseny de p\u00e0gina: Aplica diferents opcions de disseny de p\u00e0gina, com ara marges personalitzats, orientaci\u00f3 de p\u00e0gina i columnes.</li> <li>Revisi\u00f3 de documents: Utilitza les eines de revisi\u00f3 per comparar dues versions d'un document i generar un informe de les difer\u00e8ncies.</li> </ol> <p>Entrega el pdf seguint la nomenclatura i format habitual del curs.</p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exerciciBD01.html","title":"Exercici de Base de Dades amb LibreOffice Base - Gesti\u00f3 d'una Petita Biblioteca","text":"<p>Es tracta de crear una base de dades senzilla per gestionar els llibres, socis i pr\u00e9stecs d'una biblioteca utilitzant LibreOffice Base.</p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exerciciBD01.html#requisits","title":"Requisits:","text":"<ol> <li>Crea una base de dades nova anomenada <code>Biblioteca.odb</code>.</li> <li> <p>Dissenya les seg\u00fcents taules amb els camps indicats (defineix claus prim\u00e0ries i relacions):</p> <ul> <li> <p>Taula <code>LLIBRES</code>:</p> <ul> <li>ID_Llibre (Enter, clau prim\u00e0ria)</li> <li>T\u00edtol (Text, 100 car\u00e0cters)</li> <li>Autor (Text, 50 car\u00e0cters)</li> <li>G\u00e8nere (Text, 30 car\u00e0cters)</li> <li>AnyPublicaci\u00f3 (Enter)</li> <li>Disponible (S\u00ed/No)</li> </ul> </li> <li> <p>Taula <code>SOCIS</code>:</p> <ul> <li>ID_Soci (Enter, clau prim\u00e0ria)</li> <li>Nom (Text, 50 car\u00e0cters)</li> <li>Cognom (Text, 50 car\u00e0cters)</li> <li>Email (Text, 100 car\u00e0cters)</li> <li>Tel\u00e8fon (Text, 15 car\u00e0cters)</li> </ul> </li> <li> <p>Taula <code>PR\u00c9STECS</code>:</p> <ul> <li>ID_Pr\u00e9stec (Enter, clau prim\u00e0ria)</li> <li>ID_Llibre (Enter, clau forana)</li> <li>ID_Soci (Enter, clau forana)</li> <li>Data_Pr\u00e9stec (Data)</li> <li>Data_Retorn (Data)</li> <li>Estat (Text: \"Pendent\", \"Tornat\", \"Endarrerit\")</li> </ul> </li> </ul> </li> <li> <p>Relacions:</p> <ul> <li>Estableix una relaci\u00f3 \"1 a Molts\" entre <code>SOCIS</code> i <code>PR\u00c9STECS</code> (un soci pot tenir m\u00faltiples pr\u00e9stecs).</li> <li>Estableix una relaci\u00f3 \"1 a Molts\" entre <code>LLIBRES</code> i <code>PR\u00c9STECS</code> (un llibre pot estar en m\u00faltiples pr\u00e9stecs, per\u00f2 nom\u00e9s un a la vegada si est\u00e0 disponible).</li> </ul> </li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exerciciBD01.html#tasques-a-realitzar","title":"Tasques a Realitzar:","text":"<ol> <li>Insereix dades de prova a les taules (m\u00ednim 5 llibres, 3 socis i 4 pr\u00e9stecs).</li> <li>Crea un formulari per afegir nous socis.</li> <li>Dissenya una consulta que mostri els llibres actualment prestats amb el nom del soci i la data de retorn.</li> <li>Crea un informe que llisti tots els pr\u00e9stecs endarrerits (data de retorn passada i estat \"Pendent\").</li> </ol> <p>Addicional: - Afegeix un camp <code>Multa</code> a la taula <code>PR\u00c9STECS</code> i calcula-la autom\u00e0ticament (0,50\u20ac per dia d'endarreriment).</p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exerciciBDexamen.html","title":"exerciciBDexamen","text":"<p>classDiagram</p> <pre><code>class Supermercat {\n    +id: int (PK)\n    +nom: string\n    +ubicaci\u00f3: string\n}\n\nclass Producte {\n    +id: int (PK)\n    +nom: string\n    +preu: float\n    +stock: int\n    +categoria: string\n}\n\nclass Client {\n    +id: int (PK)\n    +nom: string\n    +email: string\n    +adre\u00e7a: string\n    +tel\u00e8fon: string\n}\n\nclass Prove\u00efdor {\n    +id: int (PK)\n    +nom: string\n    +NIF: string\n    +tel\u00e8fon: string\n}\n\nSupermercat \"1\" -- \"1..*\" Producte : Ven\nSupermercat \"0..*\" -- \"1..*\" Client : At\u00e9n\nProve\u00efdor \"1\" -- \"0..*\" Producte : Subministra\nClient \"1\" -- \"0..*\" Producte : Compra\n</code></pre>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exerciciPresentacions_plantilles2.html","title":"Exercicis patrons de diapositives","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exerciciPresentacions_plantilles2.html#utilitzar-patrons-de-diapositives","title":"Utilitzar patrons de diapositives","text":"<p>Dissenya un patr\u00f3 de diapositives com l'utilitzat a la presentaci\u00f3 que veus a continuaci\u00f3. Tingues present les imatges, el peu de diapositiva i les propietats de font i par\u00e0graf.</p> <p>Posteriorment crea una presentaci\u00f3 semblant a la de l'exemple.</p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exerciciVIDEOCLUB.html","title":"Exercici BD Videoclub","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exerciciVIDEOCLUB.html#disseny-duna-base-de-dades-completa-per-a-un-videoclub","title":"Disseny d'una base de dades completa per a un videoclub.","text":"<p>Heu de dissenyar una base de dades completa que contindr\u00e0 tres taules per al desenvolupament habitual de la activitat d'un videoclub.</p> <ol> <li>Creeu una nova base de dades assignant-li el nom Videoclub.</li> <li>Afegeixi una nova taula, de nom Peliculas, en mode Vista disseny que contingui els seg\u00fcents camps:</li> </ol> <p></p> <ol> <li>Assigni les propietats que consideri adequades a tots els camps.</li> <li>Afegeixi una nova taula, de nom Socios, en mode Vista disseny que contingui els seg\u00fcents camps:</li> </ol> <p></p> <ol> <li>Assigni les propietats que consideri adequades a tots els camps.</li> <li>Afegeixi una nova taula, de nom Distribudores, en mode Vista disseny que contingui els seg\u00fcents camps:</li> </ol> <p></p> <ol> <li>Assigni les propietats que consideri adequades a tots els camps.</li> <li>Relacioni les tres taules aplicant integritat referencial.</li> <li>Ompli amb dades les tres taules. Els de les pel\u00b7l\u00edcules es poden obtenir f\u00e0cilment de diversos llocs web d'Internet.</li> <li>Dissenyi les seg\u00fcents consultes per a la taula de Pel\u00b7l\u00edcules.<ul> <li>Pel\u00b7l\u00edcules d'un g\u00e8nere (haur\u00e0 de demanar el g\u00e8nere).</li> <li>Pel\u00b7l\u00edcules de m\u00e9s de dues hores de durada.</li> <li>Pel\u00b7l\u00edcules en qu\u00e8 intervingui un actor o una actriu com a protagonista (haur\u00e0 de preguntar l'actor o l'actriu).</li> <li>Pel\u00b7l\u00edcules en versi\u00f3 original (angl\u00e8s) i subtitulades (en qualsevol idioma).</li> <li>Pel\u00b7l\u00edcules llogades.</li> <li>Pel\u00b7l\u00edcules per a nens, no llogades.</li> <li>Pel\u00b7l\u00edcules d'humor de m\u00e9s d'hora i mitja de durada.</li> </ul> </li> <li>Dissenyi les seg\u00fcents consultes per a la taula de Socis.<ul> <li>Socis amb m\u00e9s d'un any d'antiguitat.</li> <li>Socis majors de 18 anys.</li> <li>Socis que no visquin a prop (considerarem a prop als que es trobin dins del mateix codi postal que nosaltres).</li> </ul> </li> <li>Dissenyi les seg\u00fcents consultes per a la taula Distribuidores.<ul> <li>Distribu\u00efdores espanyoles.</li> <li>Distribu\u00efdores amb adre\u00e7a web a Internet.</li> <li>Adre\u00e7a de correu electr\u00f2nic del nostre contacte en una distribu\u00efdora (haur\u00e0 de preguntar-nos el nom d'aquesta persona).</li> </ul> </li> <li>Dissenyi les seg\u00fcents consultes que extreguin la seva informaci\u00f3 de dues o m\u00e9s taules de la base de dades:<ul> <li>Pel\u00b7l\u00edcules que hagi llogat un soci (ha de preguntar el nom complet del soci i mostrar el t\u00edtol i codi de la pel\u00b7l\u00edcula).</li> <li>Nom i n\u00famero de tel\u00e8fon del soci que tingui llogada una pel\u00b7l\u00edcula (ha de preguntar el t\u00edtol de la pel\u00b7l\u00edcula).</li> <li>Dades dels socis que van llogar una pel\u00b7l\u00edcula ahir.</li> <li>Dades dels socis que van llogar una pel\u00b7l\u00edcula en versi\u00f3 original ahir.</li> <li>Dades de la distribu\u00efdora a la qual pertany una pel\u00b7l\u00edcula (ha de preguntar el t\u00edtol de la pel\u00b7l\u00edcula).</li> </ul> </li> <li>Dissenyi tres formularis que tinguin un aspecte uniforme per a cada taula de la base de dades.</li> <li>Dissenyi diversos informes sobre consultes anteriors.</li> <li>Dissenyi un informe d'etiquetes postals per als socis de m\u00e9s de dos anys d'antiguitat.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP.html","title":"Pr\u00e0ctiques i exercicis amb GIMP","text":"<ul> <li> <p> Exercici 1 Eines de rotar i inclinar</p> </li> <li> <p> Exercici 2 Convertir a Blanc i Negre</p> </li> <li> <p> Exercici 3 Composici\u00f3 amb capes</p> </li> <li> <p> Exercici 4 Una ombra</p> </li> <li> <p> Exercici 5 Colorejar un dibuix</p> </li> <li> <p> Exercici 6 Clonaci\u00f3</p> </li> <li> <p> Exercici 7 Fotomuntatge</p> </li> <li> <p> Exercici 8 Cirurgia est\u00e8tica amb GIMP</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP01.html","title":"PR\u00c0CTICA 1.","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP01.html#eines-de-rotar-i-inclinar","title":"EINES DE ROTAR I INCLINAR","text":"<p>1. EINA ROTAR:</p> <p></p> <p> Eina per rotar la capa, selecci\u00f3 o ruta Tecla Abreujada: Maj\u00fascules + R</p> <p>Seleccionem la caixa inferior (per exemple, utilitzant l'eina \"tisores intel\u00b7ligents).</p> <p></p> <p>Ara la puc girar. En aquest cas la girar\u00e9 45 graus</p> <p></p> <p>Li dono a rotar i llest:</p> <p></p> <p>2. EINA INCLINAR:</p> <p> Eina per inclinar la capa, selecci\u00f3 o ruta Tecla Abreujada: Maj\u00fascules + H</p> <p>Utilitzant la mateixa selecci\u00f3 de la fotografia anterior. Seleccionem l'eina Inclinar i diem quant volem cisallar:</p> <p></p> <p>I aqu\u00ed tenim el resultat:</p> <p></p> <p>Desa amb el nom AOFGIMP01_llinatge_nom.jpg</p> Fitxer exercici1 <p> exercici1.jpg </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP02.html","title":"PR\u00c0CTICA 2.","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP02.html#convertir-a-blanc-i-negre","title":"CONVERTIR A BLANC I NEGRE","text":"<p>Aquest exercici \u00e9s summament senzill.</p> <p>PROCEDIMENT</p> <p>1. Partim d'una imatge en color. (Trobar\u00e0s l'enlla\u00e7 abaix en aquesta p\u00e0gina)</p> <p></p> <p>2. Fem \u00fas de l'eina DESATURAR, a la qual arribem des de Color.</p> <p></p> <p>3. Apliquem i ja est\u00e0.</p> <p>Desa amb el nom AOFGIMP02_llinatge_nom.jpg</p> Fitxer exercici2 <p> exercici2.png </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP03.html","title":"PR\u00c0CTICA 3","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP03.html#una-composicio-amb-capes","title":"UNA COMPOSICI\u00d3 AMB CAPES","text":"<p>En aquesta pr\u00e0ctica utilitzarem diverses imatges per compondre la seg\u00fcent, mitjan\u00e7ant la utilitzaci\u00f3 de diferents capes.</p> <p>En primer lloc has d'obtenir els arxius que estan abaix en aquesta p\u00e0gina.</p> <ol> <li>Obre GIMP i totes les imatges que acabes de guardar. Les quatre imatges es mostren cadascuna a la seva Finestra imatge. Primer has de treballar amb la imatge \"ovelles.xcf\", que la far\u00e0s servir de fons per anar col\u00b7locant-hi la resta de les imatges.</li> <li>Comen\u00e7a per col\u00b7locar la imatge del ca dins la Finestra Imatge de l'arxiu \"ovelles.xcf\", arrossegant-la des de la imatge de previsualitzaci\u00f3.    Un cop oberta la imatge del gos a la Finestra Imatge que cont\u00e9 la imatge de les ovelles pots observar que la capa del gos \u00e9s molt gran en relaci\u00f3 a la imatge de les ovelles.</li> <li>Per solucionar la mida desproporcionada del ca, escalarem la capa. Per tant, selecciona la capa i fes clic amb el bot\u00f3 dret del ratol\u00ed sobre la paleta de Capes i tria Ajusta la mida de la capa, escriu 200 p\u00edxels com a valor d'amplada i polsa Acceptar. Comprova que el ca ja hi cap a la imatge.</li> <li>Ara canviarem el ca de manera que es quedi gos mirant cap a l'esquerra per compensar una mica la imatge. Selecciona l'eina de volteig a la Caixa d'eines i posa el punter del ratol\u00ed damunt la imatge del gos, despr\u00e9s d'haver comprovat a les Opcions d'eina que tens seleccionada l'opci\u00f3 Horitzontal.</li> <li>Mou la capa que cont\u00e9 el ca fins a col\u00b7locar-la al petit monticle que hi ha a sota. Tria l'eina Mou, fes clic a la Finestra imatge sobre el gos i, utilitzant les fletxes del teclat, mou la capa fins a col\u00b7locar-la al lloc correcte.</li> <li>Guarda el treball en el format nadiu de GIMP com a \"guardia.xcf\". Anem a afegir altres capes. Fes clic amb el bot\u00f3 dret sobre una capa activa a la Finestra capes i selecciona Capa nova... Crea una capa amb fons blanc i mida 270x75 p\u00edxels, posa-li per nom \"Fons text1\". En pressionar sobre Acceptar, la nova capa queda situada a la part superior esquerra de la nostra Finestra.</li> <li>Tria l'eina Selecci\u00f3 rectangular, a les Opcions d'aquesta eina selecciona Difumina les vores amb un radi de 15 i, tamb\u00e9, marca l'opci\u00f3 Vores arrodonides amb un valor de 5. Ara fes una selecci\u00f3 rectangular sobre la nova capa creada, deixant un petit marge exterior. M\u00e9s endavant ens permetr\u00e0 crear un difuminat de la selecci\u00f3 realitzada.</li> <li>Si fas clic amb el bot\u00f3 dret sobre la imatge i tries Seleccionar \u2192 Invertir, la part seleccionada passa a ser l'exterior al rectangle. Ara amb el bot\u00f3 dret del ratol\u00ed tria Editar \u2192 Netejar (Supr). La zona seleccionada queda esborrada. Treu la selecci\u00f3 (men\u00fa Seleccionar \u2192 Cap) per poder seguir treballant en la imatge. El resultat pots observar-lo a continuaci\u00f3. Guarda la feina.</li> </ol> <p></p> <ol> <li>Duplica l'\u00faltima capa creada i posa-li per nom \"Fons text 2\". Ara utilitzar\u00e0s una de les dues capes per posar a sobre un text. Coloreja una d'elles de color groc clar i posa-li el nom \"Fons text 2\". Selecciona la capa i fes clic a Bloquejar transpar\u00e8ncia, cosa que et permetr\u00e0 tacar de color tot el contingut de la capa que no sigui totalment transparent.    Recorda on hi ha el bot\u00f3 Bloquejar transpar\u00e8ncia </li> <li>Selecciona el color de primer pla fent clic a  i tria el valor hexadecimal e8f963.</li> <li>Posar guies. Per tenir un major control sobre els elements que formen part de la imatge afegirem unes L\u00ednies Guies. Recorda que has de fer clic sobre la regla vertical o horitzontal i arrossegar fins a col\u00b7locar la L\u00ednia Guia en la seva posici\u00f3.</li> <li>Col\u00b7loca dues Guies horitzontals en les posicions 135 i 340; i altres dues verticals en els p\u00edxels 20 i 580. Pots orientar-te per les coordenades que va mostrant la barra d'estat de la Finestra. Si trobes moltes dificultats per a col\u00b7locar les guies d'aquesta manera, recorda que pots col\u00b7locar guies accedint al men\u00fa Imatge \u2192 Guies \u2192 Guia nova.</li> <li>Mou la capa \"Fons text 2\" que has pintat de groc, a la l\u00ednia guia m\u00e9s baixa, encaixant-la entre les dues l\u00ednies guies, i l'altra capa \"Fons text 1\" a la m\u00e9s alta, tamb\u00e9 encaixant-la. Guarda el treball.</li> <li>Transpar\u00e8ncia de les capes. Posarem transpar\u00e8ncia a aquestes dues capes, at\u00e8s que seran el fons del text que afegirem a continuaci\u00f3. D'aquesta manera semblaran m\u00e9s integrades en la imatge i no un pegot sobre ella. Selecciona cadascuna de les capes a la Finestra capes i col\u00b7loca un valor de 60 en Opacitat a cadascuna d'elles.</li> <li>Ara col\u00b7loca el text. Recorda que tens dues imatges, \"text1.xcf\" i \"text2.xcf\", que has descarregat abans. Porta la imatge de l'arxiu \"texto1.xcf\" a \"ovelles.xcf\" (el llen\u00e7 on estam treballant). Concretament has de moure la capa anomenada \"Text\" i alliberar-la al llen\u00e7 que estam editant. Canvia el nom de la capa a \"Text1\". Despr\u00e9s fes el mateix amb l'altra imatge \"text2.xcf\", arrossega la capa \"Text\" i en la imatge composta ll\u00e0mala \"Text2\".</li> <li>Col\u00b7loca ara cadascun dels textos damunt les capes corresponents. Com que el text ocupa un major espai que el fons, has d'augmentar la mida de les capes \"Fons text 1\" i \"Fons text 2\". Selecciona la primera d'elles, fes clic amb el bot\u00f3 dret sobre ella i tria Ajusta la mida de la capa. Canvia la seva amplada per 300 p\u00edxels. Fes el mateix amb l'altra capa, en aquest cas posa 390 d'ample, per\u00f2 desmarcant la Relaci\u00f3 1:1 perqu\u00e8 es mantinguin els 75 p\u00edxels originals d'al\u00e7ada. Si les capes queden fora de les guies torna a col\u00b7locar-les en elles.</li> <li>Has d'alinear les capes del fons amb cadascuna de les capes de text. Deixa nom\u00e9s visibles les capes \"Text2\" i \"Fons text 2\". A la Caixa d'eines tria l'eina Alinea.</li> <li>A la Finestra Capes, activa la capa \"Fons text 2\". Accedeix a la Finestra Imatge i fes clic a la capa \"Fons text 2\"; pressiona la tecla Majus i sense amollar-la, fes clic sobre la capa \"Text2\" a la Finestra imatge.</li> <li>Estan seleccionades, per a la seva alineaci\u00f3, les dues capes que han de compondre aquest t\u00edtol. Ara has de fixar en les Opcions de l'eina Alinea, sota la Caixa d'eines, les seg\u00fcents opcions.</li> </ol> <p></p> <ol> <li>Per alinear les capes seleccionades primer hem de fer clic al bot\u00f3 d'alineaci\u00f3 ombrejat en verd i, despr\u00e9s, al bot\u00f3 d'alineaci\u00f3 ombrejat en vermell. Despr\u00e9s d'aquest proc\u00e9s les dues capes han de quedar situades com es mostra en la seg\u00fcent imatge.</li> <li>Per evitar que es moguin accidentalment aquestes dues capes i perdin l'alineaci\u00f3, les has d'enlla\u00e7ar.     Fes clic a la zona on es veu l'esgla\u00f3 de la cadena (normalment no \u00e9s visible l'esgla\u00f3) i aconsegueixes que les dues capes quedin enlla\u00e7ades i que puguis aplicar sobre elles algunes eines, per exemple Moure.     Guarda el treball.</li> <li>Combina aquestes dues capes visibles per formar-ne una de sola i que no es puguin modificar.</li> <li>Repeteix el proc\u00e9s per a les altres dues capes que formen l'altre text. Alinea i combina les altres dues capes. </li> <li>Fes visibles totes les capes i guarda en el format nadiu de GIMP el treball.</li> <li>Per concloure has d'Aplanar la imatge i exportar-la en format JPG, acceptant totes les opcions que venen per defecte. At\u00e8s que existeix una vista pr\u00e8via de la imatge a guardar, pots anar canviant les diferents caracter\u00edstiques d'Exportar com a JPEG per comprovar-ho.</li> </ol> <p>Aquesta imatge mostra com hauria de quedar:</p> <p></p> Fitxers exercici3 <p> ca_sol.xcf ovelles.xcf text1.xcf text2.xcf </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP04.html","title":"PR\u00c0CTICA 4","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP04.html#una-ombra","title":"UNA OMBRA","text":"<p>Amb el senzill procediment que mostrarem a continuaci\u00f3, podem crear una ombra que podem anomenar ombra projectada, que simula la que tindria un objecte il\u00b7luminat per una font llunyana. Farem servir el ninot de la foto que pots trobar abaix a aquesta p\u00e0gina.</p> <p>1. Crear una ombra projectada</p> <p>1r Obrim la imatge \"exercici4.jpg\" a GIMP i posem el Zoom al 100%. El primer que farem \u00e9s obtenir una capa que contingui exclusivament el ninot. Utilitzant l'eina de selecci\u00f3 que creguis convenient realitza una selecci\u00f3 de tot el ninot. Seleccionar --Invertir i esborrem la selecci\u00f3 inversa per obtenir exclusivament el ninot.</p> <p>2n A\u00efllem el ninot en una capa nova, invertim la selecci\u00f3 copiem i enganxem en una capa nova. Portem la Capa a mida imatge i esborrem qualsevol resta d'imatge que hagi quedat a la capa de fons perqu\u00e8 sigui totalment blanca.</p> <p>3r Les ombres solen crear-se amb una c\u00f2pia de l'objecte que volem crear l'ombra. Duplica la capa \"ninot\" arrossegant la miniatura de la capa \"ninot\" sobre el s\u00edmbol de duplicar capa, obtenim la capa \"C\u00f2pia de ninot\". Marquem Mantenir transpar\u00e8ncia en aquesta capa i farcim de negre.</p> <p>4t Canviem el nom a la capa \"C\u00f2pia de ninot\" per \"ombra\" i la posem sota la capa \"ninot\".</p> <p>5\u00e8 Per poder situar de forma m\u00e9s adequada l'ombra ampliarem la mida del llen\u00e7 sobre el qual estem treballant. Imatge --; Grand\u00e0ria del llen\u00e7, 700 p\u00edxels d'alt i situem el llen\u00e7 primitiu en la situaci\u00f3 que s'observa:</p> <p>Si el fons queda amb zones transparents emplena-les amb el color blanc, despr\u00e9s de portar totes les capes a Mida imatge.</p> <p>6\u00e8 Enllacem les capes \"ninot\" i ombra i les movem a la part inferior esquerra de la Finestra Imatge.</p> <p>7\u00e8 Creem un degradat per emplenar la capa de fons i separar la nostra imatge del fons.</p> <p>Construcci\u00f3 i edici\u00f3 de degradats</p> <p>A la part inferior de la Finestra Capes, Canals, Rutes... tenim la pestanya d'acc\u00e9s a l'elecci\u00f3 de gradients o degradats, i un cop all\u00e0 uns botons per administrar els degradats de qu\u00e8 disposem.</p> <p>Els botons, d'esquerra a dreta, serveixen per a:</p> <p>- Editar el degradat seleccionat.</p> <p>- Crear un nou degradat.</p> <p>- Duplicar el degradat seleccionat.</p> <p>- Esborrar el degradat seleccionat.</p> <p>- Refrescar la paleta de degradats, perqu\u00e8 apareguin els que anem creant.</p> <p>No es poden esborrar els degradats que venen per defecte, nom\u00e9s aquells que dupliquem o creiem.</p> <p>8\u00e8 Ens fiquem de ple amb l'ombra. Seleccionem la capa \"ombra\" i fem invisible la capa \"ninot\". Les vores de l'ombra semblen una mica artificials, els donarem un aspecte m\u00e9s real amb un filtre (primer desactiva l'opci\u00f3 Mantenir transpar\u00e8ncia). Filtre -- Soroll -- Escampar per HSV amb valor 2.</p> <p>9\u00e8 Distorsionem l'ombra per col\u00b7locar-la com una ombra natural cap a la dreta. Eines -- Eines de transformaci\u00f3 -- Perspectiva.</p> <p>10\u00e8 L'ombra \u00e9s una mica dura per la part superior, l'esvairem una mica. Activem el mode M\u00e0scara r\u00e0pida i emplenem des de dalt a baix. Desactivem M\u00e0scara r\u00e0pida i esborrem la selecci\u00f3 produ\u00efda.</p> <p>11\u00e8 Desenfoquem l'ombra perqu\u00e8 en realitat les ombres es fan m\u00e9s borroses a mesura que s'allunyen del ninot. Apliquem un desenfocament gaussi\u00e0 amb un valor alt, per exemple 25.</p> <p>12\u00e8 Per concloure baixarem l'opacitat de la capa ombra al 60% perqu\u00e8 sigui el m\u00e9s real possible. El resultat final s'observa a continuaci\u00f3.</p> <p></p> <p>Desa amb el nom AOFGIMP04_llinatge_nom.jpg</p> Fitxer exercici4 <p> exercici4.jpg </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP05.html","title":"PR\u00c0CTICA 5","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP05.html#colorejar-un-dibuix","title":"COLOREJAR UN DIBUIX","text":"<p>Comencem a pintar el nostre dibuix.</p> <p>1r Obrim la imatge \"ex5_1.jpg\" i la situem a la nostra pantalla de manera que ens permeti accedir a les diferents finestres de GIMP. Veiem que la imatge t\u00e9 una certa \"brut\u00edcia\" producte de l'escanejat a Escala de grisos. Augmentarem el contrast de la imatge perqu\u00e8 desapareguin els diferents tons de gris i obtinguem un dibuix amb l\u00ednies negres sobre el paper blanc. Eines -- Eines de color -- Brillantor i contrast; modificant el valor del contrast podem aconseguir que nom\u00e9s quedin les l\u00ednies negres.</p> <p>2n Comen\u00e7arem a omplir les diferents zones de la imatge amb colors s\u00f2lids i degradats. Per manejar correctament la imatge crearem una capa c\u00f2pia de la que tenim com a base de la imatge. Anomenem aquesta nova capa \"farcits\". La imatge est\u00e0 en Mode Escala de grisos, convertim-la a mode RGB.</p> <p>3r El proc\u00e9s per emplenar les diferents parts de la imatge ser\u00e0 similar, primer farem una selecci\u00f3 i emplenarem aquesta selecci\u00f3 amb un color s\u00f2lid amb l'eina Omplir amb un color o patr\u00f3. Recordarem les opcions d'aquesta eina.</p> <ul> <li>Primer hem de seleccionar el tipus de farciment que utilitzarem: pot ser el color que tinguem de fons, el de front o el patr\u00f3 seleccionat a la Caixa d'eines.</li> <li>Podem omplir amb un color totalment opac o amb cert nivell d'opacitat, aix\u00ed com el mode de combinaci\u00f3 del color a la capa que estiguem.</li> <li>Podem triar Omplir per colors similars (aquests colors s'ajustaran a la secci\u00f3 inferior) o emplenar la selecci\u00f3 completament sense atendre colors.</li> <li>Finalment, tenim la secci\u00f3 on podem configurar les caracter\u00edstiques de la similitud de colors a l'hora d'emplenar una selecci\u00f3.</li> </ul> <p>4t Comencem emplenant jaqueta del nostre personatge. Seleccionem amb la Vareta m\u00e0gica la jaqueta i emplenem amb el color de front (sent aquest color el que respon a la Notaci\u00f3 HTML: bd480f).</p> <p>Potser la nostra selecci\u00f3 s'ha est\u00e8s m\u00e9s del compte i en omplir ens ha passat el seg\u00fcent:</p> <p></p> <p>Aix\u00f2 \u00e9s degut a que les l\u00ednies negres que formen el nostre dibuix tenen forats per on \"escapa\" la selecci\u00f3 i amb ella el farcit de color. Si ha passat aix\u00f2, ens hem d'apropar amb l'eina Zoom a tota la l\u00ednia i tancar les l\u00ednies que ens trobem obertes.</p> <p></p> <p></p> <p>Amb l'eina Llapis i amb color negre tanquem els buits que vegem.</p> <p>5\u00e8 Amb els buits ja tancats comencem a emplenar la zona corresponent a la jaqueta. Farcim amb el color indicat per\u00f2 amb una opacitat del 90%. La zona corresponent als pantalons l'omplirem amb la mateixa opacitat per\u00f2 amb un color blav\u00f3s. Hem de crear una nova capa per a cada zona emplenada i tenir, posteriorment, un control m\u00e9s gran de cada zona.</p> <p>6\u00e8 Omplim la zona corresponent a les botes amb color gaireb\u00e9 negre (491902).</p> <p>7\u00e8 La zona corresponent a la vora de la bufanda la farcirem amb un degradat, la forma de farciment de degradat ser\u00e0 \"lineal\" i el degradat a emplenar pot ser el \"Rumanian flag smooth\". De l'un extrem a l'altre.</p> <p>8\u00e8 La nostra imatge va prenent color encara que podem notar que a les unions hi ha zones que no s'han omplert correctament. Per evitar-ho hem d'utilitzar l'eina \"Taca\"  i emprar-la a totes les zones on passi. Podem apropar-nos fins al m\u00e9s m\u00ednim detall ampliant el Zoom, fins que observem els p\u00edxels i guixar amb el color dels situats al voltant.</p> <p>9\u00e8 Omplim la resta de la bufanda amb el mateix degradat i per a la cara podem utilitzar un color que respon al valor #ffb793, selecciona colors al teu gust per la gorra i els cabells.</p> <p></p> <p>10\u00e8 Podem combinar totes les capes que hem creat per acolorir. Crearem un fons degradat. Seleccionem tota la zona blanca posterior al dibuix i l'esborrem. Creem una capa que situem darrere del dibuix i l'emplenem amb gradient. Creem un gradient de l'estil del seg\u00fcent:</p> <p></p> <p>11\u00e8 Emplenem amb l'opci\u00f3 \"lineal\" per obtenir:</p> <p></p> <p>12\u00e8 Sobre la capa en qu\u00e8 ha quedat el dibuix crearem una ombra per destacar el dibuix del fons. Podem utilitzar el Script-Fu de \"Ombra base\" amb un despla\u00e7ament de 5 a cada eix. El resultat final es pot veure a la seg\u00fcent imatge.</p> <p></p> <p>Desa amb el nom AOFGIMP05_llinatge_nom.bmp</p> Fitxer exercici5 <p> ex5_1.jpg </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP06.html","title":"PR\u00c0CTICA 6.","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP06.html#clonacio","title":"CLONACI\u00d3","text":"<p>Aquesta pr\u00e0ctica consta de diversos exercicis</p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP06.html#exercici-1-eliminar-objectes-duna-imatge","title":"Exercici 1. Eliminar objectes d\u2019una imatge","text":"<p>En aquest exercici aprendrem a utilitzar l'eina de clonaci\u00f3 per eliminar objectes presents en una fotografia. Farem servir una imatge en qu\u00e8 apareixen diversos vaixells i l'objectiu \u00e9s eliminar la major quantitat possible de vaixells de la mateixa.</p> <p></p> <p>PROCEDIMENT:</p> <p>1. Guardar la imatge dels vaixells de dalt al disc dur i obrir-la amb Gimp.</p> <p>2. A continuaci\u00f3 seleccionem l'eina de clonat amb l'opacitat al 50% i activant l'esva\u00efment.</p> <p></p> <p>3. Premeu Ctrl i feu clic amb el bot\u00f3 esquerre del ratol\u00ed en una zona d'aigua propera al vaixell que volem eliminar.</p> <p></p> <p>4. Deixem anar Ctrl i anem fent clic sobre el vaixell a eliminar fins aconseguir la seva desaparici\u00f3. Amb paci\u00e8ncia i tra\u00e7a aconseguir\u00e0s grans resultats.</p> <p></p> <p>6.  Desa amb el nom AOFGIMP06_1_llinatge_nom.jpg</p> <p></p> Fitxer pr\u00e0ctica 6 exercici 1 <p> ex6_1_1.jpg </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP06.html#exercici-2-reduir-i-eliminar-objectes-duna-imatge","title":"Exercici 2. Reduir i eliminar objectes d\u2019una imatge","text":"<p>En aquesta activitat es far\u00e0 desapar\u00e8ixer una zona de la imatge per mitj\u00e0 de la \u201cclonaci\u00f3\u201d. Es disposa de la imatge inferior (piraguisme.xcf) i es vol fer desapar\u00e8ixer-ne un tros, sense que es noti que hi era.</p> <p></p> <p>1\u00ba Tenim una imatge i volem fer-ne desapar\u00e8ixer un tros, sense que es noti que hi era.</p> <p>Suposem tenim aquesta imatge de la dreta i volem quedar-nos amb un tros nom\u00e9s i treure algunes cosetes que sobren.  Si sabem que realment no volem la resta de la imatge i volem retallar-la directament,  tenim l'eina de retallada.</p> <p>2n Quedar-se amb l'\u00e0rea tallada; fer doble clic dins la selecci\u00f3.</p> <p>3r Seleccionar l'eina clonar  amb opacitat a la meitat i esva\u00efment seleccionat per esborrar els trossos de gent que es veuen a dalt de la imatge. Aix\u00f2 s'aconsegueix copiant un trosset d'aigua (amb la tecla CTRL pressionada) i \u201cclonant-lo\u201d a les parts que es volen eliminar.</p> <p></p> <p></p> <p>4t A poc a poc i amb paci\u00e8ncia, es va esborrant a la gent, fins aconseguir l'efecte desitjat. Si vols fer Zoom per retocar a fons zones de la imatge, fes tecleja + i si en qualsevol moment vols tornar a la imatge a mida natural , tecleja 1</p> <p>5\u00e8 Amb l'eina de desenfocament o gota d'aigua, difuminar l'entorn perqu\u00e8 el focus es fixi en els remers del primer pla (l'eina de gota t\u00e9 un par\u00e0metre de taxa, amb qu\u00e8 es pot jugar, per desenfocar m\u00e9s o menys) .</p> <p> </p> <p>6\u00e8  Finalment deseu la imatge com a AOFGIMP06_2_llinatge_nom.jpg</p> <p></p> Fitxer pr\u00e0ctica 6 exercici 2 <p> ex6_2_1 </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP06.html#exercici-3-treure-zones-amb-leina-de-clonar","title":"Exercici 3  Treure zones amb l'eina de clonar","text":"<p>Aquest \u00e9s un exemple molt clar perqu\u00e8 practiquis pel teu compte com treure zones. Tamb\u00e9 cal dir que la foto \u00e9s molt f\u00e0cil de retocar.</p> <p>Sense fer molta feina, mirar el que podem obtenir</p> <p></p> <p> Deseu la imatge resultant com a AOFGIMP06_3_llinatge_nom.png</p> <p>Amb l'eina de clonar , r\u00e0pidament podem treure el cam\u00ed. Seleccionem en una zona d'arbres amb el control i despr\u00e9s deixem el control i anem emplenant el cam\u00ed amb cura. Segons anem movent-nos tornem a seleccionar amb el control una altra zona propera al cam\u00ed, i tornem a pintar.</p> Fitxer pr\u00e0ctica 6 exercici 3 <p> ex6_3_1 </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP06.html#exercici-4-treure-zones-amb-leina-de-clonar","title":"Exercici 4 Treure zones amb l'eina de clonar","text":"<p>En aquest cas de baix anem a esborrar l'ombra amb l'eina de clonar.</p> <p></p> <p>Per aix\u00f2 fem el mateix que abans. Seleccionem una part que volem copiar (l'herba) i amb paci\u00e8ncia anem enganxant a l'ombra.</p> <p>Aqu\u00ed tenim el resultat de com hauria de quedar.</p> <p></p> <p> Desa amb el nom AOFGIMP06_4_llinatge_nom.webp</p> Fitxer pr\u00e0ctica 6 exercici 4 <p> ex6_4_0 </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP06.html#exercici-5","title":"Exercici 5","text":"<p>Fes desapar\u00e8ixer els cables d'electricitat de la seg\u00fcent imatge:</p> <p></p> <p>Hauria de quedar m\u00e9s o manco aix\u00ed:</p> <p></p> <p> Desa amb el nom AOFGIMP06_5_llinatge_nom.png</p> Fitxer pr\u00e0ctica 6 exercici 5 <p> ex6_5_0 </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP07.html","title":"PR\u00c0CTICA 7.","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP07.html#fotomuntatge","title":"FOTOMUNTATGE","text":"<p>TREBALLAR AMB CAPES SEMITRANSPARENT (CANAL ALPHA)</p> <p>Realitzarem un fotomuntatge amb les seg\u00fcents imatges (recorda descarregar-les a l'enlla\u00e7 m\u00e9s abaix a aquesta p\u00e0gina):</p> <p> </p> <p>Primer obrim les dues imatges amb gimp, a continuaci\u00f3 obrim una nova imatge amb arxiu --&gt; nou, i al men\u00fa \"crear una imatge nova\", desplegem el men\u00fa \"opcions avan\u00e7ades\" omplir amb \"transpar\u00e8ncia\"</p> <p>A continuaci\u00f3, arrosseguem les capes de la boca i l'ull a la nova imatge i obtindr\u00edem el seg\u00fcent:</p> <p></p> <p>Ara treuem la visibilitat de l'ull per treballar millor:</p> <p></p> <p>Passem a retallar la boca, ho fem amb l'eina \"tisseres intel\u00b7ligents\", una vegada que seleccionem el contorn de la boca punxem dins la boca i s'activa la selecci\u00f3. a continuaci\u00f3 passem a recortar la selecci\u00f3, per\u00f2 per realitzar-ho de forma efica\u00e7 abans hem de seleccionar la capa, i amb el bot\u00f3 dret punxem a \"afegir canal alfa\". ara si, editarem \u2192 tallar, si ho hem fet correctament obtindrem el seg\u00fcent:</p> <p></p> <p>tornem a fer visible l'ull i l'escalem:</p> <p></p> <p>i per \u00faltim, col\u00b7loquem les capes perqu\u00e8 l'ull quedi per darrere de la boca:</p> <p></p> <p> Desa amb el nom AOFGIMP07_llinatge_nom.jpg</p> Fitxer pr\u00e0ctica 7 exercici 1 <p> boca.jpg ojo_3.jpg </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP08.html","title":"PR\u00c0CTICA 8.","text":""},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP08.html#cirurgia-estetica-amb-gimp","title":"CIRURGIA EST\u00c8TICA AMB GIMP","text":"<p>Aquesta pr\u00e0ctica consta de diversos exercicis</p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP08.html#exercici-1-retoc-de-rostre","title":"Exercici 1. Retoc de rostre","text":"<p>A la seg\u00fcent pr\u00e0ctica eliminarem les arrugues dels ulls a la cara d'una dona</p> <p></p> <p>1r Obre la imatge somriure.xcf.</p> <p>2n En el retoc d'imatges de persones cal no exagerar l'actuaci\u00f3 sobre la imatge. Cal ser subtil. Per aix\u00f2 \u00e9s interessant duplicar la capa: a la llista de capes, selecciona la capa de fons i duplica-la (clic bot\u00f3 dret del ratol\u00ed --&gt; duplicar la capa).</p> <p></p> <p>D'aquesta manera, en una capa es tindr\u00e0 la imatge original i en una altra capa la imatge retocada, per anar controlant els canvis realitzats. Nosaltres actuarem a la imatge a la capa copiada.</p> <p>Algunes indicacions de la finestra de CAPES:</p> <ul> <li>Capa amb fons blau: capa seleccionada sobre la qual es treballar\u00e0.</li> <li>Icona de l'ull: fixa la capa com a visible o no visible.</li> <li>El nom de la capa es pot canviar.</li> <li>La icona de la cadena serveix per enlla\u00e7ar o unir diverses capes, per moure-les de forma</li> <li>conjunta</li> </ul> <p>3r Apropar-se a la imatge mitjan\u00e7ant l'eina de zoom + (es pot moure la imatge mantenint premuda la tecla espai i movent el ratol\u00ed).</p> <p>4t Seleccionar l'eina Cicatritzat , que permet corregir irregularitats a la imatge.</p> <p></p> <p>Seleccionar un pinzell gran i tort (Calligraphic Brush#2). Fixar opacitat 50 i seleccionar esva\u00efment.</p> <p></p> <p>Aquesta eina funciona de manera molt similar a la de clonar: seleccionar una zona amb la tecla</p> <p>CTRL (aix\u00ed se selecciona la textura i el color de la zona). Ara deixar anar la tecla CTRL i se'n va</p> <p>prement sobre les zones que es volen netejar (per exemple. punxar en zones properes a les</p> <p>arrugues amb la tecla CTRL seleccionada, deixar anar el CTRL i corregir a poc a poc i amb paci\u00e8ncia les</p> <p>arrugues.</p> <p></p> <p>Abans                   Despr\u00e9s</p> <p>5\u00e8 Per finalitzar  desa amb el nom AOFGIMP08_1_llinatge_nom.jpg</p> <p></p> Fitxer pr\u00e0ctica 8 exercici 1 <p> somriure.xcf </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP08.html#exercici-2-retoc-de-rostre","title":"Exercici 2: Retoc de rostre","text":"<p>Treu-li les arrugues a la seg\u00fcent foto:</p> <p></p> <p> Guardaras el fitxer com AOFGIMP08_2_llinatge_nom.gif</p> Fitxer pr\u00e0ctica 8 exercici 2 <p> ejercicios01_arrugas.jpg </p>"},{"location":"Moduls/ARXIU/2425/AOF/exercicisisolucions/exercicisGIMP08.html#exercici-3-aprimar-se-amb-gimp","title":"Exercici 3 Aprimar-se amb gimp","text":"<p>Observa el canvi</p> <p></p> <p>ara vegem com fer-ho:</p> <p>1 Descarregueu la imatge i obri-la a gimp</p> <p>2 Feu clic al men\u00fa capa - duplicar la capa. d'aquesta manera podrem veure l'abans i el despr\u00e9s de l'efecte.</p> <p>3 Feu clic a l'eina \"Transformaci\u00f3 deformant\"  de la caixa d'eines</p> <p>4 En el quadre de di\u00e0leg que apareix fes clic i arrossega amb suavitat sobre les zones que es vol reduir. Repeteix el proc\u00e9s fins a assolir l'efecte desitjat.</p> <p>5 Si t'equivoques, pots fer clic a reiniciar (o a CTRL+Z) per recuperar la imatge original.</p> <p>6 Per acabar fes clic en acceptar.</p> <p> Desa amb el nom AOFGIMP08_3_llinatge_nom.jpg</p> Fitxer pr\u00e0ctica 8 exercici 3 <p> ex8_3_1.png </p>"},{"location":"Moduls/ARXIU/2425/AW/00.html","title":"Temporitzaci\u00f3 - AW","text":"<p>Aquesta \u00e9s la temporitzaci\u00f3 estimada del m\u00f2dul Aplicacions Web</p> UNITAT DE TREBALL RAs DURADA 1 Internet, caracter\u00edstiques i evoluci\u00f3 RA1-5 5 hores 2 HTML RA1-5 20 hores 3 CSS RA1-5 18 hores 4 Gestors de continguts RA1 12 hores 5 Servei de gesti\u00f3 d\u2019arxius web RA3 3 hores 6 Sistemes de gesti\u00f3 d\u2019aprenentatge a dist\u00e0ncia RA2 8 hores 7 JavaScript RA1-5 26 hores 8 Aplicacions ofim\u00e0tiques web RA4 5 hores 9 Aplicacions web d\u2019escriptori RA5 3 hores TOTAL HORES 100 TRIMESTRE UT- RA Data prevista inici 1er Trimestre UT1~ RA1-5 23/9/2024 UT2~ RA1-5 30/9/2024 UT3~ RA1-5 28/10/2024 UT4~ RA1 22/11/2024 UT5~ RA3 9/12/2024 UT6~ RA2 13/12/2024 2n Trimestre UT7~ RA1-5 7/1/2025 UT8~ RA4 12/2/2025 UT9~ RA5 16/2/2025"},{"location":"Moduls/ARXIU/2425/AW/01.html","title":"Internet, caracter\u00edsticas y evoluci\u00f3n","text":"","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/01.html#1-introduccio","title":"1. Introducci\u00f3","text":"<p>En aquest article es tractar\u00e0 la hist\u00f2ria de la web aix\u00ed com el seu funcionament b\u00e0sic.</p>","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/01.html#2-historia-dinternet","title":"2. Hist\u00f2ria d'Internet","text":"<p>Llegir article Hist\u00f2ria d'Internet: com va n\u00e9ixer i quina va ser la seva evoluci\u00f3</p> <p>Pregunta 1: Com es deia el primer sat\u00e8l\u00b7lit artificial llan\u00e7at a lespai?</p> <p>Pregunta 2: En qu\u00e8 es basa la teoria de commutaci\u00f3 de paquets?</p> <p>Pregunta 3: Qu\u00e8 unia la xarxa ARPANET?</p> <p>Pregunta 4: Quines dues ciutats es van unir per primera vegada?</p> <p>Pregunta 5: Quin \u00e9s el pa\u00eds amb m\u00e9s penetraci\u00f3 d'Internet?</p> <p>Pregunta 6: Quin \u00e9s el lloc web m\u00e9s visitat del m\u00f3n?</p> <p>Pregunta 7: Quina va ser la primera xarxa social de la hist\u00f2ria?</p> <p>Leer art\u00edculo Historia de Internet hasta la secci\u00f3n \"Evoluci\u00f3n de Internet en cifras\" incluida.</p> <p>Leer art\u00edculo Historia de internet hasta la secci\u00f3n \"WWW\" incluida.</p>","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/01.html#3-historia-del-web","title":"3. Hist\u00f2ria del web","text":"<p>Veure fins l'any 2001...</p> Qu\u00e8 \u00e9s una p\u00e0gina web?   Una p\u00e0gina web \u00e9s un document HTML. Aquest document HTML \u00e9s interpretat per un navegador:  - Google Chrome - Mozilla Firefox - Internet Explorer - Microsoft Edge - Opera - Safari   \u00c9s el mateix Internet que la web?   No. WEB = INTERNET + HTTP","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/01.html#4-la-web-10","title":"4. La web 1.0","text":"<p>El web primitiu, el del segle 20, era el que es caracteritza principalment per ser unidireccional i realitzat sobre continguts est\u00e0tics. Les primeres p\u00e0gines que vam veure a Internet publicaven continguts de text que, una vegada publicats, no s'actualitzaven llevat que el webmaster modifiqu\u00e9s aquests continguts i torn\u00e9s a pujar el web de nou a internet.</p> <p>La web 1.0 tenia un car\u00e0cter principalment divulgatiu i es van comen\u00e7ar a penjar d'internet documents i informaci\u00f3 principalment cultural. A poc a poc les empreses van comen\u00e7ar a prendre-hi part i les primeres webs d'empresa van sorgir, amb dissenys molt pobres (no hi havia eines, ni tecnologia, ni connexi\u00f3 suficient per fer-ho millor) i continguts que r\u00e0pidament quedaven antiquats en ser complex actualitzar-los.</p>","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/01.html#5-la-web-20","title":"5. La web 2.0","text":"<p>La web 2.0 es va consolidar a mitjans de la primera d\u00e8cada d'aquest segle. Sustentada sota unes connexions a internet evolucionades (ja ten\u00edem ADSL), i millors eines per desenvolupar web, millors servidors, etc., la web 2.0, tamb\u00e9 anomenada \"la xarxa social\", omple Internet de blocs, wikis, f\u00f2rums i finalment, xarxes socials. L'objectiu de la web 2.0 \u00e9s la compartici\u00f3 del coneixement, \u00e9s la web col\u00b7laborativa i ha estat un dels atractius principals per atraure usuaris (basta veure els usuaris de facebook que, fins a facebook, no tocaven un ordinador).</p> <p>Pregunta: El web de Homer Simpson \u00e9s 1.0 o 2.0?</p>","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/01.html#6-web-30","title":"6. Web 3.0","text":"<p>La web 3.0 \u00e9s:</p> <ul> <li>Web sem\u00e0ntica</li> <li>Experi\u00e8ncia de navegaci\u00f3 personalitzada a trav\u00e9s de:</li> <li>Analitzar l'historial de cada usuari</li> <li>Analitzar dades de conducta web de cada usuari</li> <li>Desenvolupar tecnologies 3.0 com la Intel\u00b7lig\u00e8ncia Artificial.</li> <li>Crear una base de dades global.</li> <li>Analitzar la geolocalitzaci\u00f3 de lusuari.</li> <li>Etc.</li> </ul> <p>Llegir article \u00bfEn qu\u00e9 consiste la web sem\u00e1ntica?.</p> Quin va ser el motiu de l'\u00e8xit de Google?   La resposta de l'\u00e8xit actual de Google \u00e9s senzilla: va ser el primer cercador, com a tal, que es va prendre seriosament la feina.  Google va n\u00e9ixer a finals dels anys 90, com la tesi doctoral de Larry Page i Sergey Brin. El 1998 es va estrenar a Internet i des de llavors s'ha consagrat com el principal motor de cerca al m\u00f3n.  La seva innovaci\u00f3 principal va ser tenir en compte l'autoritat de les p\u00e0gines, guanyada a trav\u00e9s d'enlla\u00e7os. Google va desenvolupar un sistema per quantificar aquesta autoritat, i el va anomenar \"PageRank\".  Tot i que cal afegir que, a conseq\u00fc\u00e8ncia de la gran import\u00e0ncia que Google atorgava als enlla\u00e7os, molts -si no \u00e9s que tots- llocs web han estat creant enlla\u00e7os no org\u00e0nics durant anys, aconseguint m\u00e9s autoritat de la que correspondria de forma natural.  Per aix\u00f2, i per intentar combatre aquest problema, les actualitzacions m\u00e9s recents de l'algorisme de Google s'han centrat en altres m\u00e8triques, com ara senyals socials, interacci\u00f3 de l'usuari i qualitat dels continguts, entre d'altres.","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/01.html#8-arquitectura-client-servidor","title":"8. Arquitectura client-servidor","text":"<p>El web t\u00e9 una arquitectura client-servidor.</p> <p> Arquitectura client-servidor</p> Quina difer\u00e8ncia hi ha entre una arquitectura client servidor i una arquitectura p2p?   **Client-Servidor**: \u00e9s un model d'aplicaci\u00f3 distribu\u00efda en qu\u00e8 les tasques es reparteixen entre els prove\u00efdors de recursos o serveis, anomenats servidors, i els demandants, anomenats clients. Un client fa peticions a un altre programa, el servidor, que li d\u00f3na resposta. Aquesta idea tamb\u00e9 es pot aplicar a programes que s'executen sobre un ordinador, encara que \u00e9s m\u00e9s avantatjosa en un sistema operatiu multiusuari distribu\u00eft a trav\u00e9s d'una xarxa d'ordinadors.  **P2P**: \u00e9s una xarxa d'ordinadors on tots o alguns aspectes funcionen sense clients ni servidors fixos, sin\u00f3 una s\u00e8rie de nodes que es comporten com a iguals entre si. \u00c9s a dir, actuen simult\u00e0niament com a clients i servidors respecte als altres nodes de la xarxa. Les xarxes P2P permeten lintercanvi directe dinformaci\u00f3, en qualsevol format, entre els ordinadors interconnectats.  Una de les difer\u00e8ncies, \u00e9s que al \u201cCS\u201d es necessita un servidor, i un client, a difer\u00e8ncia del \u201cP2P\u201d, que permet a qualsevol usuari ser client o servidor. Un dels avantatges del \"P2P\" \u00e9s que la connexi\u00f3 sempre estar\u00e0 activa, ja que amb que hi hagi un client, el servidor est\u00e0 actiu, per\u00f2 al \"CS\" es requereix que el servidor principal estigui actiu. Al \"P2P\" tot usuari o client t\u00e9 les mateixes funcions que un altre igual que ell, aspecte contrari al \"CS\" en el qual un servidor t\u00e9 les funcions que els clients no tenen.   <p>Pregunta: Sabr\u00edeu dir-me 5 navegadors web?</p> <p> Arquitectura client-servidor amb NAT</p> <p>Pregunta: Qu\u00e8 signifiquen les sigles NAT?</p>","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/01.html#9-adreces-dinternet","title":"9. Adreces d'Internet","text":"","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/01.html#91-adreces-ip","title":"9.1. Adreces IP","text":"<p>&lt;iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/gVUE2IDwWA0\" title=\"YouTube v\u00eddeo player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard- write; encrypted-media;</p>","tags":["aplicaciones web","smr","teor\u00eda"]},{"location":"Moduls/ARXIU/2425/AW/02.html","title":"02","text":""},{"location":"Moduls/ARXIU/2425/AW/02.html#1-introduccio","title":"1. Introducci\u00f3","text":"<p>HTML (Llenguatge de Marques d'Hipertext, de l'angl\u00e8s HyperText Markup Language) \u00e9s el component m\u00e9s b\u00e0sic de la web. Defineix el significat i estructura del contingut web. A m\u00e9s d'HTML, generalment s'utilitzen altres tecnologies per descriure l'aparen\u00e7a/presentaci\u00f3 d'una p\u00e0gina web (CSS) o la funcionalitat/comportament (JavaScript).</p> <p>Hipertext fa refer\u00e8ncia als enlla\u00e7os que connecten p\u00e0gines web entre si, ja sigui dins d'un \u00fanic lloc web o entre llocs web. Els enlla\u00e7os s\u00f3n un aspecte fonamental de la web. En pujar contingut a Internet i vincular-lo a les p\u00e0gines creades per altres persones, et converteixes en un participant actiu a la \u201cWorld Wide Web\u201d (Xarxa Inform\u00e0tica Mundial).</p> <p>HTML utilitza \"marques\" per etiquetar text, imatges i un altre contingut per mostrar-lo en un navegador web. Les marques HTML inclouen \"elements\" especials com <code>&lt;head&gt;</code>, <code>&lt;title&gt;</code>, <code>&lt;body&gt;</code>, <code>&lt;header&gt;</code>, <code>&lt;footer&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;div&gt;</code>, <code>&lt;span&gt;</code>, <code>&lt;img&gt;</code>, <code>&lt;aside&gt;</code>, <code>&lt;audio&gt;</code>, <code>&lt;canvas&gt;</code>, <code>&lt;datalist&gt;</code>, <code>&lt;details&gt;</code>, <code>&lt;embed&gt;</code>, <code>&lt;nav&gt;</code>, <code>&lt;output&gt;</code>, <code>&lt;progress&gt;</code>, <code>&lt;video&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code>, <code>&lt;li&gt;</code> y muchos otros.</p> <p>Un element HTML es distingeix d'un altre text en un document mitjan\u00e7ant \"etiquetes\", que consisteixen en el nom de l'element envoltat per <code>&lt;</code> i <code>&gt;</code>. El nom d'un element dins d'una etiqueta no distingeix entre maj\u00fascules i min\u00fascules. \u00c9s a dir, es pot escriure en maj\u00fascules, min\u00fascules o barreja. Per exemple, l'etiqueta <code>&lt;title&gt;</code> es pot escriure com a <code>&lt;Title&gt;</code>, <code>&lt;TITLE&gt;</code> o de qualsevol altra manera.</p> Qu\u00e8 significa hipertext?   De la mateixa manera que un hipermercat \u00e9s millor que un mercat. L'hipertext \u00e9s millor que el text. De manera simplificada \u00e9s text amb enlla\u00e7os que us porten a altres documents.   <p>.</p> \u00c9s HTML case sensitive?   Les etiquetes HTML no distingeixen entre maj\u00fascules i min\u00fascules: `<p>` significa el mateix que `<p>` . L'est\u00e0ndard HTML no requereix etiquetes en min\u00fascules, per\u00f2 W3C recomana min\u00fascules en HTML i exigeix min\u00fascules per a tipus de document m\u00e9s estrictes com XHTML."},{"location":"Moduls/ARXIU/2425/AW/02.html#2-estructura-basica-html","title":"2. Estructura b\u00e0sica html","text":"<p>Ara veurem com combinar elements individuals per formar una p\u00e0gina html completa:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;title&gt;T\u00edtol de la p\u00e0gina&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n\n    &lt;h1&gt;Aix\u00f2 \u00e9s una cap\u00e7alera&lt;/h1&gt;\n    &lt;p&gt;Aix\u00f2 \u00e9s un par\u00e0graf.&lt;/p&gt;\n\n    &lt;p id=\"benvinguda\"&gt;Benvingut!&lt;/p&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>&lt;!DOCTYPE html&gt;</code>: L'element doctype. Als seus inicis, quan l'HTML feia poc temps (al voltant de 1991-1992), els doctypes servien com a enlla\u00e7os al conjunt de regles que la p\u00e0gina HTML havia de seguir perqu\u00e8 fos considerat bon HTML. Actualment s'ignora i es considera un llegat hist\u00f2ric que cal incloure perqu\u00e8 tot funcioni correctament.</li> <li><code>&lt;html&gt;&lt;/html&gt;</code>: L'element <code>&lt;html&gt;</code>. Aquest element envolta tot el contingut de la p\u00e0gina. De vegades se'l coneix com l'element arrel.</li> <li><code>&lt;head&gt;&lt;/head&gt;</code>: L'element <code>&lt;head&gt;</code> (cap\u00e7alera). Aquest element actua com a contenidor per a tots els par\u00e0metres que vulguis incloure al document HTML que no seran visibles als visitants de la p\u00e0gina.</li> <li><code>&lt;meta charset=\"utf-8\"&gt;</code>: Aquest element estableix que el vostre document HTML utilitzar\u00e0 la codificaci\u00f3 UTF-8, que inclou la gran majoria de car\u00e0cters de tots els idiomes humans escrits.</li> <li><code>&lt;title&gt;&lt;/title&gt;</code>: L'element <code>&lt;title&gt;</code>. Aquest estableix el t\u00edtol de la p\u00e0gina, que \u00e9s el t\u00edtol que apareix a la pestanya del navegador on es carrega la p\u00e0gina.</li> <li><code>&lt;body&gt;&lt;/body&gt;</code>: L'element <code>&lt;body&gt;</code>. Cont\u00e9 tot el contingut que vols mostrar als usuaris quan visiten la teva p\u00e0gina, ja sigui text, imatges, v\u00eddeos, jocs, pistes d\u00e0udio reprodu\u00efbles o qualsevol altra cosa.</li> </ul> Com veiem el codi HTML d'una p\u00e0gina?   F12 o Click dret i inspeccionar"},{"location":"Moduls/ARXIU/2425/AW/02.html#21-element","title":"2.1. Element","text":"<p>Els elements HTML s\u00f3n els components b\u00e0sics dun document HTML. En aquesta p\u00e0gina que llegiu, per exemple, el t\u00edtol, un par\u00e0graf i una imatge s\u00f3n elements H1, P i IMG, respectivament. No tots els tipus d'element s\u00f3n visibles: alguns tenen com a \u00fanica funci\u00f3 agrupar altres elements, per exemple.</p> <p>Explorem una mica l'element par\u00e0graf:</p> <p> Element i etiquetes HTML</p> <p>Les principals parts del nostre element s\u00f3n:</p> <ul> <li>L'etiqueta d'obertura: consisteix en el nom de l'element (en aquest cas, p), tancat entre par\u00e8ntesis angulars d'obertura i tancament. Aquesta etiqueta marca marca on comen\u00e7a l'element o comen\u00e7a a tenir efecte. En aquest exemple, precedeix al comen\u00e7ament del text del par\u00e0graf.</li> <li>El contingut: Aquest \u00e9s el contingut de l'element. En aquest exemple, \u00e9s el text del par\u00e0graf.</li> <li>L'etiqueta de tancament: \u00c9s el mateix que l'etiqueta d'obertura, excepte que inclou una barra diagonal abans del nom de l'element. Aix\u00f2 indica on s'acaba l'element; en aquest cas, on finalitza el par\u00e0graf. No incloure una etiqueta de tancament \u00e9s un error com\u00fa de principiant, i pot conduir a resultats estranys.</li> </ul> <p>L'element el conformen l'etiqueta d'obertura, seguida del contingut, seguit de l'etiqueta de tancament.</p> Com se diu un element que t\u00e9 clau per\u00f2 no t\u00e9 valor?   Element buit."},{"location":"Moduls/ARXIU/2425/AW/02.html#22-atribut","title":"2.2. Atribut","text":"<p>Els elements tamb\u00e9 poden tindre atributs. Els atributs tenen aquest aspecte:</p> <p> Atribut HTML</p> <p>Els atributs contenen informaci\u00f3 extra sobre l'element que no es mostrar\u00e0 al contingut. En aquest cas, l'atribut class assigna a l'element un identificador que podeu utilitzar per dotar-lo d'informaci\u00f3 d'estil.</p> <p>Un atribut hauria de tenir:</p> <p>Un espai entre aquest i nom d'element. (Per a un element amb m\u00e9s d'un atribut, els atributs tamb\u00e9 han d'estar separats per espais). El nom de l'atribut seguit per un signe igual. Un valor de l'atribut, envoltat de cometes d'obertura i tancament.</p> <p> Nomenclatura HTML</p> Per qu\u00e8 serveix l'atribut alt o text alternatiu?   L'atribut ALT o l'etiqueta ALT \u00e9s un atribut HTML per a un text que descriu una imatge. L'atribut ALT es col\u00b7loca directament a l'etiqueta de la imatge. Si una imatge no es pot mostrar per alguna ra\u00f3, l'atribut ALT proporciona text alternatiu per mostrar al vostre lloc.   Qu\u00e8 \u00e9s un atribut boole\u00e0?   S\u00f3n atributs que tenen clau per\u00f2 no tenen cap valor. Per exemple, en aquest input `` l'atribut `checked` \u00e9s boole\u00e0.  Els valors true i false estan especificament prohibits als atributs booleans. Per representar el valor false, l'atribut no ha d'apar\u00e8ixer.  Tots els exemples seg\u00fcents s\u00f3n correctes i equivalents:  <pre><code>&lt;input type=\"checkbox\" name=\"vehicle\" value=\"car\" checked disabled&gt;\n&lt;input type=\"checkbox\" name=\"vehicle\" value=\"car\" checked=\"checked\" disabled=\"disabled\"&gt;\n&lt;input type=\"checkbox\" name=\"vehicle\" value=\"car\" checked disabled=\"\"&gt;\n</code></pre> <p>\u00c9s correcte l'element <code>&lt;a href=https://www.mozilla.org/&gt;el meu lloc web preferit&lt;/a&gt;</code>?</p> <p>\u00c9s correcte l'element <code>&lt;a href='http://www.exemple.com'&gt;Un enlla\u00e7 al meu exemple.&lt;/a&gt;</code>?</p> <p>\u00c9s correcte l'element <code>&lt;a href='http://www.exemple.com' title=\u00c9s correcte o no&gt;Un enlla\u00e7 al meu exemple.&lt;/a&gt;</code>?</p> <p>\u00c9s correcte l'element <code>&lt;a href=\"http://www.exemple.com\" title=\"\u00c9s 'correcte'?\"&gt;Un enlla\u00e7 al meu exemple.&lt;/a&gt;</code>?</p> <p>\u00c9s correcte l'element <code>&lt;a href='http://www.exemple.com' title='\u00c9s 'correcte'?'&gt;Un enlla\u00e7 al meu exemple.&lt;/a&gt;</code>?</p> Qu\u00e8 \u00e9s un llenguatge de programaci\u00f3?   Un llenguatge de programaci\u00f3 \u00e9s un llenguatge formal que proporciona a una persona, en aquest cas el programador, la capacitat d'escriure (o programar) una s\u00e8rie d'instruccions o seq\u00fc\u00e8ncies d'ordres en forma d'algorismes per controlar el comportament f\u00edsic o l\u00f2gic d'un sistema inform\u00e0tic, de manera que es puguin obtenir diverses classes de dades o executar determinades tasques.  Tot aquest conjunt d'ordres escrites mitjan\u00e7ant un llenguatge de programaci\u00f3 s'anomena programa inform\u00e0tic.   \u00c9s HTML un llenguatge de programaci\u00f3?    HTML \u00e9s una manera de representar la informaci\u00f3. No programes el comportament dun ordinador per tant no \u00e9s un llenguatge de programaci\u00f3.  HTML (\"Hypertext Markup Language\") no \u00e9s un llenguatge de programaci\u00f3. \u00c9s un llenguatge de marcatge que diu als navegadors web com estructurar les p\u00e0gines web que est\u00e0s visitant. Pot ser tan complex o tan simple com vulgui el desenvolupador web. L'HTML consisteix en una s\u00e8rie d'elements, que podeu utilitzar per tancar, delimitar o marcar diferents parts del contingut per fer que apareguin d'una certa manera, o actu\u00efn de manera determinada. Les etiquetes que delimiten un fragment de contingut poden fer que aquest contingut enlla\u00e7i amb una altra p\u00e0gina, poseu una paraula en cursiva, etc\u00e8tera. Per exemple, atesa la seg\u00fcent l\u00ednia de contingut:"},{"location":"Moduls/ARXIU/2425/AW/02.html#3formularis","title":"3.Formularis","text":"<p>Quines s\u00f3n les passes que he de seguir per poder veure quina informaci\u00f3 estaria enviant a un servidor des d'un formulari?</p>  Preguntes sobre el v\u00eddeo   1. Per qu\u00e8 serveix l'element `label`? 2. Per qu\u00e8 l'atribut for serveix en un element `label`? 3. Per qu\u00e8 l'atribut name serveix en un element `input`? 4. Per qu\u00e8 serveix l'atribut `placeholder`? 5. Se t'acudeix un cas real on necessitem utilitzar dos elements form dins d'un mateix html i tingui sentit? 6. Per qu\u00e8 serveix l'atribut `type=\"email\"`? 7. Per qu\u00e8 serveix l'atribut `type=\"password\"`? La contrasenya xifrada s'envia si posem l'atribut `type=\"password\"`? 8. L'atribut `type=\"submit\"` en qu\u00e8 dos elements el podem fer servir? Per qu\u00e8 serveix aquest atribut `type=\"submit\"`? 9. Per a qu\u00e8 serveix el `type=\"reset\"`? 10. Quins tipus d'input hi ha? text, password, email, etc. 11. Per a qu\u00e8 serveix l\u02bbatribut `name`? I el `value`? 12. El valor dels atributs ha d'anar sempre entre cometes dobles? 13. Quina difer\u00e8ncia hi ha entre els input `type=\"r\u00e0dio\"` i `type=\"checkbox\"`? 14. Quina difer\u00e8ncia hi ha entre `type=\"date\"` i `type=\"datetime-local\"` i `type=\"time\"`? 15. Podem en un input amb atribut `type=\"number\"` posar n\u00fameros negatius? I n\u00fameros decimals? 16. Quin \u00e9s l'atribut que fa que nom\u00e9s puguis triar una opci\u00f3 dins del tipus/categoria? 17. Dep\u00e8n el format de la data de la llengua en qu\u00e8 escrivim l'html (``)?"},{"location":"Moduls/ARXIU/2425/AW/02.html#4-bibliografia","title":"4. Bibliograf\u00eda","text":"<ul> <li>HTML: Lenguaje de etiquetas de hipertexto (Developer Mozilla)</li> <li>HTML Tutorial (W3Schools)</li> <li>Lenguaje HTML5</li> <li>Atributos booleanos en HTML</li> </ul>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html","title":"03CSS","text":""},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#que-es-css","title":"Qu\u00e8 \u00e9s CSS","text":"<p>CSS s\u00f3n les sigles en angl\u00e8s per a fulls d'estil en cascada (Cascading Style Sheets). B\u00e0sicament, \u00e9s un llenguatge que maneja el disseny i presentaci\u00f3 de les p\u00e0gines web, \u00e9s a dir, com llueixen quan un usuari les visita. Funciona juntament amb el llenguatge HTML que s\u2019encarrega del contingut b\u00e0sic dels llocs.</p> <p>Se'ls anomena fulles d'estil \u00aben cascada\u00bb perqu\u00e8 en pots tenir diverses i una amb les propietats heretades (o \u00aben cascada\u00bb) d'altres.</p> <p>Per a moltes persones, una simple plantilla de bloc \u00e9s suficient. Tot i aix\u00ed, quan vulgueu personalitzar l'aparen\u00e7a d'un lloc, necessitareu implementar CSS que, en conjunt amb un bon CMS, us ajudar\u00e0 a potenciar l'abast del vostre contingut.</p>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#per-a-que-serveix-css","title":"Per a qu\u00e8 serveix CSS","text":"<p>Amb CSS, pots crear regles per dir-li al teu lloc web com vols mostrar la informaci\u00f3 i desar les ordres per a elements d'estil (com fonts, colors, mides, etc.) separats dels que configuren el contingut.</p> <p>A m\u00e9s, podeu crear formats espec\u00edfics \u00fatils per comunicar les vostres idees i produir experi\u00e8ncies m\u00e9s agradables, en l'aspecte visual, per als usuaris del lloc web.</p>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#avantatges-i-desavantatges-dusar-css","title":"Avantatges i desavantatges d'usar CSS","text":""},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#avantatges-dusar-css","title":"Avantatges d'usar CSS","text":"<ul> <li>Separaci\u00f3 de l'estructura i la presentaci\u00f3**. CSS permet separar el contingut HTML de la presentaci\u00f3 visual. \u00c9s a dir, us permet mantenir el codi HTML net i estructurat, mentre que l'estil es defineix en un fitxer CSS separat. Aquest ordre millora la llegibilitat del codi i en facilita el manteniment, aix\u00ed com l'actualitzaci\u00f3 dels estils.</li> <li>Consist\u00e8ncia i mantenibilitat.** En utilitzar CSS, podeu aplicar estils de manera consistent a un lloc o aplicaci\u00f3 web. Els estils es defineixen una vegada i s'apliquen a m\u00faltiples elements a les p\u00e0gines, cosa que afavoreix la renovaci\u00f3 de l'aparen\u00e7a visual de tot el projecte.</li> <li>Efici\u00e8ncia en el rendiment.** CSS permet carregar estils externs en un fitxer separat. Amb aix\u00f2, el navegador emmagatzemar\u00e0 en mem\u00f2ria cau els estils i els aplicar\u00e0 a totes les p\u00e0gines del lloc, cosa que millora el rendiment en reduir la quantitat de dades que cal transferir entre el servidor i el client.</li> <li>Flexibilitat i control.** Aix\u00ed mateix, ofereix una \u00e0mplia gamma de propietats i selectors amb qu\u00e8 tindr\u00e0s un control prec\u00eds sobre l'estil dels elements HTML. Podr\u00e0s modificar, de manera senzilla, els colors, fonts, marges, mides, dissenys, etc. Gr\u00e0cies a aquestes caracter\u00edstiques, podr\u00e0s personalitzar i adaptar a diversos dispositius i mides de pantalla el teu lloc web.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#desavantatges-dusar-css","title":"Desavantatges d'usar CSS","text":"<ul> <li>Corba d'aprenentatge**. CSS pot tenir una corba d'aprenentatge empinada, en particular, per als principiants. Entendre, completament, totes les propietats, selectors i conceptes avan\u00e7ats pot portar temps i pr\u00e0ctica.</li> <li>Compatibilitat entre navegadors**. Tot i que els est\u00e0ndards de CSS s\u00f3n dels m\u00e9s acceptats, alguns navegadors podrien interpretar i renderitzar els estils de manera diferent. Aix\u00f2 pot resultar en inconsist\u00e8ncies visuals i requerir proves o ajustaments addicionals per garantir la compatibilitat entre plataformes.</li> <li>Especificitat i her\u00e8ncia**. CSS utilitza regles d'especificitat i d'her\u00e8ncia per determinar quins estils s'apliquen als elements. De vegades, l'ordre de les regles i la jerarquia poden generar resultats inesperats. Aix\u00f2 requereix una comprensi\u00f3 acurada de com funcionen aquestes regles per evitar conflictes i problemes destil.</li> <li>Limitacions a la maquetaci\u00f3. Tot i que CSS ofereix una \u00e0mplia gamma de propietats per al disseny i la maquetaci\u00f3, pot presentar limitacions en certs casos m\u00e9s complexos. Alguns dissenys espec\u00edfics poden requerir solucions addicionals o l\u00fas de t\u00e8cniques m\u00e9s avan\u00e7ades per aconseguir el resultat desitjat.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#com-funciona-css","title":"Com funciona CSS","text":"<p>CSS funciona com a complement a la informaci\u00f3 que forma part d'un lloc web. Mentre que el codi HTML inclou totes les dades, el codi CSS s'encarrega de donar-los format i presentar-los visualment a trav\u00e9s d'un navegador.</p> <p>En accedir a un lloc web, el navegador ha de rastrejar la informaci\u00f3 continguda a l'HTML i traduir-la a un DOM (o model d'objectes del document). Aquests objectes han de ser conjuntats amb els blocs de codi corresponents a CSS perqu\u00e8 l'estil elegit sigui aplicat a ells i apareguin en el format assignat a l'ordinador.</p> <p>Segons siguin els selectors que hagis utilitzat al teu CSS, s'aplicaran propietats diferents a cada bloc d'informaci\u00f3 en HTML. En fer-los servir, podr\u00e0s modificar, amb facilitat, l'estil d'un conjunt definit de blocs i mantenir la imatge de la teva marca en tot el teu contingut.</p>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#caracteristiques-de-css","title":"Caracter\u00edstiques de CSS","text":"<ul> <li>\u00c9s un llenguatge de programaci\u00f3 diferent a HTML.</li> <li>Permet l'apilament d'instruccions per definir els formats espec\u00edfics.</li> <li>\u00c9s utilitzable a tots els navegadors i plataformes.</li> <li>Optimitza el funcionament de les p\u00e0gines web.</li> <li>T\u00e9 una sintaxi espec\u00edfica.</li> <li>Permet personalitzar totalment l'aparen\u00e7a de p\u00e0gines.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#1-es-un-llenguatge-diferent-a-html","title":"1. \u00c9s un llenguatge diferent a HTML","text":"<p>HTML \u00e9s un llenguatge que serveix per gestionar la informaci\u00f3 continguda a un lloc web. D'altra banda, CSS t\u00e9 com a funci\u00f3 estructurar l'estil de les p\u00e0gines. Tots dos llenguatges treballen en conjunt per presentar la informaci\u00f3 al p\u00fablic final.</p>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#2-permet-lapilament-dinstruccions-per-definir-formats-especifics","title":"2. Permet l'apilament d'instruccions per definir formats espec\u00edfics","text":"<p>Aix\u00f2 significa que es poden crear blocs d'instruccions imbricades que permeten fer modificacions generals, de manera senzilla, cosa que simplifica la tasca de disseny i la creaci\u00f3 d'estils estandarditzats. Aix\u00ed, es creen formats espec\u00edfics que es poden aplicar a diferents p\u00e0gines, els quals, a m\u00e9s, s\u00f3n modificables de forma molt senzilla.</p>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#3-es-utilitzable-en-tots-els-navegadors-i-plataformes","title":"3. \u00c9s utilitzable en tots els navegadors i plataformes","text":"<p>Com que \u00e9s un llenguatge popular per donar format als llocs web, el seu \u00fas \u00e9s universal per a un ampli nombre de dispositius, formats i plataformes com Edge, Safari, Chrome, etc. \u00c9s per aix\u00f2 que \u00e9s f\u00e0cil donar format a les p\u00e0gines, segons el navegador utilitzat per cada usuari.</p>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#4-optimitza-el-funcionament-de-les-pagines-web","title":"4. Optimitza el funcionament de les p\u00e0gines web","text":"<p>En separar el codi de contingut i d'estil, \u00e9s molt m\u00e9s r\u00e0pid el processament de la informaci\u00f3, cosa que es tradueix en una experi\u00e8ncia m\u00e9s fluida per als usuaris i en una c\u00e0rrega de treball menor per als processadors. \u00c9s important i imprescindible la sincronitzaci\u00f3 del codi en HTML amb CSS perqu\u00e8 la informaci\u00f3 es presenti de manera correcta.</p>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#5-te-una-sintaxi-especifica","title":"5. T\u00e9 una sintaxi espec\u00edfica","text":"<p>Si b\u00e9, la majoria dels llenguatges comparteixen algunes funcions i signes, hi ha particularitats en l'\u00fas de CSS, per la qual cosa cal con\u00e8ixer el llenguatge de programaci\u00f3, aix\u00ed com les caracter\u00edstiques d'apilament. M\u00e9s endavant revisarem algunes de les utilitats espec\u00edfiques.</p>"},{"location":"Moduls/ARXIU/2425/AW/03CSS.html#6-permet-personalitzar-totalment-laparenca-de-les-pagines","title":"6. Permet personalitzar totalment l'aparen\u00e7a de les p\u00e0gines","text":"<p>CSS d\u00f3na cabuda a una gran llibertat creativa. Els dissenyadors tenen un ampli espectre de possibilitats amb les eines que CSS aporta. L'\u00fas de diferents codis de colors i de fonts permet emprar paletes de molt\u00edssimes tonalitats i m\u00faltiples tipografies. Aix\u00ed mateix, es poden disposar els elements visuals d'un lloc segons les necessitats del disseny.</p> <p>Anem per feina</p> <p>Feta aquesta introducci\u00f3 \u00e9s moment de comen\u00e7ar a aprendre a utilitzar-lo. Recorda, per\u00f2, continuar llegint la resta d'aquesta p\u00e0gina pel teu compte.</p> <p>Fes la seg\u00fcent pr\u00e0ctica: Practica CSS W3Schools</p> Qu\u00e8 vol dir que un lloc web sigui responsive? <p>El disseny web responsive o adaptatiu \u00e9s una t\u00e8cnica de disseny web que cerca la correcta visualitzaci\u00f3 duna mateixa p\u00e0gina en diferents dispositius. Des d'ordinadors d'escriptori fins a tablets i m\u00f2bils.</p> <p>Avui dia accedim a llocs web des de tota mena de dispositius; ordinador, tablet, smartphone\u2026 per la qual cosa, cada cop m\u00e9s, ens sorgeix la necessitat que la nostra web s'adapti a les diferents mides dels mateixos.</p> Qu\u00e8 s\u00f3n les media queries? <p>Les Media queries s o consultes sobre el medi permeten col\u00b7locar diferents propietats en funci\u00f3 de: - Si el mitj\u00e0 \u00e9s una pantalla o una impressora   - La mida de la pantalla   - La resoluci\u00f3 de la pantalla   - L'orientaci\u00f3 de la pantalla   - Etc.</p> <p>Pots visitar https://www.w3schools.com/css/css3_mediaqueries.asp per saber-ne m\u00e9s.</p> Qu\u00e8 vol dir indentar? <p>S'anomena indentaci\u00f3 de codi al fet d'utilitzar sagnat (moure lleugerament cap a la dreta) a les l\u00ednies de codi per facilitar-ne la lectura, i indicar visualment si ens trobem a l'interior d'una funci\u00f3, bucle, condicional, etc...</p> <p>Si vols saber-ne m\u00e9s pots llegir l'article Indentaci\u00f3 de codi.</p> Hi ha la propietat <code>transparency</code>? <p>No. Hi ha la <code>opacity</code>.</p> Quin \u00e9s l'efecte <code>ellipsis</code> de CSS de la propietat <code>text-overflow</code>? <p>Quan el text no hi cap, s'hi afegeixen punts suspensius.</p> <p>Pots veure el comportament de la propietat <code>desbordament de text</code> a aquest enlla\u00e7.</p> Per qu\u00e8 serveix definir un <code>@font-face</code> a CSS? <p>La regla <code>@font-face</code> permet descarregar una font o tipografia d'una p\u00e0gina web, carregar-la al navegador i utilitzar-la a les nostres p\u00e0gines encara que no estigui instal\u00b7lada al sistema. Tot aix\u00f2 de manera transparent a l'usuari, sense que hagi de fer cap acci\u00f3.</p> Qu\u00e8 s\u00f3n/fan les funcions <code>skewX()</code> i <code>skewY()</code>? <p>Les funcions de deformaci\u00f3 disponibles a CSS s\u00f3n les seg\u00fcents:</p> Funcions Significat skewX(xdeg) Estableix un angle d'ANGLE xdeg per a una deformaci\u00f3 2D respecte a l'eix X. skewY(ydeg) Estableix un angle d'ANGLE ydeg per a una deformaci\u00f3 2D respecte a l'eix Y. <p>Pots veure el comportament d'aquesta propietat a aquest enlla\u00e7.</p> Qu\u00e8 passa si apliquem el seg\u00fcent estil <code>transform: rotateX (90deg);</code>? <p>Pots veure el comportament d'aquesta propietat a aquest enlla\u00e7.</p> Qu\u00e8 passar\u00e0 aqu\u00ed? <p><pre><code>&lt;style&gt;\ndiv {\n  width: 100px;\n  height: 100px;\n  background: red;\n  transition: width 2s;\n}\n\ndiv:hover {\n  width: 300px;\n}\n&lt;/style&gt;\n\n&lt;body&gt;\n  &lt;div&gt;This is a div&lt;/div&gt;\n&lt;/body&gt;\n</code></pre> Que l'amplada del <code>div</code> es modificar\u00e0 depenent de si el ratol\u00ed est\u00e0 a sobre o no.</p> Qu\u00e8 fa el valor <code>ease</code> del <code>animation-timing-function</code>? <p>Mira aquest exemple de W3Schools Elements amb diferents valors de funci\u00f3 de temporitzaci\u00f3</p>"},{"location":"Moduls/ARXIU/2425/AW/_AW2425.html","title":"Aplicacions Web - SMX","text":""},{"location":"Moduls/ARXIU/2425/AW/_AW2425.html#resultats-daprenentatge-i-criteris-davaluacio","title":"Resultats d'aprenentatge i Criteris d'avaluaci\u00f3","text":"<p>En el Reial decret de ti\u0301tol (RD1691/2007) s'estableixen els criteris d'avaluacio\u0301 per a cadascun dels resultats d'aprenentatge de cada mo\u0300dul. Aquests criteris especifiquen allo\u0300 que s'ha d'avaluar per a comprovar si s'han aconseguit aquests resultats. Per al mo\u0300dul Seguretat informa\u0300tica, aquests so\u0301n els criteris d'avaluacio\u0301 (elements de capacitat) relacionats amb cada resultat d'aprenentatge:</p> <ol> <li> <p>Aplica mesures de seguretat passiva en sistemes informa\u0300tics descrivint caracteri\u0301stiques d'entorns i relacionant-les amb les seues necessitats.</p> <p>a)  S'ha valorat la importa\u0300ncia de mantenir la informacio\u0301 segura.</p> <p>b)  S'han descrit les difere\u0300ncies entre seguretat fi\u0301sica i lo\u0300gica.</p> <p>c)  S'han definit les caracteri\u0301stiques de la ubicacio\u0301 fi\u0301sica i condicions ambientals dels equips i servidors.</p> <p>d)  S'ha identificat la necessitat de protegir fi\u0301sicament els sistemes informa\u0300tics.</p> <p>e)  S'ha verificat el funcionament dels sistemes d'alimentacio\u0301 ininterrompuda.</p> <p>f)  S'han seleccionat els punts d'aplicacio\u0301 dels sistemes d'alimentacio\u0301 ininterrompuda.</p> <p>g)  S'han esquematitzat les caracteri\u0301stiques d'una poli\u0301tica de seguretat basada en llistes de control d'acce\u0301s.</p> <p>h)  S'ha valorat la importa\u0300ncia d'establir una poli\u0301tica de contrasenyes.</p> <p>i)  S'han valorat els avantatges que suposa la utilitzacio\u0301 de sistemes biome\u0300trics.</p> </li> <li> <p>Gestiona dispositius d'emmagatzematge descrivint els procediments efectuats i aplicant    te\u0300cniques per a assegurar la integritat de la informacio\u0301.</p> <p>a)  S'ha interpretat la documentacio\u0301 te\u0300cnica relativa a la poli\u0301tica d'emmagatzematge.</p> <p>b)  S'han tingut en compte factors inherents a l'emmagatzematge de la informacio\u0301 (rendiment, disponibilitat, accessibilitat, entre uns altres).</p> <p>c)  S'han classificat i enumerat els principals me\u0300todes d'emmagatzematge inclosos els sistemes d'emmagatzematge en xarxa.</p> <p>d)  S'han descrit les tecnologies d'emmagatzematge redundant i distribui\u0308t.</p> <p>e)  S'han seleccionat estrate\u0300gies per a la realitzacio\u0301 de co\u0300pies de seguretat.</p> <p>f)  S'ha tingut en compte la frequ\u0308e\u0300ncia i l'esquema de rotacio\u0301.</p> <p>g)  S'han realitzat co\u0300pies de seguretat amb diferents estrate\u0300gies.</p> <p>h)  S'han identificat les caracteri\u0301stiques dels mitjans d'emmagatzematge remots i extrai\u0308bles.</p> <p>i)  S'han utilitzat mitjans d'emmagatzematge remots i extrai\u0308bles.</p> <p>j)  S'han creat i restaurat imatges de respatler de sistemes en funcionament.</p> </li> <li> <p>Aplica mecanismes de seguretat activa descrivint les seues caracteri\u0301stiques i relacionant-les amb les necessitats d'u\u0301s del sistema informa\u0300tic.</p> <p>a)  S'han seguit plans de continge\u0300ncia per a actuar davant fallades de seguretat.</p> <p>b)  S'han classificat els principals tipus de programari malicio\u0301s.</p> <p>c)  S'han realitzat actualitzacions perio\u0300diques dels sistemes per a corregir possibles vulnerabilitats.</p> <p>d)  S'ha verificat l'origen i l'autenticitat de les aplicacions que s'instal\u00b7len en els sistemes.</p> <p>e)  S'han instal\u00b7lat, provat i actualitzat aplicacions especi\u0301fiques per a la deteccio\u0301 i eliminacio\u0301 de programari malicio\u0301s.</p> <p>f)  S'han aplicat te\u0300cniques de recuperacio\u0301 de dades.</p> </li> <li> <p>Assegura la privadesa de la informacio\u0301 transmesa en xarxes informa\u0300tiques descrivint    vulnerabilitats i instal\u00b7lant programari especi\u0301fic.</p> <p>a)  S'ha identificat la necessitat d'inventariar i controlar els serveis de xarxa.</p> <p>b)  S'ha contrastat la incide\u0300ncia de les te\u0300cniques d'enginyeria social en els fraus informa\u0300tics i robatoris d'informacio\u0301.</p> <p>c)  S'ha dedui\u0308t la importa\u0300ncia de minimitzar el volum de tra\u0300fic generat per la publicitat i el correu no desitjat.</p> <p>d)  S'han aplicat mesures per a evitar el monitoratge de xarxes cablejades.</p> <p>e)  S'han classificat i valorat les propietats de seguretat dels protocols usats en xarxes sense fils.</p> <p>f)  S'han descrit sistemes d'identificacio\u0301 com la signatura electro\u0300nica, certificat digital, entre uns altres.</p> <p>g)  S'han utilitzat sistemes d'identificacio\u0301 com la signatura electro\u0300nica, certificat digital, entre uns altres.</p> <p>h)  S'ha instal\u00b7lat i configurat un tallafocs en un equip o servidor.</p> </li> <li> <p>Reconeix la legislacio\u0301 i normativa sobre seguretat i proteccio\u0301 de dades analitzant les    repercussions del seu incompliment.</p> <p>a)  S'ha descrit la legislacio\u0301 sobre proteccio\u0301 de dades de cara\u0300cter personal.</p> <p>b)  S'ha determinat la necessitat de controlar l'acce\u0301s a la informacio\u0301 personal emmagatzemada.</p> <p>c)  S'han identificat les figures legals que intervenen en el tractament i manteniment dels fitxers de dades.</p> <p>d)  S'ha contrastat l'obligacio\u0301 de posar a la disposicio\u0301 de les persones les dades personals que els concerneixen.</p> <p>e)  S'ha descrit la legislacio\u0301 actual sobre els serveis de la societat de la informacio\u0301 i comerc\u0327 electro\u0300nic.</p> <p>f)  S'han contrastat les normes sobre gestio\u0301 de seguretat de la informacio\u0301.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/AW/lliuraments.html","title":"Lliurament i presentaci\u00f3 de tasques","text":"<p>En totes les tasques cal seguir el format seg\u00fcent:</p>"},{"location":"Moduls/ARXIU/2425/AW/lliuraments.html#lliurament-i-presentacio-en-format-pdf","title":"Lliurament i presentaci\u00f3 en format PDF","text":"<p>Si el lliurament de la tasca ha de ser un document PDF, el nom tindr\u00e0 el format seg\u00fcent:</p> <p><code>&lt;el teu usuari&gt;_t&lt;nombre de la tasca amb dos d\u00edgits&gt;.pdf</code></p> <p>Assegureu-vos que el nom no contingui la lletra \u00f1, els titlles ni els car\u00e0cters especials estranys. Aix\u00ed, per exemple, l'alumne Marcos Ruiz Garc\u00eda per a la primera tasca tindria el nom seg\u00fcent:</p> <p><code>tverderag_t01.pdf</code></p> <ol> <li>Ha de contenir una portada, n\u00famero de la tasca, t\u00edtol de la tasca, nom del m\u00f2dul professional, nom del cicle formatiu, autor(s) i data de realitzaci\u00f3.</li> <li>Ha de tenir un \u00edndex actualitzat amb hiperenlla\u00e7os a les diferents seccions i el n\u00famero de p\u00e0gina on s\u00f3n.</li> <li>Heu de tenir cada p\u00e0gina numerada.</li> <li>Les activitats han d'estar numerades i ordenades correctament. Per exemple: <code>1. Activitat</code>, <code>Activitat 1</code>, <code>1. &lt;T\u00edtol de l'activitat&gt;</code> o <code>Activitat 1: &lt;T\u00edtol de l'activitat&gt;</code> al lliurament de l'alumne.</li> <li>Cada activitat ha de tenir l'enunciat en negreta i la resposta en text normal.</li> <li>Cada imatge ha de tenir un text que la presenti o un peu de foto amb el format seg\u00fcent: <code>Figura &lt;n\u00famero&gt;: &lt;Breu descripci\u00f3 de la figura&gt;</code>.</li> <li>Les ordres, documents de configuraci\u00f3 i codi font han de quedar reflectits al PDF del lliurament en text pla per permetre copiar i enganxar d'una manera r\u00e0pida.</li> <li>Les ordres, documents de configuraci\u00f3 i codi font que es mostrin al document PDF han de tenir un estil de lletra monospace com pot ser el tipus de lletra Consoles o Courier New. <code>$sudo apt install neofetch</code>.</li> <li>Per a les activitats a m\u00e0 cal fer una foto a la resoluci\u00f3 de l'exercici i afegir-la al PDF.</li> </ol> <ul> <li>Les activitats d'HTML han d'estar en format HTML amb el nom <code>&lt;el teu usuari&gt;_a&lt;Nombre de l'activitat amb dos d\u00edgits&gt;.html</code>. Per exemple: <code>tverderag_a01.html</code>.</li> <li>Les activitats de JavaScript han d'estar en format JS amb el nom <code>&lt;el teu usuari&gt;_a&lt;Nombre de l'activitat amb dos d\u00edgits&gt;.js</code>. Per exemple: <code>tverderag_a01.js</code>.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AW/lliuraments.html#lliurament-i-presentacio-en-format-presentacio","title":"Lliurament i presentaci\u00f3 en format presentaci\u00f3","text":"<p>Si el lliurament de la tasca ha de ser un document PDF, el nom tindr\u00e0 el format seg\u00fcent:</p> <p><code>&lt;el teu usuari&gt;_t&lt;nombre de la tasca amb dos d\u00edgits&gt;.pdf</code></p> <p>Assegureu-vos que el nom no contingui la lletra \u00f1, els titlles ni els car\u00e0cters especials estranys. Aix\u00ed, per exemple, l'alumne Marcos Ruiz Garc\u00eda per a la primera tasca tindria el nom seg\u00fcent:</p> <p><code>tverderag_t01.pdf</code></p> <p>En cas que no es pugui traslladar la presentaci\u00f3 desenvolupada a format PDF, s'haur\u00e0 de lliurar un document PDF amb un nombre de captures adequat i un enlla\u00e7 web p\u00fablic amb la presentaci\u00f3 real.</p> <p>El document PDF SEMPRE ha de contenir una portada, n\u00famero de la tasca, t\u00edtol de la tasca, nom del m\u00f2dul professional, nom del cicle formatiu, autor(s) i data de realitzaci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/AW/lliuraments.html#com-saber-el-meu-nom-dusuari","title":"Com saber el meu nom d'usuari","text":"<p>L'usuari que has d'usar sempre en les tasques ha de complir el format seg\u00fcent:</p> <ul> <li>La inicial del teu primer nom.</li> <li>El teu primer cognom.</li> <li>La inicial del teu segon cognom si en tens.</li> </ul> <p>Suposem en Tofol Verdera Grimalt el seu usuari ser\u00e0: tverderag.</p> <p>En totes les tasques, cada cop que es faci menci\u00f3 a <code>&lt;el teu usuari&gt;</code> haur\u00e0s de substituir-lo pel teu usuari.</p> <p>Sempre que sigui possible haureu d'usar el vostre nom d'usuari perqu\u00e8 no hi hagi cap dubte sobre l'autoria de les tasques. </p>"},{"location":"Moduls/ARXIU/2425/AW/lliuraments_new.html","title":"Lliurament i presentaci\u00f3 de tasques","text":"<p>En totes les tasques cal seguir el format seg\u00fcent:</p>"},{"location":"Moduls/ARXIU/2425/AW/lliuraments_new.html#lliurament-i-presentacio-en-format-pdf","title":"Lliurament i presentaci\u00f3 en format PDF","text":"<p>Si el lliurament de la tasca ha de ser un document PDF, el nom tindr\u00e0 el format seg\u00fcent:</p> <p><code>&lt;el teu usuari&gt;_t&lt;nombre de la tasca amb dos d\u00edgits&gt;.pdf</code></p> <p>Assegureu-vos que el nom no contingui la lletra \u00f1, els titlles ni els car\u00e0cters especials estranys. Aix\u00ed, per exemple, l'alumne Marcos Ruiz Garc\u00eda per a la primera tasca tindria el nom seg\u00fcent:</p> <p><code>tverderag_t01.pdf</code></p> <ol> <li>Ha de contenir una portada, n\u00famero de la tasca, t\u00edtol de la tasca, nom del m\u00f2dul professional, nom del cicle formatiu, autor(s) i data de realitzaci\u00f3.</li> <li>Ha de tenir un \u00edndex actualitzat amb hiperenlla\u00e7os a les diferents seccions i el n\u00famero de p\u00e0gina on s\u00f3n.</li> <li>Heu de tenir cada p\u00e0gina numerada.</li> <li>Les activitats han d'estar numerades i ordenades correctament. Per exemple: <code>1. Activitat</code>, <code>Activitat 1</code>, <code>1. &lt;T\u00edtol de l'activitat&gt;</code> o <code>Activitat 1: &lt;T\u00edtol de l'activitat&gt;</code> al lliurament de l'alumne.</li> <li>Cada activitat ha de tenir l'enunciat en negreta i la resposta en text normal.</li> <li>Cada imatge ha de tenir un text que la presenti o un peu de foto amb el format seg\u00fcent: <code>Figura &lt;n\u00famero&gt;: &lt;Breu descripci\u00f3 de la figura&gt;</code>.</li> <li>Les ordres, documents de configuraci\u00f3 i codi font han de quedar reflectits al PDF del lliurament en text pla per permetre copiar i enganxar d'una manera r\u00e0pida.</li> <li>Les ordres, documents de configuraci\u00f3 i codi font que es mostrin al document PDF han de tenir un estil de lletra monospace com pot ser el tipus de lletra Consoles o Courier New. <code>$sudo apt install neofetch</code>.</li> <li>Per a les activitats a m\u00e0 cal fer una foto a la resoluci\u00f3 de l'exercici i afegir-la al PDF.</li> </ol> <p>A m\u00e9s:</p> <ol> <li>El document no ha de contenir faltes ortogr\u00e0fiques.</li> <li>En el cas d'utilitzar captures de pantalla, les captures tamb\u00e9 han de demostrar lautoria de les activitats. Per tant, aquestes captures hauran de ser de tota la pantalla de lalumne perqu\u00e8 es vegi la data de realitzaci\u00f3 i el nom del fitxer que est\u00e0 obert.</li> </ol> <p> Exemple de portada</p> <p> Exemple d'activitat</p> <p>Us deixo a codiUsuari_tXX.docx una plantilla en format DOCX realitzada amb WPS Office que compleix la majoria dels requisits.  Recordau eliminar els s\u00edmbols \"&lt;\" i \"&gt;\" en utilitzar aquesta plantilla!</p>"},{"location":"Moduls/ARXIU/2425/AW/lliuraments_new.html#lliurament-i-presentacio-en-format-zip","title":"Lliurament i presentaci\u00f3 en format ZIP","text":"<p>Si el lliurament de la tasca ha de ser un document ZIP, el nom tindr\u00e0 el format seg\u00fcent:</p> <p><code>&lt;el teu usuari&gt;_t&lt;nombre de la tasca amb dos d\u00edgits&gt;.zip</code></p> <p>Assegureu-vos que el nom no contingui la lletra \u00f1, els accents ni els car\u00e0cters especials estranys. Aix\u00ed, per exemple, l'alumne Tofol Verdera Grimalt per a la primera tasca tindria el nom seg\u00fcent:</p> <p><code>tverderag_t01.zip</code></p> <p>A l'arrel del fitxer ZIP s'haur\u00e0 de trobar el document PDF (en cas que es demani) amb el nom <code>tverderag_t01.zip.pdf</code> i les activitats en el format que correspongui:</p> <ul> <li>Les activitats de XML han d'estar en format XML amb el nom <code>&lt;el teu usuari&gt;_a&lt;Nombre de l'activitat amb dos d\u00edgits&gt;.xml</code>. Per exemple: <code>tverderag_a01.xml</code>.</li> <li>Les activitats d'HTML han d'estar en format HTML amb el nom <code>&lt;el teu usuari&gt;_a&lt;Nombre de l'activitat amb dos d\u00edgits&gt;.html</code>. Per exemple: <code>tverderag_a01.html</code>.</li> <li>Les activitats de Packet Tracer 6.2 han d'estar en format PKT amb el nom <code>&lt;el teu usuari&gt;_a&lt;Nombre de l'activitat amb dos d\u00edgits&gt;.pkt</code>. Per exemple: <code>tverderag_a01.pts</code>.</li> <li>Les activitats de JavaScript han d'estar en format JS amb el nom <code>&lt;el teu usuari&gt;_a&lt;Nombre de l'activitat amb dos d\u00edgits&gt;.js</code>. Per exemple: <code>tverderag_a01.js</code>.</li> <li>Les activitats amb altres tipus d'extensi\u00f3 han d'estar en format corresponent <code>&lt;el teu usuari&gt;_a&lt;Nombre de l'activitat amb dos d\u00edgits&gt;.&lt;extensi\u00f3&gt;</code>. Per exemple: <code>tverderag_a01.jar</code>.</li> </ul>"},{"location":"Moduls/ARXIU/2425/AW/lliuraments_new.html#lliurament-i-presentacio-en-format-presentacio","title":"Lliurament i presentaci\u00f3 en format presentaci\u00f3","text":"<p>Si el lliurament de la tasca ha de ser un document PDF, el nom tindr\u00e0 el format seg\u00fcent:</p> <p><code>&lt;el teu usuari&gt;_t&lt;nombre de la tasca amb dos d\u00edgits&gt;.pdf</code></p> <p>Assegureu-vos que el nom no contingui la lletra \u00f1, els titlles ni els car\u00e0cters especials estranys. Aix\u00ed, per exemple, l'alumne Marcos Ruiz Garc\u00eda per a la primera tasca tindria el nom seg\u00fcent:</p> <p><code>tverderag_t01.pdf</code></p> <p>En cas que no es pugui traslladar la presentaci\u00f3 desenvolupada a format PDF, s'haur\u00e0 de lliurar un document PDF amb un nombre de captures adequat i un enlla\u00e7 web p\u00fablic amb la presentaci\u00f3 real.</p> <p>El document PDF SEMPRE ha de contenir una portada, n\u00famero de la tasca, t\u00edtol de la tasca, nom del m\u00f2dul professional, nom del cicle formatiu, autor(s) i data de realitzaci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/AW/lliuraments_new.html#com-saber-el-meu-nom-dusuari","title":"Com saber el meu nom d'usuari","text":"<p>L'usuari que has d'usar sempre en les tasques ha de complir el format seg\u00fcent:</p> <ul> <li>La inicial del teu primer nom.</li> <li>El teu primer cognom.</li> <li>La inicial del teu segon cognom si en tens.</li> </ul> <p>Suposem en Tofol Verdera Grimalt el seu usuari ser\u00e0: tverderag.</p> <p>En totes les tasques, cada cop que es faci menci\u00f3 a <code>&lt;el teu usuari&gt;</code> haur\u00e0s de substituir-lo pel teu usuari.</p> <p>Sempre que sigui possible haureu d'usar el vostre nom d'usuari perqu\u00e8 no hi hagi cap dubte sobre l'autoria de les tasques. {:.prompt-warning}</p>"},{"location":"Moduls/ARXIU/2425/AW/temp.html","title":"Tarea: Introducci\u00f3n a HTML","text":"","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#entrega-y-presentacion","title":"Entrega y presentaci\u00f3n","text":"<p>La entrega ser\u00e1 en formato ZIP. Leer Entrega y presentaci\u00f3n de tareas.</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#calificacion","title":"Calificaci\u00f3n","text":"<p>La tarea se calificar\u00e1 con una nota de 0 a 10.</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#actividades","title":"Actividades","text":"<p>A continuaci\u00f3n se listan las actividades que se deben realizar para esta pr\u00e1ctica.</p> <p>Si tienes alguna duda de c\u00f3mo se usa una etiqueta puedes consultar el manual HTML Tutorial en ingl\u00e9s o el manual HTML: Lenguaje de etiquetas de hipertexto en espa\u00f1ol.</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#corrige-los-errores-de-estructura","title":"Corrige los errores de estructura","text":"<p>A continuaci\u00f3n se te presenta un documento web con algunos errores de sintaxis y a nivel de estructura del documento web. Corr\u00edgelos.</p> <pre><code>&lt;DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;/meta charset=\"utf-8\"&gt;\n        &lt;meta name=\"description\" content=\"Ejercicio HTML - Corrige los errores\"&gt;\n    &lt;body&gt;\n    &lt;/head&gt;\n        &lt;title&gt;Corrige los errores que encuentres en el documento&lt;/title&gt;\n\n    &lt;h1&gt;Aprender HTML es muy divertido&lt;/h1&gt;\n\n    &lt;p&gt;Lorem fistrum veniam qui qui jarl. Pecador laboris tiene musho peligro caballo blanco caballo negroorl.\n\n    &lt;p&gt;Lorem fistrum veniam qui qui jarl. Pecador laboris tiene musho peligro caballo blanco caballo negroorl.&lt;/p&gt;\n\n\n    &lt;/body&gt;\n    &lt;p&gt;Lorem fistrum veniam qui qui jarl. Pecador laboris tiene musho peligro caballo blanco caballo negroorl.&lt;/p&gt;\n&lt;html&gt;\n</code></pre> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#etiquetas-de-texto-basicas","title":"Etiquetas de texto b\u00e1sicas","text":"<p>En este ejercicio vamos a practicar con las etiquetas de texto m\u00e1s comunes.</p> <p>Las etiquetas seleccionadas para este ejercicio son:</p> <pre><code>&lt;p&gt;, &lt;strong&gt;, &lt;i&gt;, &lt;em&gt;, &lt;b&gt;, &lt;blockquote&gt;\n&lt;hr/&gt;, &lt;br/&gt;, &lt;h1&gt;,&lt;h2&gt;,&lt;h3&gt;\n</code></pre> <p>A partir del siguiente texto:</p> <pre><code>Berners-Lee trabaj\u00f3 en el CERN desde junio hasta diciembre de 1980. Durante ese tiempo, propuso un proyecto basado en el hipertexto para facilitar la forma de compartir y la puesta al d\u00eda de la informaci\u00f3n entre investigadores. En este periodo tambi\u00e9n construy\u00f3 un programa llamado ENQUIRE que no lleg\u00f3 a ver la luz.1\u200b Despu\u00e9s de dejar el CERN, en 1980, se fue a trabajar a la empresa de John Poole Image Computer Systems Ltd., pero regres\u00f3 al CERN otra vez en 1984. En 1989, el CERN era el nodo de Internet m\u00e1s grande de Europa y Berners-Lee vio la oportunidad de unir Internet y el hipertexto (HTTP y HTML), de lo que surgir\u00eda la World Wide Web. Desarroll\u00f3 su primera propuesta de la Web el 12 de marzo de 1989,2\u200b pero no tuvo mucho eco, por lo que en 1990 y con la ayuda de Robert Cailliau, hicieron una revisi\u00f3n que fue aceptada por su gerente, Mike Sendall. Us\u00f3 ideas similares a las que hab\u00eda usado en el sistema Enquire, para crear la World Wide Web, para esto dise\u00f1\u00f3 y construy\u00f3 el primer navegador (llamado WorldWideWeb y desarrollado con NEXTSTEP) y el primer servidor Web al que llam\u00f3 httpd (HyperText Transfer Protocol daemon). El primer servidor Web se encontraba en el CERN y fue puesto en l\u00ednea el 6 de agosto de 1991. Esto proporcion\u00f3 una explicaci\u00f3n sobre lo que era el World Wide Web, c\u00f3mo uno podr\u00eda tener un navegador y c\u00f3mo establecer un servidor Web. Este fue tambi\u00e9n el primer directorio Web del mundo, ya que Berners-Lee mantuvo una lista de otros sitios Web aparte del suyo. Debido a que tanto el software del servidor como del cliente fue liberado de forma gratuita desde el CERN, el coraz\u00f3n de Internet Europeo en esa \u00e9poca, su difusi\u00f3n fue muy r\u00e1pida. El n\u00famero de servidores Web pas\u00f3 de veintis\u00e9is en 1992 a doscientos en octubre de 1995 lo que refleja cual fue la velocidad de la difusi\u00f3n de internet. En 1994 entr\u00f3 en el Laboratorio de Ciencias de la Computaci\u00f3n e Inteligencia Artificial del Massachusetts Institute of Technology. Se traslad\u00f3 a EE.UU. y puso en marcha el W3C, que dirige actualmente. El W3C es un organismo internacional de estandarizaci\u00f3n de tecnolog\u00edas Web dirigido conjuntamente por el Instituto Tecnol\u00f3gico de Massachusetts, el ERCIM franc\u00e9s y la Universidad de Kei\u014d en Jap\u00f3n. Este organismo decidi\u00f3 que todos sus est\u00e1ndares fuesen libres, es decir, que los pudiese utilizar todo el mundo libremente sin coste alguno, lo que sin lugar a dudas fue una de las grandes razones para que la Web haya llegado a tener la importancia que tiene hoy en d\u00eda. En su libro Tejiendo la red, publicado en 1999, Berners-Lee explica por qu\u00e9 la tecnolog\u00eda web es libre y gratis. Se considera al mismo tiempo el inventor y el protector de la web. \n</code></pre> <p>Haz que tenga un formato seg\u00fan la siguiente imagen:</p> <p> Biograf\u00eda de Tim Berners-Lee en HTML</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#etiquetas-de-texto-menos-comunes","title":"Etiquetas de texto menos comunes","text":"<p>En este ejercicio vamos a practicar con las etiquetas de texto menos comunes.</p> <p>Las etiquetas seleccionadas para este ejercicio son:</p> <pre><code>&lt;p&gt;, &lt;strong&gt;, &lt;i&gt;, &lt;em&gt;, &lt;b&gt;, &lt;blockquote&gt;, &lt;hr/&gt;, &lt;br/&gt;, &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;\n&lt;abbr&gt;, &lt;cite&gt;, &lt;u&gt;, &lt;del&gt;, &lt;ins&gt;, &lt;code&gt;, &lt;pre&gt;, &lt;q&gt;, &lt;s&gt;\n</code></pre> <p>A partir del siguiente texto:</p> <pre><code>Biograf\u00eda de Vinton Cerf Cuando solo ten\u00eda 25 a\u00f1os trabaj\u00f3 en el motor de cohete F-1 que sirvi\u00f3 para propulsar el cohete Saturno V que viaj\u00f3 a la luna, y a principios de los a\u00f1os 70 comenz\u00f3 a desarrollar con Robert Khan un conjunto de protocolos de comunicaciones para la red militar, financiado por la agencia gubernamental DARPA. El objetivo era crear una \"red de redes\" que permitiera interconectar las distintas redes del Departamento de Defensa de los Estados Unidos, todas ellas de diferentes tipos y que funcionaban con diversos sistemas operativos, con independencia del tipo de conexi\u00f3n: radioenlaces, sat\u00e9lites y l\u00edneas telef\u00f3nicas. Las investigaciones, lideradas por Vinton Cerf, primero desde la Universidad de California (1967-1972) y posteriormente desde la Universidad de Stanford (1972-1976), llevaron al dise\u00f1o del conjunto de protocolos que hoy son conocidos como TCP/IP (Transmission Control Protocol/Internet Protocol), que fue presentado por Vinton Cerf y Robert Khan en 1972. Entre 1976 y 1982, trabajando en DARPA, fue pionero en el desarrollo de la transmisi\u00f3n por radio y sat\u00e9lite de paquetes, responsable del proyecto Internet y del programa de investigaci\u00f3n de seguridad en la red. Siempre preocupado por los problemas de conexi\u00f3n de redes, Cerf estableci\u00f3 en 1979 la Internet Configuration Control Board (que posteriormente se denomin\u00f3 Internet Activities Board), y fue su primer presidente. Entre 1982 y 1986, Cerf dise\u00f1\u00f3 el MCI MAIL, primer servicio comercial de correo electr\u00f3nico que se conectar\u00eda a Internet. En 1992 fue uno de los fundadores de la Internet Society y su primer presidente. Actualmente Vinton Cerf es el vicepresidente mundial y Chief Internet Evangelist de Google. Es miembro del Consejo Asesor Internacional del Centro Cultural Internacional Oscar Niemeyer de Avil\u00e9s, Asturias. \n</code></pre> <p>Haz que tenga un formato seg\u00fan la siguiente imagen:</p> <p> Biograf\u00eda de Vinton Cerf en HTML</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#encabezados","title":"Encabezados","text":"<p>A continuaci\u00f3n se te presenta un documento de texto plano para el que se te pide darle formato a los encabezados mediante un procesador de textos (se recomienda usar WPS Office).</p> <pre><code>T\u00edtulo principal que resume la idea general del escrito\n&lt;Ir a https://www.chiquitoipsum.com/ y copiar un p\u00e1rrafo del lorem fistrum.&gt;\nPrimera idea principal a desarrollar en el escrito.\n&lt;Ir a https://www.chiquitoipsum.com/ y copiar un p\u00e1rrafo del lorem fistrum.&gt;\nPrimer subtema a desarrollar de la primera idea principal.\n&lt;Ir a https://www.chiquitoipsum.com/ y copiar un p\u00e1rrafo del lorem fistrum.&gt;\nSegundo subtema a desarrollar de la primera idea principal.\n&lt;Ir a https://www.chiquitoipsum.com/ y copiar un p\u00e1rrafo del lorem fistrum.&gt;\nSegunda idea principal a desarrollar en el escrito.\n&lt;Ir a https://www.chiquitoipsum.com/ y copiar un p\u00e1rrafo del lorem fistrum.&gt;\nPrimer subtema a desarrollar de la segunda idea principal.\n&lt;Ir a https://www.chiquitoipsum.com/ y copiar otro p\u00e1rrafo del lorem fistrum.\nSegundo subtema a desarrollar de la primera idea principal.\n&lt;Ir a https://www.chiquitoipsum.com/ y copiar un p\u00e1rrafo del lorem fistrum.&gt;\nConclusiones \n&lt;Ir a https://www.chiquitoipsum.com/ y copiar un p\u00e1rrafo del lorem fistrum.&gt;\n&lt;Ir a https://www.chiquitoipsum.com/ y copiar un p\u00e1rrafo del lorem fistrum.&gt;\n</code></pre> <p>El resultado deber\u00e1 ser algo parecido a esto:</p> <p> Portada con tabla de contenidos</p> <p> Primera p\u00e1gina</p> <p>Esta actividad se entrega en formato .pdf</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#codigos-y-nombres-html","title":"C\u00f3digos y nombres HTML","text":"<p>Dados los siguientes caracteres a continuaci\u00f3n escribe su equivalente mediante el nombre HTML en un documento HTML v\u00e1lido.</p> <p>En caso de no existir un nombre HTML usa el n\u00famero HTML.</p> <pre><code>; &lt; &gt;  &amp;  ' \"  backslash   /  copyright, nonbreaking space, $\n</code></pre> <p>Existen 2 formas de codificar los caracteres.</p> <ul> <li>La primera y m\u00e1s f\u00e1cil de recordar es mediante el nombre HTML: <code>&amp;nombre</code>;</li> <li>Si no hay m\u00e1s remedio entonces usamos el c\u00f3digo HTML: <code>&amp;#numero</code>;</li> </ul> <p>Pod\u00e9is usar el recurso www.ascii.cl</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#caracteres-escapados","title":"Caracteres escapados","text":"<p>Escribe en un documento web el siguiente texto teniendo en cuenta que se usan los encabezados h1 a h6.</p> <p> Encabezados con car\u00e1cteres escapados</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#espacios-en-blanco-y-encabezados","title":"Espacios en blanco y encabezados","text":"<p>Escribe el HTML necesario para hacer posible que se visualize el resultado de la imagen.</p> <p>Observaciones:</p> <ul> <li>El ejercicio est\u00e1 resuelto sin el uso de CSS.</li> <li>Todas las l\u00edneas est\u00e1n resueltas mediante un t\u00edtulo <code>&lt;h3&gt;</code>.</li> </ul> <p> Encabezados con espacios</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#listas-de-definiciones","title":"Listas de definiciones","text":"<p>Crea una lista de definiciones para los siguientes t\u00e9rminos relacionadas con la teor\u00eda explicada en clase. Deber\u00e1s buscar la definici\u00f3n de estos t\u00e9rminos en Internet.</p> <ul> <li>XML</li> <li>HTML</li> <li>W3C</li> <li>RFC</li> </ul> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#listas-ordenadas-y-no-ordenadas","title":"Listas ordenadas y no ordenadas","text":"<p>Escribe con HTML las listas seg\u00fan las siguientes im\u00e1genes.</p> <p> Listas ordenadas</p> <p> Listas NO ordenadas</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#listas-anidadas","title":"Listas anidadas","text":"<p>Transcribe la siguiente imagen en lenguaje HTML.</p> <p> Lista anidada 1</p> <p>Transcribe la siguiente imagen en lenguaje HTML.</p> <p> Lista anidada 2</p> <p>Transcribe la siguiente imagen en lenguaje HTML.</p> <p> Lista anidada 3</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#listas-correctamente-anidadas","title":"Listas correctamente anidadas","text":"<p>Anida correctamente la lista no ordenada que se muestra en la imagen.</p> <p> Lista HTML anidada con un subnivel y un subsubnivel</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#urls-relativas","title":"URLs relativas","text":"<p>A continuaci\u00f3n se te presenta un directorio de carpetas y documentos HTML seg\u00fan la imagen.</p> <p>Consta de:</p> <ul> <li>Una carpeta server de la que cuelgan las carpetas ficheros, prueba, subdir y en la que hay un documento de nombre raiz.html.</li> <li>Dentro de la carpeta ficheros hay el documento carta.html.</li> <li>Dentro de la carpeta prueba hay el documento prueba.html.</li> <li>La carpeta subdir contiene una carpeta de nombre direct y 3 archivos HTML de nombres docu.html, lista.html, index.html.</li> <li>La carpeta direct contiene un documento web de nombre textual.html.</li> </ul> <p> Carpetas y archivos HTML de un proyecto web</p> <p>Dentro de cada documento HTML especificado a continuaci\u00f3n debes poder navegar a los siguientes sitios:</p> <ul> <li>Desde raiz.html debe haber un enlace relativo a textual.html</li> <li>Desde docu.html debe haber un enlace relativo a lista.html</li> <li>Desde carta.html debe haber un enlace relativo a prueba.html</li> <li>Desde carta.html debe haber un enlace relativo a docu.html</li> <li>Desde textual.html debe haber un enlace relativo a raiz.html</li> <li>Desde textual.html debe haber un enlace relativo a subdir (carpeta)</li> <li>Desde textual.html debe haber un enlace relativo a prueba (carpeta)</li> <li>Desde textual.html debe haber un enlace relativo a prueba.html</li> </ul> <p>Recuerda que las rutas relativas deber\u00edan funcionar en cualquier PC.</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#libro-digital-navegable","title":"Libro digital navegable","text":"<p>Crea un libro digital que conste de 4 cap\u00edtulos y un \u00edndice desde el que se puede acceder a:</p> <ul> <li>Cada uno de los cap\u00edtulos del libro.</li> <li>Cada una de las secciones definidas dentro de cada cap\u00edtulo.</li> </ul> <p>Cada cap\u00edtulo se divide de las secciones:</p> <ul> <li>Introducci\u00f3n (2 p\u00e1rrafos de tipo chiquito ipsum)</li> <li>Nudo (Como m\u00ednimo 10 p\u00e1rrafos de tipo chiquito ipsum)</li> <li>Desenlace (2 p\u00e1rrafos chiquito ipsum)</li> </ul> <p>En el pi\u00e9 de p\u00e1gina de cada uno de los cap\u00edtulos deben aparecer 2 enlaces que ocupen 2 l\u00edneas diferenciadas que nos permitan:</p> <ul> <li>Ir al \u00edndice del libro digital.</li> <li>Situarse de nuevo en la parte superior del documento cap\u00edtulo.</li> </ul> <p>Una vez finalizado el libro digital configura la cabecera de todos los cap\u00edtulos para indicar que cap\u00edtulo es el primero, cual viene despu\u00e9s, cual es el anterior y cu\u00e1l es el \u00faltimo. Utiliza para ello la etiqueta <code>&lt;link&gt;</code>.</p> <p>A continuaci\u00f3n se muestran a modo de gu\u00eda una captura de pantalla de la soluci\u00f3n final para el \u00edndice y uno de los cap\u00edtulos.</p> <p> Resultado final \u00edndice de cap\u00edtulos libro digital con HTML</p> <p> Muestra del resultado final de un cap\u00edtulo del libro digital navegable.</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#corrige-los-errores-i","title":"Corrige los errores I","text":"<p>El siguiente documento HTML est\u00e1 plagado de errores. \u00bfPuedes encontrarlos todos?</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf8\" /&gt;\n    &lt;title&gt;Corrige los errores&lt;/title&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;h1&gt;&lt;strong&gt;Corrige los errores&lt;/strong&gt;&lt;/h1&gt;\n\n    &lt;h2&gt;\u00cdndice de contenidos&lt;/h2&gt;\n    &lt;ul&gt;\n      &lt;li&gt;\n        &lt;a href=\"ancla\"&gt;Enlace 1&lt;/a&gt;\n        &lt;ul&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;Enlace 2&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"\"&gt;Enlace 3&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;Enlace 4&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;h2&gt;\n      &lt;p&gt;Lorem fistrum&lt;/p&gt;\n    &lt;/h2&gt;\n\n    &lt;br /&gt;\n\n    &lt;p&gt;\n      Lorem fistrum te voy a borrar el cerito ese que llega pecador a peich al\n      ataquerl pecador mamaar a wan. No puedor me cago en tus muelas fistro\n      jarl. Llevame al sircoo mamaar torpedo quietooor. A gramenawer al ataquerl\n      te voy a borrar el cerito quietooor no te digo trigo por no llamarte\n      Rodrigor. Benemeritaar torpedo te va a has\u00e9 pupitaa amatomaa benemeritaar\n      por la gloria de mi madre a gramenawer a peich papaar papaar llevame al\n      sircoo. Qu\u00e9 dise usteer de la pradera jarl ese hombree te va a has\u00e9\n      pupitaa pecador quietooor est\u00e1 la cosa muy malar. Va ust\u00e9 muy cargadoo\n      amatomaa de la pradera por la gloria de mi madre quietooor.\n    &lt;/p&gt;\n\n    &lt;br /&gt;\n\n    &lt;p id=\"#ancla\"&gt;\n      Lorem fistrum te voy a borrar el cerito ese que llega pecador a peich al\n      ataquerl pecador mamaar a wan. No puedor me cago en tus muelas fistro\n      jarl. Llevame al sircoo mamaar torpedo quietooor. A gramenawer al ataquerl\n      te voy a borrar el cerito quietooor no te digo trigo por no llamarte\n      Rodrigor. Benemeritaar torpedo te va a has\u00e9 pupitaa amatomaa benemeritaar\n      por la gloria de mi madre a gramenawer a peich papaar papaar llevame al\n      sircoo. Qu\u00e9 dise usteer de la pradera jarl ese hombree te va a has\u00e9\n      pupitaa pecador quietooor est\u00e1 la cosa muy malar. Va ust\u00e9 muy cargadoo\n      amatomaa de la pradera por la gloria de mi madre quietooor.\n    &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#mapas-de-imagenes-i","title":"Mapas de im\u00e1genes I","text":"<p>A partir de la imagen que podr\u00e1s descargar a continuaci\u00f3n genera un mapa de imagen seg\u00fan las siguientes especificaciones:</p> <ul> <li>El \u00e1rea magenta p\u00farpura est\u00e1 delimitada por los puntos 105,95 y 125,207. Cuando se pulsa env\u00eda al usuario a https://marcosruiz.github.io/posts/atajos-de-teclado/.</li> <li>El \u00e1rea verde oscuro est\u00e1 delimitada por los puntos 126,95 y 215,117. Cuando se pulsa env\u00eda al usuario a https://olgacarreras.blogspot.com/.</li> <li>El \u00e1rea verde azul claro est\u00e1 delimitada por los puntos 128,140 y 215,161. Cuando se pulsa env\u00eda al usuario a https://marcosruiz.github.io/posts/trabajar-visual-studio-code/.</li> </ul> <p> Letra F</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#mapas-de-imagenes-ii","title":"Mapas de im\u00e1genes II","text":"<p>A partir de la imagen que podr\u00e1s descargar a continuaci\u00f3n genera un mapa de imagen seg\u00fan las siguientes especificaciones:</p> <ul> <li>El \u00e1rea negro delimitado por los puntos 95,44 y 128,257 env\u00eda al usuario a https://marcosruiz.github.io/posts/atajos-de-teclado/ cuando se pulsa. En su interior tiene un \u00e1rea definido por los puntos 104,56 y 117,244 que es inerte cuando es pulsado, generando un hueco.</li> <li>El \u00e1rea negro delimitado por los puntos 128,44 y 235,74 env\u00eda al usuario a https://olgacarreras.blogspot.com/ cuando se pulsa. En su interior tiene un \u00e1rea definido por los puntos 128,56 y 226,65 que es inerte cuando es pulsado, generando un hueco.</li> <li>El \u00e1rea negro delimitado por los puntos 128,138 y 220,165 env\u00eda al usuario a https://marcosruiz.github.io/posts/trabajar-visual-studio-code/ cuando se pulsa. En su interior tiene un \u00e1rea definido por los puntos 128,144 y 211,156 que es inerte cuando es pulsado, generando un hueco.</li> </ul> <p> Letra F</p> <p>Si algo no funciona como esperas prueba a jugar con el orden de los elementos.</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#audio-y-video","title":"Audio y v\u00eddeo","text":"<p>Escribe un c\u00f3digo HTML que muestre por pantalla dos reproductores de audio.</p> <p>En el primero debes reproducir un audio alojado en tu ordenador/hosting.</p> <p>En el segundo debes reproducir el audio directamente desde la fuente original.</p> <p>Puedes encontrar archivos de audio mp3 en Audio Archive.</p> <p>A continuaci\u00f3n reproduce exactamente el mismo ejercicio pero en este caso reproductores de v\u00eddeo.</p> <p>Puedes encontrar archivos de v\u00eddeo mp4 en Moving Image Archive.</p> <p>Usa audios y v\u00eddeos lo m\u00e1s cortos posible. Para encontrar audios y v\u00eddeos cortos pod\u00e9is buscar la palabra \"sample\". Recuerda que el n\u00famero de megas en las entregas est\u00e1 limitado.</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#frameset","title":"Frameset","text":"<p>La etiqueta <code>&lt;frameset&gt;</code> de HTML ha sido eliminada de los est\u00e1ndares web, sin embargo es interesante conocerla. Mediante el uso adecuado de la etiqueta <code>&lt;frameset&gt;</code> de HTML y siguiendo la imagen a continuaci\u00f3n haz que cada secci\u00f3n muestre las p\u00e1ginas web especificadas.</p> <ul> <li>verde, ancho del 100% y muestra https://marcosruiz.github.io/posts/atajos-de-teclado/.</li> <li>rosa, ancho del 25% y muestra https://olgacarreras.blogspot.com/</li> <li>amarillo, ancho del 75% y muestra https://marcosruiz.github.io/posts/trabajar-visual-studio-code/</li> <li>gris, ancho del 50% y muestra https://en.wikipedia.org/wiki/Tim_Berners-Lee</li> <li>marr\u00f3n, ancho del 25% y muestra https://es.wikipedia.org/wiki/ARPANET.</li> </ul> <p> Framesets</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#creacion-de-tablas-i","title":"Creaci\u00f3n de tablas I","text":"<p>Dado el siguiente documento HTML se desea conseguir el resultado de la siguiente imagen.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;title&gt;Ejercicio tablas HTML&lt;/title&gt;\n &lt;meta charset=\"utf-8\"/&gt;\n &lt;style&gt;\n  table{\n   border-collapse:collapse;\n   caption-side: bottom;\n  }\n  caption{\n   font-weight:bold;\n   margin-top:16px;\n  }\n  th,td{padding:5px 10px;}\n  td,th{border:1px solid #1c1c1c;text-align:center;}\n &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;!-- puedes copiar y pegar todo el c\u00f3digo en vscode para resolver el ejercicio --&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p> Tabla f\u00e1cil</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#creacion-de-tablas-ii","title":"Creaci\u00f3n de tablas II","text":"<p>Crea un documento HTML mediante el cu\u00e1l se visualize una tabla como la de la imagen.</p> <p>Para que se vea bonita la tabla a\u00f1ade dentro del <code>&lt;head&gt;</code> del documento HTML este c\u00f3digo.</p> <pre><code>&lt;style&gt;\n    table{\n        border-collapse: collapse;\n    }\n\n    td{\n        border:1px solid #000;\n        padding:25px;\n        background-color:#ccc;\n    }\n&lt;/style&gt;\n</code></pre> <p> Tabla con <code>colspan</code> y <code>rowspan</code></p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#corrige-los-errores-ii","title":"Corrige los errores II","text":"<p>Corrige los siguientes ejercicios est\u00e1n plagados de errores de sintaxis HTML.</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#a","title":"a)","text":"<pre><code>&lt;head&gt;\n  &lt;meta author=\"\"/&gt;\n  &lt;meta description=\"\"/&gt;\n&lt;head&gt;\n</code></pre>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#b","title":"b)","text":"<pre><code>&lt;html&gt;\n  &lt;header&gt;\n    &lt;title&gt;&lt;/title&gt;\n  &lt;/header&gt;\n  &lt;body&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#c","title":"c)","text":"<pre><code>&lt;table&gt;\n&lt;td&gt;\n  &lt;tr&gt;&lt;/tr&gt;\n  &lt;tr&gt;&lt;/tr&gt;\n&lt;/td&gt;\n&lt;td&gt;\n  &lt;tr&gt;&lt;/tr&gt;\n  &lt;tr&gt;&lt;/tr&gt;\n&lt;/td&gt;\n&lt;/table&gt;\n</code></pre>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#d","title":"d)","text":"<pre><code>&lt;p&gt;\nLas cosas con como son &lt;/br&gt;\nhasta que dejan de serlas &lt;/br&gt;\n\u00bfves el &lt;em&gt;&lt;b&gt;error&lt;/em&gt;&lt;/b&gt;?\n&lt;/p&gt;\n</code></pre> <p>Esta actividad se entrega en formato .md o .txt</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#iniciacion-a-las-capas","title":"Iniciaci\u00f3n a las capas","text":"<p>En la siguiente imagen se presenta una propuesta de p\u00e1gina web.</p> <p>Trad\u00facela a lenguaje de marcado siguiendo las indicaciones del dibujo.</p> <p>Incluye tambi\u00e9n una ancla al final del documento que permita llevar al visitante web a la cabecera del documento.</p> <p>Todav\u00eda no usemos etiquetas HTML5, lo haremos en un ejercicio posterior que consistir\u00e1 en actualizar este actual a las nuevas etiquetas. Por ejemplo en lugar de la etiqueta <code>&lt;header&gt;</code> usaremos <code>&lt;div id=\"head\"&gt;</code>.</p> <p> Enunciado ejercicio capas HTML</p> <p>Para mayor claridad, si lo deseas,  a\u00f1ade dentro del <code>&lt;head&gt;</code> el siguiente c\u00f3digo que entender\u00e1s mejor cuando se de CSS.</p> <pre><code>&lt;style&gt;\n  div{\n   border:1px solid #000000;\n   padding:5px 10px;\n  }\n&lt;/style&gt;\n</code></pre> <p>El resultado final ser\u00e1 parecido a la siguiente imagen:</p> <p> Resultado final capas HTML</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#estructura-de-un-documento-web","title":"Estructura de un documento web","text":"<p>Se muestra un mockup de propuesta de p\u00e1gina web.</p> <p>{:.question} Investiga que es un mockup.</p> <p>Trad\u00facela a lenguaje de marcado agrupando y estructurando las etiquetas en grupos de informaci\u00f3n seg\u00fan criterio.</p> <p>Si en el mockup consideras que falta alguna etiqueta o informaci\u00f3n muy importante a\u00f1\u00e1dela en la soluci\u00f3n.</p> <p>OJO! La soluci\u00f3n no es \u00fanica.</p> <p>Todav\u00eda no usemos etiquetas HTML5, lo haremos en un ejercicio posterior que consistir\u00e1 en actualizar este actual a las nuevas etiquetas. Por ejemplo en lugar de la etiqueta <code>&lt;header&gt;</code> usaremos <code>&lt;div id=\"head\"&gt;</code>.</p> <p> Croquis realizado mediante Balsamiq</p> <p>Para mayor claridad, si lo deseas, a\u00f1ade dentro del <code>&lt;head&gt;</code> el siguiente c\u00f3digo.</p> <pre><code>&lt;style&gt;\n  div{\n   border:1px solid #000000;\n   padding:5px 10px;\n  }\n&lt;/style&gt;\n</code></pre> <p>{:.question} \u00bfSe podr\u00eda poner el elemento <code>&lt;style&gt;</code> en otra parte? \u00bfPor qu\u00e9 se indica a\u00f1adirlo en el <code>&lt;head&gt;</code>?</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#de-xhtml-a-html5-i","title":"De XHTML a HTML5 I","text":"<p>Traduce el siguiente c\u00f3digo a HTML5:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;title&gt;Capas web&lt;/title&gt;\n &lt;meta charset=\"utf-8\"/&gt;\n &lt;meta name=\"description\" content=\"Ejemplo de documento HTML con capas como paso intermedio a transformar &lt;div&gt; en etiquetas de HTML5\"/&gt;\n\n &lt;style&gt;\n  div{\n   border:1px solid #000000;\n   padding:5px 10px;\n  }\n &lt;/style&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"wrapper\"&gt;\n &lt;!-- cabecera --&gt;\n &lt;div id=\"header\"&gt;\n  &lt;img src=\"\" alt=\"logotipo\"/&gt;\n  &lt;a href=\"tel:977207030\" title=\"Ll\u00e1menos\"&gt;977207030&lt;/a&gt;\n  &lt;!-- Men\u00fa de navegaci\u00f3n --&gt;\n  &lt;div id=\"nav\"&gt;\n   &lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"\"&gt;Servicios&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"\"&gt;Blog&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"\"&gt;Contacto&lt;/a&gt;&lt;/li&gt;   \n   &lt;/ul&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- cuerpo principal del documento --&gt;\n &lt;div id=\"container\"&gt;\n  &lt;div id=\"main\"&gt;\n   &lt;div  id=\"section1\"&gt;\n    &lt;h1&gt;Un t\u00edtulo muy representativo&lt;/h1&gt;\n    &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n\n    &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n   &lt;/div&gt;\n\n   &lt;div  id=\"section2\"&gt;   \n    &lt;video controls src=\"\"&gt;&lt;/video&gt;\n    &lt;!-- contenido --&gt;\n    &lt;div id=\"article1\"&gt;\n     &lt;h2&gt;Un t\u00edtulo 2&lt;/h2&gt;\n     &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n     &lt;a href=\"\" title=\"ir a...\"&gt;Saber m\u00e1s&lt;/a&gt;\n    &lt;/div&gt;\n   &lt;/div&gt;\n\n   &lt;div  id=\"section3\"&gt;\n    &lt;!-- contenido --&gt;\n    &lt;div id=\"article2\"&gt;\n     &lt;h2&gt;Un t\u00edtulo 2&lt;/h2&gt;\n     &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n     &lt;a href=\"\" title=\"ir a...\"&gt;Saber m\u00e1s&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;audio controls src=\"\"&gt;&lt;/audio&gt;\n   &lt;/div&gt;     \n  &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- pie de p\u00e1gina --&gt;\n &lt;div id=\"footer\"&gt;\n  &lt;div id=\"section4\"&gt;\n   &lt;h3&gt;Sobre m\u00ed&lt;/h3&gt;\n   &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div id=\"section5\"&gt;\n   &lt;h3&gt;Horarios&lt;/h3&gt;\n   &lt;p&gt;Ma\u00f1anas:9.00-14.00&lt;br/&gt;Tardes:16.00-19.00&lt;br/&gt;Domingo cerrado.&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div id=\"section6\"&gt;\n   &lt;img src=\"\" alt=\"ISO9001\"/&gt;\n   &lt;img src=\"\" alt=\"ISO14001\"/&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- ancla --&gt;\n &lt;a href=\"#header\"&gt;Subir&lt;/a&gt;\n&lt;/div&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> <p>{:.question} \u00bfPor qu\u00e9 es importante usar las etiquetas sem\u00e1nticas de HTML5?</p> <p>{:.question} \u00bfQu\u00e9 es el SEO y que tiene que ver con las etiquetas sem\u00e1nticas?</p> <p>{:.activity}</p>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#creacion-de-formularios","title":"Creaci\u00f3n de formularios","text":"<p>Escribe el HTML de un formulario web seg\u00fan las especificaciones descritas a continuaci\u00f3n:</p> <p>En este ejercicio no se te pide que escribas css</p> <ul> <li>Nombre. El campo debe aceptar un m\u00e1ximo de 30 caracteres.</li> <li>Apellidos. El campo debe aceptar un m\u00e1ximo de 30 caracteres.</li> <li>Email. Campo de relleno obligado.</li> <li>Asunto a elegir una opci\u00f3n entre pedir presupuesto, solicitar cita previa, otros. Deben mostrarse las 3 opciones en un cajet\u00edn seg\u00fan la imagen (usa el atributo <code>size</code>).</li> <li>C\u00f3mo nos a escogido a elegir una o m\u00e1s opciones entre un amigo, googleando, spam, otros.</li> <li>Un mensaje. Debe tener una longitud m\u00e1xima de 300 caracteres.</li> <li>Aceptaci\u00f3n de cl\u00e1usula RGPD. De obligada selecci\u00f3n antes de enviar el curr\u00edculum.</li> <li>Bot\u00f3n de env\u00edo.</li> </ul> <p> Resultado final del formulario</p> Con el inspector de c\u00f3digo del navegador (F12) puedes llegar a observar qu\u00e9 datos se estar\u00edan enviando al servidor. Intenta averiguar como.","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/temp.html#bibliografia-no-usar","title":"Bibliograf\u00eda (NO USAR)","text":"<ul> <li>EJERCICIOS HTML</li> </ul>","tags":["desarrollo de aplicaciones multiplataforma","lenguajes de marcas y sistemas de gesti\u00f3n de informaci\u00f3n","administraci\u00f3n de sistemas inform\u00e1ticos de red","desarrollo de aplicaciones web","dam","daw","asir","lmsgi","pr\u00e1ctica","tarea","sistemas microinform\u00e1ticos y redes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExerciciHTMLCSSRestaurant.html","title":"ExerciciHTMLCSSRestaurant","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExerciciHTMLCSSRestaurant.html#practica-creacio-duna-pagina-web-per-a-un-restaurant","title":"Pr\u00e0ctica: Creaci\u00f3 d'una p\u00e0gina web per a un restaurant","text":"<p>Objectiu: Crear una p\u00e0gina web responsiva i est\u00e8ticament agradable per a un restaurant fictici.</p> <p>Requeriments:</p> <ol> <li> <p>Estructura HTML:</p> <ul> <li> <p>Una cap\u00e7alera amb el nom del restaurant i un men\u00fa de navegaci\u00f3 (Inici, Men\u00fa, Sobre Nosaltres, Contacte).</p> </li> <li> <p>Una secci\u00f3 principal amb una imatge del restaurant i un breu text descriptiu.</p> </li> <li> <p>Una secci\u00f3 per al men\u00fa amb una llista de plats (primer plat, segon plat, postres) i els seus preus.</p> </li> <li> <p>Una secci\u00f3 \"Sobre Nosaltres\" amb informaci\u00f3 del restaurant i una imatge dels propietaris o l'equip.</p> </li> <li> <p>Una secci\u00f3 de contacte amb un formulari per a enviar missatges (nom, correu electr\u00f2nic, missatge).</p> </li> </ul> </li> <li> <p>Estilitzaci\u00f3 CSS:</p> <ul> <li> <p>Utilitzar fonts personalitzades i colors per donar una imatge coherent.</p> </li> <li> <p>Fer servir Flexbox o Grid per alinear els elements de forma adequada.</p> </li> <li> <p>Assegurar que la p\u00e0gina sigui responsiva i es vegi b\u00e9 en dispositius m\u00f2bils.</p> </li> <li> <p>Afegir estils interactius per als elements del men\u00fa de navegaci\u00f3 (canvi de color quan es passa el ratol\u00ed per sobre, etc.).</p> </li> </ul> </li> <li> <p>Funcionalitats Addicionals:</p> <ul> <li> <p>Afegir transicions o animacions per fer la p\u00e0gina m\u00e9s din\u00e0mica.</p> </li> <li> <p>Utilitzar pseudo-elements i pseudo-classes per millorar l'experi\u00e8ncia visual.</p> </li> <li> <p>Incorporar una imatge de fons fixa per a la secci\u00f3 principal. </p> </li> </ul> </li> </ol>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html","title":"ExercicisCSS","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercicis-css","title":"Exercicis CSS","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-1-selectors","title":"Exercici 1: Selectors","text":"<p>A partir del codi HTML i CSS que es mostra a continuaci\u00f3, afegeix els selectors CSS que falten per aplicar els estils als elements indicats en els comentaris: <pre><code>&lt;!doctype html&gt;  \n&lt;html&gt;  \n&lt;head&gt;\n\n        &lt;meta charset=\"UTF-8\"&gt;  \n        &lt;title&gt;Exercici de selectors&lt;/title&gt;\n\n        &lt;style type=\"text/css\"&gt;  \n            /* Tots els elements de la p\u00e0gina */  \n            { font: 1em/1.3 Arial, Helvetica, sans-serif; }  \n\n            /* Tots els par\u00e0grafs de la p\u00e0gina */  \n            { color: #555; }  \n\n            /* Tots els par\u00e0grafs continguts en #primero */  \n            { color: #336699; }  \n\n            /* Tots els enlla\u00e7os de la p\u00e0gina */  \n            { color: #CC3300; }  \n\n            /* Els elements \"em\" continguts en #primero */  \n            { background: #FFFFCC; padding: .1em; }  \n\n            /* Tots els elements \"em\" de classe \"especial\" en tota la p\u00e0gina */  \n            { background: #FFCC99; border: 1px solid #FF9900; padding: .1em; }  \n\n            /* Elements \"span\" continguts en .normal */  \n            { font-weight: bold; }  \n\n        &lt;/style&gt;  \n    &lt;/head&gt;  \n\n    &lt;body&gt;  \n\n        &lt;div id=\"primero\"&gt;\n\n            &lt;p&gt;Lorem ipsum dolor sit amet, &lt;a href=\"#\"&gt;consectetuer adipiscing elit&lt;/a&gt;.   \n            Praesent blandit nibh at felis. Sed nec diam in dolor vestibulum aliquet.   \n            Duis ullamcorper, nisi non facilisis molestie, &lt;em&gt;lorem sem aliquam nulla&lt;/em&gt;,   \n            id lacinia velit mi vestibulum enim.&lt;/p&gt;  \n\n        &lt;/div&gt;  \n\n        &lt;div class=\"normal\"&gt;\n\n            &lt;p&gt;Phasellus eu velit sed lorem sodales egestas. Ut feugiat. &lt;span&gt;&lt;a href=\"#\"&gt;  \n            Donec porttitor&lt;/a&gt;, magna eu varius luctus,&lt;/span&gt; metus massa tristique massa,   \n            in imperdiet est velit vel magna. Phasellus erat. Duis risus. &lt;a href=\"#\"&gt;Maecenas   \n            dictum&lt;/a&gt;, nibh vitae pellentesque auctor, tellus velit consectetuer tellus, tempor  \n            pretium felis tellus at metus.&lt;/p&gt;  \n\n            &lt;p&gt;Cum sociis natoque &lt;em class=\"especial\"&gt;penatibus et magnis&lt;/em&gt; dis parturient   \n            montes, nascetur ridiculus mus. Proin aliquam convallis ante. Pellentesque habitant  \n            morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nunc aliquet.   \n            Sed eu metus. Duis justo.&lt;/p&gt;  \n\n            &lt;p&gt;Donec facilisis blandit velit. Vestibulum nisi. Proin volutpat, &lt;em class=\"especial\"&gt;  \n            enim id iaculis congue&lt;/em&gt;, orci justo ultrices tortor, &lt;a href=\"#\"&gt;quis lacinia eros   \n            libero in eros&lt;/a&gt;. Sed malesuada dui vel quam. Integer at eros.&lt;/p&gt;\n\n        &lt;/div&gt;  \n\n    &lt;/body&gt;  \n&lt;html&gt;\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-2-selectors-color","title":"Exercici 2: Selectors - Color","text":"<p>A partir del codi HTML proporcionat, afegeix les regles CSS necess\u00e0ries per a que la p\u00e0gina resultant tingui el mateix aspecte que el de la seg\u00fcent imatge:</p> <p></p> <p>Colors emprats</p> <pre><code>teal,  \nred,  \norange,  \nblue,  \npurple,  \nolive,  \nfuchsia,  \ngreen\n</code></pre> <p>Codi HTML <pre><code>&lt;!doctype html&gt;  \n&lt;html&gt;  \n&lt;head&gt;\n\n        &lt;meta charset=\"UTF-8\"&gt;  \n        &lt;title&gt;Exercici de selectors&lt;/title&gt;\n\n        &lt;style type=\"text/css\"&gt;  \n            /* No borrar la siguiente regla css porque es necesaria para ver los bordes de la tabla */  \n            table, tr, th, td {border:1px solid #000; border-collapse:collapse; padding:5px;}  \n        &lt;/style&gt;\n\n    &lt;/head&gt;\n\n    &lt;body&gt;\n\n        &lt;h1 id=\"titulo\"&gt;Lorem ipsum dolor sit amet&lt;/h1&gt;  \n\n        &lt;p&gt;Nulla pretium. Sed tempus nunc vitae neque. &lt;strong&gt;Suspendisse gravida&lt;/strong&gt;, metus a   \n        scelerisque sollicitudin, lacus velit ultricies nisl, nonummy tempus neque diam quis felis.   \n        &lt;span class=\"destacado\"&gt;Etiam sagittis tortor&lt;/span&gt; sed arcu sagittis tristique.&lt;/p&gt;  \n\n        &lt;h2 id=\"subtitulo\"&gt;Aliquam tincidunt, sem eget volutpat porta&lt;/h2&gt;  \n\n        &lt;p&gt;Vivamus velit dui, placerat vel, feugiat in, ornare et, urna.  &lt;a href=\"#\"&gt;Aenean turpis   \n        metus, &lt;em&gt;aliquam non&lt;/em&gt;, tristique in&lt;/a&gt;, pretium varius, sapien. Proin vitae nisi.    \n        Suspendisse &lt;span class=\"especial\"&gt;porttitor purus ac elit&lt;/span&gt;. Suspendisse eleifend odio   \n        at dui. In in elit sed metus pretium elementum.&lt;/p&gt;  \n\n        &lt;table summary=\"Descripci\u00f3n de la tabla y su contenido\"&gt;  \n        &lt;caption&gt;T\u00edtulo de la tabla&lt;/caption&gt;  \n            &lt;thead&gt;  \n                &lt;tr&gt;  \n                        &lt;th scope=\"col\"&gt;&lt;/th&gt;  \n                    &lt;th scope=\"col\" class=\"especial\"&gt;T\u00edtulo columna 1&lt;/th&gt;  \n                    &lt;th scope=\"col\" class=\"especial\"&gt;T\u00edtulo columna 2&lt;/th&gt;  \n                &lt;/tr&gt;  \n            &lt;/thead&gt;  \n\n            &lt;tfoot&gt;  \n                &lt;tr&gt;  \n                    &lt;th scope=\"col\"&gt;&lt;/th&gt;  \n                    &lt;th scope=\"col\"&gt;T\u00edtulo columna 1&lt;/th&gt;  \n                    &lt;th scope=\"col\"&gt;T\u00edtulo columna 2&lt;/th&gt;  \n                &lt;/tr&gt;  \n            &lt;/tfoot&gt;  \n\n            &lt;tbody&gt;  \n                &lt;tr&gt;  \n                    &lt;th scope=\"row\" class=\"especial\"&gt;T\u00edtulo fila 1&lt;/th&gt;  \n                    &lt;td&gt;Donec purus ipsum&lt;/td&gt;  \n                    &lt;td&gt;Curabitur &lt;em&gt;blandit&lt;/em&gt;&lt;/td&gt;  \n                &lt;/tr&gt;  \n                &lt;tr&gt;  \n                    &lt;th scope=\"row\"&gt;T\u00edtulo fila 2&lt;/th&gt;  \n                    &lt;td&gt;Donec &lt;strong&gt;purus ipsum&lt;/strong&gt;&lt;/td&gt;  \n                    &lt;td&gt;Curabitur blandit&lt;/td&gt;  \n                &lt;/tr&gt;  \n            &lt;/tbody&gt;  \n        &lt;/table&gt;  \n\n        &lt;div id=\"adicional\"&gt;\n\n            &lt;p&gt;Donec purus ipsum, posuere id, venenatis at, &lt;span&gt;placerat ac, lorem&lt;/span&gt;.   \n            Curabitur blandit, eros sed gravida aliquet, risus justo porta lorem, ut mollis   \n            lectus tortor in orci. Pellentesque nec augue.&lt;/p&gt;  \n\n            &lt;p&gt;Fusce nec felis eu diam pretium adipiscing. &lt;span id=\"especial\"&gt;Nunc elit elit,  \n            vehicula vulputate&lt;/span&gt;, venenatis in, posuere id, lorem. Etiam sagittis, tellus   \n            in ultrices accumsan, diam nisi feugiat ante, eu congue magna mi non nisl.&lt;/p&gt;  \n\n            &lt;p&gt;Vivamus ultrices aliquet augue. &lt;a href=\"#\"&gt;Donec arcu pede, pretium vitae&lt;/a&gt;,   \n            rutrum aliquet, tincidunt blandit, pede. Aliquam in nisi. Suspendisse volutpat.   \n            Nulla facilisi. Ut ullamcorper nisi quis mi.&lt;/p&gt;  \n        &lt;/div&gt;\n\n    &lt;/body&gt;  \n&lt;/html&gt;\n</code></pre></p> <p>Tingueu en compte que la propietat que cal utilitzar \u00e9s color i que com a valor es poden indicar directament el nom color.</p> <p>Els noms dels colors estan estandaritzats i es corresponen amb el nom en angl\u00e8s de cada color. En aquest exercici, cal utilitzar els seg\u00fcents colors: teal, red, blue, orange, purple, olive, fuchsia i green. Los nombres de los colores tambi\u00e9n est\u00e1n estandarizados y se corresponden con el nombre en ingl\u00e9s de cada color. En este ejercicio, se deben utilizar los colores: teal, red, blue, orange, purple, olive, fuchsia y green.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-3-color-text-i-font","title":"Exercici 3: Color, Text i Font","text":"<p>L\u2019objectiu de l\u2019activitat \u00e9s usant propietats CSS de color, de text i de font, formata la la p\u00e0gina en html per a que tingui el seg\u00fcent aspecte.</p> <p></p> <p>Atributs</p> <ul> <li>background-color, color</li> <li>font-family, font-size, font-style, font-weight</li> <li>text-align, text-transform; text-decoration</li> </ul> <p>Valors Atributs</p> <ul> <li>Colors: #CCCC99; black; #666633; #990033; #FFFFFF; #D2C8BD;</li> <li>Font: sans-serif;</li> <li>Alineaci\u00f3 text: justify;</li> <li>Mida font: 150%; 130%;</li> <li>Transformaci\u00f3 text: uppercase; capitalize;</li> <li>Estil font: normal;</li> <li>Pes font: bold; normal;</li> <li>Decoraci\u00f3 text: underline;</li> </ul> <pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Curr\u00edculum&lt;/title&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;link href=\"estils/curriculum.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Curr\u00edculum Vitae de Laura Riu Font&lt;/h1&gt;\n&lt;h2&gt;Dades personals&lt;/h2&gt;\n&lt;p&gt;\n    &lt;em&gt;Nom i Cognoms:&lt;/em&gt; Laura Riu Font&lt;br /&gt;\n    &lt;em&gt;Data de naixement:&lt;/em&gt; 12 de Juliol de 1975&lt;br /&gt;\n    &lt;em&gt;Lloc de naixement:&lt;/em&gt; Girona&lt;br /&gt;\n    &lt;em&gt;D.N.I. n\u00famero:&lt;/em&gt; 00000000Z&lt;br /&gt;\n    &lt;em&gt;Adre\u00e7a:&lt;/em&gt; C/Bosc 12, 1er - 00000 Girona&lt;br /&gt;\n    &lt;em&gt;Tel\u00e8fon:&lt;/em&gt; (972) 000 00 00&lt;br /&gt;\n    &lt;em&gt;Email:&lt;/em&gt; laura@laura.org\n&lt;/p&gt;\n&lt;h2&gt;Formaci\u00f3 acad\u00e8mica&lt;/h2&gt;\n&lt;p&gt;\n    &lt;strong&gt;2005-2006:&lt;/strong&gt; M\u00e0ster en Sotware Lliure, UOC.&lt;br /&gt;\n    &lt;strong&gt;2000-2004:&lt;/strong&gt; Llicenciada en Inform\u00e0tica, UPC.&lt;/p&gt;\n\n&lt;h2&gt;Altres cursos i seminaris&lt;/h2&gt;\n&lt;p&gt;\n    &lt;strong&gt;2003:&lt;/strong&gt; \"La inform\u00e0tica a l'escola\", UAB. (10h)&lt;br /&gt;\n    &lt;strong&gt;2004:&lt;/strong&gt; \"Programaci\u00f3 web\", UPC. (50h)&lt;br /&gt;\n    &lt;strong&gt;2005:&lt;/strong&gt; \"Servidors web\", UOC. (30h.)&lt;br /&gt;\n&lt;/p&gt;\n&lt;h2&gt;Experi\u00e8ncia professional&lt;/h2&gt;\n&lt;p&gt;\n    &lt;strong&gt;2002-2004:&lt;/strong&gt; Professora de l'acad\u00e8mia \"Estudia\" de refor\u00e7 universitari. Impartici\u00f3 d'assignatures de Programaci\u00f3.&lt;br /&gt;\n    &lt;strong&gt;2005-2006:&lt;/strong&gt; Contracte d'un any a l'Empresa SOFT, S.L., realitzant tasques de programadora amb el llenguatge de programaci\u00f3 PHP.&lt;br /&gt;\n    &lt;strong&gt;2007-2008:&lt;/strong&gt; Contracte d'un any a l'Empresa HARD, S.L., realitzant tasques de programadora amb el llenguatge de programaci\u00f3 Java.\n&lt;/p&gt;\n&lt;h2&gt;Idiomes&lt;/h2&gt;\n&lt;p&gt;\n    &lt;em&gt;Catal\u00e0:&lt;/em&gt; Nivel Alt. Certificat C de catal\u00e0.&lt;br /&gt;\n    &lt;em&gt;Castell\u00e0:&lt;/em&gt; Nivell Alt.\n    &lt;em&gt;Angl\u00e9s:&lt;/em&gt; Nivell Alt. T\u00edtol de l'Escola Oficial d'Idiomes.&lt;br /&gt;\n&lt;/p&gt;\n&lt;h2&gt;Inform\u00e0tica&lt;/h2&gt;\n&lt;p&gt;\n    &lt;em&gt;Sistemes operatius:&lt;/em&gt; GNU/Linux, FreeBSD&lt;br /&gt;\n    &lt;em&gt;Llenguatges de programaci\u00f3:&lt;/em&gt; PHP, Java, C&lt;br /&gt;\n    &lt;em&gt;Altres:&lt;/em&gt; Ofim\u00e0tica general\n&lt;/p&gt;\n&lt;h2&gt;Altres dades d'inter\u00e8s&lt;/h2&gt;\n&lt;p&gt;Carnet de conduir B-1.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-4-el-model-de-caixa-i-el-model-visual","title":"Exercici 4: El model de caixa i el model visual","text":"<p>L\u2019objectiu de l\u2019activitat \u00e9s fer una p\u00e0gina web que reculli informaci\u00f3 de quatre distribucions de GNU/Linux, usant les propietats CSS de color, text i font, el model de caixa i el model visual.</p> <p>Cerqueu una breu descripci\u00f3 de quatre distribucions de GNU/Linux i el seu logotip. Creeu una web que tingui un men\u00fa superior fix d\u2019enlla\u00e7os que vagin a parar a cadascuna de les descripcions, que estaran en el mateix document.</p> <p>Cada descripci\u00f3 ha de tenir les seccions seg\u00fcents:</p> <ul> <li>B\u00e0ner amb el logotip repetit de la distribuci\u00f3 com a fons.</li> <li>T\u00edtol amb el nom de la distribuci\u00f3.</li> <li>Descripci\u00f3 de la distribuci\u00f3.</li> <li>Enlla\u00e7 extern a la p\u00e0gina oficial de la distribuci\u00f3.</li> </ul> <p>Atributs</p> <ul> <li>background-color, color</li> <li>background-image</li> <li>text-align, text-decoration, line-height</li> <li>font-family</li> <li>clear</li> <li>margin-top; margin-bottom</li> <li>border</li> <li>padding</li> </ul> <p>Valors Atributs</p> <ul> <li>Colors: #F3F3CC; #9EB847; #FFFFFF; #C87533; #FEBF10; #33170D;</li> <li>Font: sans-serif;</li> <li>Alineaci\u00f3 text: center;</li> <li>Netejar: both;</li> <li>Marges: 5em; 0.5em;</li> <li>Farciment: 0 0.5em 0.5em; 0.2em;</li> <li>Vores: dotted thin #33170D;</li> <li>Al\u00e7ada l\u00ednia: 2em;</li> <li>Imatge de fons: url(\"../img/xxxx.png\");</li> <li>Decoraci\u00f3 text: none; underline;</li> </ul> <p>Exemple:</p> <p></p> <p>Useu el Bluefish per fer aquesta activitat.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-5-posicionament-i-model-de-caixa","title":"Exercici 5: Posicionament i model de caixa","text":"<p>L\u2019objectiu d\u2019aquesta activitat \u00e9s agafar destresa amb el treball amb capes HTML i CSS3.</p> <p>Elaboreu amb capes HTML i CSS3 una imatge com la que es mostra a la figura.</p> <p></p> <p>Feu servir:</p> <ul> <li>Principalment la propietat position de CSS per elaborar aquest exercici.</li> <li>La propietat border-radius i border per donar forma als diferents components de la figura proposada, ja sigui el rectangle, els triangle o els cercles.</li> <li>Doneu color a les caixes corresponents, amb la propietat background-color.</li> </ul> <p>Useu el Bluefish per fer aquesta activitat.</p> <pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Solucio c\u00e0mara&lt;/title&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;div id=\"cerclepetit\" class=\"fons\"&gt;&lt;/div&gt;\n        &lt;div id=\"cerclegran\" class=\"fons\"&gt;&lt;/div&gt;\n        &lt;div id=\"coscamara\" class=\"fons\"&gt;&lt;/div&gt;\n        &lt;div id=\"triangle\"&gt;&lt;/div&gt;\n    &lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> <p>Atributs</p> <ul> <li>background-color</li> <li>width, height</li> <li>border-radius, border-top, border-right, border-bottom</li> <li>position</li> <li>left, top</li> <li>margin-left</li> </ul> <p>Valors Atributs</p> <ul> <li>Colors: #000;</li> <li>Amplades: 50px; 70px; 160px; 0;</li> <li>Al\u00e7ades: 50px; 70px; 90px; 0;</li> <li>Cantonades: 25px; 35px; 5px;</li> <li>Posicionament: absolute; relative;</li> <li>Esquerra: 15px; 90px;</li> <li>A dalt: 53px; 32px; 100px; 110px;</li> <li>Vores: 30px solid transparent; 60px solid black; 30px solid transparent;</li> <li>Marges: 158px;</li> </ul>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-6-posicionament-float","title":"Exercici 6: Posicionament float","text":"<p>L\u2019objectiu d\u2019aquesta activitat \u00e9s treballar el posicionament per la creaci\u00f3 d\u2019un layout.</p> <p>Elaboreu un layout com el que es mostra a la figura.</p> <p></p> <p>Feu servir les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>La propietat float pels tres elements centrals.</li> <li>Feu servir margin per separar els elements centrals.</li> <li>Feu servir padding perqu\u00e8 el text contingut a les \u00e0rees de color verd no toqui la vora.</li> <li>Doneu colors diferents als textos i a les caixes corresponents, amb les propietats color i background-color.</li> <li>Feu servir z-index o posicionament per superposar el text a les imatges.</li> </ul> <p>Useu el Bluefish per fer aquesta activitat.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Soluci\u00f3 columnes&lt;/title&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div id=\"contenidor\"&gt;\n    &lt;article&gt;\n        &lt;p id=\"primera\"&gt;Lorem ipsum dolor sit amet, consectetur\n            adipiscing elit, sed do eiusmod tempor incididunt ut\n            labore et dolore magna aliqua.\n        &lt;/p&gt;\n    &lt;/article&gt;\n    &lt;article&gt;\n        &lt;p id=\"segona\"&gt;Lorem ipsum dolor sit amet, consectetur\n            adipiscing elit, sed do eiusmod tempor incididunt ut\n            labore et dolore magna aliqua.\n        &lt;/p&gt;\n    &lt;/article&gt;\n    &lt;article&gt;\n        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing\n            elit, sed do eiusmod tempor incididunt ut labore et\n            dolore magna aliqua.\n        &lt;/p&gt;\n    &lt;/article&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Atributs</p> <ul> <li>color, background-color, background-image</li> <li>max-width</li> <li>margin</li> <li>width, height</li> <li>float</li> <li>position</li> <li>bottom</li> <li>padding</li> </ul> <p>Valors Atributs</p> <ul> <li>Colors: rgb(15,114,95); white; rgba(15,114,95,0.8); rgba(15,114,95,0.5);</li> <li>Posicionament: absolute; relative;</li> <li>A baix: 30px;</li> <li>Mida m\u00e0xima: 960px;</li> <li>Marges: 0 auto; 20px;</li> <li>Amplades: 250px;</li> <li>Al\u00e7ades: 280px;</li> <li>Flotaci\u00f3: left;</li> <li>Imatge de fons: url(\"./imatges/imatgefons.jpg\");</li> <li>Farciment: 15px;</li> </ul>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-7-maquetacio-web","title":"Exercici 7: Maquetaci\u00f3 web","text":"<p>L\u2019objectiu de l\u2019activitat \u00e9s construir una estructura web amb algunes propietats CSS addicionals.</p> <p>Heu de crear un document HTML i el document CSS corresponent per generar l\u2019estructura seg\u00fcent:</p> <p></p> <p>i que es compleixin els requisits seg\u00fcents:</p> <ul> <li>En el cos hi ha d\u2019haver una imatge de fons fixada al mig de la pantalla.</li> <li>El t\u00edtol ha de tenir color de fons gris clar, el text ha d\u2019estar centrat i la mida de la lletra ha de ser molt gran.</li> <li>Els par\u00e0grafs que hi hagi en el cos han de complir el seg\u00fcent:</li> <li>El text ha d\u2019estar justificat.</li> <li>La lletra ha de ser de color gris fosc.</li> <li>La mida de la lletra ha de ser petita.</li> <li>Han de tenir una vora superior gruixuda de color verd fosc i una vora inferior puntejada de ::*color verd fosc.</li> <li>Els marges superior i inferior han de ser de 10 px.</li> <li>Tots els farciments han de ser de 5 px.</li> <li>Cada \u00edtem del men\u00fa ha de complir el seg\u00fcent:</li> <li>El text ha d\u2019estar centrat.</li> <li>Les min\u00fascules han de ser smallcaps.</li> <li>El color de fons ha de ser gris clar.</li> <li>La lletra ha de ser de color taronja fosc i negreta.</li> <li>Hi ha d\u2019haver una mica de separaci\u00f3 entre les lletres.</li> </ul> <p>Useu el Bluefish per fer aquesta activitat. <pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Estructura&lt;/title&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;link href=\"estils/sense_taules.css\" type=\"text/css\" rel=\"stylesheet\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;header id=\"cap\"&gt;\n    &lt;h1&gt;T\u00edtol de la web&lt;/h1&gt;\n&lt;/header&gt;\n&lt;section id=\"lateral\"&gt;\n    &lt;nav id=\"menu\"&gt;\n        &lt;ul&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Secci\u00f3 1&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Secci\u00f3 2&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Secci\u00f3 3&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/nav&gt;\n&lt;/section&gt;\n&lt;section id=\"cos\"&gt;\n    &lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Sed vestibulum\n        dapibus nisi. Ut nonummy quam sed pede. Mauris metus nisi, porttitor lobortis,\n        elementum sit amet, volutpat sed, nibh. Phasellus nec quam. Sed hendrerit, purus\n        a consequat commodo, magna justo dapibus enim, at ullamcorper mi lacus sed\n        lorem. Ut erat risus, pulvinar in, bibendum nonummy, porta quis, quam. Mauris\n        lobortis tellus sed odio. Nam accumsan, quam sit amet condimentum ullamcorper,\n        pede orci iaculis ante, vel aliquam risus augue eu erat. Nulla vitae quam ut\n        sapien molestie hendrerit. Donec urna pede, fringilla at, luctus in,\n        pellentesque placerat, orci.&lt;/p&gt;\n\n    &lt;p&gt;Mauris dui turpis, malesuada at, tincidunt id, consequat sed, sem.\n        Vivamus sit amet magna. Cras lacinia nisi et purus. Praesent nonummy eleifend\n        erat. Quisque tincidunt. Donec in nulla ut enim dapibus interdum. Suspendisse\n        potenti. Quisque ac orci vel lorem euismod pellentesque. Duis ac turpis. Nunc\n        ultricies. Donec metus metus, condimentum vel, fermentum commodo, lobortis eget,\n        metus. Nam ut ante a augue semper vehicula. Maecenas neque nisl, aliquam nec,\n        accumsan non, molestie sed, enim. Aliquam ut ligula in orci rhoncus aliquet.\n        Etiam ipsum enim, pulvinar commodo, pellentesque quis, consectetuer a,\n        tellus.&lt;/p&gt;\n\n    &lt;p&gt;Integer consequat. Cras sagittis, orci quis varius rutrum, velit risus\n        consectetuer ipsum, a convallis lorem purus aliquet tortor. Integer suscipit.\n        Suspendisse iaculis, est non semper volutpat, leo ligula blandit nulla, id\n        varius dui nunc ac erat. Sed interdum sem in diam. Nullam a metus. In augue\n        ante, posuere in, fringilla non, vestibulum id, libero. Integer consectetuer.\n        Sed varius elementum neque. Nam eu ipsum quis nunc tempor scelerisque.\n        Pellentesque odio ipsum, condimentum at, gravida quis, dignissim non, pede.\n        Quisque ac lorem sit amet lacus interdum bibendum.&lt;/p&gt;\n\n    &lt;p&gt;Vivamus dui purus, placerat in, tristique eu, consectetuer quis, libero.\n        In imperdiet fringilla est. Vivamus laoreet. Phasellus semper mi ac pede.\n        Vestibulum est. Aenean ornare scelerisque nunc. Sed nec nibh a ipsum sodales\n        tincidunt. Morbi ipsum enim, fringilla et, porttitor eu, lobortis eu, purus.\n        Integer eget sem ut sem dapibus ultricies. Donec blandit sapien vel odio.\n        Pellentesque interdum condimentum lacus.&lt;/p&gt;\n\n    &lt;p&gt;Fusce sed sem vel lacus tincidunt vehicula. In ornare porta sapien.\n        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Etiam vitae ante vel\n        est eleifend gravida. Nunc libero libero, egestas in, facilisis eu, pharetra a,\n        enim. Nullam augue nunc, viverra condimentum, venenatis vel, consectetuer ac,\n        massa. Aliquam est lectus, vulputate at, lobortis nec, aliquam eu, augue. Nunc\n        massa. Donec eget metus ut risus suscipit tincidunt. Aliquam tempus lacus in\n        felis. Donec eu massa. Donec hendrerit arcu nec nisi. Maecenas ante tellus,\n        convallis non, volutpat vel, tincidunt quis, tortor. Phasellus eget nulla. Donec\n        tincidunt tempus dui. Morbi in urna. Vivamus malesuada risus ut dui.&lt;/p&gt;\n&lt;/section&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Atributs</p> <ul> <li>color, background-color</li> <li>text-align</li> <li>font-size, font-weight, font-variant</li> <li>letter-spacing</li> <li>width</li> <li>margin, margin-left, margin-top, margin-bottom</li> <li>padding, padding-left</li> <li>background</li> <li>border-top, border-bottom</li> <li>list-style-type</li> <li>display</li> <li>float</li> </ul> <p>Valors Atributs</p> <ul> <li>Colors: #D1D1D1; #3F3F3F; #C7712B;</li> <li>Alineaci\u00f3 text: center; justify;</li> <li>Estil llista: none;</li> <li>Mida font: xx-large; small;</li> <li>Pes font: bold;</li> <li>Variant font: small-caps;</li> <li>Espai entre lletres: 0.2em;</li> <li>Vores: thick solid #0A4911; thin dotted #0A4911;</li> <li>Marges: 15%; 10px; 0;</li> <li>Amplades: 15%;</li> <li>Flotaci\u00f3: left;</li> <li>Imatge fons: url(\"../img/debian.png\") no-repeat fixed center center;</li> <li>Farciment: 1em; 5px; 0; 0.2em 0.2em 0.2em 0.4em ;</li> <li>Visualitzaci\u00f3: block;</li> </ul>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-3-marges-farciments","title":"Exercici 3: Marges - Farciments","text":"<p>A partir del cdi HTML y CSS proporcionats, determina les regles CSS necess\u00e0ries per afegir els seg\u00fcents marges i farciments:</p> <p></p> <p>1. L'element #cabecera ha de tenir un farciment de 1em en tots els costats.</p> <p>2. L'element #menu ha de tenir un farciment 0.5em en tots els costats i un marge inferior de 0.5em.</p> <p>3. La resta d'elements (#noticias, #publicidad, #principal, #secundario) han de tenir 0.5em de farciment en tots els seus costats, excepte l'element #pie, que nom\u00e9s ha de tenir farciment en la zona superior i inferior.</p> <p>4. Els elements .articulo han de mostrar una separaci\u00f3 entre ells de 1em.</p> <p>5. Les imatges dels articles han de mostrar un marge de 0.5em en tots els seus costats.</p> <p>6. L'element #publicidad est\u00e0 separat 1em del seu element superior.</p> <p>7. L'element #pie ha de tenir un marge superior de 1em.</p> <p></p> <p>Codi HTML</p> <pre><code>&lt;!doctype html&gt;  \n&lt;html&gt;  \n&lt;head&gt;\n\n        &lt;meta charset=\"UTF-8\"&gt;  \n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"ex3_estils.css\" title=\"style\" /&gt;  \n        &lt;title&gt;Lorem ipsum&lt;/title&gt;\n\n    &lt;/head&gt;\n\n    &lt;body&gt;  \n        &lt;!-- Contenedor --&gt;  \n        &lt;div id=\"contenedor\"&gt;\n\n            &lt;!-- Cabecera --&gt;  \n            &lt;div id=\"cabecera\"&gt;\n\n                &lt;div id=\"logo\"&gt;  \n                    &lt;h1&gt;&lt;span&gt;LOGOTIPO&lt;/span&gt;&lt;/h1&gt;  \n                &lt;/div&gt;  \n\n                &lt;div id=\"buscador\"&gt;  \n                    &lt;form action=\"#\" method=\"post\"&gt;  \n                        Buscar   &lt;input name=\"busqueda\" type=\"text\" /&gt;  \n                    &lt;/form&gt;  \n                &lt;/div&gt;  \n\n                &lt;div class=\"clear\"&gt;&lt;/div&gt;  \n            &lt;/div&gt;  \n\n            &lt;!-- /Cabecera --&gt;  \n\n            &lt;!-- Menu principal --&gt;  \n            &lt;div id=\"menu\"&gt;\n\n                &lt;ul id=\"menu_principal\"&gt;  \n                    &lt;li&gt;&lt;a href=\"#\"&gt;Lorem&lt;/a&gt;&lt;/li&gt;  \n                    &lt;li&gt;&lt;a href=\"#\"&gt;Ipsum&lt;/a&gt;&lt;/li&gt;  \n                    &lt;li&gt;&lt;a href=\"#\"&gt;Dolor&lt;/a&gt;&lt;/li&gt;  \n                    &lt;li&gt;&lt;a href=\"#\"&gt;Sit&lt;/a&gt;&lt;/li&gt;  \n                    &lt;li&gt;&lt;a href=\"#\"&gt;Amet&lt;/a&gt;&lt;/li&gt;  \n                &lt;/ul&gt;\n\n                &lt;div class=\"clear\"&gt;&lt;/div&gt;  \n            &lt;/div&gt;  \n\n\n            &lt;!-- Lateral --&gt;  \n            &lt;div id=\"lateral\"&gt;  \n\n                &lt;!-- Noticias --&gt;  \n                &lt;div id=\"noticias\"&gt;  \n\n                    &lt;h3&gt;&lt;a href=\"#\"&gt;Noticias&lt;/a&gt;&lt;/h3&gt;\n\n                    &lt;p&gt;&lt;span class=\"fecha\"&gt;dd/mm/aaaa&lt;/span&gt; &lt;a href=\"#\"&gt;  \n                    Lorem ipsum dolor sit amet&lt;/a&gt;&lt;/p&gt;  \n                    &lt;p&gt;&lt;span class=\"fecha\"&gt;dd/mm/aaaa&lt;/span&gt; &lt;a href=\"#\"&gt;  \n                    Consectetuer adipiscing elit&lt;/a&gt;&lt;/p&gt;  \n                    &lt;p&gt;&lt;span class=\"fecha\"&gt;dd/mm/aaaa&lt;/span&gt; &lt;a href=\"#\"&gt;  \n                    Donec molestie nunc eu sapien&lt;/a&gt;&lt;/p&gt;  \n                    &lt;p&gt;&lt;span class=\"fecha\"&gt;dd/mm/aaaa&lt;/span&gt; &lt;a href=\"#\"&gt;  \n                    Maecenas aliquam dolor eget metus&lt;/a&gt;&lt;/p&gt;  \n                    &lt;p&gt;&lt;span class=\"fecha\"&gt;dd/mm/aaaa&lt;/span&gt; &lt;a href=\"#\"&gt;  \n                    Fusce tristique lorem id metus&lt;/a&gt;&lt;/p&gt;  \n\n                    &lt;h3&gt;&lt;a href=\"#\"&gt;Enlaces relacionados&lt;/a&gt;&lt;/h3&gt;\n\n                        &lt;ul&gt;  \n                            &lt;li&gt;&lt;a href=\"#\"&gt;Proin placerat&lt;/a&gt;&lt;/li&gt;  \n                            &lt;li&gt;&lt;a href=\"#\"&gt;Nulla in felis&lt;/a&gt;&lt;/li&gt;  \n                            &lt;li&gt;&lt;a href=\"#\"&gt;Nam luctus&lt;/a&gt;&lt;/li&gt;  \n                        &lt;/ul&gt;  \n                &lt;/div&gt;  \n                &lt;!-- /Noticias --&gt;  \n\n                &lt;!-- Publicidad --&gt;  \n                &lt;div id=\"publicidad\"&gt;  \n                    &lt;h3&gt;&lt;a href=\"#\"&gt;Publicidad&lt;/a&gt;&lt;/h3&gt;\n\n                        &lt;p&gt;Etiam fermentum, nisl tincidunt blandit interdum,   \n                        massa velit posuere dolor, sed euismod sem odio at mi.&lt;/p&gt;  \n                        &lt;p&gt;Duis porta placerat arcu. Nullam felis pede, commodo   \n                        vel, suscipit a, molestie vel, felis. Maecenas mattis   \n                        est vel est.&lt;/p&gt;  \n                        &lt;p&gt;&lt;a href=\"#\"&gt;Seguir leyendo...&lt;/a&gt;&lt;/p&gt;  \n                &lt;/div&gt;  \n                &lt;!-- /Publicidad --&gt;\n\n            &lt;/div&gt;  \n            &lt;!-- /Lateral --&gt;  \n\n            &lt;div id=\"contenido\"&gt;  \n\n                &lt;!-- Principal --&gt;  \n                &lt;div id=\"principal\"&gt;  \n\n                    &lt;div class=\"articulo\"&gt;\n\n                        &lt;h2&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit&lt;/h2&gt;  \n\n                        &lt;img src=\"imatges/imagen.png\" alt=\"Imagen gen\ufffdrica\" /&gt;  \n\n                        &lt;p&gt;Nullam est lacus, suscipit ut, dapibus quis, condimentum ac,   \n                        risus. Vivamus vestibulum, ipsum sollicitudin faucibus pharetra,   \n                        dolor metus fringilla dui, vel aliquet pede diam tempor tortor.&lt;/p&gt;  \n                        &lt;p&gt;Vestibulum pulvinar urna et quam. Pellentesque habitant morbi   \n                        tristique senectus et netus et malesuada fames ac turpis egestas.  \n                        Nullam vel turpis vitae dui imperdiet laoreet. Quisque eget ipsum.&lt;/p&gt;  \n                        &lt;p&gt;Donec commodo, turpis vel venenatis sollicitudin, quam ante   \n                        convallis justo, sed eleifend justo lectus quis sapien. Ut consequat   \n                        libero eget est.&lt;/p&gt;  \n                        &lt;p&gt;&lt;a href=\"#\"&gt;Seguir leyendo...&lt;/a&gt;&lt;/p&gt;  \n                    &lt;/div&gt;  \n\n                    &lt;div class=\"articulo\"&gt;\n\n                        &lt;h2&gt;Vivamus lobortis turpis ac ante fringilla faucibus&lt;/h2&gt;  \n\n                        &lt;img src=\"imatges/imagen.png\" alt=\"Imagen gen\ufffdrica\" /&gt;  \n\n                        &lt;p&gt;Quisque eget ipsum. Donec commodo, turpis vel venenatis sollicitudin,   \n                        quam ante convallis justo, sed eleifend justo lectus quis sapien. Ut  \n                        consequat libero eget est.&lt;/p&gt;  \n                        &lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur  \n                        ridiculus mus. Nullam dictum hendrerit neque. Mauris id ligula non elit   \n                        mattis semper. Fusce arcu ipsum, tempus eget, tincidunt at, imperdiet   \n                        in, mi.&lt;/p&gt;  \n                        &lt;p&gt;Sed fermentum cursus dolor. Aenean a diam. Phasellus feugiat. Donec   \n                        tempor dignissim sem.&lt;/p&gt;  \n                        &lt;p&gt;&lt;a href=\"#\"&gt;Seguir leyendo...&lt;/a&gt;&lt;/p&gt;  \n                    &lt;/div&gt;  \n\n                &lt;/div&gt;  \n                &lt;!-- /Principal --&gt;  \n\n                &lt;!-- Secundario --&gt;\n\n                &lt;div id=\"secundario\"&gt;\n\n                    &lt;h2&gt;Phasellus blandit&lt;/h2&gt;\n\n                        &lt;p&gt;Praesent sodales imperdiet augue. Mauris lorem felis, semper eu,   \n                        tincidunt eu, sollicitudin eget, sem. Nulla facilisi. Morbi ut enim ut   \n                        enim ultricies dapibus.&lt;/p&gt;  \n                        &lt;p&gt;&lt;a href=\"#\"&gt;Seguir leyendo...&lt;/a&gt;&lt;/p&gt;  \n\n                    &lt;h2&gt;Nullam vel turpis&lt;/h2&gt;\n\n                        &lt;p&gt;Donec commodo, turpis vel venenatis sollicitudin, quam ante convallis  \n                        justo, sed eleifend justo lectus quis sapien. Ut consequat libero eget est.&lt;/p&gt;  \n                        &lt;p&gt;&lt;a href=\"#\"&gt;Seguir leyendo...&lt;/a&gt;&lt;/p&gt;  \n                &lt;/div&gt;  \n                &lt;!-- /Secundario --&gt;\n\n            &lt;/div&gt;  \n            &lt;!-- /Contenido --&gt;  \n\n                &lt;div class=\"clear\"&gt;&lt;/div&gt;  \n\n                &lt;!-- Pie --&gt;  \n            &lt;div id=\"pie\"&gt;\n\n                &lt;span class=\"enlaces\"&gt;  \n                    &lt;a href=\"#\"&gt;Nulla&lt;/a&gt; |  \n                    &lt;a href=\"#\"&gt;Pharetra&lt;/a&gt; |  \n                    &lt;a href=\"#\"&gt;Luctus&lt;/a&gt; |  \n                    &lt;a href=\"#\"&gt;Ipsum&lt;/a&gt; |  \n                    &lt;a href=\"#\"&gt;Proin&lt;/a&gt; |  \n                    &lt;a href=\"#\"&gt;Placerat&lt;/a&gt;  \n                &lt;/span&gt;  \n\n                &lt;span class=\"copyright\"&gt;  \n                    \u00a9 Copyright Lorem ipsum  \n                &lt;/span&gt;\n\n                &lt;div class=\"clear\"&gt;&lt;/div&gt;  \n            &lt;/div&gt;  \n            &lt;!-- /Pie --&gt;\n\n        &lt;/div&gt;  \n        &lt;!-- /Contenedor --&gt;\n\n    &lt;/body&gt;\n\n&lt;html&gt;\n</code></pre> <p>Codi CSS</p> <p><pre><code>/* === IMPORTANTE ===================================================  \nNo modificar estos estilos, ya que son imprescindibles para  \nque la p\u00e1gina se vea correctamente.  \n================================================================== */\n\n/*-- B\u00e1sico ----------------------------------------------------------*/  \nul, ul li { margin: 0; padding: 0; list-style: none; }  \nh1, h2, h3, p, form { margin: 0; padding: 0; }  \n.clear { clear: both; }  \nimg { border: none; }\n\n/*-- Layout ----------------------------------------------------------*/  \n#contenedor {  \nwidth: 90%;  \nmax-width: 900px;\n@media (max-width: 900px) {\n    body {\n        width: auto;\n    }\n}\n\n@media (min-width: 901px) {\n    body {\n        width: 900px;\n    }\n}\nmargin: 0 auto;  \n}\n\n#cabecera, #menu, #lateral, #contenido, #contenido #principal, #contenido #secundario, #pie {  \nborder: 2px solid #777;  \n}\n\n#cabecera { clear: both; }  \n#menu { clear: both; }  \n#lateral { float: left; width: 20%; }  \n#contenido { float: right; width: 78%; }  \n#contenido #principal { float: left; width: 78%; }  \n#contenido #secundario { float: right; width: 20%; }  \n#pie { clear: both; }\n\n/*-- Cabecera --------------------------------------------------------*/  \n#cabecera #logo { float: left; }  \n#cabecera #buscador { float: right; }\n\n/*-- Menu ------------------------------------------------------------*/  \n#menu ul#menu_principal li { display: inline; float: left; }\n\n/*-- Secci\u00f3n Principal -----------------------------------------------*/  \n#contenido #principal .articulo img { width: 100px; float: left; }\n\n/*-- Pie de p\u00e1gina ---------------------------------------------------*/  \n#pie .enlaces   { float: left; }  \n#pie .copyright { float: right; }\n\n/* === IMPORTANTE ===================================================  \nA partir de aqu\u00ed, se pueden a\u00f1adir todos los estilos propios que   \nsean necesarios.  \n================================================================== */\n</code></pre> * Soluci\u00f3 Marges - Farciments</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-4-vores","title":"Exercici 4: Vores","text":"<p>A partir del c\u00f3di HTML y CSS obtinguts en l'exercici 3, determina les regles CSS necess\u00e0ries per afegir les seg\u00fcents vores:</p> <p>1. Elimina la vora gris que mostren per defecte tots els elements.</p> <p>2. L'element #menu ha de tenir una vora inferior de 1 p\u00edxel i de color blau (#004C99).</p> <p>3. L'element #noticias mostra una vora de 1 p\u00edxel i de color gris clar (#C5C5C5).</p> <p>4. L'element #publicidad ha de mostrar una vora discontinua de 1 p\u00edxel i de color #CC6600.</p> <p>5. El lateral format per l'element #secundario mostra una vora de 1 p\u00edxel i de color #CC6600.</p> <p>6. L'element #pie ha de mostrar una vora superior superior i altra inferior de 1 p\u00edxel i color gris clar #C5C5C5.</p> <p></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-5-colors-i-imatges-de-fons","title":"Exercici 5: Colors i imatges de fons","text":"<p>A partir del c\u00f3di HTML y CSS obtinguts en l'exercici 4, determina les regles CSS necess\u00e0ries per afegir els seg\u00fcents colors i imatges de fons:</p> <p>1. Els elements #noticias i #pie tenen un color de fons gris clar (#F8F8F8).</p> <p>2. L'element #publicidad mostra un color de fons groc clar (#FFF6CD).</p> <p>3. Els elements h2 del lateral #secundario mostra un color de fons #DB905C i un petit padding de .2em.</p> <p>4. El fons de l'element #menu es construeix mitjan\u00e7ant una petita imatge anomenada fondo_menu.gif.</p> <p>5. El logotip del lloc es mostra mitjan\u00e7ant una imatge de fons de l'element h1 contingut en l'element #cabecera (la imatge s'anomena logo.gif).</p> <p></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-6-posicionament-float_1","title":"Exercici 6: Posicionament Float","text":"<p>A partir del codi HTML seg\u00fcent:</p> <pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;  \n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;  \n&lt;head&gt;  \n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" /&gt;  \n&lt;title&gt;Ejercicio posicionamiento float&lt;/title&gt;  \n&lt;style type=\"text/css\"&gt;  \n&lt;/style&gt;  \n&lt;/head&gt;\n\n&lt;body&gt;  \n&lt;div&gt;  \n\u00ab Anterior   Siguiente \u00bb  \n&lt;/div&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;\n</code></pre> <p>Determina les regles CSS necess\u00e0ries per a que el resultat sigui similar al mostrat en la seg\u00fcent imatge:</p> <p></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-7-tipografia","title":"Exercici 7: Tipografia","text":"<p>A partir del codi HTML i CSS obtingut en el exercici 5. determina les regles necess\u00e0ries per afegir les seg\u00fcents propietats a la tipografia de la p\u00e0gina.</p> <p>1. La font base de la p\u00e0gina ha de ser: color negre, tipus Arial, mida 0.9 em, interlineat 1.4.</p> <p>2. Els element h2 de .articulo es mostren en color #CC6600, amb un mida de lletra de 1.6em, un interlineat de 1.2 i un marge inferior de 0.3em.</p> <p>3. Els elements del #menu han de mostrar un marge a la seva dreta de 1em i els enlla\u00e7os han de ser de color blanc i mida de lletra 1.3em.</p> <p>4. La mida del text de tots els continguts de #lateral ha de ser de 0.9em. La data de cada not\u00edcia ha d'ocupar l'espai de tota la seva l\u00ednia i mostrar-se en color gris clar #999. L'element h3 de #noticias ha de mostrar-se de color #003366.</p> <p>5. El text de l'element #publicidad \u00e9s de color gris fosc #555 i tots els enlla\u00e7os de color #CC6600.</p> <p>6. Els enlla\u00e7os contiguts dins de .articulo s\u00f3n de color #CC6600 i tots els par\u00e0grafs mostren un marge superior e inferior de 0.3em.</p> <p>7. Afegeix les regles necess\u00e0ries per a que el contingut de #secundario es vegi com en la imatge que es mostra.</p> <p>8. Afegeix les regles necess\u00e0ries per a que el contingut de #pie es vegi com en la imatge que es mostra.</p> <p></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-8-enllacos","title":"Exercici 8: Enlla\u00e7os","text":"<p>Defineix les regles CSS que permeten mostrar els enlla\u00e7os amb els seg\u00fcents estils:</p> <p>1. En el seu estat normal, els enlla\u00e7os es mostren de color vermell #CC0000.</p> <p>2. Quan l'usuari passa el ratol\u00ed per sobre l'enlla\u00e7, es mostra amb un color de fons vermell #CC0000 i la lletra de color blanc #FFF.</p> <p>3. Els enlla\u00e7os visitats es mostren en color gris clar #CCC.</p> <p></p> <p>Codi HTML <pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;  \n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;  \n&lt;head&gt;  \n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" /&gt;  \n&lt;title&gt;Ejercicio de pseudo clases de enlaces&lt;/title&gt;  \n&lt;style type=\"text/css\"&gt;  \na {  \nmargin: 1em 0;  \nfloat: left;  \nclear: left;  \npadding: 2px;  \n}  \n&lt;/style&gt;  \n&lt;/head&gt;\n\n&lt;body&gt;  \n&lt;a href=\"#\"&gt;Enlace n\ufffdmero 1&lt;/a&gt;\n\n&lt;a href=\"#\"&gt;Enlace n\ufffdmero 2&lt;/a&gt;\n\n&lt;a href=\"#\"&gt;Enlace n\ufffdmero 3&lt;/a&gt;\n\n&lt;a href=\"#\"&gt;Enlace n\ufffdmero 4&lt;/a&gt;\n\n&lt;a href=\"#\"&gt;Enlace n\ufffdmero 5&lt;/a&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-9-galeria-dimatges","title":"Exercici 9: Galeria d'imatges","text":"<p>Defineix les regles CSS que permeten mostrar una galeria d'imatges similar a la que es mostra en la seg\u00fcent imatge:</p> <p></p> <p>Codi HTML</p> <pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" /&gt;\n    &lt;title&gt;Ejercicio galer?a de im?genes&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;div id=\"galeria\"&gt;\n    &lt;img src=\"../comun/imatges/imagen.png\" alt=\"Imagen generica\" /&gt;\n    &lt;img src=\"../comun/imatges/imagen.png\" alt=\"Imagen generica\" /&gt;\n    &lt;img src=\"../comun/imatges/imagen.png\" alt=\"Imagen generica\" /&gt;\n    &lt;img src=\"../comun/imatges/imagen.png\" alt=\"Imagen generica\" /&gt;\n    &lt;img src=\"../comun/imatges/imagen.png\" alt=\"Imagen generica\" /&gt;\n    &lt;img src=\"../comun/imatges/imagen.png\" alt=\"Imagen generica\" /&gt;\n    &lt;img src=\"../comun/imatges/imagen.png\" alt=\"Imagen generica\" /&gt;\n    &lt;img src=\"../comun/imatges/imagen.png\" alt=\"Imagen generica\" /&gt;\n    &lt;img src=\"../comun/imatges/imagen.png\" alt=\"Imagen generica\" /&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-10-estils-menu","title":"Exercici 10: Estils men\u00fa","text":"<p>Modifica el men\u00fa vertical senzill per obtenir el seg\u00fcent comportament:</p> <p>1. Els elements han de mostrar una imatge de fons (flecha_inactiva.png):</p> <p></p> <p>2. Quan es passa el ratol\u00ed per sobre d'un element, s'ha de mostrar una imatge alternativa (flecha_activa.png):</p> <p></p> <p>3. El color de fons de l'element tamb\u00e9 ha de variar lleugerament i mostrar un color gris m\u00e9s fosc (#E4E4E4) quan es passa el ratol\u00ed per sobre:</p> <p></p> <p>4. Aquest comportament anterior s'ha de produir quan l'usuari passa el ratol\u00ed per sobre de qualsevol zona de l'element del men\u00fa, i no nom\u00e9s quan es passa el ratol\u00ed per sobre del text del element.</p> <p></p> <p>Codi HTML</p> <pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" /&gt;\n    &lt;title&gt;Ejercicio menu vertical avanzado&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        ul.menu {\n            width: 180px;\n            list-style: none;\n            margin: 0;\n            padding: 0;\n            border: 1px solid #7C7C7C;\n        }\n        ul.menu li {\n            border-bottom: 1px solid #7C7C7C;\n            border-top: 1px solid #FFF;\n            background: #F4F4F4;\n        }\n        ul.menu li a {\n            padding: .2em 0 .2em 1.3em;\n            display: block;\n            text-decoration: none;\n            color: #333;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;ul class=\"menu\"&gt;\n    &lt;li&gt;&lt;a href=\"#\" title=\"Enlace gen?rico\"&gt;Elemento 1&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#\" title=\"Enlace gen?rico\"&gt;Elemento 2&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#\" title=\"Enlace gen?rico\"&gt;Elemento 3&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#\" title=\"Enlace gen?rico\"&gt;Elemento 4&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#\" title=\"Enlace gen?rico\"&gt;Elemento 5&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"#\" title=\"Enlace gen?rico\"&gt;Elemento 6&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-11-estils-taules","title":"Exercici 11: Estils taules","text":"<p>Determina les regles CSS necess\u00e0ries per mostrar la seg\u00fcent taula amb l'aspecte final mostrat en la imatge (modificar el codi HTML que consideris necessari afegint els atributs class oportunos).</p> <p>Taula original:</p> <p></p> <p>Codi HTML:  ```html</p> Ejercicio formatear tabla Cambio Compra Venta M\u00e1ximo M\u00ednimo Euro/Dolar 1.2524 1.2527 1.2539 1.2488 Dolar/Yen 119.01 119.05 119.82 119.82 Libra/Dolar 1.8606 1.8611 1.8651 1.8522 Euro/Yen 149.09 149.13 149.79 148.96 <pre><code>Taula final:\n\n![Css_ex11_2.png](../img/Css_ex11_2.png)\n\n1\\. Alinea el text de les cel\u00b7les, cap\u00e7aleres i t\u00edtol. Defineix les vores de la taula, cel\u00b7les i cap\u00e7aleres (color gris fosc \\#333).\n\n![Css_ex11_3.png](../img/Css_ex11_3.png)\n\n2\\. Formateja les cap\u00e7aleres de fila i columna amb la imatge de fons corresponent en cada casa (fondo\\_gris.gif, euro.png, dolar.png, yen.png, libra.png). Modifica el tipus de lletra de la taula i utilitza Arial. El color blau clar \u00e9s \\#E6F3FF.\n\n![Css_ex11_4.png](../img/Css_ex11_4.png)\n\n3\\. Mostra un color altern en les files de dades (color groc clar \\#FFFFCC).\n\n![Css_ex11_5.png](../img/Css_ex11_5.png)\n\n### **Exercici 12: Estils formularis**\n\nA partir del codi HTML proporcionat:\n\n```html\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"  \n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"es\" xml:lang=\"es\"&gt;  \n&lt;head&gt;  \n&lt;title&gt;Ejercicio 12 - Formulario de alta&lt;/title&gt;  \n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n\n&lt;style type=\"text/css\"&gt;  \n&lt;/style&gt;  \n&lt;/head&gt;\n\n&lt;body&gt;  \n&lt;div id=\"contenedor\"&gt;\n\n&lt;h2&gt;Formulario de alta&lt;/h2&gt;\n\n&lt;form method=\"post\" action=\"#\"&gt;  \n&lt;ul&gt;  \n&lt;li&gt;  \n&lt;label class=\"titulo\" for=\"nombre\"&gt;Nombre y apellidos &lt;span class=\"requerido\"&gt;*&lt;/span&gt;&lt;/label&gt;  \n&lt;div&gt;  \n&lt;span&gt;  \n&lt;input id=\"nombre\" name=\"nombre\" value=\"\" /&gt;  \n&lt;label for=\"nombre\"&gt;Nombre&lt;/label&gt;  \n&lt;/span&gt;\n\n    &lt;span&gt;  \n      &lt;input id=\"apellido1\" name=\"apellido1\" value=\"\" /&gt;  \n      &lt;label for=\"apellido1\"&gt;Primer apellido&lt;/label&gt;  \n    &lt;/span&gt;  \n\n    &lt;span&gt;  \n      &lt;input id=\"apellido2\" name=\"apellido2\" value=\"\" /&gt;  \n      &lt;label for=\"apellido2\"&gt;Segundo apellido&lt;/label&gt;  \n    &lt;/span&gt;  \n&lt;/div&gt;\n\n&lt;p class=\"ayuda\"&gt;No te olvides de escribir tambi\u00e9n tu segundo apellido&lt;/p&gt;  \n&lt;/li&gt;\n\n&lt;li&gt;  \n&lt;label class=\"titulo\" for=\"direccion\"&gt;Direcci\u00f3n &lt;span class=\"requerido\"&gt;*&lt;/span&gt;&lt;/label&gt;\n\n&lt;div&gt;  \n&lt;span&gt;  \n&lt;input id=\"direccion\" name=\"direccion\" value=\"\" /&gt;  \n&lt;label for=\"direccion\"&gt;Calle, n\u00famero, piso, puerta&lt;/label&gt;  \n&lt;/span&gt;\n\n    &lt;span&gt;  \n      &lt;input id=\"codigopostal\" name=\"codigopostal\" value=\"\" /&gt;  \n      &lt;label for=\"codigopostal\"&gt;C\u00f3digo postal&lt;/label&gt;  \n    &lt;/span&gt;  \n\n    &lt;span&gt;  \n      &lt;input id=\"municipio\" name=\"municipio\" value=\"\" /&gt;  \n      &lt;label for=\"municipio\"&gt;Municipio&lt;/label&gt;  \n    &lt;/span&gt;  \n\n    &lt;span&gt;  \n      &lt;select id=\"provincia\" name=\"provincia\"&gt;  \n        &lt;option value=\"\"&gt;&lt;/option&gt;  \n        &lt;option value=\"provincia1\"&gt;Provincia 1&lt;/option&gt;  \n        &lt;option value=\"provincia2\"&gt;Provincia 2&lt;/option&gt;  \n        &lt;option value=\"provincia3\"&gt;Provincia 3&lt;/option&gt;  \n      &lt;/select&gt;  \n      &lt;label for=\"provincia\"&gt;Provincia&lt;/label&gt;  \n    &lt;/span&gt;  \n\n    &lt;span&gt;  \n      &lt;select id=\"pais\" name=\"pais\"&gt;  \n        &lt;option value=\"\"&gt;&lt;/option&gt;  \n        &lt;option value=\"pais1\"&gt;Pa\u00eds 1&lt;/option&gt;  \n        &lt;option value=\"pais2\"&gt;Pa\u00eds 2&lt;/option&gt;  \n        &lt;option value=\"pais3\"&gt;Pa\u00eds 3&lt;/option&gt;  \n      &lt;/select&gt;  \n      &lt;label for=\"pais\"&gt;Pa\u00eds&lt;/label&gt;  \n    &lt;/span&gt;  \n&lt;/div&gt;\n\n&lt;p class=\"ayuda\"&gt;El c\u00f3digo postal es imprescindible para poder recibir los pedidos&lt;/p&gt;  \n&lt;/li&gt;\n\n&lt;li&gt;  \n&lt;label class=\"titulo\" for=\"email\"&gt;Email&lt;/label&gt;\n\n&lt;div&gt;  \n&lt;span&gt;  \n&lt;input id=\"email\" name=\"email\" value=\"\" /&gt;  \n&lt;/span&gt;  \n&lt;/div&gt;\n\n&lt;p class=\"ayuda\"&gt;Aseg\u00farate de que sea v\u00e1lido&lt;/p&gt;  \n&lt;/li&gt;\n\n&lt;li&gt;  \n&lt;label class=\"titulo\" for=\"telefonofijo\"&gt;Tel\u00e9fono &lt;span class=\"requerido\"&gt;*&lt;/span&gt;&lt;/label&gt;\n\n&lt;div&gt;  \n&lt;span&gt;  \n&lt;input id=\"telefonofijo\" name=\"telefonofijo\" value=\"\" /&gt;  \n&lt;label for=\"telefonofijo\"&gt;Fijo&lt;/label&gt;  \n&lt;/span&gt;\n\n    &lt;span&gt;  \n      &lt;input id=\"telefonomovil\" name=\"telefonomovil\" value=\"\" /&gt;  \n      &lt;label for=\"telefonomovil\"&gt;M\u00f3vil&lt;/label&gt;  \n    &lt;/span&gt;  \n&lt;/div&gt;\n\n&lt;p class=\"ayuda\"&gt;Sin prefijo de pa\u00eds y sin espacios en blanco&lt;/p&gt;  \n&lt;/li&gt;\n\n&lt;li&gt;  \n&lt;input id=\"alta\" type=\"submit\" value=\"Darme de alta \u2192\" /&gt;  \n&lt;/li&gt;\n\n&lt;/ul&gt;  \n&lt;/form&gt;\n\n&lt;/div&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;\n</code></pre> <p>1. Aplica les regles CSS necess\u00e0ries per donar al formulari el seg\u00fcent aspecte:</p> <p></p> <p>2. Quan l'usuari passa el ratol\u00ed per sobre de cada grup d'elements de formulari (es a dir, per sobre de cada li) s'ha de modificar el seu color de fons (sugger\u00e8ncia: color groc clar #FF9). I a m\u00e9s a m\u00e9s, quan l'usuari es posiciona en un quadre de text, s'ha de modificar la seva vora per resaltar el camp que est\u00e0 actiu cada moment (sugger\u00e8ncia: color groc #E6B700):</p> <p></p> <p>3. Utilitzant el menor nombre de regles CSS, canvia l'aspecte del formulari per a que es mostri como en la seg\u00fcent imatge:</p> <p></p> <p>4. Quan l'usuari passa el ratoli per sobre d'un grup d'elements de fromulari (es a dir, per sobre de cada li&gt;) s'ha de mostrar el missatge d'ajuda associat. Afegeix les regles CSS necess\u00e0ries per a que el formulari tingui l'aspecte definitiu mostrat en la seg\u00fcent imatge:</p> <p></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/ExercicisCSS.html#exercici-13-aspecte-final","title":"Exercici 13: Aspecte final","text":"<p>Determina les regles CSS necess\u00e0ries per a mostrar la p\u00e0gina HTML que es proporciona amb l'estil que se mostra en la seg\u00fcent imatge:</p> <p></p> <p>A continuaci\u00f3 s'indica una proposta dels passos que es poden seguir per obtenir l'aspecte final desitjat:</p> <ul> <li>Afegeix els estils b\u00e0sics de la p\u00e0gina (tipus de lletra Verdana, color de lletra #192666, imatge de fons anomenada fondo.gif, color de fons #F2F5FE).</li> <li>Defineix l'estructura b\u00e0sica de la p\u00e0gina: amplada fixa de 770 p\u00edxel, centrada en la finestra del navegador, cap\u00e7alera i peu, columna central de continguts d'amplada 530 p\u00edxel i columna secund\u00e0ria de continguts de 200 p\u00edxel d'amplada.</li> <li>La cap\u00e7alera t\u00e9 una al\u00e7ada de 100 p\u00edxel i una imatge de fons anomenada cabecera.jpg.</li> <li>Los elements del men\u00fa de navegaci\u00f3 tenen un color de fonds #253575, un color de lletra #B5C4E3. Quan el ratol\u00ed passa per sobre de cada element, el seu color de fons canvia a #31479B. Els elements seleccionats es mostren amb un color de fons blanc i un color de lletra #FF9000:</li> </ul> <p></p> <ul> <li>Amb l'ajuda de les imatges que es proporcionen, mostra cada un dels articles de contingut amb l'estil que es mostra en la seg\u00fcent imatge:</li> </ul> <p></p> <ul> <li>Afegeix els estils adequats per mostrar els elements de la columna secund\u00e0ria de continguts amb el seg\u00fcent aspecte:</li> </ul> <p></p> <p>Codi HTML:</p> <pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"es\" lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;!-- Este dise\u00f1o est\u00e1 basado en un dise\u00f1o web libre llamado CrystalX y que se puede descargar desde  \n             la direcci\u00f3n http://www.oswd.org/design/preview/id/3465 --&gt;\n    &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/&gt;\n    &lt;meta http-equiv=\"content-language\" content=\"es\"/&gt;\n\n    &lt;meta name=\"copyright\" content=\"Design/Code: Vit Dlouhy [Nuvio - www.nuvio.cz]; e-mail: vit.dlouhy@nuvio.cz\"/&gt;\n\n    &lt;title&gt;Mi sitio web&lt;/title&gt;\n    &lt;meta name=\"description\" content=\"Mi sitio web\"/&gt;\n    &lt;meta name=\"keywords\" content=\"sitio, web\"/&gt;\n\n    &lt;link rel=\"index\" href=\"\" title=\"Inicio\"/&gt;\n    &lt;link rel=\"stylesheet\" media=\"screen,projection\" type=\"text/css\" href=\"./css/principal.css\"/&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;!-- Contenedor --&gt;\n&lt;div id=\"contenedor\"&gt;\n\n    &lt;!-- Cabecera --&gt;\n    &lt;div id=\"cabecera\"&gt;\n\n        &lt;!-- Logo --&gt;\n        &lt;h1 id=\"logo\"&gt;&lt;a href=\"\" title=\"Mi sitio web\"&gt;Mi sitio web&lt;/a&gt;&lt;/h1&gt;\n\n        &lt;!-- Buscador --&gt;\n        &lt;div id=\"buscador\"&gt;\n            &lt;form action=\"\" method=\"get\"&gt;\n                &lt;fieldset&gt;\n                    &lt;legend&gt;Buscador&lt;/legend&gt;\n                    &lt;input type=\"text\" name=\"busqueda\" size=\"30\"/&gt;\n                    &lt;input type=\"submit\" name=\"botonbuscar\" value=\"Buscar\"/&gt;\n                &lt;/fieldset&gt;\n            &lt;/form&gt;\n        &lt;/div&gt; &lt;!-- /buscador --&gt;\n\n        &lt;div class=\"clear\"&gt;&lt;/div&gt;\n    &lt;/div&gt; &lt;!-- /cabecera --&gt;\n\n    &lt;!-- Men\u00fa principal --&gt;\n    &lt;div id=\"menu\"&gt;\n        &lt;ul&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Inicio&lt;/a&gt;&lt;/li&gt;\n            &lt;li class=\"seleccionado\"&gt;&lt;a href=\"#\"&gt;Blog&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Sobre mi&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Fotos&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Portfolio&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Contacto&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"#\"&gt;Enlaces&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n\n        &lt;div class=\"clear\"&gt;&lt;/div&gt;\n    &lt;/div&gt; &lt;!-- /men\u00fa principal --&gt;\n\n    &lt;!-- Contenido --&gt;\n    &lt;div id=\"contenido\"&gt;\n\n        &lt;!-- Principal --&gt;\n        &lt;div id=\"principal\"&gt;\n\n            &lt;!-- Articulo --&gt;\n            &lt;div class=\"articulo\"&gt;\n                &lt;h2&gt;&lt;a href=\"#\"&gt;Lorem ipsum dolor sit amet&lt;/a&gt;&lt;/h2&gt;\n                &lt;p class=\"info\"&gt;\n                    &lt;span class=\"fecha\"&gt;dd-mm-aaaa 00:00&lt;/span&gt;\n                    &lt;span class=\"categoria\"&gt;&lt;a href=\"#\"&gt;dise\u00f1o&lt;/a&gt;&lt;/span&gt;\n                    &lt;span class=\"autor\"&gt;&lt;a href=\"#\"&gt;Nombre Apellido&lt;/a&gt;&lt;/span&gt;\n                    &lt;span class=\"comentarios\"&gt;&lt;a href=\"#\"&gt;A\u00f1adir comentario&lt;/a&gt;&lt;/span&gt;\n                &lt;/p&gt;\n\n                &lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam pellentesque enim blandit enim\n                    bibendum blandit.\n                    Integer eu leo ac est aliquet imperdiet. Quisque nec justo id augue posuere malesuada. Nullam ac\n                    metus. Cras non leo\n                    ut est placerat condimentum.&lt;/p&gt;\n\n                &lt;p class=\"btn-more\"&gt;&lt;a href=\"#\"&gt;Seguir leyendo...&lt;/a&gt;&lt;/p&gt;\n            &lt;/div&gt; &lt;!-- /articulo --&gt;\n\n            &lt;div class=\"clear\"&gt;&lt;/div&gt;\n\n            &lt;!-- Articulo --&gt;\n            &lt;div class=\"articulo\"&gt;\n                &lt;h2&gt;&lt;a href=\"#\"&gt;Lorem ipsum dolor sit amet&lt;/a&gt;&lt;/h2&gt;\n                &lt;p class=\"info\"&gt;\n                    &lt;span class=\"fecha\"&gt;dd-mm-aaaa 00:00&lt;/span&gt;\n                    &lt;span class=\"categoria\"&gt;&lt;a href=\"#\"&gt;dise\u00f1o&lt;/a&gt;&lt;/span&gt;\n                    &lt;span class=\"autor\"&gt;&lt;a href=\"#\"&gt;Nombre Apellido&lt;/a&gt;&lt;/span&gt;\n                    &lt;span class=\"comentarios\"&gt;&lt;a href=\"#\"&gt;A\u00f1adir comentario&lt;/a&gt;&lt;/span&gt;\n                &lt;/p&gt;\n\n                &lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam pellentesque enim blandit enim\n                    bibendum blandit.\n                    Integer eu leo ac est aliquet imperdiet. Quisque nec justo id augue posuere malesuada. Nullam ac\n                    metus. Cras non leo\n                    ut est placerat condimentum.&lt;/p&gt;\n\n                &lt;p class=\"btn-more\"&gt;&lt;a href=\"#\"&gt;Seguir leyendo...&lt;/a&gt;&lt;/p&gt;\n            &lt;/div&gt; &lt;!-- /articulo --&gt;\n\n            &lt;div class=\"clear\"&gt;&lt;/div&gt;\n\n            &lt;!-- Articulo --&gt;\n            &lt;div class=\"articulo\"&gt;\n                &lt;h2&gt;&lt;a href=\"#\"&gt;Lorem ipsum dolor sit amet&lt;/a&gt;&lt;/h2&gt;\n                &lt;p class=\"info\"&gt;\n                    &lt;span class=\"fecha\"&gt;dd-mm-aaaa 00:00&lt;/span&gt;\n                    &lt;span class=\"categoria\"&gt;&lt;a href=\"#\"&gt;dise\u00f1o&lt;/a&gt;&lt;/span&gt;\n                    &lt;span class=\"autor\"&gt;&lt;a href=\"#\"&gt;Nombre Apellido&lt;/a&gt;&lt;/span&gt;\n                    &lt;span class=\"comentarios\"&gt;&lt;a href=\"#\"&gt;A\u00f1adir comentario&lt;/a&gt;&lt;/span&gt;\n                &lt;/p&gt;\n\n                &lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam pellentesque enim blandit enim\n                    bibendum blandit.\n                    Integer eu leo ac est aliquet imperdiet. Quisque nec justo id augue posuere malesuada. Nullam ac\n                    metus. Cras non leo\n                    ut est placerat condimentum.&lt;/p&gt;\n\n                &lt;p class=\"btn-more\"&gt;&lt;a href=\"#\"&gt;Seguir leyendo...&lt;/a&gt;&lt;/p&gt;\n            &lt;/div&gt; &lt;!-- /articulo --&gt;\n\n            &lt;div class=\"clear\"&gt;&lt;/div&gt;\n\n        &lt;/div&gt;&lt;!-- /principal --&gt;\n\n        &lt;!-- Secundario --&gt;\n        &lt;div id=\"secundario\"&gt;\n\n            &lt;!-- Sobre mi --&gt;\n            &lt;h3&gt;&lt;a href=\"#\"&gt;Sobre m\u00ed&lt;/a&gt;&lt;/h3&gt;\n\n            &lt;div id=\"sobremi\"&gt;\n                &lt;img src=\"imatges/mifoto.gif\" alt=\"Mi foto\"/&gt;\n                &lt;p&gt;&lt;strong&gt;Nombre apellidos&lt;/strong&gt;&lt;br/&gt;\n                    Edad&lt;br/&gt;\n                    Ciudad de residencia&lt;br/&gt;\n                    &lt;a href=\"#\"&gt;Mi perfil p\u00fablico&lt;/a&gt;&lt;/p&gt;\n            &lt;/div&gt; &lt;!-- /sobre mi --&gt;\n\n            &lt;div class=\"clear\"&gt;&lt;/div&gt;\n\n            &lt;!-- Categor\u00edas --&gt;\n            &lt;h3&gt;Categor\u00edas&lt;/h3&gt;\n\n            &lt;ul id=\"categorias\"&gt;\n                &lt;li class=\"seleccionado\"&gt;&lt;a href=\"#\"&gt;Categor\u00eda 1&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Categor\u00eda 2&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Categor\u00eda 3&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Categor\u00eda 4&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Categor\u00eda 5&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n\n            &lt;div class=\"clear\"&gt;&lt;/div&gt;\n\n            &lt;!-- Archivo --&gt;\n            &lt;h3&gt;Archivo&lt;/h3&gt;\n\n            &lt;ul id=\"archivo\"&gt;\n                &lt;li class=\"seleccionado\"&gt;&lt;a href=\"#\"&gt;Enero 200X&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Diciembre 200X&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Noviembre 200X&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Octubre 200X&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Septiembre 200X&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n\n            &lt;div class=\"clear\"&gt;&lt;/div&gt;\n\n            &lt;!-- Enlaces --&gt;\n            &lt;h3&gt;Enlaces&lt;/h3&gt;\n\n            &lt;ul id=\"enlaces\"&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Enlace 1&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Enlace 2&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Enlace 3&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Enlace 4&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Enlace 5&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n\n            &lt;div class=\"clear\"&gt;&lt;/div&gt;\n\n        &lt;/div&gt; &lt;!-- /secundario --&gt;\n\n        &lt;div class=\"clear\"&gt;&lt;/div&gt;\n    &lt;/div&gt; &lt;!-- /contenido --&gt;\n\n    &lt;!-- Pie de p\u00e1gina --&gt;\n    &lt;div id=\"pie\"&gt;\n        &lt;p id=\"copyright\"&gt;\u00a9 200X Nombre de empresa&lt;/p&gt;\n    &lt;/div&gt; &lt;!-- /pie de p\u00e1gina --&gt;\n\n&lt;/div&gt; &lt;!-- /contenedor --&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/SolucioMarges.html","title":"SolucioMarges","text":"<pre><code>/* === IMPORTANT ===\n   No modifiquis aquests estils, donat que s\u00f3n imprescindibles per a que la p\u00e0gina es vegi correctament.\n   ================= */\n\n/*-- B\u00e0sic ----------------------------------------------------------*/\nul, ul li { margin: 0; padding: 0; list-style: none; }\nh1, h2, h3, p, form { margin: 0; padding: 0; }\n.clear { clear: both; }\nimg { border: none; }\n\n/*-- Layout ----------------------------------------------------------*/\n#contenedor {\n    width: 90%;\n    max-width: 900px;\n    @media (max-width: 900px) {\n        body {\n            width: auto;\n        }\n    }\n\n    @media (min-width: 901px) {\n        body {\n            width: 900px;\n        }\n    }\n    margin: 0 auto;\n}\n\n#cabecera, #menu, #lateral, #contenido, #contenido #principal, #contenido #secundario, #pie {\n    border: 2px solid #777;\n}\n\n#cabecera { clear: both; }\n#menu { clear: both; }\n#lateral { float: left; width: 20%; }\n#contenido { float: right; width: 78%; }\n#contenido #principal { float: left; width: 78%; }\n#contenido #secundario { float: right; width: 20%; }\n#pie { clear: both; }\n\n/*-- Cap\u00e7alera --------------------------------------------------------*/\n#cabecera #logo { float: left; }\n#cabecera #buscador { float: right; }\n\n/*-- Men\u00fa ------------------------------------------------------------*/\n#menu ul#menu_principal li { display: inline; float: left; }\n\n/*-- Secci\u00f3 Principal -----------------------------------------------*/\n#contenido #principal .articulo img { width: 100px; float: left; }\n\n/*-- Peu de p\u00e0gina ---------------------------------------------------*/\n#pie .enlaces   { float: left; }\n#pie .copyright { float: right; }\n\n/* === IMPORTANT ===\n   A partir d'aqu\u00ed, es poden afegir tots els estils propis que seguin necess\u00e0ris.\n   ================= */\n\n\n#cabecera,\n#menu,\n#lateral,\n#lateral #noticias,\n#lateral #publicidad,\n#contenido,\n#contenido #principal,\n#contenido #secundario,\n#pie {\n    padding: .5em;\n}\n\n#lateral {\n    padding: 0;\n}\n\n#cabecera {\n    padding: 1em;\n}\n\n#menu {\n    margin-bottom: .5em;\n}\n\n#contenido {\n    width: 77%;\n    padding: 0;\n}\n\n#contenido #principal {\n    width: 73%;\n}\n\n#pie {\n    padding: .5em 0;\n    margin-top: 1em;\n}\n\n#contenido #principal .articulo {\n    margin-bottom: 1em;\n}\n\n#contenido #principal .articulo img {\n    margin: .5em;\n}\n\n#lateral #publicidad {\n    margin-top: 1em;\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/exercicis_tipus_examen.html","title":"Exercicis tipus examen","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/exercicis_tipus_examen.html#exercicis-tipus-examen","title":"Exercicis tipus examen","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/exercicis_tipus_examen.html#enunciat","title":"Enunciat","text":"<p>Crea una tabla con la estructura siguiente</p> <p></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/exercicis_tipus_examen.html#enunciat_1","title":"Enunciat","text":"<p>Crea una p\u00e1gina HTML que produzca este resultado</p> <p></p> <p>Una tabla compleja</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/exercicis_tipus_examen.html#enunciat_2","title":"Enunciat","text":"<p>Crea una p\u00e1gina HTML que produzca este resultado </p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/exercicis_tipus_examen.html#enunciat_3","title":"Enunciat","text":"<p>Crea un formulario como este donde haya 3 opciones en la lista desplegable: \u00abM\u00e1s de 400\u00bb, \u00abMenos de 400\u00bb, \u00abVariables\u00bb </p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/exercicis_tipus_examen.html#enunciat_4","title":"Enunciat","text":"<p>Crea un formulario como este </p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/exercicis_tipus_examen.html#enunciat_5","title":"Enunciat","text":"<p>Crea un formulario como este </p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/formulari1.html","title":"Formulari1","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/formulari1.html#formulario-1","title":"Formulario 1","text":"<p>Generar el formulario siguiente de acuerdo a los siguientes requisitos</p> <ul> <li>Contiene los siguientes <code>radiobuttons</code>:radio con el <code>name</code> \u00abidioma\u00bb , <code>value</code> \u00abidiomaingles\u00bb y el texto \u00abIngl\u00e9s\u00bb, radio con el <code>name</code> \u00abidioma\u00bb , <code>value</code> \u00abidiomaaleman\u00bb y el texto \u00abAlem\u00e1n\u00bb, radio con el <code>name</code> \u00abidioma\u00bb , <code>value</code> \u00abidiomafrances\u00bb y el texto \u00abFranc\u00e9s\u00bb.</li> <li>Hay una lista desplegable con el <code>name</code> \u00abconector\u00bb y con las siguientes opciones: opci\u00f3n \u00abUSB\u00bb con el <code>value</code> usb, opci\u00f3n \u00abParalelo\u00bb con el <code>value</code> paralelo, opci\u00f3n \u00abPS2\u00bb con el <code>value</code> ps2.</li> <li>Hay los siguientes cuadros de texto:cuadro de texto con el texto \u00abNombre\u00bb y el <code>name</code> nombre, cuadro de texto con el texto \u00abApellidos\u00bb y el <code>name</code> apellidos</li> <li>Hay una lista desplegable m\u00faltiple con el <code>name</code> \u00absexo\u00bb y con las siguientes opciones: opci\u00f3n \u00abHombre\u00bb con el <code>value</code> hombre, opci\u00f3n \u00abMujer\u00bb con el <code>value</code> mujer.</li> <li>Contiene los siguientes <code>checkboxes</code>:checkbox con el <code>name</code> \u00absexo\u00bb , <code>value</code> \u00absexomujer\u00bb y el texto \u00abMujer\u00bb, checkbox con el <code>name</code> \u00absexo\u00bb , <code>value</code> \u00absexohombre\u00bb y el texto \u00abHombre\u00bb.</li> <li>Hay un control para indicar la fecha.</li> </ul> <p></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practicaPortafoliHTMLCSS.html","title":"Pr\u00e0ctica: portafoli amb HTML i CSS","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practicaPortafoliHTMLCSS.html#objectiu-i-durada","title":"Objectiu i durada","text":"<p>L'objectiu d'aquesta pr\u00e0ctica \u00e9s donar curs als vostres nous coneixements d'HTML i CSS per crear una versi\u00f3 del vostre portafoli o carpeta d\u2019aprenentatge.</p> <p>Durada: 7 h</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practicaPortafoliHTMLCSS.html#lliurament-i-presentacio","title":"Lliurament i presentaci\u00f3","text":"<p>El lliurament ser\u00e0 en format ZIP. </p> <p>IMPORTANT</p> <p>Llegiu detingudament l'apartat \"Com lliurar la tascal al Classroom\" perqu\u00e8 si la pr\u00e0ctica no segueix aquestes normes i com ja es va avisar al comen\u00e7ament del curs, NO SE CORREGIR\u00c0 i per tant ser\u00e0 una PR\u00c0CTICA SUSPESA.</p> Com lliurar la tasca al Classroom <p>Feu el lloc web seguint les instruccions i requisits d'aquest enunciat. </p> <p>Aleshores, creareu un zip que contengui tots els fitxers que componen el vostre treball (no oblideu d'incloure les imatges i els fitxers css). la pagina .html, aix\u00ed com els fitxers .css i les imatges han de seguir la seg\u00fcent nomenclatura:</p> <p> <code>&lt;nom_codificat&gt;&lt;codi_tasca_del_classroom&gt;_&lt;numero_fitxer&gt;.zip</code></p> <p>En el fitxer .zip tamb\u00e9 heu d'incloure un fitxer amb el nom llegeix.me (a l'estil dels fitxers READ.ME). Fitxer de text pla on heu de detallar que \u00e9s el que m'estau entregant i en quin nom (sempre seguint l'est\u00e0ndar que acabam de posar).</p> <p>Per exemple, en Tofol Verdera per la tasca PO01 que t\u00e9 3 fitxers html, 2 imatges jpg i un fitxer css, tindria : <code>tverderagPO01_00.zip</code> que contindria aquests fitxers i noms:</p> <p> <code>tverderagPO01_01.html</code> // p\u00e0gina html 1</p> <p> <code>tverderagPO01_02.html</code> // p\u00e0gina html 2</p> <p> <code>tverderagPO01_03.html</code> // p\u00e0gina html 3</p> <p> <code>tverderagPO01_04.jpg</code> // captura 1</p> <p> <code>tverderagPO01_05.jpg</code> // captura 2</p> <p> <code>tverderagPO01_06.css</code> // fitxer d'estils CSS</p> <p> <code>llegeix.me</code> // fitxer amb informaci\u00f3 dels fitxers, amb el seg\u00fcent contingut:</p> <pre><code>Pr\u00e0ctica PO01 de'n Tofol Verdera:\ntverderagPO01_01.html // p\u00e0gina html 1\ntverderagPO01_02.html // p\u00e0gina html 2\ntverderagPO01_03.html // p\u00e0gina html 3\ntverderagPO01_04.jpg // captura 1\ntverderagPO01_05.jpg // captura 2\ntverderagPO01_06.css // fitxer d'estils CSS\n</code></pre> Com saber el meu nom_codificat <p>L'usuari que has d'usar sempre en les tasques ha de complir el format seg\u00fcent:</p> <ul> <li>La inicial del teu primer nom.</li> <li>El teu primer cognom.</li> <li>La inicial del teu segon cognom si en tens.</li> </ul> <p>Suposem en Tofol Gabriel Verdera Grimalt el seu usuari ser\u00e0: tverderag.</p> <p>En totes les tasques, cada cop que es faci menci\u00f3 a <code>&lt;nom_codificat&gt;</code> haur\u00e0s de substituir-lo pel teu usuari.</p> <p>Sempre que sigui possible haureu d'usar el vostre nom d'usuari de manera que no hi hagi cap dubte sobre l'autoria de les tasques.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practicaPortafoliHTMLCSS.html#qualificacio","title":"Qualificaci\u00f3","text":"<p>La tasca es qualifica amb una nota de 0 a 10.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practicaPortafoliHTMLCSS.html#activitats","title":"Activitats","text":"<p>A continuaci\u00f3 es llisten les activitats que cal realitzar. Recorda que l'HTML nom\u00e9s marca l'estructura i el contingut del document i CSS la part estil\u00edstica i visual.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practicaPortafoliHTMLCSS.html#html","title":"HTML","text":"<p>Per a la part d'HTML pots fer servir els seg\u00fcents enlla\u00e7os que et serviran de documentaci\u00f3:</p> <ul> <li>El meu article HTML</li> <li>Llenguatge HTML5</li> <li>Tutorial HTML (W3Schools)</li> <li>HTML: Llenguatge d'etiquetes d'hipertext (Developer Mozilla)</li> </ul> <p>Respecte a la part d'HTML el portafoli haur\u00e0 de complir almenys amb els requisits seg\u00fcents:</p> <ol> <li>El portafoli respecta les indentacions o tabulacions perqu\u00e8 sigui c\u00f2mode de llegir.</li> <li>El portafoli utilitza cap\u00e7aleres (h1, h2, h3...) de manera ben estructurada.</li> <li>El portafoli utilitza par\u00e0grafs.</li> <li>El portafoli utilitza una o diverses llistes.</li> <li>El portafoli utilitza una o diverses taules.</li> <li>El portafoli utilitza una o diverses imatges.</li> <li>El portafoli utilitza codificaci\u00f3 UTF-8.</li> <li>El portafoli t\u00e9 favicon.</li> <li>El portafoli t\u00e9 un t\u00edtol (metadada) amb el nom de l'alumne.</li> <li>El portafoli t\u00e9 un o m\u00e9s comentaris HTML.</li> <li>El portafoli utilitza enlla\u00e7os externs.</li> </ol>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practicaPortafoliHTMLCSS.html#css","title":"CSS","text":"<p>Per a la part de CSS pots fer servir els seg\u00fcents enlla\u00e7os que et serviran de documentaci\u00f3:</p> <ul> <li>El meu article CSS</li> <li>Llenguatge CSS</li> <li>Tutorial CSS (W3Schools)</li> <li>CSS (Desenvolupador Mozilla)</li> </ul> <p>Respecte a la part de CSS el portafoli haur\u00e0 de complir almenys amb els requisits seg\u00fcents:</p> <ol> <li>Els estils respecten les indentacions o tabulacions perqu\u00e8 sigui c\u00f2mode de llegir.</li> <li>Els estils s\u00f3n en un fitxer independent amb extensi\u00f3 \".css\".</li> <li>El portafoli ha de contenir estils assignats pels tres tipus de selectors.</li> <li>El portafoli utilitza almenys 3 tipus de combinators diferents.</li> <li>El portafoli ha d'usar les etiquetes sem\u00e0ntiques d'HTML5.</li> <li>El portafoli ha de comptar amb una cap\u00e7alera i un peu.</li> <li>El full d'estils ha de tenir com a m\u00ednim un comentari per indicar-ne l'autor.</li> <li>El portafoli utilitza una font personalitzada per als t\u00edtols i una font personalitzada per al contingut.</li> <li>El portafoli utilitza paddings i/o margins de manera adequada.</li> <li>El portafoli cont\u00e9 almenys un tooltip.</li> </ol> <p>Si vols fer que el teu curr\u00edculum sigui realment responsiu pots fer servir aquest v\u00eddeo de guia:</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_CSS_W3Schools.html","title":"Pr\u00e0ctica CSS W3Schools","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_CSS_W3Schools.html#objectiu-i-durada","title":"Objectiu i durada","text":"<p>El objetivo de esta pr\u00e1ctica es aprender a escribir CSS de forma correcta.L' objectiu d' aquesta pr\u00e0ctica \u00e9s aprendre a escriure CSS de forma correcta.</p> <p>Durada: 4 h</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_CSS_W3Schools.html#lliurament-i-presentacio","title":"Lliurament i presentaci\u00f3","text":"<p>El lliurament ser\u00e0 en format PDF. Seguint les instruccions ja esmentades.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_CSS_W3Schools.html#qualificacio","title":"Qualificaci\u00f3","text":"<p>La tasca es qualificar\u00e0 com a apte o no apte.</p> <p>Activitats</p> <p>Activitat volunt\u00e0ria</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_CSS_W3Schools.html#activitats","title":"Activitats","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_CSS_W3Schools.html#captura-perfil-abans-de-fer-els-exercicis","title":"Captura perfil abans de fer els exercicis","text":"<p>Ja has de tenir el teu perfil disponible a My learning, aleshores ves-hi i fes una captura de pantalla per mostrar com el tens abans de comen\u00e7ar l'activitat.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_CSS_W3Schools.html#captura-perfil-amb-la-tasca","title":"Captura perfil amb la tasca","text":"<p>Realitza els exercicis d' aquest enlla\u00e7.</p> <p>Assegura't que se t'afegeixen en el teu apartat de \"My learning\" quan portis dos o tres exercicis fets.</p> <p>Fes una o diverses captures quan completis els 138 exercicis, de manera que quedi demostrat que amb el teu compte has realitzat tots els exercicis i tens l'estrella corresponent.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_CSS_W3Schools.html#questionari","title":"Q\u00fcestionari","text":"<p>Despr\u00e9s de la realitzaci\u00f3 dels exercicis est\u00e0s preparat per realitzar el CSS Quiz on pots posar a prova els teus nous coneixements.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML.html","title":"practica HTML","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML.html#en-elaboracio","title":"En elaboracio","text":"<p>\ud83d\udc40\ufe0f</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html","title":"Tasca: Introducci\u00f3 a HTML","text":"","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#lliurament-i-presentacio","title":"Lliurament i presentaci\u00f3","text":"<p>El lliurament ser\u00e0 en format ZIP. Llegir lliuraments.</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#qualificacio","title":"Qualificaci\u00f3","text":"<p>La tasca es qualifica amb una nota de 0 a 10.</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#activitats","title":"Activitats","text":"<p>A continuaci\u00f3 es llisten les activitats que cal realitzar per a aquesta pr\u00e0ctica.</p> <p>Si tens algun dubte de com es fa servir una etiqueta pots consultar el manual Tutorial HTML en angl\u00e8s o el manual HTML: Llenguatge d'etiquetes d'hipertext en espanyol. {:.prompt-info}</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#corregiu-els-errors-destructura","title":"Corregiu els errors d'estructura","text":"<p>A continuaci\u00f3 se us presenta un document web amb alguns errors de sintaxi i a nivell d'estructura del document web. Corregeix-los.</p> <pre><code>&lt;DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;/meta charset=\"utf-8\"&gt;\n        &lt;meta name=\"description\" content=\"Exercici HTML - Corregeix els errors\"&gt;\n    &lt;body&gt;\n    &lt;/head&gt;\n        &lt;title&gt;Corrigeu els errors que trobeu al document&lt;/title&gt;\n    &lt;h1&gt;Aprendre HTML \u00e9s molt divertit&lt;/h1&gt;\n    &lt;p&gt;Lorem fistrum veniam qui qui jarl. Pecador labor tiene musho peligro caballo blanco caballo negroorl.\n    &lt;p&gt;Lorem fistrum veniam qui qui jarl. Pecador labor tiene musho peligro caballo blanco caballo negroorl.&lt;/p&gt;\n    &lt;/body&gt;\n    &lt;p&gt;Arribar\u00e9 a la hist\u00f2ria d'aquest jarl. Pecador labor tiene musho peligro caballo blanco caballo negroorl.&lt;/p&gt;\n&lt;html&gt;\n</code></pre> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#etiquetes-de-text-basiques","title":"Etiquetes de text b\u00e0siques","text":"<p>En aquest exercici practicarem amb les etiquetes de text m\u00e9s comunes.</p> <p><pre><code>&lt;p&gt;, &lt;strong&gt;, &lt;i&gt;, &lt;em&gt;, &lt;b&gt;, &lt;blockquote&gt;\n&lt;hr/&gt;, &lt;br/&gt;, &lt;h1&gt;,&lt;h2&gt;,&lt;h3&gt;\n</code></pre> A partir del seg\u00fcent text:</p> <p><pre><code>Berners-Lee trabaj\u00f3 en el CERN desde junio hasta diciembre de 1980. Durante ese tiempo, propuso un proyecto basado en el hipertexto para facilitar la forma de compartir y la puesta al d\u00eda de la informaci\u00f3n entre investigadores. En este periodo tambi\u00e9n construy\u00f3 un programa llamado ENQUIRE que no lleg\u00f3 a ver la luz.1\u200b Despu\u00e9s de dejar el CERN, en 1980, se fue a trabajar a la empresa de John Poole Image Computer Systems Ltd., pero regres\u00f3 al CERN otra vez en 1984. En 1989, el CERN era el nodo de Internet m\u00e1s grande de Europa y Berners-Lee vio la oportunidad de unir Internet y el hipertexto (HTTP y HTML), de lo que surgir\u00eda la World Wide Web. Desarroll\u00f3 su primera propuesta de la Web el 12 de marzo de 1989,2\u200b pero no tuvo mucho eco, por lo que en 1990 y con la ayuda de Robert Cailliau, hicieron una revisi\u00f3n que fue aceptada por su gerente, Mike Sendall. Us\u00f3 ideas similares a las que hab\u00eda usado en el sistema Enquire, para crear la World Wide Web, para esto dise\u00f1\u00f3 y construy\u00f3 el primer navegador (llamado WorldWideWeb y desarrollado con NEXTSTEP) y el primer servidor Web al que llam\u00f3 httpd (HyperText Transfer Protocol daemon). El primer servidor Web se encontraba en el CERN y fue puesto en l\u00ednea el 6 de agosto de 1991. Esto proporcion\u00f3 una explicaci\u00f3n sobre lo que era el World Wide Web, c\u00f3mo uno podr\u00eda tener un navegador y c\u00f3mo establecer un servidor Web. Este fue tambi\u00e9n el primer directorio Web del mundo, ya que Berners-Lee mantuvo una lista de otros sitios Web aparte del suyo. Debido a que tanto el software del servidor como del cliente fue liberado de forma gratuita desde el CERN, el coraz\u00f3n de Internet Europeo en esa \u00e9poca, su difusi\u00f3n fue muy r\u00e1pida. El n\u00famero de servidores Web pas\u00f3 de veintis\u00e9is en 1992 a doscientos en octubre de 1995 lo que refleja cual fue la velocidad de la difusi\u00f3n de internet. En 1994 entr\u00f3 en el Laboratorio de Ciencias de la Computaci\u00f3n e Inteligencia Artificial del Massachusetts Institute of Technology. Se traslad\u00f3 a EE.UU. y puso en marcha el W3C, que dirige actualmente. El W3C es un organismo internacional de estandarizaci\u00f3n de tecnolog\u00edas Web dirigido conjuntamente por el Instituto Tecnol\u00f3gico de Massachusetts, el ERCIM franc\u00e9s y la Universidad de Kei\u014d en Jap\u00f3n. Este organismo decidi\u00f3 que todos sus est\u00e1ndares fuesen libres, es decir, que los pudiese utilizar todo el mundo libremente sin coste alguno, lo que sin lugar a dudas fue una de las grandes razones para que la Web haya llegado a tener la importancia que tiene hoy en d\u00eda. En su libro Tejiendo la red, publicado en 1999, Berners-Lee explica por qu\u00e9 la tecnolog\u00eda web es libre y gratis. Se considera al mismo tiempo el inventor y el protector de la web. \n</code></pre> Fes que tingui un format segons la imatge seg\u00fcent:  Biografia de Tim Berners-Llegeix en HTML</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#etiquetes-de-text-menys-comuns","title":"Etiquetes de text menys comuns","text":"<p>En aquest exercici practicarem amb les etiquetes de text menys comuns.</p> <p>Les etiquetes seleccionades per a aquest exercici s\u00f3n:</p> <pre><code>&lt;p&gt;, &lt;strong&gt;, &lt;i&gt;, &lt;em&gt;, &lt;b&gt;, &lt;blockquote&gt;, &lt;hr/&gt;, &lt;br/&gt;, &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;\n&lt;abbr&gt;, &lt;cite&gt;, &lt;u&gt;, &lt;del&gt;, &lt;ins&gt;, &lt;code&gt;, &lt;pre&gt;, &lt;q&gt;, &lt;s&gt;\n</code></pre> <p>A partir del text seg\u00fcent:</p> <pre><code>Biograf\u00eda de Vinton Cerf Cuando solo ten\u00eda 25 a\u00f1os trabaj\u00f3 en el motor de cohete F-1 que sirvi\u00f3 para propulsar el cohete Saturno V que viaj\u00f3 a la luna, y a principios de los a\u00f1os 70 comenz\u00f3 a desarrollar con Robert Khan un conjunto de protocolos de comunicaciones para la red militar, financiado por la agencia gubernamental DARPA. El objetivo era crear una \"red de redes\" que permitiera interconectar las distintas redes del Departamento de Defensa de los Estados Unidos, todas ellas de diferentes tipos y que funcionaban con diversos sistemas operativos, con independencia del tipo de conexi\u00f3n: radioenlaces, sat\u00e9lites y l\u00edneas telef\u00f3nicas. Las investigaciones, lideradas por Vinton Cerf, primero desde la Universidad de California (1967-1972) y posteriormente desde la Universidad de Stanford (1972-1976), llevaron al dise\u00f1o del conjunto de protocolos que hoy son conocidos como TCP/IP (Transmission Control Protocol/Internet Protocol), que fue presentado por Vinton Cerf y Robert Khan en 1972. Entre 1976 y 1982, trabajando en DARPA, fue pionero en el desarrollo de la transmisi\u00f3n por radio y sat\u00e9lite de paquetes, responsable del proyecto Internet y del programa de investigaci\u00f3n de seguridad en la red. Siempre preocupado por los problemas de conexi\u00f3n de redes, Cerf estableci\u00f3 en 1979 la Internet Configuration Control Board (que posteriormente se denomin\u00f3 Internet Activities Board), y fue su primer presidente. Entre 1982 y 1986, Cerf dise\u00f1\u00f3 el MCI MAIL, primer servicio comercial de correo electr\u00f3nico que se conectar\u00eda a Internet. En 1992 fue uno de los fundadores de la Internet Society y su primer presidente. Actualmente Vinton Cerf es el vicepresidente mundial y Chief Internet Evangelist de Google. Es miembro del Consejo Asesor Internacional del Centro Cultural Internacional Oscar Niemeyer de Avil\u00e9s, Asturias. \n</code></pre> <p>Fes que tingui un format segons la imatge seg\u00fcent:</p> <p> Biografia de Vinton Cerf en HTML</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#encapcalats","title":"Encap\u00e7alats","text":"<p>A continuaci\u00f3 se't presenta un document de text pla per al qual se't demana donar format a les cap\u00e7aleres mitjan\u00e7ant un processador de textos (es recomana utilitzar LibreOffice).</p> <pre><code>T\u00edtol principal que resumeix la idea general de l'escrit\n&lt;Aneu a https://www.chiquitopsum.com/ i copieu un par\u00e0graf del fitxer.&gt;\nPrimera idea principal a desenvolupar a l'escrit.\n&lt;Aneu a https://www.chiquitopsum.com/ i copieu un par\u00e0graf del fitxer.&gt;\nPrimer subtema a desenvolupar de la primera idea principal.\n&lt;Aneu a https://www.chiquitopsum.com/ i copieu un par\u00e0graf del fitxer.&gt;\nSegon subtema a desenvolupar de la primera idea principal.\n&lt;Aneu a https://www.chiquitopsum.com/ i copieu un par\u00e0graf del fitxer.&gt;\nSegona idea principal a desenvolupar a l'escrit.\n&lt;Aneu a https://www.chiquitopsum.com/ i copieu un par\u00e0graf del fitxer.&gt;\nPrimer subtema a desenvolupar de la segona idea principal.\n&lt;Anar a https://www.chiquitoipsum.com/ i copiar un altre par\u00e0graf del lorem fistrum.\nSegon subtema a desenvolupar de la primera idea principal.\n&lt;Aneu a https://www.chiquitopsum.com/ i copieu un par\u00e0graf del fitxer.&gt;\nConclusions\n&lt;Aneu a https://www.chiquitopsum.com/ i copieu un par\u00e0graf del fitxer.&gt;\n&lt;Aneu a https://www.chiquitopsum.com/ i copieu un par\u00e0graf del fitxer.&gt;\n</code></pre> <p>El resultat haur\u00e0 de ser una cosa semblant a aix\u00f2:</p> <p> Portada amb taula de continguts</p> <p> Primera p\u00e0gina</p> <p>Aquesta activitat es lliura en format .pdf</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#codis-i-noms-html","title":"Codis i noms HTML","text":"<p>Donats els car\u00e0cters seg\u00fcents a continuaci\u00f3 escriu el seu equivalent mitjan\u00e7ant el nom HTML en un document HTML v\u00e0lid.</p> <p>En cas de no existir un nom HTML utilitza el n\u00famero HTML.</p> <pre><code>; &lt; &gt; &amp; ' \" barra invertida / copyright, espai ininterromput, $\n</code></pre> <p>Hi ha 2 maneres de codificar els car\u00e0cters.</p> <ul> <li>La primera i m\u00e9s f\u00e0cil de recordar \u00e9s mitjan\u00e7ant el nom HTML: <code>&amp;nom</code>;</li> <li>Si no hi ha m\u00e9s remei aleshores fem servir el codi HTML: <code>&amp;#nombre</code>;</li> </ul> <p>Podeu fer servir el recurs www.ascii.cl</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#caracters-escapats","title":"Car\u00e0cters escapats","text":"<p>Escriu en un document web el text seg\u00fcent tenint en compte que s'usen les cap\u00e7aleres h1 a h6.</p> <p> Encap\u00e7alat amb personatges escapats</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#espais-en-blanc-i-encapcalats","title":"Espais en blanc i encap\u00e7alats","text":"<p>Escriviu l'HTML necessari per fer possible que es visualitzi el resultat de la imatge.</p> <p>Observacions:</p> <ul> <li>L'exercici est\u00e0 resolt sense utilitzar CSS.</li> <li>Totes les l\u00ednies estan resoltes mitjan\u00e7ant un t\u00edtol <code>&lt;h3&gt;</code>.</li> </ul> <p> Encap\u00e7alats amb espais</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#llistes-de-definicions","title":"Llistes de definicions","text":"<p>Crea una llista de definicions per als termes seg\u00fcents relacionades amb la teoria explicada a classe. Haureu de cercar la definici\u00f3 d'aquests termes a Internet.</p> <ul> <li>XML</li> <li>HTML</li> <li>W3C</li> <li>RFC</li> </ul> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#llistes-ordenades-i-no-ordenades","title":"Llistes ordenades i no ordenades","text":"<p>Escriu amb HTML les llistes segons les imatges seg\u00fcents.</p> <p> Llistes ordenades</p> <p> Llistes NO ordenades</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#llistes-imbricades","title":"Llistes imbricades","text":"<p>Transcriu la seg\u00fcent imatge en llenguatge HTML.</p> <p> Llista imbricada 1</p> <p>Transcriu la seg\u00fcent imatge en llenguatge HTML.</p> <p> Llista imbricada 2</p> <p>Transcriu la seg\u00fcent imatge en llenguatge HTML.</p> <p> Llista imbricada 3</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#llistes-correctament-imbricades","title":"Llistes correctament imbricades","text":"<p>Ania correctament la llista no ordenada que es mostra a la imatge.</p> <p> Llista HTML imbricada amb un subnivell i un subsubnivell</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#url-relatius","title":"URL relatius","text":"<p>A continuaci\u00f3 se us presenta un directori de carpetes i documents HTML segons la imatge.</p> <p>Consta de:</p> <ul> <li>Una carpeta server de la qual pengen les carpetes fitxers, prova, subdir i on hi ha un document de nom raiz.html.</li> <li>Dins la carpeta fitxers hi ha el document carta.html.</li> <li>Dins la carpeta prova hi ha el document prova.html.</li> <li>La carpeta subdir cont\u00e9 una carpeta de nom directe i 3 fitxers HTML de noms docu.html, llista.html, index.html.</li> <li>La carpeta directa cont\u00e9 un document web de nom textual.html.</li> </ul> <p> Carpetes i fitxers HTML d'un projecte web</p> <p>Dins de cada document HTML especificat a continuaci\u00f3 has de poder navegar als llocs seg\u00fcents:</p> <ul> <li>Des d'arrel.html hi ha d'haver un enlla\u00e7 relatiu a textual.html</li> <li>Des de docu.html hi ha d'haver un enlla\u00e7 relatiu a llista.html</li> <li>Des de carta.html hi ha d'haver un enlla\u00e7 relatiu a prova.html</li> <li>Des de carta.html hi ha d'haver un enlla\u00e7 relatiu a docu.html</li> <li>Des de textual.html hi ha d'haver un enlla\u00e7 relatiu a arrel.html</li> <li>Des de textual.html hi ha d'haver un enlla\u00e7 relatiu a subdir (carpeta)</li> <li>Des de textual.html hi ha d'haver un enlla\u00e7 relatiu a prova (carpeta)</li> <li>Des de textual.html hi ha d'haver un enlla\u00e7 relatiu a prova.html</li> </ul> <p>Recordeu que les rutes relatives haurien de funcionar en qualsevol PC.</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#llibre-digital-navegable","title":"Llibre digital navegable","text":"<p>Crea un llibre digital que consti de 4 cap\u00edtols i un \u00edndex des del qual es pot accedir a:</p> <ul> <li>Cadascun dels cap\u00edtols del llibre.</li> <li>Cadascuna de les seccions definides dins de cada cap\u00edtol.</li> </ul> <p>Cada cap\u00edtol es divideix de les seccions:</p> <ul> <li>Introducci\u00f3 (2 par\u00e0grafs de tipus petit\u00f3 ipsum)</li> <li>Nu (Almenys 10 par\u00e0grafs sobre el propi petit)</li> <li>Desenlace (2 par\u00e0grafs molt petits)</li> </ul> <p>Al peu de p\u00e0gina de cadascun dels cap\u00edtols han d'apar\u00e8ixer 2 enlla\u00e7os que ocupin 2 l\u00ednies diferenciades que ens permetin:</p> <ul> <li>Anar a l'\u00edndex del llibre digital.</li> <li>Situar-se de nou a la part superior del document cap\u00edtol.</li> </ul> <p>Un cop finalitzat el llibre digital configura la cap\u00e7alera de tots els cap\u00edtols per indicar quin cap\u00edtol \u00e9s el primer, quin ve despr\u00e9s, quin \u00e9s l'anterior i quin \u00e9s el darrer. Fes servir l'etiqueta <code>&lt;enlla\u00e7&gt;</code>.</p> <p>A continuaci\u00f3 es mostren com a guia una captura de pantalla de la soluci\u00f3 final per a l'\u00edndex i un dels cap\u00edtols.</p> <p> Resultat final \u00edndex de cap\u00edtols llibre digital amb HTML</p> <p> Mostra el resultat final d'un cap\u00edtol del llibre digital navegable.</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#corregeix-els-errors-i","title":"Corregeix els errors I","text":"<p>El document HTML seg\u00fcent est\u00e0 ple d'errors. Els pots trobar tots?</p> <p><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf8\" /&gt;\n    &lt;title&gt;Corrige los errores&lt;/title&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;h1&gt;&lt;strong&gt;Corrige los errores&lt;/strong&gt;&lt;/h1&gt;\n\n    &lt;h2&gt;\u00cdndice de contenidos&lt;/h2&gt;\n    &lt;ul&gt;\n      &lt;li&gt;\n        &lt;a href=\"ancla\"&gt;Enlace 1&lt;/a&gt;\n        &lt;ul&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;Enlace 2&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"\"&gt;Enlace 3&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;Enlace 4&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;h2&gt;\n      &lt;p&gt;Lorem fistrum&lt;/p&gt;\n    &lt;/h2&gt;\n\n    &lt;br /&gt;\n\n    &lt;p&gt;\n      Lorem fistrum te voy a borrar el cerito ese que llega pecador a peich al\n      ataquerl pecador mamaar a wan. No puedor me cago en tus muelas fistro\n      jarl. Llevame al sircoo mamaar torpedo quietooor. A gramenawer al ataquerl\n      te voy a borrar el cerito quietooor no te digo trigo por no llamarte\n      Rodrigor. Benemeritaar torpedo te va a has\u00e9 pupitaa amatomaa benemeritaar\n      por la gloria de mi madre a gramenawer a peich papaar papaar llevame al\n      sircoo. Qu\u00e9 dise usteer de la pradera jarl ese hombree te va a has\u00e9\n      pupitaa pecador quietooor est\u00e1 la cosa muy malar. Va ust\u00e9 muy cargadoo\n      amatomaa de la pradera por la gloria de mi madre quietooor.\n    &lt;/p&gt;\n\n    &lt;br /&gt;\n\n    &lt;p id=\"#ancla\"&gt;\n      Lorem fistrum te voy a borrar el cerito ese que llega pecador a peich al\n      ataquerl pecador mamaar a wan. No puedor me cago en tus muelas fistro\n      jarl. Llevame al sircoo mamaar torpedo quietooor. A gramenawer al ataquerl\n      te voy a borrar el cerito quietooor no te digo trigo por no llamarte\n      Rodrigor. Benemeritaar torpedo te va a has\u00e9 pupitaa amatomaa benemeritaar\n      por la gloria de mi madre a gramenawer a peich papaar papaar llevame al\n      sircoo. Qu\u00e9 dise usteer de la pradera jarl ese hombree te va a has\u00e9\n      pupitaa pecador quietooor est\u00e1 la cosa muy malar. Va ust\u00e9 muy cargadoo\n      amatomaa de la pradera por la gloria de mi madre quietooor.\n    &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#mapes-dimatges-i","title":"Mapes d'imatges I","text":"<p>A partir de la imatge que podreu descarregar a continuaci\u00f3 genera un mapa d'imatge segons les especificacions seg\u00fcents:</p> <ul> <li>L'\u00e0rea magenta porpra est\u00e0 delimitada pels punts 105,95 i 125,207. Quan es prem envia l'usuari a https://marcosruiz.github.io/posts/atajos-de-teclado/.</li> <li>L'\u00e0rea verda fosca est\u00e0 delimitada pels punts 126,95 i 215,117. Quan es prem envia l'usuari a https://olgacarreras.blogspot.com/.</li> <li>L'\u00e0rea verda blava clara est\u00e0 delimitada pels punts 128,140 i 215,161. Quan es prem envia l'usuari a https://marcosruiz.github.io/posts/trabajar-visual-studio-code/.</li> </ul> <p> Lletra F</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#mapes-dimatges-ii","title":"Mapes d'imatges II","text":"<p>A partir de la imatge que podreu descarregar a continuaci\u00f3 genera un mapa d'imatge segons les especificacions seg\u00fcents:</p> <ul> <li>L'\u00e0rea negre delimitada pels punts 95,44 i 128,257 envia l'usuari a https://marcosruiz.github.io/posts/atajos-de-teclado/ quan es prem. Al seu interior t\u00e9 una \u00e0rea definida pels punts 104,56 i 117,244 que \u00e9s inert quan \u00e9s polsat, generant un buit.</li> <li>L'\u00e0rea negre delimitada pels punts 128,44 i 235,74 envia l'usuari a https://olgacarreras.blogspot.com/ quan es prem. Al seu interior t\u00e9 una \u00e0rea definida pels punts 128,56 i 226,65 que \u00e9s inert quan \u00e9s polsat, generant un buit.</li> <li>L'\u00e0rea negre delimitada pels punts 128,138 i 220,165 envia l'usuari a https://marcosruiz.github.io/posts/trabajar-visual-studio-code/ quan es prem. Al seu interior t\u00e9 una \u00e0rea definida pels punts 128,144 i 211,156 que \u00e9s inert quan \u00e9s polsat, generant un buit.</li> </ul> <p> Lletra F</p> <p>Si alguna cosa no funciona com esperes prova a jugar amb lordre dels elements.</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#audio-i-video","title":"\u00c0udio i v\u00eddeo","text":"<p>Escriviu un codi HTML que mostri per pantalla dos reproductors d'\u00e0udio.</p> <p>Al primer has de reproduir un \u00e0udio allotjat al teu ordinador/hosting.</p> <p>Al segon has de reproduir l'\u00e0udio directament des de la font original.</p> <p>Pots trobar arxius d'\u00e0udio mp3 a Arxiu d'\u00e0udio.</p> <p>A continuaci\u00f3, reprodueix exactament el mateix exercici per\u00f2 en aquest cas reproductors de v\u00eddeo.</p> <p>Pots trobar arxius de v\u00eddeo mp4 a Arxiu d'imatges en moviment.</p> <p>Fes servir \u00e0udios i v\u00eddeos el m\u00e9s curts possible. Per trobar \u00e0udios i v\u00eddeos curts podeu cercar la paraula \"sample\". Recorda que el nombre de megues als lliuraments est\u00e0 limitat.</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#conjunt-de-marcs","title":"Conjunt de marcs","text":"<p>L'etiqueta <code>&lt;frameset&gt;</code> d'HTML ha estat eliminada dels est\u00e0ndards web, per\u00f2 \u00e9s interessant con\u00e8ixer-la. Mitjan\u00e7ant l'\u00fas adequat de l'etiqueta <code>&lt;frameset&gt;</code> d'HTML i seguint la imatge a continuaci\u00f3 feu que cada secci\u00f3 mostri les p\u00e0gines web especificades.</p> <ul> <li>verd, ample del 100% i mostra https://marcosruiz.github.io/posts/atajos-de-teclado/.</li> <li>rosa, amplada del 25% i mostra https://olgacarreras.blogspot.com/</li> <li>groc, ample del 75% i mostra https://marcosruiz.github.io/posts/trabajar-visual-studio-code/</li> <li>gris, ample del 50% i mostra https://en.wikipedia.org/wiki/Tim_Berners-Lee</li> <li>marr\u00f3, ample del 25% i mostra https://es.wikipedia.org/wiki/ARPANET.</li> </ul> <p> Conjunts de marcs</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#creacio-de-taules-i","title":"Creaci\u00f3 de taules I","text":"<p>Donat el seg\u00fcent document HTML es vol aconseguir el resultat de la imatge seg\u00fcent.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;title&gt;Ejercicio tablas HTML&lt;/title&gt;\n &lt;meta charset=\"utf-8\"/&gt;\n &lt;style&gt;\n  table{\n   border-collapse:collapse;\n   caption-side: bottom;\n  }\n  caption{\n   font-weight:bold;\n   margin-top:16px;\n  }\n  th,td{padding:5px 10px;}\n  td,th{border:1px solid #1c1c1c;text-align:center;}\n &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;!-- puedes copiar y pegar todo el c\u00f3digo en vscode para resolver el ejercicio --&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p> Taula f\u00e0cil</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#creacio-de-taules-ii","title":"Creaci\u00f3 de taules II","text":"<p>Crea un document HTML mitjan\u00e7ant el qual es visualitza una taula com la de la imatge.</p> <p>Perqu\u00e8 es vegi bonica la taula afegeix dins del <code>&lt;head&gt;</code> del document HTML aquest codi.</p> <p><pre><code>&lt;style&gt;\n    table{\n        border-collapse: collapse;\n    }\n\n    td{\n        border:1px solid #000;\n        padding:25px;\n        background-color:#ccc;\n    }\n&lt;/style&gt;\n</code></pre>  *Taula amb <code>colspanion} Per qu\u00e8 \u00e9s important fer servir les etiquetes sem\u00e0ntiques d'HTML5? <p>{:.question} Qu\u00e8 \u00e9s el SEO i qu\u00e8 t\u00e9 a veure amb les etiquetes sem\u00e0ntiques?</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#creacio-de-formularis","title":"Creaci\u00f3 de formularis","text":"<p>Escriviu l'HTML d'un formulari web segons les especificacions descrites a continuaci\u00f3:</p> <p>i <code>envergadura de files les etiquetes sem\u00e0ntiques d'HTML5? <p>{:.question} Qu\u00e8 \u00e9s el SEO i qu\u00e8 t\u00e9 a veure amb les etiquetes sem\u00e0ntiques?</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#creacio-de-formularis_1","title":"Creaci\u00f3 de formularis","text":"<p>Escriviu l'HTML d'un formulari web segons les especificacions descrites a continuaci\u00f3:</p> <p>iquetes sem\u00e0ntiques d'HTML5?</p> <p>{:.question} Qu\u00e8 \u00e9s el SEO i qu\u00e8 t\u00e9 a veure amb les etiquetes sem\u00e0ntiques?</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#creacio-de-formularis_2","title":"Creaci\u00f3 de formularis","text":"<p>Escriviu l'HTML d'un formulari web segons les especificacions descrites a continuaci\u00f3:</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#corregeix-els-errors-ii","title":"Corregeix els errors II","text":"<p>Corregeix els exercicis seg\u00fcents estan plens d'errors de sintaxi HTML.</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#a","title":"a)","text":"<pre><code>&lt;head&gt;\n  &lt;meta author=\"\"/&gt;\n  &lt;meta description=\"\"/&gt;\n&lt;head&gt;\n</code></pre>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#b","title":"b)","text":"<pre><code>&lt;html&gt;\n  &lt;header&gt;\n    &lt;title&gt;&lt;/title&gt;\n  &lt;/header&gt;\n  &lt;body&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#c","title":"c)","text":"<pre><code>&lt;table&gt;\n&lt;td&gt;\n  &lt;tr&gt;&lt;/tr&gt;\n  &lt;tr&gt;&lt;/tr&gt;\n&lt;/td&gt;\n&lt;td&gt;\n  &lt;tr&gt;&lt;/tr&gt;\n  &lt;tr&gt;&lt;/tr&gt;\n&lt;/td&gt;\n&lt;/table&gt;\n</code></pre>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#d","title":"d)","text":"<pre><code>&lt;p&gt;\nLas cosas con como son &lt;/br&gt;\nhasta que dejan de serlas &lt;/br&gt;\n\u00bfves el &lt;em&gt;&lt;b&gt;error&lt;/em&gt;&lt;/b&gt;?\n&lt;/p&gt;\n</code></pre> <p>Aquesta activitat es lliura en format .md o .txt</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#iniciacio-a-les-capes","title":"Iniciaci\u00f3 a les capes","text":"<p>A la seg\u00fcent imatge es presenta una proposta de p\u00e0gina web.</p> <p>Tradueix-la a llenguatge de marcatge seguint les indicacions del dibuix.</p> <p>Inclou tamb\u00e9 una \u00e0ncora al final del document que permeti portar el visitant web a la cap\u00e7alera del document.</p> <p>Encara no fem servir etiquetes HTML5, ho farem en un exercici posterior que consistir\u00e0 a actualitzar aquest actual a les noves etiquetes. Per exemple, en comptes de l'etiqueta <code>&lt;header&gt;</code> farem servir <code>&lt;div id=\"head\"&gt;</code>.</p> <p> Enunciat exercici capes HTML</p> <p>Per a m\u00e9s claredat, si ho desitges, afegeix dins del <code>&lt;head&gt;</code> el seg\u00fcent codi que entendr\u00e0s millor quan es doni CSS.</p> <pre><code>&lt;style&gt;\n  div{\n   border:1px solid #000000;\n   padding:5px 10px;\n  }\n&lt;/style&gt;\n</code></pre> <p>El resultat final ser\u00e0 semblant a la imatge seg\u00fcent:</p> <p> Resultat final capes HTML</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#estructura-dun-document-web","title":"Estructura d'un document web","text":"<p>Es mostra un mockup de proposta de p\u00e0gina web.</p> <p>{:.question} Investiga que \u00e9s un mockup.</p> <p>Tradu\u00efu-la a llenguatge de marcatge agrupant i estructurant les etiquetes en grups d'informaci\u00f3 segons criteri.</p> <p>Si al mockup consideres que falta alguna etiqueta o informaci\u00f3 molt important afegeix-la a la soluci\u00f3.</p> <p>VIUS! La soluci\u00f3 no \u00e9s \u00fanica.</p> <p>Encara no fem servir etiquetes HTML5, ho farem en un exercici posterior que consistir\u00e0 a actualitzar aquest actual a les noves etiquetes. Per exemple, en comptes de l'etiqueta <code>&lt;header&gt;</code> farem servir <code>&lt;div id=\"head\"&gt;</code>.</p> <p> Croquis realitzat mitjan\u00e7ant Balsamiq</p> <p>Per a m\u00e9s claredat, si ho desitges, afegeix dins del <code>&lt;head&gt;</code> el seg\u00fcent codi.</p> <pre><code>&lt;style&gt;\n  div{\n   border:1px solid #000000;\n   padding:5px 10px;\n  }\n&lt;/style&gt;\n</code></pre> <p>{:.question} Es podria posar l'element <code>&lt;style&gt;</code> en una altra banda? Per qu\u00e8 s'indica afegir-lo al <code>&lt;head&gt;</code>?</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#de-xhtml-a-html5-i","title":"De XHTML a HTML5 I","text":"<p>Tradueix el codi seg\u00fcent a HTML5:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;title&gt;Capas web&lt;/title&gt;\n &lt;meta charset=\"utf-8\"/&gt;\n &lt;meta name=\"description\" content=\"Ejemplo de documento HTML con capas como paso intermedio a transformar &lt;div&gt; en etiquetas de HTML5\"/&gt;\n\n &lt;style&gt;\n  div{\n   border:1px solid #000000;\n   padding:5px 10px;\n  }\n &lt;/style&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"wrapper\"&gt;\n &lt;!-- cabecera --&gt;\n &lt;div id=\"header\"&gt;\n  &lt;img src=\"\" alt=\"logotipo\"/&gt;\n  &lt;a href=\"tel:977207030\" title=\"Ll\u00e1menos\"&gt;977207030&lt;/a&gt;\n  &lt;!-- Men\u00fa de navegaci\u00f3n --&gt;\n  &lt;div id=\"nav\"&gt;\n   &lt;ul&gt;\n    &lt;li&gt;&lt;a href=\"\"&gt;Servicios&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"\"&gt;Blog&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"\"&gt;Contacto&lt;/a&gt;&lt;/li&gt;   \n   &lt;/ul&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- cuerpo principal del documento --&gt;\n &lt;div id=\"container\"&gt;\n  &lt;div id=\"main\"&gt;\n   &lt;div  id=\"section1\"&gt;\n    &lt;h1&gt;Un t\u00edtulo muy representativo&lt;/h1&gt;\n    &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n\n    &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n   &lt;/div&gt;\n\n   &lt;div  id=\"section2\"&gt;   \n    &lt;video controls src=\"\"&gt;&lt;/video&gt;\n    &lt;!-- contenido --&gt;\n    &lt;div id=\"article1\"&gt;\n     &lt;h2&gt;Un t\u00edtulo 2&lt;/h2&gt;\n     &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n     &lt;a href=\"\" title=\"ir a...\"&gt;Saber m\u00e1s&lt;/a&gt;\n    &lt;/div&gt;\n   &lt;/div&gt;\n\n   &lt;div  id=\"section3\"&gt;\n    &lt;!-- contenido --&gt;\n    &lt;div id=\"article2\"&gt;\n     &lt;h2&gt;Un t\u00edtulo 2&lt;/h2&gt;\n     &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n     &lt;a href=\"\" title=\"ir a...\"&gt;Saber m\u00e1s&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;audio controls src=\"\"&gt;&lt;/audio&gt;\n   &lt;/div&gt;     \n  &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- pie de p\u00e1gina --&gt;\n &lt;div id=\"footer\"&gt;\n  &lt;div id=\"section4\"&gt;\n   &lt;h3&gt;Sobre m\u00ed&lt;/h3&gt;\n   &lt;p&gt;Lorem fistrum ese que llega est\u00e1 la cosa muy malar te va a has\u00e9 pupitaa hasta luego Lucas a peich a wan.&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div id=\"section5\"&gt;\n   &lt;h3&gt;Horarios&lt;/h3&gt;\n   &lt;p&gt;Ma\u00f1anas:9.00-14.00&lt;br/&gt;Tardes:16.00-19.00&lt;br/&gt;Domingo cerrado.&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div id=\"section6\"&gt;\n   &lt;img src=\"\" alt=\"ISO9001\"/&gt;\n   &lt;img src=\"\" alt=\"ISO14001\"/&gt;\n  &lt;/div&gt;\n &lt;/div&gt;\n\n &lt;!-- ancla --&gt;\n &lt;a href=\"#header\"&gt;Subir&lt;/a&gt;\n&lt;/div&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> <p>{:.question} Per qu\u00e8 \u00e9s important fer servir les etiquetes sem\u00e0ntiques d'HTML5?</p> <p>{:.question} Qu\u00e8 \u00e9s el SEO i qu\u00e8 t\u00e9 a veure amb les etiquetes sem\u00e0ntiques?</p> <p>{:.activity}</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_HTML_draft.html#creacio-de-formularis_3","title":"Creaci\u00f3 de formularis","text":"<p>Escriviu l'HTML d'un formulari web segons les especificacions descrites a continuaci\u00f3:</p> <p>En aquest exercici no se't demana que escriguis css {:.prompt-warning}</p> <ul> <li>Nom. El camp ha d'acceptar fins a 30 car\u00e0cters.</li> <li>Cognoms. El camp ha d'acceptar fins a 30 car\u00e0cters.</li> <li>Email. Camp de farciment obligat.</li> <li>Assumpte a triar una opci\u00f3 entre demanar pressupost, sol\u00b7licitar cita pr\u00e8via, altres. S'han de mostrar les 3 opcions en un caixet\u00ed segons la imatge (usa l'atribut <code>size</code>).</li> <li>Com ens ha triat a triar una o m\u00e9s opcions entre un amic, googlejant, spam, altres.</li> <li>Un missatge. Heu de tenir una longitud m\u00e0xima de 300 car\u00e0cters.</li> <li>Acceptaci\u00f3 de cl\u00e0usula RGPD. De selecci\u00f3 obligada abans d'enviar el curr\u00edculum.</li> <li>Bot\u00f3 d'enviament.</li> </ul> <p> Resultat final del formulari</p> <p>Amb l'inspector de codi del navegador (F12) podeu arribar a observar quines dades s'estarien enviant al servidor. Intenta esbrinar com.</p>","tags":["desenvolupament d'aplicacions multiplataforma","llenguatges de marques i sistemes de gesti\u00f3 de informaci\u00f3","administraci\u00f3 de sistemes inform\u00e0tics de xarxa","desenvolupament d'aplicacions web","dam","daw","asir","lmsgi","pr\u00e0ctica","tasca","sistemes microinform\u00e0tics i xarxes"]},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_W3Schools.html","title":"Tasca: HTML a W3Schools","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_W3Schools.html#objectiu-i-durada","title":"Objectiu i durada","text":"<p>L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre a escriure HTML de forma correcta.</p> <p>Durada: 4 h</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_W3Schools.html#lliurament-i-presentacio","title":"Lliurament i presentaci\u00f3","text":"<p>El lliurament ser\u00e0 en format HTML+PDF+ZIP.</p> Com lliurar la tasca al Classroom <p>Creareu una p\u00e0gina web b\u00e0sica que inclogui les captures que evidenci\u00efn que has fet el tutorial,  juntament amb el teu nom i la data i hora de quan ho has acabat.</p> <p>A continuaci\u00f3, una vegada acabada la p\u00e0gina, la imprimireu creant un pdf (Imprimeix -&gt; Desa com a pdf)</p> <p>Finalment creareu un zip que contengui les captures .jpg, la pagina .html i el pdf .pdf i has de seguir la seg\u00fcent nomenclatura:</p> <p> <code>&lt;nom_codificat&gt;&lt;codi_tasca_del_classroom&gt;_&lt;nombre_fitxer&gt;.zip</code></p> <p>Per exemple: tverderagPO01_00.zip que contindria aquests fitxers i noms:</p> <p> tverderagPO01_01.jpg // captura 1</p> <p> tverderagPO01_02.jpg // captura 2</p> <p>... i aix\u00ed successivament per la resta de captures</p> <p> tverderagPO01_03.pdf // impressi\u00f3 en pdf</p> <p> tverderagPO01_04.html // fitxer que cont\u00e9 la p\u00e0gina</p> <p>Sempre que ho considereu oport\u00fa, me podeu afegir un fitxer de text pla amb el nom <code>llegeix.me</code> on me detalleu que \u00e9s el que m'estau entregant i en quin nom (sempre seguint l'est\u00e0ndar que acabam de posar)</p> Com saber el meu nom_codificat <p>L'usuari que has d'usar sempre en les tasques ha de complir el format seg\u00fcent:</p> <ul> <li>La inicial del teu primer nom.</li> <li>El teu primer cognom.</li> <li>La inicial del teu segon cognom si en tens.</li> </ul> <p>Suposem en Tofol Gabriel Verdera Grimalt el seu usuari ser\u00e0: tverderag.</p> <p>En totes les tasques, cada cop que es faci menci\u00f3 a <code>&lt;nom_codificat&gt;</code> haur\u00e0s de substituir-lo pel teu usuari.</p> <p>Sempre que sigui possible haureu d'usar el vostre nom d'usuari de manera que no hi hagi cap dubte sobre l'autoria de les tasques.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_W3Schools.html#qualificacio","title":"Qualificaci\u00f3","text":"<p>La tasca es qualificar\u00e0 com a apte o no apte.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_W3Schools.html#activitats","title":"Activitats","text":"<p>Compte! Si tradu\u00efu els exercicis amb el traductor de Google \u00e9s probable que doni problemes en comprovar les teves solucions.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_W3Schools.html#crear-compte","title":"Crear compte","text":"<p>Crea un compte amb el correu de l'escola a W3Schools i assegura't de fer login abans de comen\u00e7ar amb la seg\u00fcent activitat.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_W3Schools.html#captura-perfil-buit","title":"Captura perfil buit","text":"<p>Anar a l'apartat My learning i fes una captura de pantalla amb el perfil buit.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_W3Schools.html#captura-perfil-amb-la-tasca","title":"Captura perfil amb la tasca","text":"<p>Realitza els exercicis de aquest enlla\u00e7.</p> <p>Assegura't que se t'afegeixen en el teu apartat de \"My learning\" quan portis dos o tres exercicis fets.</p> <p>Fes una o diverses captures quan completis els 88 exercicis, de manera que quedi demostrat que amb el teu compte has realitzat tots els exercicis i tens l'estrella corresponent. Una cosa com el que es mostra a continuaci\u00f3. Indica l'enlla\u00e7 del teu perfil p\u00fablic.</p> <p> Exercicis HTML finalitzats</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_W3Schools.html#voluntaria-questionari","title":"(Volunt\u00e0ria) Q\u00fcestionari","text":"<p>Despr\u00e9s de la realitzaci\u00f3 dels exercicis est\u00e0s preparat per realitzar el HTML Quiz on pots posar a prova els teus nous coneixements.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_freeCodeCamp.html","title":"practica html freeCodeCamp","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_freeCodeCamp.html#objectiu-i-durada","title":"Objectiu i durada","text":"<p>L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre a escriure HTML de forma correcta..</p> <p>Durada: 4 h aprox.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_freeCodeCamp.html#lliurament-i-presentacio","title":"Lliurament i presentaci\u00f3","text":"<p>El lliurament ser\u00e0 en format PDF. Seguint les instruccions ja esmentades.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_freeCodeCamp.html#qualificacio","title":"Qualificaci\u00f3","text":"<p>La tasca es qualificar\u00e0 com a apte o no apte.</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_freeCodeCamp.html#activitats","title":"Activitats","text":"<p>Crea un compte amb el correu de l'escola a freeCodeCamp i assegura't de fer login abans de comen\u00e7ar amb la seg\u00fcent activitat.</p> <p>A Configuraci\u00f3 del compte afegeix les dades corresponents a \"Nom\", \"Ubicaci\u00f3\" i \"Sobre mi\" de manera similar a com he fet jo. Posteriorment haur\u00e0s de desar els canvis.</p> <p></p> <p>A m\u00e9s, haureu de posar totes les opcions en p\u00fablic i desar els canvis.</p> <p></p> <p>Feu l'apartat \"Apr\u00e8n HTML construint una aplicaci\u00f3 de fotos de moixos\" del curs Disseny Web Responsiu.</p> <p>Una vegada acabat, fes una captura del teu perfil p\u00fablic i indica l'enlla\u00e7 del teu perfil.</p> Recomanaci\u00f3 <p>T'anim a intentar fer-ho en angl\u00e8s ja que aix\u00ed aprendr\u00e0s HTML i angl\u00e8s alhora!</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_freeCodeCamp.html#crear-compte","title":"Crear compte","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_freeCodeCamp.html#fer-public-tot-el-teu-perfil","title":"Fer p\u00fablic tot el teu perfil","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/practica_html_freeCodeCamp.html#fer-el-curs-disseny-web-responsiu","title":"Fer el curs Disseny Web Responsiu","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucio_formulari1.html","title":"Solucio formulari1","text":"<p>Soluci\u00f3n:</p> <pre><code>&lt;form&gt;\n&lt;fieldset&gt;\n  &lt;legend&gt;Rellenar&lt;/legend&gt;\n  &lt;input type='radio' name='idioma' value='idiomaingles'&gt; Ingl\u00e9s   &lt;br/&gt;\n  &lt;input type='radio' name='idioma' value='idiomaaleman'&gt; Alem\u00e1n   &lt;br/&gt;\n  &lt;input type='radio' name='idioma' value='idiomafrances'&gt; Franc\u00e9s   &lt;br/&gt;\n  &lt;br/&gt;\n  &lt;select name='conector' &gt;\n    &lt;option value='usb'&gt;USB&lt;/option&gt;\n    &lt;option value='paralelo'&gt;Paralelo&lt;/option&gt;\n    &lt;option value='ps2'&gt;PS2&lt;/option&gt;\n  &lt;/select&gt;\n  &lt;br/&gt;\n  Nombre&lt;input type='text' name='nombre'&gt; &lt;br/&gt;\n  Apellidos&lt;input type='text' name='apellidos'&gt; &lt;br/&gt;\n  &lt;br/&gt;\n&lt;/fieldset&gt;\n&lt;fieldset&gt;\n  &lt;legend&gt;Indique sus preferencias por favor&lt;/legend&gt;\n  &lt;select name='sexo' multiple='multiple'&gt;\n    &lt;option value='hombre'&gt;Hombre&lt;/option&gt;\n    &lt;option value='mujer'&gt;Mujer&lt;/option&gt;\n  &lt;/select&gt;\n  &lt;br/&gt;\n  &lt;input type='checkbox' name='sexo' value='sexomujer'&gt; Mujer   &lt;br/&gt;\n  &lt;input type='checkbox' name='sexo' value='sexohombre'&gt; Hombre   &lt;br/&gt;\n  &lt;br/&gt;\n  Elija una fecha:&lt;input type=\"date\"&gt;  &lt;br/&gt;\n&lt;/fieldset&gt;\n&lt;/form&gt;\n</code></pre> Rellenar  Ingl\u00e9s     Alem\u00e1n     Franc\u00e9s    USB Paralelo PS2    Nombre    Apellidos Indique sus preferencias por favor Hombre Mujer  Mujer     Hombre       Elija una fecha:"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html","title":"Solucions exercicis tipus examen","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#solucions-exercicis-tipus-examen","title":"Solucions Exercicis tipus examen","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#enunciat","title":"Enunciat","text":"<p>Crea una tabla con la estructura siguiente</p> <p></p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#solucio","title":"Soluci\u00f3","text":"<p>El siguiente HTML produce algo muy parecido: <pre><code>&lt;table border=\"1\"&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Celda 1&lt;/td&gt;\n        &lt;td&gt;Celda 2&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\n            &lt;table border=\"1\"&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;Celda 3a&lt;/td&gt;\n                    &lt;td&gt;Celda 3b&lt;/td&gt;\n                    &lt;td&gt;Celda 3c&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/td&gt;\n        &lt;td&gt;\n            &lt;table border=\"1\"&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;Celda 4a&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;Celda 4b&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;Celda 4c&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/table&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre> Mostra soluci\u00f3:</p> Celda 1 Celda 2 Celda 3a Celda 3b Celda 3c Celda 4a Celda 4b Celda 4c"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#enunciat_1","title":"Enunciat","text":"<p>Crea una p\u00e1gina HTML que produzca este resultado</p> <p></p> <p>Una tabla compleja</p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#solucio_1","title":"Soluci\u00f3","text":"<p>El HTML siguiente produce el resultado pedido: <pre><code>&lt;table border=\"1\"&gt;  \n&lt;tr&gt;&lt;!--Primera fila--&gt;  \n&lt;td&gt;  \n&lt;table border=\"1\"&gt;  \n&lt;tr&gt;  \n&lt;td&gt;1a&lt;/td&gt;  \n&lt;td&gt;1b&lt;/td&gt;  \n&lt;/tr&gt;  \n&lt;/table&gt;  \n&lt;/td&gt;  \n&lt;td&gt;  \n&lt;table border=\"1\"&gt;  \n&lt;tr&gt;  \n&lt;td&gt;2a&lt;/td&gt;  \n&lt;td&gt;2b&lt;/td&gt;  \n&lt;/tr&gt;  \n&lt;tr&gt;  \n&lt;td&gt;2c&lt;/td&gt;  \n&lt;td&gt;2c&lt;/td&gt;  \n&lt;/tr&gt;  \n&lt;/table&gt;  \n&lt;/td&gt;  \n&lt;/tr&gt;  \n&lt;tr&gt;&lt;!--Segunda fila--&gt;  \n&lt;td&gt;  \n`3a`  \n&lt;/td&gt;  \n&lt;td&gt;  \n&lt;table border=\"1\"&gt;  \n&lt;tr&gt;  \n&lt;td&gt;4a1&lt;/td&gt;  \n&lt;td&gt;4a2&lt;/td&gt;  \n&lt;td&gt;4a3&lt;/td&gt;  \n&lt;/tr&gt;  \n&lt;/table&gt;  \n&lt;/td&gt;  \n&lt;/tr&gt;  \n&lt;tr&gt; &lt;!--Tercera fila--&gt;  \n&lt;td&gt;  \n&lt;table border=\"1\"&gt;  \n&lt;tr&gt;  \n&lt;td&gt;3b1&lt;/td&gt;  \n&lt;td&gt;3b2&lt;/td&gt;  \n&lt;/tr&gt;  \n&lt;tr&gt;  \n&lt;td&gt;3b3&lt;/td&gt;  \n&lt;td&gt;3b4&lt;/td&gt;  \n&lt;/tr&gt;  \n&lt;/table&gt;  \n&lt;/td&gt;  \n&lt;td&gt;  \n`4b`  \n&lt;/td&gt;  \n&lt;/tr&gt;  \n&lt;/table&gt;\n</code></pre> Mostra de la soluci\u00f3:</p> 1a 1b 2a 2b 2c 2c    `3a`    4a1 4a2 4a3 3b1 3b2 3b3 3b4    4b"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#enunciat_2","title":"Enunciat","text":"<p>Crea una p\u00e1gina HTML que produzca este resultado </p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#solucio_2","title":"Soluci\u00f3","text":""},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#enunciat_3","title":"Enunciat","text":"<p>Crea un formulario como este donde haya 3 opciones en la lista desplegable: \u00abM\u00e1s de 400\u00bb, \u00abMenos de 400\u00bb, \u00abVariables\u00bb </p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#solucio_3","title":"Soluci\u00f3","text":"<p>El HTML siguiente produce el resultado que nos piden <pre><code>&lt;!DOCTYPE html&gt;  \n&lt;html&gt;  \n&lt;head&gt;  \n&lt;meta charset=\"utf-8\"&gt;  \n&lt;title&gt;Formulario fiscal&lt;/title&gt;  \n&lt;/head&gt;  \n&lt;body&gt;\n\n&lt;form&gt;  \n&lt;fieldset&gt;  \n&lt;legend&gt;  \nDatos fiscales  \n&lt;/legend&gt;  \n&lt;input type=\"checkbox\" id=\"enparo\"  \nname=\"sit_laboral\"&gt;  \n&lt;label for=\"enparo\"&gt;En paro&lt;/label&gt;  \n&lt;br/&gt;  \n&lt;input type=\"checkbox\" id=\"autonomo\"  \nname=\"sit_laboral\"&gt;  \n&lt;label for=\"autonomo\"&gt;Aut\u00f3nomo&lt;/label&gt;  \n&lt;br/&gt;  \n&lt;input type=\"checkbox\" id=\"c_ajena\"  \nname=\"sit_laboral\"&gt;  \n&lt;label for=\"c_ajena\"&gt;Por c.ajena&lt;/label&gt;  \n&lt;br/&gt;  \n&lt;/fieldset&gt;  \n&lt;fieldset&gt;  \n&lt;legend&gt;Datos personales&lt;/legend&gt;  \n&lt;label for=\"nombre\"&gt;Nombre&lt;/label&gt;  \n&lt;input type=\"text\" id=\"nombre\"&gt;  \n&lt;br/&gt;  \n&lt;label for=\"apellidos\"&gt;Apellidos&lt;/label&gt;  \n&lt;input type=\"text\" id=\"apellidos\"&gt;  \n&lt;br/&gt;  \n&lt;label for=\"sueldo\"&gt;Sueldo&lt;/label&gt;  \n&lt;select id=\"sueldo\"&gt;&lt;/select&gt;  \n&lt;option&gt;M\u00e1s de 400 euros&lt;/option&gt;  \n&lt;option&gt;Menos de 400 euros&lt;/option&gt;  \n&lt;option&gt;Variable&lt;/option&gt;  \n&lt;/select&gt;  \n&lt;br/&gt;  \n&lt;input type=\"checkbox\" id=\"con_ep\"&gt;  \n&lt;label for=\"con_ep\"&gt;  \nCon enfermedad profesional  \n&lt;/label&gt; &lt;br/&gt;  \n&lt;input type=\"checkbox\" id=\"con_padres\"&gt;  \n&lt;label for=\"con_padres\"&gt;  \nCon padres a cargo  \n&lt;/label&gt; &lt;br/&gt;  \n&lt;input type=\"checkbox\" id=\"con_hijos\"&gt;  \n&lt;label for=\"con_hijos\"&gt;  \nCon hijos a cargo  \n&lt;/label&gt; &lt;br/&gt;  \n&lt;/fieldset&gt;     \n&lt;/form&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;\n</code></pre> Mostra de la soluci\u00f3:</p> Formulario fiscal    Datos fiscales    En paro Aut\u00f3nomo Por c.ajena Datos personales Nombre Apellidos Sueldo M\u00e1s de 400 euros Menos de 400 euros Variable    Con enfermedad profesional       Con padres a cargo       Con hijos a cargo"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#enunciat_4","title":"Enunciat","text":"<p>Crea un formulario como este </p> <p><pre><code>&lt;!DOCTYPE html&gt;  \n&lt;html&gt;  \n&lt;head&gt;  \n&lt;meta charset=\"utf-8\"&gt;  \n&lt;title&gt;Formulario&lt;/title&gt;  \n&lt;/head&gt;  \n&lt;body&gt;  \n&lt;form&gt;  \n&lt;fieldset&gt;  \n&lt;legend&gt;Datos fiscales&lt;/legend&gt;  \n&lt;select multiple=\"multiple\"&gt;  \n&lt;option&gt;Automoci\u00f3n&lt;/option&gt;  \n&lt;option selected=\"selected\"&gt;  \nMetal  \n&lt;/option&gt;  \n&lt;option&gt;Inform\u00e1tica&lt;/option&gt;  \n&lt;option selected=\"selected\"&gt;  \nFinanzas  \n&lt;/option&gt;  \n&lt;/select&gt;  \n&lt;br/&gt;  \n&lt;input type=\"checkbox\" id=\"autonomo\"&gt;  \n&lt;label for=\"autonomo\"&gt;  \nAut\u00f3nomo  \n&lt;/label&gt;  \n&lt;input type=\"checkbox\" id=\"c_ajena\"&gt;  \n&lt;label for=\"c_ajena\"&gt;  \nPor c. ajena  \n&lt;/label&gt;  \n&lt;input type=\"checkbox\" id=\"nosabe\"&gt;  \n&lt;label for=\"nosabe\"&gt;  \nNo sabe  \n&lt;/label&gt;  \n&lt;br/&gt;  \nDescriba su funci\u00f3n:&lt;br/&gt;  \n&lt;textarea&gt;Escriba aqu\u00ed&lt;/textarea&gt;  \n&lt;/fieldset&gt;  \n&lt;/form&gt;\n\n&lt;/body&gt;  \n&lt;/html&gt;\n</code></pre> Mostra de la soluci\u00f3:</p> Formulario Datos fiscales Automoci\u00f3n    Metal    Inform\u00e1tica    Finanzas       Aut\u00f3nomo       Por c. ajena       No sabe       Describa su funci\u00f3n: Escriba aqu\u00ed"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#enunciat_5","title":"Enunciat","text":"<p>Crea un formulario como este </p>"},{"location":"Moduls/ARXIU/2425/AW/exercicisisolucions/solucions_exercicis_tipus_examen.html#solucio_4","title":"Soluci\u00f3","text":"<p><pre><code>&lt;form&gt;  \n&lt;fieldset&gt;  \n&lt;legend&gt;  \nLaboral  \n&lt;/legend&gt;  \n&lt;input type=\"checkbox\" name=\"contratos[]\"  \nid=\"ajena\"&gt;  \nPor cuenta ajena  \n&lt;input type=\"checkbox\"  \nname=\"contratos[]\"  \nid=\"autonomo\"&gt;  \nAut\u00f3nomo  \n&lt;br/&gt;  \n\u00bfAlguna vez en el extranjero?  \n&lt;br/&gt;  \n&lt;input type=\"radio\"  \nname=\"en_extranjero\"  \nid=\"si_en_extranjero\"&gt;  \nS\u00ed\n\n                &lt;select name=\"lugar\"&gt;  \n                        &lt;option id=\"en_ue\"&gt;  \n                                Dentro de la UE  \n                        &lt;/option&gt;  \n                        &lt;option id=\"en_asia\"&gt;  \n                                En Asia  \n                        &lt;/option&gt;  \n                        &lt;option id=\"en_hispanoamerica\"&gt;  \n                                En Hispanoam\u00e9rica  \n                        &lt;/option&gt;  \n                        &lt;option id=\"en_eeuu\"&gt;  \n                                En EE.UU  \n                        &lt;/option&gt;  \n                        &lt;option id=\"en_otro\"&gt;  \n                                En otro  \n                        &lt;/option&gt;  \n                &lt;/select&gt;  \n                &lt;br/&gt;  \n                &lt;input type=\"radio\"  \n                           name=\"en_extranjero\"  \n                           id=\"no_en_extranjero\"&gt;  \n                No  \n        &lt;/fieldset&gt;  \n        &lt;fieldset&gt;  \n                &lt;legend&gt;  \n                        Personal  \n                &lt;/legend&gt;  \n                Apellidos y nombre:  \n                &lt;input type=\"text\"  \n                           id=\"ap_nombre\"&gt;  \n                &lt;br/&gt;  \n                Conocimientos sobre:&lt;br/&gt;  \n                &lt;select name=\"cono\" multiple&gt;  \n                        &lt;option id=\"informatica\"&gt;  \n                                Inform\u00e1tica  \n                        &lt;/option&gt;  \n                        &lt;option id=\"conduccion\"&gt;  \n                                Conducci\u00f3n  \n                        &lt;/option&gt;  \n                        &lt;option id=\"finanzas\"&gt;  \n                                Finanzas  \n                        &lt;/option&gt;  \n                        &lt;option id=\"leyes\"&gt;  \n                                Leyes  \n                        &lt;/option&gt;  \n                &lt;/select&gt;  \n        &lt;/fieldset&gt;\n\n&lt;/form&gt;\n</code></pre> Mostra de la soluci\u00f3:</p>    Laboral       Por cuenta ajena      Aut\u00f3nomo      \u00bfAlguna vez en el extranjero?       S\u00ed                                                      Dentro de la UE                                                               En Asia                                                               En Hispanoam\u00e9rica                                                               En EE.UU                                                               En otro                                               No                                       Personal                                      Apellidos y nombre:                                       Conocimientos sobre:                                    Inform\u00e1tica                                                               Conducci\u00f3n                                                               Finanzas                                                               Leyes"},{"location":"Moduls/ARXIU/2425/DWEC/UT03Diapositives.html","title":"Presentaci\u00f3 diapositives UT03","text":""},{"location":"Moduls/ARXIU/2425/DWEC/UT03Diapositives.html#utilitzacio-dels-objectes-predefinits-del-llenguatge","title":"Utilitzaci\u00f3 dels objectes predefinits del llenguatge","text":"Aquest \u00e9s un presentaci\u00f3 de Microsoft Office incrustat, amb tecnologia de Office."},{"location":"Moduls/ARXIU/2425/DWEC/UT03FuncionsJavascript.html","title":"Funcions a JavaScript","text":""},{"location":"Moduls/ARXIU/2425/DWEC/UT03FuncionsJavascript.html#introduccio","title":"Introducci\u00f3","text":"<p>Les funcions s\u00f3n blocs fonamentals de codi a JavaScript. Permeten agrupar i reutilitzar codi, i s\u00f3n essencials per a la programaci\u00f3 modular, estructurada i funcional.</p> <p>Amplia informaci\u00f3</p> <p>Llegeix l'article Qu\u00e8 \u00e9s una funci\u00f3?.</p> \u00c9s el mateix un par\u00e0metre que un argument? <p>En JavaScript, els termes \"par\u00e0metre\" i \"argument\" sovint es confonen, per\u00f2 tenen significats diferents:</p> <ul> <li> <p>Par\u00e0metre: \u00c9s una variable que es defineix en la declaraci\u00f3 d'una funci\u00f3. Serveix com a marcador de posici\u00f3 per als valors que la funci\u00f3 rebr\u00e0 quan sigui cridada. Per exemple, en la funci\u00f3 seg\u00fcent, <code>x</code> i <code>y</code> s\u00f3n par\u00e0metres:   <pre><code>function suma(x, y) {\n    return x + y;\n}\n</code></pre></p> </li> <li> <p>Argument: \u00c9s el valor real que es passa a la funci\u00f3 quan aquesta \u00e9s cridada. Els arguments substitueixen els par\u00e0metres definits en la funci\u00f3. Per exemple, en la crida seg\u00fcent, <code>5</code> i <code>3</code> s\u00f3n arguments:     <pre><code>let resultat = suma(5, 3);\n</code></pre></p> </li> </ul> <p>En resum, els par\u00e0metres s\u00f3n les variables en la definici\u00f3 de la funci\u00f3, mentre que els arguments s\u00f3n els valors que es passen a la funci\u00f3 quan es crida. Espero que aix\u00f2 aclareixi la difer\u00e8ncia! Si tens m\u00e9s preguntes, no dubtis a preguntar.</p> Qu\u00e8 \u00e9s una funci\u00f3? <p>Les funcions ens permeten agrupar l\u00ednies de codi en tasques amb un nom, perqu\u00e8 posteriorment puguem fer refer\u00e8ncia a aquest nom per realitzar tot el que s'agrupi en aquesta tasca.</p> \u00c9s el mateix declarar una funci\u00f3 que executar una funci\u00f3? <p>No.</p> <p>Qu\u00e8 \u00e9s un par\u00e0metre/arguments?</p> <p>Pot tenir una funci\u00f3 m\u00faltiples par\u00e0metres? Quin \u00e9s el l\u00edmit?</p> <p>Hi ha els par\u00e0metres per defecte?</p> <p>En qu\u00e8 consisteix la devoluci\u00f3 o el retorn de valors? Totes les funcions tornen alguna cosa?</p>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03FuncionsJavascript.html#parametres-duna-funcio","title":"Par\u00e0metres d'una funci\u00f3","text":"<p>Una caracter\u00edstica notable de JavaScript \u00e9s que no d\u00f3na error si crides a una funci\u00f3 amb m\u00e9s arguments dels que espera. Els arguments addicionals simplement s\u00f3n ignorats.</p> <pre><code>function saludar(nom) {\n\n    console.log(\"Hola, \" + nom);\n\n}\n\nsaludar(\"Joan\", \"extra\"); // \"Hola, Joan\"\n</code></pre> <pre><code>Hola, Joan\n</code></pre> <p>L'ordre dels arguments \u00e9s crucial. Els arguments s'assignen als par\u00e0metres a l'ordre en qu\u00e8 es passen.</p> <p>Javascript, a les funcions, crea un objecte anomenant arguments que t\u00e9 els arguments passats, la posici\u00f3 com a clau i la quantitat d'arguments amb length.</p> <pre><code>function a(){ console.log (arguments)}\n\na(1,2,3);\n</code></pre> <pre><code>[Arguments] { \"0\": 1, \"1\": 2, \"2\": 3 }\n</code></pre> <p>Amplia informaci\u00f3</p> <p>Llegeix l'article Par\u00e0metres d'una funci\u00f3. </p> <p>Quantes maneres hi ha de declarar una funci\u00f3? Hi ha alguna no recomanada?</p> <p>Com executem una funci\u00f3 que no t\u00e9 nom?</p> Qu\u00e8 \u00e9s una funci\u00f3 an\u00f2nima? <p>Llegir apartat Funcions an\u00f2nimes de Funcions</p>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03FuncionsJavascript.html#return-en-funcions","title":"Return en funcions","text":"<p>Les funcions poden tenir un valor de retorn o no. Si no s'especifica un return, la funci\u00f3 torna undefined per defecte. Les funcions nom\u00e9s retornen un valor. Si volem retornar-ne m\u00e9s d'un els podem agrupar en arrays o objectes.</p> <p><pre><code>function senseRetorn() {\n\n    let missatge = \"Hola\";\n\n}\n\nfunction ambRetorn() {\n\n    let missatge = \"Hola\";\n\n    return missatge;\n\n}\n\nconsole.log(sinRetorno(),conRetorno());\n</code></pre> <pre><code>undefined Hola\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03FuncionsJavascript.html#invocacio-de-funcions","title":"Invocaci\u00f3 de funcions","text":"<p>En utilitzar par\u00e8ntesis <code>()</code>, invoques a la funci\u00f3. Sense par\u00e8ntesis, fas refer\u00e8ncia a l'objecte que representa la funci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03FuncionsJavascript.html#les-funcions-son-objectes","title":"Les funcions s\u00f3n objectes","text":"<p>A JavaScript, les funcions s\u00f3n objectes de primera classe. Aix\u00f2 significa que poden ser assignades a variables, passades com a arguments i tornades per altres funcions.</p> <p><pre><code>function multiplicar(x, y) {\n\n    return  x * y;\n\n}\n\nlet operacio =  multiplicar;\n\nconsole.log(operacio(2, 3)); // 6\n</code></pre> <pre><code>6\n</code></pre></p> <p>La capacitat de Javascript de tractar les funcions com a objectes us permet facilitar l'\u00fas de funcions de Callback i la programaci\u00f3 funcional, que veurem en el seu cap\u00edtol.</p> <p>Qu\u00e8 \u00e9s un callback?</p> Qu\u00e8 \u00e9s una funci\u00f3 autoexecutable? <p>Una funci\u00f3 autoexecutable \u00e9s una funci\u00f3 en JavaScript que es defineix i s'executa autom\u00e0ticament a l'hora de ser interpretada. La seva estructura caracter\u00edstica permet executar una funci\u00f3 immediatament sense necessitat de trucar-la expl\u00edcitament despr\u00e9s de la seva definici\u00f3.</p> <p>La sintaxi b\u00e0sica d'una funci\u00f3 autoexecutable \u00e9s la seg\u00fcent:</p> <p><pre><code>(function () {\n    // Codi de la funci\u00f3\n})();\n</code></pre> O b\u00e9: <pre><code>(() =&gt; {\n    // Codi de la funci\u00f3\n})();\n</code></pre> Exemple amb par\u00e0metres: <pre><code>(function(nom) {\n    console.log(`Hola, ${nom}!`);\n})(\"Joan\");\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03FuncionsJavascript.html#declaracio-de-funcions","title":"Declaraci\u00f3 de funcions","text":"<p>Les funcions poden ser declarades de manera expl\u00edcita. Aquest tipus de declaraci\u00f3 es carrega en temps de compilaci\u00f3, permetent-ne l'\u00fas abans de la declaraci\u00f3 (hoisting). <pre><code>console.log(suma(2, 3)); // 5\n\nfunction suma(a, b) {\nreturn a + b;\n}\n</code></pre> <pre><code>5\n</code></pre></p> <p>Les funcions tamb\u00e9 es poden definir mitjan\u00e7ant expressions. Aquest tipus de funci\u00f3 savalua en temps dexecuci\u00f3 i no suporta hoisting.</p> <p><pre><code>let restar = function(a, b) {\n  return a - b;\n};\n\nconsole.log(restar(5, 3)); // 2\n</code></pre> <pre><code>2\n</code></pre></p> <p>Les expressions de funci\u00f3 poden ser an\u00f2nimes, \u00e9s a dir, no tenir nom. Com que no tenen nom, no es poden invocar a si mateixes, per la qual cosa no es poden fer recursives. Si no tenen nom i s\u00f3n assignades a una variable amb una expressi\u00f3 de funci\u00f3, adquireixen el nom de la variable. Se solen utilitzar com a funcions de \u201cCallback\u201d, encara que no \u00e9s el m\u00e9s recomanable perqu\u00e8 despr\u00e9s compliquen la tra\u00e7abilitat dels errors. <pre><code>let dividir = function(a, b) {\n    return a / b;\n};\nconsole.log(dividir(10, 2)); // 5\n</code></pre> <pre><code>5\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03FuncionsJavascript.html#funcions-fletxa","title":"Funcions fletxa","text":"<p>Una arrow function \u00e9s una manera m\u00e9s abreujada/simplificada d'escriure funcions an\u00f2nimes. Aix\u00f2 les fa m\u00e9s complicades d'entendre fins que t'acostumes a fer servir. Aquestes s\u00f3n les seves principals caracter\u00edstiques:</p> <ul> <li>Sintaxi Concisa: No cal utilitzar la paraula clau function, return, ni utilitzar claus {} si la funci\u00f3 nom\u00e9s t\u00e9 una expressi\u00f3.</li> <li>Constants per Defecte: Es recomana declarar funcions fletxa utilitzant const en lloc de var o let, ja que un cop assignades, no poden ser reassignades a un altre valor.</li> <li>No tenen aquest propi: A difer\u00e8ncia de les funcions regulars, les funcions fletxa no tenen el seu propi context this. Al seu lloc, hereten el this del context en qu\u00e8 van ser creades.</li> <li>No s\u00f3n hoisted: les funcions fletxa no s\u00f3n elevades (hoisted) com les funcions tradicionals. Aix\u00f2 significa que no poden ser invocades abans de la seva declaraci\u00f3 al codi.</li> <li>\u00das de {} i return: Si la funci\u00f3 fletxa t\u00e9 m\u00e9s d'una l\u00ednia de codi o m\u00e9s d'una instrucci\u00f3, cal utilitzar claus {} i la paraula clau return expl\u00edcitament.</li> <li>No poden ser m\u00e8todes: Com que no tenen el seu propi this, no poden ser utilitzades com a m\u00e8todes en objectes.</li> </ul> <p>A continuaci\u00f3 us mostro com passar d'una funci\u00f3 an\u00f2nima a una funci\u00f3 fletxa:</p> <pre><code>// Funci\u00f3 tradicional\n\n(function (a){\n    return a + 100;\n});\n\n// Desglossament de la funci\u00f3 fletxa\n\n// 1. Elimina la paraula \"function\" i col\u00b7loca la fletxa entre l'argument i el claud\u00e0tor d'obertura.\n\n(a) =&gt; {\n    return a + 100;\n}\n\n// 2. Treu els claud\u00e0tors del cos i la paraula \"return\" \u2014 el return est\u00e0 impl\u00edcit.\n\n(a) =&gt; a + 100;\n\n// 3. Suprimeix els par\u00e8ntesis dels arguments\n\na =&gt; a + 100;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03FuncionsJavascript.html#bibliografia","title":"Bibliografia","text":"<ul> <li>Ministeri d'Educaci\u00f3 i Formaci\u00f3 Professional</li> <li>https://xxjcaxx.github.io/libro_dwec/desarrollofrontend.html</li> <li>Lloc web de Marcos Ruiz</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html","title":"Treball amb matrius en Javascript","text":"<p>Hi ha diversos m\u00e8todes d'array en JavaScript que poden ser molt \u00fatils per treballar amb arrays de manera eficient i clara. Aqu\u00ed tens alguns dels m\u00e9s comuns i \u00fatils:</p>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#1-map","title":"1. <code>map()</code>","text":"<p>Crea un nou array amb els resultats de cridar una funci\u00f3 per a cada element de l'array original.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst dobles = numeros.map(num =&gt; num * 2);\nconsole.log(dobles); // Sortida: [2, 4, 6, 8, 10]\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#2-filter","title":"2. <code>filter()</code>","text":"<p>Crea un nou array amb tots els elements que compleixen una condici\u00f3 especificada.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst parells = numeros.filter(num =&gt; num % 2 === 0);\nconsole.log(parells); // Sortida: [2, 4]\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#3-foreach","title":"3. <code>forEach()</code>","text":"<p>Executa una funci\u00f3 per a cada element de l'array. No retorna un nou array.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nnumeros.forEach(num =&gt; console.log(num * 2));\n// Sortida: 2, 4, 6, 8, 10 (cada n\u00famero en una l\u00ednia separada)\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#4-some","title":"4. <code>some()</code>","text":"<p>Comprova si almenys un element de l'array compleix una condici\u00f3 especificada. Retorna un boole\u00e0.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst hiHaParells = numeros.some(num =&gt; num % 2 === 0);\nconsole.log(hiHaParells); // Sortida: true\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#5-every","title":"5. <code>every()</code>","text":"<p>Comprova si tots els elements de l'array compleixen una condici\u00f3 especificada. Retorna un boole\u00e0.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst totsPositius = numeros.every(num =&gt; num &gt; 0);\nconsole.log(totsPositius); // Sortida: true\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#6-find","title":"6. <code>find()</code>","text":"<p>Retorna el primer element de l'array que compleix una condici\u00f3 especificada. Si no troba cap element, retorna <code>undefined</code>.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst primerParell = numeros.find(num =&gt; num % 2 === 0);\nconsole.log(primerParell); // Sortida: 2\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#7-findindex","title":"7. <code>findIndex()</code>","text":"<p>Retorna l'\u00edndex del primer element de l'array que compleix una condici\u00f3 especificada. Si no troba cap element, retorna <code>-1</code>.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst indexPrimerParell = numeros.findIndex(num =&gt; num % 2 === 0);\nconsole.log(indexPrimerParell); // Sortida: 1\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#8-sort","title":"8. <code>sort()</code>","text":"<p>Ordena els elements de l'array i retorna l'array ordenat. Per defecte, ordena els elements com a cadenes de text.</p> <pre><code>const numeros = [5, 3, 8, 1, 2];\nnumeros.sort((a, b) =&gt; a - b);\nconsole.log(numeros); // Sortida: [1, 2, 3, 5, 8]\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#9-concat","title":"9. <code>concat()</code>","text":"<p>Combina dos o m\u00e9s arrays i retorna un nou array.</p> <pre><code>const array1 = [1, 2, 3];\nconst array2 = [4, 5, 6];\nconst combinat = array1.concat(array2);\nconsole.log(combinat); // Sortida: [1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT03_Treball_amb_matrius.html#10-slice","title":"10. <code>slice()</code>","text":"<p>Retorna una c\u00f2pia superficial d'una porci\u00f3 de l'array en un nou array.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst part = numeros.slice(1, 3);\nconsole.log(part); // Sortida: [2, 3]\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/UT04Diapositives.html","title":"Presentaci\u00f3 diapositives UT04","text":""},{"location":"Moduls/ARXIU/2425/DWEC/UT04Diapositives.html#programacio-amb-matrius-funcions-i-objectes-definits-per-lusuari","title":"Programaci\u00f3 amb matrius, funcions i objectes definits per l'usuari","text":"Aquest \u00e9s un presentaci\u00f3 de Microsoft Office incrustat, amb tecnologia de Office."},{"location":"Moduls/ARXIU/2425/DWEC/_DWEC2425.html","title":"Desenvolupament web en entorn client - DAW","text":"<p>Dins del cicle de DAW, el segon curs t\u00e9 3 m\u00f2duls \u00edntimament relacionats i que, tots plegats, serveixen per fer una web completament. Tenim un m\u00f2dul per programar el servidor (backend): 'DWES', un per al client (frontend): 'DWEC' i un per a la interf\u00edcie d'usuari: 'DIW'. El m\u00f2dul DWEC, per tant, ha de suposar que hi ha un servidor funcionant correctament, aix\u00ed com el m\u00f2dul de DWES suposa que alg\u00fa far\u00e0 el frontend. A m\u00e9s, a DWEC no ens vam preocupar massa de la part est\u00e8tica, tot i que \u00e9s inevitable construir HTML i reaccionar a les accions de l'usuari. Per tant, aquest m\u00f2dul se centra en com recollir dades del servidor, mostrar-les i fer alguna cosa amb ells. At\u00e8s que aquest m\u00f2dul \u00e9s gaireb\u00e9 tot 'Javascript', la manera de tractar-lo m\u00e9s intensament i en tots els aspectes del frontend \u00e9s fer una 'SPA' (ja veurem qu\u00e8 \u00e9s aix\u00f2). \u00c9s important recalcar que vam veure un subconjunt molt petit de totes les maneres diferents que hi ha per enfocar un projecte de frontend i que no t\u00e9 perqu\u00e8 ser el millor en tots els casos. L' alumnat d' aquests cicles ha d' afegir a la seva rutina personal alguna manera d' estar al dia de les novetats del desenvolupament web. Per exemple, seguir la MDN en xarxes, /r/javascript a Reddit, Canals de Youtube, Hacker News, la W3C...</p> <p>Podem separar el curs en dos grans blocs amb els temes seg\u00fcents:</p> <ul> <li>Javascript \"vainilla\":</li> <li>Programaci\u00f3 Javascript per al frontend</li> <li>Testing</li> <li>Comunicaci\u00f3 amb el servidor<ul> <li>Promeses</li> <li>Fetch</li> </ul> </li> <li>Programaci\u00f3 moderna a Javascript<ul> <li>Vite</li> <li>CI/CD</li> <li>Desplegament</li> <li>Observables i programaci\u00f3 reactiva</li> <li>Programaci\u00f3 funcional</li> </ul> </li> <li>Frameworks</li> <li>Typescript</li> <li>Angular</li> <li>Components, rutes, serveis...</li> <li>Formularis</li> </ul> <p>At\u00e8s que tot est\u00e0 m\u00e9s ben documentat a les webs oficials de cada tecnologia, a MDN o W3CSchool i altres, no cal ser exhaustiu a cada secci\u00f3. Ens aturarem en les parts m\u00e9s interessants i representatives del frontend amb exemples pr\u00e0ctics i intentant sempre aplicar les millors pr\u00e0ctiques.</p> <p>Actualment hi ha poca gent que programi directament a Javascript \"Vanilla\". En un m\u00f2dul per a formaci\u00f3 professional ens podem preguntar si no seria millor ensenyar directament un framework. I tamb\u00e9 si no seria millor ensenyar el framework \"de moda\". Els motius per al fet d'explicar els fonaments a Javascript sense frameworks o moltes biblioteques i de seguir amb Angular han estat reflexionats amb altres professors i amb tutors a empreses. D'una banda hi ha el fet que cal con\u00e8ixer la base i no dependre d'una llibreria en concret. Per\u00f2 \u00e9s que l'\u00fas de frameworks, tot i ser massiu, tamb\u00e9 t\u00e9 la seva controv\u00e8rsia. Con\u00e8ixer els fonaments i les bones pr\u00e0ctiques \u00e9s millor que saber programar r\u00e0pidament una cosa comercial. Pel que fa al framework, Angular \u00e9s usat massivament per gent que no publicita la seva feina en xarxes socials. La majoria d'empreses de la zona l'utilitzen. A m\u00e9s, \u00e9s un framework totalment actualitzat a les metodologies modernes, que for\u00e7a a tenir una disciplina i con\u00e8ixer arquitectures, patrons de disseny i bones pr\u00e0ctiques.</p> <p>Desenvolupament frontend</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html","title":"Comunicaci\u00f3n con el servidor","text":""},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#ajax-en-javascript","title":"AJAX en JavaScript","text":"<p>Lectura recomendada: https://developer.mozilla.org/es/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data</p> <p>AJAX, acr\u00f3nimo de \"Asynchronous JavaScript and XML\", es un conjunto de tecnolog\u00edas que permite a las aplicaciones web enviar y recibir datos del servidor de manera as\u00edncrona, sin necesidad de recargar la p\u00e1gina completa. Esto mejora significativamente el rendimiento y la experiencia del usuario. No obstante tiene unos inconvenientes que tambi\u00e9n hay que mencionar. De esta manera, originalmente, AJAX se compone de: </p> <ol> <li>JavaScript: El lenguaje de programaci\u00f3n que controla la interacci\u00f3n y el comportamiento din\u00e1mico de la p\u00e1gina web.</li> <li>XHTML y CSS: Utilizados para estructurar y estilizar la p\u00e1gina web.</li> <li>XML o JSON: Formatos de datos que se env\u00edan y reciben desde el servidor.</li> <li>XMLHttpRequest: El objeto que permite a JavaScript realizar solicitudes HTTP de manera as\u00edncrona.</li> </ol> <p>Esta es la definici\u00f3n original de AJAX, no obstante, aunque se puede mantener el nombre a la metodolog\u00eda, algunas tecnolog\u00edas han mejorado. Ahora, en general, se usa <code>JSON</code> y en vez de <code>XMLHttpRequest</code> se usa <code>fetch</code>. </p> <p>Con AJAX, JavaScript puede enviar o solicitar datos en formato XML o JSON al servidor sin recargar la p\u00e1gina. El servidor responde a estas solicitudes, generalmente a trav\u00e9s de una API REST o similar. El cliente, usando JavaScript, procesa la respuesta y actualiza el contenido de la p\u00e1gina din\u00e1micamente.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#ejemplo-basico-de-ajax","title":"Ejemplo B\u00e1sico de AJAX","text":""},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#enviar-una-solicitud-ajax-con-xmlhttprequest","title":"Enviar una solicitud AJAX con <code>XMLHttpRequest</code>","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;AJAX Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;button id=\"loadData\"&gt;Load Data&lt;/button&gt;\n    &lt;div id=\"result\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n        document.getElementById('loadData').addEventListener('click', function() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', 'https://api.example.com/data', true);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {\n                    var data = JSON.parse(xhr.responseText);\n                    document.getElementById('result').innerText = data.message;\n                }\n            };\n            xhr.send();\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En este ejemplo, cuando se hace clic en el bot\u00f3n \"Load Data\", se env\u00eda una solicitud <code>GET</code> al servidor. La respuesta, que se espera est\u00e9 en formato JSON, se procesa y se muestra en el <code>div</code> con el ID \"result\".</p> <p>Este ejemplo se puede considerar anticuado, a partir de ES6 es mejor hacerlo con fetch y promesas. No obstante, es interesante analizar este c\u00f3digo y entender c\u00f3mo funciona. Adem\u00e1s, fetch no permite un control a tan bajo nivel de todas las etapas de una petici\u00f3n, por lo que sigue siendo necesario para hacer barras de progreso, cancelar peticiones... </p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#beneficios-de-ajax","title":"Beneficios de AJAX","text":"<ul> <li>Mejora del Rendimiento: Al no recargar la p\u00e1gina completa, solo se actualizan las partes necesarias, lo que resulta en una experiencia de usuario m\u00e1s r\u00e1pida y fluida.</li> <li>Experiencia de Usuario Mejorada: Las actualizaciones din\u00e1micas permiten una interacci\u00f3n m\u00e1s r\u00e1pida y eficiente.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#problemas-de-ajax","title":"Problemas de AJAX","text":"<ul> <li>SEO: Las p\u00e1ginas que utilizan AJAX pueden ser m\u00e1s dif\u00edciles de indexar por los motores de b\u00fasqueda, ya que gran parte del contenido se carga de manera din\u00e1mica.</li> <li>Complejidad en el Desarrollo: El desarrollo de aplicaciones AJAX puede ser m\u00e1s complicado debido a la necesidad de manejar las solicitudes as\u00edncronas y actualizar el DOM din\u00e1micamente.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#apis","title":"APIs","text":"<p>La comunicaci\u00f3n entre el cliente y el servidor en una aplicaci\u00f3n web puede llevarse a cabo de varias maneras. Dos enfoques comunes incluyen:</p> <ol> <li>Solicitudes de HTML: JavaScript puede solicitar un HTML est\u00e1tico o din\u00e1mico y luego insertar el resultado en la p\u00e1gina.</li> <li>Interacci\u00f3n con APIs: JavaScript puede enviar y recibir datos en formato XML o JSON a trav\u00e9s de una API.</li> </ol> <p>Las APIs (Interfaz de Programaci\u00f3n de Aplicaciones) permiten que diferentes software se comuniquen entre s\u00ed. Existen varios tipos de APIs, cada una con sus propias caracter\u00edsticas y casos de uso:</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#tipos-de-apis","title":"Tipos de APIs","text":"<ol> <li> <p>SOAP (Simple Object Access Protocol):     - Es un protocolo basado en XML.    - Conocido por su complejidad y sobrecarga debido a la utilizaci\u00f3n de XML.    - No est\u00e1 optimizado para HTTP.</p> </li> <li> <p>REST (Representational State Transfer):    - Basado en HTTP y utiliza URLs.    - Aprovecha los verbos HTTP (GET, POST, PUT, DELETE, PATCH).    - Es popular por su simplicidad y eficiencia.</p> </li> <li> <p>GraphQL:    - Permite consultas m\u00e1s granulares y controladas.    - Env\u00eda un JSON con la consulta en la URL.    - Independiente del protocolo HTTP.    - Utiliza un lenguaje de definici\u00f3n de esquemas (IDL).</p> </li> <li> <p>gRPC (gRPC Remote Procedure Calls):    - Utiliza HTTP/2, permitiendo una comunicaci\u00f3n m\u00e1s eficiente.    - Ofrece soporte para m\u00faltiples lenguajes de programaci\u00f3n.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#api-rest","title":"API REST","text":"<p>Las APIs REST utilizan las peticiones HTTP como verbos del protocolo:</p> <ul> <li>GET: Recuperar recursos.</li> <li>POST: Crear nuevos recursos.</li> <li>PUT: Actualizar recursos existentes.</li> <li>DELETE: Eliminar recursos.</li> <li>PATCH: Actualizar parcialmente recursos.</li> </ul> <p>Caracter\u00edsticas de las APIs REST:</p> <ul> <li>Utilizan rutas URL para identificar los recursos.</li> <li>Los c\u00f3digos de respuesta HTTP indican el estado de la solicitud (por ejemplo, 200 para \u00e9xito, 404 para no encontrado, 500 para error del servidor).</li> <li>Los datos (payload) pueden enviarse en XML o JSON.</li> <li>Una API que sigue estrictamente las caracter\u00edsticas REST se denomina RESTful.</li> </ul> <p>Ejemplo de API REST:</p> <p>Supongamos una API para gestionar una colecci\u00f3n de libros:</p> <ul> <li><code>GET /books</code>: Recupera la lista de libros.</li> <li><code>POST /books</code>: Crea un nuevo libro.</li> <li><code>GET /books/:id</code>: Recupera un libro espec\u00edfico.</li> <li><code>PUT /books/:id</code>: Actualiza un libro espec\u00edfico.</li> <li><code>DELETE /books/:id</code>: Elimina un libro espec\u00edfico.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#api-graphql","title":"API GraphQL","text":"<p>GraphQL es una alternativa a REST que permite realizar consultas m\u00e1s precisas y espec\u00edficas. En lugar de varias URLs, una sola URL acepta consultas en JSON.</p> <p>Caracter\u00edsticas de las APIs GraphQL:</p> <ul> <li>Permiten m\u00e1s control y granularidad en las consultas.</li> <li>Las peticiones son f\u00e1ciles de entender y leer para los humanos.</li> <li>No est\u00e1n limitadas a HTTP.</li> <li>Utilizan el IDL (Schema Definition Language) para definir el esquema.</li> </ul> <p>Ejemplo de API GraphQL:</p> <p>Consulta para obtener el t\u00edtulo y autor de un libro espec\u00edfico:</p> <pre><code>{\n  book(id: \"1\") {\n    title\n    author\n  }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#sdks-kits-de-desarrollo-de-software","title":"SDKs (Kits de Desarrollo de Software)","text":"<p>Las APIs pueden ser complejas, y herramientas como Firebase, MongoDB Realm, y Supabase ofrecen SDKs que simplifican tareas comunes como la autenticaci\u00f3n de usuarios y las consultas avanzadas.</p> <p>Caracter\u00edsticas de los SDKs:</p> <ul> <li>Facilitan la interacci\u00f3n con las APIs al proporcionar bibliotecas preconstruidas.</li> <li>Ahorra tiempo en la programaci\u00f3n de la comunicaci\u00f3n entre el cliente y el servidor.</li> <li>No son est\u00e1ndar y dependen del proveedor del servicio.</li> </ul> <p>Nota: Aunque los SDKs pueden simplificar mucho el trabajo, en este curso evitaremos su uso para centrarnos en aprender los fundamentos de las APIs.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#webs-spa-single-page-application","title":"Webs SPA (Single Page Application)","text":"<p>Las aplicaciones de una sola p\u00e1gina (SPA) utilizan AJAX para cargar y actualizar contenido sin necesidad de recargar la p\u00e1gina completa. Esto permite crear aplicaciones web m\u00e1s r\u00e1pidas y con una experiencia de usuario similar a las aplicaciones de escritorio.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#ejemplo-de-spa-con-ajax","title":"Ejemplo de SPA con AJAX","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;SPA Example&lt;/title&gt;\n    &lt;style&gt;\n        .hidden { display: none; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;nav&gt;\n        &lt;button onclick=\"loadPage('home')\"&gt;Home&lt;/button&gt;\n        &lt;button onclick=\"loadPage('about')\"&gt;About&lt;/button&gt;\n        &lt;button onclick=\"loadPage('contact')\"&gt;Contact&lt;/button&gt;\n    &lt;/nav&gt;\n    &lt;div id=\"content\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n        function loadPage(page) {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', page + '.html', true);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {\n                    document.getElementById('content').innerHTML = xhr.responseText;\n                }\n            };\n            xhr.send();\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En este ejemplo, cada bot\u00f3n en la navegaci\u00f3n carga contenido diferente en el <code>div</code> con el ID \"content\" utilizando AJAX. Esto permite que la p\u00e1gina se actualice din\u00e1micamente sin necesidad de recargarla por completo.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#xmlhttprequest-en-javascript","title":"XMLHttpRequest en JavaScript","text":"<p>XMLHttpRequest (XHR) es una API utilizada para enviar y recibir datos entre un cliente web y un servidor. A pesar de su nombre, XMLHttpRequest puede manejar diferentes tipos de datos, aunque en este cap\u00edtulo nos centraremos principalmente en JSON debido a su popularidad en las aplicaciones web modernas.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#inicializacion-y-uso-basico","title":"Inicializaci\u00f3n y Uso B\u00e1sico","text":"<p>Para comenzar a utilizar XMLHttpRequest, primero debemos crear una instancia del objeto <code>XMLHttpRequest</code>.</p> <pre><code>var req = new XMLHttpRequest();\n</code></pre> <p>Una vez creado el objeto, debemos configurar la solicitud utilizando el m\u00e9todo <code>open</code>. Este m\u00e9todo tiene tres par\u00e1metros principales: 1. M\u00e9todo HTTP: El m\u00e9todo de la solicitud, como 'GET' o 'POST'. 2. URL: La URL a la que se env\u00eda la solicitud. 3. As\u00edncrono: Un valor booleano que indica si la solicitud debe ser as\u00edncrona (<code>true</code>) o s\u00edncrona (<code>false</code>). En la mayor\u00eda de los casos, queremos que sea as\u00edncrona para no bloquear la ejecuci\u00f3n del script.</p> <pre><code>req.open('GET', 'http://www.mozilla.org/', true);\n</code></pre> <p>XMLHttpRequest tiene un conjunto de estados que indican el progreso de la solicitud. Estos estados est\u00e1n representados por la propiedad <code>readyState</code> del objeto XHR. Los posibles valores de <code>readyState</code> son: - <code>0</code> (UNSENT): La solicitud no ha sido inicializada. - <code>1</code> (OPENED): Se ha establecido la conexi\u00f3n con el servidor. - <code>2</code> (HEADERS_RECEIVED): Se han recibido los encabezados de la respuesta. - <code>3</code> (LOADING): El cuerpo de la respuesta se est\u00e1 recibiendo. - <code>4</code> (DONE): La solicitud se ha completado y la respuesta est\u00e1 lista.</p> <p>Para realizar alguna acci\u00f3n cuando la solicitud cambie de estado, se utiliza la propiedad <code>onreadystatechange</code>, que se asigna a una funci\u00f3n. Esta funci\u00f3n se ejecutar\u00e1 cada vez que cambie el estado de la solicitud.</p> <pre><code>req.onreadystatechange = function (aEvt) {\n  if (req.readyState == 4) {\n    if (req.status == 200) {\n      console.log(req.responseText);\n    } else {\n      console.log(\"Error loading page\\n\");\n    }\n  }\n};\n</code></pre> <p>Finalmente, enviamos la solicitud al servidor utilizando el m\u00e9todo <code>send</code>. Si estamos enviando datos (por ejemplo, en una solicitud <code>POST</code>), estos se pasan como argumento a <code>send</code>. En una solicitud <code>GET</code>, simplemente pasamos <code>null</code>.</p> <pre><code>req.send(null);\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#ejemplo-completo","title":"Ejemplo Completo","text":"<pre><code>var req = new XMLHttpRequest();\nreq.open('GET', 'http://www.mozilla.org/', true);\nreq.onreadystatechange = function (aEvt) {\n  if (req.readyState == 4) {\n    if (req.status == 200) {\n      console.log(req.responseText);\n    } else {\n      console.log(\"Error loading page\\n\");\n    }\n  }\n};\nreq.send(null);\n</code></pre> <ol> <li> <p>Crear el Objeto XHR:    <pre><code>var req = new XMLHttpRequest();\n</code></pre>    Aqu\u00ed se crea una nueva instancia del objeto <code>XMLHttpRequest</code>.</p> </li> <li> <p>Configurar la Solicitud:    <pre><code>req.open('GET', 'http://www.mozilla.org/', true);\n</code></pre>    Se configura la solicitud para hacer una petici\u00f3n <code>GET</code> a la URL especificada. El tercer par\u00e1metro, <code>true</code>, indica que la solicitud debe ser as\u00edncrona.</p> </li> <li> <p>Monitorear Cambios de Estado:    <pre><code>req.onreadystatechange = function (aEvt) {\n  if (req.readyState == 4) {\n    if (req.status == 200) {\n      console.log(req.responseText);\n    } else {\n      console.log(\"Error loading page\\n\");\n    }\n  }\n};\n</code></pre>    Se define una funci\u00f3n que se ejecuta cada vez que cambia el estado de la solicitud. Cuando <code>readyState</code> es <code>4</code>, significa que la solicitud se ha completado. Si <code>status</code> es <code>200</code>, significa que la solicitud fue exitosa y se imprime la respuesta en la consola. Si el estado es diferente, se imprime un mensaje de error.</p> </li> <li> <p>Enviar la Solicitud:    <pre><code>req.send(null);\n</code></pre>    Finalmente, se env\u00eda la solicitud al servidor.</p> </li> </ol> <p>Este cap\u00edtulo ha cubierto los conceptos b\u00e1sicos y la implementaci\u00f3n de XMLHttpRequest. En cap\u00edtulos posteriores, exploraremos m\u00e9todos modernos como <code>fetch</code> y la forma en que se integran con las caracter\u00edsticas m\u00e1s recientes de JavaScript, como las promesas y la sintaxis <code>async/await</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#fetch","title":"Fetch","text":"<p>La funci\u00f3n <code>fetch</code> de JavaScript proporciona una manera sencilla y poderosa de realizar solicitudes HTTP. Es similar a <code>XMLHttpRequest</code> (XHR), pero utiliza promesas y tiene una sintaxis m\u00e1s moderna y limpia.</p> <pre><code>(()=&gt;{\nfetch('http://127.0.0.1:5500/datos.json')\n .then(\n   function(response) {\n     if (response.status !== 200) {\n       console.log('Looks like there was a problem. Status Code: ' + response.status);\n       return;     \n     }\n     response.json().then(function(data) {\n       console.log(data);\n     });\n   }\n )\n .catch(function(err) {\n   console.log('Fetch Error : ', err);\n });\n})();\n</code></pre> <p>En este ejemplo, <code>fetch</code> solicita un archivo JSON. Si la respuesta tiene un estado diferente de 200 (OK), se imprime un mensaje de error. Si la respuesta es correcta, se convierte a JSON y se imprime.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#objeto-response","title":"Objeto Response","text":"<p>Si la solicitud tiene \u00e9xito, <code>fetch</code> devuelve un objeto <code>Response</code>, que es un flujo (stream) con varias propiedades y m\u00e9todos \u00fatiles.</p> <pre><code>(()=&gt;{\nfetch('https://github.com/').then(function(response) {\n   console.log(response.headers.get('Content-Type'));\n   console.log(response.headers.get('Date'));\n   console.log(response.status);\n   console.log(response.statusText);\n   console.log(response.type);\n   console.log(response.url);\n});\n})();\n</code></pre> <pre><code>Fetch Error :  TypeError: error sending request for url (http://127.0.0.1:5500/datos.json): error trying to connect: tcp connect error: Connection refused (os error 111)\n    at async mainFetch (ext:deno_fetch/26_fetch.js:170:12)\n    at async fetch (ext:deno_fetch/26_fetch.js:391:7)\n</code></pre> <p>Este ejemplo muestra c\u00f3mo acceder a diferentes propiedades del objeto <code>Response</code>, como los encabezados y el estado de la solicitud.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#guardar-los-datos","title":"Guardar los Datos","text":"<p><code>fetch</code> permite obtener el texto o un objeto de la respuesta. Las funciones <code>response.json()</code> y <code>response.text()</code> devuelven promesas que se resuelven con el contenido adecuado. No es posible usar ambas funciones en una misma petici\u00f3n.</p> <pre><code>(()=&gt;{\nfetch(\"https://dwec-daw-default-rtdb.firebaseio.com/productos.json\")\n       .then(response =&gt; response.json())\n       .then(data =&gt; console.log(data));\n\nfetch(\"https://dwec-daw-default-rtdb.firebaseio.com/productos.json\")\n       .then(response =&gt; response.text())\n       .then(data =&gt; console.log(data));\n})();\n</code></pre> <pre><code>https://github.com/\n</code></pre> <p>En estos ejemplos, se hace una solicitud a una URL y se procesan los datos como JSON en el primer caso y como texto en el segundo.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#encadenar-promesas","title":"Encadenar Promesas","text":"<p>Es posible encadenar promesas para manejar el flujo de la solicitud de manera m\u00e1s estructurada.</p> <pre><code>(()=&gt;{\nfunction showStatus(response) {\n   if (response.status &gt;= 200 &amp;&amp; response.status &lt; 300) {\n     return Promise.resolve(response);\n   } else {\n     return Promise.reject(new Error(response.statusText));\n   }\n}\n\nfunction json(response) { \n  return response.json();  \n}\n\nfetch('datos.json')\n   .then(showStatus)\n   .then(json)\n   .then(function(data) {\n     console.log('Request succeeded with JSON response', data);\n   }).catch(function(error) {\n     console.log('Request failed: ', error);\n   });\n  })();\n</code></pre> <pre><code>{\n  \"error\" : \"Permission denied\"\n}\n</code></pre> <p>En este ejemplo, la funci\u00f3n <code>status</code> verifica si la respuesta es correcta, y la funci\u00f3n <code>json</code> convierte la respuesta en un objeto JSON. Luego, se manejan los datos o se capturan errores seg\u00fan corresponda.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#enviar-datos-con-fetch","title":"Enviar Datos con Fetch","text":""},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#usar-el-metodo-post","title":"Usar el m\u00e9todo POST","text":"<p>Para enviar datos a un servidor, se puede usar el m\u00e9todo <code>POST</code> con <code>fetch</code>.</p> <pre><code>fetch(url, {\n       method: 'post',\n       headers: {\n         \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n       },\n       body: 'foo=bar&amp;lorem=ipsum'\n     })\n     .then(response =&gt; response.json())\n     .then(function (data) {\n       console.log('Request succeeded with JSON response', data);\n     })\n     .catch(function (error) {\n       console.log('Request failed', error);\n     });\n</code></pre> <p>En este ejemplo, se env\u00edan datos codificados en la URL (formato de formulario) al servidor.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#enviar-json","title":"Enviar JSON","text":"<p>Para enviar datos en formato JSON, se debe configurar el encabezado <code>Content-Type</code> y convertir el objeto de datos a JSON.</p> <pre><code>let datos = {username: 'example'};\n\nfetch(url, {\n       method: 'post',\n       headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n       },\n       body: JSON.stringify(datos)\n     })\n     .then(response =&gt; response.json())\n     .then(function (data) {\n       console.log('Request succeeded with JSON response', data);\n     })\n     .catch(function (error) {\n       console.log('Request failed', error);\n     });\n</code></pre> <p>En este ejemplo, un objeto JavaScript se convierte a JSON y se env\u00eda al servidor.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#uso-de-formdata","title":"Uso de FormData","text":"<p><code>FormData</code> es un objeto predefinido en JavaScript que se utiliza para crear pares clave-valor para enviar formularios mediante <code>XMLHttpRequest</code> o <code>fetch</code>.</p> <pre><code>let formElement = document.getElementById(\"myFormElement\"); // Un formulario HTML\nlet formData = new FormData(formElement); // Constructor de FormData con un formulario\n\nformData.append(\"serialnumber\", serialNumber++); // A\u00f1adir m\u00e1s datos\nformData.append(\"afile\", fileInputElement.files[0]); // A\u00f1adir un archivo\n\nfetch('http://localhost:3000/upload', { method: 'POST', body: formData });\n</code></pre> <p>Este ejemplo muestra c\u00f3mo crear un objeto <code>FormData</code> a partir de un formulario HTML y enviar datos adicionales, incluyendo un archivo, al servidor.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#convertir-formdata-a-json","title":"Convertir FormData a JSON","text":"<p>Para enviar <code>FormData</code> como JSON, se puede convertir a un objeto JavaScript y luego a una cadena JSON.</p> <pre><code>let data = new FormData(form);\nlet body = JSON.stringify(Object.fromEntries(data));\n\nreturn fetch(url, {\n   method: 'POST',\n   headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n   },\n   body\n}).then(response =&gt; response.json());\n</code></pre> <p>En este ejemplo, se convierte <code>FormData</code> en un objeto JSON antes de enviarlo.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#cargar-imagenes-en-segundo-plano","title":"Cargar Im\u00e1genes en Segundo Plano","text":"<p>Es posible cargar im\u00e1genes en segundo plano utilizando <code>fetch</code> y el m\u00e9todo <code>blob</code>.</p> <pre><code>&lt;img src=\"placeholder.png\" alt=\"${name}\"&gt;\n\nfetch(image_url)\n.then(response =&gt; response.status == 200 ? response : Promise.reject(response.status))\n.then(response =&gt; response.blob())\n.then(imageBlob =&gt; {\n   let imageURL = URL.createObjectURL(imageBlob);\n   document.querySelector('img').src = imageURL;\n})\n.catch(error =&gt; console.log(error));\n</code></pre> <p>Este ejemplo muestra c\u00f3mo cargar una imagen en segundo plano y actualizar la fuente de una etiqueta <code>&lt;img&gt;</code> con la URL del <code>blob</code> de la imagen.</p> <p>La funci\u00f3n URL.createObjectURL(blob) es un m\u00e9todo del API de URL en JavaScript que permite crear una URL temporal, de tipo \"blob\", que representa un objeto de datos (Blob o File) en el navegador. Esta URL puede ser utilizada para acceder y manipular el contenido del objeto de datos como si fuera un archivo disponible en una URL normal. </p> <p><code>URL.createObjectURL(blob)</code> crea una URL \u00fanica que representa el objeto <code>Blob</code> (o <code>File</code>). Esta URL es v\u00e1lida mientras el documento que la cre\u00f3 est\u00e9 en memoria, y se puede usar como referencia al contenido del objeto de datos. La URL generada permite acceder y manipular el contenido del <code>Blob</code> como si fuera un archivo remoto. La URL no requiere que los datos sean enviados a un servidor; todo se maneja localmente en el navegador. La URL generada puede ser asignada a elementos HTML, como <code>&lt;img&gt;</code>, <code>&lt;video&gt;</code>, <code>&lt;audio&gt;</code>, o cualquier otro elemento que acepte una URL de recursos. Tambi\u00e9n se puede usar para descargar archivos, mostrar previsualizaciones, o procesar datos de archivos de manera local.</p> <p>Las URLs creadas con <code>URL.createObjectURL(blob)</code> ocupan recursos en el navegador. Para liberar estos recursos cuando ya no se necesite la URL, se debe llamar a <code>URL.revokeObjectURL(url)</code>:</p> <pre><code>const objectURL = URL.createObjectURL(file);\n// Usar la URL...\nURL.revokeObjectURL(objectURL); // Liberar la URL cuando ya no sea necesaria\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#construccion-de-urls","title":"Construcci\u00f3n de URLs","text":"<p><code>fetch</code> puede utilizar URLs construidas din\u00e1micamente. Esto es \u00fatil cuando los par\u00e1metros de la consulta cambian en tiempo de ejecuci\u00f3n.</p> <pre><code>let country = `Saint Vincent &amp; the Grenadines`;\n\nfetch(`/api/cities?country=${country}`);\n//\"/api/cities?country=Saint Vincent &amp; the Grenadines\"\n\nurl = `/api/cities?${new URLSearchParams([['country', country]])}`;\n\nfetch(url);\n//\"/api/cities?country=Saint+Vincent+%26+the+Grenadines\"\n</code></pre> <p>En este ejemplo, se construye una URL con par\u00e1metros de consulta utilizando <code>URLSearchParams</code>, asegur\u00e1ndose de que los caracteres especiales est\u00e9n correctamente codificados.</p> <p>Si usamos el constructor con una URL ya formada nos retorna un objeto URLSearchParams, que es un iterable con los datos:</p> <pre><code>const url = new URL(\"http://example.com/search?query=%40\");\nconst searchParams3 = new URLSearchParams(url.search);\nconsole.log(searchParams3.has(\"query\")); // true\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#websockets","title":"WebSockets","text":"<p>WebSocket es una tecnolog\u00eda que proporciona un canal de comunicaci\u00f3n full-duplex sobre un \u00fanico socket TCP. Es decir, permite establecer una conexi\u00f3n persistente entre el cliente y el servidor, donde ambos pueden enviar y recibir datos en tiempo real. Esto es especialmente \u00fatil para aplicaciones que requieren comunicaci\u00f3n bidireccional constante, como chats en l\u00ednea, notificaciones en tiempo real, y juegos multijugador.</p> <p>A continuaci\u00f3n, analizamos un ejemplo de uso de WebSocket en JavaScript.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#establecer-una-conexion-websocket","title":"Establecer una Conexi\u00f3n WebSocket","text":"<pre><code>let socket = new WebSocket(\"ws://localhost:8080\");\n</code></pre> <p>Esta l\u00ednea crea una nueva instancia de WebSocket, abriendo una conexi\u00f3n a la URL proporcionada. En este caso, la URL es <code>\"ws://localhost:8080\"</code>, lo que indica que se est\u00e1 intentando conectar a un servidor WebSocket que est\u00e1 ejecut\u00e1ndose en <code>localhost</code> en el puerto <code>8080</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#manejadores-de-eventos","title":"Manejadores de Eventos","text":""},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#evento-open","title":"Evento <code>open</code>","text":"<pre><code>socket.addEventListener(\"open\", function(event) {\n   console.log(\"Conexi\u00f3n establecida.\");\n   socket.send(\"\u00a1Hola, servidor!\");\n});\n</code></pre> <p>El evento <code>open</code> se dispara cuando la conexi\u00f3n WebSocket se ha establecido con \u00e9xito. En este manejador, se imprime un mensaje en la consola indicando que la conexi\u00f3n se ha establecido, y se env\u00eda un mensaje al servidor utilizando <code>socket.send(\"\u00a1Hola, servidor!\");</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#evento-message","title":"Evento <code>message</code>","text":"<pre><code>socket.addEventListener(\"message\", function(event) {\n   console.log(\"Mensaje recibido del servidor: \" + event.data);\n});\n</code></pre> <p>El evento <code>message</code> se dispara cada vez que el cliente recibe datos del servidor. El objeto <code>event</code> contiene la propiedad <code>data</code>, que almacena los datos recibidos. En este manejador, los datos recibidos se imprimen en la consola.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#evento-error","title":"Evento <code>error</code>","text":"<pre><code>socket.addEventListener(\"error\", function(error) {\n   console.log(\"Error en la conexi\u00f3n: \" + error);\n});\n</code></pre> <p>El evento <code>error</code> se dispara cuando ocurre un error en la comunicaci\u00f3n WebSocket. En este manejador, el error se imprime en la consola.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#evento-close","title":"Evento <code>close</code>","text":"<pre><code>socket.addEventListener(\"close\", function(event) {\n   console.log(\"Conexi\u00f3n cerrada. C\u00f3digo: \" + event.code);\n});\n</code></pre> <p>El evento <code>close</code> se dispara cuando la conexi\u00f3n WebSocket se cierra. El objeto <code>event</code> contiene una propiedad <code>code</code>, que indica el c\u00f3digo de cierre de la conexi\u00f3n. En este manejador, se imprime un mensaje en la consola indicando que la conexi\u00f3n se ha cerrado y mostrando el c\u00f3digo de cierre.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#tratamiento-de-los-datos","title":"Tratamiento de los Datos","text":"<p>En las aplicaciones web modernas, es com\u00fan recibir datos del servidor en formato JSON, que es un formato ligero para el intercambio de datos. JavaScript proporciona herramientas potentes para trabajar con JSON, permitiendo convertir objetos en JSON y viceversa. Adem\u00e1s, tambi\u00e9n es importante poder almacenar datos en el lado del cliente para mejorar la experiencia del usuario. En este cap\u00edtulo, exploraremos c\u00f3mo convertir objetos a JSON y c\u00f3mo trabajar con almacenamiento en el lado del cliente, incluyendo cookies y LocalStorage.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#convertir-objetos-a-json","title":"Convertir Objetos a JSON","text":"<p>JavaScript permite convertir objetos en cadenas JSON utilizando el m\u00e9todo <code>JSON.stringify</code>. Este m\u00e9todo es \u00fatil cuando necesitamos enviar datos al servidor o almacenarlos en el lado del cliente.</p> <pre><code>(()=&gt;{\nclass Apple {\n  constructor(type){\n     this.type = type;\n     this.color = \"red\";\n  }\n}\nlet  apple1 = new Apple('Golden'); // Se crea una instancia\nlet appleJson = JSON.stringify(apple1);\nconsole.log(appleJson);\n})();\n</code></pre> <pre><code>{\"type\":\"Golden\",\"color\":\"red\"}\n</code></pre> <p>En este ejemplo: 1. Definimos una clase <code>Apple</code> que tiene un constructor que inicializa el tipo y el color de la manzana. 2. Creamos una instancia de <code>Apple</code> con el tipo 'Golden'. 3. Convertimos la instancia en una cadena JSON usando <code>JSON.stringify</code>. 4. Imprimimos la cadena JSON resultante en la consola.</p> <p>El resultado en la consola ser\u00e1: <code>{\"type\":\"Golden\",\"color\":\"red\"}</code>, que es la representaci\u00f3n JSON del objeto <code>apple1</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#convertir-json-a-objetos","title":"Convertir JSON a Objetos","text":"<p>Para convertir una cadena JSON en un objeto de JavaScript, utilizamos el m\u00e9todo <code>JSON.parse</code>. Esto es \u00fatil cuando recibimos datos del servidor en formato JSON y necesitamos trabajar con ellos en nuestro c\u00f3digo.</p> <pre><code>(()=&gt;{\nclass Hero {\n  constructor(name, car){\n     this.name = name;\n     this.car = car;\n  }\n}\nlet heroJSON = '{\"name\":\"Max\",\"car\":\"V8\"}';\nlet heroObject = JSON.parse(heroJSON);\nlet heroClass = Object.assign(new Hero, heroObject);\nconsole.log(heroObject, heroClass);\n})();\n</code></pre> <pre><code>{ name: \"Max\", car: \"V8\" } Hero { name: \"Max\", car: \"V8\" }\n</code></pre> <p>En este ejemplo: 1. Definimos una clase <code>Hero</code> que tiene un constructor que inicializa el nombre y el coche del h\u00e9roe. 2. Creamos una cadena JSON que representa un h\u00e9roe. 3. Convertimos la cadena JSON en un objeto usando <code>JSON.parse</code>. 4. Asignamos las propiedades del objeto JSON a una nueva instancia de <code>Hero</code> usando <code>Object.assign</code>. 5. Imprimimos el objeto JSON y la instancia de <code>Hero</code> en la consola.</p> <p>El resultado en la consola mostrar\u00e1 el objeto plano y la instancia de <code>Hero</code> con las propiedades correspondientes.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#conversion-de-binarios-para-enviar-como-json","title":"Conversi\u00f3n de binarios para enviar como JSON","text":"<p>Si se necesita enviar un binario dentro de un mensaje JSON, podemos convertirlo a Base64:</p> <pre><code>document.getElementById('fileForm').addEventListener('submit', event =&gt; {\n    event.preventDefault();\n    const fileInput = document.getElementById('fileInput');\n    const file = fileInput.files[0];\n    const reader = new FileReader();\n\n    reader.addEventListener('loadend', () =&gt; {\n        const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\n        const jsonData = {\n            fileName: file.name,\n            fileType: file.type,\n            fileData: base64String\n        };\n\n        fetch('/upload-json', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(jsonData)\n        })\n        .then(response =&gt; response.json())\n        .then(data =&gt; console.log(data))\n        .catch(error =&gt; console.error('Error:', error));\n    });\n\n    reader.readAsDataURL(file);\n});\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#almacenamiento-en-el-lado-del-cliente","title":"Almacenamiento en el Lado del Cliente","text":""},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#cookies","title":"Cookies","text":"<p>Las cookies son peque\u00f1os fragmentos de datos almacenados en el navegador del usuario. Son \u00fatiles para almacenar informaci\u00f3n persistente que debe enviarse con cada solicitud HTTP al servidor, como sesiones de usuario.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#ejemplo","title":"Ejemplo","text":"<pre><code>document.cookie = \"username=John Doe; expires=Thu, 18 Dec 2021 12:00:00 UTC; path=/;\";\n</code></pre> <p>En este ejemplo: 1. Creamos una cookie llamada <code>username</code> con el valor <code>John Doe</code>. 2. Establecemos una fecha de expiraci\u00f3n para la cookie. 3. Definimos el <code>path</code> para especificar la ruta en la que la cookie est\u00e1 disponible.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#manipular-cookies","title":"Manipular Cookies","text":"<pre><code>var x = document.cookie;  // Leer todas las cookies\ndocument.cookie = \"username=John Smith; expires=Thu, 18 Dec 2021 12:00:00 UTC; path=/;\";  // Modificar una cookie\ndocument.cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";  // Borrar una cookie\n</code></pre> <p>En este ejemplo: 1. Leemos todas las cookies disponibles. 2. Modificamos la cookie <code>username</code>. 3. Borramos la cookie <code>username</code> estableciendo una fecha de expiraci\u00f3n pasada.</p> <p>Para una gesti\u00f3n m\u00e1s avanzada de cookies, se recomienda utilizar las funciones proporcionadas por la W3C: W3Schools - Cookies.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#localstorage","title":"LocalStorage","text":"<p>LocalStorage permite almacenar datos en el navegador de forma persistente. Los datos persisten incluso despu\u00e9s de cerrar el navegador.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#ejemplo_1","title":"Ejemplo","text":"<pre><code>// Guardar\nlocalStorage.setItem(\"lastname\", \"Smith\");\n// Obtener\nvar lastname = localStorage.getItem(\"lastname\");\n// Borrar\nlocalStorage.removeItem(\"lastname\");\n</code></pre> <p>En este ejemplo: 1. Guardamos un valor con la clave <code>lastname</code> en LocalStorage. 2. Recuperamos el valor almacenado usando la clave <code>lastname</code>. 3. Eliminamos el valor asociado a la clave <code>lastname</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#indexeddb","title":"IndexedDB","text":"<p>IndexedDB es una API de bajo nivel para almacenar grandes cantidades de datos estructurados. Es una base de datos transaccional y as\u00edncrona que permite almacenar archivos y realizar b\u00fasquedas avanzadas.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#caracteristicas-de-indexeddb","title":"Caracter\u00edsticas de IndexedDB","text":"<ul> <li>Hasta 50MB de almacenamiento.</li> <li>API as\u00edncrona para operaciones de lectura y escritura.</li> <li>Transaccional para garantizar la integridad de los datos.</li> <li>M\u00e1s compleja que LocalStorage.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/ajax.html#ejemplo-basico-de-indexeddb","title":"Ejemplo B\u00e1sico de IndexedDB","text":"<p>IndexedDB es m\u00e1s compleja de manejar que LocalStorage o cookies, pero ofrece muchas m\u00e1s capacidades. Aqu\u00ed presentamos un ejemplo muy b\u00e1sico para ilustrar su uso:</p> <pre><code>let request = indexedDB.open(\"myDatabase\", 1);\n\nrequest.onupgradeneeded = function(event) {\n  let db = event.target.result;\n  let objectStore = db.createObjectStore(\"customers\", { keyPath: \"id\" });\n  objectStore.createIndex(\"name\", \"name\", { unique: false });\n  objectStore.createIndex(\"email\", \"email\", { unique: true });\n};\n\nrequest.onsuccess = function(event) {\n  let db = event.target.result;\n  let transaction = db.transaction([\"customers\"], \"readwrite\");\n  let objectStore = transaction.objectStore(\"customers\");\n  let request = objectStore.add({ id: 1, name: \"John Doe\", email: \"john.doe@example.com\" });\n\n  request.onsuccess = function(event) {\n    console.log(\"Customer added to the database\");\n  };\n\n  request.onerror = function(event) {\n    console.log(\"Error adding customer: \", event.target.error);\n  };\n};\n</code></pre> <p>En este ejemplo: 1. Abrimos una conexi\u00f3n a IndexedDB y, si es la primera vez, se crea o actualiza la base de datos. 2. Definimos un <code>objectStore</code> para almacenar datos de clientes con un \u00edndice para <code>name</code> y <code>email</code>. 3. A\u00f1adimos un cliente a la base de datos dentro de una transacci\u00f3n y manejamos los eventos de \u00e9xito y error.</p> <pre><code>\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular_menu.html","title":"Angular menu","text":""},{"location":"Moduls/ARXIU/2425/DWEC/angular_menu.html#angular","title":"Angular","text":"<p>Typescript </p> <p>Introducci\u00f3n a Angular</p> <p>Consejos</p> <p>Comunicaci\u00f3n con el servidor en Angular</p> <p>Rutas en Angular</p> <p>Formularios en Angular</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html","title":"La Web i el Desenvolupament Web","text":"<p>La Web \u00e9s un dels conjunts de protocols m\u00e9s reeixits d'Internet, i la seva creaci\u00f3 va marcar un abans i un despr\u00e9s en la manera com accedim i compartim informaci\u00f3. Va ser inventada per Tim Berners-Lee al CERN (Organitzaci\u00f3 Europea per a la Recerca Nuclear) i ha evolucionat fins a convertir-se en una eina fonamental en la vida quotidiana i professional de milions de persones.</p> <p>La Web es basa en el concepte de <code>hipertext</code>, una tecnologia que permet enlla\u00e7ar diferents documents i recursos a trav\u00e9s d'enlla\u00e7os o hipervincles. Aquesta capacitat denlla\u00e7 \u00e9s el que permet la navegaci\u00f3 entre diferents p\u00e0gines i llocs web.</p> <p>El World Wide Web Consortium (W3C) \u00e9s lorganitzaci\u00f3 que sencarrega de desenvolupar est\u00e0ndards per a la Web. El seu objectiu \u00e9s garantir que la Web continu\u00ef sent oberta, accessible i funcional per a tothom. Aquests est\u00e0ndards inclouen tecnologies fonamentals com HTML, CSS i JavaScript.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#components-de-la-web","title":"Components de la Web","text":"<p>La Web es compon de diversos elements clau:</p> <ul> <li>Hipertext: Permet la creaci\u00f3 denlla\u00e7os entre documents.</li> <li>Protocol HTTP: \u00c9s el protocol de comunicaci\u00f3 que permet la transfer\u00e8ncia de dades a la Web.</li> <li>Servidors i Clients: Els servidors allotgen els llocs web i els clients (navegadors web) els sol\u00b7liciten i mostren.</li> <li>DNS (Sistema de Noms de Domini): Tradueix els noms de domini llegibles per humans (com www.ejemplo.com) en adreces IP que els ordinadors poden entendre.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#el-desenvolupament-web","title":"El Desenvolupament Web","text":"<p>El desenvolupament web \u00e9s un camp multidisciplinari que abasta diverses \u00e0rees i tecnologies. A continuaci\u00f3, es descriuen les principals \u00e0rees professionals del desenvolupament web:</p> <p>Contingut</p> <p>El contingut es refereix a l'organitzaci\u00f3, sem\u00e0ntica, presentaci\u00f3 i estructura de la informaci\u00f3 a la web. El llenguatge fonamental per al contingut web \u00e9s HTML (HyperText Markup Language), que defineix lestructura i el contingut duna p\u00e0gina web.</p> <p>Disseny</p> <p>El disseny se centra en laspecte visual i els elements gr\u00e0fics duna p\u00e0gina web. Utilitza tecnologies com CSS (Cascading Style Sheets) per definir estils i plantilles que controlen l'aparen\u00e7a de les p\u00e0gines.</p> <p>Tecnologia Frontend</p> <p>Les tecnologies frontend s\u00f3n les que s'executen al navegador de l'usuari i s\u00f3n responsables dels elements interactius d'una p\u00e0gina web. El principal llenguatge de programaci\u00f3 frontend \u00e9s JavaScript, que permet crear interf\u00edcies din\u00e0miques i reactives.</p> <p>Tecnologia Backend</p> <p>El backend s'encarrega de la l\u00f2gica del servidor, l'acc\u00e9s a les bases de dades i el processament de les sol\u00b7licituds dels usuaris. Els llenguatges comuns de backend inclouen PHP, Python i Node.js, entre d'altres.</p> <p>Distribuci\u00f3</p> <p>La distribuci\u00f3 fa refer\u00e8ncia a com es despleguen i gestionen els llocs web. Aix\u00f2 inclou tant el maquinari (servidors, m\u00e0quines virtuals, contenidors) com el programari (servidors web com Apache, IIS i NGINX).</p> <p>Prop\u00f2sit</p> <p>Les webs es fan per a alguna cosa. Definir el prop\u00f2sit pot ser que no sigui la tasca m\u00e9s t\u00e8cnica, per\u00f2 calen perfils intermedis que s\u00e0piguen traslladar les necessitats dels clients als desenvolupadors. O fins i tot inventar nous models de negoci basats en tecnologies web.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#arquitectura-client-servidor","title":"Arquitectura Client - Servidor","text":"<p>L'arquitectura client-servidor \u00e9s el model fonamental en qu\u00e8 es basa la web. Es divideix en dues parts principals:</p> <ul> <li>Server-side (Costat del servidor)</li> <li>Maquinari: Inclou servidors i elements de xarxa, m\u00e0quines virtuals i contenidors.</li> <li>Programari: Involucra servidors web (com Apache, IIS, NGINX) i llenguatges CGI (com Perl, PHP, C). Tamb\u00e9 inclou llenguatges i frameworks amb servidors web integrats, com ara Python, Java, Node.js i C++.</li> <li>Client-side (Costat del client)</li> <li>Clients web: navegadors web com ara Firefox, Chrome, Vivaldi, Opera, Edge i Internet Explorer.</li> <li>Llenguatges de marques: HTML, XHTML, HTML5 i CSS.</li> <li>Llenguatges de programaci\u00f3 de l'entorn Client: Principalment JavaScript.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#el-cami-del-frontend","title":"El Cam\u00ed del Frontend","text":"<p>Per a m\u00e9s detalls, podeu consultar Full de ruta per a desenvolupadors de front-end.</p> <p>Aquest terme, extret de la web anterior, reflecteix l'itinerari formatiu recomanat per ser un professional del desenvolupament web a la part del Frontend. Aquest m\u00f2dul no \u00e9s suficient per dominar-ho tot i \u00e9s important ser conscients que estem veient una petita part de les m\u00faltiples possibilitats que tenim al nostre abast.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#del-costat-del-servidor-vs-del-costat-del-client","title":"Del costat del servidor vs del costat del client","text":"<p>En el desenvolupament web, tant el costat del servidor (server-side) com el costat del client (client-side) juguen els seus rols. No obstant aix\u00f2, moltes tasques poden dur-se a terme a qualsevol dels dos costats, i lelecci\u00f3 don implementar una funcionalitat espec\u00edfica dep\u00e8n de diversos factors, com la tecnologia adequada per al cas o la comoditat del desenvolupador amb una tecnologia particular.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#tasques-comunes-a-server-side-i-client-side","title":"Tasques comunes a Server-side i Client-side","text":"<ul> <li>Validar formularis: La validaci\u00f3 es pot fer al client per millorar l'experi\u00e8ncia de l'usuari, per\u00f2 s'ha de verificar novament al servidor per raons de seguretat.</li> <li>Desar dades permanents: Generalment es fa al servidor utilitzant bases de dades.</li> <li>Presentaci\u00f3 de diapositives: \u00c9s m\u00e9s com\u00fa al costat del client, utilitzant JavaScript o frameworks de frontend.</li> <li>Eliminar un par\u00e0graf: Aquesta tasca es realitza t\u00edpicament al client, utilitzant JavaScript per modificar el DOM (Document Object Model).</li> <li>Calcular dades: Els c\u00e0lculs es poden fer a banda i banda, depenent de la naturalesa del c\u00e0lcul i els requisits de seguretat.</li> <li>Accedir a bases de dades: Aquesta tasca es realitza al servidor per mantenir la seguretat i la integritat de les dades.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#javascript-al-costat-del-client","title":"JavaScript al costat del client","text":"<p>JavaScript \u00e9s el llenguatge de programaci\u00f3 m\u00e9s utilitzat al costat del client. Tot i aix\u00f2, t\u00e9 les seves limitacions i particularitats:</p> <ul> <li>Limitacions de JavaScript:</li> <li>No podeu escriure directament al servidor.</li> <li>No tots els navegadors suporten JavaScript i es pot desactivar, de manera que una p\u00e0gina web ben dissenyada hauria de funcionar sense.</li> <li>No podeu modificar prefer\u00e8ncies del navegador, llan\u00e7ar aplicacions, llegir o escriure fitxers al client, retransmetre streaming, enviar correus electr\u00f2nics, interactuar amb llenguatges de servidor, accedir a un web d'un domini diferent, protegir l'origen de les imatges, ni implementar multiprocessos.</li> <li>Tecnologia as\u00edncrona:</li> <li>JavaScript pot sol\u00b7licitar dades al servidor de forma as\u00edncrona utilitzant tecnologies com AJAX (Asynchronous JavaScript and XML).</li> <li>Usos de JavaScript:</li> <li>Fer que la web reaccioni a la interacci\u00f3 de lusuari.</li> <li>Proporcionar una interf\u00edcie agradable per a les dades.</li> <li>Controlar finestres, marcs i applets al document HTML.</li> <li>Preprocessar dades abans d'enviar-les al servidor.</li> <li>Modificar l'estil i el contingut de manera din\u00e0mica en funci\u00f3 de la interacci\u00f3 de l'usuari.</li> <li>Sol\u00b7licitar o enviar fitxers al servidor.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#compatibilitat-i-validacio-html","title":"Compatibilitat i Validaci\u00f3 HTML","text":"<p>Per evitar problemes de compatibilitat, el codi HTML ha de ser v\u00e0lid. Es pot utilitzar el validador d'HTML del W3C (https://validator.w3.org/) per assegurar-se que el codi compleixi amb els est\u00e0ndards.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#seguretat-en-javascript","title":"Seguretat en JavaScript","text":"<p>El JavaScript s'executa en un entorn segur sense contacte directe amb el sistema operatiu del client. Implementa una \"pol\u00edtica del mateix origen\", cosa que significa que nom\u00e9s t\u00e9 acc\u00e9s a dades rebudes del mateix servidor des del qual va ser carregat.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#entorns-de-programacio-web-per-al-client","title":"Entorns de Programaci\u00f3 Web per al Client","text":"<p>L'elecci\u00f3 del programari per al desenvolupament web dep\u00e8n de les necessitats i la complexitat del projecte:</p> <ul> <li>Programari per a modificacions casuals:</li> <li>Editors de text lleugers i r\u00e0pids com Gedit, Nano, Notepad.</li> <li>Editors de text avan\u00e7ats:</li> <li>Eines m\u00e9s potents com Sublim Text, Brackets, Jedit, Visual Studio Code, Vim.</li> <li>Entorns de Desenvolupament Integrats (IDEs):</li> <li>Solucions completes com NetBeans, Eclipse, WebStorm.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#preparar-lentorn-de-desenvolupament","title":"Preparar l'entorn de desenvolupament","text":"<p>En un entorn de desenvolupament t\u00edpic, com una classe de programaci\u00f3 web, es pot utilitzar Visual Studio Code amb les extensions seg\u00fcents:</p> <ul> <li>M\u00e9s bonica: Per formatar fitxers de manera autom\u00e0tica, ja sigui manualment o en desar.</li> <li>EsLint: Ajuda a detectar errors d'estil o programaci\u00f3 que JavaScript no pot detectar per si mateix (requereix instal\u00b7lar eslint al projecte).</li> <li>Servidor en directe: Per provar la web en un servidor local de manera r\u00e0pida i senzilla.</li> </ul> <p>M\u00e9s endavant anirem instal\u00b7lant alguna extensions m\u00e9s.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#altres-eines","title":"Altres Eines","text":"<ul> <li>Tecla F12 als navegadors: Accedeix a les eines de desenvolupament del navegador.</li> <li>Edici\u00f3 per a desenvolupadors de Firefox: Una versi\u00f3 del navegador Firefox amb eines avan\u00e7ades per a desenvolupadors web.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#tipus-daplicacions-web-segons-el-frontend","title":"Tipus d'aplicacions web segons el Frontend","text":"<p>El desenvolupament d'aplicacions web ha evolucionat significativament amb el temps i avui dia hi ha diverses maneres d'abordar el frontend. A continuaci\u00f3, explorarem els diferents tipus d'aplicacions web segons les tecnologies de frontend que es facin servir, aix\u00ed com l'evoluci\u00f3 de les mateixes.</p> <ul> <li>Amb JavaScript 'Vanilla': Es refereix a la utilitzaci\u00f3 de JavaScript pur sense cap biblioteca o framework addicional. \u00c9s una manera directa i eficient de programar sobretot quan s\u00f3n aplicacions petites i senzilles.</li> <li>Amb Biblioteques:</li> <li>JQuery: Facilita la manipulaci\u00f3 del DOM, esdeveniments i AJAX.</li> <li>Prototip: Simplifica les tasques de programaci\u00f3 orientada a objectes en JavaScript.</li> <li>D3.js: S'utilitza per crear visualitzacions de dades.</li> <li>Bootstrap: Biblioteca de CSS i JavaScript per a disseny responsiu.</li> <li>View.js: Ofereix una manera progressiva de construir interf\u00edcies dusuari.</li> <li>Reacciona: Biblioteca per construir interf\u00edcies d'usuari, principalment en aplicacions d'una sola p\u00e0gina.</li> <li>Con Frameworks:</li> <li>Angular: Framework de JavaScript de Google per construir aplicacions din\u00e0miques duna sola p\u00e0gina.</li> <li>Reacciona: Encara que \u00e9s una biblioteca, tamb\u00e9 s'utilitza com a framework quan es combina amb altres eines.</li> <li>View.js: Igual que React, es pot considerar un framework quan s'utilitza en projectes m\u00e9s grans.</li> <li>Phaser: Framework per al desenvolupament de jocs en HTML5.</li> <li>Con Frameworks Full Stack:</li> <li>Odoo: Plataforma de codi obert que proporciona un conjunt complet d'aplicacions empresarials.</li> <li>Blitz: Framework de React basat en Next.js per a aplicacions de pila completa.</li> <li>Next.js: Framework de React per a aplicacions de servidor i client.</li> <li>SvelteKit: Framework per construir aplicacions r\u00e0pides i modernes.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#evolucio-de-les-aplicacions-web","title":"Evoluci\u00f3 de les Aplicacions Web","text":"<ol> <li>P\u00e0gines Web Est\u00e0tiques: Les primeres aplicacions web eren simples p\u00e0gines est\u00e0tiques amb hipervincles.</li> <li>P\u00e0gines Web Generades pel Servidor: Amb el temps, es va introduir una mica de JavaScript per millorar la interacci\u00f3.</li> <li>Introducci\u00f3 d'AJAX: Permet carregar o pujar dades al servidor de manera as\u00edncrona, millorant la interactivitat sense recarregar la p\u00e0gina.</li> <li>Aplicaci\u00f3 d'una sola p\u00e0gina (SPA): Les aplicacions d'una sola p\u00e0gina es comuniquen amb el servidor usant JSON o XML, proporcionant una experi\u00e8ncia m\u00e9s fluida.</li> </ol> <p>Evoluci\u00f3 de les aplicacions web.</p> <p>Actualment es poden fer p\u00e0gines web de moltes maneres. En aquest llibre, cap al final, ens enfoquem m\u00e9s a imitar els frameworks actuals, que solen estar pensats per a SPA amb una API. No obstant aix\u00f2, es poden fer p\u00e0gines nom\u00e9s amb HTML est\u00e0tic, o generat una vegada a partir de Markdown, com aquest mateix llibre (Jekyll, Jupyter Books...), tamb\u00e9 es pot generar HTML amb PHP, Node, Java... O es pot tenir un CMS com a Wordpress i programar plugins. Es pot tenir un CMS Headless o generat mitjan\u00e7ant Micro-Frontends. O aplicacions progressives PWA o H\u00edbrides amb Ionic i Cordova. Pel que fa a servir-les, tenim els hostings i servidors tradicionals o \"Serverless\", plataformes \"Low Code\"... La llista no s'acaba i cadascuna d'aquestes idees t\u00e9 moltes m\u00e9s opcions.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#aplicacions-duna-sola-pagina-spa","title":"Aplicacions d'una sola p\u00e0gina (SPA)","text":"<ul> <li>SPA com a sobreenginyeria: En molts casos, utilitzar SPA pot complicar innecess\u00e0riament el desenvolupament web. Tot seguit veurem la justificaci\u00f3 per fer web d'aquesta manera.</li> <li>Freq\u00fc\u00e8ncia d'\u00fas: \u00c9s important considerar si l'aplicaci\u00f3 ser\u00e0 utilitzada constantment o espor\u00e0dicament. Una aplicaci\u00f3 web utilitzada espor\u00e0dicament no ha de ser molt pesada i \u00e9s millor que sigui generada pel servidor o est\u00e0tica per millorar el SEO. No obstant aix\u00f2, una aplicaci\u00f3 web que el client mant\u00e9 sempre oberta, pot ser m\u00e9s agradable dutilitzar si \u00e9s una SPA.</li> <li>Servidor vs Client: Crear l'HTML i l'estil al servidor pot ser menys complicat, per\u00f2 en aplicacions grans, podeu sobrecarregar el servidor i dificultar la separaci\u00f3 de la vista del model i controlador.</li> <li>SPA al nostre m\u00f2dul: Optarem per una SPA pel fet que \u00e9s m\u00e9s adequat per al m\u00f2dul que estem desenvolupant. Una SPA requereix saber construir elements del DOM, comunicar-se amb el servidor mitjan\u00e7ant peticions as\u00edncrones amb Javascript i manejar els esdeveniments i la reactivitat. Per tant, \u00e9s l'escusa perfecta per impartir els nostres continguts.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#entre-la-pagina-web-i-lapp","title":"Entre la p\u00e0gina web i l'APP","text":"<ol> <li>P\u00e0gines Web: Contingut est\u00e0tic i din\u00e0mic accessible a trav\u00e9s de navegadors.</li> <li>Aplicacions Web: Poden ser SPA o no.</li> <li>Aplicacions Web Responsives: Dissenyades per adaptar-se a diferents dispositius.</li> <li>PWA (aplicaci\u00f3 web progressiva): Combinen el millor de les p\u00e0gines web i les aplicacions m\u00f2bils.</li> <li>Apps H\u00edbrides: Utilitzen frameworks com Ionic per funcionar en m\u00faltiples plataformes.</li> <li>Aplicacions pr\u00e0cticament natives: Utilitzen tecnologies com React Native o Flutter per apropar-se al rendiment de les aplicacions natives.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#les-biblioteques","title":"Les Biblioteques","text":"<ul> <li>Caracter\u00edstiques: Aporten funcionalitats espec\u00edfiques al llenguatge de programaci\u00f3.</li> <li>Flexibilitat: No obliguen a canviar la manera de programar.</li> <li>Simplificaci\u00f3: Faciliten la programaci\u00f3 de tasques concretes.</li> <li>Desavantatges: Poden crear depend\u00e8ncia al programador.</li> <li>Reempla\u00e7ament: Algunes biblioteques, com Underscore, Lodash o JQuery, han perdut rellev\u00e0ncia amb la introducci\u00f3 d'ES6.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#els-frameworks","title":"Els Frameworks","text":"<ul> <li>Modificaci\u00f3: Canvien completament la manera de programar.</li> <li>Integraci\u00f3: S'encarreguen de plantilles, comunicacions, encaminaments, components, m\u00f2duls, etc.</li> <li>Corba d'aprenentatge: S\u00f3n complexos d'aprendre.</li> <li>Efici\u00e8ncia: Un cop dominats, fan la programaci\u00f3 m\u00e9s \u00e0gil i correcta.</li> <li>In\u00e8rcia: Poden dificultar el canvi a un altre framework.</li> <li>Obsolesc\u00e8ncia: Si el framework queda obsolet, la web tamb\u00e9.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#utilitat-dels-frameworks","title":"Utilitat dels Frameworks","text":"<ul> <li>Aplicacions espec\u00edfiques: S\u00f3n \u00fatils si es desenvolupen per a una aplicaci\u00f3 en particular.</li> <li>Normes: S\u00f3n valuosos si permeten exportar components.</li> <li>Valor afegit: Han d'aportar una cosa \u00fanica.</li> <li>Aplicacions no cr\u00edtiques: S\u00f3n ideals per a aplicacions que no s\u00f3n cr\u00edtiques.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#obtencio-de-biblioteques-i-frameworks","title":"Obtenci\u00f3 de Biblioteques i Frameworks","text":"<ul> <li>Desc\u00e0rrega directa: Descarregar un fitxer .js o un directori comprimit del web oficial i copiar-lo al projecte.</li> <li>CDN: Utilitzar un CDN directament des de la web oficial.</li> <li>Gestors de paquets: Utilitzar NPM o Yarn per gestionar depend\u00e8ncies.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#modes-i-tendencies","title":"Modes i Tend\u00e8ncies","text":"<p>Les xarxes socials s\u00f3n plenes de gent intentant vendre el seu curs. Al m\u00f3n professional hi ha molta m\u00e9s gent treballant silenciosament i efica\u00e7ment en productes de qualitat i duradors. Encara que els primers tinguin una mica de ra\u00f3 a dir que PHP, JQuery o altres estan obsolets, el m\u00f3n laboral de vegades diu el contrari. Cal prendre una certa dist\u00e0ncia per triar la millor tecnologia per a cada ocasi\u00f3. (https://www.bitecode.dev/p/hype-cycles)</p>"},{"location":"Moduls/ARXIU/2425/DWEC/desenvolupamentfrontend.html#posar-la-web-en-produccio","title":"Posar la Web en Producci\u00f3","text":"<p>Perqu\u00e8 una web amb HTML, CSS i Javascript funcioni tan sols necessitem un servidor web que serveixi <code>est\u00e0ticament</code> aquests fitxers quan se us faci una petici\u00f3 HTTP. Aquest servidor sol estar accessible per Internet mitjan\u00e7ant SFTP, SSH o qualsevol protocol. Aquests HTML, CSS i JS poden ser tractats de dues maneres:</p> <ol> <li>M\u00e8tode tradicional: Copiar tot el contingut de les carpetes al servidor al voltant del fitxer index.html.</li> <li>Eina de creaci\u00f3 de JavaScript: Utilitzar eines que compilen el codi font, el minifiquen, unifiquen, optimitzen i comprimeixen per millorar la velocitat de c\u00e0rrega i evitar incompatibilitats entre navegadors.</li> </ol> <p>M\u00e9s endavant, al cap\u00edtol del CI/CD parlarem d'una metodologia per automatitzar tot el proc\u00e9s. Amb aquesta metodologia podrem centrar-nos a escriure codi c\u00f2modament mentre que les nostres eines ho proven tot i ho posen en producci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html","title":"DOM","text":""},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#dom-en-javascript","title":"DOM en JavaScript","text":"<p>El DOM (Document Object Model) \u00e9s una interf\u00edcie de programaci\u00f3 que permet als scripts actualitzar el contingut, l'estructura i l'estil d'un document mentre aquest s'est\u00e0 visualitzant al navegador.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#estructura-del-document-html","title":"Estructura del Document HTML","text":"<p>El DOM representa l'estructura d'un document HTML i l'entorn en el que s'executa com una jerarquia d'objectes. Els principals components s\u00f3n:</p> <ul> <li>Window: Representa la finestra del navegador i \u00e9s l'objecte global en els scripts del navegador.</li> <li>Document: Representa el document HTML que es carrega a la finestra.</li> </ul> <p>A m\u00e9s de <code>window</code> i <code>document</code>, hi ha diversos altres objectes principals accessibles a l'entorn d'una p\u00e0gina web, aquests es denominen <code>Web APIs</code> :</p> <ol> <li>Navigator: Proporciona informaci\u00f3 sobre el navegador. -   <code>navigator.userAgent</code> -   <code>navigator.language</code> -   <code>navigator.geolocation</code> -   <code>navigator.getBattery()</code></li> <li>Screen: Proporciona informaci\u00f3 sobre la pantalla de l'usuari. -   <code>screen.width</code> -   <code>screen.height</code> -   <code>screen.availWidth</code> -   <code>screen.availHeight</code></li> <li>History: Permet la manipulaci\u00f3 de l'historial del navegador. -   <code>history.back()</code> -   <code>history.forward()</code> -   <code>history.go()</code></li> <li>Location: Proporciona la URL actual de la finestra. -   <code>location.href</code> -   <code>location.hostname</code> -   <code>location.pathname</code> -   <code>location.search</code> -   <code>location.hash</code> -   <code>location.reload()</code></li> <li>Storage APIs: LocalStorage, sessionStorage, IndexedDB</li> <li>Network APIs: XMLHttpRequest, fetch</li> <li>Console: Proporciona acc\u00e9s a la consola de depuraci\u00f3 del navegador.</li> <li>WebSocket: Proporciona una interf\u00edcie per a les connexions WebSocket.</li> <li>Worker: Permet l'execuci\u00f3 de scripts en segon pla.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#dom-window","title":"DOM: Window","text":"<p><code>Window</code> \u00e9s un objecte predefinit en els navegadors web que representa la finestra en la qual es mostra el document. Alguns m\u00e8todes importants de <code>window</code> inclouen:</p> <ul> <li><code>alert()</code>, <code>prompt()</code>: M\u00e8todes per mostrar di\u00e0legs.</li> <li><code>setTimeout(funci\u00f3, temps)</code>: Executa una funci\u00f3 despr\u00e9s d'un temps especificat.</li> <li><code>setInterval(funci\u00f3, temps)</code>: Executa una funci\u00f3 repetidament a intervals de temps especificats.</li> <li><code>clearTimeout(identificador)</code>: Cancel\u00b7la un <code>setTimeout</code> programat.</li> </ul> <p>Aquests m\u00e8todes no solen invocar-se amb <code>window.setTimeout()</code>, per exemple, perqu\u00e8 s\u00f3n accessibles directament en estar en l'\u00e0mbit global. De fet, qualsevol funci\u00f3 o variable <code>var</code> declarada en l'\u00e0mbit global passa a ser un atribut de l'objecte window:</p> <pre><code>var globalVar = \"I'm global!\";\nfunction globalFunction() { console.log(\"I'm a global function!\");\n}\nconsole.log(window.globalVar); // \"I'm global!\"\nwindow.globalFunction(); // \"I'm a global function!\"\n</code></pre> <p>Aix\u00f2 no passa amb variables declarades amb <code>let</code> o <code>const</code>. L'especificaci\u00f3 d'ECMAScript busca millorar la claredat i previsibilitat del codi. En evitar que let i const es converteixin en propietats de l'objecte window, es fomenta un disseny de codi m\u00e9s modular i amb menys depend\u00e8ncies globals.</p> <p>Window no est\u00e0 disponible quan programem per<code>Node</code> o altres int\u00e8rprets de servidor. Per aquesta ra\u00f3, el Javascript dedicat al DOM hauria d'estar separat de funcions normals, de manera que aquestes es puguin reaprofitar si part de la l\u00f2gica es mou al servidor.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#dom-buscar-nodes","title":"DOM: Buscar Nodes","text":"<p>Per manipular elements del DOM, primer els hem de trobar. Els m\u00e8todes m\u00e9s comuns s\u00f3n:</p> <ul> <li><code>document.getElementById(id)</code>: Troba un element pel seu ID.</li> <li><code>getElementsByTagName(tag)</code>: Troba tots els elements amb un nom d'etiqueta espec\u00edfic.</li> <li><code>getElementsByName(name)</code>: Troba tots els elements amb un nom especificat.</li> <li><code>querySelector(selector)</code>: Retorna el primer element que coincideix amb un selector CSS.</li> <li><code>querySelectorAll(selector)</code>: Retorna un <code>Nodelist</code> de tots els elements que coincideixen amb un selector CSS.</li> </ul> <pre><code>let element = document.getElementById('exampleId');\nlet elements = document.getElementsByTagName('p');\nlet elementByName = document.getElementsByName('exampleName');\nlet firstElement = document.querySelector('.exampleClass');\nlet allElements = document.querySelectorAll('.exampleClass');\n</code></pre> <p>El resultat dels m\u00e8todes que troben m\u00e9s d'un node \u00e9s un <code>HTMLCollection</code> o un <code>NodeList</code> . Si volem tractar-lo com un array cal convertir-lo amb <code>Array.from()</code> o <code>[... HTMLCollection]</code>.</p> <p>Sovint, necessitem accedir a un node espec\u00edfic a partir d'un ja existent al DOM. Per a aix\u00f2, podem utilitzar els seg\u00fcents m\u00e8todes aplicats a un element de l'arbre DOM:</p> <ul> <li><code>element.parentElement</code>:retorna l'element pare del node actual.</li> <li><code>element.children</code>: retorna una col\u00b7lecci\u00f3 de tots els elements fills del node actual (nom\u00e9s elements HTML, no inclou comentaris ni nodes de text).</li> <li><code>element.childNodes</code>: retorna una col\u00b7lecci\u00f3 de tots els nodes fills, incloent comentaris i nodes de text, per la qual cosa no es fa servir freq\u00fcentment.</li> <li><code>element.firstElementChild</code>: retorna el primer fill que \u00e9s un element HTML.</li> <li><code>element.firstChild</code>: retorna el primer node fill, incloent nodes de text o comentaris.</li> <li><code>element.lastElementChild</code>: similar a <code>firstElementChild</code>, per\u00f2 retorna l'\u00faltim fill element HTML.</li> <li><code>element.lastChild</code>: similar a <code>firstChild</code>, per\u00f2 retorna l'\u00faltim node fill.</li> <li><code>element.nextElementSibling</code>:retorna el seg\u00fcent germ\u00e0 que \u00e9s un element HTML.</li> <li><code>element.nextSibling</code>: retorna el seg\u00fcent node germ\u00e0, incloent nodes de text o comentaris.</li> <li><code>element.previousElementSibling</code>: similar a <code>nextElementSibling</code>, per\u00f2 retorna el germ\u00e0 anterior que \u00e9s un element HTML.</li> <li><code>element.previousSibling</code>: similar a <code>nextSibling</code>, per\u00f2 retorna el germ\u00e0 anterior.</li> <li><code>element.hasChildNodes()</code>:indica si el node t\u00e9 nodes fills.</li> <li><code>element.childElementCount</code>:retorna el nombre d'elements fills.</li> <li><code>element.closest(selector)</code>: retorna l'ancestre m\u00e9s proper que coincideix amb el selector donat. Per exemple, si l'element \u00e9s un <code>&lt;td&gt;</code> dins d'una taula, <code>element.closest('table')</code> retornar\u00e0 la taula a la qual pertany.</li> </ul> <p>El DOM proporciona accessos directes (dreceres) per obtenir elements comuns:</p> <ul> <li><code>document.documentElement</code>: obt\u00e9 el node de l'element<code>&lt;html&gt;</code>.</li> <li><code>document.head</code>: obt\u00e9 el node de l'element <code>&lt;head&gt;</code>.</li> <li><code>document.body</code>: obt\u00e9 el node de l'element <code>&lt;body&gt;</code>.</li> <li><code>document.title</code>: obt\u00e9 el node de l'element <code>&lt;title&gt;</code>.</li> <li><code>document.links</code>: obt\u00e9 una col\u00b7lecci\u00f3 de tots els hipervincles del document.</li> <li><code>document.anchors</code>: obt\u00e9 una col\u00b7lecci\u00f3 de totes les \u00e0ncores del document.</li> <li><code>document.forms</code>: obt\u00e9 una col\u00b7lecci\u00f3 de tots els formularis del document.</li> <li><code>document.images</code>: obt\u00e9 una col\u00b7lecci\u00f3 de totes les imatges del document.</li> <li><code>document.scripts</code>: obt\u00e9 una col\u00b7lecci\u00f3 de tots els scripts del document.</li> </ul> <p>No hi ha una manera millor que d'altres en totes les ocasions de trobar  els nodes. Si no volem fallar es pot fer servir <code>querySelector</code>i usar selectors de CSS. D'aquesta manera, canviar el selector \u00e9s canviar la \"query\". No obstant aix\u00f2, els altres selectors m\u00e9s primitius pot que siguin m\u00e9s r\u00e0pids en certes ocasions.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#dom-modificar-nodes","title":"DOM: Modificar Nodes","text":"<p>Un cop hem trobat els nodes, podem modificar-los. Alguns m\u00e8todes \u00fatils inclouen:</p> <ul> <li><code>.innerHTML</code>, <code>.innerText</code>, <code>.outerHTML</code>: Per canviar el contingut HTML o text d'un element.</li> <li><code>.insertAdjacentHTML(position, text)</code>: Insereix text HTML en una posici\u00f3 espec\u00edfica. https://lenguajejs.com/dom/crear/insertadjacent-api/</li> <li><code>.append(content, element)</code>, <code>.prepend(content, element)</code>: Afegeix contingut al principi o al final d'un element.</li> <li><code>.after()</code>, <code>.before()</code>: Insereix un element abans o despr\u00e9s de l'element actual.</li> <li><code>.cloneNode(deep)</code>: Clona un node, amb o sense els seus fills.</li> <li><code>.remove()</code>: Elimina un node.</li> </ul> <p>M\u00e8todes m\u00e9s antics per\u00f2 encara en \u00fas inclouen <code>removeChild()</code> i <code>appendChild()</code>.</p> <pre><code>let element = document.getElementById('exampleId');\nelement.innerHTML = 'Nou contingut';\nelement.insertAdjacentHTML('beforeend', '&lt;p&gt;M\u00e9s contingut&lt;/p&gt;');\nelement.append('Text addicional');\nelement.remove();\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#atributs","title":"Atributs","text":"<p>Els elements solen tenir atributs. Alguns s\u00f3n especials com el <code>id</code> o la <code>class</code>. El <code>id</code>est\u00e0 accessible directament com a atribut de l'element, aix\u00ed com el <code>className</code>, tot i que despr\u00e9s veurem que \u00e9s millor manipular-lo d'una altra manera. Altres atributs com <code>value</code> en els <code>Input</code>o <code>scr</code> en els <code>&lt;img&gt;</code> tamb\u00e9 poden ser llegits i modificats com a propietats. Es tracta dels atributs est\u00e0ndard.</p> <p>Per als atributs que no tenen acc\u00e9s directe perqu\u00e8 no s\u00f3n est\u00e0ndard, podem fer servir <code>setAttribute()</code> <code>getAttribute()</code>, <code>hasAttribute()</code> o <code>removeAttribute()</code>:</p> <pre><code>const button = document.querySelector(\"button\");\n\nbutton.setAttribute(\"name\", \"helloButton\");\nbutton.setAttribute(\"disabled\", \"\");\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#propietats","title":"Propietats","text":"<p>At\u00e8s que els elements HTML en ser analitzats i convertits al DOM es converteixen en objectes, aquests s\u00f3n manipulables com qualsevol objecte, podent afegir o modificar propietats, fins i tot aquelles que venen en l'HTML com a atributs est\u00e0ndard.</p> <p>Atributs com a <code>id</code> se sincronitzen perfectament amb la propietat. Altres com <code>value</code> no se sincronitzen directament: https://es.javascript.info/dom-attributes-and-properties#sincronizacion-de-propiedad-y-atributo</p> <p>Hi ha uns atributs que se sincronitzen de forma especial amb les propietats. S\u00f3n els que comencen per <code>data-</code>, que es guarden en un objecte <code>.dataset</code> de l'element en el DOM. Aix\u00f2 ho expliquem a la secci\u00f3 de Atributs de dades.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#dom-estils","title":"DOM: Estils","text":"<p>Per manipular els estils d'un element, podem usar propietats de estil i classes CSS.</p> <ul> <li><code>.style.property</code>: Modifica un estil CSS directament.</li> <li><code>.className</code>: Canvia el nom de la classe de l'element.</li> <li><code>.classList.add()</code>, <code>.classList.toggle()</code>, <code>.classList.remove()</code>, <code>.classList.replace()</code>: M\u00e8todes per manipular classes CSS de manera m\u00e9s din\u00e0mica.</li> </ul> <pre><code>let element = document.getElementById('exampleId');\nelement.style.color = 'blue';\nelement.classList.add('new-class');\nelement.classList.remove('old-class');\n</code></pre> <p>ClassName no s'hauria de fer servir, ja que pot molestar si es fa servir classList d'altra banda. Usarem classList en totes les ocasions excepte per a eliminar totes les classes.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#creacio-delements-plantilles","title":"Creaci\u00f3 d'elements (plantilles)","text":"<p>Se pueden crear elementos totalmente de forma program\u00e1tica. Pero puede ser tedioso. Muchas veces, si sabemos que hay fragmentos de HTML bastante est\u00e1ticos, podemos usar <code>innerHTML</code> y <code>.append()</code> con plantillas creadas mediante strings.</p> <p>Para crear elementos del DOM mediante plantillas hay muchas formas. Obviaremos las m\u00e1s farragosas y nos centraremos en aquellas que son m\u00e1s r\u00e1pidas.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#creacion-de-elementos-template-literal","title":"Creaci\u00f3n de Elementos: Template Literal","text":"<p>Els template literals i les interpolacions de cadenes permeten crear contingut din\u00e0mic de manera senzilla.</p> <pre><code>function generateGraphCard(graph) {\n    let cardTemplate = document.createElement('div');\n    cardTemplate.classList.add('col');\n    cardTemplate.innerHTML = `\n        &lt;div class=\"card\"&gt;\n            &lt;div class=\"card-header\"&gt;${graph.title}&lt;/div&gt;\n            &lt;div class=\"card-body\"&gt;\n                &lt;div class=\"graph\"&gt;&lt;/div&gt;\n                &lt;p class=\"card-text\"&gt;${graph.description}&lt;/p&gt;\n                &lt;a href=\"#/graph/${graph.id}\" class=\"btn btn-primary\"&gt;Full screen&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;`;\n    let graphContainer = cardTemplate.querySelector('.graph');\n    graphContainer.append(graph.Data ? generateBarGraph(graph.Data) : graphPlaceholder());\n    return cardTemplate;\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#creacio-delements-mitjancant-tagged-template-literals","title":"Creaci\u00f3 d'elements mitjan\u00e7ant Tagged Template Literals","text":"<p>Els \"Tagged Template Literals\" s\u00f3n una caracter\u00edstica de JavaScript que et permet crear funcions que accepten una plantilla literal i les seves interpolacions. Aquestes funcions s\u00f3n invocades de forma molt diferent, ja que no tenen (parentesi) i s'ent\u00e9n que el primer argument \u00e9s la plantilla i la resta d'arguments s\u00f3n els diferents valors de les variables interpolades.</p> <p>En lloc de rebre una sola cadena de text amb les interpolacions <code>${}</code>, la funci\u00f3 d'etiqueta rep dos arguments separats: un array de strings i un arrelament amb els valors interpolats.</p> <pre><code>(()=&gt;{\n  function miTaggedTemplateLiteral(strings, ...values) { return console.log(strings, ...values);\n  }\n  let nombre = \"Carlos\";\n  let edad = 32;\n  miTaggedTemplateLiteral`Hola soy ${nombre} y tengo ${edad} a\u00f1os`;\n})();\n</code></pre> <pre><code>[ \"Hola s\u00f3c \", \" i tinc \", \" anys\" ] Carles 32\n</code></pre> <p>En el seg\u00fcent exemple, extret de https://exploringjs.com/es6/ch_template-literals.html#sec_html-tag-function-implementation es pot veure com fer una funci\u00f3 per a tagged temperate literal que personalitzi una plantilla.</p> <pre><code>function htmlEscape(str) {\n  return str.replace(/&amp;/g, '&amp;amp;') // first!\n            .replace(/&gt;/g, '&amp;gt;')\n            .replace(/&lt;/g, '&amp;lt;')\n            .replace(/\"/g, '&amp;quot;')\n            .replace(/'/g, '&amp;#39;')\n            .replace(/`/g, '&amp;#96;');\n}\nfunction html(templateObject, ...substs) {\n  // Use raw template strings: we don\u2019t want\n  // backslashes (\\n etc.) to be interpreted\n  const raw = templateObject.raw;\n\n  let result = '';\n\n  substs.forEach((subst, i) =&gt; {\n      // Retrieve the template string preceding\n      // the current substitution\n      let lit = raw[i];\n\n      // In the example, map() returns an Array:\n      // If `subst` is an Array (and not a string),\n      // we turn it into a string\n      if (Array.isArray(subst)) {\n          subst = subst.join('');\n      }\n\n      // If the substitution is preceded by an exclamation\n      // mark, we escape special characters in it\n      if (lit.endsWith('!')) {\n          subst = htmlEscape(subst);\n          lit = lit.slice(0, -1);\n      }\n      result += lit;\n      result += subst;\n  });\n  // Take care of last template string\n  result += raw[raw.length-1]; // (A)\n\n  return result;\n}\nconst tmpl = addrs =&gt; html`\n    &lt;table&gt;\n    ${addrs.map(addr =&gt; html`\n        &lt;tr&gt;&lt;td&gt;!${addr.first}&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;!${addr.last}&lt;/td&gt;&lt;/tr&gt;\n    `)}\n    &lt;/table&gt;\n`;\nconst data = [\n    { first: '&lt;Jane&gt;', last: 'Bond' },\n    { first: 'Lars', last: '&lt;Croft&gt;' },\n];\nconsole.log(tmpl(data));\n</code></pre> <pre><code>    &lt;table&gt;\n\n        &lt;tr&gt;&lt;td&gt;&amp;lt;Jane&amp;gt;&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;Bond&lt;/td&gt;&lt;/tr&gt;\n\n        &lt;tr&gt;&lt;td&gt;Lars&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;&amp;lt;Croft&amp;gt;&lt;/td&gt;&lt;/tr&gt;\n\n    &lt;/table&gt;\n</code></pre> <p>Aquest seria el resultat:</p> &lt;Jane&gt; Bond Lars &lt;Croft&gt;"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#creacio-delements-interpolacions-wrapper-fragments","title":"Creaci\u00f3 d'Elements: Interpolacions, Wrapper, fragments","text":"<p>Podem fer servir funcions per extreure i implementar interpolacions en template literals.</p> <pre><code>function extractInterpolations(template) {\n    let regex = /\\{\\{([^\\{\\}]*)\\}\\}/g;\n    return [...template.matchAll(regex)];\n}\n\nfunction applyInterpolations(template, data) {\n    return extractInterpolations(template).reduce((T, [I, att]) =&gt; \n        T = T.replace(I, data[att]), template);\n}\n\nfunction wrapElement(innerHTML) {\n    let wrapper = document.createElement('div');\n    wrapper.innerHTML = innerHTML;\n    return wrapper.firstElementChild;\n}\n\nfunction renderNews(news) {\n    let newsTemplate = `\n        &lt;article id=\"article_{{id}}\"&gt;\n            &lt;a href=\"{{link}}\"&gt;&lt;h2&gt;{{headline}}&lt;/h2&gt;&lt;/a&gt;\n            &lt;time&gt;{{date}}&lt;/time&gt;&lt;address&gt;{{authors}}&lt;/address&gt;\n            &lt;p&gt;{{short_description}}&lt;/p&gt;\n            &lt;p&gt;{{category}}&lt;/p&gt;\n        &lt;/article&gt;`;\n    return wrapElement(applyInterpolations(newsTemplate, news));\n}\n</code></pre> <p>Aquest exemple \u00e9s una mica m\u00e9s complicat del que s'espera poder fer a aquestes al\u00e7ades. No obstant aix\u00f2, \u00e9s interessant intentar entendre el seu funcionament. S'hi fan servir <code>{{}}</code> com a interpolacions com a <code>Angular</code>. Aquesta pot ser una base per fer un motor de plantilles com tenen els frameworks. D'altra banda, es crea un div que actua de <code>Wrapper</code>, \u00e9s a dir, que envolta el veritable element per poder treballar nom\u00e9s amb strings fins al final, per\u00f2 retornar un <code>Element</code>, gr\u00e0cies a <code>innerHTML</code>.</p> <p>Com a millora a l'exemple anterior, el <code>Wrapper</code> pot ser un <code>fragment</code>. Aquest t\u00e9 millor rendiment, no nom\u00e9s permet treure el primer element fill, per la qual cosa no necessitem un divan que els contingui i no genera un node addicional. \u00c9s molt eficient inserint m\u00faltiples nodes, per inserir en bucle.</p> <pre><code>function renderComments(comments) {\n    const fragment = document.createDocumentFragment();\n\n    comments.forEach(comment =&gt; {\n        const commentElement = document.createElement('div');\n        commentElement.className = 'comment';\n        commentElement.innerHTML = `\n            &lt;h4&gt;${comment.author}&lt;/h4&gt;\n            &lt;p&gt;${comment.text}&lt;/p&gt;\n            &lt;time&gt;${comment.date}&lt;/time&gt;\n        `;\n        fragment.appendChild(commentElement); // Afegir cada comentari al fragment, no al DOM\n    });\n\n   return fragment;\n}\n\n// Dades d'exemple\nconst comments = [\n    { author: \"Aina\", text: \"Bon article!\", date: \"2024-11-11\" },\n    { author: \"Lluis\", text: \"Gr\u00e0cies per la informaci\u00f3.\", date: \"2024-11-10\" },\n    { author: \"Marta\", text: \"M'ha resultat molt \u00fatil.\", date: \"2024-11-09\" }\n];\n\n// Crida a la funci\u00f3 per renderitzar els comentaris\n document.getElementById('comments-section').appendChild(renderComments(comments)); \n // Inserir tots els comentaris alhora;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#creacio-delements-ambtemplate","title":"Creaci\u00f3 d'elements amb<code>&lt;template&gt;</code>","text":"<p>L'etiqueta <code>&lt;template&gt;</code> \u00e9s especial. El seu interior no es renderitza com la resta, per\u00f2 queda accessible per ser buscat. La utilitat \u00e9s crear plantilles en HTML que puguin ser clonades i emplenades com es desitja.</p> <p>Vegem aquest HTML extret del web de refer\u00e8ncia:</p> <p>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template:</p> <pre><code>&lt;table id=\"producttable\"&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;td&gt;UPC_Code&lt;/td&gt;\n      &lt;td&gt;Product_Name&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;!-- dades opcionals es poden incloure aqu\u00ed opcionalment --&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;template id=\"productrow\"&gt;\n  &lt;tr&gt;\n    &lt;td class=\"record\"&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/template&gt;\n</code></pre> <p>I amb aquest javascript obtenim el contingut del temperat, es clona i s'omple les vegades que sigui necessari:</p> <pre><code>// Test to see if the browser supports the HTML template element by checking\n// for the presence of the template element's content attribute.\nif (\"content\" in document.createElement(\"template\")) {\n  // Instantiate the table with the existing HTML tbody\n  // and the row with the template\n  const tbody = document.querySelector(\"tbody\");\n  const template = document.querySelector(\"#productrow\");\n\n  // Clone the new row and insert it into the table\n  const clone = template.content.cloneNode(true);\n  let td = clone.querySelectorAll(\"td\");\n  td[0].textContent = \"1235646565\";\n  td[1].textContent = \"Stuff\";\n\n  tbody.appendChild(clone);\n\n  // Clone the new row and insert it into the table\n  const clone2 = template.content.cloneNode(true);\n  td = clone2.querySelectorAll(\"td\");\n  td[0].textContent = \"0384928528\";\n  td[1].textContent = \"Acme Kidney Beans 2\";\n\n  tbody.appendChild(clone2);\n} else {\n  // Find another way to add the rows to the table because\n  // the HTML template element is not supported.\n}\n</code></pre> <p>Qualsevol de les formes que hem vist per crear elements, mitjan\u00e7ant template literal o funcions tagged, creant les nostres interpolacions o amb templates \u00e9s v\u00e0lida i combinable. Per aconseguir el que els frameworks fan amb els seus motors de plantilla hi ha molt de cam\u00ed per fer,  perqu\u00e8 no s'ha parlat del <code>shadow DOM</code> i altres t\u00e8cniques avan\u00e7ades com els <code>custom elements</code> per aconseguir plantilles amb reactivitat. Si aconsegueixes fer un motor de plantilles suficientment gen\u00e8ric per a l'aplicaci\u00f3 en la qual estem treballant, l'\u00fas de frameworks queda molt menys justificat.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#esperar-a-que-es-carregui-el-dom","title":"Esperar a que es carregui el DOM","text":"<p>Podem assegurar-nos que el DOM estigui completament carregat abans d'executar el nostre script utilitzant <code>DOMContentLoaded</code>.</p> <pre><code>(function () {\n    \"use strict\";\n    document.addEventListener(\"DOMContentLoaded\", function () {\n        for (let i = 0; i &lt; 100; i++) {\n            let container = document.getElementById(\"content\");\n            let number = document.createElement(\"p\");\n            number.innerHTML = i;\n            container.appendChild(number);\n        }\n    });\n})();\n</code></pre> <p>Tamb\u00e9 podem col\u00b7locar el nostre script al final del cos (<code>body</code>)del document HTML.</p> <p>Si, a m\u00e9s, hi afegim l'atribut <code>defer</code> a un script, aquest es descarregar\u00e0 de manera as\u00edncrona i s'executar\u00e0 quan l'HTML hagi estat totalment interpretat i just abans que <code>DOMContentLoaded</code>.</p> <p>Si cal esperar que carregui tamb\u00e9 tot el CSS, \u00e9s a dir el <code>CSSOM</code>, podem rec\u00f3rrer a l'esdeveniment <code>load</code>, que espera a carregar i interpretar tot el CSS. Per\u00f2 si no \u00e9s necessari, \u00e9s millor esperar nom\u00e9s al DOM. Aix\u00f2 \u00e9s perqu\u00e8 hi ha recursos molt pesants com imatges o v\u00eddeos que pot fins i tot que no arribin a carregar.</p> <p>En general, recomanarem fer servir <code>DOMContentLoaded</code>en comptes de posar el script al final o <code>load</code>perqu\u00e8 en ser executat al principi, ja hi ha coses que es pot anar executant sense necessitat de DOM abans que carregui totalment. En qualsevol cas, els script en M\u00f2duls sempre s'executen en mode<code>defer</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#atributs-de-dades","title":"Atributs de Dades","text":"<p>HTML5 permet agregar atributs personalitzats no visuals a les etiquetes utilitzant <code>data-*</code>. Aquests atributs poden ser accessibles a trav\u00e9s de JavaScript fent servir <code>dataset</code>.</p> <pre><code>&lt;article\n    id=\"electriccars\"\n    data-columns=\"3\"\n    data-index-number=\"12314\"\n    data-parent=\"cars\"&gt;\n    ...\n&lt;/article&gt;\n</code></pre> <pre><code>let article = document.getElementById('electriccars');\nconsole.log(article.dataset.columns); // 3\nconsole.log(article.dataset.indexNumber); // 12314\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#formularis-a-javascript","title":"Formularis a JavaScript","text":"<p>En una aplicaci\u00f3 web, la validaci\u00f3 dels formularis es realitza tant en el costat del client com en el del servidor.</p> <p>De fet, l'\u00fanica validaci\u00f3 estrictament necess\u00e0ria s'ha de fer en el servidor per evitar peticions il\u00b7legals per clients com postman o curl.</p> <p>Per\u00f2 es pot fer servir Javascript per a molt m\u00e9s que validar formularis. Per exemple, ens pot ajudar a autocompletar camps, descarregar dades en segon pla o tractar amb imatges o dades complexes abans d'enviar al servidor.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#atributs-de-formularis","title":"Atributs de Formularis","text":"<p>El contingut dels camps d'entrada en un formulari es pot visualitzar i modificar utilitzant l'atribut <code>value</code>. Altres elements del formulari, com els botons d'opci\u00f3 (r\u00e0dio button) i les caselles de verificaci\u00f3 (checkbox), han de tenir un <code>name</code> com\u00fa i tamb\u00e9 utilitzen els atributs <code>value</code> i <code>checked</code>. Per als elements <code>select</code>, s'utilitzen els atributs <code>options</code> i <code>selectedIndex</code>.</p> <p>Observa l'exemple a continuaci\u00f3, que fa servir la manera (obsoleta) d'associar esdeveniments <code>onclick</code> per executar una funci\u00f3 que informi dels valors dels inputs del formulari:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Formulari d'Exemple&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"exampleForm\"&gt;\n        &lt;label for=\"textInput\"&gt;Text:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"textInput\" value=\"Text inicial\"&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label&gt;Opcions:&lt;/label&gt;\n        &lt;input type=\"radio\" name=\"options\" value=\"opcio1\" checked&gt; Opci\u00f3 1\n        &lt;input type=\"radio\" name=\"options\" value=\"opcio2\"&gt; Opci\u00f3 2&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"checkboxInput\"&gt;Casella:&lt;/label&gt;\n        &lt;input type=\"checkbox\" id=\"checkboxInput\" checked&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"selectInput\"&gt;Selecciona:&lt;/label&gt;\n        &lt;select id=\"selectInput\"&gt;\n            &lt;option value=\"1\"&gt;Opci\u00f3 1&lt;/option&gt;\n            &lt;option value=\"2\" selected&gt;Opci\u00f3 2&lt;/option&gt;\n            &lt;option value=\"3\"&gt;Opci\u00f3 3&lt;/option&gt;\n        &lt;/select&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;button type=\"button\" onclick=\"manipulateValues()\"&gt;Veure i Manipular Valors&lt;/button&gt;\n    &lt;/form&gt;\n\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>function manipulateValues() {\n    // Obtenir el valor del camp de text\n    let textInput = document.getElementById('textInput');\n    console.log('Valor del camp de text:', textInput.value);\n    textInput.value = 'Nou text';\n\n    // Obtenir el valor del radi button seleccionat\n    let selectedOption = document.querySelector('input[name=\"options\"]:checked');\n    console.log('Valor del radi button seleccionat:', selectedOption.value);\n    // Canviar la selecci\u00f3 del r\u00e0dio button\n    document.querySelector('input[name=\"options\"][value=\"opcio2\"]').checked = true;\n\n    // Obtenir el valor del checkbox\n    let checkboxInput = document.getElementById('checkboxInput');\n    console.log('Checkbox est\u00e0 marcat:', checkboxInput.checked);\n    // Canviar l'estat del checkbox\n    checkboxInput.checked = !checkboxInput.checked;\n\n    // Obtenir el valor del select\n    let selectInput = document.getElementById('selectInput');\n    console.log('Valor del select:', selectInput.value);\n    // Canviar la selecci\u00f3 del select\n    selectInput.value = '3';\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#cicle-tradicional-del-formulari","title":"Cicle Tradicional del Formulari","text":"<p>Tradicionalment, un formulari est\u00e0 dissenyat per enviar dades mitjan\u00e7ant HTTP al servidor. En enviar (submit) un formulari, el navegador empaqueta les dades i les envia utilitzant el m\u00e8tode HTTP especificat (com GET o POST). Els formularis poden incloure validaci\u00f3 interna mitjan\u00e7ant HTML, cosa que \u00e9s m\u00e9s r\u00e0pida que JavaScript per\u00f2 ofereix menys control i personalitzaci\u00f3. La validaci\u00f3 interna d'HTML genera pseudo-classes que poden estilitzar-se amb CSS.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Formulari amb Validaci\u00f3&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"validationForm\"&gt;\n        &lt;label for=\"name\"&gt;Nom:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"email\"&gt;Correu Electr\u00f2nic:&lt;/label&gt;\n        &lt;input type=\"email\" id=\"email\" name=\"email\" required&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"password\"&gt;Contrasenya:&lt;/label&gt;\n        &lt;input type=\"password\" id=\"password\" name=\"password\" required minlength=\"6\"&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n    &lt;/form&gt;\n\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>/* Estils b\u00e0sics */\nform {\n    width: 300px;\n    margin: 0 auto;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 5px;\n}\n\ninput {\n    width: 100%;\n    padding: 8px;\n    margin-bottom: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\n/* Pseudo-classes per a la validaci\u00f3 */\ninput:required {\n    border-left: 5px solid #0000FF; /* Vora blava per a camps requerits */\n}\n\ninput:valid {\n    border-left: 5px solid #00FF00; /* Vora verda per a camps v\u00e0lids */\n}\n\ninput:invalid {\n    border-left: 5px solid #FF0000; /* Vora vermell per a camps inv\u00e0lids */\n}\n\n/* Pseudo-classe per a camp enfocat */\ninput:focus {\n    outline: none;\n    border-color: #66AFE9;\n    box-shadow: 0 0 8px rgba(102, 175, 233, 0.6);\n}\n</code></pre> <pre><code>document.getElementById('validationForm').addEventListener('submit', function(event) {\n    event.preventDefault(); // Evita l'enviament del formulari per a la demostraci\u00f3\n    alert('Formulari enviat correctament (validaci\u00f3 exitosa)');\n});\n</code></pre> <p>Aquest exemple demostra com utilitzar pseudo-classes CSS per estilitzar formularis amb validaci\u00f3 interna en HTML.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#cicle-del-formulari-amb-javascript","title":"Cicle del Formulari amb JavaScript","text":"<p>Podem interceptar i aturar el cicle per defecte d'un formulari per validar-lo i enviar-lo utilitzant JavaScript. D'aquesta manera, podem evitar tenir un bot\u00f3 <code>submit</code> i controlar completament el proc\u00e9s d'enviament. Si el formulari envia dades al servidor i es refresca, JavaScript perd el control del programa. Per evitar aix\u00f2, podem utilitzar <code>preventDefault()</code> dins de l'esdeveniment <code>submit</code> o retornar <code>false</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#exemple-dinterceptar-submit-amb-javascript","title":"Exemple d'Interceptar Submit amb JavaScript","text":"<p>Podem manejar esdeveniments de formularis per personalitzar el seu comportament. Un exemple com\u00fa \u00e9s l'\u00fas de l'esdeveniment <code>onsubmit</code> per executar una funci\u00f3 de validaci\u00f3 abans d'enviar el formulari. Si la funci\u00f3 de validaci\u00f3 retorna <code>true</code>, el formulari s'envia; altrament, es cancel\u00b7la l'enviament.</p> <pre><code>&lt;form id=\"formulario\" onsubmit=\"return validar();\"&gt;\n  &lt;input type=\"text\" id=\"phone-number\" required&gt;\n  &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\nfunction validar() {\n  var phoneNumber = document.getElementById('phone-number').value;\n  var phoneRGEX = /^[(]{0,1}[0-9]{3}[)]{0,1}[-\\s\\.]{0,1}[0-9]{3}[-\\s\\.]{0,1}[0-9]{4}$/;\n  var phoneResult = phoneRGEX.test(phoneNumber);\n  alert(\"phone: \" + phoneResult);\n  return phoneResult; // Retorna true si \u00e9s v\u00e0lid, altrament false\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#enviar-formulari-per-javascript","title":"Enviar Formulari per JavaScript","text":"<p>Podem enviar un formulari mitjan\u00e7ant JavaScript utilitzant el m\u00e8tode <code>submit()</code>. Aix\u00f2 \u00e9s \u00fatil quan volem enviar el formulari despr\u00e9s de realitzar alguna operaci\u00f3 addicional o validaci\u00f3 personalitzada.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/dom.html#exemple-denviament-per-javascript","title":"Exemple d'Enviament per JavaScript","text":"<pre><code>&lt;button onclick=\"enviarFormulari()\"&gt;Enviar&lt;/button&gt;\n\n&lt;script&gt;\nfunction enviarFormulari() {\n  let formulari = document.getElementById(\"formulari\");\n  formulari.submit();\n}\n&lt;/script&gt;\n</code></pre> <p>Per\u00f2 si no ens val amb enviar el formulari amb <code>submit()</code> i volem manipular les seves dades abans d'enviar o enviar una API per POST manualment, obtindrem el contingut input per input o amb <code>FormData</code>:</p> <pre><code>div.querySelector(\"#buttonSubmit\").addEventListener('click', async (event) =&gt; {\n      event.preventDefault();\n      const newProfile = Object.fromEntries(new FormData(div.querySelector('form')).entries());\n      updateCurrentProfile(newProfile); // Li passem un objecte. Tot i que en una petici\u00f3 POST tradicional podem enviar un FormData directament amb fetch\n    });\n</code></pre> <p>Mirar el cap\u00edtol de comunicaci\u00f3 amb el servidor per a m\u00e9s informaci\u00f3 i exemples amb 'FormData</p> <p> <p>Documentaci\u00f3 encara en proc\u00e9s </p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html","title":"Introducci\u00f3 a Git","text":"<p>Al m\u00f3n del desenvolupament web, \u00e9s crucial comptar amb eines i t\u00e8cniques que permetin gestionar i col\u00b7laborar en projectes de manera eficient. En aquest article introductori, abordarem una de les eines m\u00e9s utilitzades a la ind\u00fastria per al control de versions: Git.</p> <p></p> <p>L'objectiu \u00e9s proporcionar una base s\u00f2lida per comprendre i aplicar Git als teus futurs projectes.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#que-es-git","title":"Qu\u00e8 \u00e9s Git","text":"<p>Git \u00e9s un sistema de control de versions distribu\u00eft, creat el 2005 per Linus Torvalds, el creador del nucli de Linux. Des de llavors, s'ha convertit en l'eina est\u00e0ndard per al control de versions a la majoria dels projectes de programari. La popularitat de Git es deu a la facilitat d'\u00fas, robustesa i capacitat per treballar de forma descentralitzada.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#control-de-versions","title":"Control de versions","text":"<p>El control de versions \u00e9s una t\u00e8cnica que permet portar un registre dels canvis realitzats en un conjunt de fitxers al llarg del temps. Amb Git, els desenvolupadors poden treballar en diferents branques d'un projecte, cadascuna amb les seves pr\u00f2pies modificacions i caracter\u00edstiques. Despr\u00e9s aquestes branques es poden combinar (mergeix) per unificar els canvis en una sola l\u00ednia de desenvolupament.</p> <p>Un dels principals avantatges de Git \u00e9s la seva arquitectura distribu\u00efda. A difer\u00e8ncia d'altres sistemes de control de versions centralitzats, cada desenvolupador t\u00e9 la seva pr\u00f2pia c\u00f2pia completa del repositori, incloent-hi tot l'historial de canvis. Aix\u00f2 permet que els desenvolupadors treballin de forma independent i sense connexi\u00f3 a internet, sincronitzant els canvis amb altres repositoris quan sigui necessari.</p> <p>Un repositori \u00e9s una carpeta on guardarem el nostre projecte: pot ser internet o qualsevol lloc del nostre equip.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#comencar-a-utilitzar-git","title":"Comen\u00e7ar a utilitzar Git","text":"<p>Per comen\u00e7ar a utilitzar Git, cal instal\u00b7lar el programari al vostre equip i configurar la vostra identitat. Despr\u00e9s, pots crear un nou repositori o clonar-ne un d'existent. El flux de treball b\u00e0sic de Git implica realitzar canvis als fitxers, afegir-los a l'\u00e0rea de preparaci\u00f3 (staging), confirmar (commit) els canvis i, finalment, enviar (push) els canvis al repositori remot.</p> <p>En el context del desenvolupament web en entorn client, Git \u00e9s especialment \u00fatil per gestionar els canvis al codi font de les aplicacions i col\u00b7laborar amb altres desenvolupadors. Per exemple, podeu utilitzar Git per mantenir un historial dels canvis als vostres fitxers HTML, CSS i JavaScript, i col\u00b7laborar amb altres membres de l'equip en la implementaci\u00f3 de noves caracter\u00edstiques o la correcci\u00f3 d'errors.</p> <p>A m\u00e9s, l'ecosistema de Git inclou plataformes com GitHub, GitLab i Bitbucket, que ofereixen serveis addicionals per gestionar i col\u00b7laborar en projectes de programari. Aquestes plataformes permeten crear repositoris en l\u00ednia, gestionar permisos d'acc\u00e9s, fer revisions de codi i m\u00e9s.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#installar-git","title":"Instal\u00b7lar git","text":"<p>Per instal\u00b7lar Git, tan sols has d'anar a aquest enlla\u00e7 https://git-scm.com/downloads i seguir els passos.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#inicialitzar-un-repositori-git","title":"Inicialitzar un repositori Git","text":"<p>Per comen\u00e7ar a utilitzar Git en un projecte, primer cal inicialitzar un repositori. Des de la terminal, navega fins a la carpeta del projecte i executa la seg\u00fcent ordre:</p> <p><code>git init</code></p> <p>Aix\u00f2 crear\u00e0 una carpeta oculta anomenada \u201c.git\u201d al directori del projecte, on s'emmagatzemar\u00e0 tota la informaci\u00f3 del repositori i ja estarem a punt per comen\u00e7ar a llan\u00e7ar ordres per gestionar el nostre repositori.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#ordres-mes-habituals-de-git","title":"Ordres m\u00e9s habituals de Git","text":"<p>Ara que ja coneixem els avantatges de Git, hem instal\u00b7lat el programari i tenim un repositori funcionant, \u00e9s hora d'aprendre com funciona i repassar les ordres m\u00e9s habituals amb exemples pr\u00e0ctics.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#afegeix-fitxers-a-larea-de-preparacio-staging","title":"Afegeix fitxers a l'\u00e0rea de preparaci\u00f3 (staging)","text":"<p>Per afegir fitxers a l'\u00e0rea de preparaci\u00f3, utilitzem l'ordre \u201cgit add\u201d. Per exemple, si volem afegir un fitxer anomenat \u201cindex.html\u201d, executem:</p> <p><code>git afegir index.html</code></p> <p>Tamb\u00e9 \u00e9s possible afegir tots els fitxers del projecte amb una sola ordre:</p> <p><code>git add.</code></p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#confirmar-canvis-commit","title":"Confirmar canvis (commit)","text":"<p>Un cop els fitxers estiguin a l'\u00e0rea de preparaci\u00f3, podem confirmar els canvis realitzats amb l'ordre \u201cgit commit\u201d. Sempre cal incloure un missatge descriptiu que expliqui els canvis realitzats:</p> <p><code>git commit -m \"Creaci\u00f3 del fitxer index.html\"</code></p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#consulteu-lhistorial-de-canvis-log","title":"Consulteu l'historial de canvis (log)","text":"<p>Podem veure l'historial de canvis del repositori utilitzant l'ordre \u201cgit log\u201d:</p> <p><code>git log</code></p> <p>Aix\u00f2 mostrar\u00e0 una llista dels commits realitzats juntament amb informaci\u00f3 detallada, com ara l'autor, la data i el missatge del commit.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#crear-i-canviar-a-una-nova-branca-branch","title":"Crear i canviar a una nova branca (branch)","text":"<p>Per crear una nova branca i canviar-la, utilitzem l'ordre \u201cgit checkout\u201d amb l'opci\u00f3 \u201c-b\u201d:</p> <p><code>git checkout -b nova-branca</code></p> <p>Aix\u00f2 ens permetr\u00e0 treballar a la nova branca sense afectar el codi de la branca principal (generalment anomenada \u201cmain\u201d o \u201cmaster\u201d).</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#fusionar-branques-merge","title":"Fusionar branques (merge)","text":"<p>Quan h\u00e0gim acabat de treballar en una branca i volem unificar els canvis amb la branca principal, primer canviem a la branca principal:</p> <p><code>git checkout main</code></p> <p>Despr\u00e9s, fusionem la branca que cont\u00e9 els canvis:</p> <p><code>git merge nova-branca</code></p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#enviar-canvis-al-repositori-remot-push","title":"Enviar canvis al repositori remot (push)","text":"<p>Per enviar els canvis al repositori remot, primer hem de connectar el nostre repositori local amb el remot utilitzant l'ordre \u201cgit remote\u201d:</p> <p><code>git remote add origin URL_DEL_REPOSITORI_REMOT</code></p> <p>Despr\u00e9s, enviem els canvis amb l'ordre \u201cgit push\u201d:</p> <p><code>git push -u origin principal</code></p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#altres-ordres-utils","title":"Altres ordres \u00fatils","text":"<p>Coneixent tot aix\u00f2 ja podem treballar amb el b\u00e0sic del sistema de control de versions Git, per\u00f2, \u00e9s possible que vulguem realitzar algunes accions no descrites amb anterioritat. Vegem quines s\u00f3n algunes de les ordres que podries necessitar a partir d'aqu\u00ed.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#clonar-repositori","title":"Clonar repositori","text":"<p><code>git clone URL_DEL_REPOSITORI_REMOT</code></p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#coneixer-els-fitxers-modificats","title":"Con\u00e8ixer els fitxers modificats","text":"<p><code>git status</code> <code>git status -s</code></p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#baixar-canvis","title":"Baixar canvis","text":"<p><code>git pull</code></p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#visualitzacio-de-branques","title":"Visualitzaci\u00f3 de branques","text":"<p><code>git branch</code> <code>git branch --llist</code></p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#esborrar-una-branca","title":"Esborrar una branca","text":"<p><code>git branch -d NOM_DE_LA_BRANCA</code></p>"},{"location":"Moduls/ARXIU/2425/DWEC/git.html#desfer-un-commit","title":"Desfer un commit","text":"<p><code>git revert CODI_DEL_COMMIT</code></p> <p>Aquestes s\u00f3n nom\u00e9s algunes de les ordres m\u00e9s b\u00e0siques i habituals a Git. Amb el temps, aprendr\u00e0s m\u00e9s ordres i t\u00e8cniques per aprofitar al m\u00e0xim aquesta poderosa eina. Recordeu sempre practicar i consultar la documentaci\u00f3 de Git si tens dubtes. Bona sort en els teus projectes!</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html","title":"Nodejs","text":""},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#introduccio-a-nodejs","title":"Introducci\u00f3 a Node.js","text":"<p>En l'\u00e0mbit del desenvolupament web, l'entorn client es refereix a la interacci\u00f3 que passa al navegador web de l'usuari. Durant molts anys JavaScript ha estat el llenguatge de programaci\u00f3 principal per al desenvolupament en entorn client, permetent la creaci\u00f3 d'aplicacions web interactives i din\u00e0miques. Tot i aix\u00f2, l'ecosistema de JavaScript ha evolucionat considerablement, i una de les tecnologies m\u00e9s influents en aquesta transformaci\u00f3 ha estat Node.js.</p> <p>Node.js \u00e9s un entorn d'execuci\u00f3 de Javascript basat en el motor V8 de Google Chrome. Va ser creat per Ryan Dahl el 2009 i ha revolucionat la manera com els desenvolupadors utilitzen JavaScript, permetent el seu \u00fas m\u00e9s enll\u00e0 del navegador i estenent-lo al costat del servidor. Aix\u00f2 ha proporcionat als desenvolupadors una plataforma unificada per construir aplicacions web escalables i dalt rendiment utilitzant un sol llenguatge de programaci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#lexit-de-nodejs","title":"L'\u00e8xit de Node.js","text":"<p>Una de les caracter\u00edstiques clau de Node.js \u00e9s el model d'entrada i sortida no bloquejant (I/O), basat en esdeveniments. Aix\u00f2 permet a les aplicacions manejar m\u00faltiples sol\u00b7licituds simult\u00e0niament sense bloquejar el flux d'execuci\u00f3, cosa que resulta en una major efici\u00e8ncia i menor lat\u00e8ncia en comparaci\u00f3 dels enfocaments tradicionals basats en fils. Aquesta caracter\u00edstica ha estat crucial per a l'\u00e8xit de Node.js en el desenvolupament d'aplicacions en temps real, com ara xats, jocs en l\u00ednia i plataformes de col\u00b7laboraci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#gestio-de-paquets","title":"Gesti\u00f3 de paquets","text":"<p>L'ecosistema de Node.js \u00e9s un altre aspecte important que cal considerar en el desenvolupament web. Gr\u00e0cies al seu gestor de paquets, npm, els desenvolupadors tenen acc\u00e9s a una \u00e0mplia biblioteca de m\u00f2duls i eines de tercers que faciliten la creaci\u00f3 i el manteniment d'aplicacions web. Aix\u00f2 ha impulsat l'adopci\u00f3 d'enfocaments modulars i la reutilitzaci\u00f3 de codi a la comunitat de desenvolupament, millorant l'efici\u00e8ncia i la qualitat del programari produ\u00eft.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#com-comencar-a-treballar-amb-nodejs","title":"Com comen\u00e7ar a treballar amb Node.js","text":"<p>Seguiu els passos que es descriuen a continuaci\u00f3 per comen\u00e7ar a explorar el m\u00f3n de Node.js.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#1-installacio-de-nodejs","title":"1. Instal\u00b7laci\u00f3 de Node.js","text":"<p>Per comen\u00e7ar, hem d'instal\u00b7lar Node.js al nostre sistema. Visiteu el lloc web oficial de Node.js (https://nodejs.org/) i descarregueu la versi\u00f3 recomanada per al vostre sistema operatiu. Executeu l'instal\u00b7lador i seguiu les instruccions de la pantalla per completar la instal\u00b7laci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#2-verificacio-de-la-installacio","title":"2. Verificaci\u00f3 de la instal\u00b7laci\u00f3","text":"<p>Quan h\u00e0giu instal\u00b7lat el Node.js, obriu una terminal o s\u00edmbol del sistema i executeu l'ordre seg\u00fcent per verificar que s'ha instal\u00b7lat correctament:</p> <pre><code>node -v\n</code></pre> <p>Si la instal\u00b7laci\u00f3 ha estat ser exitosa, haur\u00edeu de veure la versi\u00f3 de Node.js que heu instal\u00b7lat.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#3-creacio-dun-fitxer-de-projecte","title":"3. Creaci\u00f3 d'un fitxer de projecte","text":"<p>Crea un nou directori per al teu projecte i navega a aquest directori a la terminal. A continuaci\u00f3, crea un fitxer anomenat \u201capp.js\u201d utilitzant un editor de text de la teva elecci\u00f3. Aquest fitxer contindr\u00e0 el nostre codi de Node.js.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#4-escriure-el-teu-primer-programa-de-nodejs","title":"4. Escriure el teu primer programa de Node.js","text":"<p>Obre el fitxer \u201capp.js\u201d al teu editor de text i escriu el codi seg\u00fcent:</p> <p><code>console.log('Hola m\u00f3n des de Node.js!');</code></p> <p>Aquest codi \u00e9s un senzill\u00edssim programa de Node.js que imprimir\u00e0 'Hola m\u00f3n des de Node.js!' a la consola.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#5-execucio-del-programa-de-nodejs","title":"5. Execuci\u00f3 del programa de Node.js","text":"<p>Torna a la terminal i assegura't que ets al directori del projecte. Executeu l'ordre seg\u00fcent per iniciar el programa de Node.js:</p> <p><code>node app.js</code></p> <p>Si tot funciona correctament, haur\u00edeu de veure el missatge 'Hola m\u00f3n des de Node.js!' impr\u00e8s a la consola.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#6-installacio-de-paquets-amb-npm","title":"6. Instal\u00b7laci\u00f3 de paquets amb npm","text":"<p>Node.js utilitza un gestor de paquets anomenat npm per instal\u00b7lar m\u00f2duls addicionals. Provem aix\u00f2 instal\u00b7lant el popular paquet \u201cexpress\u201d per crear aplicacions web. Executa la seg\u00fcent comanda a la terminal:</p> <pre><code>npm install express\n</code></pre> <p>Aix\u00f2 instal\u00b7lar\u00e0 el paquet express i les seves depend\u00e8ncies en un directori anomenat \u201cnode_modules\u201d al vostre projecte.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#7-creacio-dun-servidor-web-basic-amb-express","title":"7. Creaci\u00f3 d'un servidor web b\u00e0sic amb Express","text":"<p>Esborra la l\u00ednia de codi que hav\u00edem afegit al fitxer \u2018app.js\u2019 i afegeix les l\u00ednies seg\u00fcents a l'inici del teu fitxer per importar Express:</p> <pre><code>const express = require('express');\nconst app = express();\n</code></pre> <p>Crearem una ruta b\u00e0sica perqu\u00e8 el nostre servidor web respongui amb un \u201cHola M\u00f3n\u201d quan s'accedeixi a l'arrel del lloc. Afegeix el codi seg\u00fcent a app.js:</p> <pre><code>app.get('/', (req, res) =&gt; {\n res.send('Hola M\u00f3n!');\n});\n</code></pre> <p>Definirem el port on el nostre servidor web estar\u00e0 escoltant les sol\u00b7licituds. Afegeix el codi seg\u00fcent a app.js:</p> <p><code>const PORT = process.env.PORT || 3000;</code></p> <p>Aquesta l\u00ednia defineix un port per defecte (3000) si no hi ha cap port assignat a les variables d'entorn del sistema. Ara, anem a dir a la nostra aplicaci\u00f3 que comenci a escoltar al port que especifiquem. Afegeix el codi seg\u00fcent al final de app.js:</p> <p><code>app.listen(PORT, () =&gt; { console.log(`Servidor funcionant al port ${PORT}`); });</code></p> <p>Guarda els canvis a app.js i obre una terminal a la carpeta del projecte. Executa la seg\u00fcent ordre per iniciar el servidor: node app.js Hauries de veure el missatge \u201cServidor funcionant al port 3000\u201d a la terminal. Obre el teu navegador web i visita http://localhost:3000. Hauries de veure el missatge \u201cHola M\u00f3n!\u201d a la p\u00e0gina. Felicitats, has creat el teu primer servidor web utilitzant Express i Node.js.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#8-creacio-dun-servidor-web-amb-rutes-i-parametres-dinamics","title":"8. Creaci\u00f3 d'un servidor web amb rutes i par\u00e0metres din\u00e0mics","text":"<p>Ara que ja tenim un servidor web b\u00e0sic funcionant al port 3000 amb un fitxer app.js, la nostra tasca \u00e9s ampliar el servidor perqu\u00e8 manegi rutes din\u00e0miques i par\u00e0metres. Volem aconseguir el seg\u00fcent:</p> <ul> <li>Crear una ruta /salutacio que accepti un par\u00e0metre nom i mostri una salutaci\u00f3 personalitzada.</li> <li>Crear una ruta /suma que accepti dos par\u00e0metres num\u00e8rics a i b i torneu el resultat de sumar-los.</li> </ul> <p>Vegem com ho podem fer.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#pas-1-crear-la-ruta-salut","title":"Pas 1: Crear la ruta /salut.","text":"<p>Afegeix el codi seg\u00fcent al teu fitxer 'app.js' per crear la ruta /salut:</p> <pre><code>app.get('/salutacio/:nom', (req, res) =&gt; {\n    const nom = req.params.nom;\n    res.send(`Hola, ${nom}!`);\n});\n</code></pre> <p>Aquesta ruta accepta un par\u00e0metre anomenat nom i respon amb una salutaci\u00f3 personalitzada.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#pas-2-crear-la-ruta-suma","title":"Pas 2: Crear la ruta /suma","text":"<p>Afegeix el codi seg\u00fcent al teu fitxer 'app.js' per crear la ruta /suma:</p> <pre><code>app.get('/suma/:a/:b', (req, res) =&gt; {\n    const a = parseFloat(req.params.a);\n    const b = parseFloat(req.params.b);\n    if (isNaN(a) || isNaN(b)) {\n        res.status(400).send('Els par\u00e0metres han de ser n\u00fameros v\u00e0lids.');\n    } else {\n        const resultat = a + b;\n        res.send(`La suma de ${a} i ${b} \u00e9s ${resultat}`);\n    }\n});\n</code></pre> <p>Aquesta ruta accepta dos par\u00e0metres num\u00e8rics, a i b, i torna el resultat de sumar-los. Tamb\u00e9 comprova si els par\u00e0metres s\u00f3n n\u00fameros v\u00e0lids i envia un missatge d'error en cas contrari.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/nodejs.html#pas-3-provar-les-rutes","title":"Pas 3: Provar les rutes","text":"<p>Guarda els canvis a app.js i reinicia el servidor si \u00e9s necessari. Despr\u00e9s, visita les seg\u00fcents adreces al teu navegador per provar les rutes:</p> <ol> <li>http://localhost:3000/saludo/Ana \u2013 Hauries de veure el missatge \u201cHola, Ana!\u201d.</li> <li>http://localhost:3000/suma/4/6 \u2013 Hauries de veure el missatge \u201cLa suma de 4 i 6 \u00e9s 10\u201d.</li> <li>http://localhost:3000/suma/a/6 \u2013 Hauries de veure el missatge \u201cEls par\u00e0metres han de ser n\u00fameros v\u00e0lids.\u201d</li> </ol> <p>Amb aquest exemple, heu aprofundit en l'\u00fas de JavaScript usant Node.js i Express en crear rutes din\u00e0miques i manejar par\u00e0metres en les sol\u00b7licituds. Aix\u00f2 us permetr\u00e0 crear aplicacions web m\u00e9s avan\u00e7ades i personalitzades.</p> <p>Com heu pogut veure, treballar amb Node.js desvincula la programaci\u00f3 amb JavaScript del navegador i ens permet resoldre tasques tremendament interessants amb molt poques l\u00ednies de codi. Evidentment aquest \u00e9s simplement un punt de partida des d'on iniciar el cam\u00ed amb la programaci\u00f3 JavaScript del costat servidor. Espero que t'hagi servit per iniciar-te en aquesta tecnologia i ho aprofitis per continuar aprofundint en el seu estudi.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/npm.html","title":"NPM","text":"<p>npm (Node Package Manager) es una herramienta esencial en el desarrollo web moderno, especialmente para la gesti\u00f3n de paquetes y m\u00f3dulos JavaScript. Comprender sus componentes y c\u00f3mo se integra en el flujo de trabajo del frontend es crucial.</p> <p>La p\u00e1gina web: El sitio oficial de npm (https://www.npmjs.com/) permite descubrir nuevos paquetes, colaborar y reportar errores. Es similar a c\u00f3mo funciona GitHub, proporcionando una plataforma centralizada para la comunidad de desarrolladores.</p> <p>El cliente por CLI: El cliente de l\u00ednea de comandos de npm permite instalar, actualizar y gestionar paquetes y programas JavaScript de manera eficiente, similar a c\u00f3mo <code>apt</code> gestiona paquetes en sistemas basados en Debian.</p> <p>El registro: npm mantiene un registro de paquetes que se pueden instalar y actualizar, facilitando la colaboraci\u00f3n y la gesti\u00f3n de dependencias.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/npm.html#instalacion-de-npm","title":"Instalaci\u00f3n de npm","text":"<p>Para comenzar a usar npm, es necesario tener Node.js instalado, ya que npm se incluye con Node.js. Aqu\u00ed hay dos formas comunes de instalar Node.js y npm.</p> <p>Desde los repositorios de Ubuntu:</p> <pre><code>node -v\nnpm -v\nsudo apt install nodejs\nsudo apt install npm\n</code></pre> <p>Desde el control de versiones de Node:</p> <pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash\nnvm list-remote\nnvm install v13.6.0\n</code></pre> <p>Mantener Node.js actualizado es importante para aprovechar las \u00faltimas caracter\u00edsticas y mejoras de seguridad. Para actualizar Node.js, puedes usar npm:</p> <pre><code>sudo npm install -g n\nsudo n stable\nsudo npm install -g npm\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/npm.html#administracion-de-paquetes-con-npm","title":"Administraci\u00f3n de Paquetes con npm","text":"<p>npm facilita la instalaci\u00f3n, actualizaci\u00f3n y gesti\u00f3n de paquetes en tus proyectos. Aqu\u00ed tienes algunos comandos b\u00e1sicos:</p> <ul> <li> <p>Inicializar un nuevo proyecto: <pre><code>npm init\n</code></pre></p> </li> <li> <p>Instalar un paquete: <pre><code>npm install &lt;nombre-paquete&gt; (o npm i &lt;nombre-paquete&gt;)\n</code></pre></p> </li> <li> <p>Instalar un paquete globalmente: <pre><code>npm install -g &lt;nombre-paquete&gt;\n</code></pre></p> </li> <li> <p>Desinstalar un paquete: <pre><code>npm uninstall &lt;nombre-paquete&gt;\n</code></pre></p> </li> <li> <p>Actualizar un paquete: <pre><code>npm update &lt;nombre-paquete&gt;\n</code></pre></p> </li> <li> <p>Listar paquetes instalados: <pre><code>npm list\n</code></pre></p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/npm.html#el-archivo-packagejson","title":"El Archivo package.json","text":"<p>El <code>package.json</code> es el coraz\u00f3n de cualquier proyecto npm. Declara las bibliotecas instaladas y sus versiones, as\u00ed como scripts que se pueden ejecutar con <code>npm run</code>.</p> <p>Ejemplo de package.json:</p> <pre><code>{\n \"name\": \"webpackinicial\",\n \"version\": \"1.0.0\",\n \"description\": \"Projecte inicial npm\",\n \"main\": \"index.js\",\n \"scripts\": {\n   \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"\n },\n \"author\": \"\",\n \"license\": \"ISC\"\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/npm.html#ejemplo-instalacion-de-jquery","title":"Ejemplo: Instalaci\u00f3n de jQuery","text":"<p>Para instalar y utilizar jQuery en un proyecto, sigue estos pasos:</p> <ol> <li> <p>Inicializa un nuevo proyecto npm:</p> <pre><code>npm init\n</code></pre> </li> <li> <p>Instala jQuery:</p> <pre><code>npm install jquery\n</code></pre> </li> <li> <p>Incluye jQuery en tu HTML:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n   &lt;meta charset=\"UTF-8\"&gt;\n   &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n   &lt;title&gt;Document&lt;/title&gt;\n   &lt;script src=\"./node_modules/jquery/dist/jquery.js\"&gt;&lt;/script&gt;\n   &lt;script&gt;\n     $(function() {\n       console.log($);\n     });\n   &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/npm.html#motivaciones-para-usar-npm","title":"Motivaciones para Usar npm","text":"<p>La programaci\u00f3n del frontend hoy en d\u00eda puede ser tan compleja como la del backend. Mantener todo el c\u00f3digo y las dependencias de terceros en archivos .html y .js puede ser complicado. Aqu\u00ed es donde npm resulta invaluable:</p> <ul> <li>Automatizaci\u00f3n de tareas:</li> <li>Recarga en vivo de los cambios.</li> <li>Minificaci\u00f3n y ofuscaci\u00f3n del c\u00f3digo.</li> <li>Incrementar la compatibilidad entre navegadores.</li> <li> <p>Compilaci\u00f3n de SASS, TypeScript, etc.</p> </li> <li> <p>Gesti\u00f3n de dependencias:</p> </li> <li>Mantener y actualizar bibliotecas de terceros</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/npm.html#creacion-de-un-nuevo-proyecto-node","title":"Creaci\u00f3n de un Nuevo Proyecto Node","text":"<p>Para crear un nuevo proyecto Node, aseg\u00farate de tener versiones recientes de Node.js y npm:</p> <pre><code>node --version    # Debe ser superior a la 8\nnpm --version  # Debe ser superior a la 6\nnpm init \n</code></pre> <p>Esto crea un archivo <code>package.json</code> en tu proyecto.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/npm.html#integracion-con-git","title":"Integraci\u00f3n con Git","text":"<p>El directorio <code>node_modules</code> es muy grande y no debe subirse al repositorio. Aseg\u00farate de incluirlo en tu <code>.gitignore</code>:</p> <pre><code>echo \"node_modules\" &gt;&gt; .gitignore\n</code></pre> <p>Cuando otros clonen tu repositorio, solo necesitan ejecutar <code>npm install</code> para instalar las dependencias listadas en <code>package.json</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html","title":"Asincron\u00eda y Promesas","text":"<p>Antes de estudiar las promesas, vamos a repasar algunos conceptos sobre c\u00f3mo funciona internamente el motor de javascript. De esta manera ser\u00e1 m\u00e1s f\u00e1cil entender c\u00f3mo funcionan las promesas y c\u00f3mo usarlas. </p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#el-motor-de-javascript","title":"El Motor de JavaScript","text":"<p>El motor de JavaScript dentro del navegador es responsable de compilar y ejecutar el c\u00f3digo JavaScript, manejar la pila de funciones (call stack), gestionar el alojamiento de los objetos en memoria (heap) y recolectar la basura de los objetos que ya no se necesitan. Adem\u00e1s, proporciona una API con utilidades del navegador, red, funciones as\u00edncronas y m\u00e1s. En este cap\u00edtulo, exploraremos c\u00f3mo funciona el motor de JavaScript, incluyendo la ejecuci\u00f3n de c\u00f3digo s\u00edncrono y as\u00edncrono, y los conceptos de contexto de ejecuci\u00f3n y pila de llamadas.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#entorno-de-ejecucion","title":"Entorno de Ejecuci\u00f3n","text":"<p>JavaScript solo puede tener un hilo de ejecuci\u00f3n (en principio). Esto significa que si solicitamos algo al servidor de forma s\u00edncrona, toda la web se detendr\u00e1 hasta que llegue la respuesta. Sin embargo, los navegadores tienen un entorno de ejecuci\u00f3n que permite que JavaScript realice solicitudes de forma as\u00edncrona y contin\u00fae ejecutando otras tareas. Estas peticiones as\u00edncronas las proporciona las <code>web APIs</code> y sus respuestas pueden ser gestionadas mediante Callbacks, Promesas o Async/Await. Para entender c\u00f3mo funcionan las peticiones as\u00edncronas en JavaScript, es fundamental comprender los conceptos de Contexto de Ejecuci\u00f3n y Pila de Llamadas.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#contexto-de-ejecucion-y-pila-de-llamadas","title":"Contexto de Ejecuci\u00f3n y Pila de Llamadas","text":""},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#contexto-de-ejecucion","title":"Contexto de Ejecuci\u00f3n","text":"<p>El contexto de ejecuci\u00f3n es el entorno en el cual JavaScript se eval\u00faa y ejecuta. Cada vez que se ejecuta un script o se llama a una funci\u00f3n, se crea un nuevo contexto de ejecuci\u00f3n. Existen dos tipos principales de contextos de ejecuci\u00f3n: el contexto global y el contexto de funci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#contexto-de-ejecucion-global","title":"Contexto de Ejecuci\u00f3n Global","text":"<p>El contexto de ejecuci\u00f3n global se crea cuando se carga una p\u00e1gina web o un archivo JavaScript en un entorno de ejecuci\u00f3n, como un navegador o Node.js. Este contexto es el entorno predeterminado en el que se eval\u00faa y ejecuta el c\u00f3digo global, es decir, cualquier c\u00f3digo que no est\u00e9 dentro de una funci\u00f3n.</p> <pre><code>(()=&gt;{\nlet globalVar = \"I am global\";\n\nfunction showGlobalVar() {\n  console.log(globalVar); // Puede acceder a globalVar porque est\u00e1 en el contexto global\n}\n\nshowGlobalVar(); // I am global\n})()\n</code></pre> <pre><code>I am global\n</code></pre> <p>En este ejemplo, <code>globalVar</code> se define en el contexto global, y la funci\u00f3n <code>showGlobalVar</code> puede acceder a <code>globalVar</code> porque tambi\u00e9n se encuentra en el contexto global.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#contexto-de-ejecucion-de-funcion","title":"Contexto de Ejecuci\u00f3n de Funci\u00f3n","text":"<p>Cada vez que se llama a una funci\u00f3n, se crea un nuevo contexto de ejecuci\u00f3n para esa funci\u00f3n. Este contexto de ejecuci\u00f3n incluye el \u00e1mbito l\u00e9xico de la funci\u00f3n, el objeto <code>this</code>, y una referencia al contexto de ejecuci\u00f3n de su entorno exterior (si lo hay).</p> <pre><code>(()=&gt;{\nlet globalVar = \"I am global\";\n\nfunction outerFunction() {\n  let outerVar = \"I am outer\";\n\n  function innerFunction() {\n    let innerVar = \"I am inner\";\n    console.log(globalVar); // I am global\n    console.log(outerVar);  // I am outer\n    console.log(innerVar);  // I am inner\n  }\n\n  innerFunction();\n}\n\nouterFunction();\n})();\n</code></pre> <pre><code>I am global\nI am outer\nI am inner\n</code></pre> <p>En este ejemplo, <code>outerFunction</code> crea su propio contexto de ejecuci\u00f3n que incluye <code>outerVar</code>. Cuando <code>innerFunction</code> se llama, se crea un nuevo contexto de ejecuci\u00f3n que incluye <code>innerVar</code>. <code>innerFunction</code> tambi\u00e9n tiene acceso a <code>outerVar</code> y <code>globalVar</code> debido a la cadena de \u00e1mbito l\u00e9xico.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#pila-de-llamadas-call-stack","title":"Pila de Llamadas (Call Stack)","text":"<p>La pila de llamadas es una estructura de datos LIFO (Last In, First Out) que almacena los contextos de ejecuci\u00f3n en el orden en que deben ejecutarse. Cada vez que se llama a una funci\u00f3n, su contexto de ejecuci\u00f3n se agrega a la pila de llamadas. Cuando la funci\u00f3n termina, su contexto se elimina de la pila.</p> <pre><code>(()=&gt;{\n    function first() {\n      console.log(\"Entering first\");\n      second();\n      console.log(\"Exiting first\");\n    }\n\n    function second() {\n      console.log(\"Entering second\");\n      third();\n      console.log(\"Exiting second\");\n    }\n\n    function third() {\n      console.log(\"Entering third\");\n      // Realiza alguna tarea\n      console.log(\"Exiting third\");\n    }\n\n    first();\n    })();\n</code></pre> <pre><code>Entering first\nEntering second\nEntering third\nExiting third\nExiting second\nExiting first\n</code></pre> <p>An\u00e1lisis del Call Stack:</p> <ol> <li><code>first()</code> se agrega a la pila de llamadas.</li> <li><code>console.log(\"Entering first\")</code> se ejecuta dentro de <code>first()</code>.</li> <li><code>second()</code> se agrega a la pila de llamadas.</li> <li><code>console.log(\"Entering second\")</code> se ejecuta dentro de <code>second()</code>.</li> <li><code>third()</code> se agrega a la pila de llamadas.</li> <li><code>console.log(\"Entering third\")</code> se ejecuta dentro de <code>third()</code>.</li> <li><code>console.log(\"Exiting third\")</code> se ejecuta dentro de <code>third()</code>.</li> <li><code>third()</code> se elimina de la pila de llamadas.</li> <li><code>console.log(\"Exiting second\")</code> se ejecuta dentro de <code>second()</code>.</li> <li><code>second()</code> se elimina de la pila de llamadas.</li> <li><code>console.log(\"Exiting first\")</code> se ejecuta dentro de <code>first()</code>.</li> <li><code>first()</code> se elimina de la pila de llamadas.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#herramientas-para-analizar-el-call-stack","title":"Herramientas para Analizar el Call Stack","text":"<p>En Firefox:</p> <ol> <li>Presiona <code>F12</code> para abrir las herramientas de desarrollo.</li> <li>Ve al panel de Depurador.</li> <li>Coloca un punto de ruptura.</li> <li>Ejecuta y analiza la pila de llamadas y el entorno de ejecuci\u00f3n de las funciones.</li> </ol> <p>Tambi\u00e9n puedes usar <code>console.trace()</code> y <code>debugger;</code> en tu c\u00f3digo para depurar y analizar el flujo de ejecuci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#tareas-y-microtareas","title":"Tareas y Microtareas","text":"<p>JavaScript gestiona las operaciones as\u00edncronas utilizando varias colas de tareas, cada una con una prioridad diferente. Estas colas incluyen la cola de macrotareas y la cola de microtareas.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#cola-de-macrotareas-y-microtareas","title":"Cola de Macrotareas y Microtareas","text":"<p>Las macrotareas incluyen operaciones como los eventos del DOM, <code>setTimeout</code>, <code>setInterval</code> y otras operaciones as\u00edncronas. Las macrotareas se gestionan en la \"cola de macrotareas\" y se procesan una por una.</p> <p>Las microtareas, por otro lado, incluyen las promesas (<code>Promises</code>) y las mutaciones del DOM (a trav\u00e9s de <code>MutationObserver</code>). Estas tareas se gestionan en la \"cola de microtareas\", que tiene una prioridad m\u00e1s alta que la de las macrotareas. Esto significa que despu\u00e9s de cada macrotarea, el motor de JavaScript procesar\u00e1 todas las microtareas antes de continuar con la siguiente macrotarea.</p> <p>Cuando se completa una macrotarea, el motor de JavaScript pasa a procesar todas las microtareas pendientes. Este ciclo de procesamiento asegura que las microtareas reciban atenci\u00f3n inmediata despu\u00e9s de cada macrotarea.</p> <pre><code>(()=&gt;{\nlet start = Date.now();\n\nfunction count() {\n  // Trabajo pesado\n  let i = 0;\n  for (let j = 0; j &lt; 1e9; j++) {\n    i++;\n  }\n  console.log(\"Done in \" + (Date.now() - start) + 'ms');\n}\n\n// count();   // Esto bloquea el navegador\nsetTimeout(count, 0);\n})();\n</code></pre> <ol> <li>La funci\u00f3n <code>count</code> ejecuta una operaci\u00f3n costosa (una larga iteraci\u00f3n de bucle).</li> <li>Si <code>count</code> se ejecuta directamente, bloquea el navegador porque el bucle es muy largo.</li> <li>Utilizando <code>setTimeout(count, 0)</code>, la funci\u00f3n <code>count</code> se coloca en la cola de macrotareas, permitiendo que el navegador procese otras tareas mientras tanto.</li> </ol> <p>Este ejemplo ilustra c\u00f3mo retrasar el bloqueo hasta que, por ejemplo, se ejecute todo el programa principal. Pero no soluciona el hecho de que, al final se va a quedar el navegador bloqueado, ya que se ejecutar\u00e1 en el \u00fanico hilo de ejecuci\u00f3n de Javascript. Si queremos tener m\u00e1s hilos, podemos usar <code>worker</code>. En el siguiente ejemplo se ve c\u00f3mo dividir el trabajo para que, en medio, d\u00e9 tiempo a renderizar o ejecutar otras tareas y microtareas como atender eventos:</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#ejemplo-de-dividir-el-trabajo-con-settimeout","title":"Ejemplo de Dividir el Trabajo con <code>setTimeout</code>","text":"<pre><code>document.addEventListener(\"DOMContentLoaded\", () =&gt; {\n  let progress = document.querySelector(\"#progress\");\n  let i = 0;\n  function count() {\n    // Realiza una parte del trabajo pesado (*)\n    do {\n      i++;\n      progress.innerHTML = i;\n    } while (i % 1e3 != 0);\n\n    if (i &lt; 1e7) {\n      setTimeout(count);\n    }\n  }\n  count();\n});\n</code></pre> <ol> <li>En lugar de hacer todo el trabajo pesado en una \u00fanica ejecuci\u00f3n, el trabajo se divide en trozos m\u00e1s peque\u00f1os.</li> <li>La funci\u00f3n <code>count</code> realiza una peque\u00f1a parte del trabajo (incrementar <code>i</code> y actualizar el texto de <code>progress</code>) antes de ceder el control al navegador con <code>setTimeout(count)</code>.</li> <li>Esto permite que el navegador renderice el cambio en el DOM, evitando el bloqueo y ofreciendo una experiencia de usuario m\u00e1s fluida.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#codigo-de-ejemplo-con-promesas-microtareas","title":"C\u00f3digo de Ejemplo con Promesas (Microtareas)","text":"<pre><code>(()=&gt;{\n  const messages = [];\n  messages.push('Script start');\n  setTimeout(() =&gt; {\n    messages.push('SetTimeout');\n    printMessages();\n  }, 0);\n  Promise.resolve().then(() =&gt; {\n    messages.push('Promise 1');\n  }).then(() =&gt; {\n    messages.push('Promise 2');\n  });\n  messages.push('Script end');\n  function printMessages() {\n      console.log(messages.join('\\n'));\n  }\n})();\n</code></pre> <pre><code>Done in 735ms\nScript start\nScript end\nPromise 1\nPromise 2\nSetTimeout\n</code></pre> <ol> <li>El log 'Script start' se imprime primero porque es c\u00f3digo s\u00edncrono.</li> <li><code>setTimeout</code> coloca su funci\u00f3n de callback en la cola de macrotareas.</li> <li>La promesa se resuelve inmediatamente, colocando sus callbacks en la cola de microtareas.</li> <li>El log 'Script end' se imprime porque es c\u00f3digo s\u00edncrono.</li> <li>Las microtareas (las promesas) se ejecutan antes de la macrotarea (<code>setTimeout</code>), imprimiendo 'Promise 1' y 'Promise 2'.</li> <li>Finalmente, la funci\u00f3n de <code>setTimeout</code> se ejecuta, imprimiendo 'SetTimeout'.</li> </ol> <p>Este mecanismo de tareas y microtareas permite que JavaScript gestione de manera eficiente las operaciones as\u00edncronas, asegurando que el c\u00f3digo se ejecute de manera ordenada y que las tareas con mayor prioridad (microtareas) se completen antes de procesar tareas menos prioritarias (macrotareas).</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#callbacks-en-javascript","title":"Callbacks en JavaScript","text":"<p>En JavaScript, un callback es una funci\u00f3n que se pasa como argumento a otra funci\u00f3n para que se ejecute despu\u00e9s de que se complete alguna operaci\u00f3n. Los callbacks son esenciales para manejar operaciones as\u00edncronas como la comunicaci\u00f3n con servidores, temporizadores, y eventos del DOM. El propio lenguaje Javascript cuenta con multitud de funciones que aceptan funciones de callback, com forEach, map, filter, addEventListener... </p> <pre><code>(()=&gt;{\nfunction fetchData(callback) {\n  setTimeout(() =&gt; {\n    const data = { name: \"John\", age: 30 };\n    callback(data);\n  }, 3000);\n}\n\n// Ejecutar la funci\u00f3n con un callback\nfetchData(function(data) {\n  console.log(data);\n});\n\nconsole.log(\"Data is being fetched...\");\n})();\n</code></pre> <pre><code>{ name: \"John\", age: 30 }\n</code></pre> <ol> <li>La funci\u00f3n <code>fetchData</code> toma un <code>callback</code> como argumento.</li> <li>Dentro de <code>fetchData</code>, se usa <code>setTimeout</code> para simular una operaci\u00f3n as\u00edncrona que dura 3 segundos.</li> <li>Despu\u00e9s de 3 segundos, <code>setTimeout</code> ejecuta el <code>callback</code> pasando un objeto <code>data</code> como argumento.</li> <li><code>fetchData</code> se llama con una funci\u00f3n an\u00f3nima como callback que imprime el <code>data</code>.</li> <li>Mientras <code>setTimeout</code> espera, el programa sigue ejecutando el c\u00f3digo siguiente y muestra \"Data is being fetched...\".</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#callbacks-en-operaciones-asincronas","title":"Callbacks en Operaciones As\u00edncronas","text":"<p>Los callbacks son \u00fatiles cuando se trabaja con operaciones as\u00edncronas. En el siguiente ejemplo, la funci\u00f3n <code>second</code> tiene c\u00f3digo as\u00edncrono que usa un callback para garantizar que la funci\u00f3n <code>third</code> se ejecute despu\u00e9s de que <code>second</code> haya terminado su tarea.</p> <pre><code>(()=&gt;{\nfunction first() {\n  console.log(1);\n}\n\nfunction second(callback) {\n  setTimeout(() =&gt; {\n    console.log(2);\n    callback();\n  }, 0);\n}\n\nfunction third() {\n  console.log(3);\n}\n\nfirst();\nsecond(third);\n// Salida: 1 2 3\n})();\n</code></pre> <pre><code>\u001b[33m1\u001b[39m\n</code></pre> <ol> <li><code>first</code> imprime <code>1</code>.</li> <li><code>second</code> toma una funci\u00f3n <code>callback</code> como argumento y usa <code>setTimeout</code> con un retardo de 0 milisegundos para simular una operaci\u00f3n as\u00edncrona.</li> <li><code>second</code> imprime <code>2</code> y luego llama al <code>callback</code> pasado (en este caso, <code>third</code>).</li> <li><code>third</code> imprime <code>3</code>.</li> </ol> <p>En este ejemplo, <code>first</code> se ejecuta primero, seguido de <code>second</code> que llama a <code>third</code> despu\u00e9s de su operaci\u00f3n as\u00edncrona.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#callback-hell-infierno-de-callbacks","title":"Callback Hell (Infierno de Callbacks)","text":"<p>El uso excesivo de callbacks puede llevar a una situaci\u00f3n conocida como \"Callback Hell\" o \"Pyramid of Doom\", donde el c\u00f3digo se vuelve dif\u00edcil de leer y mantener debido a la anidaci\u00f3n profunda de funciones.</p> <pre><code>getData(function(a) {\n  getMoreData(a, function(b) {\n    getEvenMoreData(b, function(c) {\n      getEvenEvenMoreData(c, function(d) {\n        getFinalData(d, function(finalData) {\n          console.log(finalData);\n        });\n      });\n    });\n  });\n});\n</code></pre> <p>En este ejemplo, cada funci\u00f3n depende de los datos obtenidos por la funci\u00f3n anterior. Esta cadena de dependencias se anida cada vez m\u00e1s profundamente, resultando en un c\u00f3digo que es dif\u00edcil de mantener. </p> <p>Veamos un ejemplo de c\u00f3digo que puede suponer un Callback Hell:</p> <pre><code>document.addEventListener(\"DOMContentLoaded\", () =&gt; {\n\n    function hacerPeticion(url, callback) {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                const data = JSON.parse(xhr.responseText);\n                callback(null, data);\n            } else if (xhr.readyState === 4) {\n\n                callback(new Error(`Error al hacer la petici\u00f3n a ${url}`));\n            }\n        };\n        xhr.send();\n    }\n\n    // 2. Leer un archivo del input\n    function leerArchivo(callback) {\n        const inputArchivo = document.getElementById('archivoInput');\n        const archivo = inputArchivo.files[0];\n\n        if (!archivo) {\n            callback(new Error('No se ha seleccionado ning\u00fan archivo'));\n            return;\n        }\n        const lector = new FileReader();\n        lector.onload = function (evento) {\n            const contenido = evento.target.result;\n            callback(null, contenido);\n        };\n        lector.onerror = function () {\n            callback(new Error('Error al leer el archivo'));\n        };\n        lector.readAsText(archivo);\n    }\n\n    // 3. Guardar los datos en IndexedDB\n    function guardarEnIndexedDB(datos, callback) {\n        const solicitudDB = indexedDB.open('miBaseDeDatos', 1);\n\n        solicitudDB.onupgradeneeded = function (evento) {\n            const db = evento.target.result;\n            db.createObjectStore('archivos', { keyPath: 'id', autoIncrement: true });\n        };\n\n        solicitudDB.onsuccess = function (evento) {\n            const db = evento.target.result;\n            const transaccion = db.transaction('archivos', 'readwrite');\n            const almacen = transaccion.objectStore('archivos');\n\n            const solicitudInsertar = almacen.add({ contenido: datos });\n\n            solicitudInsertar.onsuccess = function () {\n                callback(null, 'Datos guardados correctamente en IndexedDB');\n            };\n\n            solicitudInsertar.onerror = function () {\n                callback(new Error('Error al guardar en IndexedDB'));\n            };\n        };\n\n        solicitudDB.onerror = function () {\n            callback(new Error('Error al abrir IndexedDB'));\n        };\n    }\n\n    // Iniciamos la cadena de callbacks (Callback Hell)\n\n    document.querySelector(\"#boton\").addEventListener(\"click\", (event) =&gt; {\n        event.preventDefault();\n\n        // 1. Petici\u00f3n al servidor\n        hacerPeticion('http://localhost:5500/datos.json', function (error, datosServidor) {\n            if (error) {\n                console.error(error);\n                return;\n            }\n            console.log('Datos recibidos del servidor:', datosServidor);\n\n            // 2. Leer archivo con retraso\n            setTimeout(() =&gt; {\n                leerArchivo(function (error, contenidoArchivo) {\n                    if (error) {\n                        console.error('Error al leer el archivo:', error);\n                        return;\n                    }\n                    console.log('Contenido del archivo le\u00eddo:', contenidoArchivo);\n\n                    // 3. Guardar los datos en IndexedDB\n                    guardarEnIndexedDB(contenidoArchivo + datosServidor, function (error, mensaje) {\n                        if (error) {\n                            console.error('Error al guardar en IndexedDB:', error);\n                            return;\n                        }\n                        console.log(mensaje);\n                        console.log('Todas las operaciones se completaron con \u00e9xito.');\n                    });\n                });\n            }, 1000);\n        });\n\n    });\n\n});\n</code></pre> <p>Podemos ver que las funciones as\u00edncronas aceptan una funci\u00f3n de <code>callback</code>. Tenemos la funci\u00f3n de tratamiento del evento del bot\u00f3n. La de hacer la petici\u00f3n al servidor, que hacemos con <code>XMLHttpRequest</code> para no usar promesas. Tenemos un setTimeOut que usamos para retrasar la funci\u00f3n que le pasamos, la cual lee un fichero que el usuario ha puesto en un input. Esta funci\u00f3n recibe como callback una en la que guardamos el resultado en una base de datos <code>indexedDB</code>. Todas son peticiones as\u00edncronas a la API del navegador y necesitan un callback. </p> <p>Como se puede ver, mantener este c\u00f3digo puede ser complicado. Despu\u00e9s lo volveremos a escribir con <code>fetch</code> y con promesas y la sintaxi <code>async/await</code>y se demostrar\u00e1 que el c\u00f3digo queda m\u00e1s l\u00edmpio.  </p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#promesas","title":"Promesas","text":"<p>Las promesas en JavaScript son objetos que representan la eventual finalizaci\u00f3n (o falla) de una operaci\u00f3n as\u00edncrona y su valor resultante. Proporcionan una forma de manejar operaciones as\u00edncronas de manera m\u00e1s manejable y predecible, evitando los problemas del \"callback hell\". A continuaci\u00f3n, exploraremos c\u00f3mo funcionan las promesas y c\u00f3mo pueden ser utilizadas en diferentes contextos.</p> <p>Una promesa se crea (manualmente) utilizando el constructor <code>Promise</code>, que acepta una funci\u00f3n ejecutora como argumento. Esta funci\u00f3n ejecutora recibe dos funciones como par\u00e1metros: <code>resolve</code> y <code>reject</code>.</p> <pre><code>(()=&gt;{\nconst promise = new Promise((resolve, reject) =&gt; { // Funci\u00f3n ejecutora\n  setTimeout(() =&gt; {\n    if (Math.random() &gt; 0.5) {\n      resolve(\"Resolving an asynchronous request!\");\n    } else {\n      reject(\"Rejecting an asynchronous request!\");\n    }\n  }, 2000);\n});\n\npromise.then((response) =&gt; { //.then si se resuelve\n  console.log(response);\n}).catch((response) =&gt; { // .catch si falla\n  console.log(response);\n});\n})();\n</code></pre> <pre><code>\u001b[33m2\u001b[39m\n\u001b[33m3\u001b[39m\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#estados-de-las-promesas","title":"Estados de las Promesas","text":"<p>Las promesas pueden estar en uno de los siguientes estados:</p> <ol> <li>Pendiente (Pending): Estado inicial, la promesa a\u00fan no se ha cumplido ni ha sido rechazada.</li> <li>Cumplida (Fulfilled): La operaci\u00f3n se complet\u00f3 con \u00e9xito y se resolvi\u00f3 la promesa.</li> <li>Rechazada (Rejected): La operaci\u00f3n fall\u00f3 y la promesa fue rechazada.</li> </ol> <p>En el ejemplo anterior, la promesa tiene un 50% de probabilidad de resolverse o rechazarse despu\u00e9s de 2 segundos. Dependiendo del resultado, se ejecuta la funci\u00f3n correspondiente en <code>then</code> o <code>catch</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#uso-de-promesas","title":"Uso de Promesas","text":""},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#promesas-sincronas-y-asincronas","title":"Promesas S\u00edncronas y As\u00edncronas","text":"<p>Las promesas permiten retornar un objeto de forma s\u00edncrona con el que se puede trabajar, representando un valor que puede estar disponible ahora, en el futuro o nunca. Esto permite lanzar peticiones as\u00edncronas sin bloquear la ejecuci\u00f3n del c\u00f3digo.</p> <pre><code>(()=&gt;{\nfunction fetchData() {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      const data = {name: \"John\", age: 30};\n      resolve(data);\n    }, 3000);\n  });\n}\n\nfetchData().then((data) =&gt; {\n  console.log(data);\n});\n\nconsole.log(\"Data is being fetched...\");\n})();\n</code></pre> <pre><code>Data is being fetched...\n</code></pre> <p>En este ejemplo, la funci\u00f3n <code>fetchData</code> retorna una promesa que se resuelve con datos despu\u00e9s de 3 segundos. Mientras se espera la resoluci\u00f3n de la promesa, el c\u00f3digo sigue ejecut\u00e1ndose y se imprime \"Data is being fetched...\".</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#encadenar-promesas","title":"Encadenar Promesas","text":"<p>El m\u00e9todo <code>then</code> de las promesas permite encadenar varias operaciones as\u00edncronas de manera secuencial. Esto es \u00fatil cuando necesitamos ejecutar una serie de tareas as\u00edncronas una tras otra.</p> <pre><code>fetchData().then((data) =&gt; {\n  console.log(\"First then:\", data);\n  return data.name;\n}).then((name) =&gt; {\n  console.log(\"Second then:\", name);\n});\n</code></pre> <p>En este ejemplo, la segunda llamada a <code>then</code> solo se ejecuta despu\u00e9s de que la primera promesa se resuelva, garantizando un flujo secuencial de operaciones.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#manejo-de-errores","title":"Manejo de Errores","text":"<p>El m\u00e9todo <code>catch</code> se utiliza para manejar errores que ocurren durante la ejecuci\u00f3n de una promesa. Este se puede encadenar despu\u00e9s de uno o varios <code>then</code>.</p> <pre><code>fetchData().then((data) =&gt; {\n  console.log(data);\n  throw new Error(\"Something went wrong!\");\n}).catch((error) =&gt; {\n  console.log(\"Caught error:\", error.message);\n});\n</code></pre> <p>Aqu\u00ed, si ocurre alg\u00fan error en cualquiera de las funciones <code>then</code>, ser\u00e1 capturado por <code>catch</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#promiseall","title":"Promise.all()","text":"<p>El m\u00e9todo <code>Promise.all</code> permite ejecutar m\u00faltiples promesas en paralelo y esperar a que todas se resuelvan antes de continuar. Si alguna de las promesas se rechaza, <code>Promise.all</code> tambi\u00e9n se rechazar\u00e1.</p> <pre><code>(()=&gt;{\nconst promise1 = Promise.resolve(3);\nconst promise2 = 42;\nconst promise3 = new Promise((resolve, reject) =&gt; {\n  setTimeout(resolve, 100, 'foo');\n});\n\nPromise.all([promise1, promise2, promise3]).then((values) =&gt; {\n  console.log(values); // [3, 42, \"foo\"]\n});\n\n})();\n</code></pre> <p>En este ejemplo, <code>Promise.all</code> espera a que todas las promesas se resuelvan y luego imprime los valores resueltos en un array.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#arrays-y-promesas","title":"Arrays y promesas","text":"<p>En ocasiones es necesario recorrer un array y generar una promesa con cada elemento del array. Las situaciones pueden ser distintas, por ejemplo:</p> <ul> <li>No importa el orden ni si se cumplen las promesas: Se puede ejecutar un <code>.forEach()</code> sobre el array y crear las promesas independientemente. </li> </ul> <pre><code>(()=&gt;{\nconst array = [1, 2, 3, 4, 5];\n\narray.forEach(item =&gt; {\n  someAsyncFunction(item)\n    .then(result =&gt; {\n      console.log(`Result for item ${item}:`, result);\n    })\n    .catch(error =&gt; {\n      console.error(`Error for item ${item}:`, error);\n    });\n});\n\nfunction someAsyncFunction(item) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve(`Processed ${item}`);\n    }, Math.random() * 1000);\n  });\n}\n})();\n</code></pre> <ul> <li>No importa el orden, pero queremos hacer algo si se cumplen todas: Podemos transformar el array en un array de promesas con <code>.map()</code> y pasarlo a un <code>Promise.all()</code>.</li> </ul> <pre><code>(()=&gt;{\nconst array = [1, 2, 3, 4, 5];\n\nconst promises = array.map(item =&gt; someAsyncFunction(item));\n\nPromise.all(promises)\n  .then(results =&gt; {\n    console.log('All promises resolved:', results);\n  })\n  .catch(error =&gt; {\n    console.error('One or more promises rejected:', error);\n  });\n\nfunction someAsyncFunction(item) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve(`Processed ${item}`);\n    }, Math.random() * 1000);\n  });\n}\n})();\n</code></pre> <pre><code>Result for item 3: Processed 3\n</code></pre> <ul> <li>Las promesas se deben ejecutar en un cierto orden: No se puede hacer con <code>.forEach()</code> ni <code>.map()</code>, ya que no trata las promesas correctamente ni async/await. Es mejor usar un <code>for-of</code> con <code>async/await</code>.    </li> </ul> <pre><code>(()=&gt;{\nconst array = [1, 2, 3, 4, 5];\n\nasync function processArrayInOrder() {\n  for (const item of array) {\n    try {\n      const result = await someAsyncFunction(item);\n      console.log(`Result for item ${item}:`, result);\n    } catch (error) {\n      console.error(`Error for item ${item}:`, error);\n    }\n  }\n}\n\nprocessArrayInOrder();\n\nfunction someAsyncFunction(item) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve(`Processed ${item}`);\n    }, Math.random() * 1000);\n  });\n}\n})();\n</code></pre> <pre><code>All promises resolved: [\n  \"Processed 1\",\n  \"Processed 2\",\n  \"Processed 3\",\n  \"Processed 4\",\n  \"Processed 5\"\n]\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#asyncawait-en-javascript","title":"Async/Await en JavaScript","text":"<p>El uso de <code>async</code> y <code>await</code> en JavaScript ofrece una forma m\u00e1s concisa y legible de trabajar con promesas. Introducida en ECMAScript 2017, esta sintaxis facilita la gesti\u00f3n de operaciones as\u00edncronas, permitiendo escribir c\u00f3digo que parece s\u00edncrono mientras maneja promesas en segundo plano. </p> <p>Una funci\u00f3n definida con la palabra clave <code>async</code> autom\u00e1ticamente retorna una promesa. Esto significa que incluso si la funci\u00f3n parece devolver un valor regular, en realidad estar\u00e1 devolviendo una promesa que se resuelve con ese valor.</p> <p>El uso de <code>async</code> y <code>await</code> en JavaScript simplifica la gesti\u00f3n de operaciones as\u00edncronas, proporcionando una sintaxis m\u00e1s limpia y manejable en comparaci\u00f3n con el uso tradicional de promesas con <code>.then()</code> y <code>.catch()</code>. Con la introducci\u00f3n del top-level <code>await</code>, ahora es posible manejar operaciones as\u00edncronas de manera a\u00fan m\u00e1s directa en el nivel superior de los m\u00f3dulos. </p> <pre><code>(()=&gt;{\nasync function getUser() {\n  const response = await fetch('https://api.github.com/users/octocat');\n  const data = await response.json();\n  console.log(data);\n}\n\n// Ejecutar funci\u00f3n as\u00edncrona\ngetUser();\n})();\n</code></pre> <ol> <li> <p>Definici\u00f3n de la funci\u00f3n <code>async</code>:    <pre><code>async function getUser() {\n</code></pre>    Aqu\u00ed, <code>async</code> antes de la funci\u00f3n indica que esta funci\u00f3n es as\u00edncrona y retornar\u00e1 una promesa.</p> </li> <li> <p>Uso de <code>await</code>:    <pre><code>const response = await fetch('https://api.github.com/users/octocat');\nconst data = await response.json();\n</code></pre>    Dentro de una funci\u00f3n <code>async</code>, se puede usar <code>await</code> antes de una promesa para esperar su resoluci\u00f3n. En este caso, <code>await fetch</code> espera a que la promesa devuelta por <code>fetch</code> se resuelva, es decir, que la solicitud HTTP se complete y se reciba una respuesta. Del mismo modo, <code>await response.json()</code> espera a que se procese la respuesta en formato JSON.</p> </li> <li> <p>Ejecutar la funci\u00f3n as\u00edncrona:    <pre><code>getUser();\n</code></pre>    Llamar a <code>getUser()</code> ejecuta la funci\u00f3n as\u00edncrona. Dado que <code>getUser</code> retorna una promesa, se podr\u00eda encadenar con <code>.then()</code> si fuera necesario.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#top-level-await","title":"Top-Level Await","text":"<p>Introducido en 2024, el top-level <code>await</code> permite usar <code>await</code> directamente en el nivel superior de los m\u00f3dulos, sin necesidad de envolver el c\u00f3digo en una funci\u00f3n <code>async</code>. Esto simplifica el c\u00f3digo y mejora su legibilidad cuando se trabaja con operaciones as\u00edncronas en el contexto global del m\u00f3dulo.</p> <p><pre><code>const colors = fetch(\"../data/colors.json\").then((response) =&gt; response.json());\nexport default await colors;\n</code></pre> 1. Fetch con <code>await</code> a nivel superior:    <pre><code>const colors = fetch(\"../data/colors.json\").then((response) =&gt; response.json());\nexport default await colors;\n</code></pre>    En este ejemplo, se est\u00e1 utilizando <code>await</code> directamente en el nivel superior del m\u00f3dulo para esperar la resoluci\u00f3n de la promesa devuelta por <code>fetch</code>. Esto permite que <code>colors</code> contenga el resultado de la operaci\u00f3n as\u00edncrona sin necesidad de definir una funci\u00f3n <code>async</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/promesas.html#ventajas-de-asyncawait","title":"Ventajas de <code>async</code>/<code>await</code>","text":"<ol> <li> <p>Sintaxis m\u00e1s limpia y legible:    El c\u00f3digo as\u00edncrono escrito con <code>async</code>/<code>await</code> es m\u00e1s f\u00e1cil de leer y entender, ya que se parece m\u00e1s a c\u00f3digo s\u00edncrono. Esto facilita la identificaci\u00f3n de la l\u00f3gica y el flujo del programa.</p> </li> <li> <p>Manejo de errores simplificado:    Se pueden usar bloques <code>try/catch</code> para manejar errores en funciones <code>async</code>, lo que proporciona una forma clara y estructurada de gestionar excepciones.</p> </li> </ol> <pre><code>(()=&gt;{\n   async function getUser() {\n     try {\n       const response = await fetch('https://api.github.com/users/octocat');\n       if (!response.ok) throw new Error('Network response was not ok');\n       const data = await response.json();\n       console.log(data);\n     } catch (error) {\n       console.error('Fetching user failed:', error);\n     }\n   }\n   getUser();\n\n  })();\n</code></pre> <p>En este ejemplo, cualquier error que ocurra dentro de la funci\u00f3n <code>getUser</code> ser\u00e1 capturado y manejado en el bloque <code>catch</code>.</p> <ol> <li>Ejecuci\u00f3n secuencial de operaciones as\u00edncronas:    Utilizando <code>await</code>, se puede asegurar que las operaciones as\u00edncronas se ejecuten de manera secuencial, lo cual es \u00fatil cuando una operaci\u00f3n depende de los resultados de otra.</li> </ol> <pre><code>(()=&gt;{\nasync function fetchData() {\n     const user = await fetch('https://api.github.com/users/octocat').then(res =&gt; res.json());\n     const repos = await fetch(user.repos_url).then(res =&gt; res.json());\n     console.log(repos);\n   }\n   fetchData();\n})();\n</code></pre> <p>Aqu\u00ed, la segunda solicitud <code>fetch</code> solo se ejecuta despu\u00e9s de que la primera solicitud se haya completado y se haya obtenido la URL de los repositorios del usuario.</p> <p>Veamos ahora el ejemplo largo del <code>callback Hell</code> escrito con <code>async/await</code>:</p> <pre><code>document.addEventListener(\"DOMContentLoaded\", () =&gt; {\n    // 1. Petici\u00f3n al servidor utilizando Fetch y Promesas\n    async function hacerPeticion(url) {\n        try {\n            const respuesta = await fetch(url);\n            if (!respuesta.ok) {\n                throw new Error(`Error al hacer la petici\u00f3n a ${url}. Status: ${respuesta.status}`);\n            }\n            const datos = await respuesta.json();\n            return datos;\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 2. Leer un archivo del input utilizando Promesas\n    function leerArchivo() {\n        return new Promise((resolve, reject) =&gt; {\n            const inputArchivo = document.getElementById('archivoInput');\n            const archivo = inputArchivo.files[0];\n            if (!archivo) {\n                reject(new Error('No se ha seleccionado ning\u00fan archivo'));\n                return;\n            }\n            const lector = new FileReader();\n            lector.onload = function (evento) {\n                resolve(evento.target.result);\n            };\n            lector.onerror = function () {\n                reject(new Error('Error al leer el archivo'));\n            };\n            lector.readAsText(archivo);\n        });\n    }\n    // 3. Guardar los datos en IndexedDB utilizando Promesas\n    function guardarEnIndexedDB(datos) {\n        return new Promise((resolve, reject) =&gt; {\n            const solicitudDB = indexedDB.open('miBaseDeDatos', 1);\n            solicitudDB.onupgradeneeded = function (evento) {\n                const db = evento.target.result;\n                db.createObjectStore('archivos', { keyPath: 'id', autoIncrement: true });\n            };\n            solicitudDB.onsuccess = function (evento) {\n                const db = evento.target.result;\n                const transaccion = db.transaction('archivos', 'readwrite');\n                const almacen = transaccion.objectStore('archivos');\n                const solicitudInsertar = almacen.add({ contenido: datos });\n                solicitudInsertar.onsuccess = function () {\n                    resolve('Datos guardados correctamente en IndexedDB');\n                };\n                solicitudInsertar.onerror = function () {\n                    reject(new Error('Error al guardar en IndexedDB'));\n                };\n            };\n            solicitudDB.onerror = function () {\n                reject(new Error('Error al abrir IndexedDB'));\n            };\n        });\n    }\n\n    // Manejo del bot\u00f3n y ejecuci\u00f3n secuencial de las funciones\n    document.querySelector(\"#boton\").addEventListener(\"click\", async (event) =&gt; {\n        event.preventDefault();\n        try {\n            // 1. Petici\u00f3n al servidor\n            const datosServidor = await hacerPeticion('http://localhost:5500/datos.json');\n            console.log('Datos recibidos del servidor:', datosServidor);\n\n            // 2. Leer el archivo despu\u00e9s de un retraso simulado\n            await new Promise(resolve =&gt; setTimeout(resolve, 1000)); // Retraso de 1 segundo\n            const contenidoArchivo = await leerArchivo();\n            console.log('Contenido del archivo le\u00eddo:', contenidoArchivo);\n\n            // 3. Guardar los datos en IndexedDB\n            const mensaje = await guardarEnIndexedDB(contenidoArchivo + datosServidor);\n            console.log(mensaje);\n            console.log('Todas las operaciones se completaron con \u00e9xito.');\n        } catch (error) {\n            console.error(error.message);\n        }\n    });\n});\n</code></pre> <p>El c\u00f3digo de las funciones no se ha complicado demasiado. De hecho, el c\u00f3digo de la del fetch es mucho m\u00e1s sencillo. Estas funciones retornan una promesa a la que podemos esperar dentro de una funci\u00f3n <code>async</code> con un <code>await</code> y hemos reducido los callback a 1, el del evento del click. </p> <pre><code>\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/sobreprototypeJS.html","title":"Exemples de com utilitzar prototypes en JavaScript:","text":""},{"location":"Moduls/ARXIU/2425/DWEC/sobreprototypeJS.html#exemple-1-afegeix-un-metode-a-un-objecte","title":"Exemple 1: Afegeix un m\u00e8tode a un objecte","text":"<pre><code>function Persona(nom, edat) {\n    this.nom = nom;\n    this.edat = edat;\n}\n\nPersona.prototype.saluda = function() {\n    console.log(`Hola, em dic ${this.nom} i tinc ${this.edat} anys.`);\n};\n\nconst persona1 = new Persona('Joan', 30);\npersona1.saluda(); // Hola, em dic Joan i tinc 30 anys.\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/sobreprototypeJS.html#exemple-2-herencia-amb-prototypes","title":"Exemple 2: Her\u00e8ncia amb prototypes","text":"<pre><code>function Animal(nom) {\n    this.nom = nom;\n}\n\nAnimal.prototype.sona = function() {\n    console.log(`${this.nom} fa un so.`);\n};\n\nfunction Gos(nom, ra\u00e7a) {\n    Animal.call(this, nom);\n    this.ra\u00e7a = ra\u00e7a;\n}\n\nGos.prototype = Object.create(Animal.prototype);\nGos.prototype.constructor = Gos;\n\nGos.prototype.lladra = function() {\n    console.log(`${this.nom} est\u00e0 lladrant.`);\n};\n\nconst gos1 = new Gos('Rex', 'Pastor Alemany');\ngos1.sona(); // Rex fa un so.\ngos1.lladra(); // Rex est\u00e0 lladrant.\n</code></pre> <p>En el primer exemple, afegim un m\u00e8tode <code>saluda</code> a l'objecte <code>Persona</code> mitjan\u00e7ant el seu prototype. En el segon exemple, creem una her\u00e8ncia entre <code>Animal</code> i <code>Gos</code>, permetent que <code>Gos</code> hereti els m\u00e8todes de <code>Animal</code> i afegeixi els seus propis m\u00e8todes.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/sobreprototypeJS.html#quan-utilitzar-prototype","title":"Quan utilitzar prototype?","text":"<p>La decisi\u00f3 de si utilitzar <code>prototype</code> o incloure la funci\u00f3 dins la definici\u00f3 d'un objecte dep\u00e8n de diversos factors.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/sobreprototypeJS.html#quan-utilitzar-prototype_1","title":"Quan utilitzar <code>prototype</code>:","text":"<ol> <li> <p>M\u00e8todes compartits: Si vols que tots els objectes creats a partir d'un constructor comparteixin el mateix m\u00e8tode, utilitza <code>prototype</code>. Aix\u00f2 estalvia mem\u00f2ria, ja que el m\u00e8tode es defineix una sola vegada i es comparteix entre totes les inst\u00e0ncies.     <pre><code>function Persona(nom) {\n    this.nom = nom;\n}\n\nPersona.prototype.saluda = function() {\n    console.log(`Hola, em dic ${this.nom}.`);\n};\n\nconst persona1 = new Persona('Joan');\nconst persona2 = new Persona('Maria');\npersona1.saluda(); // Hola, em dic Joan.\npersona2.saluda(); // Hola, em dic Maria.\n</code></pre></p> </li> <li> <p>Her\u00e8ncia: Quan necessites crear una jerarquia d'objectes amb her\u00e8ncia, <code>prototype</code> \u00e9s essencial per permetre que les subclasses heretin m\u00e8todes de les superclasses.     <pre><code>function Animal(nom) {\n    this.nom = nom;\n}\n\nAnimal.prototype.sona = function() {\n    console.log(`${this.nom} fa un so.`);\n};\n\nfunction Gos(nom) {\n    Animal.call(this, nom);\n}\n\nGos.prototype = Object.create(Animal.prototype);\nGos.prototype.constructor = Gos;\n\nGos.prototype.lladra = function() {\n    console.log(`${this.nom} est\u00e0 lladrant.`);\n};\n\nconst gos1 = new Gos('Rex');\ngos1.sona(); // Rex fa un so.\ngos1.lladra(); // Rex est\u00e0 lladrant.\n</code></pre></p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/sobreprototypeJS.html#quan-incloure-la-funcio-dins-la-definicio-dun-objecte","title":"Quan incloure la funci\u00f3 dins la definici\u00f3 d'un objecte:","text":"<ol> <li> <p>M\u00e8todes espec\u00edfics per inst\u00e0ncia: Si el m\u00e8tode \u00e9s espec\u00edfic per a cada inst\u00e0ncia i no es compartir\u00e0 entre altres inst\u00e0ncies, pots definir-lo dins el constructor.     <pre><code>function Persona(nom) {\n    this.nom = nom;\n    this.saluda = function() {\n        console.log(`Hola, em dic ${this.nom}.`);\n    };\n}\n\nconst persona1 = new Persona('Joan');\nconst persona2 = new Persona('Maria');\npersona1.saluda(); // Hola, em dic Joan.\npersona2.saluda(); // Hola, em dic Maria.\n</code></pre></p> </li> <li> <p>Simplicitat: Per a objectes petits o quan no necessites her\u00e8ncia o m\u00e8todes compartits, definir els m\u00e8todes dins el constructor pot ser m\u00e9s senzill i directe.</p> </li> </ol> <p>En resum, utilitza <code>prototype</code> per a m\u00e8todes compartits i her\u00e8ncia, i defineix els m\u00e8todes dins el constructor per a m\u00e8todes espec\u00edfics per inst\u00e0ncia o per simplicitat. Si tens m\u00e9s dubtes o necessites m\u00e9s exemples, estic aqu\u00ed per ajudar-te!</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/index.html","title":"Index","text":"<p>Hola, correcte</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html","title":"Typescript","text":"<p>En sus inicios, JavaScript se utilizaba principalmente para la validaci\u00f3n de formularios y otras tareas sencillas en el navegador. Sin embargo, a medida que la complejidad de las aplicaciones web aument\u00f3, surgieron bibliotecas como jQuery y frameworks como Angular para facilitar el desarrollo de proyectos m\u00e1s grandes y complejos. Tambi\u00e9n aparecieron herramientas dise\u00f1adas para mejorar la disciplina de programaci\u00f3n en JavaScript, siendo TypeScript una de las m\u00e1s destacadas.</p> <p>TypeScript es un superconjunto tipado de JavaScript que compila a JavaScript plano. Introduce caracter\u00edsticas como el tipado est\u00e1tico, que permite detectar errores en tiempo de escritura, y ofrece autocompletado en funci\u00f3n del tipo de variable. Adem\u00e1s, permite utilizar m\u00e9todos est\u00e1ticos de programaci\u00f3n, clases y m\u00e9todos (antes de ES6).</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#problemas-de-javascript","title":"Problemas de JavaScript","text":"<p>JavaScript, en su forma nativa, presenta varios problemas que pueden dificultar el desarrollo de aplicaciones complejas:</p> <ol> <li>Errores por variables no definidas: No declarar una variable puede llevar a errores dif\u00edciles de depurar.</li> <li>Propiedades inexistentes en objetos: Acceder a propiedades que no existen puede causar fallos en tiempo de ejecuci\u00f3n.</li> <li>Funciones de terceros: No siempre se sabe c\u00f3mo funcionan las funciones importadas, lo que puede generar problemas.</li> <li>Sobrescritura de variables y funciones: La flexibilidad de JavaScript permite sobrescribir variables y funciones, lo que puede resultar en comportamientos inesperados.</li> </ol> <p>Con la llegada de ES6, muchos de estos problemas se mitigaron, pero TypeScript proporciona una capa adicional de seguridad y eficiencia.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#transpilacion-de-typescript","title":"Transpilaci\u00f3n de TypeScript","text":"<p>Los navegadores no entienden TypeScript directamente, por lo que es necesario transpilar el c\u00f3digo TypeScript a JavaScript. Este proceso se realiza mediante herramientas autom\u00e1ticas que aseguran que el c\u00f3digo resultante sea compatible con diferentes navegadores, incluidos los m\u00e1s antiguos.</p> <p>Consideremos el siguiente c\u00f3digo JavaScript:</p> <pre><code>function saludar(nombre) {\n  console.table('Hola ' + nombre); // Hola John\n}\nconst persona = {\n  nombre: 'John'\n};\nsaludar(persona.nombre);\n</code></pre> <p>El c\u00f3digo anterior funciona, pero no proporciona garant\u00edas de tipo. No se puede asegurar que la funci\u00f3n saludar siempre reciba un string como argumento.</p> <p>Ahora veamos c\u00f3mo ser\u00eda el mismo c\u00f3digo en TypeScript:</p> <pre><code>function saludar(nombre: string) {\n  console.table('Hola ' + nombre);\n}\nconst persona = {\n  nombre: 'John'\n};\nsaludar(persona.nombre);\n</code></pre> <p>Al cambiar la extensi\u00f3n de .js a .ts, Visual Studio y otros editores de texto pueden identificar y se\u00f1alar errores de tipo, proporcionando una experiencia de desarrollo m\u00e1s robusta.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#configuracion-de-typescript","title":"Configuraci\u00f3n de TypeScript","text":"<p>Para transpilar TypeScript a JavaScript, se utiliza el comando tsc app.ts. Sin embargo, podemos configurar TypeScript para que transpile autom\u00e1ticamente cada vez que guardamos un archivo:</p> <ol> <li>Inicializar TypeScript: Ejecutar <code>tsc --init</code> crea un archivo <code>tsconfig.json</code>, que puede ser utilizado tanto por tsc como por Visual Studio.</li> <li>Transpilaci\u00f3n Autom\u00e1tica: Ejecutar tsc -w mantiene el proceso en espera de cambios en los archivos <code>.ts</code> para transpilar autom\u00e1ticamente.</li> </ol> <p>Frameworks como Angular ya vienen configurados para manejar esta transpilaci\u00f3n de manera autom\u00e1tica, simplificando a\u00fan m\u00e1s el proceso de desarrollo.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#estandares-en-typescript","title":"Est\u00e1ndares en TypeScript","text":"<p>TypeScript, en su archivo <code>tsconfig.json</code>, transpila por defecto de TypeScript a JavaScript ES6. Aunque nosotros podemos programar en ES6, ES5 es m\u00e1s compatible con navegadores antiguos y puede realizar las mismas funciones que ES6. Las novedades de ES6, como las clases, let, const, y las funciones flecha, est\u00e1n dise\u00f1adas para mejorar la programaci\u00f3n y son m\u00e1s parecidas a las caracter\u00edsticas de TypeScript.</p> <p>Transpila este ejemplo sencillo para entender c\u00f3mo funciona la transpilaci\u00f3n de ES6 a ES5:</p> <pre><code>let nombre = 'Joaquin';\nif(true){\n    let nombre = 'Chimo';\n}\nconsole.log(nombre);\n</code></pre> <p>En este ejemplo, let declara variables con \u00e1mbito de bloque. Cuando se transpila a ES5, <code>let</code> se convierte en <code>var</code>, que no tiene \u00e1mbito de bloque, lo que puede cambiar el comportamiento del c\u00f3digo.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#tipos-de-datos","title":"Tipos de Datos","text":"<p>TypeScript asigna un tipo de datos est\u00e1tico en la primera asignaci\u00f3n no expl\u00edcita. Sin embargo, es m\u00e1s recomendable declarar expl\u00edcitamente los tipos de datos, como en otros lenguajes tipados. Si necesitamos tipado din\u00e1mico, podemos usar el tipo any, aunque no es recomendable.</p> <p>Ejemplos de declaraci\u00f3n de tipos en TypeScript: <pre><code>let nombre: string = 'Joaquin';\nlet numero: number = 123;  // (en min\u00fascula)\nlet cualquierDato: any;\nlet booleano: boolean;\nlet hoy: Date = new Date();  // Tipo clase\nlet persona = {\n    nombre: 'Pepe',\n    edad: 30\n};\nlet personajes: string[] = [];\nlet p: Array&lt;string&gt; = [];\n</code></pre></p> <p>Si intentamos asignar otros datos al objeto persona, TypeScript nos ayudar\u00e1 a detectar errores en tiempo de escritura.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#parametros-de-las-funciones-y-valores-de-retorno","title":"Par\u00e1metros de las Funciones y Valores de Retorno","text":"<p>TypeScript nos permite definir el tipo de los par\u00e1metros de las funciones y su valor de retorno. Esto ayuda a prevenir errores y a mejorar la autocompletaci\u00f3n en los editores de texto.</p> <pre><code>function sumar(a: number, b: number): number {\n    return a + b;\n}\n</code></pre> <p>En este ejemplo, los par\u00e1metros a y b son de tipo <code>number</code>, y la funci\u00f3n retorna un valor de tipo <code>number</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#funciones-flecha-es6-a-es5","title":"Funciones Flecha: ES6 a ES5","text":"<p>Las funciones flecha de ES6 ofrecen una sintaxis m\u00e1s concisa para escribir funciones an\u00f3nimas y no tienen su propio contexto this, lo que puede ser beneficioso en muchos casos. Al transpilar a ES5, estas funciones se convierten en funciones normales.</p> <p>Ejemplo de una funci\u00f3n flecha: <pre><code>const saludar = (nombre: string): void =&gt; {\n    console.log('Hola ' + nombre);\n};\n</code></pre> Transpilado a ES5: <pre><code>var saludar = function (nombre) {\n    console.log('Hola ' + nombre);\n};\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#promesas-y-tipado-en-typescript","title":"Promesas y Tipado en TypeScript","text":"<p>A continuaci\u00f3n, se muestra un ejemplo de c\u00f3mo se pueden usar promesas en TypeScript: <pre><code>(() =&gt; {\n    const recogerEsencia = (cantidad: number): Promise&lt;number&gt; =&gt; {\n        let cantidadActual = 1000;\n        return new Promise((resolve, reject) =&gt; {\n            if (cantidad &gt; cantidadActual) {\n                reject('No queda');\n            } else {\n                cantidadActual -= cantidad;\n                resolve(cantidadActual);\n            }\n        });\n    }\n    recogerEsencia(500)\n        .then(cantidadActual =&gt; console.log(`Queda ${cantidadActual}`))\n        .catch(err =&gt; console.warn(err));\n})();\n</code></pre> En este ejemplo, la funci\u00f3n recogerEsencia retorna una promesa que resuelve con la cantidad actual de esencia si hay suficiente, o rechaza con un mensaje de error si no hay suficiente. La funci\u00f3n est\u00e1 tipada para retornar una Promise, lo que facilita la comprensi\u00f3n y el mantenimiento del c\u00f3digo."},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#transpilacion-a-es6","title":"Transpilaci\u00f3n a ES6","text":"<p>ES5 no soporta promesas de manera nativa, por lo que TypeScript no puede transpilar promesas a ES5. Para solucionar esto, debemos cambiar el objetivo de la transpilaci\u00f3n a ES6 en el archivo tsconfig.json. Angular ya utiliza bibliotecas que permiten que las promesas funcionen incluso en ES5. <pre><code>{\n    \"compilerOptions\": {\n        \"target\": \"ES6\"\n    }\n}\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#interfaces","title":"Interfaces","text":"<p>Las interfaces en TypeScript nos permiten definir la forma de los objetos, lo que facilita la validaci\u00f3n y el autocompletado en tiempo de desarrollo. <pre><code>(() =&gt; {\n    function enviar(persona: { nombre: string }) { // Problem\u00e1tico\n        console.log(`Enviando a ${persona.nombre} a Arrakis`);\n    }\n\n    let persona = { nombre: 'Jessica', edad: 30 };\n    enviar(persona);\n\n    ///////////////////// Interfaces ///////////////////////\n    interface Caracter {\n        nombre: string,\n        edad: number,\n        familia?: string // opcional\n    }\n\n    let personaInterface: Caracter = { nombre: 'Hawat', edad: 80 };\n\n    function enviarInterface(persona: Caracter) { // M\u00e1s f\u00e1cil de mantener\n        console.log(`Enviando a ${persona.nombre} a Arrakis`);\n    }\n\n    enviarInterface(personaInterface);\n})();\n</code></pre> En este ejemplo, la interfaz Caracter define la estructura del objeto personaInterface. Usar interfaces hace que el c\u00f3digo sea m\u00e1s f\u00e1cil de mantener y refactorizar.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#clases","title":"Clases","text":"<p><pre><code>(() =&gt; {\n    class Recolector {\n        private piloto: string = 'fremen';\n        constructor(\n            public identificador: string, \n            public propietario: string, \n            public buenEstado: boolean = true, \n            private lugar?: string\n        ) {}\n    }\n\n    let rec = new Recolector('1234', 'cofradia', true, 'desierto');\n    console.log(rec.piloto);\n})();\n</code></pre> En este ejemplo, la clase Recolector tiene propiedades p\u00fablicas y privadas, y un constructor que inicializa estas propiedades. Adem\u00e1s, hay valores por defecto y par\u00e1metros opcionales.</p> <p>En TypeScript, puedes definir los par\u00e1metros del constructor directamente en la lista de par\u00e1metros del constructor y usar modificadores de acceso (public, private, protected, readonly). Esto autom\u00e1ticamente crea e inicializa esos atributos en la clase, lo que elimina la necesidad de declarar y asignar manualmente estos par\u00e1metros dentro del cuerpo del constructor usando this.</p> <p>Si lo transpilamos a ES5: <pre><code>var Recolector = /** @class */ (function () {\n    function Recolector(identificador, propietario, buenEstado, lugar) {\n        if (buenEstado === void 0) { buenEstado = true; }\n        this.identificador = identificador;\n        this.propietario = propietario;\n        this.buenEstado = buenEstado;\n        this.lugar = lugar;\n    }\n    return Recolector;\n}());\n\nvar recolector = new Recolector('1234', 'cofradia', true, 'desierto');\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/Typescript.html#decoradores","title":"Decoradores","text":"<p>Los decoradores en TypeScript son una caracter\u00edstica experimental que se usa extensivamente en Angular para a\u00f1adir metadatos a clases y sus miembros. <pre><code>(() =&gt; {\n    function imprimirConsola(constructorClase: Function) {\n        console.log(constructorClase);\n    }\n\n    @imprimirConsola  // Necesita habilitar experimentalDecorators en tsconfig\n    class Recolector {\n        constructor(\n            public identificador: string, \n            public propietario: string, \n            public buenEstado: boolean = true, \n            private lugar?: string\n        ) {}\n    }\n\n    let rec = new Recolector('1234', 'cofradia', true, 'desierto');\n})();\n</code></pre> Para utilizar decoradores, debemos habilitar experimentalDecorators en tsconfig.json: <pre><code>{\n    \"compilerOptions\": {\n        \"experimentalDecorators\": true\n    }\n}\n</code></pre> Aunque nosotros no crearemos decoradores, Angular los utiliza ampliamente para definir componentes, servicios, y otros elementos.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html","title":"Introducci\u00f3n a Angular","text":"<p>Angular es un framework de desarrollo web de c\u00f3digo abierto, mantenido por Google, para la creaci\u00f3n de aplicaciones web front-end din\u00e1micas. Se basa en TypeScript, una extensi\u00f3n de JavaScript que a\u00f1ade tipado est\u00e1tico, para mejorar la legibilidad, mantenibilidad y robustez del c\u00f3digo. </p> <p>Angular cambia totalmente la manera de programar. Reduce significativamente el c\u00f3digo que hay que escribir a cambio de ser muy r\u00edgido en la manera de tratar con los elementos de la aplicaci\u00f3n. Por tanto, tiene una curva de aprendizaje un poco alta al principio. </p> <p>Evoluci\u00f3n del nombre y versiones</p> <p>El framework ha experimentado cambios en su nombre y esquema de versiones a lo largo del tiempo:</p> <ul> <li>Hasta la versi\u00f3n 1.7: Angular.js</li> <li>Desde la versi\u00f3n 2: Angular 2, 4, 5, 6, 7, ..., 18 (actual)</li> </ul> <p>Cada 6 meses libera una nueva versi\u00f3n. Suelen ser bastante compatibles entre las que est\u00e1n pr\u00f3ximas y las \u00faltimas son retrocompatibles, excepto entre la 1 y la 2, donde cambi\u00f3 casi todo. </p> <p>Caracter\u00edsticas principales</p> <ul> <li>Expressivitad en las plantillas HTML: Permite crear interfaces de usuario din\u00e1micas y declarativas utilizando sintaxis HTML enriquecida.</li> <li>Dise\u00f1o modular y Lazy Loading: Promueve la organizaci\u00f3n del c\u00f3digo en m\u00f3dulos reutilizables y la carga en diferido de componentes para optimizar el rendimiento.</li> <li>Facilidad para reutlizar componentes: Fomenta la creaci\u00f3n de componentes reutilizables que encapsulan funcionalidad y l\u00f3gica de negocio, mejorando la modularidad y mantenibilidad del c\u00f3digo.</li> <li>Comunicaci\u00f3n fluida con el backend: Facilita la comunicaci\u00f3n entre la aplicaci\u00f3n Angular y el servidor backend, permitiendo diversas tecnolog\u00edas como RESTful APIs, WebSockets y Server-Side Rendering.</li> <li>Herramientas de desarrollo potentes: Ofrece una completa suite de herramientas de desarrollo, como Augury, Karma y Jasmine, para facilitar la creaci\u00f3n, prueba y depuraci\u00f3n de aplicaciones.</li> <li>Integraci\u00f3n con frameworks de dise\u00f1o: Se integra perfectamente con frameworks de dise\u00f1o populares como Bootstrap, Angular Material e Ionic, permitiendo crear interfaces de usuario atractivas y consistentes.</li> <li>Single Page Applications (SPAs): Permite la creaci\u00f3n de aplicaciones web de una sola p\u00e1gina (SPAs).</li> <li>Arquitectura extensible: Posee un sistema modular extensible que facilita la incorporaci\u00f3n de nuevas funcionalidades y bibliotecas de terceros.</li> <li>Reactividad simplificada: Simplifica la gesti\u00f3n de la reactividad en la interfaz de usuario, permitiendo que los cambios en los datos se reflejen autom\u00e1ticamente en la vista.</li> <li>DOM virtual: Implementa un DOM virtual que optimiza el rendimiento y reduce las manipulaciones directas del DOM real.</li> <li>Pensado para grandes aplicaciones: Est\u00e1 dise\u00f1ado para el desarrollo de aplicaciones web a gran escala, ofreciendo caracter\u00edsticas como el enrutado, la gesti\u00f3n de estado y la inyecci\u00f3n de dependencias.</li> </ul> <p>Tipos de aplicaciones web con Angular</p> <p>Angular se puede utilizar para desarrollar diferentes tipos de aplicaciones web:</p> <ul> <li>P\u00e1ginas web tradicionales: Permite generar p\u00e1ginas web din\u00e1micas con HTML generado en el servidor y Javascript para la interacci\u00f3n y las peticiones AJAX.</li> <li>Single Page Applications (SPAs): Facilita la creaci\u00f3n de SPAs que generan el HTML en el cliente a partir de datos JSON o XML enviados por el servidor. Puede que este tipo de APPs sean para las que est\u00e1 m\u00e1s preparado. </li> <li>Progressive Web Applications (PWAs): Brinda soporte para el desarrollo de PWAs, que ofrecen una experiencia similar a las aplicaciones nativas, con la posibilidad de funcionar sin conexi\u00f3n y acceso a las capacidades del dispositivo.</li> <li>Aplicaciones h\u00edbridas: Permite la creaci\u00f3n de aplicaciones h\u00edbridas que se ejecutan dentro de un navegador web m\u00ednimo embebido en la aplicaci\u00f3n nativa, utilizando tecnolog\u00edas como Cordova o Ionic.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#requisitos-previos-para-comenzar-con-angular","title":"Requisitos previos para comenzar con Angular","text":"<p>Instalaci\u00f3n de herramientas b\u00e1sicas</p> <p>Antes de adentrarnos en el mundo de Angular, es necesario contar con algunas herramientas esenciales para el desarrollo:</p> <p>1. Node.js:</p> <pre><code>sudo apt install nodejs\n</code></pre> <p>2. npm:</p> <pre><code>sudo apt install npm\n</code></pre> <p>3. TypeScript:</p> <pre><code>sudo npm install -g typescript\n</code></pre> <p>4. CLI de Angular:</p> <ul> <li>La interfaz de l\u00ednea de comandos de Angular (CLI) facilita la creaci\u00f3n, desarrollo y mantenimiento de proyectos Angular. </li> </ul> <pre><code>sudo npm install -g @angular/cli\n</code></pre> <p>5. Editor de texto:</p> <ul> <li>En Visual Studio<ul> <li>Angular 2 TypeScript Emmet</li> <li>Angular Language Service</li> <li>Angular Snippets</li> <li>Material icon Theme</li> </ul> </li> </ul> <p>6. Navegador web:</p> <p>https://angular.io/guide/devtools </p> <p>8. Actualizaci\u00f3n de Node.js:</p> <pre><code>sudo npm install -g n\nsudo n stable\nsudo npm install -g npm\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#el-contrato-del-framework","title":"El \"contrato\" del framework:","text":"<p>Es importante tener en cuenta que la adopci\u00f3n de un framework como Angular implica un compromiso por parte del desarrollador. Al utilizar un framework, se aceptan ciertas limitaciones y responsabilidades:</p> <ul> <li>Inversi\u00f3n de tiempo: Se requiere un tiempo de aprendizaje para comprender el funcionamiento del framework y sus mejores pr\u00e1cticas.</li> <li>Cambio de h\u00e1bitos: El uso de un framework implica un cambio en la forma de abordar el desarrollo web, lo que puede requerir la adaptaci\u00f3n de h\u00e1bitos y metodolog\u00edas de trabajo previas.</li> <li>Restricciones en el uso de librer\u00edas: Algunos frameworks pueden limitar el uso de ciertas librer\u00edas o herramientas externas, obligando a trabajar dentro del ecosistema propio del framework.</li> <li>Abstracci\u00f3n y potencial falta de comprensi\u00f3n: La abstracci\u00f3n que ofrece el framework puede, en ocasiones, dificultar la comprensi\u00f3n profunda del funcionamiento interno de las aplicaciones.</li> <li>Dependencia y actualizaciones: El desarrollo queda sujeto a las actualizaciones y evoluciones del framework, lo que puede requerir cambios constantes en el c\u00f3digo y la adaptaci\u00f3n a nuevas versiones.</li> <li>Compromiso a largo plazo: La adopci\u00f3n de un framework implica un compromiso a largo plazo con la tecnolog\u00eda elegida, lo que puede dificultar el cambio a otro framework en el futuro.</li> <li>Potencial p\u00e9rdida de habilidades b\u00e1sicas: El uso excesivo de un framework puede llevar a la p\u00e9rdida de pr\u00e1ctica y dominio de las habilidades de desarrollo web b\u00e1sicas.</li> </ul> <p>Silos y portabilidad del c\u00f3digo:</p> <p>Es importante recordar que el uso de un framework espec\u00edfico puede crear un \"silo\" en el desarrollo, dificultando la reutilizaci\u00f3n del c\u00f3digo en otros proyectos que no utilicen el mismo framework. </p> <p>Alternativas:</p> <p>Es importante destacar que el desarrollo web no se limita \u00fanicamente al uso de frameworks. La opci\u00f3n de trabajar con JavaScript puro (\"Vanilla JS\") junto con librer\u00edas puntuales como JQuery, Lodash, Ramda, Mocha o RxJS sigue siendo una alternativa viable para muchos proyectos.</p> <p>https://javarome.medium.com/design-noframework-bbc00a02d9b3 </p> <p>Antes de embarcarse en el desarrollo con Angular, es crucial evaluar cuidadosamente las necesidades del proyecto, las habilidades del equipo y las implicaciones a largo plazo de adoptar un framework. </p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#primeros-pasos-con-angular-hola-mundo","title":"Primeros pasos con Angular: \u00a1Hola Mundo!","text":"<p>En este cap\u00edtulo, daremos nuestros primeros pasos en el mundo de Angular creando una sencilla aplicaci\u00f3n que muestre el cl\u00e1sico mensaje \"Hola Mundo\". A lo largo del camino, conoceremos algunos conceptos b\u00e1sicos del framework y la estructura de un proyecto Angular.</p> <p>Preparaci\u00f3n del entorno</p> <ol> <li>Instalaci\u00f3n de herramientas previas:</li> </ol> <pre><code>sudo npm install -g @angular/cli [--force]\nng new my-app\ncd my-app \nng serve -o\n</code></pre> <ol> <li>Creaci\u00f3n de un nuevo proyecto:</li> </ol> <pre><code>ng new mi-aplicacion\n</code></pre> <p>Este comando crear\u00e1 la estructura b\u00e1sica del proyecto.</p> <p>Estructura del proyecto:</p> <p>La estructura de un proyecto Angular t\u00edpico se compone de las siguientes carpetas:</p> <ul> <li>src: Contiene el c\u00f3digo fuente de la aplicaci\u00f3n, incluyendo componentes, servicios, m\u00f3dulos y otros elementos.</li> <li>assets: Almacena recursos est\u00e1ticos como im\u00e1genes, fuentes y archivos CSS.</li> <li>environments: Define las variables de entorno para diferentes configuraciones (desarrollo, producci\u00f3n, etc.).</li> <li>node_modules: Contiene las dependencias de terceros instaladas mediante npm.</li> <li>package.json: El archivo de configuraci\u00f3n del proyecto, donde se especifican las dependencias, scripts y metadatos del proyecto.</li> <li>tsconfig.json: La configuraci\u00f3n de TypeScript para el proyecto.</li> </ul> <p>Creando el \"Hola Mundo\":</p> <ol> <li>Editando el componente principal:</li> </ol> <p>Modificar el contenido del archivo <code>app.component.ts</code> de la siguiente manera:</p> <pre><code>import { Component } from '@angular/core';  // Importaci\u00f3n del decorado\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet], // Los componentes standalone tienen imports\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {  // Un componente es una clase decorada\n  title = 'Mi primera aplicaci\u00f3n Angular';\n}\n</code></pre> <p>Este c\u00f3digo define un componente llamado <code>AppComponent</code> con un selector <code>app-root</code>. El selector indica c\u00f3mo se usar\u00e1 este componente en la plantilla HTML. El componente tiene un t\u00edtulo definido como <code>Mi primera aplicaci\u00f3n Angular</code>.</p> <ol> <li>Creando la plantilla HTML:</li> </ol> <p>El archivo <code>app.component.html</code>, dentro de las etiquetas <code>&lt;body&gt;</code>:</p> <pre><code>&lt;p&gt;\u00a1Hola Mundo!&lt;/p&gt;\n</code></pre> <ol> <li>Ejecutando la aplicaci\u00f3n:</li> </ol> <p>En la terminal, ejecutar el siguiente comando para iniciar el servidor de desarrollo local:</p> <pre><code>ng serve -o\n</code></pre> <p>Esto abrir\u00e1 un navegador web en la direcci\u00f3n <code>http://localhost:4200</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#angular-cli","title":"Angular CLI","text":"<p>El Angular CLI (Command Line Interface) act\u00faa como un asistente que permite crear, generar, compilar, ejecutar y mantener un proyecto Javascript. Se podr\u00eda programar sin ella, pero sus comandos despliegan unas plantillas de elementos t\u00edpico de Angular en un instante y evitan el error humano en cosas rutinarias. </p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#generando-elementos-del-framework","title":"Generando elementos del framework:","text":"<p>El CLI facilita la generaci\u00f3n de los elementos b\u00e1sicos que componen una aplicaci\u00f3n Angular. Veamos algunos de los comandos m\u00e1s utilizados:</p> <ul> <li>ng generate component : Crea un nuevo componente con el nombre especificado. <li>ng generate directive : Genera una directiva para modificar el comportamiento del DOM. <li>ng generate pipe : Crea un pipe para transformar datos en la vista. <li>ng generate service : Genera un servicio para encapsular l\u00f3gica y compartir datos entre componentes. <li>ng generate class : Genera una clase simple de TypeScript. <li>ng generate interface : Crea una interfaz para definir contratos de tipos. <li>ng generate enum : Genera una enumeraci\u00f3n para definir un conjunto de valores constantes. <li>ng generate module : Crea un nuevo m\u00f3dulo para organizar el c\u00f3digo de la aplicaci\u00f3n. <li>ng generate guard : Genera un guard para controlar el acceso a rutas en la aplicaci\u00f3n. <p><code>generate</code>puede ser resumido con <code>g</code>, por ejemplo: ng g component"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#anadiendo-e-integrando-librerias","title":"A\u00f1adiendo e integrando librer\u00edas:","text":"<p>El CLI tambi\u00e9n permite incorporar librer\u00edas externas al proyecto de forma sencilla. Por ejemplo, para a\u00f1adir el popular <code>@angular/material</code> que ofrece componentes de dise\u00f1o predefinidos:</p> <pre><code>ng add @angular/material\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#actualizando-angular","title":"Actualizando Angular:","text":"<pre><code>ng update --all\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#compilando-la-aplicacion","title":"Compilando la aplicaci\u00f3n:","text":"<p>Para generar una versi\u00f3n optimizada de la aplicaci\u00f3n lista para producci\u00f3n, se utiliza el comando <code>ng build</code>. Puedes a\u00f1adir la opci\u00f3n <code>--prod</code> para habilitar optimizaciones adicionales:</p> <pre><code>ng build [--prod]\n</code></pre> <p>Creando un nuevo proyecto:</p> <p>Para iniciar un nuevo proyecto Angular, se utiliza el comando <code>ng new</code>:</p> <pre><code>ng new mi-proyecto-angular\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#componentes-en-angular","title":"Componentes en Angular","text":"<p>Cada componente encapsula una parte espec\u00edfica de la interfaz de usuario (UI) y su funcionalidad asociada, promoviendo la modularidad y la reutilizaci\u00f3n de c\u00f3digo. A modo de bloques de construcci\u00f3n, los componentes se ensamblan para crear aplicaciones web din\u00e1micas y escalables.</p> <p>Importando el decorador fundamental:</p> <p>Para declarar un componente, es necesario importar el decorador <code>Component</code> desde el paquete <code>@angular/core</code>. Este decorador proporciona metadatos esenciales sobre el componente, como su selector, plantilla y estilos.</p> <pre><code>import { Component } from '@angular/core';\n</code></pre> <p>Estructura de un componente:</p> <p>Un componente se define como una clase TypeScript decorada con <code>@Component</code>. La estructura b\u00e1sica de un componente incluye:</p> <ul> <li>Selector: Un identificador \u00fanico que define c\u00f3mo se utilizar\u00e1 el componente en el HTML. Se especifica mediante la propiedad <code>selector</code> del decorador.</li> <li>Plantilla: El c\u00f3digo HTML que define la estructura visual del componente. Se define mediante la propiedad <code>templateUrl</code> del decorador, que apunta a un archivo HTML externo.</li> <li>Estilos: Las reglas CSS que definen la apariencia del componente. Se definen mediante la propiedad <code>styleUrls</code> del decorador, que apunta a un archivo CSS externo.</li> <li>L\u00f3gica del componente: El c\u00f3digo TypeScript que define el comportamiento del componente, como propiedades, m\u00e9todos y eventos. Este c\u00f3digo se escribe dentro de la clase del componente.</li> </ul> <p>Componentes Standalone:</p> <p>En Angular, los componentes pueden existir de dos maneras: como parte de un m\u00f3dulo o como componentes Standalone. Los componentes Standalone no requieren de un m\u00f3dulo para funcionar y se definen de forma independiente. Para declarar un componente Standalone, se utiliza la propiedad <code>standalone</code> del decorador <code>@Component</code> y se establece en <code>true</code>.</p> <p>El los pr\u00f3ximos puntos, vamos a explorar c\u00f3mo hacer componentes din\u00e1micos y reactivos y c\u00f3mo comunicar componentes y los componentes con otros elementos del framework. </p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#reactividad","title":"Reactividad","text":"<p>La reactividad web permite simplificar la manera en la que se actualizan los datos entre la interfaz y el estado de la aplicaci\u00f3n. Esta gesti\u00f3n de la reactividad, en Angular est\u00e1 basada en <code>RxJS</code> y actualmente tambi\u00e9n en <code>Signals</code>. En ocasiones usaremos los elementos de RxJS de forma expl\u00edcita, pero en el caso de las plantillas de los componentes, se hace de forma mucho m\u00e1s simplificada mediante interpolaciones. </p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#interpolacion","title":"Interpolaci\u00f3n","text":"<p>La interpolaci\u00f3n en Angular es una herramienta fundamental para inyectar datos din\u00e1micos en las plantillas HTML, permitiendo que la interfaces de usuario sean reactivas y se actualicen autom\u00e1ticamente en funci\u00f3n de los cambios en los datos.</p> <p>La interpolaci\u00f3n permite incrustar expresiones JavaScript dentro de las plantillas HTML utilizando las llaves dobles <code>{{ }}</code>. El valor de la expresi\u00f3n se eval\u00faa y se inserta en el lugar correspondiente.</p> <p>La interpolaci\u00f3n hace que las plantillas sean din\u00e1micas, ya que el contenido se actualiza autom\u00e1ticamente cuando los valores de las variables o las expresiones cambian en el c\u00f3digo TypeScript. Esto permite crear interfaces de usuario que responden a eventos, interacciones del usuario o cambios en los datos.</p> <p>Casos de uso comunes:</p> <ul> <li>Mostrar valores de variables: Puedes mostrar el valor de cualquier variable o propiedad de un componente dentro de una plantilla. Por ejemplo:</li> </ul> <pre><code>&lt;p&gt;Nombre: {{ nombre }}&lt;/p&gt;\n&lt;img src=\"{{ imagenURL }}\"&gt;\n</code></pre> <ul> <li>Ejecutar m\u00e9todos de componentes: Puedes llamar a m\u00e9todos de tu componente dentro de la plantilla y mostrar el resultado. Por ejemplo:</li> </ul> <pre><code>&lt;p&gt;Resultado: {{ metodoComponente() }}&lt;/p&gt;\n</code></pre> <p>Limitaciones:</p> <ul> <li>Direcci\u00f3n \u00fanica: La interpolaci\u00f3n solo funciona en una direcci\u00f3n, desde JavaScript hacia HTML. No se pueden modificar variables o propiedades desde la plantilla.</li> <li>Expresiones simples: Las expresiones dentro de la interpolaci\u00f3n deben ser simples y no deben contener instrucciones de control de flujo como <code>if</code>, <code>for</code> o <code>while</code>.</li> </ul> <p>Contexto de las expresiones:</p> <p>Las expresiones dentro de la interpolaci\u00f3n se eval\u00faan en el contexto del componente actual. No tienen acceso directo a variables o funciones globales.</p> <p>Buenas pr\u00e1cticas:</p> <ul> <li>Mant\u00e9n la simplicidad: Utiliza expresiones simples y evita c\u00f3digo complejo dentro de la interpolaci\u00f3n.</li> <li>Usa <code>innerHTML</code> para contenido HTML: Si la variable contiene c\u00f3digo HTML, utiliza la directiva <code>[innerHTML]</code> para evitar problemas de seguridad.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#vincular-atributos","title":"Vincular atributos","text":"<p>Angular permite vincular atributos HTML a propiedades de componentes utilizando la sintaxis <code>[]</code>. Por ejemplo:</p> <pre><code>&lt;img [src]=\"product.imageUrl\" alt=\"\"&gt;\n&lt;div [style.height.px]=\"imageHeight\"&gt;&lt;/div&gt;\n</code></pre> <p>Directivas <code>ngStyle</code> y <code>ngClass</code>:</p> <p>Las directivas <code>ngStyle</code> y <code>ngClass</code> proporcionan mayor flexibilidad para manipular estilos y clases CSS a partir de variables o expresiones. Ambas requieren la importaci\u00f3n del m\u00f3dulo <code>CommonModule</code>.</p> <p><code>ngStyle</code>:</p> <ul> <li>Permite aplicar estilos din\u00e1micos a elementos HTML.</li> <li>Acepta un objeto literal o una variable que contenga pares clave-valor para los estilos.</li> </ul> <pre><code>&lt;p [ngStyle]=\"{'font-size': tamano+'px'}\"&gt;Hola Mundo&lt;/p&gt;\n&lt;div [ngStyle]=\"styleObject\"&gt;...&lt;/div&gt;\n</code></pre> <p><code>ngClass</code>:</p> <ul> <li>Permite aplicar clases CSS din\u00e1micamente a elementos HTML.</li> <li>Acepta un objeto literal, una variable o un array que contenga las clases que se aplicar\u00e1n.</li> </ul> <pre><code>&lt;p [ngClass]=\"clase\"&gt;Hola Mundo&lt;/p&gt;\n&lt;p [ngClass]=\"[clase, claseParrafo ]\"&gt;Hola Mundo&lt;/p&gt;\n&lt;p [ngClass]=\"{'text-danger': danger, 'text-info': !danger}\"&gt;Hola Mundo&lt;/p&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#vinculacion-bidireccional-ngmodel","title":"Vinculaci\u00f3n bidireccional <code>[(ngModel)]</code>","text":"<p>La vinculaci\u00f3n bidireccional permite sincronizar el valor de un elemento de entrada (como <code>input</code> o <code>textarea</code>) con una propiedad de un componente. Requiere la importaci\u00f3n del m\u00f3dulo <code>FormsModule</code>.</p> <pre><code>&lt;input type=\"text\" [(ngModel)]=\"filterSearch\" class=\"form-control\"\nname=\"filterDesc\" id=\"filterDesc\" placeholder=\"Filter...\"&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#vincular-eventos","title":"Vincular eventos","text":"<p>Los eventos de los elementos HTML se pueden vincular a m\u00e9todos de componentes utilizando la sintaxis <code>()</code>.</p> <pre><code>&lt;button class=\"btn btn-sm\"\n[ngClass]=\"{'btn-danger': showImage, 'btn-primary': !showImage}\"\n(click)=\"toggleImage()\"&gt;\n{{showImage?'Ocultar':'Mostrar'}} imagen\n&lt;/button&gt;\n&lt;img [src]=\"product.imageUrl\" *ngIf=\"showImage\" alt=\"\"\n[title]=\"product.desc\"&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#directivas-estructurales","title":"Directivas estructurales","text":"<p>Las directivas estructurales en Angular permiten controlar el flujo condicional de las plantillas HTML, mostrando o ocultando contenido en funci\u00f3n de diversos criterios. </p> <p>Directiva <code>@if</code>:</p> <p>La directiva <code>@if</code> funciona similar a la instrucci\u00f3n <code>if</code> en JavaScript, permitiendo mostrar o esconder contenido en base a una condici\u00f3n booleana. Su sintaxis es la siguiente:</p> <pre><code>@if (expresi\u00f3nBooleana) {\n  } else {\n  }\n</code></pre> <p>Ejemplo:</p> <pre><code>@if (names.length &gt; 0) {\n  &lt;ul&gt;\n    &lt;li *ngFor=\"let name of names\"&gt;{{ name }}&lt;/li&gt;\n  &lt;/ul&gt;\n} else {\n  &lt;p&gt;No hay nombres para mostrar&lt;/p&gt;\n}\n</code></pre> <p>Directiva <code>@for</code>:</p> <p>La directiva <code>@for</code> itera sobre una colecci\u00f3n de datos, mostrando un elemento HTML por cada elemento de la colecci\u00f3n. Su sintaxis es la siguiente:</p> <pre><code>@for (elemento of colecci\u00f3n; trackBy clave) {\n  &lt;p&gt;{{ elemento }}&lt;/p&gt;\n}\n</code></pre> <p>Ejemplo:</p> <pre><code>@for (let nombre of nombres) {\n  &lt;p&gt;{{ nombre }}&lt;/p&gt;\n}\n</code></pre> <p>Directiva <code>@switch</code>:</p> <p>La directiva <code>@switch</code> funciona como la instrucci\u00f3n <code>switch</code> en JavaScript, permitiendo mostrar o esconder contenido en funci\u00f3n de una expresi\u00f3n que puede tener varios valores. Su sintaxis es la siguiente:</p> <pre><code>@switch (expresi\u00f3n) {\n  case valor1:\n    break;\n  case valor2:\n    break;\n  default:\n    }\n</code></pre> <p>Ejemplo:</p> <pre><code>@switch (tipoUsuario) {\n  case 'admin':\n    &lt;button&gt;Administrar usuarios&lt;/button&gt;\n    break;\n  case 'user':\n    &lt;button&gt;Ver mis datos&lt;/button&gt;\n    break;\n  default:\n    &lt;p&gt;Usuario no reconocido&lt;/p&gt;\n}\n</code></pre> <p>Directivas <code>@empty</code> y <code>trackBy</code>:</p> <p>Las directivas <code>@empty</code> y <code>trackBy</code> son opcionales y proporcionan funcionalidades adicionales:</p> <ul> <li> <p><code>@empty</code>: Define el contenido a mostrar cuando la colecci\u00f3n de datos est\u00e1 vac\u00eda.</p> </li> <li> <p><code>trackBy</code>: Especifica un valor \u00fanico para cada elemento de la colecci\u00f3n, lo que optimiza la actualizaci\u00f3n del DOM al iterar sobre la colecci\u00f3n.</p> </li> </ul> <p>Modernizaci\u00f3n a partir de Angular 17:</p> <p>A partir de Angular 17, las directivas estructurales <code>@if</code>, <code>@for</code> y <code>@switch</code> se han simplificado y no requieren la importaci\u00f3n de ninguna librer\u00eda adicional. Adem\u00e1s, la sintaxis se ha hecho m\u00e1s intuitiva y f\u00e1cil de leer. Es muy probable que encontremos ejemplos con ngFor, ngIf... Estos todav\u00eda funcionan, pero no se recomienda usarlos ya. </p> <p>@let</p> <p>Con @let podemos crear variables en el entorno de las plantillas. Estas tambi\u00e9n tienen \u00e1mbito de bloque y no pueden ser reasignadas.  Veamos alg\u00fan ejemplo:</p> <pre><code>@let name = 'Frodo';\n&lt;h1&gt;Dashboard for {{name}}&lt;/h1&gt;\nHello, {{name}}\n\n&lt;!-- Use with a template variable referencing an element --&gt;\n&lt;input #name&gt;\n\n@let greeting = 'Hello ' + name.value;\n\n&lt;!-- Use with an async pipe --&gt;\n@let user = user$ | async;\n</code></pre> <p>https://blog.angular.dev/introducing-let-in-angular-686f9f383f0f </p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#interfaces","title":"Interfaces","text":"<p>Las interfaces en Angular son un mecanismo fundamental para definir la estructura de objetos de datos. Proporcionan un contrato que describe las propiedades que un objeto debe tener y sus respectivos tipos. Esto mejora la legibilidad, mantenibilidad y seguridad del c\u00f3digo, ya que Angular puede detectar errores en tiempo de compilaci\u00f3n si se intenta utilizar un objeto que no cumple con la interfaz definida. </p> <p>Typescript necesita saber el contenido de los objetos y el tipo de todo. Se puede usar <code>any</code> en ocasiones contadas, pero siempre es mejor crear la interfaz. </p> <p>\u00bfPor qu\u00e9 utilizar interfaces?</p> <ul> <li>Claridad y definici\u00f3n: Las interfaces documentan de forma expl\u00edcita la estructura de los objetos, mejorando la comprensi\u00f3n del c\u00f3digo.</li> <li>Detecci\u00f3n temprana de errores: Angular puede detectar en tiempo de compilaci\u00f3n si se intenta utilizar un objeto que no cumple con la interfaz, evitando errores en tiempo de ejecuci\u00f3n.</li> <li>Refactorizaci\u00f3n segura: Al modificar la estructura de una interfaz, Angular te avisar\u00e1 de los lugares donde se utilizan objetos afectados, facilitando la refactorizaci\u00f3n segura del c\u00f3digo.</li> <li>Autocompletado: Los editores de c\u00f3digo modernos utilizan las interfaces para ofrecer autocompletado y sugerencias de tipos, mejorando la productividad del desarrollador.</li> </ul> <p>Creando una interfaz:</p> <p>Para crear una interfaz, se utiliza la palabra clave <code>interface</code> seguida por el nombre de la interfaz y un bloque con llaves que define sus propiedades:</p> <pre><code>export interface IProduct {\n  id: number;\n  description: string;\n  price: number;\n  available: Date;\n  imageUrl: string;\n  rating: number;\n}\n</code></pre> <p>Cada propiedad de la interfaz se define con su nombre, seguido de dos puntos <code>:</code> y el tipo de dato esperado.</p> <p>Utilizando interfaces:</p> <p>Una vez definida la interfaz, puedes utilizarla para declarar variables o propiedades de componentes que deben contener objetos con esa estructura. Por ejemplo:</p> <pre><code>products: IProduct[] = [\n  {\n    id: 1,\n    description: 'SSD hard drive',\n    available: new Date('2016-10-03'),\n    price: 75,\n    imageUrl: 'assets/ssd.jpg',\n    rating: 5\n  },\n  // ... otros productos\n];\n</code></pre> <p>En este ejemplo, el array <code>products</code> est\u00e1 tipado como un array de objetos que cumplen con la interfaz <code>IProduct</code>. Esto garantiza que cada objeto del array tenga las propiedades esperadas y del tipo correcto.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#ciclo-de-vida-de-los-componentes","title":"Ciclo de vida de los componentes","text":"Estructura de una aplicaci\u00f3n web t\u00edpica# <p>Los componentes son elementos reutilizables por naturaleza. Se pueden importar y utilizar en otros componentes, promoviendo la modularidad y evitando la duplicaci\u00f3n de c\u00f3digo. Esto facilita la creaci\u00f3n de interfaces de usuario consistentes y escalables.</p> <p>Los componentes tienen un ciclo de vida definido por una serie de m\u00e9todos que se llaman en diferentes momentos de su existencia. Algunos de los m\u00e9todos m\u00e1s importantes son:</p> <ul> <li><code>constructor</code>: Se llama cuando se crea una instancia del componente. El constructor se utiliza para inyectar dependencias y configurar valores iniciales. No se recomienda colocar l\u00f3gica de inicializaci\u00f3n aqu\u00ed porque puede ejecutarse antes de que las propiedades de entrada est\u00e9n configuradas.</li> <li><code>ngOnInit</code>: Se llama una vez que el componente se ha inicializado y est\u00e1 listo para usarse.</li> <li><code>ngAfterContentInit</code>: Se llama despu\u00e9s de que se haya inicializado el contenido del componente.</li> <li><code>ngAfterViewInit</code>: Se llama despu\u00e9s de que se haya renderizado el componente completamente.</li> <li><code>ngOnChanges</code>: Se llama cada vez que cambia una propiedad de entrada del componente. Puede ejecutarse demasiadas veces.</li> <li><code>ngDoCheck</code>: Se llama en cada ciclo de detecci\u00f3n de cambios de Angular. Se usar raramente porque se ejecuta muchas veces, s\u00f3lo si los eventos o cambios no son suficientes.</li> <li><code>ngOnDestroy</code>: Se llama cuando el componente se destruye.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#ngoninit","title":"ngOnInit","text":"<p><code>OnInit</code> es una interfaz que obliga a implementar el m\u00e9todo <code>ngOnInit()</code>. Esta interfaz forma parte del ciclo de vida de un componente, y su uso es esencial para inicializar el componente una vez que Angular ha configurado sus propiedades de entrada.</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../products.service';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n})\nexport class ProductDetailComponent implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params =&gt; {\n      const productId = params['id'];\n      // Aqu\u00ed se puede usar el productId para obtener los detalles del producto\n      // desde el servicio de productos\n      this.productsService.getProductById(productId).subscribe(product =&gt; {\n        // Manejo de los datos del producto\n        console.log(product);\n      });\n    });\n  }\n}\n</code></pre> <p>El m\u00e9todo <code>ngOnInit</code> se llama una vez que la inicializaci\u00f3n del componente est\u00e1 completa. Es especialmente \u00fatil para cualquier tipo de inicializaci\u00f3n que deba ocurrir despu\u00e9s de que Angular haya configurado todas las propiedades de entrada del componente.</p> <p>Al ejecutar <code>ngOnInit</code>nos aseguramos que todas las dependencias de datos de entrada han sido configuradas y obtenidas. Es el momento de que el componente pida nuevos datos si los necesita. Casi todos los componentes que obtienen datos de un servicio lo implementan.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#comunicacion-entre-componentes","title":"Comunicaci\u00f3n entre componentes","text":"<p>Los componentes se pueden anidar en una estructura jer\u00e1rquica, lo que permite crear interfaces de usuario complejas y modulares. Un componente padre puede contener uno o m\u00e1s componentes hijos, y cada componente hijo puede contener a su vez otros componentes hijos. Todo esto se hace importando el componente y usando la etiqueta HTML definida en la propiedad <code>selector</code>. </p> <p>Los componentes pueden comunicarse entre s\u00ed mediante diferentes mecanismos, como:</p> <ul> <li>Entrada y salida de datos: Los componentes pueden intercambiar datos a trav\u00e9s de propiedades de entrada y salida @Input y @Output.</li> <li>Servicios: Los componentes pueden compartir l\u00f3gica y datos mediante servicios, que son clases que encapsulan funcionalidad reutilizable.</li> <li>Eventos: Los componentes pueden emitir eventos que otros componentes pueden escuchar y responder. </li> </ul> <p>A su vez, esa comunicaci\u00f3n suele ser internamente reactiva mediante <code>Observables</code> o <code>Signals</code>. Veremos c\u00f3mo funciona la comunicaci\u00f3n t\u00edpica entre componentes padres e hijos y m\u00e1s adelante veremos c\u00f3mo comunicarse a trav\u00e9s de un servicio.  </p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#input","title":"@Input","text":"Diagrama de comunicaci\u00f3n entre componentes padres e hijos.# <p>Los componentes padres pueden enviar datos a sus componentes hijos mediante propiedades de entrada, y los componentes hijos pueden emitir eventos que sus componentes padres pueden escuchar.</p> <p>HTML de la plantilla del componente padre. Observa <code>[p]=\"product\"</code>:</p> <pre><code>&lt;h1&gt;Catalogue&lt;/h1&gt;\n&lt;div class=\"row row-cols-1 row-cols-md-2 g-4\"&gt;\n  &lt;div class=\"col\"&gt;\n    @for (product of products; track $index;){\n    &lt;app-product-item [p]=\"product\"&gt;\n    &lt;/app-product-item&gt;\n    }\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <p>El componente hijo:</p> <p><pre><code>import { Component, Input } from '@angular/core';\n...\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n})\nexport class ProductItemComponent {\n  @Input() p!: Product;\n}\n</code></pre> - La propiedad <code>p</code> est\u00e1 decorada con <code>@Input</code>, lo que permite que este componente reciba un valor desde su componente padre. - <code>p!: Product</code> indica que <code>p</code> es una propiedad obligatoria de tipo <code>Product</code>. El <code>!</code> es una aserci\u00f3n de no nulo/no indefinido, lo que le dice a TypeScript que conf\u00ede en que <code>p</code> ser\u00e1 inicializada correctamente.</p> <p>El decorador <code>@Input</code> en Angular se utiliza para marcar una propiedad de un componente como p\u00fablica, permitiendo que este reciba datos desde un componente padre, lo cual es esencial para la comunicaci\u00f3n entre componentes en Angular y facilita el flujo de datos de padres a hijos. Este enfoque promueve la modularidad al facilitar la creaci\u00f3n de componentes reutilizables y modulares, mejora la claridad al hacer expl\u00edcito qu\u00e9 datos necesita un componente para funcionar y optimiza el mantenimiento al separar claramente la l\u00f3gica de la presentaci\u00f3n de datos, lo que resulta en un c\u00f3digo m\u00e1s limpio y f\u00e1cil de gestionar en aplicaciones complejas.</p> <p>Existen varias opciones y formas de usar <code>@Input</code>, cada una con sus caracter\u00edsticas y beneficios.</p> <p>Ejemplo 1: <code>@Input</code> Requerido</p> <pre><code>@Input({ required: true }) name: string;\n</code></pre> <p>En este ejemplo, la propiedad <code>name</code> est\u00e1 marcada como requerida. Si el componente padre no proporciona un valor para <code>name</code>, Angular generar\u00e1 un error. Esto asegura que todos los componentes hijos tengan los datos necesarios para funcionar correctamente.</p> <p>Ejemplo 2: <code>@Input</code> con Getters y Setters</p> <pre><code>private myCourses: Course[];\n\n@Input()\nget courses() {\n  return this.myCourses;\n}\nset courses(courses: Course[]) {\n  this.myCourses = courses;\n}\n</code></pre> <p>Aqu\u00ed se define una propiedad <code>courses</code> con <code>@Input</code>, pero se utiliza un enfoque m\u00e1s avanzado con getters y setters. Esto permite controlar la forma en que los datos se asignan y se acceden. En este caso, <code>myCourses</code> es una propiedad privada y <code>courses</code> es una propiedad p\u00fablica que expone <code>myCourses</code> de manera controlada. Cada vez que se asignan nuevos cursos, se puede agregar l\u00f3gica adicional en el setter para manejar la asignaci\u00f3n de los datos.</p> <p>Ejemplo 3: <code>@Input</code> con Alias</p> <pre><code>@Input('userName') name: string;\n</code></pre> <p>Este ejemplo muestra c\u00f3mo se puede usar un alias con <code>@Input</code>. La propiedad p\u00fablica del componente hijo ser\u00e1 <code>name</code>, pero el componente padre puede pasarle datos usando el nombre <code>userName</code>. Esto es \u00fatil cuando se quiere mantener una convenci\u00f3n de nombres espec\u00edfica en el componente hijo, pero se quiere proporcionar un nombre m\u00e1s descriptivo o claro para el componente padre.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#property-has-no-initializers","title":"Property has no initializers...","text":"<p>En TypeScript, el error \"Property has no initializers...\" se produce cuando se declara una propiedad sin asignarle un valor inicial. Esto es particularmente relevante cuando se utiliza el decorador <code>@Input()</code> en Angular, ya que indica que una propiedad ser\u00e1 inicializada por el componente padre, lo cual podr\u00eda no suceder siempre. Es importante manejar este caso adecuadamente para evitar errores en tiempo de ejecuci\u00f3n y asegurar que el c\u00f3digo sea robusto.</p> <p>Existen varias formas de solucionar este problema en TypeScript:</p> <ol> <li>Utilizar el operador <code>!</code>:</li> </ol> <p><pre><code>@Input() products!: IProduct[];\n</code></pre>    Esta opci\u00f3n no es recomendable porque el operador <code>!</code> le dice a TypeScript que conf\u00ede en que la propiedad ser\u00e1 inicializada eventualmente, lo que podr\u00eda no ser cierto. Esto puede ocultar errores potenciales y llevar a problemas dif\u00edciles de depurar.</p> <ol> <li>Utilizar <code>| undefined</code> o <code>?</code>:</li> </ol> <p><pre><code>@Input() products?: IProduct[];\n// o\n@Input() products: IProduct[] | undefined;\n</code></pre>    Esta es la soluci\u00f3n m\u00e1s recomendable. Indica expl\u00edcitamente que la propiedad <code>products</code> puede no ser inicializada, permitiendo a TypeScript manejar correctamente este caso. Esto obliga a tratar la propiedad como potencialmente <code>undefined</code>, lo cual ayuda a prevenir errores en tiempo de ejecuci\u00f3n.</p> <ol> <li>Desactivar <code>strictPropertyInitialization</code> en <code>tsconfig.json</code>:</li> </ol> <p><pre><code>{\n  \"compilerOptions\": {\n    \"strictPropertyInitialization\": false\n  }\n}\n</code></pre>    Esta opci\u00f3n no es recomendable porque desactiva la verificaci\u00f3n estricta de inicializaci\u00f3n de propiedades en todo el proyecto. Esto puede llevar a pasar por alto otros errores de inicializaci\u00f3n, reduciendo la seguridad y robustez del c\u00f3digo.</p> <p>Para manejar adecuadamente la inicializaci\u00f3n de propiedades en Angular y TypeScript, es importante usar t\u00e9cnicas que indiquen claramente las posibles opciones de inicializaci\u00f3n. Usar <code>| undefined</code> o <code>?</code> es la mejor pr\u00e1ctica, ya que proporciona una forma segura y expl\u00edcita de tratar con propiedades opcionales. Se deber\u00eda evitar el uso del operador <code>!</code>, a menos que sea una propiedad que, seguro que va a llegar. </p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#output","title":"@Output","text":"<p>En Angular, el decorador <code>@Output</code> se utiliza para permitir que un componente hijo emita eventos personalizados que puedan ser capturados por su componente padre. Esto es \u00fatil para la comunicaci\u00f3n de eventos y datos desde un componente hijo hacia su padre, facilitando la interacci\u00f3n entre componentes.</p> <p>El uso del decorador <code>@Output</code> en Angular permite una comunicaci\u00f3n eficaz entre componentes hijo y padre mediante eventos personalizados.  Al emitir eventos desde el hijo y capturarlos en el padre, se puede gestionar f\u00e1cilmente la l\u00f3gica de la aplicaci\u00f3n y mantener una separaci\u00f3n clara de responsabilidades entre los componentes.</p> <p>En este ejemplo, un componente hijo emite un evento personalizado cuando se produce un cambio en la puntuaci\u00f3n (<code>ratting</code>). El componente padre escucha este evento y act\u00faa en consecuencia.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#paso-1-configuracion-en-el-componente-hijo","title":"Paso 1: Configuraci\u00f3n en el Componente Hijo","text":"<p>Primero, definimos un <code>EventEmitter</code> en el componente hijo que emitir\u00e1 el evento cuando cambie la puntuaci\u00f3n:</p> <pre><code>import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n})\nexport class RatingComponent {\n  @Output() rattingChanged = new EventEmitter&lt;number&gt;();\n\n  auxRatting: number;\n\n  puntuar(i: number): void {\n    this.auxRatting = i;\n    this.rattingChanged.emit(this.auxRatting);\n  }\n}\n</code></pre> <ul> <li><code>@Output() rattingChanged = new EventEmitter&lt;number&gt;();</code>: Define un evento <code>rattingChanged</code> que emitir\u00e1 un n\u00famero.</li> <li><code>puntuar(i: number): void</code>: Esta funci\u00f3n se llama cuando se cambia la puntuaci\u00f3n y emite el nuevo valor usando <code>rattingChanged.emit(this.auxRatting)</code>.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#paso-2-captura-del-evento-en-el-componente-padre","title":"Paso 2: Captura del Evento en el Componente Padre","text":"<p>En el componente padre, se escucha el evento emitido por el hijo y se define una funci\u00f3n para manejar el cambio de puntuaci\u00f3n:</p> <pre><code>&lt;!-- product-list.component.html --&gt;\n&lt;app-rating (rattingChanged)=\"changeRatting($event, product)\"&gt;&lt;/app-rating&gt;\n</code></pre> <pre><code>import { Component } from '@angular/core';\nimport { Product } from './product.model';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent {\n\n  products: Product[];\n\n  changeRatting(stars: number, p: Product): void {\n    p.ratting = stars;\n  }\n}\n</code></pre> <ul> <li><code>(rattingChanged)=\"changeRatting($event, product)\"</code>: El componente padre escucha el evento <code>rattingChanged</code> del componente hijo y llama a la funci\u00f3n <code>changeRatting</code>, pasando el valor del evento <code>$event</code> y el producto correspondiente <code>product</code>.</li> <li><code>changeRatting(stars: number, p: Product): void</code>: Esta funci\u00f3n actualiza la puntuaci\u00f3n (<code>ratting</code>) del producto con el nuevo valor recibido desde el componente hijo.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#pipes","title":"Pipes","text":"<p>Los Pipes en Angular  permiten transformar los datos directamente en las plantillas antes de mostrarlos. Al igual que los filtros en Linux, los pipes toman una entrada, la procesan y devuelven una salida transformada. Angular proporciona varios pipes predefinidos, pero tambi\u00e9n es posible crear pipes personalizados para satisfacer necesidades espec\u00edficas.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#uso-de-pipes-predefinidos","title":"Uso de Pipes Predefinidos","text":"<p>En Angular, los pipes se utilizan en las plantillas despu\u00e9s de la variable, separados por el s\u00edmbolo <code>|</code>. Un punto importante es que los pipes no modifican la variable original, sino que retornan una versi\u00f3n transformada de la misma. Algunos pipes predefinidos en Angular incluyen:</p> <ul> <li><code>uppercase</code>: Convierte el texto a may\u00fasculas.</li> <li><code>currency</code>: Formatea un n\u00famero como una moneda.</li> <li><code>date</code>: Formatea una fecha seg\u00fan el formato especificado.</li> </ul> <p>Aqu\u00ed hay un ejemplo de c\u00f3mo usar algunos de estos pipes predefinidos en una tabla que muestra una lista de productos:</p> <pre><code>&lt;tr *ngFor=\"let product of products\"&gt;\n    &lt;td&gt;\n        &lt;img [src]=\"product.imageUrl\" \n             *ngIf=\"showImage\" alt=\"\"\n             [title]=\"product.desc | uppercase\"&gt;\n    &lt;/td&gt;\n    &lt;td&gt;{{ product.description }}&lt;/td&gt;\n    &lt;td&gt;{{ product.price | currency:'EUR':'symbol'}}&lt;/td&gt;\n    &lt;td&gt;{{ product.available | date:'dd/MM/y' }}&lt;/td&gt;\n&lt;/tr&gt;\n</code></pre> <p>En este ejemplo: - El pipe <code>uppercase</code> se usa para convertir la descripci\u00f3n del producto a may\u00fasculas. - El pipe <code>currency</code> formatea el precio del producto en euros. - El pipe <code>date</code> formatea la fecha de disponibilidad del producto en el formato <code>dd/MM/y</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#creacion-de-pipes-personalizados","title":"Creaci\u00f3n de Pipes Personalizados","text":"<p>Si los pipes predefinidos no cumplen con todas las necesidades de transformaci\u00f3n de datos, Angular permite crear pipes personalizados. La creaci\u00f3n de un pipe personalizado implica los siguientes pasos:</p> <ol> <li> <p>Generar el Pipe: Utilizar el comando Angular CLI para generar el esqueleto del pipe.    <pre><code>ng g pipe pipes/nombreDelPipe\n</code></pre></p> </li> <li> <p>Implementar el Pipe: Definir la l\u00f3gica de transformaci\u00f3n en el pipe generado. Aqu\u00ed hay un ejemplo de un pipe personalizado que filtra productos bas\u00e1ndose en un criterio de b\u00fasqueda:    <pre><code>import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from '../product/product';\n\n@Pipe({\n    name: 'productFilter'\n})\nexport class ProductFilterPipe implements PipeTransform {\n    transform(products: Product[], filterBy: string): Product[] {\n        const filter = filterBy ? filterBy.toLocaleLowerCase() : null;\n        return filter ? \n            products.filter(p =&gt; p.name.toLocaleLowerCase().includes(filter)) \n            : products;\n    }\n}\n</code></pre></p> </li> </ol> <p>En este pipe personalizado:    - La funci\u00f3n <code>transform</code> toma dos argumentos: una lista de productos y un criterio de b\u00fasqueda.    - Convierte el criterio de b\u00fasqueda a min\u00fasculas para realizar una comparaci\u00f3n insensible a may\u00fasculas.    - Filtra los productos cuyo nombre incluye el criterio de b\u00fasqueda.</p> <ol> <li>Usar el Pipe Personalizado: Aplicar el pipe en la plantilla para filtrar los productos seg\u00fan el criterio de b\u00fasqueda.</li> </ol> <pre><code>&lt;tr *ngFor=\"let product of products | productFilter: filter\"&gt;\n    &lt;td&gt;{{ product.name }}&lt;/td&gt;\n    &lt;td&gt;{{ product.price | currency:'EUR':'symbol' }}&lt;/td&gt;\n    &lt;td&gt;{{ product.available | date:'dd/MM/y' }}&lt;/td&gt;\n&lt;/tr&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#directivas-en-angular","title":"Directivas en Angular","text":"<p>Las directivas en Angular son un mecanismo potente para manipular el DOM de manera declarativa. Pueden modificar elementos HTML y su comportamiento en funci\u00f3n de la l\u00f3gica de la aplicaci\u00f3n. Existen tres tipos principales de directivas en Angular:</p> <ol> <li>Directivas de componente: Se definen mediante el selector en el decorador <code>@Component</code> y son las que hemos creado hasta ahora.</li> <li>Directivas de atributo: Modifican el comportamiento de un elemento. Ejemplos comunes son <code>NgClass</code> y <code>NgStyle</code>.</li> <li>Directivas estructurales: Manipulan la estructura del DOM, como <code>ngIf</code>, <code>ngFor</code> y <code>ngSwitch</code>, controlando si un elemento se muestra o no.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#crear-directivas-de-atributo","title":"Crear directivas de atributo","text":"<p>Podemos crear nuestras propias directivas de atributo para a\u00f1adir comportamientos personalizados a los elementos HTML. Vamos a crear una directiva llamada <code>Resaltado</code> que cambiar\u00e1 el color de fondo de un elemento cuando el rat\u00f3n pase sobre \u00e9l.</p> <p>Primero, generamos la directiva con Angular CLI:</p> <pre><code>ng g directive directives/resaltado\n</code></pre> <p>Luego, implementamos la l\u00f3gica en el archivo <code>resaltado.directive.ts</code>:</p> <pre><code>import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appResaltado]'\n})\nexport class ResaltadoDirective {\n  @Input('appResaltado') nuevoColor: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('mouseenter') entrarMouse() {\n    this.el.nativeElement.style.backgroundColor = this.nuevoColor;\n  }\n\n  @HostListener('mouseleave') saleMouse() {\n    this.el.nativeElement.style.backgroundColor = null;\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>Resaltado</code>:</p> <pre><code>&lt;div class=\"col-md-4\" [appResaltado]=\"color\"&gt;\n  &lt;!-- Contenido del elemento --&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#elementref-vs-renderer2","title":"ElementRef vs Renderer2","text":"<p><code>ElementRef</code> nos da una referencia directa a un elemento del DOM una vez renderizado. Sin embargo, utilizar <code>ElementRef</code> puede exponer riesgos de seguridad y no es la mejor pr\u00e1ctica en aplicaciones que necesitan ser multiplataforma. En cambio, <code>Renderer2</code> proporciona una abstracci\u00f3n adicional, permitiendo manipular el DOM de manera segura y compatible con aplicaciones de servidor y Web Workers.</p> <p>Ejemplo con <code>Renderer2</code>:</p> <pre><code>import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appMostrar]'\n})\nexport class MostrarDirective {\n  @Input() elementMostrar!: any;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('mouseenter') entrarMouse() {\n    this.renderer.setStyle(this.elementMostrar, 'display', '');\n  }\n\n  @HostListener('mouseleave') saleMouse() {\n    this.renderer.setStyle(this.elementMostrar, 'display', 'none');\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>Mostrar</code>:</p> <pre><code>&lt;li appMostrar \n[elementMostrar]=\"ocultar\"&gt;\n  &lt;!-- Contenido del elemento --&gt;\n&lt;/li&gt;\n\n&lt;p #ocultar style=\"margin-bottom: 0; display:none;\"&gt;\n  Producci\u00f3n: &lt;span *appForDelay=\"100; let p of placa.production\"&gt;{{p}}W&lt;/span&gt;\n&lt;/p&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#crear-directivas-estructurales","title":"Crear directivas estructurales","text":"<p>Las directivas estructurales, como <code>ngIf</code>, <code>ngFor</code> y <code>ngSwitch</code>, utilizan el asterisco (*) para simplificar la manipulaci\u00f3n de etiquetas <code>&lt;ng-template&gt;</code> que rodean al elemento que est\u00e1n manipulando.</p> <p>Vamos a crear una directiva estructural llamada <code>ForDelay</code> que retrasa la visualizaci\u00f3n de elementos en un bucle.</p> <p>Primero, generamos la directiva:</p> <pre><code>ng g directive directives/for-delay\n</code></pre> <p>Implementamos la l\u00f3gica en el archivo <code>for-delay.directive.ts</code>:</p> <pre><code>import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appForDelay]'\n})\nexport class ForDelayDirective {\n  private items: Array&lt;number&gt; = [];\n  private delay = 0;\n\n  constructor(private templateRef: TemplateRef&lt;any&gt;, private viewContainer: ViewContainerRef) {}\n\n  @Input() set appForDelay(t: number) {\n    this.delay = t;\n  }\n\n  @Input() set appForDelayOf(array: number[]) {\n    this.items = array;\n    this.renderItems();\n  }\n\n  private async renderItems() {\n    for (let item of this.items) {\n      this.viewContainer.createEmbeddedView(this.templateRef, {\n        $implicit: item\n      });\n      await this.delayTime(this.delay);\n    }\n  }\n\n  private delayTime(ms: number) {\n    return new Promise(resolve =&gt; setTimeout(resolve, ms));\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>ForDelay</code>:</p> <pre><code>&lt;span *appForDelay=\"100; let p of placa.production\"&gt;{{p}}W&lt;/span&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#eventos","title":"Eventos","text":"<p>En Angular, la manera m\u00e1s simple de gestionar eventos es con la sintaxis <code>( )</code> en el elemento HTML correspondiente. Esto crea una suscripci\u00f3n externa. Para una suscripci\u00f3n interna, usamos <code>@HostListener</code>.</p> <p>Ejemplo de suscripci\u00f3n interna con <code>@HostListener</code>:</p> <pre><code>import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appScroll]'\n})\nexport class ScrollDirective {\n  imgY = 100;\n\n  @HostListener('window:scroll', ['$event'])\n  homeScroll($event: Event) {\n    let scrollOffset = window.scrollY;\n    this.imgY = 100 - scrollOffset / 2;\n    if (this.imgY &lt; 0) {\n      this.imgY = 20;\n    }\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>Scroll</code>:</p> <pre><code>&lt;div appScroll&gt;\n  &lt;!-- Contenido del elemento --&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#modulos-en-angular","title":"M\u00f3dulos en Angular","text":"<p>A medida que una aplicaci\u00f3n de Angular crece en tama\u00f1o y complejidad, no es sostenible mantener toda la funcionalidad en un solo m\u00f3dulo <code>AppModule</code> y organizar los componentes \u00fanicamente en directorios. En Angular, los m\u00f3dulos (<code>NgModules</code>) son la manera recomendada de organizar y estructurar aplicaciones grandes y complejas. Un m\u00f3dulo es una clase con el decorador <code>@NgModule</code> que define un contenedor para un conjunto coherente de componentes, directivas, pipes y servicios.</p> <p>Angular permite la carga diferida (lazy loading) de m\u00f3dulos, lo que ayuda a mejorar el rendimiento de la aplicaci\u00f3n cargando m\u00f3dulos solo cuando se necesitan. Esta t\u00e9cnica es especialmente \u00fatil para grandes aplicaciones con muchas rutas y funcionalidades diversas.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#arrays-del-decorador-ngmodule","title":"Arrays del Decorador @NgModule","text":"<p>El decorador <code>@NgModule</code> define varios arrays que especifican c\u00f3mo se organiza el m\u00f3dulo:</p> <ul> <li> <p>bootstrap: Solo se utiliza en el <code>AppModule</code>, define el componente inicial que se debe cargar al iniciar la aplicaci\u00f3n.</p> </li> <li> <p>declarations: Contiene los componentes, directivas y pipes que pertenecen a este m\u00f3dulo. Cada componente, directiva o pipe solo puede estar declarado en un \u00fanico m\u00f3dulo, pero puede ser exportado para ser utilizado en otros m\u00f3dulos. La declaraci\u00f3n es necesaria para que estos elementos sean compilados y utilizados en la aplicaci\u00f3n.</p> </li> <li> <p>exports: Permite compartir los componentes, directivas y pipes con otros m\u00f3dulos. Tambi\u00e9n se pueden exportar m\u00f3dulos completos para crear un meta-m\u00f3dulo que importe otros m\u00f3dulos. Sin embargo, no se pueden exportar servicios, ya que estos son inyectables a nivel global por defecto.</p> </li> <li> <p>imports: Contiene otros m\u00f3dulos (de terceros o propios) que el m\u00f3dulo necesita. Lo que se importa son los elementos que esos m\u00f3dulos exportan.</p> </li> <li> <p>providers: Define los servicios que deben estar disponibles en toda la aplicaci\u00f3n. Normalmente, solo se declara en el <code>AppModule</code> para evitar conflictos y asegurar que el servicio est\u00e9 disponible de manera global. Los servicios pueden ser autoinyectables con <code>providedIn: 'root'</code> en su decorador <code>@Injectable</code>.</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#criterios-para-separar-la-aplicacion-en-modulos","title":"Criterios para Separar la Aplicaci\u00f3n en M\u00f3dulos","text":"<p>Separar una aplicaci\u00f3n en m\u00f3dulos bien definidos facilita la gesti\u00f3n, el mantenimiento y la escalabilidad del c\u00f3digo. A continuaci\u00f3n se detallan algunos criterios para organizar los m\u00f3dulos en una aplicaci\u00f3n Angular:</p> <ul> <li> <p>M\u00f3dulos de Dominio: Se utilizan para organizar el c\u00f3digo sin representar necesariamente una ruta. Por ejemplo, un m\u00f3dulo que contiene componentes relacionados con un men\u00fa de navegaci\u00f3n.</p> </li> <li> <p>M\u00f3dulos de Secci\u00f3n: Representan secciones, rutas o p\u00e1ginas espec\u00edficas de la aplicaci\u00f3n. Por ejemplo, m\u00f3dulos para gestionar productos, clientes o facturas.</p> </li> <li> <p>M\u00f3dulos de Servicios: Se utilizan para organizar servicios que ser\u00e1n utilizados en toda la aplicaci\u00f3n. Normalmente, estos m\u00f3dulos solo se importan en el <code>AppModule</code>. Un ejemplo t\u00edpico es <code>HttpClientModule</code>.</p> </li> <li> <p>M\u00f3dulos de Componentes: Contienen componentes que pueden ser reutilizados en diversos m\u00f3dulos de la aplicaci\u00f3n. Por ejemplo, un m\u00f3dulo que contiene una vista modal para mostrar im\u00e1genes en tama\u00f1o completo.</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#ejemplo-de-un-modulo-en-angular","title":"Ejemplo de un M\u00f3dulo en Angular","text":"<p>A continuaci\u00f3n, se muestra un ejemplo de c\u00f3mo definir un m\u00f3dulo en Angular.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#definicion-del-modulo","title":"Definici\u00f3n del M\u00f3dulo","text":"<pre><code>import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    ProductListComponent,\n    ProductDetailComponent\n  ]\n})\nexport class ProductModule { }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#descripcion-del-modulo","title":"Descripci\u00f3n del M\u00f3dulo","text":"<p>En este ejemplo, <code>ProductModule</code> es un m\u00f3dulo que encapsula toda la funcionalidad relacionada con los productos en la aplicaci\u00f3n. Los componentes <code>ProductListComponent</code> y <code>ProductDetailComponent</code> son declarados y exportados para que puedan ser utilizados en otros m\u00f3dulos si es necesario.</p> <ul> <li>declarations: Declara <code>ProductListComponent</code> y <code>ProductDetailComponent</code> para que puedan ser utilizados dentro del m\u00f3dulo.</li> <li>imports: Importa <code>CommonModule</code> para obtener acceso a las directivas comunes de Angular, como <code>ngIf</code> y <code>ngFor</code>, e <code>FormsModule</code> para trabajar con formularios basados en plantillas.</li> <li>exports: Exporta los componentes <code>ProductListComponent</code> y <code>ProductDetailComponent</code> para que puedan ser utilizados en otros m\u00f3dulos de la aplicaci\u00f3n.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#organizacion-de-modulos-en-una-aplicacion-grande","title":"Organizaci\u00f3n de M\u00f3dulos en una Aplicaci\u00f3n Grande","text":"<p>Para una aplicaci\u00f3n grande, es esencial seguir una estructura modular clara y bien definida. A continuaci\u00f3n, se describe una posible estructura de m\u00f3dulos para una aplicaci\u00f3n compleja:</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#modulo-principal-appmodule","title":"M\u00f3dulo Principal (AppModule)","text":"<p>El <code>AppModule</code> es el m\u00f3dulo principal de la aplicaci\u00f3n y generalmente contiene la configuraci\u00f3n de los servicios globales, el enrutador principal y el componente ra\u00edz.</p> <pre><code>import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#modulo-de-core","title":"M\u00f3dulo de Core","text":"<p>El <code>CoreModule</code> puede contener servicios singleton que se utilizan en toda la aplicaci\u00f3n y otros elementos que deber\u00edan ser \u00fanicos y cargados una sola vez.</p> <pre><code>import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    // Servicios singleton\n  ],\n  exports: [\n    // Componentes y directivas compartidos\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only.');\n    }\n  }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#modulo-de-caracteristica-feature-module","title":"M\u00f3dulo de Caracter\u00edstica (Feature Module)","text":"<p>Los m\u00f3dulos de caracter\u00edstica encapsulan funcionalidad espec\u00edfica de una secci\u00f3n de la aplicaci\u00f3n, como gesti\u00f3n de productos, clientes o facturas.</p> <pre><code>import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductRoutingModule } from './product-routing.module';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    ProductRoutingModule\n  ]\n})\nexport class ProductModule { }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/angular.html#modulo-de-rutas-routing-module","title":"M\u00f3dulo de Rutas (Routing Module)","text":"<p>El m\u00f3dulo de rutas se encarga de definir las rutas para la navegaci\u00f3n de la aplicaci\u00f3n.</p> <pre><code>import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\nconst routes: Routes = [\n  { path: 'products', component: ProductListComponent },\n  { path: 'products/:id', component: ProductDetailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductRoutingModule { }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html","title":"Consejos y Mejores Pr\u00e1cticas para Desarrollar en Angular","text":"<p>Angular es un framework potente y flexible para desarrollar aplicaciones web modernas. Sin embargo, su complejidad puede ser abrumadora, especialmente en proyectos grandes. A continuaci\u00f3n, se presentan una serie de consejos y mejores pr\u00e1cticas para organizar y estructurar tu c\u00f3digo de Angular de manera efectiva.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#1-utilizacion-de-herramientas-y-funcionalidades-de-angular","title":"1. Utilizaci\u00f3n de Herramientas y Funcionalidades de Angular","text":"<ul> <li> <p>Componentes: Utiliza componentes para dividir tu HTML en partes m\u00e1s peque\u00f1as y con una entidad propia. Cada componente deber\u00eda tener una responsabilidad clara y espec\u00edfica.</p> </li> <li> <p>Rutas: Usa el enrutador de Angular para gestionar la navegaci\u00f3n dentro de tu aplicaci\u00f3n. Define rutas en tu m\u00f3dulo de enrutamiento y aseg\u00farate de que cada ruta apunte a un componente que se encargue de una secci\u00f3n espec\u00edfica de la aplicaci\u00f3n.</p> </li> <li> <p>Interpolaci\u00f3n: Muestra variables en el HTML usando <code>{{}}</code>. Esto enlaza las propiedades del componente con la vista de manera declarativa.</p> </li> <li> <p>Estilos Din\u00e1micos: Cambia estilos de forma din\u00e1mica usando <code>ngStyle</code>, <code>ngClass</code> o las propiedades <code>[style]</code> y <code>[class]</code>.</p> </li> <li> <p>Formularios: Usa el binding bidireccional <code>[()]</code> para formularios simples y formularios reactivos para formularios m\u00e1s complejos. Los formularios reactivos ofrecen un mayor control desde el c\u00f3digo del componente.</p> </li> <li> <p>Eventos: Maneja eventos individuales usando <code>()</code>. Esto enlaza eventos del DOM con m\u00e9todos del componente.</p> </li> <li> <p>Interfaces: Utiliza interfaces para definir datos que ser\u00e1n compartidos entre varios componentes o servicios. Esto ayuda a mantener el c\u00f3digo tipado y reduce errores.</p> </li> <li> <p>Directivas de Atributo: Usa directivas de atributo para manejar eventos recurrentes en varios componentes. Esto permite reutilizar l\u00f3gica de manera eficiente.</p> </li> <li> <p>Guards: Protege las rutas de tu aplicaci\u00f3n con guards. Los guards pueden controlar el acceso a las rutas bas\u00e1ndose en condiciones espec\u00edficas.</p> </li> <li> <p>Servicios y Resolvers: Usa servicios para guardar y servir datos tanto en el navegador como en el servidor. Los resolvers pueden precargar datos antes de activar una ruta, mejorando la experiencia del usuario.</p> </li> <li> <p>Variables Globales:</p> <ul> <li>Environment: Usa variables de entorno (<code>environment.ts</code>) para configurar valores globales que pueden ser consultados por cualquier componente.</li> <li>Servicios con Observable: Utiliza servicios que expongan Observables para reaccionar a cambios en tiempo real.</li> </ul> </li> <li> <p>M\u00f3dulos: Divide tu aplicaci\u00f3n en m\u00f3dulos. Los m\u00f3dulos permiten organizar tu c\u00f3digo en partes diferenciadas y reutilizables, facilitando la escalabilidad y el mantenimiento.</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#2-arquitectura-y-estructura-de-la-aplicacion","title":"2. Arquitectura y Estructura de la Aplicaci\u00f3n","text":"<p>La arquitectura de tu aplicaci\u00f3n Angular debe facilitar la localizaci\u00f3n de elementos, reducir la complejidad y evitar la duplicaci\u00f3n de c\u00f3digo. Aqu\u00ed hay algunas pautas clave:</p> <ul> <li> <p>Claridad y Accesibilidad: Organiza tu c\u00f3digo de manera que cualquier desarrollador pueda encontrar f\u00e1cilmente los elementos de la aplicaci\u00f3n.</p> </li> <li> <p>Reducci\u00f3n de Complejidad: Divide la funcionalidad en m\u00f3dulos y componentes espec\u00edficos para mantener el c\u00f3digo manejable.</p> </li> <li> <p>Evitar Duplicaci\u00f3n de C\u00f3digo: Adopta el principio DRY (Don\u2019t Repeat Yourself). Reutiliza componentes y servicios siempre que sea posible.</p> </li> <li> <p>Gu\u00eda de Estilos: Sigue las recomendaciones de la gu\u00eda de estilos de Angular para mantener un c\u00f3digo limpio y coherente.</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#3-principios-de-programacion","title":"3. Principios de Programaci\u00f3n","text":"<ul> <li> <p>Programaci\u00f3n Funcional y Reactiva: Prefiere la programaci\u00f3n funcional y reactiva sobre la orientaci\u00f3n a objetos o imperativa. Usa RxJS para manejar flujos de datos asincr\u00f3nicos.</p> </li> <li> <p>Composici\u00f3n sobre Herencia: En la programaci\u00f3n orientada a objetos, la composici\u00f3n es preferible a la herencia. Esto permite crear componentes m\u00e1s flexibles y reutilizables.</p> </li> <li> <p>Principio de Responsabilidad \u00danica (SRP): Mant\u00e9n tus archivos peque\u00f1os y enfocados en una \u00fanica responsabilidad. Cada clase, componente o interfaz deber\u00eda estar en su propio archivo.</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#4-componentes","title":"4. Componentes","text":"<ul> <li> <p>Mant\u00e9n Componentes Peque\u00f1os: Los componentes deben ser peque\u00f1os y enfocados. Es mejor tener varios componentes hijos que un \u00fanico componente complejo.</p> </li> <li> <p>Componentes de Presentaci\u00f3n y Contenedores:</p> <ul> <li>Dumb Components: Estos componentes solo se encargan de la presentaci\u00f3n. Reciben datos a trav\u00e9s de <code>@Input</code> y emiten eventos mediante <code>@Output</code>.</li> <li>Smart Components: Estos componentes manejan la l\u00f3gica de la aplicaci\u00f3n. Se conectan a servicios para obtener o enviar datos. Las rutas generalmente apuntan a componentes inteligentes.</li> </ul> </li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#5-estructura-de-directorios","title":"5. Estructura de Directorios","text":"<p>Organiza tu c\u00f3digo en directorios de manera que refleje la estructura de tu aplicaci\u00f3n:</p> <ul> <li>Core: Contiene servicios singleton, guardias, y cualquier otro c\u00f3digo que solo debe cargarse una vez.</li> <li>Shared: Contiene componentes, directivas y pipes reutilizables.</li> <li>Features: Cada funcionalidad principal de la aplicaci\u00f3n tiene su propio m\u00f3dulo y directorio.</li> <li>App: Contiene el m\u00f3dulo principal de la aplicaci\u00f3n, el m\u00f3dulo de enrutamiento principal y el componente ra\u00edz.</li> </ul> <p>Ejemplo de estructura de directorios:</p> <pre><code>/src\n  /app\n    /core\n      /services\n      /guards\n      core.module.ts\n    /shared\n      /components\n      /directives\n      /pipes\n      shared.module.ts\n    /features\n      /products\n        /components\n        /services\n        /models\n        products.module.ts\n      /customers\n        /components\n        /services\n        /models\n        customers.module.ts\n    /app-routing\n    app.module.ts\n    app.component.ts\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#integracion-de-bibliotecas-de-terceros","title":"Integraci\u00f3n de Bibliotecas de Terceros","text":"<p>Angular, al ser un framework altamente extensible, permite la integraci\u00f3n de diversas bibliotecas de terceros que facilitan el desarrollo y mejoran la funcionalidad de nuestras aplicaciones. A continuaci\u00f3n, se describen algunas de las bibliotecas m\u00e1s populares y c\u00f3mo integrarlas en tu proyecto Angular.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#1-bootstrap","title":"1. Bootstrap","text":"<p>Bootstrap es un framework de CSS que facilita la creaci\u00f3n de interfaces web responsivas y modernas. Hay varias maneras de integrarlo en un proyecto Angular:</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#uso-del-cdn-de-bootstrap","title":"Uso del CDN de Bootstrap","text":"<p>Esta es la forma m\u00e1s simple y r\u00e1pida de agregar Bootstrap a tu proyecto.</p> <p>Ventajas: - Puede estar en la cach\u00e9 del navegador del cliente. - Siempre estar\u00e1 actualizado.</p> <p>Desventajas: - No siempre necesitas todos los componentes de Bootstrap. - Necesitas estar conectado a Internet.</p> <p>Para usar el CDN, simplemente agrega los siguientes enlaces en el archivo <code>index.html</code> de tu proyecto Angular:</p> <pre><code>&lt;link\n  rel=\"stylesheet\"\n  href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n/&gt;\n&lt;script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#descarga-manual","title":"Descarga Manual","text":"<p>Otra opci\u00f3n es descargar el archivo comprimido de Bootstrap y colocarlo en el directorio <code>assets</code> de tu proyecto.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#instalacion-via-npm","title":"Instalaci\u00f3n v\u00eda npm","text":"<p>La forma m\u00e1s recomendada para proyectos Angular es instalar Bootstrap a trav\u00e9s de npm, ya que facilita la gesti\u00f3n de dependencias.</p> <pre><code>npm install bootstrap\nnpm install --save-dev @types/bootstrap\n</code></pre> <p>Luego, agrega las rutas a los archivos de Bootstrap en tu archivo <code>angular.json</code>:</p> <pre><code>\"styles\": [\n  \"node_modules/bootstrap/dist/css/bootstrap.min.css\",\n  \"src/styles.scss\"\n],\n\"scripts\": [\n  \"node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\"\n]\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#2-angular-material","title":"2. Angular Material","text":"<p>Angular Material es una biblioteca de componentes UI basada en Material Design, desarrollada espec\u00edficamente para Angular.</p> <p>Para instalar Angular Material, utiliza el siguiente comando:</p> <pre><code>ng add @angular/material\n</code></pre> <p>Este comando configurar\u00e1 Angular Material en tu proyecto, incluyendo los temas y animaciones necesarias. Tambi\u00e9n puedes seguir la gu\u00eda de inicio r\u00e1pido en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#uso","title":"Uso","text":"<p>Una vez instalado, puedes empezar a usar los componentes de Angular Material import\u00e1ndolos en tus m\u00f3dulos. Por ejemplo, para usar un bot\u00f3n de Angular Material:</p> <pre><code>import { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  imports: [\n    MatButtonModule\n  ]\n})\nexport class AppModule { }\n</code></pre> <p>Y en tu plantilla HTML:</p> <pre><code>&lt;button mat-button&gt;Click me!&lt;/button&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#3-ngx-charts","title":"3. Ngx Charts","text":"<p>Ngx Charts es una biblioteca para crear gr\u00e1ficos y visualizaciones interactivas en Angular.</p> <p>Para instalar Ngx Charts, ejecuta el siguiente comando:</p> <pre><code>npm install @swimlane/ngx-charts --save\n</code></pre> <p>Luego, importa el m\u00f3dulo en <code>app.module.ts</code>:</p> <pre><code>import { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@NgModule({\n  imports: [\n    NgxChartsModule\n  ]\n})\nexport class AppModule { }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/consejos.html#uso_1","title":"Uso","text":"<p>Puedes encontrar ejemplos y documentaci\u00f3n detallada en la web oficial de Ngx Charts. Aqu\u00ed tienes un ejemplo b\u00e1sico de c\u00f3mo usar un gr\u00e1fico de barras:</p> <pre><code>import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    &lt;ngx-charts-bar-vertical\n      [view]=\"[700, 400]\"\n      [scheme]=\"colorScheme\"\n      [results]=\"single\"\n      [gradient]=\"gradient\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\"&gt;\n    &lt;/ngx-charts-bar-vertical&gt;\n  `\n})\nexport class AppComponent {\n  single = [\n    {\n      \"name\": \"Germany\",\n      \"value\": 8940000\n    },\n    {\n      \"name\": \"USA\",\n      \"value\": 5000000\n    }\n  ];\n\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'Population';\n  colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html","title":"Formularios en Angular","text":"<p>Los formularios son una parte fundamental de cualquier aplicaci\u00f3n web, y Angular ofrece dos enfoques principales para manejarlos: formularios reactivos y formularios basados en plantillas.</p> Caracter\u00edstica Formularios Reactivos Formularios Basados en Plantillas Configuraci\u00f3n del modelo de formulario Expl\u00edcita, creada en la clase del componente Impl\u00edcita, creada por directivas Modelo de datos Estructurado e inmutable No estructurado y mutable Flujo de datos Sincr\u00f3nico Asincr\u00f3nico Validaci\u00f3n del formulario Funciones Directivas"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#formularios-de-plantilla-en-angular","title":"Formularios de Plantilla en Angular","text":"<p>Usaremos los formularios de plantilla para aquellos que sean muy simples y no requieran una validaci\u00f3n o manejo de los datos sofisticados. </p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#configuracion-de-formularios-basados-en-plantillas","title":"Configuraci\u00f3n de Formularios Basados en Plantillas","text":"<p>Para empezar a trabajar con formularios basados en plantillas, necesitamos importar el m\u00f3dulo <code>FormsModule</code> en nuestro componente:</p> <pre><code>import { FormsModule } from '@angular/forms';\n\n...\n  imports: [\n    FormsModule,\n    // otros m\u00f3dulos\n  ],\n...\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#uso-de-ngmodel-y-validadores-html5","title":"Uso de ngModel y Validadores HTML5","text":"<p>Los formularios basados en plantillas en Angular permiten utilizar validadores HTML5 directamente en los elementos <code>input</code>. Estos validadores aplican autom\u00e1ticamente clases de estilo dependiendo del estado del formulario.</p> <pre><code>&lt;input\n  type=\"text\"\n  class=\"form-control\"\n  [(ngModel)]=\"product.description\"\n  minlength=\"5\"\n  maxlength=\"600\"\n  required\n/&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#modificar-estilos-al-validar","title":"Modificar Estilos al Validar","text":"<p>Podemos cambiar los estilos de los elementos del formulario en funci\u00f3n de su estado de validaci\u00f3n utilizando clases CSS personalizadas y la referencia a <code>ngModel</code>.</p> <pre><code>&lt;input\n  type=\"text\"\n  name=\"description\"\n  class=\"form-control\"\n  [(ngModel)]=\"product.description\"\n  minlength=\"5\"\n  maxlength=\"600\"\n  required\n  #descriptionModel=\"ngModel\"\n  [ngClass]=\"{\n    'is-valid': descriptionModel.touched &amp;&amp; descriptionModel.valid,\n    'is-invalid': descriptionModel.touched &amp;&amp; !descriptionModel.valid\n  }\"\n/&gt;\n&lt;div&gt;\n  &lt;div&gt;{{ product | json }}&lt;/div&gt;\n  &lt;div&gt;Dirty: {{ descriptionModel.dirty }}&lt;/div&gt;\n  &lt;div&gt;Valid: {{ descriptionModel.valid }}&lt;/div&gt;\n  &lt;div&gt;Value: {{ descriptionModel.value }}&lt;/div&gt;\n  &lt;div&gt;Errors: {{ descriptionModel.errors | json }}&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#manipular-la-entrada-del-usuario-en-tiempo-real","title":"Manipular la Entrada del Usuario en Tiempo Real","text":"<p>Podemos separar la vinculaci\u00f3n del modelo y el evento <code>ngModelChange</code> para manipular la entrada del usuario en tiempo real.</p> <pre><code>&lt;input\n  type=\"text\"\n  class=\"form-control\"\n  [ngModel]=\"product.description\"\n  (ngModelChange)=\"product.description = $event.toUpperCase()\"\n/&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#ngform-y-directiva-novalidate","title":"ngForm y Directiva noValidate","text":"<p>Por defecto, todos los formularios en Angular tienen la directiva <code>ngForm</code>. Podemos hacer una referencia a esta directiva para observar las propiedades generales del formulario. Es recomendable usar la directiva <code>novalidate</code> para desactivar la validaci\u00f3n del navegador y permitir que Angular gestione la validaci\u00f3n.</p> <pre><code>&lt;form #productForm=\"ngForm\" novalidate&gt;\n  &lt;input type=\"text\" name=\"description\" ... /&gt;\n&lt;/form&gt;\n&lt;div&gt;\n  &lt;div&gt;Touched: {{ productForm.touched }}&lt;/div&gt;\n  &lt;div&gt;Valid: {{ productForm.valid }}&lt;/div&gt;\n  &lt;div&gt;Value: {{ productForm.value | json }}&lt;/div&gt;\n  &lt;div&gt;Descripci\u00f3n: {{productForm.control.get('description').value | json}}&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#mostrar-los-errores-de-validacion","title":"Mostrar los Errores de Validaci\u00f3n","text":"<p>Podemos combinar estilos de Bootstrap, validaci\u00f3n HTML5, <code>ngIf</code> y referencias a <code>ngModel</code> para mostrar mensajes de error de validaci\u00f3n.</p> <pre><code>&lt;form #productForm=\"ngForm\" novalidate&gt;\n  &lt;input\n    type=\"text\"\n    name=\"description\"\n    class=\"form-control\"\n    [(ngModel)]=\"product.description\"\n    minlength=\"5\"\n    maxlength=\"600\"\n    required\n    #descriptionModel=\"ngModel\"\n    [ngClass]=\"{\n      'is-valid': descriptionModel.touched &amp;&amp; descriptionModel.valid,\n      'is-invalid': descriptionModel.touched &amp;&amp; !descriptionModel.valid\n    }\"\n  /&gt;\n  &lt;div *ngIf=\"descriptionModel.touched &amp;&amp; descriptionModel.invalid\" class=\"alert alert-danger\"&gt;\n    Descripci\u00f3n requerida (entre 5 y 60 caracteres)\n  &lt;/div&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#creacion-de-validadores-personalizados","title":"Creaci\u00f3n de Validadores Personalizados","text":"<p>Angular permite la creaci\u00f3n de validadores personalizados mediante directivas. Estos validadores se registran como validadores de Angular utilizando el proveedor <code>NG_VALIDATORS</code>.</p> <pre><code>import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appMinPrice]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: MinPriceDirective, multi: true }]\n})\nexport class MinPriceDirective implements Validator {\n  @Input('appMinPrice') minPrice: number;\n\n  constructor() { }\n\n  validate(c: AbstractControl): { [key: string]: any } | null {\n    if (this.minPrice &amp;&amp; c.value) {\n      if (this.minPrice &gt; c.value) {\n        return { minPrice: true };\n      }\n    }\n    return null;\n  }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#enviar-el-formulario","title":"Enviar el Formulario","text":"<p>Podemos enviar el formulario y realizar validaciones adicionales antes de enviarlo. Adem\u00e1s, podemos desactivar el bot\u00f3n de env\u00edo hasta que el formulario sea v\u00e1lido.</p> <pre><code>&lt;form #productForm=\"ngForm\" (ngSubmit)=\"editar(productForm)\" novalidate&gt;\n  &lt;input type=\"text\" name=\"description\" ... /&gt;\n  &lt;button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productForm.invalid\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>En el componente, obtenemos el formulario utilizando <code>@ViewChild</code> y la variable de referencia:</p> <pre><code>@ViewChild('editForm', { static: true }) editForm: NgForm;\n\neditar(productForm: NgForm) {\n  if (this.editForm.valid) {\n    this.productService.editProduct(this.product).subscribe(\n      ok =&gt; this.router.navigate(['/product/', this.product.id])\n    );\n  }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#formularios-reactivos","title":"Formularios Reactivos","text":"<p>En Angular, los formularios reactivos representan un conjunto de t\u00e9cnicas que permiten controlar mejor el comportamiento de los formularios desde el c\u00f3digo del componente en lugar de desde la plantilla. Aunque el uso de <code>[(ngModel)]</code> en formularios basados en plantillas ya proporciona cierto comportamiento reactivo, los formularios reactivos ofrecen una manera m\u00e1s estructurada y potente de manejar formularios complejos. Es recomendable usar formularios reactivos, especialmente en formularios m\u00e1s avanzados que van m\u00e1s all\u00e1 de simples b\u00fasquedas o inicios de sesi\u00f3n.</p> <p>Para trabajar con formularios reactivos, debemos importar el m\u00f3dulo <code>ReactiveFormsModule</code></p> <pre><code>import { ReactiveFormsModule } from '@angular/forms';\n\n...\n  imports: [\n    ReactiveFormsModule,\n    // otros m\u00f3dulos\n  ],\n...\n</code></pre> <p>En los formularios reactivos, declaramos directamente en el c\u00f3digo los objetos <code>FormControl</code>, <code>FormGroup</code> y <code>FormArray</code>. A continuaci\u00f3n, se muestra un ejemplo b\u00e1sico de c\u00f3mo configurar un formulario reactivo:</p> <ol> <li>Definir el Formulario en el Componente</li> </ol> <p>En el componente, necesitamos una variable de tipo <code>FormGroup</code> inicializada en el constructor. Utilizaremos un servicio inyectado llamado <code>FormBuilder</code> para construir el formulario.</p> <pre><code>import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html'\n})\nexport class ProductFormComponent {\n  formulario: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.crearFormulario();\n  }\n\n  crearFormulario() {\n    this.formulario = this.formBuilder.group({\n      name: [''],\n      price: [0],\n      description: [''],\n    });\n  }\n\n  crear() {\n    // L\u00f3gica para crear el producto\n  }\n}\n</code></pre> <ol> <li>HTML del Formulario</li> </ol> <p>En el HTML del formulario, solo necesitamos agregar <code>[formGroup]</code> y <code>formControlName</code> en cada <code>input</code>.</p> <pre><code>&lt;form [formGroup]=\"formulario\" (ngSubmit)=\"crear()\"&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;label for=\"inputName\"&gt;Name&lt;/label&gt;\n    &lt;input type=\"text\" class=\"form-control\" id=\"inputName\" formControlName=\"name\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;label for=\"inputPrice\"&gt;Price&lt;/label&gt;\n    &lt;input type=\"number\" class=\"form-control\" id=\"inputPrice\" formControlName=\"price\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;label for=\"inputDescription\"&gt;Description&lt;/label&gt;\n    &lt;input type=\"text\" class=\"form-control\" id=\"inputDescription\" formControlName=\"description\"&gt;\n  &lt;/div&gt;\n  &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#validaciones-sincronas","title":"Validaciones S\u00edncronas","text":"<p>En los formularios reactivos, las validaciones son m\u00e1s sencillas y se pueden declarar directamente en el c\u00f3digo del componente usando <code>Validators</code>.</p> <pre><code>import { Validators } from '@angular/forms';\n\ncrearFormulario() {\n  this.formulario = this.formBuilder.group({\n    name: ['', [Validators.required, Validators.minLength(5), Validators.pattern('.*[a-zA-Z].*')]],\n    price: [0, Validators.min(0.01)],\n    description: [''],\n  });\n}\n\nget nameNotValid() {\n  return this.formulario.get('name').invalid &amp;&amp; this.formulario.get('name').touched;\n}\n</code></pre> <p>Para aplicar las validaciones visualmente en el HTML, podemos utilizar getters:</p> <pre><code>&lt;input type=\"text\" class=\"form-control\" id=\"inputName\" formControlName=\"name\" \n  [ngClass]=\"nameNotValid ? 'is-invalid' : 'is-valid'\"&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#creacion-de-validadores-personalizados_1","title":"Creaci\u00f3n de Validadores Personalizados","text":"<p>Los validadores personalizados en formularios reactivos son funciones que devuelven una <code>ValidatorFn</code>. Aqu\u00ed mostramos c\u00f3mo crear un validador personalizado para fechas m\u00ednimas:</p> <pre><code>import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nfunction minDateValidator(minInputDate: string): ValidatorFn {\n  return (c: AbstractControl): { [key: string]: any } | null =&gt; {\n    if (c.value) {\n      const minDate = new Date(minInputDate);\n      const inputDate = new Date(c.value);\n      return minDate &lt;= inputDate ? null : { 'minDate': minDate.toLocaleDateString() };\n    }\n    return null;\n  };\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#validacion-de-campos-cruzados","title":"Validaci\u00f3n de Campos Cruzados","text":"<p>Podemos crear validadores personalizados para evaluar un campo en funci\u00f3n de otros campos en el formulario. Aqu\u00ed un ejemplo para validar que dos campos de contrase\u00f1a coincidan:</p> <pre><code>this.registerForm = this.formBuilder.group({\n  password: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10)]],\n  confirm_password: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10)]]\n}, {\n  validators: passwordValidator\n});\n\nconst passwordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null =&gt; {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirm_password');\n  return password &amp;&amp; confirmPassword &amp;&amp; password.value === confirmPassword.value ? null : { passwordValidator: true };\n};\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#agrupar-campos","title":"Agrupar Campos","text":"<p>Podemos agrupar campos en un <code>FormGroup</code> dentro de otro <code>FormGroup</code>:</p> <pre><code>this.formulario = this.formBuilder.group({\n  name: ['', [Validators.required, Validators.minLength(5), Validators.pattern('.*[a-zA-Z].*')]],\n  price: [0, Validators.min(0.01)],\n  description: [''],\n  address: this.formBuilder.group({\n    street: [''],\n    city: ['']\n  })\n});\n</code></pre> <p>Y en el HTML:</p> <pre><code>&lt;div class=\"form-group row mb-3\" formGroupName=\"address\"&gt;\n  &lt;label for=\"inputStreet\" class=\"col-sm-2 col-form-label\"&gt;Street&lt;/label&gt;\n  &lt;div class=\"form-row col\"&gt;\n    &lt;div class=\"col\"&gt;\n      &lt;input class=\"form-control\" id=\"inputStreet\" placeholder=\"Street\" formControlName=\"street\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col\"&gt;\n      &lt;input class=\"form-control\" id=\"inputCity\" placeholder=\"City\" formControlName=\"city\"&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#cargar-datos-en-el-formulario","title":"Cargar Datos en el Formulario","text":"<p>Si estamos trabajando en un formulario de edici\u00f3n, podemos cargar los valores en los controles de formulario utilizando <code>setValue()</code>, <code>patchValue()</code> o <code>reset()</code>.</p> <pre><code>this.formulario.setValue(this.product);  // Necesita todos los campos\n\n// Para resetear con valores por defecto\nthis.formulario.reset({\n  name: 'Default Name',\n  price: 0,\n  description: 'Default Description'\n});\n\n// Para actualizar solo algunos campos\nthis.formulario.patchValue({\n  name: 'Updated Name'\n});\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#deteccion-de-cambios","title":"Detecci\u00f3n de Cambios","text":"<p>Los <code>FormGroup</code> y <code>FormControl</code> contienen un Observable llamado <code>valueChanges</code> que emite el valor actual del control cada vez que cambia. Podemos suscribirnos a este Observable para realizar acciones en respuesta a los cambios.</p> <pre><code>export class AppComponent implements OnInit {\n  formulario: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      notifications: [false]\n    });\n\n    this.formulario.get('notifications').valueChanges\n      .subscribe(value =&gt; this.updateNotificationMethod(value));\n  }\n\n  updateNotificationMethod(value: boolean) {\n    // L\u00f3gica para manejar cambios en las notificaciones\n  }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/formulariosangular.html#formularios-dinamicos","title":"Formularios Din\u00e1micos","text":"<p>Los <code>FormArray</code> permiten crear formularios din\u00e1micos donde los controles pueden a\u00f1adirse o eliminarse en tiempo de ejecuci\u00f3n.</p> <pre><code>this.formulario = this.formBuilder.group({\n  production: this.formBuilder.array([this.getProductionControl()])\n});\n\ngetProductionControl(): FormControl {\n  const control = this.formBuilder.control(0);\n  control.setValidators(Validators.min(100));\n  return control;\n}\n\nget productionArray(): FormArray {\n  return &lt;FormArray&gt;this.formulario.get('production');\n}\n\naddProduction() {\n  this.productionArray.push(this.getProductionControl());\n}\n\ndelProduction(index: number) {\n  this.productionArray.removeAt(index);\n}\n</code></pre> <p>Y en el HTML:</p> <pre><code>&lt;div class=\"row row-cols-6 g-3\" formArrayName=\"production\"&gt;\n  &lt;div class=\"col\" *ngFor=\"let prod of productionArray.controls; let i=index\"&gt;\n    &lt;input type=\"number\" class=\"form-control col\" [formControlName]=\"i\" placeholder=\"Production {{i}}\" \n      [ngClass]=\"{\n        'is-valid': productionArray.controls[i].valid &amp;&amp; productionArray.controls[i].touched,\n        'is-invalid': productionArray.controls[i].invalid &amp;&amp; productionArray.controls[i].touched\n      }\"&gt;\n    &lt;button type=\"button\" class=\"col btn btn-outline-danger\" (click)=\"delProduction(i)\"&gt;\ud83d\uddd1&lt;/button&gt;\n  &lt;/div&gt;\n  &lt;button type=\"button\" class=\"col btn btn-primary\" (click)=\"addProduction()\"&gt;Add Production&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html","title":"Comunicaci\u00f3n con el servidor en Angular","text":""},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#servicios-en-angular","title":"Servicios en Angular","text":"<p>En Angular, los servicios son componentes fundamentales que proporcionan datos y funcionalidades reutilizables a lo largo de la aplicaci\u00f3n. Generalmente, los servicios manejan operaciones CRUD (Create, Read, Update, Delete) y permiten mantener la l\u00f3gica de negocio y la gesti\u00f3n de datos de forma centralizada y persistente.</p> <ul> <li>Provisi\u00f3n de Informaci\u00f3n: Los servicios proporcionan datos a los componentes que los soliciten.</li> <li>Operaciones CRUD: Realizan operaciones b\u00e1sicas de creaci\u00f3n, lectura, actualizaci\u00f3n y eliminaci\u00f3n.</li> <li>Persistencia de Datos: Mantienen los datos de manera persistente a trav\u00e9s de diferentes componentes.</li> <li>Reutilizables: Son reutilizables en toda la aplicaci\u00f3n, promoviendo un c\u00f3digo limpio y modular.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#decorador-injectable","title":"Decorador @Injectable","text":"<p>Las clases de servicio en Angular est\u00e1n decoradas con <code>@Injectable()</code>. Este decorador indica al inyector de dependencias de Angular que debe proporcionar una instancia de la clase cuando sea necesario. Aqu\u00ed hay un ejemplo de una clase de servicio:</p> <pre><code>import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'  // Inicia que no hace falta que est\u00e9 en providers\n})\nexport class ProductService {\n  // M\u00e9todos y l\u00f3gica del servicio\n}\n</code></pre> <p>El decorador <code>@Injectable</code> asegura que Angular gestione la instancia del servicio como un Singleton, lo que significa que se crea una \u00fanica instancia del servicio y se comparte entre todos los componentes que lo requieran.</p> <p>Si el servicio se declara con <code>providedIn: 'root'</code>, no es necesario agregarlo a <code>providers</code> porque Angular se encargar\u00e1 de su inyecci\u00f3n autom\u00e1ticamente en toda la aplicaci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#inyeccion-de-dependencias","title":"Inyecci\u00f3n de Dependencias","text":"<p>En Angular, la inyecci\u00f3n de dependencias (DI) es una t\u00e9cnica poderosa que permite a los componentes solicitar servicios de manera eficiente. En lugar de crear instancias de servicios con <code>new</code>, Angular maneja la creaci\u00f3n y provisi\u00f3n de servicios mediante el constructor:</p> <pre><code>import { Component } from '@angular/core';\nimport { ProductService } from './product.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html'\n})\nexport class ProductComponent {\n  constructor(private productService: ProductService) { }\n}\n</code></pre> <p>Este enfoque hace que el c\u00f3digo sea m\u00e1s legible y f\u00e1cil de mantener. Adem\u00e1s, permite que Angular gestione la creaci\u00f3n de servicios como Singletons, asegurando que todos los componentes utilicen la misma instancia del servicio.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#httpclientmodule","title":"HttpClientModule","text":"<p>Los servicios en Angular a menudo obtienen datos de un servidor a trav\u00e9s de HTTP. Para hacer esto, se debe importar <code>HttpClientModule</code>:</p> <pre><code>import { HttpClient, HttpClientModule } from '@angular/common/http';\n....\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#servicios-como-clientes-http","title":"Servicios como Clientes HTTP","text":"<p>Los servicios pueden utilizar <code>HttpClient</code> para realizar solicitudes HTTP. Esto se logra mediante la inyecci\u00f3n de dependencias. Aqu\u00ed hay un ejemplo de un servicio que obtiene productos de un servidor:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Product } from './product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private productURL = 'https://api.example.com/products';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable&lt;Product[]&gt; {\n    return this.http.get&lt;{products: Product[]}&gt;(this.productURL).pipe(\n      map(response =&gt; response.products)\n    );\n  }\n}\n</code></pre> <p>En este ejemplo, <code>getProducts</code> realiza una solicitud HTTP GET para obtener una lista de productos. Utiliza <code>map</code> de RxJS para transformar la respuesta antes de devolverla como un <code>Observable</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#envio-de-datos-con-post","title":"Env\u00edo de Datos con POST","text":"<p>Para enviar datos al servidor, se utiliza el m\u00e9todo <code>post</code> de <code>HttpClient</code>. Aqu\u00ed se muestra c\u00f3mo hacerlo:</p> <pre><code>import { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loginURL = 'https://api.example.com/login';\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials: {username: string, password: string}): Observable&lt;{token: string}&gt; {\n    return this.http.post&lt;{token: string}&gt;(this.loginURL, JSON.stringify(credentials), this.httpOptions);\n  }\n}\n</code></pre> <p>En este ejemplo, <code>login</code> env\u00eda credenciales de usuario al servidor utilizando una solicitud HTTP POST. Se configuran las cabeceras HTTP para especificar que el contenido es JSON.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#datos-asincronos","title":"Datos as\u00edncronos","text":"<p>En Angular, el manejo de datos as\u00edncronos es una habilidad crucial para desarrollar aplicaciones web modernas y eficientes. Angular utiliza la librer\u00eda RxJS para implementar una versi\u00f3n avanzada de manejo de datos as\u00edncronos conocida como Observables, que ofrece capacidades m\u00e1s robustas en comparaci\u00f3n con las Promesas tradicionales de JavaScript.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#promesas-vs-observables","title":"Promesas vs. Observables","text":"<p>Aunque se puede trabajar con promesas para obtener datos, Angular utiliza por defecto los Observables de RxJS debido a sus ventajas:</p> <ul> <li>Valores M\u00faltiples: Mientras que una promesa retorna un solo valor o un error, un Observable puede emitir m\u00faltiples valores a lo largo del tiempo.</li> <li>Lazy Loading: Una promesa comienza su ejecuci\u00f3n en el momento de su creaci\u00f3n, mientras que un Observable s\u00f3lo empieza a emitir valores cuando alguien se suscribe a \u00e9l.</li> <li>Cancelaci\u00f3n: Los observables pueden ser cancelados mediante la cancelaci\u00f3n de las suscripciones, lo que permite un control m\u00e1s fino sobre el flujo de datos.</li> <li>Operadores: RxJS proporciona una amplia gama de operadores como <code>map</code>, <code>filter</code> y <code>reduce</code> que permiten manipular f\u00e1cilmente los datos emitidos por los observables.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#uso-de-operadores-en-observables","title":"Uso de Operadores en Observables","text":"<p>Los operadores en RxJS son funciones que permiten transformar, filtrar y combinar flujos de datos de observables. Aqu\u00ed hay un ejemplo de c\u00f3mo se utilizan los operadores <code>map</code> y <code>filter</code>:</p> <ul> <li><code>map</code>: Manipula los datos y los retorna.</li> <li><code>filter</code>: Deja pasar s\u00f3lo los datos que cumplen con una condici\u00f3n espec\u00edfica.</li> </ul> <p>Estos operadores se aplican como par\u00e1metros del m\u00e9todo <code>pipe</code> de la clase <code>Observable</code>.</p> <pre><code>...\nexport class ProductService {\n  private productURL = 'https://api.example.com/products';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable&lt;Product[]&gt; {\n    return this.http.get&lt;{products: Product[]}&gt;(this.productURL).pipe(\n      map(response =&gt; response.products),\n      filter(product =&gt; product.price &gt; 20)\n    );\n  }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#procesamiento-de-respuestas-de-observables","title":"Procesamiento de Respuestas de Observables","text":"<p>Un observable puede tener m\u00faltiples suscriptores y s\u00f3lo comienza a emitir datos cuando alguien se suscribe a \u00e9l. El m\u00e9todo <code>subscribe()</code> acepta tres funciones como par\u00e1metros:</p> <ol> <li>Funci\u00f3n de \u00e9xito: Se ejecuta cuando el observable emite un valor.</li> <li>Funci\u00f3n de error (opcional): Se ejecuta si el observable o alguno de sus operadores falla.</li> <li>Funci\u00f3n de finalizaci\u00f3n (opcional): Se ejecuta siempre al finalizar la emisi\u00f3n de datos.</li> </ol> <pre><code>products: Product[] = [];\n\nngOnInit(): void {\n  this.productsService.getProducts().subscribe(\n    prods =&gt; this.products = prods, // Funci\u00f3n de \u00e9xito\n    error =&gt; console.error(error),  // Funci\u00f3n de error (opcional)\n    () =&gt; console.log('Products loaded') // Funci\u00f3n de finalizaci\u00f3n (opcional)\n  );\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#mostrar-datos-asincronos","title":"Mostrar Datos As\u00edncronos","text":"<p>La carga de datos as\u00edncronos puede retrasarse, lo que puede causar errores si Angular intenta acceder a datos que a\u00fan no est\u00e1n disponibles. Para manejar esto, se pueden utilizar varias t\u00e9cnicas:</p> <ul> <li>Objetos Vac\u00edos: Crear un objeto con datos vac\u00edos para evitar errores.</li> <li>Directiva <code>@if</code>: Mostrar los datos s\u00f3lo cuando est\u00e9n completamente cargados.</li> <li>Operador <code>?</code>: Asegurar que los datos no se accedan hasta que tengan un valor v\u00e1lido.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#signals","title":"Signals","text":"<p>Las se\u00f1ales (<code>signals</code>) son una opci\u00f3n m\u00e1s simple y menos potente que los observables para tareas reactivas b\u00e1sicas. Desde Angular 17, se consideran una buena opci\u00f3n para tareas reactivas simples.</p> <pre><code>constructor(){\n  effect(()=&gt;{console.log(`Valor de num: ${this.num()}`); });\n}\nnum = signal(0);\nupdateNum(){ this.num.update((n: number) =&gt; n + 1); }\nngOnInit(): void { this.num.set(1); }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#resolver","title":"Resolver","text":"<p>A veces es necesario obtener datos del servidor antes de acceder a una ruta espec\u00edfica. Para esto, se utiliza un tipo especial de servicio llamado Resolver. </p> <p>Un Resolver es un servicio que implementa el m\u00e9todo <code>resolve</code>, el cual obtiene los datos antes de que la ruta se cargue:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ProductService } from './product.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Product } from './product.model';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductResolver implements Resolve&lt;Product&gt; {\n  constructor(private productsService: ProductService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Product | Observable&lt;Product&gt; | Promise&lt;Product&gt; {\n    return this.productsService.getProduct(route.params.id).pipe(\n      catchError(error =&gt; {\n        this.router.navigate(['/products']);\n        return of(null);\n      })\n    );\n  }\n}\n</code></pre> <p>Este resolver utiliza el servicio real para obtener los productos y maneja cualquier error redirigiendo al usuario a una ruta segura.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#configuracion-de-rutas-con-resolver","title":"Configuraci\u00f3n de Rutas con Resolver","text":"<p>Las rutas pueden configurarse para utilizar un resolver, asegurando que los datos necesarios est\u00e9n disponibles antes de cargar el componente:</p> <pre><code>const routes: Routes = [\n  { path: 'product/edit/:id',\n    canActivate: [ProductDetailGuard],\n    canDeactivate: [LeavePageGuard],\n    resolve: { product: ProductResolver },\n    component: ProductEditComponent\n  },\n  // Otras rutas\n];\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#autenticacion-con-angular","title":"Autenticaci\u00f3n con Angular","text":"<p>La autenticaci\u00f3n es un aspecto crucial de las aplicaciones web modernas. En Angular, la autenticaci\u00f3n puede ser manejada de varias formas, dependiendo de si la aplicaci\u00f3n est\u00e1 alojada en el mismo servidor que el backend o si se utiliza un servicio externo. En este cap\u00edtulo, exploraremos diferentes t\u00e9cnicas de autenticaci\u00f3n y autorizaci\u00f3n en Angular, incluyendo el uso de cookies, tokens, interceptores, y guards.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#cookies-y-tokens","title":"Cookies y Tokens","text":"<p>Si la aplicaci\u00f3n web y el servidor est\u00e1n alojados en el mismo dominio, se pueden utilizar cookies para la autenticaci\u00f3n. Sin embargo, cuando se utiliza un servicio externo, es com\u00fan utilizar tokens de autenticaci\u00f3n, como los JSON Web Tokens (JWT).</p> <p>Cookies: - Son enviadas autom\u00e1ticamente por el navegador en cada petici\u00f3n al servidor. - Simplifican la gesti\u00f3n de sesiones cuando el frontend y el backend comparten el mismo dominio.</p> <p>Tokens: - Deben ser enviados manualmente en cada petici\u00f3n. - Se almacenan en <code>localStorage</code> o <code>sessionStorage</code>. - Proporcionan una mayor flexibilidad, especialmente cuando el frontend y el backend est\u00e1n en dominios diferentes.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#interceptores","title":"Interceptores","text":"<p>Los interceptores en Angular permiten interceptar y manipular solicitudes HTTP antes de que se env\u00eden al servidor. Esto es \u00fatil para agregar tokens de autenticaci\u00f3n a cada petici\u00f3n autom\u00e1ticamente.</p> <p>Ejemplo de Interceptor de Autenticaci\u00f3n:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService {\n  intercept(req: HttpRequest&lt;any&gt;, next: HttpHandler): Observable&lt;HttpEvent&lt;any&gt;&gt; {\n    const token = localStorage.getItem('idToken'); // Token de localStorage\n    if (token) {\n      // Clonamos la petici\u00f3n y a\u00f1adimos el token\n      const authReq = req.clone({ url: req.url.concat(`?auth=${token}`) });\n      // Enviamos la petici\u00f3n con el token\n      return next.handle(authReq);\n    }\n    // Sin token, enviamos la petici\u00f3n original\n    return next.handle(req);\n  }\n}\n</code></pre> <p>Para utilizar este interceptor, se debe proporcionar en el m\u00f3dulo principal:</p> <pre><code>providers: [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptorService,\n    multi: true,\n  },\n],\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#guards","title":"Guards","text":"<p>Los guards son servicios que permiten o deniegan el acceso a ciertas rutas en una aplicaci\u00f3n Angular. El guard <code>CanActivate</code> se utiliza para proteger rutas y asegurar que solo usuarios autenticados puedan acceder a ellas.</p> <p>Ejemplo de Guard <code>CanActivate</code>:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductDetailGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable&lt;boolean | UrlTree&gt; | Promise&lt;boolean | UrlTree&gt; | boolean | UrlTree {\n    const id = route.params.id;\n    if (isNaN(id) || id &lt; 1) {\n      console.log('La ID no es v\u00e1lida');\n      return this.router.parseUrl('/catalog');\n    }\n    return true;\n  }\n}\n</code></pre> <p>Configuraci\u00f3n de la ruta con Guard:</p> <pre><code>{ path: 'product/:id', canActivate: [ProductDetailGuard], component: ProductDetailComponent },\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#variables-como-observables","title":"Variables como Observables","text":"<p>En una aplicaci\u00f3n autenticada, es importante que los componentes reaccionen a los cambios en el estado de autenticaci\u00f3n sin necesidad de recargar la p\u00e1gina. Esto se puede lograr usando <code>BehaviorSubject</code> o <code>Subject</code> para mantener y observar el estado de autenticaci\u00f3n.</p> <p>Ejemplo de Uso de <code>BehaviorSubject</code>:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loguedInfo: BehaviorSubject&lt;boolean&gt;;\n\n  constructor() {\n    this.loguedInfo = new BehaviorSubject&lt;boolean&gt;(false);\n  }\n\n  isLogued(): Observable&lt;boolean&gt; {\n    return this.loguedInfo.asObservable();\n  }\n\n  login() {\n    // L\u00f3gica de autenticaci\u00f3n\n    this.loguedInfo.next(true);\n  }\n\n  logout() {\n    // L\u00f3gica de cierre de sesi\u00f3n\n    this.loguedInfo.next(false);\n  }\n}\n</code></pre> <p>Suscripci\u00f3n al Estado de Autenticaci\u00f3n en un Componente:</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  template: `&lt;div *ngIf=\"logued\"&gt;Usuario autenticado&lt;/div&gt;`\n})\nexport class AppComponent implements OnInit {\n  logued = false;\n\n  constructor(private auth: AuthService) {}\n\n  ngOnInit(): void {\n    this.auth.isLogued().subscribe(logued =&gt; {\n      this.logued = logued;\n    });\n  }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#integracion-de-angular-con-supabase","title":"Integraci\u00f3n de Angular con Supabase","text":"<p>Supabase es una plataforma de backend como servicio (BaaS) que ofrece una variedad de servicios para aplicaciones web y m\u00f3viles, como bases de datos en tiempo real, autenticaci\u00f3n y almacenamiento. Supabase es compatible con TypeScript, lo que facilita su integraci\u00f3n con aplicaciones Angular. En este cap\u00edtulo, veremos c\u00f3mo configurar y utilizar Supabase en una aplicaci\u00f3n Angular.</p> <p>Para comenzar, necesitamos instalar el SDK de Supabase utilizando npm:</p> <pre><code>npm install @supabase/supabase-js\n</code></pre> <p>Despu\u00e9s de instalar el SDK, configuramos nuestras credenciales de Supabase en el archivo <code>environment.ts</code>. Este archivo es utilizado por Angular para gestionar diferentes configuraciones de entorno, como las variables de entorno para desarrollo y producci\u00f3n.</p> <p>En <code>src/environments/environment.ts</code>, a\u00f1ade las siguientes l\u00edneas:</p> <pre><code>export const environment = {\n  production: false,\n  supabaseUrl: 'YOUR_SUPABASE_URL',\n  supabaseKey: 'YOUR_SUPABASE_KEY',\n};\n</code></pre> <p>Aseg\u00farate de reemplazar <code>'YOUR_SUPABASE_URL'</code> y <code>'YOUR_SUPABASE_KEY'</code> con tus credenciales de Supabase.</p> <p>A continuaci\u00f3n, creamos un servicio en Angular para inicializar y gestionar Supabase. Este servicio ser\u00e1 responsable de la configuraci\u00f3n inicial y de proporcionar m\u00e9todos para interactuar con la base de datos.</p> <p>Crea un nuevo servicio utilizando Angular CLI:</p> <pre><code>ng generate service supabase\n</code></pre> <p>En el archivo <code>supabase.service.ts</code>, inicializa Supabase de la siguiente manera:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n\n  // M\u00e9todos para interactuar con Supabase\n  async getData(table: string) {\n    const { data, error } = await this.supabase.from(table).select('*');\n    if (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n    return data;\n  }\n\n  async insertData(table: string, row: any) {\n    const { data, error } = await this.supabase.from(table).insert(row);\n    if (error) {\n      console.error('Error inserting data:', error);\n      throw error;\n    }\n    return data;\n  }\n\n  async updateData(table: string, row: any, id: number) {\n    const { data, error } = await this.supabase.from(table).update(row).eq('id', id);\n    if (error) {\n      console.error('Error updating data:', error);\n      throw error;\n    }\n    return data;\n  }\n\n  async deleteData(table: string, id: number) {\n    const { data, error } = await this.supabase.from(table).delete().eq('id', id);\n    if (error) {\n      console.error('Error deleting data:', error);\n      throw error;\n    }\n    return data;\n  }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/httpangular.html#conversion-de-promesas-a-observables","title":"Conversi\u00f3n de Promesas a Observables","text":"<p>El SDK de Supabase funciona con promesas, pero en Angular es com\u00fan trabajar con Observables para aprovechar las capacidades de programaci\u00f3n reactiva de RxJS. Podemos convertir promesas a observables utilizando el operador <code>from</code> de RxJS.</p> <pre><code>import { from, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n\n  getDataObservable(table: string): Observable&lt;any&gt; {\n    return from(this.getData(table));\n  }\n\n  private async getData(table: string) {\n    const { data, error } = await this.supabase.from(table).select('*');\n    if (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n    return data;\n  }\n}\n</code></pre> <p>En el componente, podemos suscribirnos al Observable para obtener los datos:</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { SupabaseService } from '../supabase.service';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css'],\n})\nexport class DataComponent implements OnInit {\n  data: any[] = [];\n\n  constructor(private supabaseService: SupabaseService) {}\n\n  ngOnInit() {\n    this.supabaseService.getDataObservable('your_table_name').subscribe(\n      (data) =&gt; {\n        this.data = data;\n      },\n      (error) =&gt; {\n        console.error('Error loading data:', error);\n      }\n    );\n  }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html","title":"Rutasangular","text":""},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#rutas-en-angular","title":"Rutas en Angular","text":"<p>Angular es com\u00fanmente utilizado para desarrollar Single Page Applications (SPA). A pesar de ser una SPA, la aplicaci\u00f3n debe comportarse de manera similar a los sitios web tradicionales en t\u00e9rminos de URLs (Uniform Resource Identifiers). Esto implica que necesitamos poder referenciar externamente las diferentes partes de la aplicaci\u00f3n, tener la capacidad de navegar hacia atr\u00e1s y adelante en el historial del navegador y manejar rutas virtuales adecuadamente.</p> <p>Las rutas en Angular se definen en el archivo <code>app-routing.module.ts</code>. Las rutas son objetos que contienen el camino (<code>path</code>) y el componente al que hacen referencia. Las p\u00e1ginas en una SPA de Angular son representadas por componentes, y el enrutador carga las rutas dentro de un <code>&lt;router-outlet&gt;</code> en la plantilla principal de la aplicaci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#ejemplo-basico-de-rutas","title":"Ejemplo B\u00e1sico de Rutas","text":"<p>El siguiente es un ejemplo de c\u00f3mo configurar rutas b\u00e1sicas en Angular:</p> <pre><code>import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { PlanetListComponent } from './planets/planet-list/planet-list.component';\nimport { SunComponent } from './sun/sun.component';\nimport { PlanetDetailComponent } from './planets/planet-detail/planet-detail.component';\nimport { PlanetEditComponent } from './planets/planet-edit/planet-edit.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PlanetResolveService } from './planets/planet-resolve.service';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'planets', canActivate: [AuthGuard], component: PlanetListComponent },\n  { path: 'suns', canActivate: [AuthGuard], component: SunComponent },\n  { path: 'planet/:id', canActivate: [AuthGuard], component: PlanetDetailComponent },\n  { path: 'planet/edit/:id', canActivate: [AuthGuard], resolve: { planet: PlanetResolveService }, component: PlanetEditComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n</code></pre> <ul> <li><code>path</code>: Define el URI para la ruta.</li> <li><code>component</code>: El componente que se carga cuando se navega a esa ruta.</li> <li><code>canActivate</code>: Define guardias que protegen las rutas.</li> <li><code>resolve</code>: Permite precargar datos antes de que el componente se cargue.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#rutas-con-hash","title":"Rutas con Hash","text":"<p>Una manera de implementar SPA sin manipular el servidor es usar una almohadilla (<code>#</code>) al principio de la ruta:</p> <pre><code>http://localhost:4200/#/home\n</code></pre> <p>Esto es m\u00e1s antiguo, pero funciona en todos los navegadores, simplifica el env\u00edo de par\u00e1metros y evita la manipulaci\u00f3n del servidor. Para que funcione, se debe agregar <code>withHashLocation()</code> al los providers del bootstrap:</p> <pre><code>bootstrapApplication(AppComponent, {\n  providers: [\n    provideRouter(routes, withHashLocation()),\n  ],\n});\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#creacion-de-rutas","title":"Creaci\u00f3n de Rutas","text":"<ul> <li>Ruta B\u00e1sica: Define un camino y el componente que se activa.</li> </ul> <pre><code>{ path: 'home', component: HomeComponent }\n</code></pre> <ul> <li>Ruta con Guard: Protege rutas usando guardias.</li> </ul> <pre><code>{ path: 'planets', canActivate: [AuthGuard], component: PlanetListComponent }\n</code></pre> <ul> <li>Ruta con Par\u00e1metros: Permite pasar par\u00e1metros en la URL.</li> </ul> <pre><code>{ path: 'planet/:id', canActivate: [AuthGuard], component: PlanetDetailComponent }\n</code></pre> <ul> <li>Ruta con Resolve: Precarga datos necesarios para el componente.</li> </ul> <pre><code>{ path: 'planet/edit/:id', canActivate: [AuthGuard], resolve: { planet: PlanetResolveService }, component: PlanetEditComponent }\n</code></pre> <ul> <li>Ruta por Defecto: Redirige a una ruta espec\u00edfica si la ruta no existe.</li> </ul> <pre><code>{ path: '**', pathMatch: 'full', redirectTo: 'home' }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#enlaces-de-navegacion","title":"Enlaces de Navegaci\u00f3n","text":"<p>Para crear enlaces de navegaci\u00f3n en Angular, se utiliza <code>[routerLink]</code> en lugar de <code>href</code>:</p> <pre><code>&lt;a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['home']\"&gt;Home&lt;/a&gt;\n</code></pre> <p>Si la ruta tiene m\u00e1s niveles, se usar\u00e1n elementos adicionales en el array.</p> <pre><code>&lt;a class=\"nav-link\" aria-current=\"page\" [routerLink]=\"['home']\" [routerLinkActive]=\"['active']\"&gt;Home&lt;/a&gt;\n</code></pre> <p>El atributo <code>routerLinkActive</code> puede estar sin corchetes y aplicarse al elemento padre del enlace si es necesario.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#navegacion-por-codigo","title":"Navegaci\u00f3n por C\u00f3digo","text":"<p>Para navegar por c\u00f3digo en Angular, se importa el <code>Router</code> y se inyecta en el constructor:</p> <pre><code>import { Router } from '@angular/router';\n\nconstructor(private router: Router) {}\n\ndetailsProduct(id: number): void {\n  this.router.navigate(['/product', id]);\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#obtener-parametros-de-las-rutas","title":"Obtener Par\u00e1metros de las Rutas","text":"<p>Las rutas pueden contener par\u00e1metros, como un <code>id</code>. Para obtener estos par\u00e1metros, se utiliza <code>ActivatedRoute</code>:</p> <pre><code>import { ActivatedRoute } from '@angular/router';\n\nconstructor(private activatedRoute: ActivatedRoute) { }\n\nngOnInit(): void {\n  this.activatedRoute.params.subscribe(params =&gt; {\n    console.log(params);\n  });\n}\n</code></pre> <p>Los par\u00e1metros (<code>params</code>) son un observable al que nos suscribimos para recibir los valores pasados en la URL.</p> <p>A partir de Angular 16, se pueden configurar los par\u00e1metros del router para aceptarlos mediante <code>@Input()</code> usando <code>withComponentInputBinding()</code>.</p> <p><pre><code>bootstrapApplication(App, {\n  providers: [\n    provideRouter(routes, \n        //... other features\n        withComponentInputBinding() // &lt;-- enable this feature\n    )\n  ],\n});\n</code></pre> En el componente:</p> <pre><code> @Input() query?: string; // Normal\n @Input('q') queryParam?: string; // Renombrar el par\u00e1metro\n</code></pre> <p>En el router:  <pre><code>{ path: 'planet/:query', canActivate: [AuthGuard], component: PlanetDetailComponent }\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#transiciones-en-angular-2024","title":"Transiciones en Angular (2024)","text":"<p>Las transiciones en Angular permiten crear animaciones fluidas entre diferentes estados de la aplicaci\u00f3n. En la actualidad, la funcionalidad completa de estas transiciones solo est\u00e1 totalmente disponible en Google Chrome. A continuaci\u00f3n, se detalla c\u00f3mo implementar y personalizar las transiciones en Angular.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#definicion-de-animaciones-en-css","title":"Definici\u00f3n de Animaciones en CSS","text":"<p>Primero, definimos las animaciones CSS utilizando <code>@keyframes</code>. Esto permite rotar los elementos durante las transiciones.</p> <pre><code>@keyframes rotate-out {\n  to {\n    transform: rotate(90deg);\n  }\n}\n\n@keyframes rotate-in {\n  from {\n    transform: rotate(-90deg);\n  }\n}\n\n::view-transition-old(count),\n::view-transition-new(count) {\n  animation-duration: 200ms;\n  animation-name: -ua-view-transition-fade-in, rotate-in;\n}\n\n::view-transition-old(count) {\n  animation-name: -ua-view-transition-fade-out, rotate-out;\n}\n</code></pre> <p>En este ejemplo: - <code>rotate-out</code>: rota un elemento 90 grados. - <code>rotate-in</code>: rota un elemento desde -90 grados hasta su posici\u00f3n original. - <code>::view-transition-old(count)</code> y <code>::view-transition-new(count)</code>: aplican las animaciones durante la transici\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#configuracion-de-rutas-en-angular","title":"Configuraci\u00f3n de Rutas en Angular","text":"<p>Para habilitar las transiciones, configuramos las rutas en <code>app-routing.module.ts</code> utilizando <code>provideRouter</code> y a\u00f1adiendo <code>withViewTransitions()</code>.</p> <pre><code>providers: [\n  provideRouter(\n    [\n      { path: '', pathMatch: 'full', redirectTo: '/0' },\n      { path: ':count', component: Counter },\n    ],\n    withViewTransitions(),\n    withComponentInputBinding()\n  ),\n],\n</code></pre> <ul> <li><code>provideRouter</code>: Define las rutas de la aplicaci\u00f3n.</li> <li><code>withViewTransitions()</code>: Habilita las transiciones de vista.</li> <li><code>withComponentInputBinding()</code>: Permite el enlace de entrada del componente.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#personalizacion-de-transiciones","title":"Personalizaci\u00f3n de Transiciones","text":"<p>Es posible personalizar las transiciones en el archivo CSS.</p> <pre><code>::view-transition-old(count),\n::view-transition-new(count) {\n  animation-duration: 200ms;\n  animation-name: -ua-view-transition-fade-in, rotate-in;\n}\n\n::view-transition-old(count) {\n  animation-name: -ua-view-transition-fade-out, rotate-out;\n}\n</code></pre> <p>Aqu\u00ed, se definen las duraciones y los nombres de las animaciones para las transiciones de entrada y salida.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/angular/rutasangular.html#uso-de-onviewtransitioncreated","title":"Uso de <code>onViewTransitionCreated</code>","text":"<p><code>withViewTransitions</code> acepta un objeto con la funci\u00f3n <code>onViewTransitionCreated</code> para manejar eventos de transici\u00f3n.</p> <pre><code>withViewTransitions({\n  onViewTransitionCreated: ({ transition }) =&gt; {\n    const router = inject(Router);\n    const targetUrl = router.getCurrentNavigation()!.finalUrl!;\n\n    const config = { \n      paths: 'exact', \n      matrixParams: 'exact',\n      fragment: 'ignored',\n      queryParams: 'ignored',\n    };\n\n    if (router.isActive(targetUrl, config)) {\n      transition.skipTransition();\n    }\n  },\n}),\n</code></pre> <p>En este ejemplo: - <code>onViewTransitionCreated</code>: Se invoca cuando se crea una transici\u00f3n de vista. - <code>transition.skipTransition()</code>: Cancela la animaci\u00f3n si solo cambian el fragmento o los par\u00e1metros de consulta.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/exercicisisolucions/Exercici_UT03_funcio_reduce.html","title":"Exercici interpretaci\u00f3 codi","text":"<p>En el seg\u00fcent exercici es planteja un tro\u00e7 de codi per a la seva interpretaci\u00f3 i an\u00e0lisi. Concretament es demana fer el seg\u00fcent:</p> <ul> <li>Analitzar el codi sense executar-lo. Plantejar una hip\u00f2tesi d'all\u00f2 que creis que fa.</li> <li>Copia el codi i executa'l. Intentar, segons el resultat de l'execuci\u00f3, confirmar la hip\u00f2tesi anterior i en cas que no es confirmi, plantejar una suposici\u00f3 en base al resultat.</li> <li>Cerca per internet, incloent-hi motors de intel\u00b7lig\u00e8ncia artificial una explicaci\u00f3.</li> <li>Fes la teva explicaci\u00f3 definitiva sobre el funcionament del codi plantejat.</li> <li>A partir d'aqu\u00ed planteja tres possibles millores en termes d'estructura i rendiment.</li> </ul> <p>Aquest \u00e9s el codi:</p> <pre><code>function funcio_usuari(array) {\n    return array.reduce((acc, elem) =&gt; acc + elem, 0);\n}\n\nconst membres = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(\"El resultat de la funci\u00f3 \u00e9s: \" + funcio_usuari(membres));\n</code></pre> <p>Comparteix les teves conclusions a trav\u00e9s del \"Teams\"</p>"},{"location":"Moduls/ARXIU/2425/DWEC/exercicisisolucions/ExercicisCridesAs%C3%ADncrones.html","title":"Exercicis crides as\u00edncrones","text":"<p>\u270f\ufe0f Exercici 1: Mostra un usuari aleatori</p> <p>La p\u00e0gina https://randomuser.me/ permet obtenir dades de persones aleat\u00f2ries per a fer proves de desenvolupament de programari.</p> <p>Les instruccions de l\u2019API d\u2019aquest servei gratu\u00eft es troben a l\u2019URL: https://randomuser.me/documentation</p> <p>En qualsevol cas, la idea \u00e9s fer sol\u00b7licituds a trav\u00e9s de l\u2019URL: https://randomuser.me/api/ Es poden passar par\u00e0metres per indicar quants usuaris volem, sexe, pol\u00edtica de contrasenya, p\u00e0gines, format de resposta, etc.</p> <p>A la p\u00e0gina de documentaci\u00f3 hi ha un exemple de l'estructura de les respostes. Com a resum, es pot dir que la resposta \u00e9s un objecte format per dues propietats: resultats i informaci\u00f3. </p> <p>Es demana fer una aplicaci\u00f3 amb Angular que mostri la foto, el nom, el cognom, el correu electr\u00f2nic, l\u2019adre\u00e7a i l\u2019estat que t\u00e9 un usuari. Cada vegada que pitjem un bot\u00f3 (que haurem d'implementar), se sol\u00b7licitar\u00e0 un altre usuari. Exemple de resultat:</p> <p>laerke sorensen Email: lserke.s0rensen@example.com 201 msllevaenget nykobing sj. (MIDTJYLLAND) Figura 10.4: Ejemplo de usuaria aleatoria</p>"},{"location":"Moduls/ARXIU/2425/DWEC/exercicisisolucions/Exercicis_UT02.html","title":"Exercicis UT02","text":"<p>\u270f\ufe0f   EXERCICI 1. Segons la forma en qu\u00e8 s'executa JavaScript es pot dir que es tracta d'un llenguatge de programaci\u00f3:</p> <ul> <li> a) Compilat.</li> <li> b) Interpretat.</li> <li> c) Distribu\u00eft.</li> <li> d) Combinat.</li> </ul> <p>\u270f\ufe0f   EXERCICI 2. Que utilitzaries per incorporar un fitxer JavaScript a una p\u00e0gina web?</p> <ul> <li> a) head.</li> <li> b) body.</li> <li> c) script.</li> <li> d) code.</li> </ul> <p>\u270f\ufe0f EXERCICI 3. A qu\u00e8 denomines prompt?</p> <ul> <li> a) Al s\u00edmbol de la consola des del qual pots llan\u00e7ar instruccions perqu\u00e8 les executi el navegador.</li> <li> b) A la ruta des de la qual es poden incorporar fitxers JavaScript a un HTML.</li> <li> c) A un atribut de l'etiqueta que et permet incloure fitxers JavaScript externs.</li> <li> d) Als missatges de sortida de la consola d'un navegador.</li> </ul> <p>\u270f\ufe0f EXERCICI 4. Selecciona l'afirmaci\u00f3 falsa en relaci\u00f3 amb les regles que has de tenir en quarantena per definir identificadors:</p> <ul> <li> a) Pots usar qualsevol car\u00e0cter recollit en UNICODE.</li> <li> b) No distingeix entre maj\u00fascules i min\u00fascules.</li> <li> c) El primer car\u00e0cter ha de ser una lletra, _ o $.</li> <li> d) No pot coincidir amb una paraula reservada del llenguatge.</li> </ul> <p>\u270f\ufe0f EXERCICI 5. Si necessites crear una variable que no pot canviar al llarg de tot el programa, quin tipus de variable seria la m\u00e9s adequada?</p> <ul> <li> a) let.</li> <li> b) var.</li> <li> c) const.</li> <li> d) Si no pot canviar al llarg del programa, no \u00e9s una variable. El seu propi nom ho indica.</li> </ul> <p>\u270f\ufe0f EXERCICI 6. Quin operador faries servir per calcular la pot\u00e8ncia d'un n\u00famero?</p> <ul> <li> a) *.</li> <li> b) **.</li> <li> c) ***.</li> <li> d) ****.</li> </ul> <p>\u270f\ufe0f EXERCICI 7. Assenyala la resposta correcta en relaci\u00f3 amb l'estructura de control if:</p> <ul> <li> a) Pots treure les claus {} si contenen una sola instrucci\u00f3.</li> <li> b) No admet l'encadenament de m\u00e9s de 3 if elseif elseif else.</li> <li> c) \u00c9s una estructura de control, de salt.</li> <li> d) Forma bucles que sense prendre precaucions podrien esdevenir infinits.</li> </ul> <p>\u270f\ufe0f EXERCICI 8. Qu\u00e8 \u00e9s el m\u00e9s important en dissenyar un bucle del tipus que sigui?</p> <ul> <li> a) Assegurar-se que es pot assolir la condici\u00f3 d'acabament.</li> <li> b) No abusar de la seva mida ja que t\u00e9 costos computacionals.</li> <li> c) No anidar-los per no augmentar-ne la complexitat.</li> <li> d) No oblidar col\u00b7locar un default.</li> </ul> <p>\u270f\ufe0f EXERCICI 9. Quina difer\u00e8ncia hi ha entre while i do while?</p> <ul> <li> a) Cap, fan exactament el mateix en tots els casos.</li> <li> b) While s'executa sempre almenys una vegada, mentre que do while no t\u00e9 per qu\u00e8.</li> <li> c) Do while s'executa sempre almenys una vegada, while no.</li> <li> d) While \u00e9s una estructura repetitiva i do while de salt.</li> </ul> <p>\u270f\ufe0f EXERCICI 10. Assenyala l'afirmaci\u00f3 correcta en relaci\u00f3 amb les instruccions de salt:</p> <ul> <li> a) \u00c9s molt bona idea usar-les amb freq\u00fc\u00e8ncia per la seva agilitat saltant d'un punt a un altre del programa.</li> <li> b) S\u00f3n molt \u00fatils en situacions molt concretes, per\u00f2 no n'has d'abusar.</li> <li> c) Tot i ser de salt, no permeten saltar a altres punts del programa.</li> <li> d) S\u00f3n \u00fatils, per\u00f2 la seva complexitat fa que hagin caigut en des\u00fas.</li> </ul> <p>\u270f\ufe0f EXERCICI 11. Escriu un fragment de codi on s'apreci\u00ef la difer\u00e8ncia d'usar els tipus de variables let, var i const.</p> <p>\u270f\ufe0f EXERCICI 12. Recordes la f\u00f3rmula per calcular les solucions d'una equaci\u00f3 de segon grau? Crea un programa que les calculi.</p> <p>\u270f\ufe0f EXERCICI 13. Elabora una calculadora. El programa li ha de demanar a l'usuari un n\u00famero, despr\u00e9s un s\u00edmbol (+, , /, , %) i despr\u00e9s un altre n\u00famero. El programa ha de mostrar per consola el resultat de l'operaci\u00f3.</p> <p>\u270f\ufe0f EXERCICI 14. Crea un programa a JavaScript per calcular la lletra d'un DNI que ha d'introduir l'usuari per teclat (a internet trobar\u00e0s la f\u00f3rmula que ho calcula).</p> <p>\u270f\ufe0f EXERCICI 15. Escriu un programa que li demani a l'usuari un n\u00famero, i mostri en consola la seva factorial.</p> <p>\u270f\ufe0f EXERCICI 16. Desenvolupa un programa amb la l\u00f2gica que desitges on expliquis les difer\u00e8ncies d'usar els operadors a++, a--, ++a i --a. Utilitza els comentaris d'una i diverses l\u00ednies en la teva explicaci\u00f3.</p> <p>\u270f\ufe0f EXERCICI 17. Escriu un conversor de temps. El programa li ha de demanar a l'usuari una quantitat de dies, hores i minuts, i el programa retornar\u00e0 la quantitat de segons que s\u00f3n.</p> <p>\u270f\ufe0f EXERCICI 18. Idea un programa en el qual usar un bucle do while sigui millor idea que usar un bucle while.</p> <p>\u270f\ufe0f EXERCICI 19. Crea un programa que mostri els n\u00fameros senars que no siguin m\u00faltiples de 3 ni de 7 que n'hi ha del 100 a l'-Realitza versions del programa usando bucles while, do while y for.</p> <p>\u270f\ufe0f EXERCICI 20. Escriu un programa que posi en pr\u00e0ctica la seg\u00fcent l\u00f2gica: Mostrar\u00e0 el seg\u00fcent men\u00fa i l'usuari haur\u00e0 de triar una de les opcions:</p> <p>a) \u00c0rea del triangle (b*h/2).</p> <p>b) \u00c0rea del rectangle (b*h).</p> <p>c) \u00c0rea del cercle (Trr*2).</p> <p>d) Sortir. * En funci\u00f3 de l'opci\u00f3 que tri\u00ef l'usuari, se li demanaran les dades necess\u00e0ries en cada cas. * El programa calcular\u00e0 el resultat i el mostrar\u00e0 a la consola. * La l\u00f2gica anterior es repetir\u00e0 indefinidament fins que l'usuari pose la tecla de sortir.</p> <p>\u270f\ufe0f EXERCICI 21. Hi ha molta desinformaci\u00f3 sobre l'origen del nom JavaScript. Busca una font fiable i descobreix la controv\u00e8rsia que envolta el propi nom del llenguatge.</p> <p>\u270f\ufe0f EXERCICI 22. Hem vist de passada que ECMAScript \u00e9s l'especificaci\u00f3 de refer\u00e8ncia que controla l'evoluci\u00f3 del llenguatge JavaScript. Investiga sobre l'especificaci\u00f3 i revisa l'historial de canvis m\u00e9s importants que s'han produ\u00eft en el llenguatge en els darrers anys.</p> <p>\u270f\ufe0f EXERCICI 23. Una bona forma de no caure en els t\u00edpics errors de programaci\u00f3 quan som principiants \u00e9s con\u00e8ixer-los. Busca a internet algun article que en parli i aprofita per con\u00e8ixer-los.</p> <p>\u270f\ufe0f EXERCICI 24. Quan s'avan\u00e7a en el disseny d'algoritmes sempre ens hem de plantejar com optimitzar el codi, ja que estalviar temps d'execuci\u00f3 \u00e9s fonamental, especialment quan el navegador est\u00e0 carregant una p\u00e0gina web. Retrocedeix als programes que has elaborat i pensa com podries reduir les l\u00ednies de codi. Et sorprendr\u00e0 l'estalvi.</p> <p>\u270f\ufe0f EXERCICI 25. En ocasions dissenyem bucles sense pensar en el cost computacional que tenen. Sense embargo, quan escrivim programes de milers de l\u00ednies de codi, aix\u00f2 representa un greu problema de rendiment. Revisa els programes on has utilitzat bucles i investiga com pots estalviar temps d'execuci\u00f3. (Amb les instruccions time de consol que hem vist pots calcular el temps d'execuci\u00f3 dels teus bucles).</p> <p>\u270f\ufe0f EXERCICI 26. Creus que pots dissenyar un algoritme que resolgui qualsevol problema? Hi ha nombrosos casos on el temps de c\u00e0lcul \u00e9s tan gran que resulta in\u00fatil abordar la soluci\u00f3 al problema de forma algor\u00edtmica. Reflexiona sobre aquests extrems i tracta de trobar alguns problemes que no es podrien resoldre amb un algoritme. Despr\u00e9s acudeix a internet i busca informaci\u00f3 al respecte.</p>"},{"location":"Moduls/ARXIU/2425/DWEC/exercicisisolucions/Exercicis_UT03.html","title":"Exercicis UT03","text":"<p>\u270f\ufe0f   EXERCICI 1. Realitza un programa que cada 20 segons (mitjan\u00e7ant setInterval) sol\u00b7liciti un DNI fins que alg\u00fa li escrigui la cadena \"-1\". En aquell moment, el programa ha de mostrar seguides les lletres de tots els DNIs introdu\u00efts. Aqu\u00ed un enlla\u00e7 per saber com calcular la lletra de DNI.</p> Possible soluci\u00f3 <pre><code>// Utilitzam mode estrice\n\"use strict\";\n\n\n// Calcular lletraDNI\nfunction lletraDNI(numeroDni) {\n    let lletres = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E', 'T'];\nreturn lletres[numeroDni % 23];\n}\n\nfunction funcioPrincipal() {\n    let lletra;\n    let cad = prompt(\"Posa el DNI o -1 per aturar\", \"12345678\");\n    if (cad === \"-1\") {\n        // Utilitzam la variable global interval, aturam el setInterval\n        clearInterval(interval);\n        // Mostram la matriu\n        alert(matriuDNIS.join(\" ; \"))\n    }\n    else {\n        lletra = lletraDNI(cad);\n        matriuDNIS.push(lletra);\n    }\n}\n\n\nlet interval = setInterval(\"funcioPrincipal();\", 20000);\n// [] Equivalente a new Array();\nlet matriuDNIS = [];\nfuncioPrincipal();\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWEC/exercicisisolucions/prova.html","title":"Prova","text":"<ul> <li> dsf</li> <li> asdf</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWEC/exercicisisolucions/prova.html#exercicis-ut02","title":"EXERCICIS UT02","text":"<ol> <li>Segons la forma en qu\u00e8 s'executa JavaScript es pot dir que es tracta d'un llenguatge de programaci\u00f3:</li> </ol> <ul> <li> a) Compilat.</li> <li> b) Interpretat.</li> <li> c) Distribu\u00eft.</li> <li> d) Combinat.</li> </ul> <ol> <li>sdfasdf</li> <li>sdfgsdf</li> <li></li> <li>asdfasd 3.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/index.html","title":"DWES - P\u00e0gina resum","text":""},{"location":"Moduls/ARXIU/2425/DWES/index.html#ras-treballats-des-2024","title":"RAs treballats (Des 2024)","text":"RA Descripci\u00f3 Ja treballats? RA1 Selecciona les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant les seves capacitats i caracter\u00edstiques pr\u00f2pies. Criteris d'avaluaci\u00f3 : 1.1.Caracteritza i diferencia els models d\u2019execuci\u00f3 de codi al servidor i al client web. 1.2.Reconeix els avantatges que proporciona la generaci\u00f3 din\u00e0mica de p\u00e0gines web i les seves difer\u00e8ncies ambla inclusi\u00f3 de sent\u00e8ncies de guions a l\u2019interior de les p\u00e0gines web. 1 3.Identifica els mecanismes d\u2019execuci\u00f3 de codi en els servidors web. 1 4.Reconeix les funcionalitats que aporten els servidors d\u2019aplicacions i la seva integraci\u00f3 amb els servidorsweb. 1 5.Identifica i caracteritza els principals llenguatges i tecnologies relacionats amb la programaci\u00f3 web en entorn servidor. 1 6.Verifica els mecanismes d\u2019integraci\u00f3 dels llenguatges de marques amb els llenguatges de programaci\u00f3 enentorn servidor. 1 7.Reconeix i avalua les eines de programaci\u00f3 en entorn servidor. RA2 Escriu sent\u00e8ncies executables per un servidor web reconeixent i aplicant procediments d\u2019integraci\u00f3 del codi en llenguatges de marques. Criteris d'avaluaci\u00f3 : 2.1. Identifica els mecanismes de generaci\u00f3 de p\u00e0gines web a partir de llenguatges de marques amb codi encastat.2 2. Identifica les principals tecnologies associades.2 3. Utilitza etiquetes per a la inclusi\u00f3 de codi en el llenguatge de marques.  2 4. Identifica la sintaxi del llenguatge de programaci\u00f3 que s\u2019ha d\u2019utilitzar.  2 5. Escriu sent\u00e8ncies simples i en comprova els efectes en el document resultant.2 6. Utilitza directives per modificar el comportament predeterminat.2 7. Utilitza els diferents tipus de variables i operadors disponibles en el llenguatge.2 8. Identifica els \u00e0mbits d\u2019utilitzaci\u00f3 de les variables. RA3 Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques, seleccionant i utilitzant les estructures de programaci\u00f3. Criteris d'avaluaci\u00f3 : 3.1. Utilitza mecanismes de decisi\u00f3 en la creaci\u00f3 de blocs de sent\u00e8ncies.3. 2. Utilitza bucles i verifica el seu funcionament.3. 3. Utilitza arrays per emmagatzemar i recuperar conjunts de dades.3. 4. Crea i utilitza funcions.3. 5. Utilitza formularis web per a interactuar amb l\u2019usuari del navegador web.3. 6. Empra m\u00e8todes per recuperar la informaci\u00f3 introdu\u00efda en el formulari.3. 7. Afegeix comentaris al codi. RA4 Desenvolupa aplicacions web embegudes en llenguatges de marques analitzant i incorporant funcionalitats segons especificacions. Criteris d'avaluaci\u00f3 : 4.1. Identifica els mecanismes disponibles per al manteniment de la informaci\u00f3 que fa a un client web concret in\u2019assenyala els avantatges.4. 2. Utilitza sessions per mantenir l\u2019estat de les aplicacions web.4. 3. Utilitza galetes (cookies) per emmagatzemar informaci\u00f3 en el client web i per recuperar el seu contingut.4. 4. Identifica i caracteritza els mecanismes disponibles per a l\u2019autenticaci\u00f3 d\u2019usuaris.4. 5. Escriu aplicacions que integrin mecanismes d\u2019autenticaci\u00f3 d\u2019usuaris.4. 6. Fa adaptacions a aplicacions web existents com a gestors de continguts o altres.4. 7. Utilitza eines i entorns per a facilitar la programaci\u00f3, prova i depuraci\u00f3 del codi. RA5 Desenvolupa aplicacions web identificant i aplicant mecanismes per separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci. Criteris d'avaluaci\u00f3 : 5.1. Identifica els avantatges de separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 de l\u2019aplicaci\u00f3.5. 2. Analitza tecnologies i mecanismes que permeten realitzar aquesta separaci\u00f3 i les seves caracter\u00edstiquesprincipals.5. 3. Utilitza objectes i controls en el servidor per generar l\u2019aspecte visual de l\u2019aplicaci\u00f3 web en el client.5. 4. Utilitza formularis generats de manera din\u00e0mica per respondre als esdeveniments de l\u2019aplicaci\u00f3 web.5. 5. Identifica i aplica els par\u00e0metres relatius a la configuraci\u00f3 de l\u2019aplicaci\u00f3 web.5. 6. Escriu aplicacions web amb manteniment d\u2019estat i separaci\u00f3 de la l\u00f2gica de negoci.5. 7. Aplica els principis de la programaci\u00f3 orientada a objectes.5. 8. Prova i documenta el codi. RA6 Desenvolupa aplicacions web d\u2019acc\u00e9s a magatzems de dades, aplicant mesures per mantenir la seguretat i la integritat de la informaci\u00f3. Criteris d'avaluaci\u00f3 : 6.1. Analitza les tecnologies que permeten l\u2019acc\u00e9s mitjan\u00e7ant programaci\u00f3 a la informaci\u00f3 disponible enmagatzems de dades.6. 2. Crea aplicacions que estableixin connexions amb bases de dades.6. 3. Recupera informaci\u00f3 emmagatzemada en bases de dades.6. 4. Publica en aplicacions web la informaci\u00f3 recuperada.6. 5. Utilitza conjunts de dades per emmagatzemar la informaci\u00f3.6. 6. Crea aplicacions web que permetin l\u2019actualitzaci\u00f3 i l\u2019eliminaci\u00f3 d\u2019informaci\u00f3 disponible en una base dedades.6. 7. Utilitza transaccions per mantenir la consist\u00e8ncia de la informaci\u00f3.6. 8. Prova i documenta les aplicacions. RA7 Desenvolupa serveis web analitzant el seu funcionament i implantant l\u2019estructura dels seus components. Criteris d'avaluaci\u00f3 : 7.1. Identifica les caracter\u00edstiques pr\u00f2pies i l\u2019\u00e0mbit d\u2019aplicaci\u00f3 dels serveis web.7. 2. Identifica els avantatges d\u2019utilitzar serveis web per a proporcionar acc\u00e9s a funcionalitats incorporades a la l\u00f2gica de negoci d\u2019una aplicaci\u00f3.7. 3. Identifica les tecnologies i els protocols implicats en la publicaci\u00f3 i en la utilitzaci\u00f3 de serveis web.7. 4. Programa un servei web.7. 5. Crea el document de descripci\u00f3 del servei web.7. 6. Verifica el funcionament del servei web.7. 7. Consumeix el servei web. RA8 Genera p\u00e0gines web din\u00e0miques analitzant i utilitzant tecnologies del servidor web que afegeixin codi al llenguatge de marques. Criteris d'avaluaci\u00f3 : 8.1. Identifica les difer\u00e8ncies entre l\u2019execuci\u00f3 de codi al servidor i al client web.8. 2. Reconeix els avantatges d\u2019unir les dues tecnologies en el proc\u00e9s de desenvolupament de programes.8. 3. Identifica les llibreries i les tecnologies relacionades amb la generaci\u00f3 per part del servidor de p\u00e0gines web amb guions embeguts.8. 4. Utilitza aquestes tecnologies per a generar p\u00e0gines web que incloguin interacci\u00f3 amb l\u2019usuari en forma d\u2019advert\u00e8ncies i de peticions de confirmaci\u00f3.8. 5. Utilitza aquestes tecnologies, per a generar p\u00e0gines web que incloguin verificaci\u00f3 de formularis.8. 6. Utilitza aquestes tecnologies per a generar p\u00e0gines web que incloguin modificaci\u00f3 din\u00e0mica del seu contingut i la seva estructura.8. 7. Aplica aquestes tecnologies en la programaci\u00f3 d\u2019aplicacions web. RA9 Desenvolupa aplicacions web h\u00edbrids seleccionant i utilitzant llibreries de codi i dip\u00f2sits heterogenis d\u2019informaci\u00f3. Criteris d'avaluaci\u00f3 : 9.1. Reconeix els avantatges que proporciona la reutilitzaci\u00f3 de codi i l\u2019aprofitament d\u2019informaci\u00f3 ja existent.9. 2. Identifica llibreries de codi i tecnologies aplicables en la creaci\u00f3 d\u2019aplicacions web h\u00edbrides.9. 3. Crea una aplicaci\u00f3 web que recuperi i processi dip\u00f2sits d\u2019informaci\u00f3 ja existents.9. 4. Crea dip\u00f2sits espec\u00edfics a partir d\u2019informaci\u00f3 existent a internet i en magatzems d\u2019informaci\u00f3.9. 5. Utilitza llibreries de codi per incorporar funcionalitats espec\u00edfiques a una aplicaci\u00f3 web.9. 6. Programa serveis i aplicacions web utilitzant com a base informaci\u00f3 i codi generats per tercers.9. 7. Prova, depura i documenta les aplicacions generades."},{"location":"Moduls/ARXIU/2425/DWES/index.html#unitats-de-treball","title":"Unitats de treballAutoevaluaci\u00f3n","text":"<p>UNIDAD DE TRABAJO 1: Arquitecturas web UNIDAD DE TRABAJO 2:  Caracter\u00edsticas del lenguaje PHP. UNIDAD DE TRABAJO 3 : PHP  orientado a objetos UNIDAD DE TRABAJO 4: Programaci\u00f3n Web y herramientas Web UNIDAD DE TRABAJO 5: Acceso a datos. UNIDAD DE TRABAJO 6: Frameworks PHP \u2013 Laravel. UNIDAD DE TRABAJO 7: Servicios Web. UNIDAD DE TRABAJO 8: Aplicaciones web h\u00edbridas. </p> <p></p> <pre><code>graph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;</code></pre> <pre><code>gantt\ntitle Temporitzaci\u00f3 DWES 24-25\ndateFormat DD-MM-YYYY\nsection Section\nUT01        :a1, 23-09-2024, 10d\nUT02        :a2, after a1, 20d\nPrimera avaluaci\u00f3 : milestone, m1, 09-12-2024, 5d\nsection Another\nUT03        :after a2, 12d\nanother task    :24d</code></pre> Pregunta En lugar de programar un m\u00e9todo <code>set</code> para modificar el valor de los atributos privados en que sea necesario, puedo utilizar el m\u00e9todo m\u00e1gico <code>__set</code>. Respuestas <p> Opci\u00f3n 1 </p>  Verdadero.   <p> Opci\u00f3n 2 </p>  Falso.   Retroalimentaci\u00f3n  S\u00ed, pero tendr\u00edas que comprobar el nombre del atributo usado y asignar el valor al adecuado.    Si el atributo es privado, no es accesible; por tanto, cuando se le intente asignar un valor, se llamar\u00e1 al m\u00e9todo m\u00e1gico <code>__set</code> si existe.   Soluci\u00f3n <ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html","title":"Programaci\u00f3n orientada a objetos en PHP.","text":""},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#1-orientacion-a-objetos-en-php","title":"1.- Orientaci\u00f3n a objetos en PHP.","text":"<p>La programaci\u00f3n orientada a objetos (POO, o OOP en lenguaje ingl\u00e9s), es una metodolog\u00eda de programaci\u00f3n basada en objetos. Un objeto es una estructura que contiene datos y el c\u00f3digo que los maneja.</p> <p>La estructura de los objetos se define en las clases. En ellas se escribe el c\u00f3digo que define el comportamiento de los objetos y se indican los miembros que formar\u00e1n parte de los objetos de dicha clase. Entre los miembros de una clase puede haber:</p> <ul> <li>M\u00e9todos. Son los miembros de la clase que contienen el c\u00f3digo de la misma. Un m\u00e9todo es como una funci\u00f3n. Puede recibir par\u00e1metros y devolver valores.</li> <li>Atributos o propiedades. Almacenan informaci\u00f3n acerca del estado del objeto al que pertenecen (y por tanto, su valor puede ser distinto para cada uno de los objetos de la misma clase).</li> </ul> <p>A la creaci\u00f3n de un objeto basado en una clase se le llama instanciar una clase y al objeto obtenido tambi\u00e9n se le conoce como instancia de esa clase.</p> <p>Los pilares fundamentales de la POO son:</p> <ul> <li>Herencia. Es el proceso de crear una clase a partir de otra, heredando su comportamiento y caracter\u00edsticas y pudiendo redefinirlos.</li> <li>Abstracci\u00f3n. Hace referencia a que cada clase oculta en su interior las peculiaridades de su implementaci\u00f3n, y presenta al exterior una serie de m\u00e9todos (interface) cuyo comportamiento est\u00e1 bien definido. Visto desde el exterior, cada objeto es un ente abstracto que realiza un trabajo.</li> <li>Polimorfismo. Un mismo m\u00e9todo puede tener comportamientos distintos en funci\u00f3n del objeto con que se utilice.</li> <li>Encapsulaci\u00f3n. En la POO se juntan en un mismo lugar los datos y el c\u00f3digo que los manipula.</li> </ul> <p>Las ventajas m\u00e1s importantes que aporta la programaci\u00f3n orientada a objetos son:</p> <ul> <li>Modularidad. La POO permite dividir los programas en partes o m\u00f3dulos m\u00e1s peque\u00f1os, que son independientes unos de otros pero pueden comunicarse entre ellos.</li> <li>Extensibilidad. Si se desean a\u00f1adir nuevas caracter\u00edsticas a una aplicaci\u00f3n, la POO facilita esta tarea de dos formas: a\u00f1adiendo nuevos m\u00e9todos al c\u00f3digo, o creando nuevos objetos que extiendan el comportamiento de los ya existentes.</li> <li>Mantenimiento. Los programas desarrollados utilizando POO son m\u00e1s sencillos de mantener, debido a la modularidad antes comentada. Tambi\u00e9n ayuda seguir ciertas convenciones al escribirlos, por ejemplo, escribir cada clase en un fichero propio. No debe haber dos clases en un mismo fichero, ni otro c\u00f3digo aparte del propio de la clase.</li> </ul> <p>Para saber m\u00e1s</p> <p>En este m\u00f3dulo no se pretende realizar un estudio profundo de las ventajas y caracter\u00edsticas de la POO, sino simplemente recordar conceptos que ya deber\u00edas haber asimilado con anterioridad. Si tienes dudas sobre algo de lo que acabamos de repasar, puedes consultar este tutorial de la web desarrolloweb.com.</p> <p>Tutorial de la web desarrolloweb.com.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#11-caracteristicas-de-orientacion-a-objetos-en-php","title":"1.1.- Caracter\u00edsticas de orientaci\u00f3n a objetos en PHP.","text":"<p>Everaldo Coelho (GNU/GPL)</p> <p>Seguramente todo, o la mayor\u00eda de lo que acabas de ver, ya lo conoc\u00edas, y es incluso probable que sepas utilizar alg\u00fan lenguaje de programaci\u00f3n orientado a objetos, as\u00ed que vamos a ver directamente las peculiaridades propias de PHP en lo que hace referencia a la POO.</p> <p>Como ya has visto en las unidades anteriores, especialmente con las extensiones para utilizar bases de datos, con PHP puedes utilizar dos estilos de programaci\u00f3n: estructurada y orientada a objetos. <pre><code>// utilizando programaci\u00f3n estructurada`  \n$conProyecto = mysqli_connect('localhost', 'gestor', 'secreto', 'proyecto');`  \n// utilizando POO`  \n$conProyecto = new mysqli();`\n\n$conProyecto-&gt;connect('localhost', 'gestor', 'secreto', 'proyecto');`\n</code></pre></p> <p>Sin embargo, el lenguaje PHP original no se dise\u00f1\u00f3 con caracter\u00edsticas de orientaci\u00f3n a objetos. S\u00f3lo a partir de la versi\u00f3n 3, se empezaron a introducir algunos rasgos de POO en el lenguaje. Esto se potenci\u00f3 en la versi\u00f3n 4, aunque todav\u00eda de forma muy rudimentaria. Por ejemplo, en PHP4:</p> <ul> <li>Los objetos se pasan siempre por valor, no por referencia.</li> <li>No se puede definir el nivel de acceso para los miembros de la clase. Todos son p\u00fablicos.</li> <li>No existen los interfaces.</li> <li>No existen m\u00e9todos destructores.</li> </ul> <p>A partir de la versi\u00f3n de, PHP5, se reescribi\u00f3 el soporte de orientaci\u00f3n a objetos del lenguaje, ampliando sus caracter\u00edsticas y mejorando su rendimiento y su funcionamiento general. Aunque iremos detallando y explicando cada una posteriormente con detenimiento, las caracter\u00edsticas de POO que soporta PHP incluyen:</p> <ul> <li>M\u00e9todos est\u00e1ticos.</li> <li>M\u00e9todos constructores y destructores.</li> <li>Herencia.</li> <li>Interfaces.</li> <li>Clases abstractas.</li> <li>Traits (A partir de la versi\u00f3n 5.4.0).</li> </ul> <p>Entre las caracter\u00edsticas que no incluye PHP, y que puedes conocer de otros lenguajes de programaci\u00f3n, est\u00e1n:</p> <ul> <li>Herencia m\u00faltiple.</li> <li>Sobrecarga de m\u00e9todos.(incluidos los m\u00e9todos constructores).</li> <li>Sobrecarga de operadores.</li> </ul> <p>'''' Autoevaluaci\u00f3n</p> <p>Antes de PHP5, el comportamiento cuando se pasaba una variable a una funci\u00f3n era siempre el mismo, independientemente de si la variable fuera un objeto o de cualquier otro tipo: siempre se creaba una nueva variable copiando los valores de la original.</p> <p>Verdadero.</p> <p>Falso.</p> Mostrar objecte: <p>Aquest \u00e9s l'objecte ocult!</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#12-creacion-de-clases","title":"1.2.- Creaci\u00f3n de clases.","text":"<p>Everaldo Coelho and YellowIcon (GNU/GPL)</p> <p>La declaraci\u00f3n de una clase en PHP se hace utilizando la palabra <code>class</code>. A continuaci\u00f3n y entre llaves, deben figurar los miembros de la clase. Conviene hacerlo de forma ordenada, primero las propiedades o atributos, y despu\u00e9s los m\u00e9todos, cada uno con su c\u00f3digo respectivo.</p> <p><code>class Producto {</code> <code>private $codigo;</code> <code>public $nombre;</code> <code>public $pvp;</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Como coment\u00e1bamos antes, es preferible que cada clase figure en su propio fichero (<code>producto.php</code>). Adem\u00e1s, muchos programadores prefieren utilizar para las clases nombres que comiencen por letra may\u00fascula, para, de esta forma, distinguirlos de los objetos y otras variables.</p> <p>Una vez definida la clase, podemos usar la palabra <code>new</code> para instanciar objetos de la siguiente forma:</p> <p><code>$p = new Producto();</code></p> <p>Para que la l\u00ednea anterior se ejecute sin error, previamente debemos haber declarado la clase. Para ello, en ese mismo fichero tendr\u00e1s que incluir la clase poniendo algo como:</p> <p><code>require_once('producto.php');</code></p> <p>Los atributos de una clase son similares a las variables de PHP. Es posible indicar un valor en la declaraci\u00f3n de la clase. En este caso, todos los objetos que se instancien a partir de esa clase, partir\u00e1n con ese valor por defecto en el atributo.</p> <p>Para acceder desde un objeto a sus atributos o a los m\u00e9todos de la clase, debes utilizar el operador flecha (f\u00edjate que s\u00f3lo se pone el s\u00edmbolo <code>$</code> delante del nombre del objeto):</p> <p><code>$p-&gt;nombre = 'Samsung Galaxy A6';</code></p> <p><code>$p-&gt;muestra();</code></p> <p>Cuando se declara un atributo, se debe indicar su nivel de acceso. Los principales niveles son:</p> <ul> <li><code>public</code>. Los atributos declarados como <code>public</code> pueden utilizarse directamente por los objetos de la clase. Es el caso del atributo <code>$nombre</code> anterior.</li> <li><code>private</code>. Los atributos declarados como <code>private</code> s\u00f3lo pueden ser accedidos y modificados por los m\u00e9todos definidos en la clase, no directamente por los objetos de la misma. Es el caso del atributo <code>$codigo</code>.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#121-creacion-de-clases-i","title":"1.2.1.- Creaci\u00f3n de clases (I).","text":"<p>Everaldo Coelho (YellowIcon) (GNU/GPL)</p> <p>Uno de los motivos para crear atributos privados es que su valor forma parte de la informaci\u00f3n interna del objeto y no debe formar parte de su interface. Otro motivo es mantener cierto control sobre sus posibles valores.</p> <p>Por ejemplo, no quieres que se pueda cambiar libremente el valor del c\u00f3digo de un producto. O necesitas conocer cu\u00e1l ser\u00e1 el nuevo valor antes de asignarlo. En estos casos, se suelen definir esos atributos como privados y adem\u00e1s se crean dentro de la clase m\u00e9todos para permitirnos obtener y/o modificar los valores de esos atributos. Por ejemplo:</p> <p><code>private $codigo;</code> <code>public function setCodigo($nuevo_codigo) {</code> <code>if (noExisteCodigo($nuevo_codigo)) {</code> <code>$this-&gt;codigo = $nuevo_codigo;</code> <code>return true;</code> <code>}</code> <code>return false;</code> <code>}</code></p> <p><code>public function getCodigo() { return $this-&gt;codigo; }</code></p> <p>Aunque no es obligatorio, el nombre del m\u00e9todo que nos permite obtener el valor de un atributo suele empezar por <code>get</code>, y el que nos permite modificarlo por <code>set</code>, y a continuaci\u00f3n el nombre del atributo con la primera letra en may\u00fasculas.</p> <p>Debes conocer</p> <p>En PHP5 se introdujeron los llamados m\u00e9todos m\u00e1gicos, entre ellos <code>__set</code> y <code>__get</code>. Si se declaran estos dos m\u00e9todos en una clase, PHP los invoca autom\u00e1ticamente cuando desde un objeto se intenta usar un atributo no existente o no accesible. Por ejemplo, el c\u00f3digo siguiente simula que la clase Producto tiene cualquier atributo que queramos usar.</p> <p><code>class Producto {</code> <code>private $atributos = array();</code> <code>public function __get($atributo) {</code> <code>return $this-&gt;atributos[$atributo];</code> <code>}</code> <code>public function __set($atributo, $valor) {</code> <code>$this-&gt;atributos[$atributo] = $valor;</code> <code>}</code></p> <p><code>}</code></p> <p>En la documentaci\u00f3n de PHP tienes m\u00e1s informaci\u00f3n sobre los m\u00e9todos m\u00e1gicos.</p> <p>M\u00e9todos m\u00e1gicos.</p> <p>Autoevaluaci\u00f3n</p> <p>En lugar de programar un m\u00e9todo <code>set</code> para modificar el valor de los atributos privados en que sea necesario, puedo utilizar el m\u00e9todo m\u00e1gico <code>__set</code>.</p> <p>Verdadero.</p> <p>Falso.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#122-creacion-de-clases-ii","title":"1.2.2.- Creaci\u00f3n de clases (II).","text":"<p>David Vignoni (GNU/GPL)</p> <p>Cuando desde un objeto se invoca un m\u00e9todo de la clase, a \u00e9ste se le pasa siempre una referencia al objeto que hizo la llamada. Esta referencia se almacena en la variable <code>$this</code>. Se utiliza, por ejemplo, en el c\u00f3digo anterior para tener acceso a los atributos privados del objeto (que s\u00f3lo son accesibles desde los m\u00e9todos de la clase).</p> <p><code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code></p> <p>Dentro de la clase para acceder a sus m\u00e9todos o atributos propios usaremos  <code>$this-&gt;nombre,</code>(salvo que el atributo o el m\u00e9todo sea est\u00e1tico) F\u00edjate que al atributo se le quita \"<code>$</code>\". Veamos un ejemplo:</p> <p><code>class Persona{</code> <code>private $nombre;</code> <code>private $perfil;</code> <code>public function getNombre(){</code> <code>return $this-&gt;nombre;</code> <code>}</code> <code>public function setNombre($n){</code> <code>$this-&gt;nombre=$n;</code> <code>}</code> <code>public function saludo(){</code> <code>//Fijate como hacemos referencia al m\u00e9todo getNombre</code> <code>echo \"Hola {$this-&gt;getNombre()}, Buenos dias\";</code> <code>}</code> <code>}</code> <code>$persona1=new Persona();</code> <code>$persona1-&gt;setNombre(\"Luis\");</code> <code>$persona1-&gt;saludo();</code></p> <p>Debes conocer</p> <p>Una referencia es una forma de utilizar distintos nombres de variables para acceder al mismo contenido. En los puntos siguientes aprender\u00e1s a crearlas y a utilizarlas.</p> <p>Referencia.</p> <p>Adem\u00e1s de m\u00e9todos y propiedades, en una clase tambi\u00e9n se pueden definir constantes, utilizando la palabra <code>const</code>. Es importante que no confundas los atributos con las constantes. Son conceptos distintos: las constantes no pueden cambiar su valor (obviamente, de ah\u00ed su nombre), no usan el car\u00e1cter <code>$</code> y, adem\u00e1s, su valor va siempre entre comillas y est\u00e1 asociado a la clase, es decir, no existe una copia del mismo en cada objeto. Por tanto, para acceder a las constantes de una clase, se debe utilizar el nombre de la clase y el operador <code>::</code>, llamado operador de resoluci\u00f3n de \u00e1mbito (que se utiliza para acceder a los elementos de una clase).</p> <p><code>class DB {</code> <code>const USUARIO = 'gestor';</code> <code>\u2026</code> <code>}</code></p> <p><code>echo DB::USUARIO;</code></p> <p>Es importante resaltar que no es necesario que exista ning\u00fan objeto de una clase para poder acceder al valor de las constantes que defina. Adem\u00e1s, sus nombres suelen escribirse en may\u00fasculas.</p> <p>Tampoco se deben confundir las constantes con los miembros est\u00e1ticos de una clase. En PHP, una clase puede tener atributos o m\u00e9todos est\u00e1ticos, tambi\u00e9n llamados a veces atributos o m\u00e9todos de clase. Se definen utilizando la palabra clave <code>static</code>.</p> <p><code>class Producto {</code> <code>private static $num_productos = 0;</code> <code>public static function nuevoProducto() {</code> <code>self::$num_productos++;</code> <code>}</code> <code>\u2026</code></p> <p><code>}</code></p> <p>Los atributos y m\u00e9todos est\u00e1ticos no pueden ser llamados desde un objeto de la clase utilizando el operador \"<code>-&gt;\"</code>. Si el m\u00e9todo o atributo es p\u00fablico, deber\u00e1 accederse utilizando el nombre de la clase y el operador de resoluci\u00f3n de \u00e1mbito.</p> <p><code>Producto::nuevoProducto();</code></p> <p>Si es privado, como el atributo <code>$num_productos</code> en el ejemplo anterior, s\u00f3lo se podr\u00e1 acceder a \u00e9l desde los m\u00e9todos de la propia clase, utilizando la palabra <code>self</code>. De la misma forma que <code>$this</code> hace referencia al objeto actual, <code>self</code> hace referencia a la clase actual.</p> <p><code>self::$num_productos ++;</code></p> <p>Los atributos est\u00e1ticos de una clase se utilizan para guardar informaci\u00f3n general sobre la misma, como puede ser el n\u00famero de objetos que se han instanciado. S\u00f3lo existe un valor del atributo, que se almacena a nivel de clase.</p> <p>Los m\u00e9todos est\u00e1ticos suelen realizar alguna tarea espec\u00edfica o devolver un objeto concreto. Por ejemplo, las clases matem\u00e1ticas suelen tener m\u00e9todos est\u00e1ticos para realizar logaritmos o ra\u00edces cuadradas. No tiene sentido crear un objeto si lo \u00fanico que queremos es realizar una operaci\u00f3n matem\u00e1tica.</p> <p>Los m\u00e9todos est\u00e1ticos se llaman desde la clase. No es posible llamarlos desde un objeto y por tanto, no podemos usar <code>$this</code> dentro de un m\u00e9todo est\u00e1tico.</p> <p>Para saber m\u00e1s</p> <p>El operador <code>\"::\"</code>, tiene un nombre curioso en programaci\u00f3n : Paamayim Nekudotayim, Significa \"doble dos puntos\" en Hebreo.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#123-creacion-de-clases-iii","title":"1.2.3.- Creaci\u00f3n de clases (III).","text":"<p>David Vignoni (GNU/GPL)</p> <p>PHP permite a los desarrolladores declarar m\u00e9todos constructores para las clases. Aquellas que tengan un m\u00e9todo constructor lo invocar\u00e1n en cada nuevo objeto creado, lo que nos permite la inicializaci\u00f3n que el objeto pueda necesitar antes de ser usado. Como PHP no admite sobrecarga de m\u00e9todos s\u00f3lo podremos crear un constructor por clase.</p> <p>Por motivos de retrocompatibilidad con PHP3 y PHP4, si PHP no puede encontrar una funci\u00f3n <code>__construct()</code> de una clase dada, se buscar\u00e1 la funci\u00f3n constructora del estilo antiguo, por el nombre de la clase.</p> <p>Veamos unos ejemplos de uso del constructor:</p> <p><code>class Persona{</code> <code>public static $id;</code> <code>private $nombre;</code> <code>private $perfil;</code> <code>public function __construct(){</code> <code>$perfil=\"P\u00fablico\";</code> <code>}</code> <code>}</code> <code>//creamos persona1 que tiene inicializado su atributo $perfil a P\u00fablico.</code> <code>$persona1=new Persona();</code> <code>// Podemos comprobarlo</code></p> <p><code>var_dump($persona1);</code></p> <p><code>class Persona{</code> <code>public static $id;</code> <code>private $nombre;</code> <code>private $perfil;</code> <code>public function __construct($n, $p){</code> <code>$this-&gt;nombre=$n;</code> <code>$this-&gt;perfil=$p;</code> <code>}</code> <code>}</code> <code>// Creamos un objeto de la clase Persona e inicializamos sus atributos;</code> <code>// F\u00edjate que ya NO podremos usar: $persona1=new Persona(); ya que el constructor espera dos par\u00e1metros.</code> <code>$persona1=new Persona(\"Juan\", \"Privado\");</code> <code>//Podemos comprobarlo</code> <code>var_dump($persona1);</code></p> <p>Con el uso de las funciones <code>\"func_get_args()\"</code>, <code>\"fun_get_arg()\"</code> y <code>\"func_num_arg()\"</code>. podemos pasar distinto n\u00famero de par\u00e1metros a un constructor \"simulando\" la sobrecarga del mismo, en el Anexo 1 de este tema se ve un ejemplo de como hacerlo. Ir a Anexo 1. Otra posibilidad es usar el m\u00e9todo m\u00e1gico  <code>\"__call\"</code> para capturar llamadas a m\u00e9todos que no est\u00e9n implementados.</p> <p>Los constructores del estilo antiguo (llamados como el nombre de la clase) est\u00e1n OBSOLETOS desde PHP 7.0, por lo que ser\u00e1n eliminados en futuras versiones. Se deber\u00eda utilizar siempre <code>\"__construct()\"</code> en c\u00f3digo nuevo.</p> <p>Tambi\u00e9n es posible definir un m\u00e9todo destructor, que debe llamarse <code>\"__destruct\"</code> y permite definir acciones que se ejecutar\u00e1n cuando se elimine el objeto.</p> <p><code>class Producto {</code> <code>private static $num_productos = 0;</code> <code>private $codigo;</code> <code>public function __construct($codigo) {</code> <code>$this-&gt;$codigo = $codigo;</code> <code>self::$num_productos++;</code> <code>}</code> <code>public function __destruct() {</code> <code>self::$num_productos--;</code> <code>}</code> <code>\u2026</code> <code>}</code></p> <p><code>$p = new Producto('GALAXYS');</code></p> <p>Los m\u00e9todos destructores aparecen en PHP5; no exist\u00edan en versiones anteriores del lenguaje.</p> <p>Autoevaluaci\u00f3n</p> <p>\u00bfCu\u00e1l es la utilidad del operador de resoluci\u00f3n de \u00e1mbito <code>::</code>?</p> <p>Nos permite hacer referencia a la clase del objeto actual.</p> <p>Se utiliza para acceder a los elementos de una clase, como constantes y miembros est\u00e1ticos.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#13-utilizacion-de-objetos","title":"1.3.- Utilizaci\u00f3n de objetos.","text":"<p>Pixabay (Dominio p\u00fablico)</p> <p>Ya sabes c\u00f3mo instanciar un objeto utilizando <code>new</code>, y c\u00f3mo acceder a sus m\u00e9todos y atributos p\u00fablicos con el operador flecha:</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code></p> <p><code>$p-&gt;muestra();</code></p> <p>Una vez creado un objeto, puedes utilizar el operador <code>instanceof</code> para comprobar si es o no una instancia de una clase determinada.</p> <p><code>if ($p instanceof Producto) {</code></p> <pre><code>`. . .}`\n</code></pre> <p>Adem\u00e1s, a partir de  PHP5 se incluyen una serie de funciones \u00fatiles para el desarrollo de aplicaciones utilizando POO.</p> Funci\u00f3n Ejemplo Significado <code>get_class()</code> <code>echo \"La clase es: \" . get_class($p);</code> Devuelve el nombre de la clase del objeto. <code>class_exists</code> <code>if (class_exists('Producto') {     $p = new Producto();     . . .  }</code> Devuelve <code>true</code> si la clase est\u00e1 definida o <code>false</code> en caso contrario. <code>get_declared_classes()</code> <code>print_r(get_declared_classes());</code> Devuelve un array con los nombres de las clases definidas. <code>class_alias()</code> <code>class_alias('Producto', 'Articulo'); $p = new Articulo();</code> Crea un alias para una clase. <code>get_class_methods()</code> <code>print_r(get_class_methods('Producto'));</code> Devuelve un array con los nombres de los m\u00e9todos de una clase que son accesibles desde d\u00f3nde se hace la llamada. <code>method_exists()</code> <code>if (method_exists('Producto', 'vende') {     \u2026 }</code> Devuelve <code>true</code> si existe el m\u00e9todo en el objeto o la clase que se indica, o <code>false</code> en caso contrario, independientemente de si es accesible o no. <code>get_class_vars()</code> <code>print_r(get_class_vars('Producto'));</code> Devuelve un array con los nombres de los atributos de una clase que son accesibles desde d\u00f3nde se hace la llamada. <code>get_object_vars()</code> <code>print_r(get_object_vars($p));</code> Devuelve un array con los nombres de los m\u00e9todos de un objeto que son accesibles desde d\u00f3nde se hace la llamada. <code>property_exists()</code> <code>if (property_exists('Producto', 'codigo') {     . . . }</code> Devuelve <code>true</code> si existe el atributo en el objeto o la clase que se indica, o <code>false</code> en caso contrario, independientemente de si es accesible o no. <p>Desde PHP5, puedes indicar en las funciones y m\u00e9todos de qu\u00e9 clase deben ser los objetos que se pasen como par\u00e1metros as\u00ed como el tipo del dato devuelto (caso que lo haya). Para ello, debes especificar el tipo antes del par\u00e1metro. Para el dato devuelto poner  \"<code>:tipoDato\",</code> despues de la declaraci\u00f3n de la funci\u00f3n o el m\u00e9todo y antes de las llaves.</p> <p><code>public function precioProducto(Producto $p) :float {</code> <code>. . .</code> <code>return $precio;</code></p> <p><code>}</code></p> <p>Si cuando se realiza la llamada, el par\u00e1metro no es del tipo adecuado, se produce un error que podr\u00edas capturar.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#131-utilizacion-de-objetos-i","title":"1.3.1.- Utilizaci\u00f3n de objetos (I).","text":"<p>Imagen de un ordenador portatil abierto, en la pantalla difuminado se pueder ver c\u00f3digo escritoNegative Space (Dominio p\u00fablico)</p> <p>Una caracter\u00edstica de la POO que debes tener muy en cuenta es qu\u00e9 sucede con los objetos cuando los pasas a una funci\u00f3n, o simplemente cuando ejecutas un c\u00f3digo como el siguiente:</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy S';</code></p> <p><code>$a = $p;</code></p> <p>En PHP4, la \u00faltima l\u00ednea del c\u00f3digo anterior crea un nuevo objeto con los mismos valores del original, de la misma forma que se copia cualquier otro tipo de variable. Si despu\u00e9s de hacer la copia se modifica, por ejemplo, el atributo 'nombre' de uno de los objetos, el otro objeto no se ver\u00eda modificado.</p> <p>Sin embargo, a partir de PHP5 este comportamiento var\u00eda. El c\u00f3digo anterior simplemente crear\u00eda un nuevo identificador del mismo objeto. Esto es, en cuanto se utilice uno cualquiera de los identificadores para cambiar el valor de alg\u00fan atributo, este cambio se ver\u00eda tambi\u00e9n reflejado al acceder utilizando el otro identificador. Recuerda que, aunque haya dos o m\u00e1s identificadores del mismo objeto, en realidad todos se refieren a la \u00fanica copia que se almacena del mismo.</p> <p>Debes conocer</p> <p>Para crear nuevos identificadores en PHP a un objeto ya existente, se utiliza el operador <code>\"=\"</code>. Sin embargo, como ya sabes, este operador aplicado a variables de otros tipos, crea una copia de la misma. En PHP puedes crear referencias a variables (como n\u00fameros enteros o cadenas de texto), utilizando el operador <code>&amp;</code> , que ya vimos en el paso de par\u00e1metros por referencia:</p> <p><code>$a = 'Samsung Galaxy A6';</code></p> <p><code>$b = &amp; $a;</code></p> <p>En el ejemplo anterior, <code>$b</code> es una referencia a la variable <code>$a</code>. Cuando se cambia el valor de una de ellas, este cambio se refleja en la otra.</p> <p>Las referencias se pueden utilizar para pasarlas como par\u00e1metros a las funciones. Si utilizamos el operador &amp; junto al par\u00e1metro, en lugar de pasar una copia de la variable, se pasa una referencia a la misma.</p> <p><code>function suma(&amp;$v) {</code> <code>$v ++;</code> <code>}</code> <code>$a = 3;</code> <code>suma ($a);</code></p> <p><code>echo $a;   // Muestra 4</code></p> <p>De esta forma, dentro de la funci\u00f3n se puede modificar el contenido de la variable que se pasa, no el de una copia.</p> <p>Referencias en PHP.</p> <p>Por tanto, a partir de PHP5 no puedes copiar un objeto utilizando el operador \"<code>=\"</code>. Si necesitas copiar un objeto, debes utilizar <code>clone</code>. Al utilizar <code>clone</code> sobre un objeto existente, se crea una copia de todos los atributos del mismo en un nuevo objeto.</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code></p> <p><code>$a = clone($p);</code></p> <p>Adem\u00e1s, existe una forma sencilla de personalizar la copia para cada clase particular. Por ejemplo, puede suceder que quieras copiar todos los atributos menos alguno. En nuestro ejemplo, al menos el c\u00f3digo de cada producto debe ser distinto y, por tanto, quiz\u00e1s no tenga sentido copiarlo al crear un nuevo objeto. Si \u00e9ste fuera el caso, puedes crear un m\u00e9todo de nombre <code>__clone</code> en la clase. Este m\u00e9todo se llamar\u00e1 autom\u00e1ticamente despu\u00e9s de copiar todos los atributos en el nuevo objeto.</p> <p><code>class Producto {</code> <code>\u2026</code> <code>public function __clone($atributo) {</code> <code>$this-&gt;codigo = nuevo_codigo();</code> <code>}</code> <code>\u2026</code></p> <p><code>}</code></p> <p>Autoevaluaci\u00f3n</p> <p>\u00bfCu\u00e1l es el nombre de la funci\u00f3n que se utiliza para hacer una copia de un objeto?</p> <p><code>clone</code>.</p> <p><code>__clone</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#132-utilizacion-de-objetos-ii","title":"1.3.2.- Utilizaci\u00f3n de objetos (II).","text":"<p>Soumil Kumar (Dominio p\u00fablico)</p> <p>A veces tienes dos objetos y quieres saber su relaci\u00f3n exacta. Para eso, en PHP puedes utilizar los operadores <code>\"==\"</code> y <code>\"===\"</code>.</p> <p>Si utilizas el operador de comparaci\u00f3n <code>\"==\"</code>, comparas los valores de los atributos de los objetos. Por tanto dos objetos ser\u00e1n iguales si son instancias de la misma clase y, adem\u00e1s, sus atributos tienen los mismos valores.</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code> <code>$a = clone($p);</code> <code>// El resultado de comparar $a == $p da verdadero</code></p> <p><code>//  pues $a y $p son dos copias id\u00e9nticas</code></p> <p>Sin embargo, si utilizas el operador <code>\"===\"</code>, el resultado de la comparaci\u00f3n ser\u00e1 <code>true</code> s\u00f3lo cuando las dos variables sean referencias al mismo objeto.</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code> <code>$a = clone($p);</code> <code>// El resultado de comparar $a === $p da falso</code> <code>//  pues $a y $p no hacen referencia al mismo objeto</code> <code>$a = &amp; $p;</code> <code>// Ahora el resultado de comparar $a === $p da verdadero</code></p> <p><code>//  pues $a y $p son referencias al mismo objeto.</code></p> <p>A veces puede ser \u00fatil mostrar el contenido de un objeto sin tener que usar <code>var_dump()</code> para ello podemos usar el m\u00e9todo m\u00e1gico <code>__toString()</code>. Este m\u00e9todo siempre debe devolver un <code>String.</code></p> <p><code>class Persona{</code> <code>public $nombre;</code> <code>public $apellidos;</code> <code>public $perfil;</code> <code>public function __toString() :String{</code> <code>return \"{$this-&gt;apellidos}, {$this-&gt;nombre}, Tu p\u00e9rfil es: {$this-&gt;perfil}\";</code> <code>}</code> <code>}</code></p> <p><code>$persona = new Persona();</code> <code>$persona-&gt;nombre=\"Manuel\";</code> <code>$persona-&gt;apellidos=\"Gil Gil\";</code> <code>$persona-&gt;perfil=\"P\u00fablico\";</code></p> <p><code>echo $persona; //muestra: Gil Gil, Manuel, Tu p\u00e9rfil es: P\u00fablico</code></p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#14-mecanismos-de-mantenimiento-del-estado","title":"1.4.- Mecanismos de mantenimiento del estado.","text":"<p>Negative Space (Dominio p\u00fablico)</p> <p>En la unidad anterior aprendiste a usar la sesi\u00f3n del usuario para almacenar el estado de las variables, y poder recuperarlo cuando sea necesario. El proceso es muy sencillo; se utiliza el array superglobal <code>$_SESSION</code>, a\u00f1adiendo nuevos elementos para ir guardando la informaci\u00f3n en la sesi\u00f3n.</p> <p>El procedimiento para almacenar objetos es similar, pero hay una diferencia importante. Todas las variables almacenan su informaci\u00f3n en memoria de una forma u otra seg\u00fan su tipo. Los objetos, sin embargo, no tienen un \u00fanico tipo. Cada objeto tendr\u00e1 unos atributos u otros en funci\u00f3n de su clase. Por tanto, para almacenar los objetos en la sesi\u00f3n del usuario, hace falta convertirlos a un formato est\u00e1ndar. Este proceso se llama serializaci\u00f3n.</p> <p>En PHP, para serializar un objeto se utiliza la funci\u00f3n <code>serialize()</code>. El resultado obtenido es un <code>string</code> que contiene un flujo de <code>bytes</code>, en el que se encuentran definidos todos los valores del objeto.</p> <p><code>$p = new Producto();</code></p> <p><code>$a = serialize($p);</code></p> <p>Esta cadena se puede almacenar en cualquier parte, como puede ser la sesi\u00f3n del usuario, o una base de datos. A partir de ella, es posible reconstruir el objeto original utilizando la funci\u00f3n <code>unserialize()</code>.</p> <p><code>$p = unserialize($a);</code></p> <p>Debes conocer</p> <p>Las funciones <code>serialize</code> y <code>unserialize</code> se utilizan mucho con objetos, pero sirven para convertir en una cadena cualquier tipo de dato, excepto el tipo <code>resource</code>. Cuando se aplican a un objeto, convierten y recuperan toda la informaci\u00f3n del mismo, incluyendo sus atributos privados. La \u00fanica informaci\u00f3n que no se puede mantener utilizando estas funciones es la que contienen los atributos est\u00e1ticos de las clases.</p> <p>Si simplemente queremos almacenar un objeto en la sesi\u00f3n del usuario, deber\u00edamos hacer por tanto:</p> <p><code>session_start();</code></p> <p><code>$_SESSION['producto'] = serialize($p);</code></p> <p>Pero en PHP esto a\u00fan es m\u00e1s f\u00e1cil. Los objetos que se a\u00f1adan a la sesi\u00f3n del usuario son serializados autom\u00e1ticamente. Por tanto, no es necesario usar <code>serialize()</code> ni <code>unserialize()</code>.</p> <p><code>session_start();</code></p> <p><code>$_SESSION['producto'] = $p;</code></p> <p>Para poder deserializar un objeto, debe estar definida su clase. Al igual que antes, si lo recuperamos de la informaci\u00f3n almacenada en la sesi\u00f3n del usuario, no ser\u00e1 necesario utilizar la funci\u00f3n <code>unserialize</code>.</p> <p><code>session_start();</code></p> <p><code>$p = $_SESSION['producto'];</code></p> <p>Debes conocer</p> <p>Como ya viste en el tema anterior, el mantenimiento de los datos en la sesi\u00f3n del usuario no es perfecta; tiene sus limitaciones. Si fuera necesario, es posible almacenar esta informaci\u00f3n en una base de datos. Para ello tendr\u00e1s que usar las funciones <code>serialize</code>() y <code>unserialize()</code>, pues en este caso PHP ya no realiza la serializaci\u00f3n autom\u00e1tica.</p> <p>En PHP adem\u00e1s tienes la opci\u00f3n de personalizar el proceso de serializaci\u00f3n y deserializaci\u00f3n de un objeto, utilizando los m\u00e9todos m\u00e1gicos <code>\"__sleep()\"</code> y \"<code>__wakeup()\"</code>. Si en la clase est\u00e1 definido un m\u00e9todo con nombre <code>\"__sleep()\"</code>, se ejecuta antes de serializar un objeto. Igualmente, si existe un m\u00e9todo \"<code>__wakeup()\"</code>, se ejecuta con cualquier llamada a la funci\u00f3n <code>unserialize()</code>.</p> <p>M\u00e9todos m\u00e1gicos <code>__sleep()</code> y <code>__wakeup()</code>.</p> <p>Para saber m\u00e1s</p> <p>A partir de PHP7 se han implementado filtros para <code>unserialize()</code>: Esta caracter\u00edstica busca el proporcionar una mejor seguridad al deserializar objetos en datos no fiables. Previene de posibles inyecciones de c\u00f3digo al capacitar al desarrollador a crear listas blancas de clases que deben ser deserializadas.</p> <p><code>// convertir todos los objetos a un objeto __PHP_Incomplete_Class</code> <code>$data = unserialize($foo, [\u201callowed_classes\u201d =&gt; false]);</code> <code>// convertir todos los objetos a un objeto __PHP_Incomplete_Class excepto a los de MiClase y MiClase2</code> <code>$data = unserialize($foo, [\u201callowed_classes\u201d =&gt; [\u201cMiClase\u201d, \u201cMiClase2\u201d]]);</code> <code>// comportamiento predeterminado (lo mismo que omitir el segundo argumento) que acepta todas las clases</code></p> <p><code>$data = unserialize($foo, [\u201callowed_classes\u201d =&gt; true]);</code></p> <p>Autoevaluaci\u00f3n</p> <p>Si serializas un objeto utilizando <code>serialize</code>, \u00bfpuedes almacenarlo en una base de datos MySQL?</p> <p>Verdadero.</p> <p>Falso.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#15-herencia","title":"1.5.- Herencia.","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n Propia)</p> <p>La herencia es un mecanismo de la POO que nos permite definir nuevas clases en base a otra ya existente. Las nuevas clases que heredan tambi\u00e9n se conocen con el nombre de subclases. La clase de la que heredan se llama clase base o superclase.</p> <p>Por ejemplo, en nuestra tienda web vamos a tener productos de distintos tipos. En principio hemos creado para manejarlos una clase llamada <code>Producto</code>, con algunos atributos y un m\u00e9todo que genera una salida personalizada en formato HTML del c\u00f3digo.</p> <p><code>class Producto {</code> <code>public $codigo;</code> <code>public $nombre;</code> <code>public $nombre_corto;</code> <code>public $pvp;</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Esta clase es muy \u00fatil si la \u00fanica informaci\u00f3n que tenemos de los distintos productos es la que se muestra arriba. Pero, si quieres personalizar la informaci\u00f3n que vas a tratar de cada tipo de producto (y almacenar, por ejemplo para los televisores, las pulgadas que tienen o su tecnolog\u00eda de fabricaci\u00f3n), puedes crear nuevas clases que hereden de <code>Producto</code>. Por ejemplo, <code>TV</code>, <code>PC</code>, <code>Movil</code>.</p> <p><code>class TV extends Producto {</code> <code>public $pulgadas;</code> <code>public $tecnologia;</code></p> <p><code>}</code></p> <p>Como puedes ver, para definir una clase que herede de otra, simplemente tienes que utilizar la palabra <code>extends</code> indicando la superclase. Los nuevos objetos que se instancien a partir de la subclase son tambi\u00e9n objetos de la clase base; se puede comprobar utilizando el operador <code>instanceof()</code>.</p> <p><code>$t = new TV();</code> <code>if ($t instanceof Producto) {</code> <code>// Este c\u00f3digo se ejecuta pues la condici\u00f3n es cierta.</code> <code>. . .</code></p> <p><code>}</code></p> <p>Antes viste algunas funciones \u00fatiles para programar utilizando objetos y clases. Las de la siguiente tabla est\u00e1n adem\u00e1s relacionadas con la herencia.</p> Funci\u00f3n Ejemplo Significado <code>get_parent_class</code>() <code>echo get_parent_class($t);</code> Devuelve el nombre de la clase padre del objeto o la clase que se indica. <code>is_subclass_of</code>() <code>if(is_subclass_of($t,'Producto')</code> Devuelve <code>true</code> si el objeto o la clase del primer par\u00e1metro, tiene como clase base a la que se indica en el segundo par\u00e1metro, o <code>false</code> en caso contrario."},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#151-herencia-i","title":"1.5.1.- Herencia (I).","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n propia.)</p> <p>La nueva clase hereda todos los atributos y m\u00e9todos p\u00fablicos de la clase base, pero no los privados. Si quieres crear en la clase base un m\u00e9todo no visible al exterior (como los privados) que se herede a las subclases, debes utilizar la palabra <code>protected</code> en lugar de <code>private</code>. Adem\u00e1s, puedes redefinir el comportamiento de los m\u00e9todos existentes en la clase base, simplemente creando en la subclase un nuevo m\u00e9todo con el mismo nombre.</p> <p><code>class TV extends Producto {</code> <code>public $pulgadas;</code> <code>public $tecnologia;</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;pulgadas . \" pulgadas&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Existe una forma de evitar que las clases heredadas puedan redefinir el comportamiento de los m\u00e9todos existentes en la superclase: utilizar la palabra <code>final</code>. Si en nuestro ejemplo hubi\u00e9ramos hecho:</p> <p><code>class Producto {</code> <code>public $codigo;</code> <code>public $nombre;</code> <code>public $nombre_corto;</code> <code>public $pvp;</code> <code>public final function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>En este caso el m\u00e9todo <code>muestra</code> no podr\u00eda redefinirse en la clase <code>TV</code>.</p> <p>Incluso se puede declarar una clase utilizando <code>final</code>. En este caso no se podr\u00edan crear clases heredadas utiliz\u00e1ndola como base.</p> <p><code>final class Producto {</code> <code>. . .</code></p> <p><code>}</code></p> <p>Opuestamente al modificador <code>final</code>, existe tambi\u00e9n <code>abstract</code>. Se utiliza de la misma forma, tanto con m\u00e9todos como con clases completas, pero en lugar de prohibir la herencia, obliga a que se herede. Es decir, una clase con el modificador <code>abstract</code> no puede tener objetos que la instancien, pero s\u00ed podr\u00e1 utilizarse de clase base y sus subclases s\u00ed podr\u00e1n utilizarse para instanciar objetos.</p> <p><code>abstract class Producto {</code> <code>. . .</code></p> <p><code>}</code></p> <p>Y un m\u00e9todo en el que se indique <code>abstract</code>, debe ser redefinido obligatoriamente por las subclases, y no podr\u00e1 contener c\u00f3digo.</p> <p><code>class Producto {</code> <code>. . .</code> <code>abstract public function muestra();</code></p> <p><code>}</code></p> <p>Obviamente, no se puede declarar una clase como <code>abstract</code> y <code>final</code> simult\u00e1neamente. <code>abstract</code> obliga a que se herede para que se pueda utilizar, mientras que <code>final</code> indica que no se podr\u00e1 heredar.</p> <p>Autoevaluaci\u00f3n</p> <p>La funci\u00f3n <code>is_subclass_of</code> recibe como primer par\u00e1metro:</p> <p>Un objeto.</p> <p>Un objeto o una clase.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#152-herencia-ii","title":"1.5.2.- Herencia (II).","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n Propia)</p> <p>Vamos a hacer una peque\u00f1a modificaci\u00f3n en nuestra clase <code>Producto</code>. Para facilitar la creaci\u00f3n de nuevos objetos, crearemos un constructor al que se le pasar\u00e1 un array con los valores de los atributos del nuevo producto.</p> <p><code>class Producto {</code> <code>public $codigo;</code> <code>public $nombre;</code> <code>public $nombre_corto;</code> <code>public $pvp;</code> <code>public function __construct($row) {</code> <code>$this-&gt;codigo = $row['cod'];</code> <code>$this-&gt;nombre = $row['nombre'];</code> <code>$this-&gt;nombre_corto = $row['nombre_corto'];</code> <code>$this-&gt;PVP = $row['pvp'];</code> <code>}</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>\u00bfQu\u00e9 pasa ahora con la clase <code>TV</code>, qu\u00e9 hereda de <code>Producto</code>? Cuando crees un nuevo objeto de esa clase, \u00bfse llamar\u00e1 al constructor de <code>Producto</code>? \u00bfPuedes crear un nuevo constructor espec\u00edfico para <code>TV</code> que redefina el comportamiento de la clase base?</p> <p>Empezando por esta \u00faltima pregunta, obviamente puedes definir un nuevo constructor para las clases heredadas que redefinan el comportamiento del que existe en la clase base, tal y como har\u00edas con cualquier otro m\u00e9todo. Y dependiendo de si programas o no el constructor en la clase heredada, se llamar\u00e1 o no autom\u00e1ticamente al constructor de la clase base.</p> <p>En PHP, si la clase heredada no tiene constructor propio, se llamar\u00e1 autom\u00e1ticamente al constructor de la clase base (si existe). Sin embargo, si la clase heredada define su propio constructor, deber\u00e1s ser t\u00fa el que realice la llamada al constructor de la clase base si lo consideras necesario, utilizando para ello la palabra <code>parent</code> y el operador de resoluci\u00f3n de \u00e1mbito.</p> <p><code>class TV extends Producto {</code> <code>public $pulgadas;</code> <code>public $tecnologia;</code> <code>public function __construct($row) {</code> <code>parent::__construct($row); //llama al constructor de la clase padre</code> <code>$this-&gt;pulgadas = $row['pulgadas'];</code> <code>$this-&gt;tecnologia = $row['tecnologia'];</code> <code>}</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;pulgadas . \" pulgadas&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Ya viste con anterioridad c\u00f3mo se utilizaba la palabra clave <code>self</code> para tener acceso a la clase actual. La palabra <code>parent</code> es similar. Al utilizar <code>parent</code> haces referencia a la clase base de la actual, tal y como aparece tras <code>extends</code>.</p> <p>Autoevaluaci\u00f3n</p> <p>Si una subclase no tiene m\u00e9todo constructor, y su clase base s\u00ed lo tiene, cuando se instancie un nuevo objeto de la subclase:</p> <p>Se llamar\u00e1 autom\u00e1ticamente al constructor de la clase base.</p> <p>No se llamar\u00e1 autom\u00e1ticamente al constructor de la clase base.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#16-interfaces","title":"1.6.- Interfaces.","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n propia.)</p> <p>Un interface es como una clase vac\u00eda que solamente contiene declaraciones de m\u00e9todos. Se definen utilizando la palabra <code>interface</code>.</p> <p>Por ejemplo, antes viste que pod\u00edas crear nuevas clases heredadas de <code>Producto</code>, como <code>TV</code> o <code>Ordenador</code>. Tambi\u00e9n viste que en las subclases pod\u00edas redefinir el comportamiento del m\u00e9todo <code>muestra</code> para que generara una salida en HTML diferente para cada tipo de producto.</p> <p>Si quieres asegurarte de que todos los tipos de productos tengan un m\u00e9todo <code>muestra</code>, puedes crear un interface como el siguiente.</p> <p><code>interface iMuestra {</code> <code>public function muestra();</code></p> <p><code>}</code></p> <p>Y cuando crees las subclases deber\u00e1s indicar con la palabra <code>implements</code> que tienen que implementar los m\u00e9todos declarados en este interface.</p> <p><code>class TV extends Producto implements iMuestra {</code> <code>. . .</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;pulgadas . \" pulgadas&lt;/p&gt;\";</code> <code>}</code> <code>. . .</code></p> <p><code>}</code></p> <p>Todos los m\u00e9todos que se declaren en un interface deben ser p\u00fablicos. Adem\u00e1s de m\u00e9todos, los interfaces podr\u00e1n contener constantes pero no atributos.</p> <p>Un interface es como un contrato que la clase debe cumplir. Al implementar todos los m\u00e9todos declarados en el interface se asegura la interoperabilidad entre clases. Si sabes que una clase implementa un interface determinado, sabes qu\u00e9 nombre tienen sus m\u00e9todos, qu\u00e9 par\u00e1metros les debes pasar y, probablemente, podr\u00e1s averiguar f\u00e1cilmente con qu\u00e9 objetivo han sido escritos.</p> <p>Por ejemplo, en la librer\u00eda de PHP est\u00e1 definido el interface <code>\"Countable\"</code>.</p> <p><code>Countable {</code> <code>abstract public int count ( void )</code></p> <p><code>}</code></p> <p>Si creas una clase para la cesta de la compra en la tienda web, podr\u00edas implementar este interface para contar los productos que figuran en la misma.</p> <p>Antes aprendiste que en PHP una clase s\u00f3lo puede heredar de otra, que no existe la herencia m\u00faltiple. Sin embargo, s\u00ed es posible crear clases que implementen varios interfaces, simplemente separando la lista de interfaces por comas despu\u00e9s de la palabra <code>\"implements\"</code>.</p> <p><code>class TV extends Producto implements iMuestra, Countable {</code> <code>. . .</code></p> <p><code>}</code></p> <p>La \u00fanica restricci\u00f3n es que los nombres de los m\u00e9todos que se deban implementar en los distintos interfaces no coincidan. Es decir, en nuestro ejemplo, el interface <code>iMuestra</code> no podr\u00eda contener un m\u00e9todo <code>count</code>, pues \u00e9ste ya est\u00e1 declarado en <code>Countable</code>.</p> <p>Debes conocer</p> <p>En PHP tambi\u00e9n se pueden crear nuevos interfaces heredando de otros ya existentes. Se hace de la misma forma que con las clases, utilizando la palabra <code>\"extends\"</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#161-interfaces-i","title":"1.6.1.- Interfaces (I).","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n propia.)</p> <p>Una de las dudas m\u00e1s comunes en POO, es qu\u00e9 soluci\u00f3n adoptar en algunas situaciones: interfaces o clases abstractas. Ambas permiten definir reglas para las clases que los implementen o hereden respectivamente. Y ninguna permite instanciar objetos. Las diferencias principales entre ambas opciones son:</p> <ul> <li>En las clases abstractas, los m\u00e9todos pueden contener c\u00f3digo. Si van a existir varias subclases con un comportamiento com\u00fan, se podr\u00eda programar en los m\u00e9todos de la clase abstracta. Si se opta por un interface, habr\u00eda que repetir el c\u00f3digo en todas las clases que lo implemente.</li> <li>Las clases abstractas pueden contener atributos, y los interfaces no.</li> <li>No se puede crear una clase que herede de dos clases abstractas, pero s\u00ed se puede crear una clase que implemente varios interfaces.</li> </ul> <p>Por ejemplo, en la tienda online va a haber dos tipos de usuarios: clientes y empleados. Si necesitas crear en tu aplicaci\u00f3n objetos de tipo <code>Usuario</code> (por ejemplo, para manejar de forma conjunta a los clientes y a los empleados), tendr\u00edas que crear una clase no abstracta con ese nombre, de la que heredar\u00edan <code>Cliente</code> y <code>Empleado</code>.</p> <p><code>class Usuario {</code> <code>. . .</code> <code>}</code> <code>class Cliente extends Usuario {</code> <code>. . .</code> <code>}</code> <code>class Empleado extends Usuario {</code> <code>. . .</code></p> <p><code>}</code></p> <p>Pero si no fuera as\u00ed, tendr\u00edas que decidir si crear\u00edas o no <code>Usuario</code>, y si lo har\u00edas como una clase abstracta o como un interface.</p> <p>Si por ejemplo, quisieras definir en un \u00fanico sitio los atributos comunes a <code>Cliente</code> y a <code>Empleado</code>, deber\u00edas crear una clase abstracta <code>Usuario</code> de la que hereden.</p> <p><code>abstract class Usuario {</code> <code>public $dni;</code> <code>protected $nombre;</code> <code>. . .</code></p> <p><code>}</code></p> <p>Pero esto no podr\u00edas hacerlo si ya tienes planificada alguna relaci\u00f3n de herencia para una de estas dos clases.</p> <p>Para finalizar con los interfaces, a la lista de funciones de PHP relacionadas con la POO puedes a\u00f1adir las siguientes.</p> Funci\u00f3n Ejemplo Significado <code>get_declared_interfaces</code>() print_r(get_declared_interfaces()); Devuelve un array con los nombres de los interfaces declarados. <code>interface_exists</code>() <code>if(interface_exists('iMuestra')</code> Devuelve <code>true</code> si existe el interface que se indica, o <code>false</code> en caso contrario. <p>Autoevaluaci\u00f3n</p> <p>Si en tu c\u00f3digo utilizas un interface, y quieres crear uno nuevo bas\u00e1ndote en \u00e9l:</p> <p>Puedes utilizar la herencia para crear el nuevo constructor extendiendo al primero.</p> <p>No puedes hacerlo, pues no se puede utilizar herencia con los interfaces; solo con las clases.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#17-ejemplo-de-poo-en-php","title":"1.7.- Ejemplo de POO en PHP.","text":"<p>Soumil Kumar (Dominio p\u00fablico)</p> <p>Es hora de llevar a la pr\u00e1ctica lo que has aprendido. Vamos a aplicar los principios de la POO para realizar un \"CRUD\" a la tabla \"productos\" de la base de datos \"proyecto\" usada en unidades anteriores. Recuerda que las credenciales para acceder a la base de datos eran \"gestor::secreto\" y en la tabla usuarios hab\u00edamos creado los usuarios \"admin::secreto\" y \"gestor::pass\". En los enlaces siguientes puedes ver un v\u00eddeo en \"youtube\" de la aplicaci\u00f3n ya terminada y un resumen textual del v\u00eddeo.</p> <ul> <li>Enlace al V\u00eddeo.</li> <li>Resumen textual.</li> </ul> <p>B\u00e1sicamente si accedemos como invitado podremos ver el listado de productos y el detalle de cada uno de ellos, y si nos validamos podremos tambi\u00e9n crear, borrar y actualizar productos.</p> <p>Vamos a utilizar una estructura para esta pr\u00e1ctica muy com\u00fan, en el directorio donde guardemos los archivos de la pr\u00e1ctica crearemos una carpeta <code>\"class\"</code> donde guardaremos todas las clases y un carpeta <code>\"public\"</code> donde guardaremos todas las p\u00e1ginas \"<code>php, html...\"</code>, que vayamos a necesitar visualizar en el navegador.</p> <p>Captura de pantalla terminal Ubuntu (Elaboraci\u00f3n propia)</p> <p>Crearemos una clase <code>\"Conexion\"</code> y una clase para todas las tablas que vayamos a usar. El convenio es poner el nombre del archivo exactamente igual al nombre de la clase que implementa, es decir, el archivo <code>\"Usuario.php\"</code> implementar\u00e1 la clase <code>\"Usuario\".</code></p> <p>Para no tener que estar haciendo el <code>\"require\"</code> de cada uno de los archivos de clase que vayamos a necesitar,  vamos a utilizar la \"autocarga de las clases\", que es b\u00e1sicamente un mecanismo por el que cada vez que instanciamos un objeto de una clase hace el <code>\"require\"</code> del archivo donde se encuentra implementada. Por eso es muy importante que respete las convenciones de nombres. El c\u00f3digo para ello ser\u00eda el siguiente:</p> <p><code>spl_autoload_register(function ($class) {</code> <code>require \"../class/\" . $class . \".php\";</code></p> <p><code>});</code></p> <p>Utiliza una funci\u00f3n an\u00f3nima en la llamada, no te preocupes por eso ahora, el funcionamiento es, que cuando en cualquier archivo del directorio <code>\"public\"</code> hacemos una declaraci\u00f3n del tipo <code>\"$objeto=new Objeto()\"</code> autom\u00e1ticamente busca un archivo en el directorio <code>\"class\"</code> (un nivel por abajo, de ah\u00ed el <code>\"..\"</code>) llamado <code>\"Objeto.php\"</code> para hacer el <code>\"require\"</code>, si no existe me dar\u00e1 un error.</p> <p>Veamos el contenido de los archivos:</p> <ul> <li><code>Conexion.php</code>:Descargar <code>conexion.php</code>. (pdf - 28,44 KB) Implementa la clase \"Conexion\" que contendr\u00e1 b\u00e1sicamente los par\u00e1metros para conectarnos, as\u00ed como un m\u00e9todo <code>\"getConexion()\"</code>, que nos devolver\u00e1 la conexi\u00f3n. Todas las dem\u00e1s clases heredar\u00e1n de esta, todo sus atributos ser\u00e1n <code>\"private\"</code> menos el de la conexi\u00f3n que lo hacemos <code>\"protected\"</code>.</li> <li><code>Usuario.php</code>:Descargar <code>usuario.php</code>. (pdf - 28,02 KB) Implementa la clase \"Usuario\" que contendr\u00e1 los atributos de la tabla usuario. Tiene el m\u00e9todo \"<code>isValido($usu, $pass)\"</code> que devolver\u00e1 <code>true</code> si encuentra a un usuario con esa contrase\u00f1a y <code>false</code> en otro caso.</li> <li><code>Familia.php</code>:Descargar <code>familia.php</code>. (pdf - 25,50 KB) Implementa la clase \"Famila\" que contendr\u00e1 los atributos de la tabla usuario. Tiene el m\u00e9todo <code>\"recuperarFamilias()\"</code> que usaremos para rellenar los \"<code>options\"</code> para la lista desplegable del campo familia en crear y actualizar productos, este m\u00e9todo devuelve el <code>\"$stmt\"</code>.</li> </ul> <p><code>Producto.php</code>:Descargar <code>producto.php</code>. (pdf - 38,89 KB) Implementa la clase \"Producto\" que contendr\u00e1 los atributos de la tabla producto. Tiene a parte del constructor los <code>\"setter\"</code> para cada uno de los atributos, un m\u00e9todo para cada una de las operaciones de CRUD, el m\u00e9todo \"<code>existeNombreCorto($n)\"</code> que devolver\u00e1 <code>true</code> si el nombre corto pasado por par\u00e1metro existe y <code>false</code> en otro caso y el m\u00e9todo \"<code>recuperarProductos()\"</code> que devuelve el \"<code>$stmt\"</code> de la consulta para recuperar los productos ordenados alfab\u00e9ticamente, este m\u00e9todo me servir\u00e1 para mostrar los productos en \"<code>listado.php\".</code> <code>function existeNombreCorto($nc){</code> <code>if ($this-&gt;id == null) {</code> <code>$consulta = \"select * from productos where nombre_corto=:nc\";</code> <code>} else {</code> <code>$consulta = \"select * from productos where nombre_corto = :nc AND id != :i\";</code> <code>}</code> <code>$nc = func_get_arg(0);</code> <code>$stmt = $this-&gt;conexion-&gt;prepare($consulta); //podemos acceder a conexion al ser \"protected\"</code> <code>try {</code> <code>if ($this-&gt;id == null)</code> <code>$stmt-&gt;execute([':nc' =&gt; $nc]);</code> <code>else</code> <code>$stmt-&gt;execute([':nc' =&gt; $nc, ':i' =&gt; $this-&gt;id]);</code> <code>} catch (PDOException $ex) {</code> <code>die(\"Error al comprobar el nombre corto: \" . $ex-&gt;getMessage());</code> <code>}</code> <code>if ($stmt-&gt;rowCount() == 0) return false; //No existe</code> <code>return true; //existe</code></p> <ul> <li><code>}</code>   F\u00edjate que en este m\u00e9todo tenemos que controlar si estemos en crear (compruebo que no existe ese nombre_corto en toda la base de datos) o actualizar (no comprobaremos el nombre_corto del c\u00f3digo del producto a actualizar ya que ese nombre_corto ya existe).</li> </ul> <p>Para todas las clases que heredan de la clase Conexi\u00f3n el constructor ser\u00e1:</p> <p><code>public function __construct(){</code> <code>parent::__construct();</code></p> <p><code>}</code></p> <p>Recomendaci\u00f3n</p> <p>Podemos instalar en <code>Visual Studio Code</code>, multitud de extensiones que nos ayudar\u00e1n en nuestro desarrollo, una de ellas es \"<code>PHP Getters &amp; Setters</code>\" que nos crea autom\u00e1ticamente los \"<code>getters</code>\" y los \"<code>setters</code>\" del atributo que deseemos. Una vez instalada s\u00f3lo tenemos que hacer click derecho sobre el atributo que queramos y nos aparecer\u00e1 en el men\u00fa contextual la opci\u00f3n de crear el \"<code>get</code>\", el \"<code>set</code>\" o ambos.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#171-ejemplo-de-poo-en-php-i","title":"1.7.1.- Ejemplo de POO en PHP (I).","text":"<p>Captura de pantalla de Firefox (Elaboraci\u00f3n propia)</p> <p>El resto de ficheros que componen el CRUD tendremos que reescribirlos para que utilicen las clases que acabas de definir. En general, el resultado obtenido es mucho m\u00e1s claro y conciso. Veamos algunos ejemplos:</p> <p>El <code>action</code> de <code>\"login.php\"</code> para autentificar quedar\u00eda: <code>$nombre = trim($_POST['usuario']);</code> <code>$pass = trim($_POST['pass']);</code> <code>if (strlen($nombre) == 0 || strlen($pass) == 0) {</code> <code>error(\"Error, El nombre o la contrase\u00f1a no pueden contener solo espacios en blancos.\");</code> <code>}</code> <code>$usuario = new Usuario();</code> <code>if (!$usuario-&gt;isValido($nombre, $pass)) {</code> <code>$usuario = null;</code> <code>error(\"Credenciales Inv\u00e1lidas\");</code> <code>}</code> <code>$usuario = null;</code> <code>$_SESSION['nombre'] = $nombre;</code></p> <ol> <li><code>header('Location:listado.php');</code></li> </ol> <p>En <code>\"listado.php\"</code>, el c\u00f3digo recuperar todos los productos quedar\u00eda: <code>//Hacemos el autoload de las clases</code> <code>spl_autoload_register(function ($class) {</code> <code>require \"../class/\" . $class . \".php\";</code> <code>});</code> <code>// recuperamos los productos</code> <code>$productos = new Producto();</code> <code>$stmt = $productos-&gt;recuperarProductos();</code> <code>// Cerramos todo</code></p> <ol> <li><code>$producto = null;</code></li> </ol> <p>En <code>\"detalle.php\"</code> el c\u00f3digo para recuperar los detalles del producto seleccionado quedar\u00eda: <code>$producto = new Producto();</code> <code>$producto-&gt;setId($id);</code> <code>$datos = $producto-&gt;read();</code></p> <ol> <li><code>$producto = null;</code></li> </ol> <p>En \"<code>borrar.php\"</code> el c\u00f3digo para borrar el producto de c\u00f3digo <code>$cod</code>: <code>$producto = new Producto();</code> <code>$producto-&gt;setId($cod);</code> <code>$producto-&gt;delete();</code> <code>$producto = null;</code> <code>$_SESSION['mensaje'] = \"Art\u00edculo Borrado Correctamente\";</code></p> <ol> <li><code>header('Location:listado.php');</code></li> </ol> <p>En <code>\"crear.php\"</code> por una parte para comprobamos que no existe el nombre corto: <code>if ($producto-&gt;existeNombreCorto($nc)) {</code> <code>error(\"Error ya existe un nombre corto con ese valor.\");</code> <code>}</code> Y el c\u00f3digo para guardar el producto nuevo <code>//recogemos los datos del formulario, trimamos las cadenas</code> <code>$nombre = trim($_POST['nombre']);</code> <code>$nomCorto = trim($_POST['nombrec']);</code> <code>$pvp = $_POST['pvp'];</code> <code>$des = trim($_POST['descripcion']);</code> <code>$familia = $_POST['familia'];</code> <code>comprobar($nombre, $nomCorto);</code> <code>// si hemos llegado aqui todo ha ido bien vamos a crear el registro</code> <code>$producto-&gt;setNombre($nombre);</code> <code>$producto-&gt;setNombre_corto($nomCorto);</code> <code>$producto-&gt;setPvp($pvp);</code> <code>$producto-&gt;setFamilia($familia);</code> <code>$producto-&gt;setDescripcion($des);</code> <code>$producto-&gt;create();</code> <code>$_SESSION['mensaje'] = 'Producto creado Correctamente';</code> <code>$producto = null;</code></p> <ol> <li><code>header('Location: listado.php');</code></li> </ol> <p>Unas \u00faltimas consideraciones, obviamente todo el c\u00f3digo es mejorable, algunas partes de este c\u00f3digo tienen car\u00e1cter meramente did\u00e1ctico y obviamente se pueden conseguir mejores implementaciones del mismo. Se podr\u00eda haber hecho uso de <code>includes</code> y funciones para evitar repetir algunas partes de c\u00f3digo. Para completar los productos en el <code>\"create\"</code> y el \"<code>update\"</code> se podr\u00eda haber hecho con el constructor inicializando los atributos con los nuevos datos y no usando los <code>setters</code>. Piensa que mejoras podr\u00edas hacer al c\u00f3digo propuesto y comp\u00e1rtelas con tus compa\u00f1eros, es una forma muy \u00fatil de aprender.</p> <p>Prueba a instalar y ejecutar la aplicaci\u00f3n resultante. Revisa el c\u00f3digo y comprueba que entiendes su funcionamiento.</p> <p>Aplicaci\u00f3n de Ejemplo (zip - 15,83 KB)</p> <p>Autoevaluaci\u00f3n</p> <p>La clase DB tiene todos sus m\u00e9todos est\u00e1ticos. No tiene sentido por tanto crear ning\u00fan objeto de esa clase, y podr\u00eda haberse implementado igualmente como un interface.</p> <p>Verdadero.</p> <p>Falso.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#2-programacion-en-capas","title":"2.- Programaci\u00f3n en capas.","text":"<p>En el ejemplo anterior, hemos programado una aplicaci\u00f3n web sencilla utilizando programaci\u00f3n orientada a objetos. Sin embargo, si observaste el resultado obtenido, habr\u00e1s visto como en muchas ocasiones se mezcla el c\u00f3digo propio de la l\u00f3gica de la aplicaci\u00f3n, con el c\u00f3digo necesario para crear el interface web que se presenta a los usuarios.</p> <p>De igual manera el encabezado de las p\u00e1ginas era repetido una y otra vez (importar <code>Bootstrap</code>, <code>FontAwesome</code>...). Ademas existe un problema a\u00f1adido: si el proyecto es extenso y en distintos archivos tenemos clases de igual nombre podremos tener colisi\u00f3n entre ellas.</p> <p>Existen varios m\u00e9todos que permiten separar la l\u00f3gica de presentaci\u00f3n (en nuestro caso, la que genera las etiquetas HTML) de la l\u00f3gica de negocio, donde se implementa la l\u00f3gica propia de cada aplicaci\u00f3n. El m\u00e1s extendido es el patr\u00f3n de dise\u00f1o Modelo \u2013 Vista \u2013 Controlador (MVC). Este patr\u00f3n pretende dividir el c\u00f3digo en tres partes, dedicando cada una a una funci\u00f3n definida y diferenciada de las otras.</p> <ul> <li>Modelo. Es el encargado de manejar los datos propios de la aplicaci\u00f3n. Debe proveer mecanismos para obtener y modificar la informaci\u00f3n del mismo. Si la aplicaci\u00f3n utiliza alg\u00fan tipo de almacenamiento para su informaci\u00f3n (como un SGBD), tendr\u00e1 que encargarse de almacenarla y recuperarla.</li> <li>Vista. Es la parte del modelo que se encarga de la interacci\u00f3n con el usuario. En esta parte se encuentra el c\u00f3digo necesario para generar el interface de usuario (en nuestro caso en HTML), seg\u00fan la informaci\u00f3n obtenida del modelo.</li> <li>Controlador. En este m\u00f3dulo se decide qu\u00e9 se ha de hacer, en funci\u00f3n de las acciones del usuario con su interface. Con esta informaci\u00f3n, interact\u00faa con el modelo para indicarle las acciones a realizar y, seg\u00fan el resultado obtenido, env\u00eda a la vista las instrucciones necesarias para generar el nuevo interface.</li> </ul> <p>La gran ventaja de este patr\u00f3n de programaci\u00f3n es que genera c\u00f3digo muy estructurado, f\u00e1cil de comprender y de mantener. En la web puedes encontrar muchos ejemplos de implementaci\u00f3n del modelo MVC en PHP.</p> <p>Aunque puedes programar utilizando MVC por tu cuenta, es m\u00e1s habitual utilizar el patr\u00f3n MVC en conjunci\u00f3n con un framework o marco de desarrollo. Existen numerosos frameworks disponibles en PHP, muchos de los cuales incluyen soporte para MVC como Laravel y Symfony.  En esta unidad no profundizaremos en la utilizaci\u00f3n de un framework espec\u00edfico, pero utilizaremos Blade que es el sistema de plantillas de Laravel, el cual nos permite generar HTML din\u00e1mico con una sintaxis mucho m\u00e1s limpia que si us\u00e1ramos PHP plano.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#21-namespaces-en-php","title":"2.1.- Namespaces en PHP.","text":"<p>Open Clipart (CC0)</p> <p>Los <code>namespaces</code> o espacios de nombres permiten crear proyectos complejas con mayor flexibilidad evitando problemas de colisi\u00f3n entre clases, m\u00e9todos, funciones y mejorando la legibilidad del c\u00f3digo. aparecen a partir de PHP5.3</p> <p>Los <code>namespace</code> son un contenedor que nos permitir\u00e1 agrupar nuestro c\u00f3digo para darle un uso posterior de esta manera evitamos conflictos de nombre. Por ejemplo, tenemos 2 funciones con el mismo nombre esto generar\u00eda un conflicto de nombre pero mediante el uso de <code>namespace</code> se da soluci\u00f3n a este problema. En definitiva los <code>namespace</code> nos ayudaran para organizar y reestructurar mejor nuestro c\u00f3digo y proporcionan una manera para agrupar clases, interfaces, funciones y constantes relacionadas.</p> <p>Podemos comprarlo con el sistema de archivos, los archivos est\u00e1n dentro de carpetas y dentro de \u00e9stas hay a su vez otras carpetas con otros archivos. Una carpeta se comporta como si fuera un <code>namespace</code>, por ejemplo, no puede haber dos archivos con el mismo nombre en la misma carpeta, pero s\u00ed puede haber dos archivos con el mismo en distintas.</p> <p>Veamos como funcionan. Hay que declararlo en la primeara l\u00ednea de c\u00f3digo</p> <p><code>&lt;?php</code> <code>namespace Proyecto;</code></p> <p><code>//la declaraci\u00f3n del namespace debe ser la primera l\u00ednea si no obtendremos un error</code></p> <p>En un espacio de nombres se engloban:</p> <ul> <li>Constantes.</li> <li>Funciones.</li> <li>Clases, interfaces, traits, clases abstractas.</li> </ul> <p>Vemos un ejemplo m\u00e1s completo. Creemos el archivo \"<code>ejemploNamespace.php</code>\"</p> <p><code>&lt;?php</code> <code>namespace Proyecto;</code> <code>const E = 2.7182;</code> <code>function saludo(){</code> <code>echo \"Buenos dias\";</code> <code>}</code> <code>class Prueba{</code> <code>private $nombre;</code> <code>public function probando(){</code> <code>echo \"Esto es el m\u00e9todo probando de la clase Prueba\";</code> <code>}</code></p> <p><code>}</code></p> <p>Para pode usar este archivo en otra parte podemos hacerlo de varias formas:</p> <p><code>&lt;?php</code> <code>include \"ejemploNamespace.php\";</code> <code>echo Proyecto\\E; // accedemos a la constante</code> <code>Proyecto\\saludo(); // accedemos a la funci\u00f3n</code> <code>$prueba=new Proyecto\\Prueba();</code> <code>$prueba-&gt;probando();</code></p> <p>O bien :</p> <p><code>&lt;?php</code> <code>include \"ejemploNamespace.php\";</code> <code>use const Proyecto\\E;</code> <code>use function Proyecto\\saludo;</code> <code>use Proyecto\\Prueba;</code> <code>// ahora ya podemos usarlos</code> <code>echo E;</code> <code>saludo();</code> <code>$prueba = new Prueba();</code></p> <p><code>$prueba-&gt;probando();</code></p> <p>Es una buena pr\u00e1ctica de programaci\u00f3n colocar los archivos del espacio de nombres en carpetas que tienen los mismos nombres que el <code>namespace</code> declarado.</p> <p>La posibilidad de declarar el uso de una funci\u00f3n o constante de un <code>namespace</code> est\u00e1 disponible solo a partir de PHP 5.6.</p> <p>Autoevaluaci\u00f3n</p> <p>En un <code>namespace</code> solo guardaremos las clases para evitar colisiones entre ellas.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#sugerencia","title":"Sugerencia","text":"<p>Verdadero  Falso</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#22-gestionar-dependencias","title":"2.2.- Gestionar Dependencias.","text":"<p>WizardCat (MIT)</p> <p>A la hora de empezar el desarrollo de un proyecto en PHP, es necesario conocer todas las librer\u00edas que necesitaremos. La instalaci\u00f3n de estas librer\u00edas puede ser una tarea trabajosa si lo hacemos a mano, pero existen gestores de dependencias que se encargan de realizarla de forma autom\u00e1tica, gestionando esas librer\u00edas de forma sencilla y eficaz.</p> <p>Composer es un gestor de dependencias en proyectos, para programaci\u00f3n en PHP. Eso quiere decir que nos permite gestionar (declarar, descargar y mantener actualizados) los paquetes de software en los que se basa nuestro proyecto PHP. Entre sus principales virtudes destacan:</p> <ul> <li>Es simple de utilizar</li> <li>Cuenta con un repositorio propio donde podemos encontrar casi de todo (Packagist)</li> <li>Disminuye significativamente problemas de cambio de entorno de ejecuci\u00f3n (Mediante su funcionalidad de congelar dependencias)</li> <li>Actualiza las librer\u00edas a nuevas versiones f\u00e1cilmente si queremos mediante \"<code>composer update</code>\".</li> </ul> <p>Vemos a empezar a trabajar con <code>Composer</code>, para ello veremos la instalaci\u00f3n y los primeros pasos:</p> <p>Instalaci\u00f3n Nos descargamos el archivo desde la p\u00e1gina oficial (acceder a Composer), desde esa p\u00e1gina nos recomiendan ejecutar las siguientes instrucciones: <code>php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"</code> <code>php -r \"if (hash_file('sha384', 'composer-setup.php') === 'e0012edf3e80b6978849f5eff0d4b4e4c79ff1609dd1e613307e16318854d24ae64f26d17af3ef0bf7cfb710ca74755a') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"</code> <code>php composer-setup.php</code></p> <ul> <li><code>php -r \"unlink('composer-setup.php');\"</code>   Debes bajarte los comandos actualizados en el enlace siguiente: Descargar Composer.   Una vez hecho esto y si no ha habido problemas tendremos el archivo \"<code>composer.phar</code>\" en el directorio donde estemos, para hacer una instalaci\u00f3n para todos los usuarios del sistema, es decir global (se recomienda hacerlo as\u00ed), desde la terminal escribiremos lo siguiente: <code>sudo mv composer.phar /usr/local/bin/composer</code>   Para comprobar que todo funciona teclea desde la terminal el comando \"<code>composer\"</code> te debe aparecer algo como lo siguiente: Captura de pantalla Ubuntu (Elaboraci\u00f3n propia)</li> <li>Primeros pasos   Veamos su uso, en la ra\u00edz del directorio donde vaya a estar nuestro proyecto y desde la terminal tecleamos \"<code>composer init</code>\" a continuaci\u00f3n se nos hacen unas preguntas y vamos contestando:<ul> <li><code>Package name (&lt;vendor&gt;/&lt;name&gt;)</code> : aqu\u00ed nos pregunta organizaci\u00f3n y nombre podemos poner \"<code>usuario/usuario\"</code> por ejemplo</li> <li><code>Description []</code> : Ponemos una descripci\u00f3n del proyecto</li> <li><code>Author</code> : ponemos autor y correo en el formato siguiente: autor \\&lt;correo&gt;, por ejemplo: \"<code>usuario &lt;usuario@correo.es&gt;\"</code></li> <li><code>Minimum Stability []</code> : Lo podemos dejar en blanco.</li> <li><code>Package Type []</code> : Aqu\u00ed elegiremos <code>project</code>.</li> <li><code>License []</code> : Ponemos la licencia por ejemplo GPL</li> <li>A las siguientes preguntas sobre definir nuestras dependencias, ahora decimos que no.</li> </ul> </li> </ul> <p>Al final nos muestra un archivo JSON , se nos pregunta que si queremos generarlo, contestamos que si y nos genera el archivo \"<code>composer.json</code>\". Una vez generado el archivo tecleando \"<code>composer install</code>\" nos instalar\u00e1 las dependencias.</p> <p>Una de las cosas que hace <code>composer</code> es gestionarnos el tema tema de la autocarga de clases/librer\u00edas (acu\u00e9rdate que en apartados anteriores ya hab\u00edamos visto una forma de hacerlo). Para ello debemos crearnos, en el ra\u00edz del proyecto que vayamos a usar, un directorio de nombre por ejemplo \"src\" y modificar el archivo \"<code>composer.json</code>\". Para el \"autoload\" de clases y librer\u00edas se hace uso de los <code>namespaces.</code></p> <p><code>\"name\": \"usuario/usuario\",</code> <code>\"description\": \"Ejemplo Blade\",</code> <code>\"type\": \"project\",</code> <code>\"config\": {</code> <code>\"optimize-autoloader\": true</code> <code>},</code> <code>\"autoload\": {</code> <code>\"psr-4\": {</code> <code>\"Clases\\\\\": \"src\"</code> <code>}</code> <code>},</code> <code>\"license\": \"GNU/GPL\",</code> <code>\"authors\": [</code> <code>{</code> <code>\"name\": \"usuario\",</code> <code>\"email\": \"usuario@correo.es\"</code> <code>}</code> <code>]</code></p> <p><code>}</code></p> <p>F\u00edjate de la l\u00ednea 7 a la 10 lo que estamos indicando es que vamos a tener un <code>namespace</code> de nombre Clases y que su directorio real va a ser \"<code>src</code>\". En este directorio meteremos todas las clases y comenzaremos el archivo como ya vimos \"<code>namespace Clases</code>\". Las tres lineas anteriores es para que se optimize la autocarga de las clases, no es necesario pero si recomendable. El nombre que se le suele dar al directorio de clases de un proyecto es \"<code>src</code>\" de \"source\".</p> <p>Cada vez que modifiquemos el fichero \"<code>composer.json</code>\" hay que hacer un \"<code>composer install</code>\" para instalar las nuevas dependencias que hayamos puesto.</p> <p>Si deseamos a\u00f1adir dependencias a posteriori podemos escribir el comando: <code>\"composer require vendor/libreria\"</code>, por ejemplo <code>\"composer require fzaninotto/faker\"</code>, para instalar la librer\u00eda que nos permite generar datos aleatorios de prueba.</p> <p>Para saber m\u00e1s</p> <p>En Packagist hay paquetes para casi todo lo que se ocurra en PHP, tenemos Carbon para gestionar fechas, PHPMailer para gestionar mails, extensiones para crear c\u00f3digos de barra, motores de plantillas como Blade usado en Laravel y que veremos a continuaci\u00f3n y mucho mucho m\u00e1s. Antes de intentar programar una aplicaci\u00f3n/librer\u00eda mira si ya existe en Packagist, con Composer ser\u00e1 muy sencillo instalarla.</p> <p>Si te fijas para el <code>autoload</code> en el archivo \"<code>composer.json\"</code> utilizamos \"<code>psr4\"</code>. Esto es un est\u00e1ndar de programaci\u00f3n en PHP propuestos por el php-fig (Grupo de interoperatibilidad para Frameworks PHP). En el enlace siguiente podr\u00e1s obtener m\u00e1s informaci\u00f3n de estos est\u00e1ndares: Informaci\u00f3n sobre est\u00e1ndares \"psr\".</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#23-separacion-de-la-logica-de-negocio","title":"2.3.- Separaci\u00f3n de la l\u00f3gica de negocio.","text":"<p>Captura de pantalla de Visual Studio Code (Elaboraci\u00f3n propia.)</p> <p>Otros mecanismos disponibles en PHP, menos complejos que la utilizaci\u00f3n del patr\u00f3n MVC, y que tambi\u00e9n permiten la separaci\u00f3n de la l\u00f3gica de presentaci\u00f3n y la l\u00f3gica de negocio, son los llamados motores de plantillas (template engines).</p> <p>Un motor de plantillas web es una aplicaci\u00f3n que genera una p\u00e1gina web a partir de un fichero con la informaci\u00f3n de presentaci\u00f3n (denominado plantilla o template, que viene a ser similar a la vista en el patr\u00f3n MVC) y otro con la l\u00f3gica interna de la aplicaci\u00f3n (similar al modelo de MVC). De esta forma, es sencillo dividir el trabajo de programaci\u00f3n de una aplicaci\u00f3n web en dos perfiles: un programador, que debe conocer el lenguaje de programaci\u00f3n en el que se implementar\u00e1 la l\u00f3gica de la aplicaci\u00f3n (en nuestro caso PHP), y un dise\u00f1ador, que se encargar\u00e1 de elaborar las plantillas, (en el caso de la web b\u00e1sicamente en HTML, aunque como veremos la l\u00f3gica de presentaci\u00f3n que se incorpore utilizar\u00e1 un lenguaje propio).</p> <p>En PHP existen varios motores de plantillas con diferentes caracter\u00edsticas. Nosotros trabajaremos con Blade que es el motor de plantillas que viene con Laravel.</p> <p>Blade es un sistema de plantillas que nos permite generar HTML din\u00e1mico con una sintaxis mucho m\u00e1s limpia que si us\u00e1ramos PHP plano. Veamos como instalarlo, configurarlo y unos primeros pasos</p> <p>Blade necesita una carpeta \"<code>cache</code>\" (donde se guardara una cache de las vistas  para su carga) y una carpeta \"<code>views</code>\" que ser\u00e1 la carpeta donde guardaremos los archivos de plantilla que creeemos. Todas las vistas Blade tienen que tener la extensi\u00f3n \"<code>.blade.php</code>\". Para configurar un proyecto donde vayamos a utilizar Blade, haremos lo siguiente:</p> <p>En la carpeta del proyecto creamos las carpetas \"<code>public</code>\" (ser\u00e1 la parte accesible desde el servidor web), \"<code>src</code>\" (guardaremos las clases que vayamos a crear si es el caso), \"<code>caches</code>\" y \"<code>views</code>\". En la carpeta \"<code>cache</code>\" el servidor web (Apache) necesita permiso de escritura, si estamos en Windows no hay problema, si estamos en Linux y sabes como hacerlo lo m\u00e1s seguro es que pongas como grupo de estaa carpetas a Apache y des los permisos apropiados. Para no complicarnos desde la terminal y en la carpeta de nuestro proyecto una vez creadas las carpetas tecleamos: \"<code>chmod 777 cache</code>\" .</p> <p>Una vez creada la estructura de nuestro proyecto iniciamos <code>composer</code> acu\u00e9rdate que esto lo hac\u00edamos con \"<code>composer init</code>\" contestamos a las preguntas iniciales como ya vimos y  las siguientes as\u00ed:</p> <ul> <li>\"<code>Would you like to define your dependencies (require) interactively [yes]?</code>\" en vez escribir no, le damos a <code>intro</code> (\"yes\" es la opci\u00f3n por defecto)</li> <li>\"<code>Search for a package:\"</code> ponemos \"<code>laravel-blade</code>\" y elegimos la opci\u00f3n: \"<code>philo/laravel-blade</code>\". A veces el paquete puede no aparecer (puede haber cambiado el nombre, el desarrollador...), no pasa nada, vete a Packagist , desde su buscador localiza el paquete y sigue las instrucciones, que b\u00e1sicamente son poner unas l\u00edneas en tu archivo \"<code>composer.json</code>\" y hacer \"<code>composer install</code>\". O generar el archivo y hacer el \"<code>composer require</code>\" despu\u00e9s como ya vimos.</li> <li>Para las dependencias de desarrollo (<code>dev</code>) contestamos que no.</li> <li>\"<code>Do you confirm generation [yes]?</code>\" le damos a <code>intro</code> (\"yes\" es la opci\u00f3n por defecto)</li> <li>\"<code>Would you like to install dependencies now [yes]?</code>\" le damos a <code>intro</code> (\"yes\" es la opci\u00f3n por defecto) . En este paso se descargan las librer\u00edas seleccionadas, en este caso: \"<code>philo/laravel-blade</code>\" en la carpeta \"<code>vendor</code>\" que si no existe se crear\u00e1.</li> </ul> <p>Captura de pantalla Ubuntu (Elaboraci\u00f3n propia) Una vez hecho esto podemos implementar la \"autocarga\" y el \"optimizador\" de la misma como ya vimos. Al final el archivo \"<code>composer.json</code>\" nos deber\u00eda quedar m\u00e1s o manos as\u00ed:</p> <p><code>{</code> <code>\"name\": \"usuario/usuario\",</code> <code>\"description\": \"Ejemplo Blade\",</code> <code>\"type\": \"project\",</code> <code>\"require\": {</code> <code>\"philo/laravel-blade\": \"^3.1\"</code> <code>},</code> <code>\"config\": {</code> <code>\"optimize-autoloader\": true</code> <code>},</code> <code>\"autoload\": {</code> <code>\"psr-4\": {</code> <code>\"Clases\\\\\": \"src\"</code> <code>}</code> <code>},</code> <code>\"license\": \"GNU/GPL\",</code> <code>\"authors\": [</code> <code>{</code> <code>\"name\": \"usuario\",</code> <code>\"email\": \"usuario@ejemplo.es\"</code> <code>}</code> <code>]</code></p> <p><code>}</code></p> <p>Hacemos \"<code>composer install</code>\" y ya estemos en condiciones de empezar a usar Blade en nuestro proyecto.</p> <p>Autoevaluaci\u00f3n</p> <p>\u00bf Necesitamos usar el Framework Laravel pasar sacar ventajas del gestor de plantillas Blade ?</p> <p>Verdadero</p> <p>Falso.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#231-separacion-de-la-logica-de-negocio-ii","title":"2.3.1.- Separaci\u00f3n de la l\u00f3gica de negocio (II).","text":"<p>OpenClipart-Vectors (Dominio p\u00fablico)</p> <p>Para utilizar Blade, y suponiendo que estamos trabajando con la estructura de directorios que se propuso en el apartado anterior, simplemente tienes que a\u00f1adir a tus p\u00e1ginas del directorio \"<code>public</code>\" lo siguiente:</p> <p><code>&lt;?php</code> <code>require 'vendor/autoload.php';</code> <code>use Philo\\Blade\\Blade;</code> <code>$views = '../views';</code> <code>$cache = '../cache';</code> <code>$blade = new Blade($views, $cache);</code></p> <p><code>echo $blade-&gt;view()-&gt;make('vista')-&gt;render();</code></p> <p>Esto me cargar\u00eda la vista \"<code>vista.blade.php</code>\" de la carpeta \"<code>views</code>\". F\u00edjate que solo hace falta poner el nombre de la vista y no la extensi\u00f3n \"<code>.blade.php</code>\".</p> <p>Para entender esto mejor desarrollaremos un proyecto con dos p\u00e1ginas, una para ver el listado de productos de la base de datos proyecto y otra para ver el listado de familias.</p> <p>A las clases Conexion, Productos y Familias que ya la hemos visto a lo largo del tema, vamos a modificarlas para usar <code>namespaces</code> en todo el proyecto. La estructura de nuestro proyecto de ejemplo podr\u00eda ser la siguiente:</p> <p>Captura de pantalla Visual Studio Code (Elaboraci\u00f3n propia)</p> <ul> <li>En \"<code>src</code>\" tendremos las clases para conectarnos a la base de dato y recuperar los datos de familias y productos.</li> <li>En \"<code>public</code>\" Las dos p\u00e1ginas que realmente mostraremos</li> <li>En \"<code>views</code>\" crearemos una carpeta \"<code>plantillas</code>\" (pondremos las plantillas que reusaremos las veces que queramos) y las dos vistas, la que me generar\u00e1 el listado de productos y la que me generar\u00e1 el listado de familias.</li> </ul> <p>Vamos a ello:</p> <p>Las clases ya sabemos como hacerlas simplemente vamos a poner en el encabezado de las mismas, lo siguiente. Ten en cuenta que el nombre del namespace viene dado por lo que pusimos en el <code>\"autoload</code>\" del <code>composer</code> y la carpeta de las mismas tambi\u00e9n. Si los has cambiado debes reflejarlo en \"<code>composer.json</code>\"</p> <p><code>&lt;?php</code> <code>namespace Clases;</code> <code>use PDO;</code></p> <p><code>use PDOException;</code></p> <p>Al usar namespace es necesario poner \"<code>use</code>\" a los m\u00e9todos y la clase <code>PDO.</code> Si no lo hacemos para no tener errores tendr\u00edamos que andar poniendo \"<code>$conexion = new \\PDO(. . . )</code>, <code>catch(\\PDOException)</code> . . .\"</p> <p>Las p\u00e1ginas que vamos a ver (familias y productos) comporten una estructura como el esqueleto html,  la carga de bootstrap  o las hojas de estilos, todo esto lo podemos meter en la plantilla y as\u00ed nos evitamos tener que repetir el mismo c\u00f3digo una y otra vez. Veamos la plantilla</p> <p><code>&lt;!doctype html&gt;</code> <code>&lt;html lang=\"es\"&gt;</code> <code>&lt;head&gt;</code> <code>&lt;meta charset=\"UTF-8\"&gt;</code> <code>&lt;meta name=\"viewport\"</code> <code>content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"&gt;</code> <code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;</code> <code>&lt;!-- css para usar Bootstrap --&gt;</code> <code>&lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\"&gt;</code> <code>&lt;title&gt;@yield('titulo')&lt;/title&gt;</code> <code>&lt;/head&gt;</code> <code>&lt;body style=\"background:#0277bd\"&gt;</code> <code>&lt;div class=\"container mt-3\"&gt;</code> <code>&lt;h3 class=\"text-center mt-3 mb-3\"&gt;@yield('encabezado')&lt;/h3&gt;</code> <code>@yield('contenido')</code> <code>&lt;/div&gt;</code> <code>&lt;/body&gt;</code></p> <p><code>&lt;/html&gt;</code></p> <p>cada instrucci\u00f3n de Blade viene precedida de \"<code>@</code>\". En las l\u00edneas 10, 14 y 15 ver\u00e1s \"<code>@yield('. . .')</code>\"  se usa para mostrar el contenido de una secci\u00f3n determinada. Para cada p\u00e1gina cambiaremos: contenido, t\u00edtulo y cabecera.</p> <p>Veamos como hacemos uso de esta plantilla en las vistas:</p> <p>Vista: \"<code>vistaProductos.blade.php</code>\"</p> <p><code>@extends('plantillas.plantilla1')</code> <code>@section('titulo')</code> <code>{{$titulo}}</code> <code>@endsection</code> <code>@section('encabezado')</code> <code>{{$encabezado}}</code> <code>@endsection</code> <code>@section('contenido')</code> <code>&lt;table class=\"table table-striped\"&gt;</code> <code>&lt;thead&gt;</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"col\"&gt;C\u00f3digo&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Nombre&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Nombre Corto&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Precio&lt;/th&gt;</code> <code>&lt;/tr&gt;</code> <code>&lt;/thead&gt;</code> <code>&lt;tbody&gt;</code> <code>@foreach($productos as $item)</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"row\"&gt;{{$item-&gt;id}}&lt;/th&gt;</code> <code>&lt;td&gt;{{$item-&gt;nombre}}&lt;/td&gt;</code> <code>&lt;td&gt;{{$item-&gt;nombre_corto}}&lt;/td&gt;</code> <code>@if($item-&gt;pvp&gt;100)</code> <code>&lt;td class='text-danger'&gt;{{$item-&gt;pvp}}&lt;/td&gt;</code> <code>@else</code> <code>&lt;td class='text-success'&gt;{{$item-&gt;pvp}}&lt;/td&gt;</code> <code>@endif</code> <code>&lt;/tr&gt;</code> <code>@endforeach</code> <code>&lt;/tbody&gt;</code> <code>&lt;/table&gt;</code></p> <p><code>@endsection</code></p> <p>Vista \"<code>vistaFamilias.blade.php</code>\"</p> <p><code>@extends('plantillas.plantilla1')</code> <code>@section('titulo')</code> <code>{{$titulo}}</code> <code>@endsection</code> <code>@section('encabezado')</code> <code>{{$encabezado}}</code> <code>@endsection</code></p> <p><code>@section('contenido')</code> <code>&lt;table class=\"table table-striped\"&gt;</code> <code>&lt;thead&gt;</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"col\"&gt;C\u00f3digo&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Nombre&lt;/th&gt;</code> <code>&lt;/tr&gt;</code> <code>&lt;/thead&gt;</code> <code>&lt;tbody&gt;</code> <code>@foreach($familias as $item)</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"row\"&gt;{{$item-&gt;cod}}&lt;/th&gt;</code> <code>&lt;td&gt;{{$item-&gt;nombre}}&lt;/td&gt;</code></p> <pre><code>        `&lt;/tr&gt;`  \n    `@endforeach`  \n    `&lt;/tbody&gt;`  \n`&lt;/table&gt;`\n</code></pre> <p><code>@endsection</code></p> <p>Lo primero que hacemos con \"<code>@extends('...')</code>\" es llamar a la plantilla, para ello indicamos la ruta (f\u00edjate que la extensi\u00f3n \"<code>.blade.php</code>\" no hace falta ponerla). Acu\u00e9rdate que creamos tres \"<code>yields</code>\" uno llamado t\u00edtulo, otro encabezado y otro contenido, para rellenarlos ponemos el bloque \"<code>@section('...'),  @endsection</code>\" con el nombre que pusimos en los \"<code>yields</code>\".</p> <p>A las vistas mandamos unas variables (en el apartado siguiente veremos como). A la vista \"<code>vistaProductos.blade.php</code>\" mandamos las variables \"<code>$titulo, $encabezado y $productos</code>\", <code>$producto</code> trae los productos de las base de datos (los mandamos con un \"<code>fetchAll()</code>\" de una consulta a la tabla productos). Cuando usamos Blade no hace falta poner \"<code>&lt;?php echo $titulo; ?&gt;</code>\"  que es como lo hemos hecho hasta ahora, nos basta con poner \"<code>{{...}}</code>\"</p> <p>Puedes observar ademas que tambi\u00e9n podemos poner un bucle para recorrer, en este caso, los productos \"<code>@foreach(...), endforeach</code>\".</p> <p>De igual manera con un bloque \"<code>@if, @else, @endif</code>\" pintamos los precios de mas de 100\u20ac de rojo y el resto de verde.</p> <p>El c\u00f3digo HTML lo ponemos tal cual, si necesit\u00e1semos poner c\u00f3digo PHP en una pagina Blade lo pondr\u00edamos entre las directivas \"<code>@php, @endphp</code>\"</p> <p>En el enlace siguiente tenemos un manual muy completo de Blade en \"styde.net\"</p> <p>Manual Blade</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#24-generacion-del-interface-de-usuario","title":"2.4.- Generaci\u00f3n del interface de usuario.","text":"<p>kreatikar (Pixabay License)</p> <p>En el apartado anterior configuramos las vistas y una plantilla para ahorrarnos repetir c\u00f3digo, a las vistas las pasamos unas variables como titulo encabezado, las listas de datos que queramos mostrar . . . Veamos como podemos llamar a estas vistas y pasar variables a las mismas.</p> <p>En la carpeta \"<code>public</code>\" (la \u00fanica carpeta que realmente necesita ser accesible para el navegador) vamos a tener dos archivos: \"<code>familias.php</code>\" que se encargar\u00e1 de llamar a la vista \"<code>vistaFamilias.blade.php</code>\" y pasar las variables necesarias, y \"<code>productos.php</code>\" que har\u00e1 lo mismo con la vista \"<code>vistaProductos.blade.php</code>\". F\u00edjate en el c\u00f3digo.</p> <p>P\u00e1gina: \"<code>productos.php</code>\"</p> <p><code>&lt;?php</code></p> <p><code>require '../vendor/autoload.php';</code></p> <p><code>use Philo\\Blade\\Blade;</code> <code>use Clases\\Producto;</code></p> <p><code>$views = '../views';</code> <code>$cache = '../cache';</code></p> <p><code>$blade = new Blade($views, $cache);</code> <code>$titulo='Productos';</code> <code>$encabezado='Listado de Productos';</code> <code>$productos=(new Producto())-&gt;recuperarProductos();</code></p> <p><code>echo $blade-&gt;view()-&gt;make('vistaProductos', compact('titulo', 'encabezado', 'productos'))-&gt;render();</code></p> <p>El funcionamiento es muy sencillo:</p> <ol> <li>Con el \"<code>require</code>\" llamamos al archivo \"<code>autoload.php</code>\" de la carpeta \"<code>vendor</code>\" (esta carpeta la crea autom\u00e1ticamente \"composer\" con las librer\u00edas y clases necesarias. En este proyecto lo necesario para que funcione Blade y el autoload)</li> <li>Las l\u00edneas del \"<code>use</code>\" son para poder usar nuestras Clases y las de \"<code>Philo\\Blade</code>\" (acu\u00e9rdate del <code>namespace</code> de las mismas que era Clase).</li> <li>Las siguientes son para indicar la ruta relativa de las carpetas \"<code>views</code>\" y \"<code>cache</code>\" y guardarla en sendas variables.</li> </ol> <p>En la siguiente nos creamos un objeto de la clase \"<code>Blade\"</code>, le pasamos las rutas de las carpetas \"<code>views</code>\" y \"<code>cache</code>\" e inicializamos las variables que pasaremos a la vista: <code>$titulo, $encabezado y $productos</code>. Esta \u00faltima l\u00ednea la hemos simplificado, en realidad pod\u00edamos haber puesto: <code>$productos = new Productos();</code></p> <ol> <li><code>$productos-&gt;recuperarProductos();</code></li> <li>En la \u00faltima l\u00ednea lamamos a la vista: '<code>vistaProductos'</code>de la carpeta \"<code>views</code>\" y le pasamos usando \"<code>compact()</code>\" las tres variables: <code>$titulo, $encabezado y $productos</code>. En realidad a la vista hay que pasarle un array asociativo \"<code>nombre de la variable=&gt;valor</code>\" que es lo que hace precisamente el m\u00e9todo \"<code>compact()</code>\".</li> </ol> <p>P\u00e1gina: \"<code>familias.php</code>\"</p> <p><code>&lt;?php</code></p> <p><code>require '../vendor/autoload.php';</code></p> <p><code>use Philo\\Blade\\Blade;</code> <code>use Clases\\Familia;</code></p> <p><code>$views = '../views';</code> <code>$cache = '../cache';</code></p> <p><code>$blade = new Blade($views, $cache);</code> <code>$titulo='Familias';</code> <code>$encabezado='Listado de Familias';</code> <code>$familias=(new Familia())-&gt;recuperarFamilias();</code></p> <p><code>echo $blade-&gt;view()-&gt;make('vistaFamilias', compact('titulo', 'encabezado', 'familias'))-&gt;render();</code></p> <p>Si te fijas es igual a lo que hicimos en \"<code>productos.php</code>\".</p> <p>A continuaci\u00f3n se deja un enlace con los archivos del proyecto. Para poder ver el mismo funcionando tendr\u00e9is que tener Composer instalado hacer \"<code>composer init</code>\" instalar la librer\u00eda de Blade y  autoload y hacer  \"<code>composer install\"</code>. Descargar archivos. (zip - 5,71 KB)</p> <p>Para saber m\u00e1s</p> <p>En el enlace siguiente hay documentaci\u00f3n sobre la  funci\u00f3n \"<code>compact()</code>\"  : Enlace a la documentaci\u00f3n oficial.</p> <p>Ejercicio resuelto</p> <p>A partir de la p\u00e1gina de \"login\" que ya vimos en el ejemplo 1.7.1 modifica el ejemplo que acabamos de ver para poder acceder a listar \"productos\" y \"familias\" solo si estamos validados.</p> <p>Usa Blade para crear la vista que cargue la p\u00e1gina de \"login\" y modifica listar usuarios y productos para que muestren el usuario con el que estamos logeados y el bot\u00f3n cerrar sesi\u00f3n.</p> <p>Cuando nos validemos accederemos a una p\u00e1gina con dos \"botones/enlaces\" uno para ir a \"<code>familias.php</code>\" y otro a \"<code>productos.php</code>\".</p> <p>Se recomienda abordar este ejercicio desde cero para repasar todos los conceptos.</p> <p>Autoevaluaci\u00f3n</p> <p>Las plantillas que crees en Blade es preferible alojarlas:</p> <p>En un lugar no accesible por el servidor web.</p> <p>En un lugar accesible por el servidor web.</p>"},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#anexo-1","title":"Anexo 1","text":""},{"location":"Moduls/ARXIU/2425/DWES/Programaci%C3%B3orientadaaobjectesPHP.html#ejemplo-de-como-podemos-pasar-distintos-numeros-de-parametros-a-un-constructor-simulando-la-sobrecarga","title":"Ejemplo de como podemos pasar distintos n\u00fameros de par\u00e1metros a un constructor, simulando la sobrecarga.","text":"<p><code>&lt;?php</code></p> <p><code>class Persona</code> <code>{</code> <code>private $nombre;</code> <code>private $perfil;</code></p> <pre><code>`public function __construct()`  \n`{`  \n    `$num = func_num_args(); //guardamos el n\u00famero de argumentos`  \n    `switch ($num) {`  \n        `case 0:`  \n            `break;`  \n        `case 1:`  \n            `//recuperamos el argumento pasado`  \n            `$this-&gt;nombre = func_get_arg(0); // los argumentos empiezan a contar por 0`  \n            `break;`  \n        `case 2:`  \n            `$this-&gt;nombre = func_get_arg(0);`  \n            `$this-&gt;perfil = func_get_arg(1);`  \n    `}`\n\n`}`\n</code></pre> <p><code>}</code></p> <p><code>//Ahora ser\u00e1 v\u00e1lido el siguiente c\u00f3digo.</code> <code>$persona1 = new Persona();</code> <code>$persona2 = new Persona(\"Alicia\");</code> <code>$persona3 = new Persona(\"Alicia\", \"P\u00fablico\");</code> <code>var_dump($persona1);</code> <code>echo \"&lt;break&gt;\";</code> <code>var_dump($persona2);</code> <code>echo \"&lt;break&gt;\";</code></p> <p><code>var_dump($persona3);</code></p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html","title":"Arquitectures Web","text":"Durada i criteris d'avaluaci\u00f3 <p>Durada estimada: 4 sessions</p> <p>Resultat d'aprenentatge:</p> <ol> <li>Selecciona les arquitectures i tecnologies de programaci\u00f3 Web en entorn servidor, analitzant les seves capacitats i caracter\u00edstiques pr\u00f2pies.</li> </ol> <p>Criteris d'avaluaci\u00f3:</p> <ol> <li>S'han caracteritzat i diferenciat els models d'execuci\u00f3 de codi en el servidor i en el client Web.</li> <li>S'han reconegut els avantatges que proporciona la generaci\u00f3 din\u00e0mica de p\u00e0gines Web i les seves difer\u00e8ncies amb la inclusi\u00f3 de sent\u00e8ncies de guions a l'interior de les p\u00e0gines Web.</li> <li>S'han identificat els mecanismes d'execuci\u00f3 de codi en els servidors Web.</li> <li>S'han reconegut les funcionalitats que aporten els servidors d'aplicacions i la seva integraci\u00f3 amb els servidors Web.</li> <li>S'han identificat i caracteritzat els principals llenguatges i tecnologies relacionats amb la programaci\u00f3 Web en entorn servidor.</li> <li>S'han verificat els mecanismes d'integraci\u00f3 dels llenguatges de marques amb els llenguatges de programaci\u00f3 en entorn servidor.</li> <li>S'han reconegut i avaluat les eines de programaci\u00f3 en entorn servidor.</li> </ol> <p>Les arquitectures web defineixen la forma en qu\u00e8 les p\u00e0gines d'un lloc web estan estructurades i enlla\u00e7ades entre si. Les aplicacions web es basen en en model client-servidor.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#client-servidor","title":"Client / Servidor","text":"Arquitectura Client Servidor <p>Un o diversos client accedeixen a un servidor. La noves arquitectures substitueixen el servidor per un balanceador de c\u00e0rrega de manera que N servidors donen resposta a M clients.</p> <p>En les aplicacions web, el client \u00e9s el navegador web.</p> <p>El client fa la petici\u00f3 (request normalment mitjan\u00e7ant el protocol GET mitjan\u00e7ant el port 80/443) i el servidor respon (response).</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#pagina-web-dinamica","title":"P\u00e0gina web din\u00e0mica","text":"<p>Si la p\u00e0gina web \u00fanicament cont\u00e9 HTML + CSS es considera una p\u00e0gina est\u00e0tica. Per a generar una p\u00e0gina din\u00e0mica, on el contingut canvia, avui dia tenim dues alternatives:</p> <ul> <li>Utilitzar un llenguatge de servidor que generi el contingut, ja sigui mitjan\u00e7ant l'acc\u00e9s a una BD o serveis externs.</li> <li>Utilitzar serveis REST de tercers invocats des de JS.</li> </ul> P\u00e0gina web din\u00e0mica <p>Les tecnologies empleadadas (i els perfils de desenvolupament associats) per a la generaci\u00f3 de p\u00e0gines din\u00e0miques s\u00f3n:</p> Perfil Eina Tecnologia Front-end / client Navegador Web HTML + CSS + Javascript Back-end / servidor Servidor Web + BBDD PHP, Python, Ruby, Java / JSP, .Net / .asp <p>Perfil Full-stack</p> <p>En les ofertes de treball quan fan refer\u00e8ncia a un Full-stack developer, estan buscant un perfil que domina tant el front-end com el back-end.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#single-page-application","title":"Single Page Application","text":"<p>Avui dia, gran part del desenvolupament web est\u00e0 transicionando d'una arquitectura web client-servidor cl\u00e0ssica on el client realitza una anomenada al backend, per una arquitectura SPA on el client guanya molt major pes i segueix una programaci\u00f3 reactiva que accedeix a serveis remots REST que realitzen les operacions (comunicandose mitjan\u00e7ant JSON).</p> Arquitectura tradicional vs SPA"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#arquitectura-de-3-capes","title":"Arquitectura de 3 capes","text":"<p>Cal distingir entre capes f\u00edsiques (tier) i capes l\u00f2giques (layer).</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#tier","title":"Tier","text":"<p>Capa f\u00edsica d'una arquitectura. Suposa un nou element maquinari separat f\u00edsicament. Les capes f\u00edsiques m\u00e9s allunyades del client estan m\u00e9s protegides, tant per firewalls com per VPN.</p> <p>Exemple d'arquitectura en tres capes f\u00edsiques (3 tier):</p> <ul> <li>Servidor Web</li> <li>Servidor d'Aplicacions</li> <li>Servidor de base de dades</li> </ul> Arquitectura de tres capes f\u00edsiques <p>Cl\u00faster en tiers</p> <p>No confondre les capes amb la quantitat de servidors. Actualment es treballa amb arquitectures amb m\u00faltiples servidors en una mateixa capa f\u00edsica mitjan\u00e7ant un cl\u00faster, per a oferir toler\u00e0ncia a errors i escalabilitat horitzontal.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#layer","title":"Layer","text":"<p>En canvi, les capes l\u00f2giques (layers) organitzen el codi respecte a la seva funcionalitat:</p> <ul> <li>Presentaci\u00f3</li> <li>Negoci / Aplicaci\u00f3 / Proc\u00e9s</li> <li>Dades / Persist\u00e8ncia</li> </ul> <p>Com s'observa, cadascuna de les capes es pot implementar amb diferents llenguatges de programaci\u00f3 i/o eines.</p> Arquitectura de tres capes f\u00edsiques en tres l\u00f2giques"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#mvc","title":"MVC","text":"<p>Model-View-Controller o Model-Vista-Controlador \u00e9s un model d'arquitectura que separa les dades i la l\u00f2gica de negoci respecte a la interf\u00edcie d'usuari i el component encarregat de gestionar els esdeveniments i les comunicacions.</p> <p>En separar els components en elements conceptuals permet reutilitzar el codi i millorar la seva organitzaci\u00f3 i manteniment. Els seus elements s\u00f3n:</p> <ul> <li>Model: representa la informaci\u00f3 i gestiona tots els accessos a aquesta, tant consultes com actualitzacions provinents, normalment, d'una base de dades. S'accedeix via el controlador.</li> <li>Controlador: Respon a les accions de l'usuari, i realitza peticions al model per a sol\u00b7licitar informaci\u00f3. Despr\u00e9s de rebre la resposta del model, li envia les dades a la vista.</li> <li>Vista: Presenta a l'usuari de manera visual el model i les dades preparades pel controlador. L'usuari interactura amb la vista i realitza noves peticions al controlador.</li> </ul> <p>Ho estudiarem en m\u00e9s detall en aprofundir en l'\u00fas dels frameworks PHP.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#decisions-de-disseny","title":"Decisions de disseny","text":"<ul> <li>Quina grand\u00e0ria t\u00e9 el projecte?</li> <li>Quins llenguatges de programaci\u00f3 conec? Val la pena l'esfor\u00e7 d'aprendre un nou?</li> <li>Usar\u00e9 eines de codi obert o eines propiet\u00e0ries? Quin \u00e9s el cost d'utilitzar solucions comercials?</li> <li>Programar\u00e9 l'aplicaci\u00f3 jo nom\u00e9s o formar\u00e9 part d'un grup de programadors?</li> <li>Conte amb algun servidor web o gestor de base de dades disponible o puc decidir lliurement utilitzar el que cregui necessari?</li> <li>Quin tipus de llic\u00e8ncia aplicar\u00e9 a l'aplicaci\u00f3 que desenvolupi?</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#eines","title":"Eines","text":""},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#servidor-web","title":"Servidor Web","text":"<p>Programari que rep peticions HTTP (GET, POST, DELETE, ...). Retorna el recurs sol\u00b7licitat (HTML, CSS, JS, JSON, imatges, etc...)</p> <p>El producte m\u00e9s implantant \u00e9s Apache Web Server (https://httpd.apache.org/), creat en 1995.</p> <ul> <li>Programari lliure i multiplataforma</li> <li>Sistema de m\u00f2duls din\u00e0mics \u2192 PHP, Python, Perl</li> <li>Utilitza l'arxiu <code>.htaccess</code> per a la seva configuraci\u00f3</li> </ul> <p>En l'actualitat, Apache est\u00e0 perdent mercat respecte a Nginx (https://www.nginx.com). Es tracta d'un producte m\u00e9s modern (2004) i que en determinats escenaris t\u00e9 millor rendiment que Apache.</p> <ul> <li>Comparativa servidors web: https://w3techs.com/technologies/history_overview/web_server/ms/q</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#servidor-daplicacions","title":"Servidor d'Aplicacions","text":"<ul> <li>Programari que ofereix serveis addicionals als d'un servidor web:<ul> <li>Clustering</li> <li>Balanceig de c\u00e0rrega</li> <li>Toler\u00e0ncia a fallades</li> </ul> </li> <li>Tomcat (http://tomcat.apache.org/) \u00e9s el servidor d'aplicacions open source i multiplataforma de refer\u00e8ncia per a una arquitectura Java.<ul> <li>Cont\u00e9n un contenidor Web Java que interpreta Servlets i JSP.</li> </ul> </li> </ul> <p>Info</p> <p>Tant els servidors web com els servidors d'aplicacions els estudiarem en profunditat en el m\u00f2dul de \"Desplegament d'Aplicacions Web\".</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#llenguatges-en-el-servidor","title":"Llenguatges en el servidor","text":"<p>Les aplicacions que generen les p\u00e0gines web es programen en algun dels seg\u00fcents llenguatges:</p> <ul> <li>PHP</li> <li>JavaEE: Servlets / JSP</li> <li>Python</li> <li>ASP.NET \u2192 Visual Basic .NET / C#</li> <li>Ruby</li> <li>...</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#javaee","title":"JavaEE","text":"<p>Java Enterprise Edition \u00e9s la soluci\u00f3 Java per al desenvolupament d'aplicacions enterprise. Ofereix una arquitectura molt completa i complexa, escalable i tolerant a fallades. Plantejada per a aplicacions per a grans sistemes.</p> <p></p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#php","title":"PHP","text":"<ul> <li>Llenguatge de prop\u00f2sit general dissenyat per al desenvolupament de p\u00e0gines web din\u00e0miques</li> <li>Al principi, llenguatge no tipado.</li> <li>Actualment en la versi\u00f3 8. Es recomana almenys utilitzar una versi\u00f3 superior a la 7.0.</li> <li>Codi embegut en el HTML</li> <li>Instruccions entre etiquetes <code>&lt;?php</code> y <code>?&gt;</code><ul> <li>Per a generar codigo dins de PHP, podem usar la instrucci\u00f3 <code>tiro</code></li> </ul> </li> <li>Multitud de llibreries i frameworks:<ul> <li>Laravel, Symfony, Codeigniter, Zend</li> </ul> </li> </ul> <p>La seva documentaci\u00f3 \u00e9s bastant completa: https://www.php.net/manual/es/index.php</p> <p>El seg\u00fcent mapa mental mostra un resum dels seus elements:</p> Elements del llenguatge PHP <p>Durant les seg\u00fcents unitats estudiarem PHP en profunditat.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#posada-en-marxa","title":"Posada en marxa","text":"<p>Per a poder treballar amb un entorn de desenvolupament local, hem de preparar el nostre entorn de desenvolupament amb les eines comentades. Al llarg del curs utilitzarem la versi\u00f3 8 de PHP.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#xampp","title":"XAMPP","text":"<p>XAMPP (https://www.apachefriends.org/es/index.html) \u00e9s una distribuci\u00f3 composta amb el programari necessari per a desenvolupar en entorn servidor. Es compon de les seg\u00fcents eines sobre la base de les seves sigles:</p> <ul> <li>X per al sistema operatiu (per aquest motiu es conegui tamnbi\u00e9n com LAMP o WAMP).</li> <li>A per a Apache.</li> <li>M per a MySQL / MariaDB. Tamb\u00e9 inclou phpMyAdmin per a l'administraci\u00f3 de la base de dades des d'una interf\u00edcie web.</li> <li>P per a PHP.</li> <li>l'\u00faltima P per a Perl.</li> </ul> <p>Des de la pr\u00f2pia p\u00e0gina es pot descarregar l'arxiu executable per al sistema operatiu del nostre ordinador. Es recomana llegir la FAQ de cada sistema operatiu amb instruccions per a la seva posada en marxa.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#docker","title":"Docker","text":"<p>Docker (https://www.docker.com) \u00e9s un gestor de contenidors, considerant un contenidor com un m\u00e8tode de virtualitzaci\u00f3 del sistema operatiu.</p> <p>L'\u00fas de contenidors requereix menys recursos que una m\u00e0quina virtual, per tant, el seu llan\u00e7ament i detenci\u00f3 s\u00f3n m\u00e9s r\u00e0pids que les m\u00e0quines virtuals.</p> <p>Aix\u00ed doncs, Docker permet crear, provar i implementar aplicacions r\u00e0pidament, a partir d'una s\u00e8rie de plantilles que es coneixen com a imatges de Docker.</p> <p>Per a aix\u00f2 \u00e9s necessari tenir instal\u00b7lat Docker Desktop (https://www.docker.com/products/docker-desktop) en els nostres entorns de desenvolupament (el qual ja inclou en nucleo de Docker i l'eina docker compose). En els ordinadors de l'aula ja est\u00e0 instal\u00b7lat. Per a instal\u00b7lar-ho a casa, en el cas de Windows, \u00e9s necessari instal\u00b7lar pr\u00e8viament WSL 2, el qual \u00e9s un subsistema de Linux dins de Windows.</p> <p>Al llarg del curs anirem creant diferents contenidors amb els serveis necessaris, de manera que cada vegada nom\u00e9s treballem amb el programari m\u00ednim.</p> <p>Versions</p> <p>Al llarg del curs usarem PHP <code>8.0</code>. Respecte a Docker, per a escriure les anotacions hem utilitzat la version <code>20.10</code> i la version <code>2.19</code> de docker compose. Finalment, la versi\u00f3 de Docker Desktop que hem utilitzat \u00e9s la <code>4.0</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#plantilla-servidor-web-php","title":"Plantilla Servidor Web + PHP","text":"<p>Docker es basa en l'\u00fas d'imatges per a crear contenidors. Docker Compose simplifica el treball amb m\u00faltiples contenidors, i per aix\u00f2, per a facilitar el arraque, ens centrarem en Docker Compose utilitzant una plantilla que \u00fanicament contindr\u00e0 com a serveis Apache/Nginx i PHP.</p> <p>Per a aix\u00f2, emplenarem l'arxiu <code>docker-compose.yaml</code> amb:</p> Apache i PHPNginx i PHP <pre><code># Services\nservices:\n  # Apache + PHP\n  Apache_php:\n    image: php:8-Apache\n    # Preparem un volum per a emmagatzemar el nostre codi\n    volumes:\n      - ./src/:/var/www/html\n    expose:\n      - 80\n    ports:\n      - 80:80\n</code></pre> <pre><code># Services\nservices:\n\n  nginx:\n    image: nginx:1.19\n    ports:\n      - 80:80\n    volumes:\n      - ./src:/var/www/php\n      - ./.docker/nginx/conf.d:/etc/nginx/conf.d # carreguem la configuraci\u00f3 d'un fitxer extern\n    depends_on:\n      - php   # enllacem nginx amb php\n\n  php:\n    image: php:8.0-fpm\n    working_dir: /var/www/php\n    volumes:\n      - ./src:/var/www/php\n</code></pre> <p>Dins de la carpeta que contingui aquest arxiu, hem de crear una carpeta <code>src</code> on col\u00b7locarem el nostre codi font. Per a facilitar la posada en marxa, teniu la plantilla de Apache/PHP (versi\u00f3 2 amb <code>a2enmod rewrite</code>) o Nginx/PHP disponible per a la seva desc\u00e0rrega.</p> <p>Quan estiguem llestos, llan\u00e7arem el servei mitjan\u00e7ant:</p> <pre><code>docker-compose up -d\n</code></pre> <p>Si volem veure el contingut dels arxius de log del servei utilitzarem:</p> <pre><code>docker-compose logs -f\n</code></pre> <p>Per a copiar un arxiu des del nostre sistema a l'interior del contenidor:</p> <pre><code>docker cp ./miFichero idContenedor:/tmp\n</code></pre> <p>I a l'inrev\u00e9s, si volem consultar un arxiu contingut dins d'un contenidor, el copiarem al nostre sistema:</p> <pre><code>docker cp idContenedor:/tmp/archivoAConsultar.txt ./\n</code></pre> <p>Finalment, si volem accedir a un terminal interactiu dins del contenidor:</p> <pre><code>docker exec -it nombreContenedor bash\n</code></pre> <p>Altres comandos que podem arribar a utilitzar s\u00f3n:</p> <ul> <li><code>docker ps</code>: Veure els contenidors que es estan executant</li> <li><code>docker ps -a</code>: Veure tots els contenidors</li> <li><code>docker start nombreContenedor</code>: Arrencar un contenidor</li> <li><code>docker images</code>: Veure les imatges que tenim descarregades</li> </ul> <p>Una altra forma m\u00e9s senzilla per a llan\u00e7ar de nou els contenidors i gestionar-los una vegada creats \u00e9s utilitzar la interf\u00edcie gr\u00e0fica que ofereix Docker Desktop:</p> Arrencada de contenidor mitjan\u00e7ant Docker Desktop <p>Docker stack</p> <p>Existeixen diverses opcions mitjan\u00e7ant Docker que ofereixen solucions completes i empaquetes per a tot el stack de desenvolupament. En posteriors sessions utilitzarem tant Devilbox (http://devilbox.org) com Laradock (https://laradock.io)</p> <p>Per\u00f2 vull saber com funciona...</p> <p>En el m\u00f2dul de Desplegament d'aplicacions estudiareu en profunditat, a m\u00e9s de Docker, Apache i altres serveis que ens serviran d'ajuda per al desenvolupament en entorn servidor.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#entorn-de-desenvolupament","title":"Entorn de desenvolupament","text":"<p>En aquest curs utilitzarem PhpStorm i IntelliJ (https://www.jetbrains.com/) at\u00e8s que podem fer servir llic\u00e8ncies d'Education, encara que tamb\u00e9 es podria utilitzar Visual Studio Code (https://code.visualstudio.com) com a entorn de desenvolupament (IDE). Una altra possibilitat \u00e9s utilitzar Eclipse, encara que \u00e9s un entorn bastant pesat.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#hola-mon","title":"Hola M\u00f3n","text":"<p>I com no, el nostre primer exemple ser\u00e0 un Hola M\u00f3n en PHP.</p> <p>Si nomenem l'arxiu com <code>index.php</code>, en accedir a <code>http://localhost</code> autom\u00e0ticament carregar\u00e0 el resultat:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Hola M\u00f3n&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;?php\n        echo \"Hola M\u00f3n\";\n    ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#referencies","title":"Referencies","text":"<ul> <li>Curs d'introducci\u00f3 a Docker, per Sergi Garc\u00eda Barea* : https://sergarb1.github.io/CursoIntroduccionADocker/</li> <li>Article Arquitectures Web i la seva evoluci\u00f3</li> <li>Lloc web d'Aitor Medrano https://aitor-medrano.github.io/</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT01ArquitecturesWeb.html#activitats","title":"Activitats","text":"<p>UT101. Instal\u00b7la i configura un entorn complet de desenvolupament que inclogui PHP, Apache i MySQL. </p> <p>UT102. Cerca en internet quins s\u00f3n els tres frameworks PHP m\u00e9s utilitzats, i indica:</p> <pre><code>* Nom i URL\n* Any de creaci\u00f3\n* \u00daltima versi\u00f3\n</code></pre> <p>UT103. Cerca tres ofertes de treball de desenvolupament de programari a Infojobs o LinkedIn que citin PHP i anota:</p> <pre><code>* Empresa + lloc de feina + frameworks PHP + requ\u00edsitos + sou + enllaci a l'oferta.\n</code></pre> <p>UT104. Una vegada arrencat el servei PHP, crea l'arxiu <code>info.php</code> i afegeix el seg\u00fcent fragment de codi:</p> <pre><code>``` php\n&lt;?php phpinfo() ?&gt;\n```\nAnota els valors de:\n\n* Versi\u00f3 de PHP\n* Loaded Configuration File\n* `memory_limit`\n* `DOCUMENT_ROOT`\n</code></pre> <p>UT105. Obre l'arxiu <code>php.ini-production</code> que est\u00e0 dins del contenidor (pots esbrinar la ruta a partir de la propietat Configuration File (php.ini) Path) i indica per a qu\u00e8 serveixen les seg\u00fcents propietats i quins valors contenen:</p> <pre><code>* `file_uploads`\n* `max_execution_estafi`\n* `short_open_tag`\n\n!!! noti \"php.ini\"\n    \u00c9s l'arxiu de configuraci\u00f3 de PHP, i en tota instal\u00b7laci\u00f3 v\u00e9nen dues plantilles (`php.ini-development` i `php.ini-production`) perqu\u00e8 triem els valors m\u00e9s concordes al nostre projecte i creiem el nostre arxiu propi de `php.ini`.\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html","title":"El lenguaje PHP","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 26 sesiones</p> <p>Resultado de aprendizaje y criterios de evaluaci\u00f3n:</p> <ol> <li> <p>Escribe sentencias ejecutables por un servidor Web reconociendo y aplicando procedimientos de integraci\u00f3n del c\u00f3digo en lenguajes de marcas.</p> <ol> <li>Se han reconocido los mecanismos de generaci\u00f3n de p\u00e1ginas Web a partir de lenguajes de marcas con c\u00f3digo embebido.</li> <li>Se han identificado las principales tecnolog\u00edas asociadas.</li> <li>Se han utilizado etiquetas para la inclusi\u00f3n de c\u00f3digo en el lenguaje de marcas.</li> <li>Se ha reconocido la sintaxis del lenguaje de programaci\u00f3n que se ha de utilizar.</li> <li>Se han escrito sentencias simples y se han comprobado sus efectos en el documento resultante.</li> <li>Se han utilizado directivas para modificar el comportamiento predeterminado.</li> <li>Se han utilizado los distintos tipos de variables y operadores disponibles en el lenguaje.</li> <li>Se han identificado los \u00e1mbitos de utilizaci\u00f3n de las variables.</li> </ol> </li> </ol> <p>Resultado de aprendizaje:</p> <ol> <li>Escribe bloques de sentencias embebidos en lenguajes de marcas, seleccionando y utilizando las estructuras de programaci\u00f3n.</li> </ol> <p>Criterios de evaluaci\u00f3n:</p> <ol> <li>Se han utilizado mecanismos de decisi\u00f3n en la creaci\u00f3n de bloques de sentencias.</li> <li>Se han utilizado bucles y se ha verificado su funcionamiento.</li> <li>Se han utilizado \u201carrays\u201d para almacenar y recuperar conjuntos de datos.</li> <li>Se han creado y utilizado funciones.</li> <li>Se han utilizado formularios web para interactuar con el usuario del navegador Web.</li> <li>Se han empleado m\u00e9todos para recuperar la informaci\u00f3n introducida en el formulario.</li> <li>Se han a\u00f1adido comentarios al c\u00f3digo.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#php","title":"PHP","text":"<ul> <li>Acr\u00f3nimo de Personal Home Page</li> <li>Lenguaje de prop\u00f3sito general, aunque su fuerte es el desarollo web.</li> <li>Sintaxis similar a C / Java</li> <li>El c\u00f3digo se ejecuta en el servidor (en Apache mediante mod_php)</li> <li>El cliente recibe el resultado generado tras interpretar el c\u00f3digo en el servidor.</li> <li>El c\u00f3digo se almacena en archivo con extensi\u00f3n <code>.php</code>.</li> </ul> <p>Su documentaci\u00f3n es extensa y est\u00e1 traducida: https://www.php.net/manual/es/.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#codigo-embebido","title":"C\u00f3digo embebido","text":"<p>Los bloques de c\u00f3digo se escriben entre <code>&lt;?php</code> y <code>?&gt;</code>, mientras que las sentencias se separan mediante <code>;</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;title&gt;PHP f\u00e1cil&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;!-- Muestra una frase con HTML --&gt;\nHola mundo&lt;br&gt;\n&lt;!-- Muestra una frase con PHP --&gt;\n&lt;?php echo \"Es muy f\u00e1cil programar en PHP.\"; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>S\u00f3lo etiquetas de apertura</p> <p>Si nuestro c\u00f3digo s\u00f3lo va a contener c\u00f3digo PHP y nada de html, como por ejemplo, cuando codifiquemos clases o interfaces, s\u00f3lo pondremos la etiqueta de apertura, para as\u00ed indicar que es una archivo de php puro.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#generando-contenido","title":"Generando contenido","text":"<p>Tenemos tres posibilidades a la hora de generar contenido en nuestros documentos PHP:</p> <ul> <li><code>echo expresi\u00f3n;</code></li> <li><code>print (expresi\u00f3n);</code></li> <li><code>&lt;?= expresi\u00f3n ?&gt;</code></li> </ul> <p>Las que vamos a utilizar son <code>echo</code> cuando lo hagamos dentro de un bloque de instrucciones y <code>&lt;?=</code> cuando s\u00f3lo vayamos a mostrar el valor de una variable dentro de un fragmento HTML.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;Echo y print&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;&lt;?php echo \"Este texto se mostrar\u00e1 en la p\u00e1gina web.\" ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?= \"Este texto se mostrar\u00e1 en la p\u00e1gina web.\" ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?php print(\"Este texto se mostrar\u00e1 en la p\u00e1gina web.\") ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#comentarios","title":"Comentarios","text":"<p>Podemos utilizar comentarios de una l\u00ednea o de bloque:</p> <pre><code>&lt;?php\n// Este es un comentario de una sola l\u00ednea\n/*\n  Este es\n  un comentario\n  que ocupa\n  varias l\u00edneas\n*/ \n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#errores","title":"Errores","text":"<p>Si hay un error de ejecuci\u00f3n, se produce un Fatal Error.</p> <pre><code>Fatal error: Uncaught Error: Call to undefined function plint() in C:\\xampp\\htdocs\\202echo.php:11\n Stack trace:\n #0 {main}\n    thrown in C:\\xampp\\htdocs\\202echo.php on line 11\n</code></pre> <p>Desde PHP 5 se lanzan como una excepci\u00f3n. M\u00e1s adelante veremos el uso de <code>try</code> / <code>catch</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#variables","title":"Variables","text":"<ul> <li>No es necesario declararlas previamente.</li> <li>Comienzan por <code>$</code>, por ejemplo <code>$nombre</code>. Tras el <code>$</code>, el siguiente caracter debe ser una letra en min\u00fascula (recomendaci\u00f3n) o gui\u00f3n bajo <code>_</code>. Luego ya se pueden poner n\u00fameros.</li> <li>Son case sensitive: <code>$var != $vAR</code></li> <li>No se declara su tipo, el tipado es din\u00e1mico. Se asigna en tiempo de ejecuci\u00f3n dependiendo del valor asignado.</li> <li>Conveniente inicializarlas, sino dan error.</li> </ul> <pre><code>&lt;?php\n$nombre = \"Tofol\";\n$nombreCompleto = \"Tofol Verdera\";\n$numero = 123;\n$numero2 = 456;\n$pi = 3.14;\n$suerte = true;\n$sinValor;\n\necho $sinValor;\n?&gt;\n</code></pre> <p>Tipos</p> <p>Aunque a priori no hay tipos de datos, internamente PHP trabaja con cuatro tipos escalares: boolean, integer, float y string y cuatro tipos compuestos: array, object, callable e iterable. Existe un tipo especial para null (m\u00e1s informaci\u00f3n en http://php.net/manual/es/language.types.null.php).</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#constantes","title":"Constantes","text":"<p>Son variables cuyo valor no var\u00edan. Existen dos posibilidades:</p> <ul> <li><code>define(NOMBRE, valor);</code></li> <li><code>const NOMBRE; // PHP &gt; 5.3</code></li> </ul> <pre><code>&lt;?php\ndefine(\"PI\", 3.1416);\nconst IVA = 0.21;\n\necho PI, \" \", IVA; // No se pone el s\u00edmbolo dolar\n?&gt;\n</code></pre> <ul> <li>Se declaran siempre en MAY\u00daSCULAS</li> <li>Hay un conjunto de constantes ya predefinidas, tambi\u00e9n conocidas como magic constants: https://www.php.net/manual/es/language.constants.predefined.php</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#operadores","title":"Operadores","text":""},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#arimeticos","title":"Arim\u00e9ticos","text":"Ejemplo Nombre Resultado <code>-$a</code> Negaci\u00f3n Opuesto de <code>$a</code>. <code>$a + $b</code> Suma Suma de <code>$a</code> y <code>$b</code>. <code>$a - $b</code> Resta Diferencia de <code>$a</code> y <code>$b</code>. <code>$a * $b</code> Multiplicaci\u00f3n Producto de <code>$a</code> y <code>$b</code>. <code>$a / $b</code> Divisi\u00f3n Cociente de <code>$a</code> y <code>$b</code>. <code>$a % $b</code> M\u00f3dulo / Resto Resto de <code>$a</code> dividido por <code>$b</code>. <code>$a ** $b</code> Potencia Resultado de <code>$a</code> elevado a <code>$b</code>. PHP &gt;= 5.6. <p>En el caso de cadenas, si queremos concatenarlas, se utiliza el operador <code>.</code>:</p> <pre><code>&lt;?php\n$x = 33;\n$y = 11;\n$z = $x + $y;\necho \"La suma de 33 y 11 es \".44.\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" y \".$y.\" es \".(33 + 11).\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" y \".$y.\" es \".$z.\"&lt;br /&gt;\";\n?&gt;\n</code></pre> <p>Realmente, en vez de concatenar cadenas con variables, podemos imprimirlas directamente ya que se expanden autom\u00e1ticamente: <pre><code>&lt;?php\necho \"La suma de $x y $y es $z &lt;br /&gt;\";\n?&gt;\n</code></pre></p> <p>En ocasiones, necesitamos rodear el nombre de la variable entre llaves para poder unir m\u00e1s texto al resultado:</p> <pre><code>&lt;?php\n$color = \"rojo\";\necho \"El plural de $color el ${color}s\";\n?&gt;\n</code></pre> <p>M\u00e1s adelante estudiaremos algunas funciones para el tratamiento de cadenas.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#comparacion","title":"Comparaci\u00f3n","text":"Ejemplo Nombre Resultado <code>$a == $b</code> Igual <code>true</code> si <code>$a</code> es igual a <code>$b</code> tras de la conversi\u00f3n de tipos. <code>$a === $b</code> Id\u00e9ntico, Comparaci\u00f3n estricta <code>true</code> si <code>$a</code> es igual a <code>$b</code>, y son del mismo tipo de dato. <code>$a != $b</code>, <code>$a &lt;&gt; $b</code> Diferente <code>true</code> si <code>$a</code> no es igual a <code>$b</code> despu\u00e9s de la conversi\u00f3n de tipos. <code>$a !== $b</code> No id\u00e9ntico <code>true</code> si <code>$a</code> no es igual a <code>$b</code>, o si no son del mismo tipo. <code>$a &lt; $b</code> Menor que <code>true</code> si <code>$a</code> es estrictamente menor que <code>$b</code>. <code>$a &gt; $b</code> Mayor que <code>true</code> si <code>$a</code> es estrictamente mayor que <code>$b</code>. <code>$a &lt;= $b</code> Menor o igual que <code>true</code> si <code>$a</code> es menor o igual que <code>$b</code>. <code>$a &gt;= $b</code> Mayor o igual que <code>true</code> si <code>$a</code> es mayor o igual que <code>$b</code>. <code>$a &lt;=&gt; $b</code> Nave espacial Devuelve <code>-1</code>, <code>0</code> o <code>1</code> cuando <code>$a</code> es respectivamente menor, igual, o mayor que <code>$b</code>. PHP &gt;= 7. <code>$a ?? $b ?? $c</code> Fusi\u00f3n de null El primer operando de izquierda a derecha que exista y no sea <code>null</code>. <code>null</code> si no hay valores definidos y no son <code>null</code>. PHP &gt;= 7."},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#logicos","title":"L\u00f3gicos","text":"Ejemplo Nombre Resultado <code>$a and $b</code>, <code>$a &amp;&amp; $b</code> And (y) <code>true</code> si tanto <code>$a</code> como <code>$b</code> son <code>true</code>. <code>$a or $b</code>, <code>$a         |                     | $b</code> Or (o inclusivo) <code>true</code> si cualquiera de <code>$a</code> o <code>$b</code> es <code>true</code>. <code>$a xor $b</code> Xor (o exclusivo) <code>true</code> si <code>$a</code> o <code>$b</code> es <code>true</code>, pero no ambos. <code>!$a</code> Not (no) <code>true</code> si <code>$a</code> no es <code>true</code>."},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#asignacion","title":"Asignaci\u00f3n","text":"Ejemplo Nombre Resultado <code>$a = $b</code> Asignaci\u00f3n Asigna a <code>$a</code> el valor de <code>$b</code> <code>$a += $b</code> Asignaci\u00f3n de la suma Le suma a <code>$a</code> el valor de <code>$b</code>. Equivalente a <code>$a = $a + $b</code> <code>$a -= $b</code> Asignaci\u00f3n de la resta Le resta a <code>$a</code> el valor de <code>$b</code>. Equivalente a <code>$a = $a - $b</code> <code>$a *= $b</code> Asignaci\u00f3n del producto Asigna a <code>$a</code> el producto de <code>$a</code> por <code>$b</code>. Equivalente a <code>$a = $a * $b</code> <code>$a /= $b</code> Asignaci\u00f3n de la divisi\u00f3n Asigna a <code>$a</code> el conciente de <code>$a</code> entre <code>$b</code>. Equivalente a <code>$a = $a / $b</code> <code>$a %= $b</code> Asignaci\u00f3n del resto Asigna a <code>$a</code> el resto de dividir <code>$a</code> entre <code>$b</code>. Equivalente a <code>$a = $a % $b</code> <code>$a .= $b</code> Concatenaci\u00f3n Concatena a <code>$a</code> la cadena <code>$b</code>. Equivalente a <code>$a = $a . $b</code> <code>$a++</code> Incremento Incrementa <code>$a</code> en una unidad. Equivalente a <code>$a = $a + 1</code> <code>$a--</code> Decremento Decrementa <code>$a</code> en una unidad. Equivalente a <code>$a = $a - 1</code> <p>Prioridad de los operadores</p> <p>Recuerda la prioridad. Primero los par\u00e9ntesis, luego la negaci\u00f3n (<code>!</code>), productos/divisiones, sumas/restas, comparaciones, l\u00f3gicos y por \u00faltimo se realiza la asignaci\u00f3n. M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/language.operators.precedence.php</p> <p>Autoevaluaci\u00f3n</p> <p>Si <code>$a=5</code> y <code>$b=4</code>, averigua el valor de <code>$c</code> si <code>$c = $a*2 &gt; $b+5 &amp;&amp; !($b&lt;&gt;4)</code></p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#trabajando-con-formularios","title":"Trabajando con formularios","text":"<p>Los datos se env\u00edan via URL con el formato <code>var1=valor1&amp;var2=valor2\u2026</code>. Por ejemplo: <code>ejemplo.php?nombre=Bruce+apellido1=Wayne</code></p> <p>Se divide en dos pasos:</p> <ol> <li>Generar un formulario con <code>action='archivo.php' method='GET'</code></li> <li>En el archivo <code>.php</code> leer los datos con <code>$_GET['nombreVar']</code></li> </ol> <p>Vamos a separar siempre que podamos el c\u00f3digo HTML del de PHP.</p> <p>Por ejemplo, el formulario lo colocamos en <code>saluda.html</code>:</p> <pre><code>&lt;form action=\"saluda.php\" method=\"get\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre: &lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;label for=\"apellido1\"&gt;Primer apellido:&lt;/label&gt; \n    &lt;input type=\"text\" name=\"apellido1\" id=\"apellido1\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;input type=\"submit\" value=\"enviar\"&gt;&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> <p>Y recogemos los datos en <code>saluda.php</code>:</p> <pre><code>&lt;?php\n$nombre = $_GET[\"nombre\"];\n$apellido1 = $_GET[\"apellido1\"];\n\necho \"Hola $nombre $apellido1\";\n?&gt;\n</code></pre> <p>Si lo quisi\u00e9ramos realizar todo en un \u00fanico archivo (lo cual no es recomendable), podemos hacerlo as\u00ed:</p> <pre><code>&lt;form action=\"\" method=\"get\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre: &lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;label for=\"apellido1\"&gt;Primer apellido:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"apellido1\" id=\"apellido1\"&gt;&lt;/p&gt;\n    &lt;input type=\"submit\" value=\"enviar\"&gt;\n&lt;/form&gt;\n&lt;p&gt;\n    &lt;?php\n    if(isset($_GET['nombre'])) {\n        $nombre = $_GET[\"nombre\"];\n        $apellido1 = $_GET[\"apellido1\"];\n\n        echo \"Hola $nombre $apellido1\";\n    }\n    ?&gt;\n&lt;/p&gt;\n</code></pre> <p>El trabajo con formularios lo estudiaremos en profundidad en la unidad 4, y veremos que adem\u00e1s de <code>GET</code>, podemos enviar los datos con <code>POST</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#condiciones","title":"Condiciones","text":"<p>La condici\u00f3n simple se realiza mediante la instrucci\u00f3n <code>if</code>. Entre par\u00e9ntesis se pone la condici\u00f3n que se evalua a <code>true</code> o <code>false</code>. Si no se ponen llaves, en vez de abrir un bloque, se ejecutar\u00e1 s\u00f3lo la siguiente instrucci\u00f3n.</p> <p>Siempre llaves</p> <p>Es recomendable poner llaves siempre aunque en el momento de codificar s\u00f3lo haya una \u00fanica instrucci\u00f3n. De este modo, se queda preparado para a\u00f1adir m\u00e1s contenido en el futuro sin provocar bugs.</p> <pre><code>&lt;?php\n$hora = 8; // La hora en formato de 24 horas\nif ($hora === 8) {\n    echo \"Suena el despertador.\";\n}\necho \"&lt;br&gt;\";\nif ($hora === 8)\n    echo \"Suena el despertador.\";\n?&gt;\n</code></pre> <p>Las condiciones compuesta mediante <code>if-else</code>:</p> <pre><code>&lt;?php\n$hora = 17; // La hora en formato de 24 horas\nif ($hora &lt;= 12) {\n    echo \"Son las \" . $hora . \" de la ma\u00f1ana\";\n} else {\n    echo \"Son las \" . ($hora - 12) . \" de la tarde\";\n}\n?&gt;\n</code></pre> <p>Las condiciones anidadas mediante <code>if-else if-else</code>:</p> <pre><code>&lt;?php\n$hora = 14; // La hora en formato de 24 horas\nif ($hora === 8) {\n    echo \"Es la hora de desayunar.\";\n} else if ($hora === 14) {\n    echo \"Es la hora de la comida.\";\n} else if ($hora === 21) {\n    echo \"Es la hora de la cena.\";\n} else {\n    echo \"Ahora no toca comer.\";\n}\n?&gt;\n</code></pre> <p>La sentencia <code>switch</code> tambi\u00e9n permite trabajar con condiciones m\u00faltiples:</p> <pre><code>&lt;?php\n$hora = 14; // La hora en formato de 24 horas\nswitch ($hora) {\n    case 9:\n        echo \"Es la hora de desayunar.\";\n        break;\n    case 14:\n        echo \"Es la hora de la comida.\";\n        break;\n    case 21:\n        echo \"Es la hora de la cena.\";\n        break;\n    default:\n        echo \"Ahora no toca comer\";\n}\n?&gt;\n</code></pre> <p>No olvides el <code>break</code></p> <p>Un error muy com\u00fan es olvidar la instrucci\u00f3n <code>break</code> tras cada caso. Si no lo ponemos, ejecutar\u00e1 el siguiente caso autom\u00e1ticamente.</p> <p>Finalmente, tambi\u00e9n tenemos el operador ternario <code>condici\u00f3n ? valorTrue : valorFalse</code>:</p> <pre><code>&lt;?php\n$hora = 14;\n$formato = ($hora &gt; 12) ? 24 : 12;\necho \"El formato es de $formato horas\"\n?&gt;\n</code></pre> <p>Si queremos comprobar si una variable tiene valor y si no darle un valor determinado, usaremos el operador <code>?:</code> (se conoce como el operador Elvis - https://en.wikipedia.org/wiki/Elvis_operator) con la sint\u00e1xis <code>expresi\u00f3n ?: valorSiVacio</code>:</p> <pre><code>&lt;?php\n$nombre = $_GET['nombre'] ?: \"desconocido\"\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#bucles","title":"Bucles","text":"<p>Mediante la instrucci\u00f3n <code>while</code>:</p> <pre><code>&lt;?php\n$i = 1;\nwhile ($i &lt;= 10) {\n    echo \"L\u00ednea \" . $i;\n    echo \"&lt;br&gt;\";\n    $i++;\n}\n?&gt;\n</code></pre> <p>Mediante la instrucci\u00f3n <code>do-while</code>:</p> <pre><code>&lt;?php\ndo {\n    $dado = rand(1, 6);\n    // rand() devuelve un valor aleatorio \n    echo \"Tirando el dado... \";\n    echo \"ha salido un \" . $dado . \".\";\n    echo \"&lt;br&gt;\";\n} while ($dado != 5);\necho \"\u00a1Bien! Saco una ficha de casa.\";\n?&gt;\n</code></pre> <p>Mediante la instrucci\u00f3n <code>for</code>:</p> <pre><code>&lt;?php\n// Bucle ascendente\nfor ($i = 1; $i &lt;= 10; $i++) {\n    echo \"L\u00ednea \" . $i;\n    echo \"&lt;br&gt;\";\n}\n\n// Bucle descendente\nfor ($i = 10; $i &gt;= 0; $i--) {\n    echo \"L\u00ednea \" . $i;\n    echo \"&lt;br&gt;\";\n}\n?&gt;\n</code></pre> <p>M\u00e1s adelante estudiaremos el bucle <code>foreach</code> para recorrer arrays.</p> <p>PHP, del mismo modo que Java y C, permite romper los bucles mediante la instrucci\u00f3n <code>break</code>. A su vez, <code>continue</code> permite saltar a la siguiente iteraci\u00f3n.</p> <p>Si puedes, evita <code>break</code> y <code>continue</code></p> <p>Personalmente, no me gusta su uso. Prefiero el uso de variables flag para controlar la salida de los bucles. Por ejemplo:</p> <pre><code>&lt;?php\n$salir = false;\nfor ($i = 1; $i &lt;= 10 &amp;&amp; !$salir; $i++) {\n  if ($i === 5) {\n    echo \"Salgo cuando i=5\";\n    $salir = true;\n  }\n}\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#arrays","title":"Arrays","text":"<p>Para almacenar datos compuestos, podemos utilizar tanto arrays sencillos como arrays asociativos (similares a un mapa). En realidad todos los arrays son mapas ordenados compuestos de pares clave-valor.</p> <p>Cuidado con mezclar tipos</p> <p>Como el tipado es din\u00e1mico, nuestros arrays pueden contenedor datos de diferentes tipos. No se recomienda mezclar los tipos.</p> <p>Del mismo modo que Java, se definen mediante corchetes, son 0-index, y se puede asignar un valor a un posici\u00f3n determinada:</p> <pre><code>&lt;?php\n$frutas = array(\"naranja\", \"pera\", \"manzana\");\n\n$frutas2 = [\"naranja\", \"pera\", \"manzana\"];\n\n$frutas3 = [];\n$frutas3[0] = \"naranja\";\n$frutas3[1] = \"pera\";\n$frutas3[] = \"manzana\"; // lo a\u00f1ade al final\n</code></pre> <p>Podemos obtener el tama\u00f1o del array mediante la funci\u00f3n <code>count(array)</code>. Para recorrer el array haremos uso de un bucle <code>for</code>:</p> <pre><code>&lt;?php\n$tam = count($frutas); // tama\u00f1o del array\n\nfor ($i=0; $i&lt;count($frutas); $i++) {\n    echo \"Elemento $i: $frutas[$i] &lt;br /&gt;\";\n}\n</code></pre> <p>Otra forma de recorrer los arrays, incluso m\u00e1s elegante, es hacer uso de <code>foreach</code>. Su sintaxis es <code>foreach (array as elemento)</code>:</p> <pre><code>&lt;?php\n// Mediante foreach no necesitamos saber el tama\u00f1o del array\nforeach ($frutas as $fruta) {\n    echo \"$fruta &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#arrays-asociativos","title":"Arrays asociativos","text":"<p>Cada elemento es un par clave-valor. En vez de acceder por la posici\u00f3n, lo hacemos mediante una clave. As\u00ed pues, para cada clave se almacena un valor.</p> <p>A la hora de recorrer este tipo de arrays, mediante <code>foreach</code> separamos cada elemento en una pareja <code>clave =&gt; valor</code>:</p> <pre><code>&lt;?php\n$capitales = [\"Italia\" =&gt; \"Roma\",\n    \"Francia\" =&gt; \"Paris\",\n    \"Portugal\" =&gt; \"Lisboa\"];\n$capitalFrancia = $capitales[\"Francia\"]; // se accede al elemento por la clave, no la posici\u00f3n\n\n$capitales[\"Alemania\"] = \"Berl\u00edn\"; // a\u00f1adimos un elemento\n\necho \"La capital de Francia es $capitalFrancia &lt;br /&gt;\";\necho \"La capital de Francia es {$capitales[\"Francia\"]} &lt;br /&gt;\";\n\n$capitales[] = \"Madrid\"; // se a\u00f1ade con la clave 0 !!! \u00a1\u00a1\u00a1No asignar valores sin clave!!!\n\nforeach ($capitales as $valor) { // si recorremos un array asociativo, mostraremos los valores\n    echo \"$valor &lt;br /&gt;\";\n}\n\nforeach ($capitales as $pais =&gt; $ciudad) { // separamos cada elemento en clave =&gt; valor\n    echo \"$pais : $ciudad &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#operaciones","title":"Operaciones","text":"<p>Las operaciones m\u00e1s importantes que podemos realizar con arrays son:</p> <ul> <li><code>print_r($array)</code>: muestra el contenido de todo el <code>$array</code>. Si queremos mostrar el contenido con un formato determinado, hemos de recorrer el array con <code>foreach</code>.</li> <li><code>var_dump($mixed)</code>: muestra el contenido del elemento recibido. Muestra m\u00e1s informaci\u00f3n que <code>print_r</code>.</li> <li><code>$elem = array_pop($array)</code>: elimina el \u00faltimo <code>$elemento</code></li> <li><code>array_push($array, $elem)</code>: a\u00f1ade un <code>$elemento</code> al final</li> <li><code>$booleano = in_array($elem, $array)</code>: averigua si <code>$elem</code> est\u00e1 en el <code>$array</code></li> </ul> PHPConsola <pre><code>&lt;?php\n$frutas = [\"naranja\", \"pera\", \"manzana\"];\n\narray_push($frutas, \"pi\u00f1a\");\nprint_r($frutas);\n\n$ultFruta = array_pop($frutas);\nif (in_array(\"pi\u00f1a\", $frutas)) {\n    echo \"&lt;p&gt;Queda pi\u00f1a&lt;/p&gt;\";\n} else {\n    echo \"&lt;p&gt;No queda pi\u00f1a&lt;/p&gt;\";\n}\nprint_r($frutas);\n</code></pre> <pre><code>Array\n(\n  [0] =&gt; naranja\n  [1] =&gt; pera\n  [2] =&gt; manzana\n  [3] =&gt; pi\u00f1a\n)\n&lt;p&gt;No queda pi\u00f1a&lt;/p&gt;\nArray\n(\n  [0] =&gt; naranja\n  [1] =&gt; pera\n  [2] =&gt; manzana\n)\n</code></pre> <ul> <li><code>$claves = array_keys($array)</code>: devuelve las claves del <code>$array</code> asociativo</li> <li><code>$tam = count($array)</code>: devuelve el tama\u00f1o de <code>$array</code></li> <li><code>sort($array)</code>: ordena los elementos del <code>$array</code></li> <li><code>isset($array[elemento])</code>: indica si existe/tiene valor elemento dentro del array</li> <li><code>unset($array[elemento])</code>: elimina el elemento del array (deja un hueco)</li> </ul> PHPConsola <pre><code>&lt;?php\n$capitales = array(\"Italia\" =&gt; \"Roma\",\n\"Francia\" =&gt; \"Paris\",\n\"Portugal\" =&gt; \"Lisboa\");\n\n$paises = array_keys($capitales);\nprint_r($paises);\nsort($paises);\nprint_r($paises);\n\nunset($capitales[\"Francia\"]);\nprint_r($capitales);\n</code></pre> <pre><code>Array\n(\n  [0] =&gt; Italia\n  [1] =&gt; Francia\n  [2] =&gt; Portugal\n)\nArray\n(\n  [0] =&gt; Francia\n  [1] =&gt; Italia\n  [2] =&gt; Portugal\n)\nArray\n(\n  [Italia] =&gt; Roma\n  [Portugal] =&gt; Lisboa\n)\n</code></pre> <p>Al asignar un array a otro se realiza una copia. Cuidado con esta operaci\u00f3n que puede consumir muchos recursos.</p> PHPConsola <pre><code>&lt;?php\n$nombres = [\"Juan\", \"Ana\", \"Pedro\", \"Laura\"];\n$copia = $nombres;\nsort($nombres);\nprint_r($nombres);\nprint_r($copia);\n</code></pre> <pre><code>Array\n(\n    [0] =&gt; Ana\n    [1] =&gt; Juan\n    [2] =&gt; Laura\n    [3] =&gt; Pedro\n)\nArray\n(\n    [0] =&gt; Juan\n    [1] =&gt; Ana\n    [2] =&gt; Pedro\n    [3] =&gt; Laura\n)\n</code></pre> <p>Existen much\u00edsimas m\u00e1s funciones para trabajar con arrays. Puedes consultar roda la informaci\u00f3n en la documentaci\u00f3n oficial.</p> <p>Art\u00edculos para profundizar en las operaciones con arrays</p> <ul> <li>Un art\u00edculo muy completo (en ingl\u00e9s) de C\u00f3mo trabajar con arrays en PHP de la manera correcta.  </li> <li>Otro art\u00edculo recomendable (en ingl\u00e9s) es C\u00f3mo ordenar arrays en PHP.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#arrays-bidimensionales","title":"Arrays bidimensionales","text":"<p>Consiste en un array de arrays, ya sean arrays secuenciales o asociativos. Puede haber N dimensiones.</p> <pre><code>&lt;?php\n$persona[\"nombre\"] = \"Bruce Wayne\";\n$persona[\"telefonos\"] = [\"966 123 456\", \"636 636 636\"]; // array de arrays ordinarios\n$persona[\"profesion\"] = [\"dia\" =&gt; \"fil\u00e1ntropo\", \"noche\" =&gt; \"caballero oscuro\"]; // array de arrays asociativos\n\necho $persona['nombre'].\" por la noche trabaja de \".$persona['profesion']['noche'];\n</code></pre> <p>Combinando los arrays asociativos en varias dimensiones podemos almacenar la informaci\u00f3n como si fuera una tabla:</p> <pre><code>&lt;?php\n$menu1 = [\"Plato1\" =&gt; \"Macarrones con queso\", \"Plato2\" =&gt; \"Pescado asado\", \"Bebida\" =&gt; \"Coca-Cola\", \"Postre\" =&gt; \"Helado de vainilla\"];\n$menu2 = [\"Plato1\" =&gt; \"Sopa\", \"Plato2\" =&gt; \"Lomo con patatas\", \"Bebida\" =&gt; \"Agua\", \"Postre\" =&gt; \"Arroz con leche\"];\n$menus = [$menu1, $menu2]; // creamos un array a partir de arrays asociativos\n\nforeach ($menus as $menudeldia) {\n  echo \"Men\u00fa del d\u00eda&lt;br/&gt;\";\n\n  foreach ($menudeldia as $platos =&gt; $comida) {\n    echo \"$platos: $comida &lt;br/&gt;\";\n  }\n}\n\n// Para acceder a un elemento concreto se anidan los corchetes\n$postre0 = $menus[0][\"Postre\"];\n</code></pre> <p>Aunque pueda parecer una buena idea crear este tipo de estructuras, es mejor utilizar objetos conjuntamente con arrays (posiblemente arrays de otros objetos) para crear estructuras complejas que permitan modelar mejor los problemas.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#funciones","title":"Funciones","text":"<p>Al no declararse los tipos de datos, los par\u00e1metros de las funciones no tienen tipo ni se indica el tipo de dato que devuelven. El paso de par\u00e1metros se realiza por valor, es decir, se realiza una copia de la variable.</p> <pre><code>&lt;?php\nfunction nombreFuncion($par1, $par2, ...) {\n  // c\u00f3digo\n  return $valor;\n}\n\n$resultado = nombreFuncion($arg1, $arg2, \u2026);\n?&gt;\n</code></pre> <p>Por ejemplo:</p> <pre><code>&lt;?php\nfunction diaSemana() {\n    $semana = [ \"lunes\", \"martes\", \"mi\u00e9rcoles\",\n        \"jueves\", \"viernes\", \"s\u00e1bado\", \"domingo\" ];\n    $dia = $semana[rand(0, 6)];\n    return $dia;\n}\n\n$diaCine = diaSemana();\necho \"El pr\u00f3ximo $diaCine voy al cine.\";\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#parametros-por-referencia","title":"Par\u00e1metros por referencia","text":"<p>Si queremos pasar un par\u00e1metro por referencia, en la declaraci\u00f3n de la funci\u00f3n, indicaremos los par\u00e1metros mediante el operador <code>&amp;</code> para indicar la direcci\u00f3n de memoria de la variable.</p> <pre><code>&lt;?php\nfunction duplicarPorValor($argumento) {\n    $argumento = $argumento * 2;\n    echo \"Dentro de la funci\u00f3n: $argumento.&lt;br&gt;\";\n}\nfunction duplicarPorReferencia(&amp;$argumento) {\n    $argumento = $argumento * 2;\n    echo \"Dentro de la funci\u00f3n: $argumento.&lt;br&gt;\";\n}\n\n$numero1 = 5;\necho \"Antes de llamar: $numero1.&lt;br&gt;\";\nduplicarPorValor($numero1);\necho \"Despu\u00e9s de llamar: $numero1.&lt;br&gt;\";\necho \"&lt;br&gt;\";\n\n$numero2 = 7;\necho \"Antes de llamar: $numero2.&lt;br&gt;\";\nduplicarPorReferencia($numero2);\necho \"Despu\u00e9s de llamar: $numero2.&lt;br&gt;\";\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#parametros-por-defecto-opcionales","title":"Par\u00e1metros por defecto / opcionales","text":"<p>Permiten asignar valores en la declaraci\u00f3n, y posteriormente, dejar el argumento en blanco.</p> <pre><code>&lt;?php\nfunction obtenerCapital($pais = \"todos\") {\n    $capitales = array(\"Italia\" =&gt; \"Roma\",\n    \"Francia\" =&gt; \"Paris\",\n    \"Portugal\" =&gt; \"Lisboa\");\n\n    if ($pais == \"todos\") {\n        return array_values($capitales);\n    } else {\n        return $capitales[$pais];\n    }\n}\n\nprint_r(obtenerCapital());\necho \"&lt;br/&gt;\";\necho obtenerCapital(\"Francia\");\n</code></pre> <p>En el caso de convivir con otro tipo de par\u00e1metros, los par\u00e1metros que tienen el valor asignado por defecto siempre se colocan al final.</p> <pre><code>&lt;?php\nfunction saluda($nombre, $prefijo = \"Sr\") {\n    echo \"Hola \".$prefijo.\" \".$nombre;\n}\n\nsaluda(\"Aitor\", \"Mr\");\nsaluda(\"Aitor\");\nsaluda(\"Marina\", \"Srta\");\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#parametros-variables","title":"Par\u00e1metros variables","text":"<p>Podemos tener funciones donde en la declaraci\u00f3n no indiquemos la cantidad de datos de entrada.</p> <ul> <li><code>$arrayArgs = func_get_args();</code> \u2192 Obtiene un array con los par\u00e1metros</li> <li><code>$cantidad = func_num_args();</code> \u2192 Obtiene la cantidad de par\u00e1metros recibidos</li> <li><code>$valor = func_get_arg(numArgumento);</code> \u2192 Obtiene el par\u00e1metro que ocupa la posici\u00f3n <code>numArgumento</code>.</li> </ul> <p>Estas funciones no se pueden pasar como par\u00e1metro a otra funci\u00f3n (como funciones variable, que veremos m\u00e1s adelante). Para ello, debemos guardar previamente la funci\u00f3n en una variable.</p> <pre><code>&lt;?php\nfunction sumaParametros() {\n    if (func_num_args() == 0) {\n        return false;\n    } else {\n        $suma = 0;\n\n        for ($i = 0; $i &lt; func_num_args(); $i++) {\n            $suma += func_get_arg($i);\n        }\n\n        return $suma;\n    }\n}\n\necho sumaParametros(1, 5, 9); // 15\n?&gt;\n</code></pre> <p>Desde PHP 5.6, se puede utilizar el operador <code>...</code> (variadics) el cual \"disfraza\" los par\u00e1metros como un array:</p> <pre><code>&lt;?php\nfunction sumaParametrosMejor(...$numeros) {\n    if (count($numeros) == 0) {\n        return false;\n    } else {\n        $suma = 0;\n\n        foreach ($numeros as $num) {\n            $suma += $num;\n        }\n\n        return $suma;\n    }\n}\n\necho sumaParametrosMejor(1, 5, 9); // 15\n?&gt;\n</code></pre> <p>M\u00e1s usos de <code>...</code></p> <p>Tambi\u00e9n se puede utilizar para dividir un array en variables separadas para proporcionar argumentos</p> <pre><code>&lt;?php\nfunction suma($a, $b) {\n    return $a + $b;\n}\n\necho suma(...[1, 5]).\"&lt;br /&gt;\";\n\n$a = [1, 5];\necho suma(...$a);\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#argumentos-con-nombre","title":"Argumentos con nombre","text":"<p>Desde PHP 8.0 podemos pasar los argumentos con el nombre (adem\u00e1s de por posici\u00f3n, como hemos hecho hasta ahora). Los argumentos con nombre se pasan poniendo el nombre como prefijo del par\u00e1metros separado por dos puntos: <code>$resultado = funcion( arg1 : valor1, arg2 : valor2);</code></p> <p>Esta caracter\u00edstica complementa los parametros opcionales permitiendonos saltar su valor:</p> <pre><code>&lt;?php\nfunction funcionArgumentosNombre($a, $b = 2, $c = 4) {\n  echo \"$a $b $c\";\n}\nfuncionArgumentosNombre(c: 3, a: 1); // \"1 2 3\"\n</code></pre> <p>Tanto los par\u00e1metros opcionales como los obligatorios pueden tener nombre, pero lo argumentos con nombre se tienen que poner despu\u00e9s de los que no lo tienen.</p> <pre><code>&lt;?php\nfuncionArgumentosNombre(1, c: 3); // \"1 2 3\"\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#funciones-tipadas","title":"Funciones tipadas","text":"<p>Desde PHP7 en las funciones, tanto los par\u00e1metro como su devoluci\u00f3n, permiten la definici\u00f3n de tipos. Esto se conoce como strict_types (tipificaci\u00f3n estricta) y hay que definirlo en la primera l\u00ednea de cada archivo <code>.php</code> para que el propio interprete PHP compruebe los tipos y lance errores si los tipos son incorrectos, mediante la sentencia</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n</code></pre> <p>As\u00ed pues, vamos a  definir los tipos de los par\u00e1metros y de los valores devueltos mediante los tipos: <code>int</code>, <code>float</code>, <code>string</code>, <code>bool</code>, <code>object</code> y <code>array</code>.</p> <p>Si una funci\u00f3n no devuelve nada se indica mediante el tipo <code>void</code>.</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n\nfunction suma(int $a, int $b) : int {\n    return $a + $b;\n}\n\n$num = 33;\necho suma(10, 30);\necho suma(10, $num);\necho suma(\"10\", 30); // error por tipificaci\u00f3n estricta, sino dar\u00eda 40\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#alcance","title":"Alcance","text":"<p>Las variables definidas fuera de las funciones tienen alcance global: accesibles desde cualquier funci\u00f3n. Los par\u00e1metros de una funci\u00f3n y las variables declaradas dentro de una funci\u00f3n (se conocen como variables locales) s\u00f3lo son accesibles desde dentro de la misma funci\u00f3n \u2192 alcance de funci\u00f3n.</p> <p>En caso de conflicto, tienen prioridad las variables locales. Para evitar el conflicto, dentro de la funci\u00f3n, podemos declarar la variable como <code>global</code>.</p> Alcance localAlcance global <pre><code>&lt;?php\nfunction miCiudad() {\n    $ciudad = \"Elche\";\n    echo \"Dentro de la funci\u00f3n: $ciudad.&lt;br&gt;\";\n}\n\n$ciudad = \"Alicante\";\necho \"Antes de la funci\u00f3n: $ciudad.&lt;br&gt;\";\nmiCiudad();\necho \"Despu\u00e9s de la funci\u00f3n: $ciudad.&lt;br&gt;\"\n?&gt;\n</code></pre> <pre><code>&lt;?php\nfunction miCiudad() {\n    global $ciudad;\n    $ciudad = \"Elche\";\n    echo \"Dentro de la funci\u00f3n: $ciudad.&lt;br&gt;\";\n}\n\n$ciudad = \"Alicante\";\necho \"Antes de llamar: $ciudad.&lt;br&gt;\";\nmiCiudad();\necho \"Despu\u00e9s de llamar: $ciudad.&lt;br&gt;\"\n?&gt;\n</code></pre> <p>No globales</p> <p>Por favor, hay que evitar el uso de variables globales dentro de las funciones.</p> <p>En el caso de necesitarlas, es mejor pasarlas como par\u00e1metro a las funciones.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#funciones-variable","title":"Funciones variable","text":"<ul> <li>Permite asignar una funci\u00f3n a una variable.</li> <li>Nombre de la funci\u00f3n entre comillas.</li> <li>Si una variable va seguida de par\u00e9ntesis, PHP buscar\u00e1 una funci\u00f3n con su valor.</li> </ul> <pre><code>&lt;?php\n$miFuncionSuma = \"suma\";\necho $miFuncionSuma(3,4); // invoca a la funci\u00f3n suma\n?&gt;\n</code></pre> <p>Funciones an\u00f3nimas</p> <p>PHP permite la definici\u00f3n y uso de funciones an\u00f3nimas, es decir, funciones que no tienen nombre, y se utilizan principalmente para gestionar los callbacks. Este tipo de funciones se utiliza mucho en Javascript para gestionar los eventos y promesas.</p> <pre><code>&lt;?php\n$anonima = function() {\n    echo \"Hola\";\n};\n$anonima();\n\n$anonimaConParametro = function($nombre) {\n    echo \"Hola \".$nombre;\n};\n$anonimaConParametro(\"Aitor\");\n\n// Uso de variables externas a la funci\u00f3n an\u00f3nima --&gt; `use`\n$mensaje = \"Hola\";\n$miClosure = function() use ($mensaje) {\n    echo $mensaje;\n};\n$miClosure();\n\n// Uso de par\u00e1metros\n$holaPHP = function($arg) use ($mensaje) {\n    echo $mensaje.\" \".$arg;\n};\n$holaPHP(\"PHP\");\n?&gt;\n</code></pre> <p>Desde PHP 7.4 se han introducido las funciones flecha (arrow functions) para simplificar su definici\u00f3n y uso.</p> <p>Ten\u00e9is m\u00e1s informaci\u00f3n sobre funciones an\u00f3nimas y flecha en el siguiente art\u00edculo (en ingl\u00e9s): Funciones an\u00f3nimas y flecha en PHP</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#biblioteca-de-funciones","title":"Biblioteca de funciones","text":"<p>Podemos agrupar un conjunto de funciones en un archivo, para permitir su reutilizaci\u00f3n. Posteriormente, se incluye con:</p> <ul> <li><code>include(archivo);</code> / <code>include_once(archivo);</code></li> <li><code>require(archivo);</code> / <code>require_once(archivo);</code></li> </ul> <p>Si no encuentra el archivo, <code>require</code> lanza un error fatal, <code>include</code> lo ignora Las funciones <code>_once</code> s\u00f3lo se cargan una vez, si ya ha sido incluida previamente, no lo vuelve a hacer, evitando bucles.</p> <p>Por ejemplo, colocamos las funciones en el archivo <code>biblioteca.php</code>:</p> <pre><code>&lt;?php\nfunction suma(int $a, int $b) : int {\n    return $a + $b;\n}\n\nfunction resta(int $a, int $b) : int {\n    return $a - $b;\n}\n?&gt;\n</code></pre> <p>Y posteriormente en otro archivo:</p> <pre><code>&lt;?php \ninclude_once(\"biblioteca.php\");\necho suma(10,20);\necho resta(40,20);\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#plantillas-mediante-include","title":"Plantillas mediante <code>include</code>","text":"<p>Mediante el uso de la instrucci\u00f3n <code>include</code> tambi\u00e9n podemos separar fragmentos de c\u00f3digo PHP/HTML que queramos reutilizar en nuestros sitios web y crear un sistema muy sencillo de plantillas. Por ejemplo, vamos a separar una p\u00e1gina en tres partes, primero la parte superior en <code>encabezado.php</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;&lt;?= $titulo ?&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n</code></pre> <p>La parte de abajo, por ejemplo, solo va a contener HTML y la colocamos en <code>pie.html</code>: <pre><code>&lt;footer&gt;Aitor Medrano&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Y luego nos centramos \u00fanicamente en el contenido que cambia en <code>pagina.php</code>:</p> <pre><code>&lt;?php\n$titulo = \"P\u00e1gina con includes\";\ninclude(\"encabezado.php\");\n?&gt;\n&lt;h1&gt;&lt;?= $titulo ?&gt;&lt;/h1&gt;\n&lt;?php\ninclude(\"pie.html\");\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#funciones-predefinidas","title":"Funciones predefinidas","text":"<p>El lenguaje ofrece un abanico de funciones ya definidas, agrupadas por su funcionalidad: https://www.php.net/manual/es/funcref.php</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#cadenas","title":"Cadenas","text":"<p>Ya hemos visto que se pueden crear con comillas simples (<code>''</code>, sin interpretaci\u00f3n) o comillas dobles (<code>\"\"</code>, interpretan el contenido y las secuencias de escape <code>\\n</code>, <code>\\t</code>, <code>\\$</code>, <code>{</code>, \u2026 - magic quotes)</p> <pre><code>&lt;?php\n\"Me llamo $nombre\"\n\"Son 30 {$moneda}s\"\n?&gt;\n</code></pre> <p>Se acceden a los caracteres como si fuera un array.</p> <pre><code>&lt;?php\n$cadena = \u201cYo soy Batman\u201d;\n$ygriega = $cadena[0];\n?&gt;\n</code></pre> <p>Adem\u00e1s de <code>echo</code>, podemos mostrar las cadenas mediante la funci\u00f3n <code>printf</code>. Esta funci\u00f3n viene heredada del lenguaje C, y en la cadena se indica el tipo de dato a formatear y genera una salida formateada. Si quiero guardar el resultado en una variable, podemos utilizar <code>sprintf</code>.</p> <pre><code>&lt;?php\n$num = 33;\n$nombre = \"Larry Bird\";\nprintf(\"%s llevaba el n\u00famero %d\", $nombre, $num); // %d -&gt; n\u00famero decimal, %s -&gt; string\n$frase = sprintf(\"%s llevaba el n\u00famero %d\", $nombre, $num);\necho $frase\n?&gt;\n</code></pre> <p>Ten\u00e9is muchos m\u00e1s ejemplos en https://www.w3schools.com/php/func_string_printf.asp</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#operaciones-basicas","title":"Operaciones b\u00e1sicas","text":"<p>Todas las funciones se pueden consultar en https://www.php.net/manual/es/ref.strings.php</p> <p>Las m\u00e1s importantes son:</p> <ul> <li><code>strlen</code>: obtiene la longitud de una cadena y devuelve un n\u00famero entero</li> <li><code>substr</code>: devuelve una subcadena de la cadena original</li> <li><code>str_replace</code>: reemplaza caracteres en una cadena</li> <li><code>strtolower</code> y <code>strtoupper</code>: Transforman una cadena de caracteres en la misma cadena en min\u00fasculas o may\u00fasculas respectivamente.</li> </ul> <pre><code>&lt;?php\n$cadena = \"El caballero oscuro\";\n$tam = strlen($cadena);\necho \"La longitud de '$cadena' es: $tam &lt;br /&gt;\";\n\n$oscuro = substr($cadena, 13); // desde 13 al final\n$caba = substr($cadena, 3, 4); // desde 3, 4 letras\n$katman = str_replace(\"c\", \"k\", $cadena);\necho \"$oscuro $caba ahora es $katman\";\n\necho \"Grande \".strtoupper($cadena);\n?&gt;\n</code></pre> <p>Si queremos trabajar con caracteres ASCII de forma individual, son \u00fatiles las funciones:</p> <ul> <li><code>chr</code>: obtiene el car\u00e1cter a partir de un ASCII</li> <li><code>ord</code>: obtiene el ASCII de un car\u00e1cter</li> </ul> <pre><code>&lt;?php\nfunction despues(string $letra): string {\n    $asciiLetra = ord($letra);\n    return chr($asciiLetra + 1);\n}\n\necho despues(\"B\");\n?&gt;\n</code></pre> <p>Si queremos limpiar cadenas, tenemos las funciones:</p> <ul> <li><code>trim</code>: elimina los espacios al principio y al final</li> <li><code>ltrim</code> / <code>rtrim</code> o <code>chop</code>: Elimina los espacios iniciales / finales de una cadena.</li> <li><code>str_pad</code>: rellena la cadenas hasta una longitud especificada y con el car\u00e1cter o caracteres especificados.</li> </ul> <pre><code>&lt;?php\n$cadena = \" Programando en PHP \";\n$limpia = trim($cadena); // \"Programando en PHP\"\n\n$sucia = str_pad($limpia, 23, \".\"); // \"Programando en PHP.....\"\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#comparando-y-buscando","title":"Comparando y buscando","text":"<p>La comparaci\u00f3n de cadenas puede ser con conversi\u00f3n de tipos mediante <code>==</code> o estricta con <code>===</code>. Tambi\u00e9n funcionan los operadores <code>&lt;</code> y <code>&gt;</code> si ambas son cadenas. Al comparar cadenas con valores numericos podemos utilizar:</p> <ul> <li><code>strcmp</code>: 0 iguales, &lt;0 si <code>a&lt;b</code> o &gt;0 si <code>a&gt;b</code></li> <li><code>strcasecmp</code>: las pasa a min\u00fasculas y compara</li> <li><code>strncmp</code> / <code>strncasecmp</code>: compara los N primeros caracteres</li> <li><code>strnatcmp</code>: comparaciones naturales</li> </ul> <pre><code>&lt;?php\n$frase1 = \"Alfa\";\n$frase2 = \"Alfa\";\n$frase3 = \"Beta\";\n$frase4 = \"Alfa5\";\n$frase5 = \"Alfa10\";\n\nvar_dump( $frase1 == $frase2 ); // true\nvar_dump( $frase1 === $frase2 ); // true\nvar_dump( strcmp($frase1, $frase2) ); // 0\nvar_dump( strncmp($frase1, $frase5, 3) ); // 0\nvar_dump( $frase2 &lt; $frase3 ); // true\nvar_dump( strcmp($frase2, $frase3) ); // -1\nvar_dump( $frase4 &lt; $frase5 ); // false\nvar_dump( strcmp($frase4, $frase5) ); // 4 \u2192 f4 &gt; f5\nvar_dump( strnatcmp($frase4, $frase5) ); // -1 \u2192 f4 &lt; f5\n?&gt;\n</code></pre> <p>Si lo que queremos es buscar dentro de una cadena, tenemos:</p> <ul> <li><code>strpos</code> / <code>strrpos</code>: busca en una cadena y devuelve la posici\u00f3n de la primera/\u00faltima ocurrencia.</li> <li><code>strstr</code> / <code>strchr (alias)</code>: busca una cadena y devuelve la subcadena a partir de donde la ha encontrado</li> <li><code>stristr</code>: ignora las may\u00fasculas</li> </ul> <pre><code>&lt;?php\n$frase = \"Quien busca encuentra, eso dicen, a veces\";\n$pos1 = strpos($frase, \",\"); // encuentra la primera coma\n$pos2 = strrpos($frase, \",\"); // encuentra la \u00faltima coma\n$trasComa = strstr($frase, \",\"); // \", eso dicen, a veces\"\n?&gt;\n</code></pre> <p>Si queremos averiguar que contiene las cadenas, tenemos un conojunto de funciones de comprobaciones de tipo, se conocen como las funciones ctype que devuelven un booleano:</p> <ul> <li><code>ctype_alpha</code> \u2192 letras</li> <li><code>ctype_alnum</code> \u2192 alfanum\u00e9ricos</li> <li><code>ctype_digit</code> \u2192 d\u00edgitos</li> <li><code>ctype_punct</code> \u2192 caracteres de puntuaci\u00f3n, sin espacios</li> <li><code>ctype_space</code> \u2192 son espacios, tabulador, salto de l\u00ednea</li> </ul> <pre><code>&lt;?php\n$prueba1 = \"hola\";\n$prueba2 = \"hola33\";\n$prueba3 = \"33\";\n$prueba4 = \",.()[]\";\n$prueba5 = \" ,.()[]\";\n\necho ctype_alpha($prueba1).\"&lt;br&gt;\"; // true\necho ctype_alnum($prueba2).\"&lt;br&gt;\"; // true\necho ctype_digit($prueba3).\"&lt;br&gt;\"; // true\necho ctype_punct($prueba4).\"&lt;br&gt;\"; // true\necho ctype_space($prueba5).\"&lt;br&gt;\"; // false\necho ctype_space($prueba5[0]).\"&lt;br&gt;\"; // true\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#trabajando-con-subcadenas","title":"Trabajando con subcadenas","text":"<p>Si queremos romper las cadenas en trozos, tenemos:</p> <ul> <li><code>explode</code>: convierte en array la cadena mediante un separador.</li> <li><code>implode</code> / <code>join</code>: pasa un array a cadena con un separador</li> <li><code>str_split</code> / <code>chunk_split</code>: pasa una cadena a una array/cadena cada X caracteres</li> </ul> <pre><code>&lt;?php\n$frase = \"Quien busca encuentra, eso dicen, a veces\";\n$partes = explode(\",\", $frase);\n\n$ciudades = [\"Elche\", \"Aspe\", \"Alicante\"];\n$cadenaCiudades = implode(\"&gt;\", $ciudades);\n\n$partes3cadena = chunk_split($frase, 3);\n// Qui \n// en \n// bus \n// ca \n// ...\n$partes3array = str_split($frase, 3);\n// [\"Qui\", \"en \", \"bus\", \"ca \", \"enc\", \u2026] \n?&gt;\n</code></pre> <p>Si queremos trabajar con tokens:</p> <ul> <li><code>strtok(cadena, separador)</code></li> <li>y dentro del bucle: <code>strtok(separador)</code></li> </ul> <p>Finalmente, para separarla en base al formato:</p> <ul> <li><code>sscanf</code>: al rev\u00e9s que <code>sprintf</code>, crea un array a partir de la cadena y el patr\u00f3n.</li> </ul> <p>Finalmente, otras operaciones que podemos realizar para trabajar con subcadenas son:</p> <ul> <li><code>substr_count</code>: n\u00famero de veces que aparece la subcadena dentro de la cadena</li> <li><code>substr_replace</code>: reemplaza parte de la cadena a partir de su posici\u00f3n, y opcionalmente, longitud</li> </ul> <pre><code>&lt;?php\n$batman = \"Bruce Wayne es Batman\";\n$empresa = substr($batman, 6, 5); // Wayne\n$bes = substr_count($batman, \"B\"); // 2\n// Bruce Wayne es camarero\n$camarero1 = substr_replace($batman, \"camarero\", 15);\n$camarero2 = substr_replace($batman, \"camarero\", -6); // quita 6 desde el final\n// Bruno es Batman\n$bruno = substr_replace($batman, \"Bruno\", 0, 11);\n?&gt;\n</code></pre> <p>Tambi\u00e9n disponemos de una serie de funciones que facilitan las codificaciones desde y hacia HTML:</p> <ul> <li><code>htmlentities</code>: convierte a entidades HTML, por ejemplo, <code>\u00e1</code> por <code>&amp;aacute;</code>,  <code>\u00f1</code> por <code>&amp;ntilde;</code>, <code>&lt;</code> por <code>&amp;lt;</code>, etc..</li> <li><code>htmlspecialchars</code>: idem pero solo con los caracteres especiales (<code>&amp;</code>, <code>\"</code>, <code>'</code>, <code>&lt;</code>, <code>&gt;</code>, ...)</li> <li><code>striptags</code>: elimina etiquetas HTML.</li> <li><code>nl2br</code>: cambia saltos de l\u00ednea por <code>&lt;br /&gt;</code>.</li> <li><code>rawurlencode</code> / <code>rawurldecode</code>: codifica/decodifica una URL (espacios, ...).</li> </ul> <p>Estas funciones las utilizaremos en la unidad 4.- Programaci\u00f3n Web.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#matematicas","title":"Matem\u00e1ticas","text":"<p>Disponemos tanto de constantes como funciones ya definidas para trabajar con operaciones matem\u00e1ticas: https://www.php.net/manual/es/ref.math.php</p> <ul> <li>Constantes ya definidas<ul> <li><code>M_PI</code>, <code>M_E</code>, <code>M_EULER</code>, <code>M_LN2</code>, <code>M_LOG2E</code></li> <li><code>PHP_INT_MAX</code>, <code>PHP_FLOAT_MAX</code></li> </ul> </li> <li>Funciones de c\u00e1lculo<ul> <li><code>pow</code>, <code>sqrt</code>, <code>log</code>, <code>decbin</code>, <code>bindec</code>, <code>decoct</code>, <code>dechex</code>, <code>base_convert</code>, <code>max</code>, <code>min</code></li> </ul> </li> <li>Funciones trigonom\u00e9tricas<ul> <li><code>sin</code>, <code>cos</code>, <code>tan</code>, <code>deg2rad</code>, <code>rad2deg</code></li> </ul> </li> <li>Funciones para trabajar con n\u00fameros aleatorios<ul> <li><code>rand</code>, <code>mt_rand</code> (m\u00e1s r\u00e1pida)</li> </ul> </li> </ul> <p>Aunque la mayor\u00eda de ellas son muy espec\u00edficas de problemas matem\u00e1ticos / estad\u00edsticos, es muy com\u00fan que tengamos que redondear y/o formatear los c\u00e1lculos antes de mostrarlos al usuario.</p> <p>Mediante la funci\u00f3n <code>number_format(numero, cantidadDecimales, separadorDecimales, separadorMiles)</code> podermos pasar n\u00fameros a cadena con decimales y/o separadores de decimales y/o de miles.</p> <pre><code>&lt;?php\n$nf = 1234.5678;\necho number_format($nf, 2); // 1,234.57\necho number_format($nf, 2, \"M\", \"#\"); // 1#234M57\n?&gt;\n</code></pre> <p>Para redondear, tenemos <code>abs</code> para el valor absoluto y <code>round</code> para redondear, <code>ceil</code> para aproximaci\u00f3n por exceso y <code>floor</code> por defecto.</p> <pre><code>&lt;?php\n$num = 7.7;\n$siete = floor($num);\n$ocho = ceil($num);\n\n$otro = 4.49;\n$cuatro = round($otro);\n$cuatrocinco = round($otro, 1);\n$cinco = round($cuatrocinco);\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#tipos-de-datos","title":"Tipos de datos","text":"<p>Finalmente, para realizar conversiones de datos o si queremos trabajar con tipos de datos, tenemos las siguientes funciones:</p> <ul> <li><code>floatval</code>, <code>intval</code>, <code>strval</code>: devuelve una variable del tipo de la funci\u00f3n indicada</li> <li><code>settype</code>: fuerza la conversi\u00f3n</li> <li><code>gettype</code>: obtiene el tipo</li> <li><code>is_int</code>, <code>is_float</code>, <code>is_string</code>, <code>is_array</code>, <code>is_object</code>: devuelve un booleano a partir del tipo recibido</li> </ul> <pre><code>&lt;?php\n$uno = 1;\nvar_dump(is_int($uno)); // true\n$unofloat = floatval($uno);\nsettype($uno, \"string\");\nvar_dump(is_int($uno)); // false\nvar_dump(is_string($uno)); // true\nsettype($uno, \"float\");\nvar_dump(is_int($uno)); // false\nvar_dump(is_float($uno)); // true\nvar_dump(is_int(intval($uno))); // true\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT02PHP.html#referencias","title":"Referencias","text":"<ul> <li>Manual de PHP</li> <li>PHP en 2020, por Jes\u00fas Amieiro</li> <li>Apuntes de PHP de Bartolom\u00e9 Sintes, profesor del IES Abastos de Valencia</li> <li>Gu\u00eda de Estilo - PSR</li> <li>PHP - La manera correcta</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html","title":"PHP Orientado a Objetos","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 18 sesiones</p> <p>Resultado de aprendizaje:</p> <ol> <li>Desarrolla aplicaciones Web identificando y aplicando mecanismos para separar el c\u00f3digo de presentaci\u00f3n de la l\u00f3gica de negocio.</li> </ol> <p>Criterios de evaluaci\u00f3n:</p> <ol> <li>Se han identificado las ventajas de separar la l\u00f3gica de negocio de los aspectos de presentaci\u00f3n de la aplicaci\u00f3n. </li> <li>Se han analizado tecnolog\u00edas y mecanismos que permiten realizar esta separaci\u00f3n y sus caracter\u00edsticas principales. </li> <li>Se han utilizado objetos y controles en el servidor para generar el aspecto visual de la aplicaci\u00f3n web en el cliente. </li> <li>Se han utilizado formularios generados de forma din\u00e1mica para responder a los eventos de la aplicaci\u00f3n Web. </li> <li>Se han escrito aplicaciones Web con mantenimiento de estado y separaci\u00f3n de la l\u00f3gica de negocio. </li> <li>Se han aplicado los principios de la programaci\u00f3n orientada a objetos. </li> <li>Se ha probado y documentado el c\u00f3digo.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#clases-y-objetos","title":"Clases y Objetos","text":"<p>PHP sigue un paradigma de programaci\u00f3n orientada a objetos (POO) basada en clases.</p> <p>Un clase es un plantilla que define las propiedades y m\u00e9todos para poder crear objetos. De este manera, un objeto es una instancia de una clase.</p> <p>Tanto las propiedades como los m\u00e9todos se definen con una visibilidad (quien puede acceder)</p> <ul> <li>Privado - <code>private</code>:  S\u00f3lo puede acceder la propia clase.</li> <li>Protegido - <code>protected</code>: S\u00f3lo puede acceder la propia clase o sus descendientes.</li> <li>P\u00fablico - <code>public</code>: Puede acceder cualquier otra clase.</li> </ul> <p>Para declarar una clase, se utiliza la palabra clave <code>class</code> seguido del nombre de la clase. Para instanciar un objeto a partir de la clase, se utiliza <code>new</code>:</p> <pre><code>&lt;?php\nclass NombreClase {\n// propiedades\n// y m\u00e9todos\n}\n\n$ob = new NombreClase();\n</code></pre> <p>Clases con may\u00fascula</p> <p>Todas las clases empiezan por letra may\u00fascula.</p> <p>Cuando un proyecto crece, es normal modelar las clases mediante UML (\u00bfrecord\u00e1is Entornos de Desarrollo?). La clases se representan mediante un cuadrado, separando el nombre, de las propiedades y los m\u00e9todos:</p> <p></p> <p>Una vez que hemos creado un objeto, se utiliza el operador <code>-&gt;</code> para acceder a una propiedad o un m\u00e9todo:</p> <pre><code>$objeto-&gt;propiedad;\n$objeto-&gt;m\u00e9todo(par\u00e1metros);\n</code></pre> <p>Si desde dentro de la clase, queremos acceder a una propiedad o m\u00e9todo de la misma clase, utilizaremos la referencia <code>$this</code>;</p> <pre><code>$this-&gt;propiedad;\n$this-&gt;m\u00e9todo(par\u00e1metros);  \n</code></pre> <p>As\u00ed pues, como ejemplo, codificar\u00edamos una persona en el fichero <code>Persona.php</code> como:</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0setNombre(string $nom)\u00a0{\n        $this-&gt;nombre=$nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n        echo\u00a0$this-&gt;nombre;\n        echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(); // creamos un objeto\n$bruno-&gt;setNombre(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre> <p>Aunque se pueden declarar varias clases en el mismo archivo, es una mala pr\u00e1ctica. As\u00ed pues, cada fichero contedr\u00e1 una sola clase, y se nombrar\u00e1 con el nombre de la clase.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#encapsulacion","title":"Encapsulaci\u00f3n","text":"<p>Las propiedades se definen privadas o protegidas (si queremos que las clases heredadas puedan acceder).</p> <p>Para cada propiedad, se a\u00f1aden m\u00e9todos p\u00fablicos (getter/setter):</p> <pre><code>public setPropiedad(tipo $param)\npublic getPropiedad() : tipo\n</code></pre> <p>Las constantes se definen p\u00fablicas para que sean accesibles por todos los recursos.</p> <pre><code>&lt;?php\nclass\u00a0MayorMenor\u00a0{\n    private\u00a0int $mayor;\n    private\u00a0int $menor;\n\n    public\u00a0function\u00a0setMayor(int\u00a0$may)\u00a0{\n        $this-&gt;mayor\u00a0=\u00a0$may;\n    }\n\n    public\u00a0function\u00a0setMenor(int\u00a0$men)\u00a0{\n        $this-&gt;menor\u00a0=\u00a0$men;\n    }\n\n    public\u00a0function\u00a0getMayor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;mayor;\n    }\n\n    public\u00a0function\u00a0getMenor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;menor;\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#recibiendo-y-enviando-objetos","title":"Recibiendo y enviando objetos","text":"<p>Es recomendable indicarlo en el tipo de par\u00e1metros. Si el objeto puede devolver nulos se pone <code>?</code> delante del nombre de la clase.</p> <p>Objetos por referencia</p> <p>Los objetos que se env\u00edan y reciben como par\u00e1metros siempre se pasan por referencia.</p> <pre><code>&lt;?php\nfunction\u00a0maymen(array\u00a0$numeros)\u00a0:\u00a0?MayorMenor\u00a0{\n    $a\u00a0=\u00a0max($numeros);\n    $b\u00a0=\u00a0min($numeros);\n\n    $result\u00a0=\u00a0new\u00a0MayorMenor();\n    $result-&gt;setMayor($a);\n    $result-&gt;setMenor($b);\n\n    return\u00a0$result;\n}\n\n$resultado\u00a0=\u00a0\u00a0maymen([1,76,9,388,41,39,25,97,22]);\necho\u00a0\"&lt;br&gt;Mayor:\u00a0\".$resultado-&gt;getMayor();\necho\u00a0\"&lt;br&gt;Menor:\u00a0\".$resultado-&gt;getMenor();\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#constructor","title":"Constructor","text":"<p>El constructor de los objetos se define mediante el m\u00e9todo m\u00e1gico <code>__construct</code>. Puede o no tener par\u00e1metros, pero s\u00f3lo puede haber un \u00fanico constructor.</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0__construct(string $nom)\u00a0{\n        $this-&gt;nombre = $nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n    \u00a0\u00a0echo\u00a0$this-&gt;nombre;\n    \u00a0\u00a0echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#constructores-en-php-8","title":"Constructores en PHP 8","text":"<p>Una de las grandes novedades que ofrece PHP 8 es la simplificaci\u00f3n de los constructores con par\u00e1metros, lo que se conoce como promoci\u00f3n de las propiedades del constructor.</p> <p>Para ello, en vez de tener que declarar las propiedades como privadas o protegidas, y luego dentro del constructor tener que asignar los par\u00e1metros a est\u00e1s propiedades, el propio constructor promociona las propiedades.</p> <p>Ve\u00e1moslo mejor con un ejemplo. Imaginemos una clase <code>Punto</code> donde queramos almacenar sus coordenadas:</p> <pre><code>&lt;?php\nclass Punto {\n    protected float $x;\n    protected float $y;\n    protected float $z;\n\n    public function __construct(\n        float $x = 0.0,\n        float $y = 0.0,\n        float $z = 0.0\n    ) {\n        $this-&gt;x = $x;\n        $this-&gt;y = $y;\n        $this-&gt;z = $z;\n    }\n}\n</code></pre> <p>En PHP 8, quedar\u00eda del siguiente modo (mucho m\u00e1s corto, lo que facilita su legibilidad):</p> <pre><code>&lt;?php\nclass Punto {\n    public function __construct(\n        protected float $x = 0.0,\n        protected float $y = 0.0,\n        protected float $z = 0.0,\n    ) {}\n}\n</code></pre> <p>El orden importa</p> <p>A la hora de codificar el orden de los elementos debe ser:</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n\nclass NombreClase {\n    // propiedades\n\n    // constructor\n\n    // getters - setters\n\n    // resto de m\u00e9todos\n}\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#clases-estaticas","title":"Clases est\u00e1ticas","text":"<p>Son aquellas que tienen propiedades y/o m\u00e9todos est\u00e1ticos (tambi\u00e9n se conocen como de clase, por que su valor se comparte entre todas las instancias de la misma clase).</p> <p>Se declaran con <code>static</code> y se referencian con <code>::</code>.</p> <ul> <li>Si queremos acceder a un m\u00e9todo est\u00e1tico, se antepone el nombre de la clase: <code>Producto::nuevoProducto()</code>.</li> <li>Si desde un m\u00e9todo queremos acceder a una propiedad est\u00e1tica de la misma clase, se utiliza la referencia <code>self</code>: <code>self::$numProductos</code></li> </ul> <pre><code>&lt;?php\nclass Producto {\n    const IVA = 0.23;\n    private static $numProductos = 0; \n\n    public static function nuevoProducto() {\n        self::$numProductos++;\n    }\n}\n\nProducto::nuevoProducto();\n$impuesto = Producto::IVA;\n</code></pre> <p>Tambi\u00e9n podemos tener clases normales que tengan alguna propiedad est\u00e1tica:</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    const\u00a0IVA\u00a0=\u00a00.23;\n    private\u00a0static\u00a0$numProductos\u00a0=\u00a00;\u00a0\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0__construct(string\u00a0$cod)\u00a0{\n        self::$numProductos++;\n        $this-&gt;codigo\u00a0=\u00a0$cod;\n    }\n\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"El\u00a0producto\u00a0\".$this-&gt;codigo.\" es\u00a0el\u00a0n\u00famero\u00a0\".self::$numProductos;\n    }\n}\n\n$prod1\u00a0=\u00a0new\u00a0Producto(\"PS5\");\n$prod2\u00a0=\u00a0new\u00a0Producto(\"XBOX\u00a0Series\u00a0X\");\n$prod3\u00a0=\u00a0new\u00a0Producto(\"Nintendo\u00a0Switch\");\necho\u00a0$prod3-&gt;mostrarResumen();\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#introspeccion","title":"Introspecci\u00f3n","text":"<p>Al trabajar con clases y objetos, existen un conjunto de funciones ya definidas por el lenguaje que permiten obtener informaci\u00f3n sobre los objetos:</p> <ul> <li><code>instanceof</code>: permite comprobar si un objeto es de una determinada clase</li> <li><code>get_class</code>: devuelve el nombre de la clase</li> <li><code>get_declared_class</code>: devuelve un array con los nombres de las clases definidas</li> <li><code>class_alias</code>: crea un alias</li> <li><code>class_exists</code> / <code>method_exists</code> / <code>property_exists</code>: <code>true</code> si la clase / m\u00e9todo / propiedad est\u00e1 definida</li> <li><code>get_class_methods</code> / <code>get_class_vars</code> / <code>get_object_vars</code>: Devuelve un array con los nombres de los m\u00e9todos / propiedades de una clase / propiedades de un objeto que son accesibles desde d\u00f3nde se hace la llamada.</li> </ul> <p>Un ejemplo de estas funciones puede ser el siguiente:</p> <pre><code>&lt;?php\n$p\u00a0=\u00a0new\u00a0Producto(\"PS5\");\nif\u00a0($p\u00a0instanceof\u00a0Producto)\u00a0{\n    echo\u00a0\"Es\u00a0un\u00a0producto\";\n    echo\u00a0\"La\u00a0clase\u00a0es\u00a0\".get_class($p);\n\n    class_alias(\"Producto\",\u00a0\"Articulo\");\n    $c\u00a0=\u00a0new\u00a0Articulo(\"Nintendo\u00a0Switch\");\n    echo\u00a0\"Un\u00a0articulo\u00a0es\u00a0un\u00a0\".get_class($c);\n\n    print_r(get_class_methods(\"Producto\"));\n    print_r(get_class_vars(\"Producto\"));\n    print_r(get_object_vars($p));\n\n    if\u00a0(method_exists($p,\u00a0\"mostrarResumen\"))\u00a0{\n        $p-&gt;mostrarResumen();\n    }\n}\n</code></pre> <p>Clonado</p> <p>Al asignar dos objetos no se copian, se crea una nueva referencia. Si queremos una copia, hay que clonarlo mediante el m\u00e9todo <code>clone(object) : object</code></p> <p>Si queremos modificar el clonado por defecto, hay que definir el m\u00e9todo m\u00e1gico <code>__clone()</code> que se llamar\u00e1 despu\u00e9s de copiar todas las propiedades.</p> <p>M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/language.oop5.cloning.php</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#herencia","title":"Herencia","text":"<p>PHP soporta herencia simple, de manera que una clase solo puede heredar de otra, no de dos clases a la vez. Para ello se utiliza la palabra clave <code>extends</code>. Si queremos que la clase A hereda de la clase B haremos:</p> <pre><code>class A extends B\n</code></pre> <p>El hijo hereda los atributos y m\u00e9todos p\u00fablicos y protegidos.</p> <p>Cada clase en un archivo</p> <p>Como ya hemos comentado, deber\u00edamos colocar cada clase en un archivo diferente para posteriormente utilizarlo mediante <code>include</code>. En los siguiente ejemplo los hemos colocado junto para facilitar su legibilidad.</p> <p>Por ejemplo, tenemos una clase <code>Producto</code> y una <code>Tv</code> que hereda de <code>Producto</code>:</p> <pre><code>&lt;?php\nclass Producto {\n    public $codigo;\n    public $nombre;\n    public $nombreCorto;\n    public $PVP;\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n}\n</code></pre> <p>Podemos utilizar las siguientes funciones para averiguar si hay relaci\u00f3n entre dos clases:</p> <ul> <li><code>get_parent_class(object): string</code></li> <li><code>is_subclass_of(object, string): bool</code></li> </ul> <pre><code>&lt;?php\n$t = new Tv();\n$t-&gt;codigo = 33;\nif ($t instanceof Producto) {\n    echo $t-&gt;mostrarResumen();\n}\n\n$padre = get_parent_class($t);\necho \"&lt;br&gt;La clase padre es: \" . $padre;\n$objetoPadre = new $padre;\necho $objetoPadre-&gt;mostrarResumen();\n\nif (is_subclass_of($t, 'Producto')) {\n    echo \"&lt;br&gt;Soy un hijo de Producto\";\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#sobreescribir-metodos","title":"Sobreescribir m\u00e9todos","text":"<p>Podemos crear m\u00e9todos en los hijos con el mismo nombre que el padre, cambiando su comportamiento. Para invocar a los m\u00e9todos del padre -&gt; <code>parent::nombreMetodo()</code></p> <pre><code>&lt;?php\nclass Tv extends Producto {\n   public $pulgadas;\n   public $tecnologia;\n\n   public function mostrarResumen() {\n      parent::mostrarResumen();\n      echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n   }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#constructor-en-hijos","title":"Constructor en hijos","text":"<p>En los hijos no se crea ning\u00fan constructor de manera autom\u00e1tica. Por lo que si no lo hay, se invoca autom\u00e1ticamente al del padre. En cambio, si lo definimos en el hijo, hemos de invocar al del padre de manera expl\u00edcita.</p> PHP7PHP8 <pre><code>&lt;?php\nclass Producto {\n    public string $codigo;\n\n    public\u00a0function\u00a0__construct(string $codigo) {\n        $this-&gt;codigo =\u00a0$codigo;\n    }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public\u00a0function\u00a0__construct(string\u00a0$codigo,\u00a0int\u00a0$pulgadas,\u00a0string\u00a0$tecnologia)\u00a0{\n        parent::__construct($codigo);\n        $this-&gt;pulgadas\u00a0=\u00a0$pulgadas;\n        $this-&gt;tecnologia\u00a0=\u00a0$tecnologia;\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre> <pre><code>&lt;?php\nclass Producto {\n    public\u00a0function\u00a0__construct(private string $codigo) { }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }        \n}\n\nclass Tv extends Producto {\n\n    public\u00a0function\u00a0__construct(\n        string\u00a0$codigo,\n        private int\u00a0$pulgadas,\n        private string\u00a0$tecnologia)\n    {\n        parent::__construct($codigo);\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#clases-abstractas","title":"Clases abstractas","text":"<p>Las clases abstractas obligan a heredar de una clase, ya que no se permite su instanciaci\u00f3n. Se define mediante <code>abstract class NombreClase {</code>. Una clase abstracta puede contener propiedades y m\u00e9todos no-abstractos, y/o m\u00e9todos abstractos.</p> <pre><code>&lt;?php\n//\u00a0Clase\u00a0abstracta\nabstract\u00a0class\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n    //\u00a0M\u00e9todo\u00a0abstracto\n    abstract\u00a0public\u00a0function\u00a0mostrarResumen();\n}\n</code></pre> <p>Cuando una clase hereda de una clase abstracta, obligatoriamente debe implementar los m\u00e9todos que tiene el padre marcados como abstractos.</p> <pre><code>&lt;?php\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public function mostrarResumen() { //obligado a implementarlo\n        echo \"&lt;p&gt;C\u00f3digo \".$this-&gt;getCodigo().\"&lt;/p&gt;\";\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n\n$t = new Tv();\necho $t-&gt;getCodigo();\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#clases-finales","title":"Clases finales","text":"<p>Son clases opuestas a abstractas, ya que evitan que se pueda heredar una clase o m\u00e9todo para sobreescribirlo.</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n\n    final\u00a0public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"Producto\u00a0\".$this-&gt;codigo;\n    }\n}\n\n// No podremos heredar de Microondas\nfinal\u00a0class\u00a0Microondas\u00a0extends\u00a0Producto\u00a0{\n    private\u00a0$potencia;\n\n    public\u00a0function\u00a0getPotencia()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;potencia;\n    }\n\n    // No podemos implementar mostrarResumen()\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#interfaces","title":"Interfaces","text":"<p>Permite definir un contrato con las firmas de los m\u00e9todos a cumplir. As\u00ed pues, s\u00f3lo contiene declaraciones de funciones y todas deben ser p\u00fablicas.</p> <p>Se declaran con la palabra clave <code>interface</code> y luego las clases que cumplan el contrato lo realizan mediante la palabra clave <code>implements</code>.</p> <pre><code>&lt;?php\ninterface Nombreable {\n// declaraci\u00f3n de funciones\n}\nclass NombreClase implements NombreInterfaz {\n// c\u00f3digo de la clase\n</code></pre> <p>Se permite la herencia de interfaces. Adem\u00e1s, una clase puede implementar varios interfaces (en este caso, s\u00ed soporta la herecia m\u00faltiple, pero s\u00f3lo de interfaces).</p> <pre><code>&lt;?php\ninterface\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string;\n}\n\ninterface\u00a0MostrableTodo\u00a0extends\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarTodo()\u00a0:\u00a0string;\n}\n\ninterface\u00a0Facturable\u00a0{\n    public\u00a0function\u00a0generarFactura()\u00a0:\u00a0string;\n}\n\nclass\u00a0Producto\u00a0implements\u00a0MostrableTodo,\u00a0Facturable\u00a0{\n    //\u00a0Implementaciones\u00a0de\u00a0los\u00a0m\u00e9todos\n    // Obligatoriamente deber\u00e1 implementar public\u00a0function\u00a0mostrarResumen, mostrarTodo y generarFactura\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#metodos-encadenados","title":"M\u00e9todos encadenados","text":"<p>Sigue el planteamiento de la programaci\u00f3n funcional, y tambi\u00e9n se conoce como method chaining. Plantea que sobre un objeto se realizan varias llamadas.</p> <pre><code>&lt;?php\n$p1\u00a0=\u00a0new\u00a0Libro();\n$p1-&gt;setNombre(\"Harry\u00a0Potter\");\n$p1-&gt;setAutor(\"JK\u00a0Rowling\");\necho\u00a0$p1;\n\n// Method chaining\n$p2\u00a0=\u00a0new\u00a0Libro();\n$p2-&gt;setNombre(\"Patria\")-&gt;setAutor(\"Aramburu\");\necho\u00a0$p2;\n</code></pre> <p>Para facilitarlo, vamos a modificar todos sus m\u00e9todos mutadores (que modifican datos, setters, ...) para que devuelvan una referencia a <code>$this</code>:</p> <pre><code>&lt;?php\nclass\u00a0Libro\u00a0{\n    private\u00a0string\u00a0$nombre;\n    private\u00a0string\u00a0$autor;\n\n    public\u00a0function\u00a0getNombre()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre;\n    }\n    public\u00a0function\u00a0setNombre(string\u00a0$nombre)\u00a0:\u00a0Libro\u00a0{\u00a0\n        $this-&gt;nombre\u00a0=\u00a0$nombre;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0getAutor()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;autor;\n    }\n    public\u00a0function\u00a0setAutor(string\u00a0$autor)\u00a0:\u00a0Libro\u00a0{\n        $this-&gt;autor\u00a0=\u00a0$autor;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0__toString()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre.\"\u00a0de\u00a0\".$this-&gt;autor;\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#metodos-magicos","title":"M\u00e9todos m\u00e1gicos","text":"<p>Todas las clases PHP ofrecen un conjunto de m\u00e9todos, tambi\u00e9n conocidos como magic methods que se pueden sobreescribir para sustituir su comportamiento. Algunos de ellos ya los hemos utilizado.</p> <p>Ante cualquier duda, es conveniente consultar la documentaci\u00f3n oficial.</p> <p>Los m\u00e1s destacables son:</p> <ul> <li><code>__construct()</code></li> <li><code>__destruct()</code> \u2192 se invoca al perder la referencia. Se utiliza para cerrar una conexi\u00f3n a la BD, cerrar un fichero, ...</li> <li><code>__toString()</code> \u2192 representaci\u00f3n del objeto como cadena. Es decir, cuando hacemos <code>echo $objeto</code> se ejecuta autom\u00e1ticamente este m\u00e9todo.</li> <li><code>__get(propiedad)</code>, <code>__set(propiedad, valor)</code> \u2192 Permitir\u00eda acceder a las propiedad privadas, aunque siempre es m\u00e1s legible/mantenible codificar los getter/setter.</li> <li><code>__isset(propiedad)</code>, <code>__unset(propiedad)</code> \u2192 Permite averiguar o quitar el valor a una propiedad.</li> <li><code>__sleep()</code>, <code>__wakeup()</code> \u2192 Se ejecutan al recuperar (unserialize^) o almacenar un objeto que se serializa (serialize), y se utilizan para permite definir qu\u00e9 propiedades se serializan.</li> <li><code>__call()</code>, <code>__callStatic()</code> \u2192 Se ejecutan al llamar a un m\u00e9todo que no es p\u00fablico. Permiten sobrecargan m\u00e9todos.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#espacio-de-nombres","title":"Espacio de nombres","text":"<p>Desde PHP 5.3 y tambi\u00e9n conocidos como Namespaces, permiten organizar las clases/interfaces, funciones y/o constantes de forma similar a los paquetes en Java.</p> <p>Recomendaci\u00f3n</p> <p>Un s\u00f3lo namespace por archivo y crear una estructura de carpetas respectando los niveles/subniveles (igual que se hace en Java)</p> <p>Se declaran en la primera l\u00ednea mediante la palabra clave <code>namespace</code> seguida del nombre del espacio de nombres asignado (cada subnivel se separa con la barra invertida <code>\\</code>):</p> <p>Por ejemplo, para colocar la clase <code>Producto</code> dentro del namespace <code>Dwes\\Ejemplos</code> lo har\u00edamos as\u00ed:</p> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Ejemplos;\n\nconst\u00a0IVA\u00a0=\u00a00.21;\n\nclass\u00a0Producto\u00a0{\n    public\u00a0$nombre;\n    \u00a0\u00a0\n    public\u00a0function\u00a0muestra()\u00a0:\u00a0void\u00a0{\n        echo\"&lt;p&gt;Prod:\"\u00a0.\u00a0$this-&gt;nombre\u00a0.\u00a0\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#acceso","title":"Acceso","text":"<p>Para referenciar a un recurso que contiene un namespace, primero hemos de tenerlo disponible haciendo uso de <code>include</code> o <code>require</code>. Si el recurso est\u00e1 en el mismo namespace, se realiza un acceso directo (se conoce como acceso sin cualificar).</p> <p>Realmente hay tres tipos de acceso:</p> <ul> <li>sin cualificar: <code>recurso</code></li> <li>cualificado: <code>rutaRelativa\\recurso</code> \u2192 no hace falta poner el namespace completo</li> <li>totalmente cualificado: <code>\\rutaAbsoluta\\recurso</code></li> </ul> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Ejemplos;\n\ninclude_once(\"Producto.php\");\n\necho\u00a0IVA;\u00a0//\u00a0sin\u00a0cualificar\necho\u00a0Utilidades\\IVA;\u00a0// acceso cualificado. Dar\u00eda error, no existe \\Dwes\\Ejemplos\\Utilidades\\IVA\necho\u00a0\\Dwes\\Ejemplos\\IVA;\u00a0//\u00a0totalmente\u00a0cualificado\n\n$p1\u00a0=\u00a0new\u00a0Producto();\u00a0//\u00a0lo busca en el mismo namespace y encuentra \\Dwes\\Ejemplos\\Producto\n$p2\u00a0=\u00a0new\u00a0Model\\Producto(); // dar\u00eda error, no existe el namespace Model. Est\u00e1 buscando \\Dwes\\Ejemplos\\Model\\Producto\n$p3\u00a0=\u00a0new\u00a0\\Dwes\\Ejemplos\\Producto(); //\u00a0\\Dwes\\Ejemplos\\Producto\n</code></pre> <p>Para evitar la referencia cualificada podemos declarar el uso mediante <code>use</code> (similar a hacer <code>import</code> en Java). Se hace en la cabecera, tras el <code>namespace</code>:</p> <p>Los tipos posibles son:</p> <ul> <li><code>use const nombreCualificadoConstante</code></li> <li><code>use function nombreCualificadoFuncion</code></li> <li><code>use nombreCualificadoClase</code></li> <li><code>use nombreCualificadoClase as NuevoNombre</code> // para renombrar elementos</li> </ul> <p>Por ejemplo, si queremos utilizar la clase <code>\\Dwes\\Ejemplos\\Producto</code> desde un recurso que se encuentra en la ra\u00edz, por ejemplo en <code>inicio.php</code>, har\u00edamos:</p> <pre><code>&lt;?php\ninclude_once(\"Dwes\\Ejemplo\\Producto.php\");\n\nuse\u00a0const\u00a0Dwes\\Ejemplos\\IVA;\nuse\u00a0\\Dwes\\Ejemplos\\Producto;\n\necho\u00a0IVA;\n$p1\u00a0=\u00a0new\u00a0Producto();\n</code></pre> <p>To <code>use</code> or not to <code>use</code></p> <p>En resumen, <code>use</code> permite acceder sin cualificar a recursos que est\u00e1n en otro namespace. Si estamos en el mismo espacio de nombre, no necesitamos <code>use</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#organizacion","title":"Organizaci\u00f3n","text":"<p>Todo proyecto, conforme crece, necesita organizar su c\u00f3digo fuente. Se plantea una organizaci\u00f3n en la que los archivos que interactuan con el navegador se colocan en el ra\u00edz, y las clases que definamos van dentro de un namespace (y dentro de su propia carpeta <code>src</code> o <code>app</code>).</p> Organizaci\u00f3n del c\u00f3digo fuente <p>Organizaci\u00f3n, includes y usos</p> <ul> <li>Colocaremos cada recurso en un fichero aparte.</li> <li>En la primera l\u00ednea indicaremos su namespace (si no est\u00e1 en el ra\u00edz).</li> <li>Si utilizamos otros recursos, haremos un <code>include_once</code> de esos recursos (clases, interfaces, etc...).</li> <li>Cada recurso debe incluir todos los otros recursos que referencie: la clase de la que hereda, interfaces que implementa, clases utilizadas/recibidas como par\u00e1metros, etc...</li> <li>Si los recursos est\u00e1n en un espacio de nombres diferente al que estamos, emplearemos <code>use</code> con la ruta completa para luego utilizar referencias sin cualificar.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#autoload","title":"Autoload","text":"<p>\u00bfNo es tedioso tener que hacer el <code>include</code> de las clases? El autoload viene al rescate.</p> <p>As\u00ed pues, permite cargar las clases (no las constantes ni las funciones) que se van a utilizar y evitar tener que hacer el <code>include_once</code> de cada una de ellas. Para ello, se utiliza la funci\u00f3n <code>spl_autoload_register</code></p> <pre><code>&lt;?php\nspl_autoload_register(\u00a0function(\u00a0$nombreClase\u00a0)\u00a0{\n    include_once\u00a0$nombreClase.'.php';\n}\u00a0);\n?&gt;\n</code></pre> <p>\u00bfPor qu\u00e9 se llaman autoload?</p> <p>Porque antes se realizaba mediante el m\u00e9todo m\u00e1gico <code>__autoload()</code>, el cual est\u00e1 deprecated desde PHP 7.2</p> <p>Y \u00bfc\u00f3mo organizamos ahora nuestro c\u00f3digo aprovechando el autoload?</p> Organizaci\u00f3n con autoload <p>Para facilitar la b\u00fasqueda de los recursos a incluir, es recomendable colocar todas las clases dentro de una misma carpeta. Nosotros la vamos a colocar dentro de <code>app</code> (m\u00e1s adelante, cuando estudiemos Laravel veremos el motivo de esta decisi\u00f3n). Otras carpetas que podemos crear son <code>test</code> para colocar las pruebas PhpUnit que luego realizaremos, o la carpeta <code>vendor</code> donde se almacenar\u00e1n las librer\u00edas del proyecto (esta carpeta es un est\u00e1ndard dentro de PHP, ya que Composer la crea autom\u00e1ticamente).</p> <p>Como hemos colocado todos nuestros recursos dentro de <code>app</code>, ahora nuestro <code>autoload.php</code> (el cual colocamos en la carpeta ra\u00edz) s\u00f3lo va a buscar dentro de esa carpeta:</p> <pre><code>&lt;?php\nspl_autoload_register(\u00a0function(\u00a0$nombreClase\u00a0)\u00a0{\n    include_once\u00a0\"app/\".$nombreClase.'.php';\n}\u00a0);\n?&gt;\n</code></pre> <p>Autoload y rutas err\u00f3neas</p> <p>En Ubuntu al hacer el include de la clase que recibe como par\u00e1metro, las barras de los namespace (<code>\\</code>) son diferentes a las de las rutas (<code>/</code>). Por ello, es mejor que utilicemos el fichero autoload:</p> <pre><code>&lt;?php\nspl_autoload_register(\u00a0function(\u00a0$nombreClase\u00a0)\u00a0{\n    $ruta = \"app\\\\\".$nombreClase.'.php';\n    $ruta = str_replace(\"\\\\\", \"/\", $ruta); // Sustituimos las barras\n    include_once\u00a0$ruta';\n}\u00a0);\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#gestion-de-errores","title":"Gesti\u00f3n de Errores","text":"<p>PHP clasifica los errores que ocurren en diferentes niveles. Cada nivel se identifica con una constante. Por ejemplo:</p> <ul> <li><code>E_ERROR</code>: errores fatales, no recuperables. Se interrumpe el script.</li> <li><code>E_WARNING</code>: advertencias en tiempo de ejecuci\u00f3n. El script no se interrumpe.</li> <li><code>E_NOTICE</code>: avisos en tiempo de ejecuci\u00f3n.</li> </ul> <p>Pod\u00e9is comprobar el listado completo de constantes de https://www.php.net/manual/es/errorfunc.constants.php</p> <p>Para la configuraci\u00f3n de los errores podemos hacerlo de dos formas:</p> <ul> <li>A nivel de <code>php.ini</code>:<ul> <li><code>error_reporting</code>: indica los niveles de errores a notificar<ul> <li><code>error_reporting = E_ALL &amp; ~E_NOTICE</code> -&gt; Todos los errores menos los avisos en tiempo de ejecuci\u00f3n.</li> </ul> </li> <li><code>display_errors</code>: indica si mostrar o no los errores por pantalla. En entornos de producci\u00f3n es com\u00fan ponerlo a <code>off</code></li> </ul> </li> <li>mediante c\u00f3digo con las siguientes funciones:<ul> <li><code>error_reporting(codigo)</code> -&gt; Controla qu\u00e9 errores notificar</li> <li><code>set_error_handler(nombreManejador)</code> -&gt; Indica que funci\u00f3n se invocar\u00e1 cada vez que se encuentre un error. El manejador recibe como par\u00e1metros el nivel del error y el mensaje</li> </ul> </li> </ul> <p>A continuaci\u00f3n tenemos un ejemplo mediante c\u00f3digo:</p> Funciones para la gesti\u00f3n de erroresConsola <pre><code>&lt;?php\nerror_reporting(E_ALL\u00a0&amp;\u00a0~E_NOTICE\u00a0&amp;\u00a0~E_WARNING);\n$resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\n\nerror_reporting(E_ALL\u00a0&amp;\u00a0~E_NOTICE);\nset_error_handler(\"miManejadorErrores\");\n$resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\nrestore_error_handler();\u00a0//\u00a0vuelve\u00a0al\u00a0anterior\n\nfunction\u00a0miManejadorErrores($nivel,\u00a0$mensaje)\u00a0{\n    switch($nivel)\u00a0{\n        case\u00a0E_WARNING:\n            echo\u00a0\"&lt;strong&gt;Warning&lt;/strong&gt;:\u00a0$mensaje.&lt;br/&gt;\";\n            break;\n        default:\n            echo\u00a0\"Error\u00a0de\u00a0tipo\u00a0no\u00a0especificado:\u00a0$mensaje.&lt;br/&gt;\";\n    }\n}\n</code></pre> <pre><code>Error de tipo no especificado: Undefined variable: dividendo.\nError de tipo no especificado: Undefined variable: divisor.\nError de tipo Warning: Division by zero.\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#excepciones","title":"Excepciones","text":"<p>La gesti\u00f3n de excepciones forma parte desde PHP 5. Su funcionamiento es similar a Java, haciendo uso de un bloque <code>try / catch / finally</code>. Si detectamos una situaci\u00f3n an\u00f3mala y queremos lanzar una excepci\u00f3n, deberemos realizar <code>throw new Exception</code> (adjuntando el mensaje que lo ha provocado).</p> <pre><code>&lt;?php\ntry\u00a0{\n    if\u00a0($divisor\u00a0==\u00a00) {\n        throw\u00a0new\u00a0Exception(\"Divisi\u00f3n\u00a0por\u00a0cero.\");\n    }\n    $resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n    echo\u00a0\"Se\u00a0ha\u00a0producido\u00a0el\u00a0siguiente\u00a0error:\u00a0\".$e-&gt;getMessage();\n}\n</code></pre> <p>La clase <code>Exception</code> es la clase padre de todas las excepciones. Su constructor recibe <code>mensaje[,codigoError][,excepcionPrevia]</code>.</p> <p>A partir de un objeto <code>Exception</code>, podemos acceder a los m\u00e9todos <code>getMessage()</code>y <code>getCode()</code> para obtener el mensaje y el c\u00f3digo de error de la excepci\u00f3n capturada.</p> <p>El propio lenguaje ofrece un conjunto de excepciones ya definidas, las cuales podemos capturar (y lanzar desde PHP 7). Se recomienda su consulta en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#creando-excepciones","title":"Creando excepciones","text":"<p>Para crear una excepci\u00f3n, la forma m\u00e1s corta es crear una clase que \u00fanicamente herede de <code>Exception</code>.</p> <pre><code>&lt;?php\nclass\u00a0HolaExcepcion\u00a0extends\u00a0Exception\u00a0{}\n</code></pre> <p>Si queremos, y es recomendable dependiendo de los requisitos, podemos sobrecargar los m\u00e9todos m\u00e1gicos, por ejemplo, sobrecargando el constructor y llamando al constructor del padre, o rescribir el m\u00e9todo <code>__toString</code> para cambiar su mensaje:</p> <pre><code>&lt;?php\nclass\u00a0MiExcepcion\u00a0extends\u00a0Exception\u00a0{\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__construct($msj,\u00a0$codigo\u00a0=\u00a00,\u00a0Exception\u00a0$previa\u00a0=\u00a0null)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0c\u00f3digo\u00a0propio\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parent::__construct($msj,\u00a0$codigo,\u00a0$previa);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__toString()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0__CLASS__\u00a0.\u00a0\":\u00a0[{$this-&gt;code}]:\u00a0{$this-&gt;message}\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0miFuncion()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Una\u00a0funci\u00f3n\u00a0personalizada\u00a0para\u00a0este\u00a0tipo\u00a0de\u00a0excepci\u00f3n\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n}\n</code></pre> <p>Si definimos una excepci\u00f3n de aplicaci\u00f3n dentro de un namespace, cuando referenciemos a <code>Exception</code>, deberemos referenciarla mediante su nombre totalmente cualificado (<code>\\Exception</code>), o utilizando <code>use</code>:</p> Mediante nombre totalmente cualificado <pre><code>&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\n    class\u00a0AppExcepcion\u00a0extends\u00a0\\Exception\u00a0{}\n    ```\n=== \"Mediante `use`\"\n``` php\n&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\n    use Exception;\n\n    class\u00a0AppExcepcion\u00a0extends\u00a0Exception\u00a0{}\n    ```\n\n### Excepciones m\u00faltiples\n\nSe pueden usar excepciones m\u00faltiples para comprobar diferentes condiciones. A la hora de capturarlas, se hace de m\u00e1s espec\u00edfica a m\u00e1s general.\n\n``` php\n&lt;?php\n$email\u00a0=\u00a0\"ejemplo@ejemplo.com\";\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0si\u00a0el\u00a0email\u00a0es\u00a0v\u00e1lido\n\u00a0\u00a0\u00a0\u00a0if(filter_var($email,\u00a0FILTER_VALIDATE_EMAIL)\u00a0===\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0MiExcepcion($email);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0la\u00a0palabra\u00a0ejemplo\u00a0en\u00a0la\u00a0direcci\u00f3n\u00a0email\n\u00a0\u00a0\u00a0\u00a0if(strpos($email,\u00a0\"ejemplo\")\u00a0!==\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0Exception(\"$email\u00a0es\u00a0un\u00a0email\u00a0de\u00a0ejemplo no v\u00e1lido\");\n\u00a0\u00a0\u00a0\u00a0}\n}\u00a0catch\u00a0(MiExcepcion\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;miFuncion();\n}\u00a0catch(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Autoevaluaci\u00f3n</p> <p>\u00bfQu\u00e9 pasar\u00eda al ejectuar el siguiente c\u00f3digo?</p> <pre><code>&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\n    try\u00a0{\n    \u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n    }\u00a0catch\u00a0(MainException\u00a0$e)\u00a0{\n    \u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0MainException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n    }\u00a0catch\u00a0(SubException\u00a0$e)\u00a0{\n    \u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0SubException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n    }\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n    \u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n    }\n    ```\n\nSi en el mismo `catch` queremos capturar varias excepciones, hemos de utilizar el operador `|`:\n\n``` php\n&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n}\u00a0catch\u00a0(MainException\u00a0|\u00a0SubException\u00a0$e\u00a0)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Desde PHP 7, existe el tipo <code>Throwable</code>, el cual es un interfaz que implementan tanto los errores como las excepciones, y nos permite capturar los dos tipos a la vez:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0tu\u00a0codigo\n}\u00a0catch\u00a0(Throwable\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0'Forma\u00a0de\u00a0capturar\u00a0errores\u00a0y\u00a0excepciones\u00a0a\u00a0la\u00a0vez';\n}\n</code></pre> <p>Si s\u00f3lo queremos capturar los errores fatales, podemos hacer uso de la clase <code>Error</code>:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Genera\u00a0una\u00a0notificaci\u00f3n\u00a0que\u00a0no\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$variableNoAsignada;\n\u00a0\u00a0\u00a0\u00a0//\u00a0Error\u00a0fatal\u00a0que\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0funcionQueNoExiste();\n}\u00a0catch\u00a0(Error\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Error\u00a0capturado:\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#relanzar-excepciones","title":"Relanzar excepciones","text":"<p>En las aplicaciones reales, es muy com\u00fan capturar una excepci\u00f3n de sistema y lanzar una de aplicaci\u00f3n que hemos definido nostros. Tambi\u00e9n podemos lanzar las excepciones sin necesidad de estar dentro de un <code>try/catch</code>.</p> <pre><code>&lt;?php\nclass\u00a0AppException\u00a0extends\u00a0Exception\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0C\u00f3digo\u00a0de\u00a0negocio\u00a0que\u00a0falla\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0AppException(\"AppException:\u00a0\".$e-&gt;getMessage(), $e-&gt;getCode(),\u00a0$e);\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#spl","title":"SPL","text":"<p>Standard PHP Library es el conjunto de funciones y utilidades que ofrece PHP, como:</p> <ul> <li>Estructuras de datos<ul> <li>Pila, cola, cola de prioridad, lista doblemente enlazada, etc...</li> </ul> </li> <li>Conjunto de iteradores dise\u00f1ados para recorrer estructuras agregadas<ul> <li>arrays, resultados de bases de datos, \u00e1rboles XML, listados de directorios, etc.</li> </ul> </li> </ul> <p>Pod\u00e9is consultar la documentaci\u00f3n en https://www.php.net/manual/es/book.spl.php o ver algunos ejemplos en https://diego.com.es/tutorial-de-la-libreria-spl-de-php</p> <p>Tambi\u00e9n define un conjunto de excepciones que podemos utilizar para que las lancen nuestras aplicaciones:</p> <ul> <li><code>LogicException</code> (<code>extends Exception</code>)<ul> <li><code>BadFunctionCallException</code></li> <li><code>BadMethodCallException</code></li> <li><code>DomainException</code></li> <li><code>InvalidArgumentException</code></li> <li><code>LengthException</code></li> <li><code>OutOfRangeException</code></li> </ul> </li> <li><code>RuntimeException</code> (<code>extends Exception</code>)<ul> <li><code>OutOfBoundsException</code></li> <li><code>OverflowException</code></li> <li><code>RangeException</code></li> <li><code>UnderflowException</code></li> <li><code>UnexpectedValueException</code></li> </ul> </li> </ul> <p>Tambi\u00e9n pod\u00e9is consultar la documentaci\u00f3n de estas excepciones en https://www.php.net/manual/es/spl.exceptions.php.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT03PHPPOO.html#referencias","title":"Referencias","text":"<ul> <li>Manual de PHP</li> <li>Manual de OO en PHP - www.desarrolloweb.com</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html","title":"Programaci\u00f3n Web","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 12 sesiones</p> Resultado de aprendizaje Criterios de evaluaci\u00f3n 4. Desarrolla aplicaciones Web embebidas en lenguajes de marcas analizando e incorporando funcionalidades seg\u00fan especificaciones. a) Se han identificado los mecanismos disponibles para el mantenimiento de la informaci\u00f3n que concierne a un cliente web concreto y se han se\u00f1alado sus ventajas. b) Se han utilizado sesiones para mantener el estado de las aplicaciones Web.  c) Se han utilizado cookies para almacenar informaci\u00f3n en el cliente Web y para recuperar su contenido.  d) Se han identificado y caracterizado los mecanismos disponibles para la autentificaci\u00f3n de usuarios.  e) Se han escrito aplicaciones que integren mecanismos de autentificaci\u00f3n de usuarios.  f) Se han realizado adaptaciones a aplicaciones Web existentes como gestores de contenidos u otras.  g) Se han utilizado herramientas y entornos para facilitar la programaci\u00f3n, prueba y depuraci\u00f3n del c\u00f3digo."},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#variables-de-servidor","title":"Variables de servidor","text":"<p>PHP almacena la informaci\u00f3n del servidor y de las peticiones HTTP en seis arrays globales:</p> <ul> <li><code>$_ENV</code>: informaci\u00f3n sobre las variables de entorno</li> <li><code>$_GET</code>: par\u00e1metros enviados en la petici\u00f3n GET</li> <li><code>$_POST</code>: par\u00e1metros enviados en el envio POST</li> <li><code>$_COOKIE</code>: contiene las cookies de la petici\u00f3n, las claves del array son los nombres de las cookies</li> <li><code>$_SERVER</code>: informaci\u00f3n sobre el servidor</li> <li><code>$_FILES</code>: informaci\u00f3n sobre los ficheros cargados via upload</li> </ul> <p>Si nos centramos en el array <code>$_SERVER</code> podemos consultar las siguientes propiedades:</p> <ul> <li><code>PHP_SELF</code>: nombre del script ejecutado, relativo al document root (p.ej: <code>/tienda/carrito.php</code>)</li> <li><code>SERVER_SOFTWARE</code>: (p.ej: Apache)</li> <li><code>SERVER_NAME</code>: dominio, alias DNS (p.ej: <code>www.elche.es</code>)</li> <li><code>REQUEST_METHOD</code>: GET</li> <li><code>REQUEST_URI</code>: URI, sin el dominio</li> <li><code>QUERY_STRING</code>: todo lo que va despu\u00e9s de <code>?</code> en la URL (p.ej: <code>heroe=Batman&amp;nombre=Bruce</code>)</li> </ul> <p>M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/reserved.variables.server.php</p> <pre><code>&lt;?php\necho $_SERVER[\"PHP_SELF\"].\"&lt;br&gt;\"; // /u4/401server.php\necho $_SERVER[\"SERVER_SOFTWARE\"].\"&lt;br&gt;\"; // Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.4.9\necho $_SERVER[\"SERVER_NAME\"].\"&lt;br&gt;\"; // localhost\n\necho $_SERVER[\"REQUEST_METHOD\"].\"&lt;br&gt;\"; // GET\necho $_SERVER[\"REQUEST_URI\"].\"&lt;br&gt;\"; // /u4/401server.php?heroe=Batman\necho $_SERVER[\"QUERY_STRING\"].\"&lt;br&gt;\"; // heroe=Batman\n</code></pre> <p>Otras propiedades relacionadas:</p> <ul> <li><code>PATH_INFO</code>: ruta extra tras la petici\u00f3n. Si la URL es <code>http://www.php.com/php/pathInfo.php/algo/cosa?foo=bar</code>, entonces <code>$_SERVER['PATH_INFO']</code> ser\u00e1 <code>/algo/cosa</code>.</li> <li><code>REMOTE_HOST</code>: hostname que hizo la petici\u00f3n</li> <li><code>REMOTE_ADDR</code>: IP del cliente</li> <li><code>AUTH_TYPE</code>: tipo de autenticaci\u00f3n (p.ej: Basic)</li> <li><code>REMOTE_USER</code>: nombre del usuario autenticado</li> </ul> <p>Apache crea una clave para cada cabecera HTTP, en may\u00fasculas y sustituyendo los guiones por subrayados:</p> <ul> <li><code>HTTP_USER_AGENT</code>: agente (navegador)</li> <li><code>HTTP_REFERER</code>: p\u00e1gina desde la que se hizo la petici\u00f3n</li> </ul> <pre><code>&lt;?php\necho $_SERVER[\"HTTP_USER_AGENT\"].\"&lt;br&gt;\"; // Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#formularios","title":"Formularios","text":"<p>A la hora de enviar un formulario, debemos tener claro cuando usar GET o POST</p> <ul> <li> <p>GET: los par\u00e1metros se pasan en la URL</p> <ul> <li>&lt;2048 caracteres, s\u00f3lo ASCII</li> <li>Permite almacenar la direcci\u00f3n completa (marcador  / historial)</li> <li>Idempotente: dos llamadas con los mismos datos siempre debe dar el mismo resultado</li> <li>El navegador puede cachear las llamadas</li> </ul> </li> <li> <p>POST: par\u00e1metros ocultos (no encriptados)</p> <ul> <li>Sin l\u00edmite de datos, permite datos binarios.</li> <li>No se pueden cachear</li> <li>No idempotente \u2192 actualizar la BBDD</li> </ul> </li> </ul> <p>As\u00ed pues, para recoger los datos accederemos al array dependiendo del m\u00e9todo del formulario que nos ha invocado:</p> <pre><code>&lt;?php\n$par = $_GET[\"parametro\"]\n$par = $_POST[\"parametro\"]\n</code></pre> <p>Para los siguientes apartados nos vamos a basar en el siguiente ejemplo:</p> <pre><code>&lt;form action=\"formulario.php\" method=\"GET\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"\" /&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\" /&gt;\n        &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\" /&gt;\n        &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\" /&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#validacion","title":"Validaci\u00f3n","text":"<p>Respecto a la validaci\u00f3n, es conveniente siempre hacer validaci\u00f3n doble:</p> <ul> <li>En el cliente mediante JS</li> <li>En servidor, antes de llamar a negocio, es conveniente volver a validar los datos.</li> </ul> <pre><code>&lt;?php\nif (isset($_GET[\"parametro\"])) {\n    $par = $_GET[\"parametro\"];\n    // comprobar si $par tiene el formato adecuado, su valor, etc...\n}\n</code></pre> <p>Librer\u00edas de validaci\u00f3n</p> <p>Existen diversas librer\u00edas que facilitan la validaci\u00f3n de los formularios, como son respect/validation o particle/validator. Cuando estudiemos Laravel profundizaremos en la validaci\u00f3n de forma declarativa.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#parametro-multivalor","title":"Par\u00e1metro multivalor","text":"<p>Existen elementos HTML que env\u00edan varios valores:</p> <ul> <li><code>select multiple</code></li> <li><code>checkbox</code></li> </ul> <p>Para recoger los datos, el nombre del elemento debe ser un array.</p> <pre><code>&lt;select name=\"lenguajes[]\" multiple=\"true\"&gt;\n    &lt;option value=\"c\"&gt;C&lt;/option&gt;\n    &lt;option value=\"java\"&gt;Java&lt;/option&gt;\n    &lt;option value=\"php\"&gt;PHP&lt;/option&gt;\n    &lt;option value=\"python\"&gt;Python&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"c\" /&gt; C&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"java\" /&gt; Java&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"php\" /&gt; Php&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"python\" /&gt; Python&lt;br /&gt;\n</code></pre> <p>De manera que luego al recoger los datos:</p> <pre><code>&lt;?php\n$lenguajes = $_GET[\"lenguajes\"];\n\nforeach ($lenguajes as $lenguaje) {\n    echo \"$lenguaje &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#volviendo-a-rellenar-un-formulario","title":"Volviendo a rellenar un formulario","text":"<p>Un sticky form es un formulario que recuerda sus valores. Para ello, hemos de rellenar los atributos <code>value</code> de los elementos HTML con la informaci\u00f3n que conten\u00edan:</p> <pre><code>&lt;?php\nif (!empty($_POST['modulos']) &amp;&amp; !empty($_POST['nombre'])) {\n  // Aqu\u00ed se incluye el c\u00f3digo a ejecutar cuando los datos son correctos\n} else {\n  // Generamos el formulario\n  $nombre = $_POST['nombre'] ?? \"\";\n  $modulos = $_POST['modulos'] ?? [];\n  ?&gt;\n  &lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n   &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"&lt;?= $nombre ?&gt;\" /&gt; \n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\"\n    &lt;?php if(in_array(\"DWES\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\"\n    &lt;?php if(in_array(\"DWEC\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\"/&gt;\n  &lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#subiendo-archivos","title":"Subiendo archivos","text":"<p>Se almacenan en el servidor en el array <code>$_FILES</code> con el nombre del campo del tipo <code>file</code> del formulario.</p> <pre><code>&lt;form enctype=\"multipart/form-data\" action=\"&lt;?php echo $_SERVER['PHP_SELF']; ?&gt;\"  method=\"POST\"&gt;\n    Archivo: &lt;input name=\"archivoEnviado\" type=\"file\" /&gt;\n    &lt;br /&gt;\n    &lt;input type=\"submit\" name=\"btnSubir\" value=\"Subir\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Configuraci\u00f3n en <code>php.ini</code></p> <ul> <li><code>file_uploads</code>: on / off</li> <li><code>upload_max_filesize</code>: 2M</li> <li><code>upload_tmp_dir</code>: directorio temporal. No es necesario configurarlo, coger\u00e1 el predeterminado del sistema</li> <li><code>post_max_size</code>: tama\u00f1o m\u00e1ximo de los datos POST. Debe ser mayor a upload_max_filesize.</li> <li><code>max_file_uploads</code>: n\u00famero m\u00e1ximo de archivos que se pueden cargar a la vez.</li> <li><code>max_input_time</code>: tiempo m\u00e1ximo empleado en la carga (GET/POST y upload \u2192 normalmente se configura en 60)</li> <li><code>memory_limit</code>: 128M</li> <li><code>max_execution_time</code>: tiempo de ejecuci\u00f3n de un script (no tiene en cuenta el upload)</li> </ul> <p>Para cargar los archivos, accedemos al array <code>$_FILES</code>:</p> <pre><code>&lt;?php\nif (isset($_POST['btnSubir']) &amp;&amp; $_POST['btnSubir'] == 'Subir') {\n    if (is_uploaded_file($_FILES['archivoEnviado']['tmp_name'])) {\n        // subido con \u00e9xito\n        $nombre = $_FILES['archivoEnviado']['name'];\n        move_uploaded_file($_FILES['archivoEnviado']['tmp_name'], \"./uploads/{$nombre}\");\n\n        echo \"&lt;p&gt;Archivo $nombre subido con \u00e9xito&lt;/p&gt;\";\n    }\n}\n</code></pre> <p>Cada archivo cargado en <code>$_FILES</code> tiene:</p> <ul> <li><code>name</code>: nombre</li> <li><code>tmp_name</code>: ruta temporal</li> <li><code>size</code>: tama\u00f1o en bytes</li> <li><code>type</code>: tipo MIME</li> <li><code>error</code>: si hay error, contiene un mensaje. Si ok \u2192 0.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#cabeceras-de-respuesta","title":"Cabeceras de respuesta","text":"<p>Debe ser lo primero a devolver. Se devuelven mediante la funci\u00f3n <code>header(cadena)</code>. Mediante las cabeceras podemos configurar el tipo de contenido, tiempo de expiraci\u00f3n, redireccionar el navegador, especificar errores HTTP, etc.</p> <pre><code>&lt;?php header(\"Content-Type: text/plain\"); ?&gt;\n&lt;?php header(\"Location: http://www.ejemplo.com/inicio.html\");\nexit(); \n</code></pre> <p>Se puede comprobar en las herramientas del desarrollador de los navegadores web mediante Developer Tools \u2192 Network \u2192 Headers.</p> <p>Es muy com\u00fan configurar las cabeceras para evitar consultas a la cach\u00e9 o provocar su renovaci\u00f3n:</p> <pre><code>&lt;?php\nheader(\"Expires: Sun, 31 Jan 2021 23:59:59 GMT\");\n// tres horas\n$now = time();\n$horas3 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 60 * 60 * 3);\nheader(\"Expires: {$horas3}\");\n// un a\u00f1o\n$now = time();\n$anyo1 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 365 * 86440);\nheader(\"Expires: {$anyo1}\");\n// se marca como expirado (fecha en el pasado)\n$pasado = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\");\nheader(\"Expires: {$pasado}\");\n// evitamos cache de navegador y/o proxy\nheader(\"Expires: Mon, 26 Jul 1997 05:00:00 GMT\");\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\nheader(\"Cache-Control: no-store, no-cache, must-revalidate\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#gestion-del-estado","title":"Gesti\u00f3n del estado","text":"<p>HTTP es un protocolo stateless, sin estado. Por ello, se simula el estado mediante el uso de cookies, tokens o la sesi\u00f3n. El estado es necesario para procesos tales como el carrito de la compra, operaciones asociadas a un usuario, etc... El mecanismo de PHP para gestionar la sesi\u00f3n emplea cookies de forma interna. Las cookies se almacenan en el navegador, y la sesi\u00f3n en el servidor web.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#cookies","title":"Cookies","text":"<p>Las cookies se almacenan en el array global <code>$_COOKIE</code>. Lo que coloquemos dentro del array, se guardar\u00e1 en el cliente. Hay que tener presente que el cliente puede no querer almacenarlas.</p> <p>Existe una limitaci\u00f3 de 20 cookies por dominio y 300 en total en el navegador.</p> <p>En PHP, para crear una cookie se utiliza la funci\u00f3n <code>setcookie</code>:</p> <pre><code>&lt;?php\nsetcookie(nombre [, valor [, expira [, ruta [, dominio [, seguro [, httponly ]]]]]]);\nsetcookie(nombre [, valor = \"\" [, opciones = [] ]] )\n?&gt;\n</code></pre> <p>Destacar que el nombre no puede contener espacios ni el caracter <code>;</code>. Respecto al contenido de la cookie, no puede superar los 4 KB.</p> <p>Por ejemplo, mediante cookies podemos comprobar la cantidad de visitas diferentes que realiza un usuario:</p> <pre><code>&lt;?php\n$accesosPagina = 0;\nif (isset($_COOKIE['accesos'])) { \n    $accesosPagina = $_COOKIE['accesos']; // recuperamos una cookie\n    setcookie('accesos', ++$accesosPagina); // le asignamos un valor\n}\n?&gt;\n</code></pre> <p>Inspeccionando las cookies</p> <p>Si queremos ver que contienen las cookies que tenemos almacenadas en el navegador, se puede comprobar su valor en Dev Tools \u2192 Application \u2192 Storage</p> <p>El tiempo de vida de las cookies puede ser tan largo como el sitio web en el que residen. Ellas seguir\u00e1n ah\u00ed, incluso si el navegador est\u00e1 cerrado o abierto.</p> <p>Para borrar una cookie se puede poner que expiren en el pasado:</p> <pre><code>&lt;?php\nsetcookie(nombre, \"\", 1) // pasado\n</code></pre> <p>O que caduquen dentro de un periodo de tiempo deteminado:</p> <pre><code>&lt;?php\nsetcookie(nombre, valor, time() + 3600) // Caducan dentro de una hora\n</code></pre> Comunicaci\u00f3n con cookies <p>Se utilizan para:</p> <ul> <li>Recordar los inicios de sesi\u00f3n</li> <li>Almacenar valores temporales de usuario</li> <li>Si un usuario est\u00e1 navegando por una lista paginada de art\u00edculos, ordenados de cierta manera, podemos almacenar el ajuste de la clasificaci\u00f3n.</li> </ul> <p>La alternativa en el cliente para almacenar informaci\u00f3n en el navegador es el objeto LocalStorage.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#sesion","title":"Sesi\u00f3n","text":"<p>La sesi\u00f3n a\u00f1ade la gesti\u00f3n del estado a HTTP, almacenando en este caso la informaci\u00f3n en el servidor. Cada visitante tiene un ID de sesi\u00f3n \u00fanico, el cual por defecto se almacena en una cookie denominada <code>PHPSESSID</code>. Si el cliente no tiene las cookies activas, el ID se propaga en cada URL dentro del mismo dominio. Cada sesi\u00f3n tiene asociado un almac\u00e9n de datos mediante el array global <code>$_SESSION</code>, en el cual podemos almacenar y recuperar informaci\u00f3n.</p> <p>La sesi\u00f3n comienza al ejecutar un script PHP. Se genera un nuevo ID y se cargan los datos del almac\u00e9n:</p> Comunicaci\u00f3n con sesi\u00f3n <p>Las operaciones que podemos realizar con la sesi\u00f3n son:</p> <pre><code>&lt;?php\nsession_start(); // carga la sesi\u00f3n\nsession_id() // devuelve el id\n$_SESSION[clave] = valor; // inserci\u00f3n\nsession_destroy(); // destruye la sesi\u00f3n\nunset($_SESSION[clave]; // borrado\n</code></pre> <p>Vamos a ver mediante un ejemplo como podemos insertar en un p\u00e1gina datos en la sesi\u00f3n para posteriormente en otra p\u00e1gina acceder a esos datos. Por ejemplo, en <code>sesion1.php</code> tendr\u00edamos</p> <pre><code>&lt;?php\nsession_start(); // inicializamos\n$_SESSION[\"ies\"] = \"IES Severo Ochoa\"; // asignaci\u00f3n\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Estamos en el $instituto \";\n?&gt;\n&lt;br /&gt;\n&lt;a href=\"sesion2.php\"&gt;Y luego&lt;/a&gt;\n</code></pre> <p>Y posteriormente podemos acceder a la sesi\u00f3n en <code>sesion2.php</code>:</p> <pre><code>&lt;?php\nsession_start();\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Otra vez, en el $instituto \";\n?&gt;\n</code></pre> <p>Configurando la sesi\u00f3n en <code>php.ini</code></p> <p>Las siguiente propiedades de <code>php.ini</code> permiten configurar algunos aspectos de la sesi\u00f3n:</p> <ul> <li><code>session.save_handler</code>: controlador que gestiona c\u00f3mo se almacena (<code>files</code>)</li> <li><code>session.save_path</code>: ruta donde se almacenan los archivos con los datos (si tenemos un cluster, podr\u00edamos usar <code>/mnt/sessions</code> en todos los servidor de manera que apuntan a una carpeta compartida)</li> <li><code>session.name</code>: nombre de la sesi\u00f3n (<code>PHSESSID</code>)</li> <li><code>session.auto_start</code>: Se puede hacer que se autocargue con cada script. Por defecto est\u00e1 deshabilitado</li> <li><code>session.cookie_lifetime</code>: tiempo de vida por defecto</li> </ul> <p>M\u00e1s informaci\u00f3n en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#autentificacion-de-usuarios","title":"Autentificaci\u00f3n de usuarios","text":"<p>Una sesi\u00f3n establece una relaci\u00f3n an\u00f3nima con un usuario particular, de manera que podemos saber si es el mismo usuario entre dos peticiones distintas. Si preparamos un sistema de login, podremos saber quien utiliza nuestra aplicaci\u00f3n.</p> <p>Para ello, preparemos un sencillo sistema de autenticaci\u00f3n:</p> <ul> <li>Mostrar el formulario login/password</li> <li>Comprobar los datos enviados</li> <li>A\u00f1adir el login a la sesi\u00f3n</li> <li>Comprobar el login en la sesi\u00f3n para realizar tareas espec\u00edficas del usuario</li> <li>Eliminar el login de la sesi\u00f3n cuando el usuario la cierra.</li> </ul> <p>Vamos a ver en c\u00f3digo cada paso del proceso. Comenzamos con el archivo <code>index.php</code>:</p> <pre><code>&lt;form action='login.php' method='post'&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Login&lt;/legend&gt;\n    &lt;div&gt;&lt;span class='error'&gt;&lt;?php echo $error; ?&gt;&lt;/span&gt;&lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='usuario'&gt;Usuario:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='text' name='inputUsuario' id='usuario' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='password'&gt;Contrase\u00f1a:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='password' name='inputPassword' id='password' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;input type='submit' name='enviar' value='Enviar' /&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n  &lt;/form&gt;\n</code></pre> <p>Al hacer submit nos lleva a <code>login.php</code>, el cual hace de controlador:</p> <pre><code>&lt;?php\n// Comprobamos si ya se ha enviado el formulario\nif (isset($_POST['enviar'])) {\n    $usuario = $_POST['inputUsuario'];\n    $password = $_POST['inputPassword'];\n\n    // validamos que recibimos ambos par\u00e1metros\n    if (empty($usuario) || empty($password)) {\n        $error = \"Debes introducir un usuario y contrase\u00f1a\";\n        include \"index.php\";\n    } else {\n        if ($usuario == \"admin\" &amp;&amp; $password == \"admin\") {\n            // almacenamos el usuario en la sesi\u00f3n\n            session_start();\n            $_SESSION['usuario'] = $usuario;\n            // cargamos la p\u00e1gina principal\n            include \"main.php\";\n        } else {\n            // Si las credenciales no son v\u00e1lidas, se vuelven a pedir\n            $error = \"Usuario o contrase\u00f1a no v\u00e1lidos!\";\n            include \"index.php\";\n        }\n    }\n}\n</code></pre> <p>Dependiendo del usuario que se haya logueado, vamos a ir a una vista o a otra. Por ejemplo, en <code>main.php</code> tendr\u00edamos:</p> <pre><code>&lt;?php\n    // Recuperamos la informaci\u00f3n de la sesi\u00f3n\n    if(!isset($_SESSION)) {\n        session_start();\n    }\n\n    // Y comprobamos que el usuario se haya autentificado\n    if (!isset($_SESSION['usuario'])) {\n       die(\"Error - debe &lt;a href='index.php'&gt;identificarse&lt;/a&gt;.&lt;br /&gt;\");\n    }\n?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Listado de productos&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Bienvenido &lt;?= $_SESSION['usuario'] ?&gt;&lt;/h1&gt;\n    &lt;p&gt;Pulse &lt;a href=\"logout.php\"&gt;aqu\u00ed&lt;/a&gt; para salir&lt;/p&gt;\n    &lt;p&gt;Volver al &lt;a href=\"main.php\"&gt;inicio&lt;/a&gt;&lt;/p&gt;\n    &lt;h2&gt;Listado de productos&lt;/h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Producto 1&lt;/li&gt;\n        &lt;li&gt;Producto 2&lt;/li&gt;\n        &lt;li&gt;Producto 3&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Finalmente, necesitamos la opci\u00f3n de cerrar la sesi\u00f3n que colocamos en <code>logout.php</code>:</p> <pre><code>&lt;?php\n// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n\n// Y la destruimos\nsession_destroy();\nheader(\"Location: index.php\");\n?&gt;\n</code></pre> <p>Autenticaci\u00f3n en producci\u00f3n</p> <p>En la actualidad la autenticaci\u00f3n de usuario no se realiza gestionando la sesi\u00f3n direcamente, sino que se realiza mediante alg\u00fan framekwork que abstrae todo el proceso o la integraci\u00f3n de mecanismos de autenticaci\u00f3n tipo OAuth, como  estudiaremos en la \u00faltima unidad mediante Laravel.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb.html#referencias","title":"Referencias","text":"<ul> <li>Cookies en PHP</li> <li>Manejo de sesiones en PHP</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html","title":"Programaci\u00f3n Web","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 12 sesiones</p> Resultado de aprendizaje Criterios de evaluaci\u00f3n 4. Desarrolla aplicaciones Web embebidas en lenguajes de marcas analizando e incorporando funcionalidades seg\u00fan especificaciones. a) Se han identificado los mecanismos disponibles para el mantenimiento de la informaci\u00f3n que concierne a un cliente web concreto y se han se\u00f1alado sus ventajas. b) Se han utilizado sesiones para mantener el estado de las aplicaciones Web.  c) Se han utilizado cookies para almacenar informaci\u00f3n en el cliente Web y para recuperar su contenido.  d) Se han identificado y caracterizado los mecanismos disponibles para la autentificaci\u00f3n de usuarios.  e) Se han escrito aplicaciones que integren mecanismos de autentificaci\u00f3n de usuarios.  f) Se han realizado adaptaciones a aplicaciones Web existentes como gestores de contenidos u otras.  g) Se han utilizado herramientas y entornos para facilitar la programaci\u00f3n, prueba y depuraci\u00f3n del c\u00f3digo."},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#variables-de-servidor","title":"Variables de servidor","text":"<p>PHP almacena la informaci\u00f3n del servidor y de las peticiones HTTP en seis arrays globales:</p> <ul> <li><code>$_ENV</code>: informaci\u00f3n sobre las variables de entorno</li> <li><code>$_GET</code>: par\u00e1metros enviados en la petici\u00f3n GET</li> <li><code>$_POST</code>: par\u00e1metros enviados en el envio POST</li> <li><code>$_COOKIE</code>: contiene las cookies de la petici\u00f3n, las claves del array son los nombres de las cookies</li> <li><code>$_SERVER</code>: informaci\u00f3n sobre el servidor</li> <li><code>$_FILES</code>: informaci\u00f3n sobre los ficheros cargados via upload</li> </ul> <p>Si nos centramos en el array <code>$_SERVER</code> podemos consultar las siguientes propiedades:</p> <ul> <li><code>PHP_SELF</code>: nombre del script ejecutado, relativo al document root (p.ej: <code>/tienda/carrito.php</code>)</li> <li><code>SERVER_SOFTWARE</code>: (p.ej: Apache)</li> <li><code>SERVER_NAME</code>: dominio, alias DNS (p.ej: <code>www.elche.es</code>)</li> <li><code>REQUEST_METHOD</code>: GET</li> <li><code>REQUEST_URI</code>: URI, sin el dominio</li> <li><code>QUERY_STRING</code>: todo lo que va despu\u00e9s de <code>?</code> en la URL (p.ej: <code>heroe=Batman&amp;nombre=Bruce</code>)</li> </ul> <p>M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/reserved.variables.server.php</p> <pre><code>&lt;?php\necho $_SERVER[\"PHP_SELF\"].\"&lt;br&gt;\"; // /u4/401server.php\necho $_SERVER[\"SERVER_SOFTWARE\"].\"&lt;br&gt;\"; // Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.4.9\necho $_SERVER[\"SERVER_NAME\"].\"&lt;br&gt;\"; // localhost\n\necho $_SERVER[\"REQUEST_METHOD\"].\"&lt;br&gt;\"; // GET\necho $_SERVER[\"REQUEST_URI\"].\"&lt;br&gt;\"; // /u4/401server.php?heroe=Batman\necho $_SERVER[\"QUERY_STRING\"].\"&lt;br&gt;\"; // heroe=Batman\n</code></pre> <p>Otras propiedades relacionadas:</p> <ul> <li><code>PATH_INFO</code>: ruta extra tras la petici\u00f3n. Si la URL es <code>http://www.php.com/php/pathInfo.php/algo/cosa?foo=bar</code>, entonces <code>$_SERVER['PATH_INFO']</code> ser\u00e1 <code>/algo/cosa</code>.</li> <li><code>REMOTE_HOST</code>: hostname que hizo la petici\u00f3n</li> <li><code>REMOTE_ADDR</code>: IP del cliente</li> <li><code>AUTH_TYPE</code>: tipo de autenticaci\u00f3n (p.ej: Basic)</li> <li><code>REMOTE_USER</code>: nombre del usuario autenticado</li> </ul> <p>Apache crea una clave para cada cabecera HTTP, en may\u00fasculas y sustituyendo los guiones por subrayados:</p> <ul> <li><code>HTTP_USER_AGENT</code>: agente (navegador)</li> <li><code>HTTP_REFERER</code>: p\u00e1gina desde la que se hizo la petici\u00f3n</li> </ul> <pre><code>&lt;?php\necho $_SERVER[\"HTTP_USER_AGENT\"].\"&lt;br&gt;\"; // Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#formularios","title":"Formularios","text":"<p>A la hora de enviar un formulario, debemos tener claro cuando usar GET o POST</p> <ul> <li> <p>GET: los par\u00e1metros se pasan en la URL</p> <ul> <li>&lt;2048 caracteres, s\u00f3lo ASCII</li> <li>Permite almacenar la direcci\u00f3n completa (marcador  / historial)</li> <li>Idempotente: dos llamadas con los mismos datos siempre debe dar el mismo resultado</li> <li>El navegador puede cachear las llamadas</li> </ul> </li> <li> <p>POST: par\u00e1metros ocultos (no encriptados)</p> <ul> <li>Sin l\u00edmite de datos, permite datos binarios.</li> <li>No se pueden cachear</li> <li>No idempotente \u2192 actualizar la BBDD</li> </ul> </li> </ul> <p>As\u00ed pues, para recoger los datos accederemos al array dependiendo del m\u00e9todo del formulario que nos ha invocado:</p> <pre><code>&lt;?php\n$par = $_GET[\"parametro\"]\n$par = $_POST[\"parametro\"]\n</code></pre> <p>Para los siguientes apartados nos vamos a basar en el siguiente ejemplo:</p> <pre><code>&lt;form action=\"formulario.php\" method=\"GET\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"\" /&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\" /&gt;\n        &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\" /&gt;\n        &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\" /&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#validacion","title":"Validaci\u00f3n","text":"<p>Respecto a la validaci\u00f3n, es conveniente siempre hacer validaci\u00f3n doble:</p> <ul> <li>En el cliente mediante JS</li> <li>En servidor, antes de llamar a negocio, es conveniente volver a validar los datos.</li> </ul> <pre><code>&lt;?php\nif (isset($_GET[\"parametro\"])) {\n    $par = $_GET[\"parametro\"];\n    // comprobar si $par tiene el formato adecuado, su valor, etc...\n}\n</code></pre> <p>Librer\u00edas de validaci\u00f3n</p> <p>Existen diversas librer\u00edas que facilitan la validaci\u00f3n de los formularios, como son respect/validation o particle/validator. Cuando estudiemos Laravel profundizaremos en la validaci\u00f3n de forma declarativa.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#parametro-multivalor","title":"Par\u00e1metro multivalor","text":"<p>Existen elementos HTML que env\u00edan varios valores:</p> <ul> <li><code>select multiple</code></li> <li><code>checkbox</code></li> </ul> <p>Para recoger los datos, el nombre del elemento debe ser un array.</p> <pre><code>&lt;select name=\"lenguajes[]\" multiple=\"true\"&gt;\n    &lt;option value=\"c\"&gt;C&lt;/option&gt;\n    &lt;option value=\"java\"&gt;Java&lt;/option&gt;\n    &lt;option value=\"php\"&gt;PHP&lt;/option&gt;\n    &lt;option value=\"python\"&gt;Python&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"c\" /&gt; C&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"java\" /&gt; Java&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"php\" /&gt; Php&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"python\" /&gt; Python&lt;br /&gt;\n</code></pre> <p>De manera que luego al recoger los datos:</p> <pre><code>&lt;?php\n$lenguajes = $_GET[\"lenguajes\"];\n\nforeach ($lenguajes as $lenguaje) {\n    echo \"$lenguaje &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#volviendo-a-rellenar-un-formulario","title":"Volviendo a rellenar un formulario","text":"<p>Un sticky form es un formulario que recuerda sus valores. Para ello, hemos de rellenar los atributos <code>value</code> de los elementos HTML con la informaci\u00f3n que conten\u00edan:</p> <pre><code>&lt;?php\nif (!empty($_POST['modulos']) &amp;&amp; !empty($_POST['nombre'])) {\n  // Aqu\u00ed se incluye el c\u00f3digo a ejecutar cuando los datos son correctos\n} else {\n  // Generamos el formulario\n  $nombre = $_POST['nombre'] ?? \"\";\n  $modulos = $_POST['modulos'] ?? [];\n  ?&gt;\n  &lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n   &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"&lt;?= $nombre ?&gt;\" /&gt; \n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\"\n    &lt;?php if(in_array(\"DWES\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\"\n    &lt;?php if(in_array(\"DWEC\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\"/&gt;\n  &lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#subiendo-archivos","title":"Subiendo archivos","text":"<p>Se almacenan en el servidor en el array <code>$_FILES</code> con el nombre del campo del tipo <code>file</code> del formulario.</p> <pre><code>&lt;form enctype=\"multipart/form-data\" action=\"&lt;?php echo $_SERVER['PHP_SELF']; ?&gt;\"  method=\"POST\"&gt;\n    Archivo: &lt;input name=\"archivoEnviado\" type=\"file\" /&gt;\n    &lt;br /&gt;\n    &lt;input type=\"submit\" name=\"btnSubir\" value=\"Subir\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Configuraci\u00f3n en <code>php.ini</code></p> <ul> <li><code>file_uploads</code>: on / off</li> <li><code>upload_max_filesize</code>: 2M</li> <li><code>upload_tmp_dir</code>: directorio temporal. No es necesario configurarlo, coger\u00e1 el predeterminado del sistema</li> <li><code>post_max_size</code>: tama\u00f1o m\u00e1ximo de los datos POST. Debe ser mayor a upload_max_filesize.</li> <li><code>max_file_uploads</code>: n\u00famero m\u00e1ximo de archivos que se pueden cargar a la vez.</li> <li><code>max_input_time</code>: tiempo m\u00e1ximo empleado en la carga (GET/POST y upload \u2192 normalmente se configura en 60)</li> <li><code>memory_limit</code>: 128M</li> <li><code>max_execution_time</code>: tiempo de ejecuci\u00f3n de un script (no tiene en cuenta el upload)</li> </ul> <p>Para cargar los archivos, accedemos al array <code>$_FILES</code>:</p> <pre><code>&lt;?php\nif (isset($_POST['btnSubir']) &amp;&amp; $_POST['btnSubir'] == 'Subir') {\n    if (is_uploaded_file($_FILES['archivoEnviado']['tmp_name'])) {\n        // subido con \u00e9xito\n        $nombre = $_FILES['archivoEnviado']['name'];\n        move_uploaded_file($_FILES['archivoEnviado']['tmp_name'], \"./uploads/{$nombre}\");\n\n        echo \"&lt;p&gt;Archivo $nombre subido con \u00e9xito&lt;/p&gt;\";\n    }\n}\n</code></pre> <p>Cada archivo cargado en <code>$_FILES</code> tiene:</p> <ul> <li><code>name</code>: nombre</li> <li><code>tmp_name</code>: ruta temporal</li> <li><code>size</code>: tama\u00f1o en bytes</li> <li><code>type</code>: tipo MIME</li> <li><code>error</code>: si hay error, contiene un mensaje. Si ok \u2192 0.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#cabeceras-de-respuesta","title":"Cabeceras de respuesta","text":"<p>Debe ser lo primero a devolver. Se devuelven mediante la funci\u00f3n <code>header(cadena)</code>. Mediante las cabeceras podemos configurar el tipo de contenido, tiempo de expiraci\u00f3n, redireccionar el navegador, especificar errores HTTP, etc.</p> <pre><code>&lt;?php header(\"Content-Type: text/plain\"); ?&gt;\n&lt;?php header(\"Location: http://www.ejemplo.com/inicio.html\");\nexit(); \n</code></pre> <p>Se puede comprobar en las herramientas del desarrollador de los navegadores web mediante Developer Tools \u2192 Network \u2192 Headers.</p> <p>Es muy com\u00fan configurar las cabeceras para evitar consultas a la cach\u00e9 o provocar su renovaci\u00f3n:</p> <pre><code>&lt;?php\nheader(\"Expires: Sun, 31 Jan 2021 23:59:59 GMT\");\n// tres horas\n$now = time();\n$horas3 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 60 * 60 * 3);\nheader(\"Expires: {$horas3}\");\n// un a\u00f1o\n$now = time();\n$anyo1 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 365 * 86440);\nheader(\"Expires: {$anyo1}\");\n// se marca como expirado (fecha en el pasado)\n$pasado = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\");\nheader(\"Expires: {$pasado}\");\n// evitamos cache de navegador y/o proxy\nheader(\"Expires: Mon, 26 Jul 1997 05:00:00 GMT\");\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\nheader(\"Cache-Control: no-store, no-cache, must-revalidate\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#gestion-del-estado","title":"Gesti\u00f3n del estado","text":"<p>HTTP es un protocolo stateless, sin estado. Por ello, se simula el estado mediante el uso de cookies, tokens o la sesi\u00f3n. El estado es necesario para procesos tales como el carrito de la compra, operaciones asociadas a un usuario, etc... El mecanismo de PHP para gestionar la sesi\u00f3n emplea cookies de forma interna. Las cookies se almacenan en el navegador, y la sesi\u00f3n en el servidor web.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#cookies","title":"Cookies","text":"<p>Las cookies se almacenan en el array global <code>$_COOKIE</code>. Lo que coloquemos dentro del array, se guardar\u00e1 en el cliente. Hay que tener presente que el cliente puede no querer almacenarlas.</p> <p>Existe una limitaci\u00f3 de 20 cookies por dominio y 300 en total en el navegador.</p> <p>En PHP, para crear una cookie se utiliza la funci\u00f3n <code>setcookie</code>:</p> <pre><code>&lt;?php\nsetcookie(nombre [, valor [, expira [, ruta [, dominio [, seguro [, httponly ]]]]]]);\nsetcookie(nombre [, valor = \"\" [, opciones = [] ]] )\n?&gt;\n</code></pre> <p>Destacar que el nombre no puede contener espacios ni el caracter <code>;</code>. Respecto al contenido de la cookie, no puede superar los 4 KB.</p> <p>Por ejemplo, mediante cookies podemos comprobar la cantidad de visitas diferentes que realiza un usuario:</p> <pre><code>&lt;?php\n$accesosPagina = 0;\nif (isset($_COOKIE['accesos'])) { \n    $accesosPagina = $_COOKIE['accesos']; // recuperamos una cookie\n    setcookie('accesos', ++$accesosPagina); // le asignamos un valor\n}\n?&gt;\n</code></pre> <p>Inspeccionando las cookies</p> <p>Si queremos ver que contienen las cookies que tenemos almacenadas en el navegador, se puede comprobar su valor en Dev Tools \u2192 Application \u2192 Storage</p> <p>El tiempo de vida de las cookies puede ser tan largo como el sitio web en el que residen. Ellas seguir\u00e1n ah\u00ed, incluso si el navegador est\u00e1 cerrado o abierto.</p> <p>Para borrar una cookie se puede poner que expiren en el pasado:</p> <pre><code>&lt;?php\nsetcookie(nombre, \"\", 1) // pasado\n</code></pre> <p>O que caduquen dentro de un periodo de tiempo deteminado:</p> <pre><code>&lt;?php\nsetcookie(nombre, valor, time() + 3600) // Caducan dentro de una hora\n</code></pre> Comunicaci\u00f3n con cookies <p>Se utilizan para:</p> <ul> <li>Recordar los inicios de sesi\u00f3n</li> <li>Almacenar valores temporales de usuario</li> <li>Si un usuario est\u00e1 navegando por una lista paginada de art\u00edculos, ordenados de cierta manera, podemos almacenar el ajuste de la clasificaci\u00f3n.</li> </ul> <p>La alternativa en el cliente para almacenar informaci\u00f3n en el navegador es el objeto LocalStorage.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#sesion","title":"Sesi\u00f3n","text":"<p>La sesi\u00f3n a\u00f1ade la gesti\u00f3n del estado a HTTP, almacenando en este caso la informaci\u00f3n en el servidor. Cada visitante tiene un ID de sesi\u00f3n \u00fanico, el cual por defecto se almacena en una cookie denominada <code>PHPSESSID</code>. Si el cliente no tiene las cookies activas, el ID se propaga en cada URL dentro del mismo dominio. Cada sesi\u00f3n tiene asociado un almac\u00e9n de datos mediante el array global <code>$_SESSION</code>, en el cual podemos almacenar y recuperar informaci\u00f3n.</p> <p>La sesi\u00f3n comienza al ejecutar un script PHP. Se genera un nuevo ID y se cargan los datos del almac\u00e9n:</p> Comunicaci\u00f3n con sesi\u00f3n <p>Las operaciones que podemos realizar con la sesi\u00f3n son:</p> <pre><code>&lt;?php\nsession_start(); // carga la sesi\u00f3n\nsession_id() // devuelve el id\n$_SESSION[clave] = valor; // inserci\u00f3n\nsession_destroy(); // destruye la sesi\u00f3n\nunset($_SESSION[clave]; // borrado\n</code></pre> <p>Vamos a ver mediante un ejemplo como podemos insertar en un p\u00e1gina datos en la sesi\u00f3n para posteriormente en otra p\u00e1gina acceder a esos datos. Por ejemplo, en <code>sesion1.php</code> tendr\u00edamos</p> <pre><code>&lt;?php\nsession_start(); // inicializamos\n$_SESSION[\"ies\"] = \"IES Severo Ochoa\"; // asignaci\u00f3n\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Estamos en el $instituto \";\n?&gt;\n&lt;br /&gt;\n&lt;a href=\"sesion2.php\"&gt;Y luego&lt;/a&gt;\n</code></pre> <p>Y posteriormente podemos acceder a la sesi\u00f3n en <code>sesion2.php</code>:</p> <pre><code>&lt;?php\nsession_start();\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Otra vez, en el $instituto \";\n?&gt;\n</code></pre> <p>Configurando la sesi\u00f3n en <code>php.ini</code></p> <p>Las siguiente propiedades de <code>php.ini</code> permiten configurar algunos aspectos de la sesi\u00f3n:</p> <pre><code>* `session.save_handler`: controlador que gestiona c\u00f3mo se almacena (`files`)\n* `session.save_path`: ruta donde se almacenan los archivos con los datos (si tenemos un cluster, podr\u00edamos usar `/mnt/sessions` en todos los servidor de manera que apuntan a una carpeta compartida)\n* `session.name`: nombre de la sesi\u00f3n (`PHSESSID`)\n* `session.auto_start`: Se puede hacer que se autocargue con cada script. Por defecto est\u00e1 deshabilitado\n* `session.cookie_lifetime`: tiempo de vida por defecto\n\nM\u00e1s informaci\u00f3n en la [documentaci\u00f3n oficial](https://www.php.net/manual/es/session.configuration.php).\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#autentificacion-de-usuarios","title":"Autentificaci\u00f3n de usuarios","text":"<p>Una sesi\u00f3n establece una relaci\u00f3n an\u00f3nima con un usuario particular, de manera que podemos saber si es el mismo usuario entre dos peticiones distintas. Si preparamos un sistema de login, podremos saber quien utiliza nuestra aplicaci\u00f3n.</p> <p>Para ello, preparemos un sencillo sistema de autenticaci\u00f3n:</p> <ul> <li>Mostrar el formulario login/password</li> <li>Comprobar los datos enviados</li> <li>A\u00f1adir el login a la sesi\u00f3n</li> <li>Comprobar el login en la sesi\u00f3n para realizar tareas espec\u00edficas del usuario</li> <li>Eliminar el login de la sesi\u00f3n cuando el usuario la cierra.</li> </ul> <p>Vamos a ver en c\u00f3digo cada paso del proceso. Comenzamos con el archivo <code>index.php</code>:</p> <pre><code>&lt;form action='login.php' method='post'&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Login&lt;/legend&gt;\n    &lt;div&gt;&lt;span class='error'&gt;&lt;?php echo $error; ?&gt;&lt;/span&gt;&lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='usuario'&gt;Usuario:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='text' name='inputUsuario' id='usuario' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='password'&gt;Contrase\u00f1a:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='password' name='inputPassword' id='password' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;input type='submit' name='enviar' value='Enviar' /&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n  &lt;/form&gt;\n</code></pre> <p>Al hacer submit nos lleva a <code>login.php</code>, el cual hace de controlador:</p> <pre><code>&lt;?php\n// Comprobamos si ya se ha enviado el formulario\nif (isset($_POST['enviar'])) {\n    $usuario = $_POST['inputUsuario'];\n    $password = $_POST['inputPassword'];\n\n    // validamos que recibimos ambos par\u00e1metros\n    if (empty($usuario) || empty($password)) {\n        $error = \"Debes introducir un usuario y contrase\u00f1a\";\n        include \"index.php\";\n    } else {\n        if ($usuario == \"admin\" &amp;&amp; $password == \"admin\") {\n            // almacenamos el usuario en la sesi\u00f3n\n            session_start();\n            $_SESSION['usuario'] = $usuario;\n            // cargamos la p\u00e1gina principal\n            include \"main.php\";\n        } else {\n            // Si las credenciales no son v\u00e1lidas, se vuelven a pedir\n            $error = \"Usuario o contrase\u00f1a no v\u00e1lidos!\";\n            include \"index.php\";\n        }\n    }\n}\n</code></pre> <p>Dependiendo del usuario que se haya logueado, vamos a ir a una vista o a otra. Por ejemplo, en <code>main.php</code> tendr\u00edamos:</p> <pre><code>&lt;?php\n    // Recuperamos la informaci\u00f3n de la sesi\u00f3n\n    if(!isset($_SESSION)) {\n        session_start();\n    }\n\n    // Y comprobamos que el usuario se haya autentificado\n    if (!isset($_SESSION['usuario'])) {\n       die(\"Error - debe &lt;a href='index.php'&gt;identificarse&lt;/a&gt;.&lt;br /&gt;\");\n    }\n?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Listado de productos&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Bienvenido &lt;?= $_SESSION['usuario'] ?&gt;&lt;/h1&gt;\n    &lt;p&gt;Pulse &lt;a href=\"logout.php\"&gt;aqu\u00ed&lt;/a&gt; para salir&lt;/p&gt;\n    &lt;p&gt;Volver al &lt;a href=\"main.php\"&gt;inicio&lt;/a&gt;&lt;/p&gt;\n    &lt;h2&gt;Listado de productos&lt;/h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Producto 1&lt;/li&gt;\n        &lt;li&gt;Producto 2&lt;/li&gt;\n        &lt;li&gt;Producto 3&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Finalmente, necesitamos la opci\u00f3n de cerrar la sesi\u00f3n que colocamos en <code>logout.php</code>:</p> <pre><code>&lt;?php\n// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n\n// Y la destruimos\nsession_destroy();\nheader(\"Location: index.php\");\n?&gt;\n</code></pre> <p>Autenticaci\u00f3n en producci\u00f3n</p> <p>En la actualidad la autenticaci\u00f3n de usuario no se realiza gestionando la sesi\u00f3n direcamente, sino que se realiza mediante alg\u00fan framekwork que abstrae todo el proceso o la integraci\u00f3n de mecanismos de autenticaci\u00f3n tipo OAuth, como  estudiaremos en la \u00faltima unidad mediante Laravel.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#referencias","title":"Referencias","text":"<ul> <li>Cookies en PHP</li> <li>Manejo de sesiones en PHP</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#actividades","title":"Actividades","text":"<ol> <li><code>401server.php</code>: igual que el ejemplo visto en los apuntes, muestra los valores de <code>$_SERVER</code> al ejecutar un script en tu ordenador.      Prueba a pasarle par\u00e1metros por GET (y a no pasarle ninguno).      Prepara un formulario (<code>401post.html</code>) que haga un env\u00edo por POST y compru\u00e9balo de nuevo.      Crea una p\u00e1gina (<code>401enlace.html</code>) que tenga un enlace a <code>401server.php</code> y comprueba el valor de <code>HTTP_REFERER</code>.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#formularios_1","title":"Formularios","text":"<ol> <li> <p><code>402formulario.html</code> y <code>402formulario.php</code>: Crea un formulario que solicite:</p> <ul> <li>Nombre y apellidos.</li> <li>Email.</li> <li>URL p\u00e1gina personal.</li> <li>Sexo (radio).</li> <li>N\u00famero de convivientes en el domicilio.</li> <li>Aficiones (checkboxes) \u2013 poner m\u00ednimo 4 valores.</li> <li>Men\u00fa favorito (lista selecci\u00f3n m\u00faltiple) \u2013 poner m\u00ednimo 4 valores.</li> </ul> <p>Muestra los valores cargados en una tabla-resumen.</p> </li> <li> <p><code>403validacion.php</code>: A partir del formulario anterior, introduce validaciones en HTML mediante el atributo <code>required</code> de los campos (uso los tipos adecuados para cada campo), y en comprueba los tipos de los datos y que cumplen los valores esperados (por ejemplo, en los checkboxes que los valores recogidos forman parte de todos los posibles). Puedes probar a pasarle datos erroneos via URL y comprobar su comportamiento.      Tip: Investiga el uso de la funci\u00f3n <code>filter_var</code>.</p> </li> <li> <p><code>404subida.html</code> y <code>404subida.php</code>: Crea un formulario que permita subir un archivo al servidor.      Adem\u00e1s del fichero, debe pedir en el mismo formulario dos campos num\u00e9ricos que soliciten la anchura y la altura. Comprueba que tanto el fichero como los datos llegan correctamente.</p> </li> <li> <p><code>405subidaImagen.php</code>: Modifica el ejercicio anterior para que \u00fanicamente permita subir im\u00e1genes (comprueba la propiedad <code>type</code> del archivo subido). Si el usuario selecciona otro tipo de archivos, se le debe informar del error y permitir que suba un nuevo archivo.      En el caso de subir el tipo correcto, visualizar la imagen con el tama\u00f1o de anchura y altura recibido como par\u00e1metro.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#cookies-y-sesion","title":"Cookies y Sesi\u00f3n","text":"<ol> <li> <p><code>406contadorVisitas.php</code>: Mediante el uso de cookies, informa al usuario de si es su primera visita, o si no lo es, muestre su valor (valor de un contador).      Adem\u00e1s, debes permitir que el usuario reinicialice su contador de visitas.</p> </li> <li> <p><code>407fondo.php</code>: Mediante el uso de cookies, crea una p\u00e1gina con un desplegable con varios colores, de manera que el usuario pueda cambiar el color de fondo de la p\u00e1gina (atributo <code>bgcolor</code>).      Al cerrar la p\u00e1gina, \u00e9sta debe recordar, al menos durante 24h, el color elegido y la pr\u00f3xima vez que se cargue la pagina, lo haga con el \u00faltimo color seleccionado.</p> </li> <li> <p><code>408fondoSesion1.php</code>: Modifica el ejercicio anterior para almacenar el color de fondo en la sesi\u00f3n y no emplear cookies. Adem\u00e1s, debe contener un enlace al siguiente archivo.      <code>408fondoSesion2.php</code>: Debe mostrar el color y dar la posibilidad de:</p> <ul> <li>volver a la p\u00e1gina anterior mediante un enlace</li> <li>y mediante otro enlace, vaciar la sesi\u00f3n y volver a la p\u00e1gina anterior.</li> </ul> </li> <li> <p>Haciendo uso de la sesi\u00f3n, vamos a dividir el formulario del ejercicio <code>402formulario.php</code> en 2 subformularios:</p> <ul> <li><code>409formulario1.php</code> env\u00eda los datos (nombre y apellidos, email, url y sexo) a <code>409formulario2.php</code>.</li> <li><code>409formulario2.php</code> lee los datos y los mete en la sesi\u00f3n. A continuaci\u00f3n, muestra el resto de campos del formulario a rellenar (convivientes, aficiones y men\u00fa). Env\u00eda estos datos a <code>409formulario3.php</code>.</li> <li><code>409formulario3.php</code> recoge los datos enviados en el paso anterior y junto a los que ya estaban en la sesi\u00f3n, se muestran todos los datos en una tabla/lista desordenada.</li> </ul> </li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#autenticacion","title":"Autenticaci\u00f3n","text":"<p>En los siguientes ejercicios vamos a montar una estructura de inicio de sesi\u00f3n similar a la vista en los apuntes.</p> <ol> <li><code>410index.php</code>: formulario de inicio de sesi\u00f3n</li> <li><code>411login.php</code>: hace de controlador, por lo que debe comprobar los datos recibidos (solo permite la entrada de <code>usuario/usuario</code> y si todo es correcto, ceder el control a la vista del siguiente ejercicio. No contiene c\u00f3digo HTML.</li> <li><code>412peliculas.php</code>: vista que muestra como t\u00edtulo \"Listado de Pel\u00edculas\", y una lista desordenada con tres pel\u00edculas.</li> <li><code>413logout.php</code>: vac\u00eda la sesi\u00f3n y nos lleva de nuevo al formulario de inicio de sesi\u00f3n. No contiene c\u00f3digo HTML</li> <li><code>414series.php</code>: A\u00f1ade un nueva vista similar a <code>412peliculas.php</code> que muestra un \"Listado de Series\" con una lista desordenada con tres series. Tanto <code>412pelicuas.php</code> como la vista recien creadas, deben tener un peque\u00f1o men\u00fa (sencillo, mediante enlaces) que permita pasar de un listado a otro.      Comprueba que si se accede directamente a cualquiera de las vistas sin tener un usuario logueado via URL del navegador, no se muestra el listado.</li> <li>Modifica tanto el controlador como las vistas para que:<ul> <li>los datos los obtenga el controlador (almacena en la sesi\u00f3n un array de pel\u00edculas y otro de series)</li> <li>coloque los datos en la sesi\u00f3n</li> <li>En las vistas, los datos se recuperan de la sesi\u00f3n y se pintan en la lista desordenada recorriendo el array correspondiente.</li> </ul> </li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/UT04ProgramacioWeb__.html#proyecto-videoclub-30","title":"Proyecto Videoclub 3.0","text":"<ol> <li> <p>Para el Videoclub, vamos a crear una p\u00e1gina <code>index.php</code> con un formulario que contenga un formulario de login/password.      Se comprobar\u00e1n los datos en <code>login.php</code>. Los posibles usuarios son admin/admin o usuario/usuario</p> <ul> <li>Si el usuario es correcto, en <code>main.php</code> mostrar un mensaje de bienvenida con el nombre del usuario, junto a un enlace para cerrar la sesi\u00f3n, que lo llevar\u00eda de nuevo al login.</li> <li>Si el usuario es incorrecto, debe volver a cargar el formulario dando informaci\u00f3n al usuario de acceso incorrecto.</li> </ul> </li> <li> <p>Si el usuario es administrador, se cargar\u00e1n en la sesi\u00f3n los datos de soportes y clientes del videoclub que ten\u00edamos en nuestras pruebas (no mediante <code>include</code> sino copiando los datos e insert\u00e1ndolos en un array asociativo, el cual colocaremos posteriormente en la sesi\u00f3n).</p> <p>En la siguiente unidad los obtendremos de la base de datos. En <code>mainAdmin.php</code>, adem\u00e1s de la bienvenida, debe mostrar:     * Listado de clientes     * Listado de soportes</p> <p> Esquema navegaci\u00f3n ejercicio 423 </p> </li> <li> <p>Vamos a modificar la clase <code>Cliente</code> para almacenar el <code>user</code> y la <code>password</code> de cada cliente.      Tras codificar los cambios, modificar el listado de clientes de <code>mainAdmin.php</code> para a\u00f1adir al listado el usuario.</p> </li> <li> <p>Si el usuario que accede no es administrador y coincide con alguno de los clientes que tenemos cargados tras el login, debe cargar <code>mainCliente.php</code> donde se mostrar\u00e1 un listado de los alquileres del cliente. Para ello, modificaremos la clase <code>Cliente</code> para ofrecer el m\u00e9todo <code>getAlquileres() : array</code>, el cual llamaremos y luego recorreremos para mostrar el listado solicitado.</p> </li> </ol> <p>Ahora volvemos a la parte de administraci\u00f3n</p> <ol> <li> <p>Adem\u00e1s de mostrar el listado de clientes, vamos a ofrecer la opci\u00f3n de dar de alta a un nuevo cliente en <code>formCreateCliente.php</code>.      Los datos se enviar\u00e1n mediante POST a <code>createCliente.php</code> que los introducir\u00e1 en la sesi\u00f3n.      Una vez creado el cliente, debe volver a cargar <code>mainAdmin.php</code> donde se podr\u00e1 ver el cliente insertado.      Si hay alg\u00fan dato incorrecto, debe volver a cargar el formulario de alta.</p> </li> <li> <p>Crea en <code>formUpdateCliente.php</code> un formulario que permita editar los datos de un cliente.      Debes recoger los datos en <code>updateCliente.php</code>      Los datos de cliente se deben poder modificar desde la propia p\u00e1gina de un cliente, as\u00ed como desde el listado del administrador.</p> </li> <li> <p>Desde el listado de clientes del administrador debes ofrecer la posibilidad de borrar un cliente.      En el navegador, antes de redirigir al servidor, el usuario debe confirmar mediante JS que realmente desea eliminar al cliente.      Finalmente, en <code>removeCliente.php</code> elimina al cliente de la sesi\u00f3n.      Una vez eliminado, debe volver al listado de clientes.</p> </li> </ol> Esquema navegaci\u00f3n Videoclub 3.0"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html","title":"UT05AccesADades","text":""},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#acceso-a-datos","title":"Acceso a datos","text":"<p>En esta unidad vamos a aprender a acceder a datos que se encuentran en un servidor; recuperando, editando y creando dichos datos a trav\u00e9s de una base de datos.</p> <p>A trav\u00e9s de las distintas capas o niveles, de las cuales 2 de ellas ya conocemos (Apache, PHP) y MySQL la que vamos a estudiar en este tema.</p> Foto de Tima Miroshnichenko"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#estructura-de-una-base-de-datos","title":"Estructura de una base de datos","text":"<p>Sabemos que una base de datos tiene muchos campos con sus nombres y valores, pero adem\u00e1s sabemos que la base de datos debe tener un nombre. por tanto tendr\u00edamos la siguiente estructura para una base de datos:</p> <pre><code>NombreBaseDeDatos\n    |__Tabla-#1\n    |       |__DatosTabla-#1\n    |\n    |__Tabla-#2\n    |       |__DatosTabla-#2\n    |\n    |__Tabla-#3\n    |       |__DatosTabla-#3\n    [...]\n</code></pre> <p>Ve\u00e1moslo en un ejemplo real</p> <pre><code>Ryanair\n    |__pasajero\n    |    |__id[*]\n    |    |__nombre\n    |    |__apellidos\n    |    |__edad\n    |    |__id_vuelo[^]\n    |\n    |__vuelo\n    |    |__id[*]\n    |    |__n_plazas\n    |    |__disponible\n    |    |__id_pais[^]\n    |\n    |__pais\n         |__id[*]\n         |__nombre\n</code></pre>      [*] Clave primaria [^] Clave For\u00e1nea"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#chollosevero","title":"CholloSevero","text":"<p>Como muy bien hab\u00e9is elegido, a lo largo de esta unidad vamos a trabajar con una base de datos que iremos confeccionando conforme avancemos, donde almacenaremos la informaci\u00f3n relacionada con ofertas que publiquen los usuarios y los listaremos en funci\u00f3n de varios filtros; nuevos, m\u00e1s votados, m\u00e1s vistos, m\u00e1s comentados entre otros, al m\u00e1s puro estilo Chollometro.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#sql","title":"SQL","text":"<p>Este lenguaje de consulta estructurada (Structured Query Language) es el que vamos a utilizar para realizar las consultas a nuestras bases de datos para mostrar el contenido en las distintas interfaces web que creemos a lo largo de la unidad. Si quieres saber m\u00e1s detalles visita Wiki SQL</p> <p>Ejemplo de una sentencia SQL donde seleccionamos todas las filas y columnas de nuestra tabla llamada 'pais'</p> <pre><code>SELECT * FROM pais\n</code></pre> <p>Estas sentencias pueden invocarse desde la consola de comandos mediante el int\u00e9rprete mysql (previamente instalado en el sistema) o a trav\u00e9s de la herramienta phpMyAdmin.</p> <p>Las sentencias SQL tambi\u00e9n las podemos usar dentro de nuestro c\u00f3digo php, de tal manera que cuando se cargue nuestra interfaz web, lance una sentecia SQL para mostrar los datos que queramos.</p> <pre><code>&lt;?php\n    // Listado de clientes, ordenados por DNI de manera ASCendente\n    $clientesOrdenadosPorDNI = \"SELECT * FROM `pasajero` ORDER BY `dni`\" ASC;\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#mysqli","title":"MySQLi","text":"<p>PHP hace uso de esta extensi\u00f3n mejorada para poder comunicarse con las bases de datos, ya sean MySQL (4.1 o superior) o MariaDB.</p> <p>Cualquier consulta que queramos hacer a una base de datos necesitaremos hacer uso de la extensi\u00f3n mysqli()</p> <p>Veamos como conectarnos con una base de datos a trav\u00e9s del c\u00f3digo PHP</p> <pre><code>&lt;?php\n    // \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 pruebas.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    // \"SERVIDOR\", \"USUARIO\", \"CONTRASE\u00d1A\", \"BASE DE DATOS\"\n    $conexion = mysqli_connect(\"d939ebf6a741\",\"tuUsuario\",\"1234\",\"pruebas\");\n\n    // COMPROBAMOS LA CONEXI\u00d3N\n    if(mysqli_connect_errno()) {\n        echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n        exit();\n    }\n\n    echo \"&lt;h1&gt;Bienvenid@ a MySQL !!&lt;/h1&gt;\";\n?&gt;\n</code></pre> <ul> <li><code>servidor</code>: El servidor donde se encuentra la base de datos que queremos usar suele ser localhost, pero en nuestro caso, al utilizar Docker ser\u00e1 el nombre de la imagen mysql:8.0 que aparece al dejar el rat\u00f3n encima en el Visual Studio Code</li> </ul> <ul> <li><code>usuarioDB</code>: El usuario de la base de datos</li> <li><code>passwordDB</code>: La contrase\u00f1a para ese usuario de la base de datos</li> <li><code>baseDeDatos</code>: Nombre de la base de datos que queramos usar</li> </ul> <p>Si todo ha salido bien habr\u00e9is visto un mensaje diciendo Bienvenid@ a MySQL !!</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#recuperando-datos-de-una-bd","title":"Recuperando datos de una BD","text":"<p>Ahora que ya sabemos c\u00f3mo conectarnos a una base de datos alojada en nuestro servidor, lo que necesitamos saber es c\u00f3mo recuperar datos almacenados en la base de datos.</p> <p>Durante la instalaci\u00f3n de la imagen de Docker, se ha creado una tabla llamada Pruebas que contiene varios registros de distintas personas.</p> <p>Vamos a recuperar esos datos para ver de qu\u00e9 forma se hace con PHP.</p> <pre><code>&lt;?php\n    // \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 pruebas.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $conexion = mysqli_connect(\"d939ebf6a741\", \"lupa\", \"1234\", \"pruebas\");\n\n    // COMPROBAMOS LA CONEXI\u00d3N\n    if (mysqli_connect_errno()) {\n        echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n        exit();\n    }\n\n    // CONSULTA A LA BASE DE DATOS\n    $consulta = \"SELECT * FROM `Person`\";\n    $listaUsuarios = mysqli_query($conexion, $consulta);\n\n    // COMPROBAMOS SI EL SERVIDOR NOS HA DEVUELTO RESULTADOS\n    if($listaUsuarios) {\n\n        // RECORREMOS CADA RESULTADO QUE NOS DEVUELVE EL SERVIDOR\n        foreach ($listaUsuarios as $usuario) {\n            echo \"\n                $usuario[id]\n                $usuario[name]\n                &lt;br&gt;\n            \";\n        }\n    }\n?&gt;\n</code></pre> <p>Si todo ha salido bien, por pantalla ver\u00e1s el siguiente listado</p> <pre><code>\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 http://localhost/pruebas.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n1 William\n2 Marc\n3 John\n4 Antonio Moreno\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#php-data-objects-pdo","title":"PHP Data Objects :: PDO","text":"<p>De la misma manera que hemos visto con mysqli, PHP Data Objects (o PDO) es un driver de PHP que se utiliza para trabajar bajo una interfaz de objetos con la base de datos. A d\u00eda de hoy es lo que m\u00e1s se utiliza para manejar informaci\u00f3n desde una base de datos, ya sea relacional o no relacional.</p> <p>De igual manera que pasaba con los objetos en PHP nativos, en la interfaz de MySQL la cosa cambia la hora de conectarnos con una base de datos.</p> <pre><code>&lt;?php\n    $conexion = new PDO('mysql:host=localhost; dbname=dwes', 'dwes', 'abc123');\n</code></pre> <p>Adem\u00e1s, con PDO podemos usar las excepciones con try catch para gestionar los errores que se produzcan en nuestra aplicaci\u00f3n, para ello, como hac\u00edamos antes, debemos encapsular el c\u00f3digo entre bloques try / catch.</p> <p><pre><code>&lt;?php\n\n    $dsn = 'mysql:dbname=prueba;host=127.0.0.1';\n    $usuario = 'usuario';\n    $contrase\u00f1a = 'contrase\u00f1a';\n\n    try {\n        $mbd = new PDO($dsn, $usuario, $contrase\u00f1a);\n        $mbd-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n    } catch (PDOException $e) {\n        echo 'Fall\u00f3 la conexi\u00f3n: ' . $e-&gt;getMessage();\n    }\n</code></pre> En primer lugar, creamos la conexi\u00f3n con la base de datos a trav\u00e9s del constructor PDO pas\u00e1ndole la informaci\u00f3n de la base de datos.</p> <p>En segundo lugar, establecemos los par\u00e1metros para manejar las excepciones, en este caso hemos utilizado:</p> <ul> <li><code>PDO::ATTR_ERRMODE</code> indic\u00e1ndole a PHP que queremos un reporte de errores.</li> <li><code>PDO::ERRMODE_EXCEPTION</code> con este atributo obligamos a que lance excepciones, adem\u00e1s de ser la opci\u00f3n m\u00e1s humana y legible que hay a la hora de controlar errores.</li> </ul> <p>Cualquier error que se lance a trav\u00e9s de PDO, el sistema lanzar\u00e1 una PDOException.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#fichero-de-configuracion-de-la-bd","title":"Fichero de configuraci\u00f3n de la BD","text":"<p>De la misma manera que creamos nuestro archivo de funciones <code>funciones-php</code> y albergamos todas las funciones que se usan de manera global en la aplicaci\u00f3n, podemos establecer un archivo de constantes donde definamos los par\u00e1metros de conexi\u00f3n con la base de datos.</p> <pre><code>&lt;?php\n\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 conexion.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    constDSN = \"mysql:host=localhost;dbname=dwes\";\n    constUSUARIO = \"dwes\";\n    constPASSWORD = \"abc123\";\n\n    /*  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 NO SUBAS ESTE ARCHIVO A git \u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 */\n</code></pre> <p>Este archivo contiene informaci\u00f3n muy sensible as\u00ed que no es recomendable que subas este archivo a git.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#sentencias-preparadas","title":"Sentencias preparadas","text":"<p>Se trata de sentencias que se establecen como si fueran plantillas de la SQL que vamos a lanzar, aceptando par\u00e1metros que son establecidos a posteriori de la declaraci\u00f3n de la sentencia preparada.</p> <p>Las sentencias preparadas evitan la injecci\u00f3n de SQL (SQL Injection) y mejoran el rendimiento de nuestras aplicaci\u00f3nes o p\u00e1ginas web.</p> <pre><code>&lt;?php\n    $sql = \"INSERT INTO Clientes VALUES (?, ?, ?, ?)\";\n</code></pre> <p>Cada interrogante es un par\u00e1metro que estableceremos despu\u00e9s, unas cuantas l\u00edneas m\u00e1s abajo.</p> <p>Una vez tenemos la plantilla de nuestra consulta, debemos seguir con la preparaci\u00f3n junto con 3 m\u00e9todos m\u00e1s de PHP para su completa ejecuci\u00f3n:</p> <ul> <li><code>prepare:</code> prepara la sentenci\u00e1n antes de ser ejecutada</li> <li><code>bind</code>: el tipo de uni\u00f3n (bind) de dato que puede ser mediante ' ? ' o ' :parametro '</li> <li><code>execute</code> se ejecuta la consulta uniendo la plantilla con las bariables o par\u00e1metros que hemos establecido.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#ejemplo-parametros","title":"Ejemplo par\u00e1metros","text":"<pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Borrando con par\u00e1metros \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try { \n        $cantidad = $_GET[\"cantidad\"];\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = ?\";\n        $sentencia = $conexion -&gt; prepare($sql);\n\n        $isOk = $sentencia -&gt; execute([$cantidad]);\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#ejemplo-bindparam","title":"Ejemplo bindParam","text":"<p>Muy parecido a utilizar par\u00e1metros pero esta vez la variable est\u00e1 dentro de la sentencia SQL, en este caso la hemos llamado <code>:cant</code></p> <pre><code>&lt;?php\n    include \"config/database.inc.php\";\n\n    $conexion=null;\n\n    try {\n        $cantidad = $_GET[\"cantidad\"] ?? 0;\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; bindParam(\":cant\", $cantidad);\n\n        $isOk = $sentencia -&gt; execute();\n\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#bindparam-vs-bindvalue","title":"bindParam VS bindValue","text":"<p>Utilizaremos <code>bindValue()</code> cuando tengamos que insertar datos s\u00f3lo una vez, en cambio, deberemos usar <code>bindParam()</code> cuando tengamos que pasar datos m\u00faltiples, como por ejemplo, un array.</p> <pre><code>&lt;?php\n    // se asignan nombre a los par\u00e1metros\n    $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // bindParam enlaza por referencia\n    $cantidad = 0;\n\n    $sentencia -&gt; bindParam(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 1\n    $isOk = $sentencia -&gt; execute();\n\n    // bindValue enlaza por valor\n    $cantidad = 0;\n\n    $sentencia -&gt; bindValue(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 0\n    $isOk = $sentencia-&gt;execute();\n</code></pre> <p>Para m\u00e1s informaci\u00f3n y uso de las variables PDO consulta el manual de PHP.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#insertando-registros","title":"Insertando registros","text":"<p>A la hora de insertar registros en una base de datos, debemos tener en cuenta que en la tabla puede haber valores autoincrementados. Para salvaguardar \u00e9sto, lo que debemos hacer es dejar ese cambpo autoincrementado vac\u00edo, pero a la hora de hacer la conexi\u00f3n, debemos recuperarlo con el m\u00e9todo <code>lastInsertId()</code>.</p> <pre><code>&lt;?php\n    $nombre = $_GET[\"nombre\"] ?? \"SUCURSAL X\";\n    $telefono = $_GET[\"telefono\"] ?? \"636123456\";\n\n    $sql=\"INSERT INTO tienda(nombre, tlf) VALUES (:nombre, :telefono)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; bindParam(\":nombre\", $nombre);\n    $sentencia -&gt; bindParam(\":telefono\", $telefono);\n\n    $isOk = $sentencia -&gt; execute();\n    $idGenerado = $conexion -&gt; lastInsertId();\n\n    echo $idGenerado;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#consultando-registros","title":"Consultando registros","text":"<p>A la hora de recuperar los resultados de una consulta, bastar\u00e1 con invocar al m\u00e9todo <code>PDOStatement::fetch</code> para listar las filas generadas por la consulta.</p> <p>Pero debemos elegir el tipo de dato que queremos recibir entre los 3 que hay disponibles:</p> <ul> <li><code>PDO::FETCH_ASSOC:</code> array indexado cuyos keys son el nombre de las columnas.</li> <li><code>PDO::FETCH_NUM:</code> array indexado cuyos keys son n\u00fameros.</li> <li><code>PDO::FETCH_BOTH:</code> valor por defecto. Devuelve un array indexado cuyos keys son tanto el nombre de las columnas como n\u00fameros.</li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try{\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"select * from tienda\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n        $sentencia -&gt; execute();\n\n        while($fila = $sentencia -&gt; fetch()){\n            echo \"Codigo:\" . $fila[\"cod\"] . \"&lt;br /&gt;\";\n            echo \"Nombre:\" . $fila[\"nombre\"] . \"&lt;br /&gt;\";\n            echo \"Tel\u00e9fono:\" . $fila[\"tlf\"] . \"&lt;br /&gt;\";\n        }\n\n    }catch(PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre> <p>Recuperando datos con una matriz como resultado de nuestra consulta</p> <p><pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n\n    foreach($tiendasas$tienda) {\n        echo\"Codigo:\" . $tienda[\"cod\"] . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $tienda[\"nombre\"] . \"&lt;br /&gt;\";\n    }\n</code></pre> Pero si lo que queremos es leer datos con forma de objeto utilizando <code>PDO::FETCH_OBJ</code>, debemos crear un objeto con propiedades p\u00fablicas con el mismo nombre que las columnas de la tabla que vayamos a consultar.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con formato de objeto \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_OBJ);\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo\"Codigo:\" . $t -&gt; cod . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $t -&gt; nombre . \"&lt;br /&gt;\";\n        echo\"Tel\u00e9fono:\" . $t -&gt; tlf . \"&lt;br /&gt;\";\n    }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#consultas-con-modelos","title":"Consultas con modelos","text":"<p>Llevamos tiempo creando clases en PHP y las consultas tambi\u00e9n admiten este tipo de datos mediante el uso de <code>PDO::FETCH_CLASS</code></p> <p>Si usamos este m\u00e9todo, debemos tener en cuenta que los nombres de los atributos privados deben coincidir con los nombres de las columnas de la tabla que vayamos a manejar.</p> <p>As\u00ed pues, si por lo que sea cambiamos la estructura de la tabla DEBEMOS CAMBIAR nuestra clase para que todo siga funcionando.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    classTienda {\n        private int $cod;\n        private string $nombre;\n        private ? string $tlf;\n\n        public function getCodigo() : int {\n            return $this -&gt; cod;\n        }\n\n        public function getNombre() : string {\n            return $this -&gt; nombre;\n        }\n\n        public function getTelefono() : ?string {\n            return $this -&gt; tlf;\n        }\n    }\n</code></pre> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consultando a trav\u00e9s de la clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // Aqu\u00ed 'Tienda' es el nombre de nuestra clase\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS, \"Tienda\");\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo \"Codigo: \" . $t -&gt; getCodigo() . \"&lt;br /&gt;\";\n        echo \"Nombre: \" . $t -&gt; getNombre() . \"&lt;br /&gt;\";\n        echo \"Tel\u00e9fono: \" . $t -&gt; getTelefono() . \"&lt;br /&gt;\";\n\n        var_dump($t);\n    }\n</code></pre> <p>Pero \u00bfqu\u00e9 pasa si nuestras clases tienen constructor? pues que debemos indicarle, al m\u00e9todo FECTH, que rellene las propiedades despu\u00e9s de llamar al constructor y para ello hacemos uso de <code>PDO::FETCH_PROPS_LATE</code>.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consulta para una clase con constructor \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#consultas-con-like","title":"Consultas con LIKE","text":"<p>Para utilizar el comod\u00edn LIKE u otros comodines, debemos asociarlo al dato y NUNCA en la propia consulta.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Utilizando comodines :: LIKE \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda where nombre like :nombre or tlf like :tlf\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n\n    $cadBuscar = \"%\" . $busqueda . \"%\";\n\n    $sentencia -&gt; execute([\"nombre\" =&gt; $cadBuscar,\"tlf\" =&gt; $cadBuscar]);\n\n    $result = $sentencia -&gt; fetchAll();\n</code></pre> <p>Ten\u00e9is una lista de ejemplos muy completa en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#login-password","title":"Login &amp; Password","text":"<p>Para manejar un sistema completo de login y password con contrase\u00f1as cifradas, necesitamos un m\u00e9todo que cifre esos strings que el usuario introduce como contrase\u00f1a; tanto en el formulario de registro como en el del login, ya que al codificar una contrase\u00f1a, despu\u00e9s tenemos que decodificarla para comprobar que ambas contras\u00f1eas (la que instroduce el usuario en el login y la que tenemos en la base de datos) coincidan.</p> <p>Necesitamos pues:</p> <ul> <li> <p><code>password_hash()</code> para almacenar la contrase\u00f1a en la base de datos a la hora de hacer el INSERT</p> <ul> <li> <p><code>PASSWORD_DEFAULT</code> almacenamos la contrase\u00f1a usando el m\u00e9todo de encriptaci\u00f3n bcrypt</p> </li> <li> <p><code>PASSWORD_BCRYPT</code> almacenamos la contrase\u00f1a usando el algoritmo CRYPT_BLOWFISH compatible con crypt()</p> </li> </ul> </li> <li> <p><code>password_verify()</code> para verificar el usuario y la contrase\u00f1a</p> </li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Almacenando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"usuario\"];\n    $pas = $_POST[\"password\"];\n\n    $sql = \"INSERT INTO usuarios(usuario, password) VALUES (:usuario, :password)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    $isOk = $sentencia -&gt; execute([\n        \"usuario\" =&gt; $usu,\n        \"password\" =&gt; password_hash($pas,PASSWORD_DEFAULT)\n    ]);\n</code></pre> <p>Ahora que tenemos el usuario codificado y guardado en la base de datos, vamos a recuperarlo para poder loguearlo correctamente.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Recuperando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"login\"] ?? \"\";\n\n    $sql = \"select * from usuarios where usuario = ?\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; execute([$usu]);\n\n    $usuario = $sentencia -&gt; fetch();\n\n    if($usuario &amp;&amp; password_verify($_POST['pass'], $usuario['password'])) {\n        echo\"OK!\";\n    } else {\n        echo\"KO\";\n    }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#acceso-a-ficheros","title":"Acceso a ficheros","text":"<p>Gracias a la funcion fopen() desde PHP podemos abrir archivos que se encuentren en nuestros servidor o una URL.</p> <p>A esta funci\u00f3n hay que pasarle 2 par\u00e1metros; el nombre del archivo que queremos abrir y el modo en el que se abrir\u00e1</p> <pre><code>$fp = fopen(\"miarchivo.txt\", \"r\");\n</code></pre> <p>Muchas veces no podemos abrir el archivo porque \u00e9ste no se encuentra o no tenemos acceso a \u00e9l, por eso es recomendable comprobar que podemos hacerlo</p> <pre><code>if (!$fp = fopen(\"miarchivo.txt\", \"r\")){\n    echo \"No se ha podido abrir el archivo\";\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#modos-de-apertura-de-ficheros","title":"Modos de apertura de ficheros","text":"<ul> <li><code>r</code>:  Modo lectura. Puntero al principio del archivo.</li> <li><code>r+</code>: Apertura para lectura y escritura. Puntero al principio del archivo</li> <li><code>w</code>: Apertura para escritura. Puntero al principio del archivo y lo sobreescribe. Si no existe se intenta crear.</li> <li><code>w+</code>: Apertura para lectura y escritura. Puntero al principio del archivo y lo sobreescribe. Si no existe se intenta crear.</li> <li><code>a</code>: Apertura para escritura. Puntero al final del archivo. Si no existe se intenta crear.</li> <li><code>a+</code>: Apertura para lectura y escritura. Puntero al final del archivo. Si no existe se intenta crear.</li> <li><code>x</code>: Creaci\u00f3n y apertura para s\u00f3lo escritura. Puntero al principio del archivo. Si el archivo ya existe dar\u00e1 error E_WARNING. Si no existe se intenta crear.</li> <li><code>x+</code>: Creaci\u00f3n y apertura para lectura y escritura. Mismo comportamiento que x.</li> <li><code>c</code>: Apertura para escritura. Si no existe se crea. Si existe no se sobreescribe ni da ning\u00fan error. Puntero al principio del archivo.</li> <li><code>c+</code>: Apertura para lectura y escritura. Mismo comportamiento que C.</li> <li><code>b</code>: Cuando se trabaja con archivos binarios como jpg, pdf, png y dem\u00e1s. Se suele colocar al final del modo, es decir rb, r+b, x+b, wb...</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#operaciones-con-archivos","title":"Operaciones con archivos","text":"<p>Para poder leer un archivo necesitamos usar la funci\u00f3n fread() de PHP</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Abriendo un archivo y leyendo su contenido \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$fp = fopen($file, \"r\");\n\n// filesize() nos devuelve el tama\u00f1o del archivo en cuesti\u00f3n\n$contents = fread($fp, filesize($file));\n\n// Cerramos la conexi\u00f3n con el archivo\nfclose();\n</code></pre> <p>Si lo que queremos es escribir en un archivo, deberemos hacer uso de la funci\u00f3n fwrite()</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Escribiendo en un archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Hola que tal\";\n\n$fp = fopen($file, \"w\");\n\nfwrite($fp, $texto);\nfclose($fp);\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#informacion-de-un-fichero","title":"Informaci\u00f3n de un fichero","text":"<p>Con PHP y su m\u00e9todo stat() podemos obtener informaci\u00f3n sobre los archivos que le indiquemos. Este m\u00e9todo devuelve hasta un total de 12 elementos con ifnormaci\u00f3n acerca de nuestro archivo.</p> <pre><code>0   dev         n\u00famero de dispositivo\n1   ino         n\u00famero de i-nodo\n2   mode        modo de protecci\u00f3n del i-nodo\n3   nlink       n\u00famero de enlaces\n4   uid         ID de usuario del propietario\n5   gid         ID de grupo del propietario\n6   rdev        tipo de dispositivo, si es un dispositivo i-nodo\n7   size        tama\u00f1o en bytes\n8   atime       momento del \u00faltimo acceso (tiempo Unix)\n9   mtime       momento de la \u00faltima modificaci\u00f3n (tiempo Unix)\n10  ctime       momento de la \u00faltima modificaci\u00f3n del i-nodo (tiempo Unix)\n11  blksize     tama\u00f1o del bloque E/S del sistema de ficheros\n12  blocks      n\u00famero de bloques de 512 bytes asignados\n</code></pre> <p>Unos ejemplos...</p> <pre><code>&lt;?php\n\n//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Informaci\u00f3n del archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Todos somos muy ignorantes, lo que ocurre es que no todos ignoramos las mismas cosas.\";\n\n$fp = fopen($file, \"w\");\nfwrite($fp, $texto);\n\n$datos = stat($file);\n\necho $datos[3] . \"&lt;br&gt;\"; // N\u00famero de enlaces, 1\necho $datos[7] . \"&lt;br&gt;\"; // Tama\u00f1o en bytes, 85\necho $datos[8] . \"&lt;br&gt;\"; // Momento de \u00faltimo acceso, 1444138104\necho $datos[9] . \"&lt;br&gt;\"; // Momento de \u00faltima modificaci\u00f3n, 1444138251\n\n?&gt;\n</code></pre> <p>Echa un vistazo a las funciones de directorios que tiene PHP, es muy interesante.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADades.html#archivos-pdf","title":"Archivos PDF","text":"<p>Con PHP podemos manejar todo tipo de archivos como ya hemos visto pero, \u00bfqu\u00e9 pasa si queremos generar ficheros PDF con datos sacados de una base de datos?</p> <p>Gracias a una clase escrita en PHP, podemos generar archivos PDF sin necesidad de instalar librer\u00edas adicionales en nuestro servidor.</p> <p>Para ello, como tenemos composer dentro de nuestra imagen de Docker, usaremos composer para instalar esta dependencia.</p> <p>Acu\u00e9rdate que debemes haber hecho <code>composer init</code> para empezar un proyecto con composer, de lo contrario no podr\u00e1s a\u00f1adir ning\u00fan paquete.</p> <p>Veamos un ejemplo de Hello World convertido a PDF</p> <p><pre><code>&lt;?php\n\nob_end_clean();\nrequire('fpdf/fpdf.php');\n\n// Instanciamos la clase\n// P = Portrait | mm = unidades en mil\u00edmetros | A4 = formato\n$pdf = new FPDF('P','mm','A4');\n\n// A\u00f1adimos una p\u00e1gina\n$pdf-&gt;AddPage();\n\n// Establecemos la fuente y el tama\u00f1o de letra\n$pdf-&gt;SetFont('Arial', 'B', 18);\n\n// Imprimimos una celda con el texto que nosotros queramos\n$pdf-&gt;Cell(60,20,'Hello World!');\n\n// Terminamos el PDF\n$pdf-&gt;Output();\n\n?&gt;\n</code></pre> Hay muchos ejemplos y tutoriales, as\u00ed como documentaci\u00f3n de la clase FPDF en la p\u00e1gina oficial.</p> <p>Visita la secci\u00f3n de tutoriales y el manual para sacar mayor partido a esta clase.</p> <pre><code>&lt;?php\n\nrequire('fpdf/fpdf.php');\n\nclass PDF extends FPDF {\n\n    // Cabecera\n    function Header() {\n\n        // A\u00f1adimos un logotipo\n        $this-&gt;Image('logo.png',10,8,33);\n\n        // establecemos la fuente y el tama\u00f1o\n        $this-&gt;SetFont('Arial','B',20);\n\n        // Movemos el contenido un poco a la derecha\n        $this-&gt;Cell(80);\n\n        // Pintamos la celda\n        $this-&gt;Cell(50,10,'Cabecera',1,0,'C');\n\n        // Pasamos a la siguiente l\u00ednea\n        $this-&gt;Ln(20);\n    }\n\n    // Pie de p\u00e1gina\n    function Footer() {\n\n        // Nos posicionamos a 1.5 cm  desde abajo del todo de la p\u00e1gina\n        $this-&gt;SetY(-15);\n\n        // Arial italic 8\n        $this-&gt;SetFont('Arial','I',8);\n\n        // N\u00famero de p\u00e1gina\n        $this-&gt;Cell(0,10,'P\u00e1gina ' . \n            $this-&gt;PageNo() . '/{nb}',0,0,'C');\n    }\n}\n\n// Instanciamos la clase\n$pdf = new PDF();\n\n// Definimos un alias para la numeraci\u00f3n de p\u00e1ginas\n$pdf-&gt;AliasNbPages();\n\n$pdf-&gt;AddPage();\n$pdf-&gt;SetFont('Times','',14);\n\nfor($i = 1; $i &lt;= 30; $i++)\n    $pdf-&gt;Cell(0, 10, 'N\u00famero de l\u00ednea ' \n            . $i, 0, 1);\n$pdf-&gt;Output();\n\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html","title":"Acc\u00e9s a bases de dades amb MySQL","text":"<p>Introducci\u00f3</p> <p>1.Estats en l\u2019execuci\u00f3 de sent\u00e8ncies SQL</p> <ul> <li>1.1.Transaccions</li> </ul> <p>2.Par\u00e0metres de configuraci\u00f3 de la connexi\u00f3</p> <p>3.Realitzaci\u00f3 i comprovaci\u00f3 de la connexi\u00f3</p> <p>4.Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades</p> <p>5.Consulta de dades</p> <ul> <li> <p>5.1.Realitzaci\u00f3 de la consulta</p> </li> <li> <p>5.2.Acc\u00e9s i gesti\u00f3 de les dades retornades per una consulta</p> </li> <li> <p>5.3.Finalitzaci\u00f3 de la consulta</p> </li> </ul> <p>6.Desconnexi\u00f3 de la base de dades</p> <p>7.Gesti\u00f3 i control d\u2019errors i obtenci\u00f3 d\u2019informaci\u00f3</p> <p>8.Consideracions generals i bones pr\u00e0ctiques</p> <ul> <li> <p>8.1.Restricci\u00f3 d\u2019identitat (claus prim\u00e0ries)</p> </li> <li> <p>8.2.Restricci\u00f3 d\u2019integritat referencial (claus foranes)</p> </li> </ul> <p>9.Annex: codi emprat als exemples</p> <p>10.Manuals i fonts d\u2019informaci\u00f3 addicionals</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#introduccio","title":"Introducci\u00f3","text":"<p>L\u2019acc\u00e9s a una base de dades des d\u2019un llenguatge de programaci\u00f3 \u00e9s la base de gaireb\u00e9 tots els sistemes de gesti\u00f3 de l\u2019actualitat. En aquests casos, la gesti\u00f3 de la informaci\u00f3 es fa a trav\u00e9s d\u2019un programa que accedeix a la base de dades per a poder executar les funcionalitats requerides.</p> <p>En aquest m\u00f2dul veurem com accedir a una base de dades MySQL des d\u2019un programa PHP. En particular, farem la connexi\u00f3 via PDO MySQL.</p> <p>Per a realitzar la gesti\u00f3 de la base de dades emmagatzemada en un servidor MySQL a trav\u00e9s de codi escrit en PHP, es far\u00e0 servir l\u2019extensi\u00f3 mysqli de PHP. Aquesta extensi\u00f3 del llenguatge PHP consta d\u2019una s\u00e8rie de funcionalitats extres que milloren les extensions mysql que es feien servir en versions de MySQL anteriors a la 4.1.3. Aquesta extensi\u00f3 ja ve inclosa a les versions de PHP5 i posteriors. Entre les millores m\u00e9s importants destaquen la interf\u00edcie orientada a objectes o el suport per a transaccions.</p> <p>Connectors de programes amb bases de dades</p> <p>Existeixen diversos sistemes per a interconnectar el codi dels programes amb les bases de dades, coneguts com a connectors. Aquests s\u00f3n alguns:</p> <p>PDO (PHP Data Objects) per a connectar PHP amb diferents SGBDs</p> <p>ADO: (ActiveX Data Objects) de Microsoft</p> <p>JDBC (Java DataBase Connectivity) per interconnexi\u00f3 del llenguatge Java amb bases de dades.</p> <p>PDO MySQL</p> <p>El connector PDO MySQL s\u2019instal\u00b7la amb WAMP i \u00e9s totalment transparent a l\u2019usuari.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#1estats-en-lexecucio-de-sentencies-sql","title":"1.Estats en l\u2019execuci\u00f3 de sent\u00e8ncies SQL","text":"<p>A l\u2019hora d\u2019accedir i manipular les dades d\u2019una base de dades des de qualsevol programa, a part d\u2019executar la sent\u00e8ncia d\u2019acc\u00e9s o manipulaci\u00f3 de dades, caldr\u00e0 passar per una s\u00e8rie d\u2019estats, independentment del llenguatge de programaci\u00f3 i del SGBD que es faci servir. Aquests estats s\u00f3n necessaris per tal d\u2019accedir a la base de dades (el que s\u2019anomena connectar-se a la base de dades), analitzar com ha anat l\u2019operaci\u00f3 SQL i tancar la connexi\u00f3 amb la base de dades.</p> <p>Aquests estats es poden veure en el seg\u00fcent diagrama pel cas d\u2019exemple d\u2019una operaci\u00f3 de SELECT:</p> <p></p> <p>El primer que cal fer per a poder accedir a una base de dades emmagatzemada a un servidor de bases de dades, \u00e9s configurar els par\u00e0metres de connexi\u00f3, amb dades com el nom de la base de dades, la seva ubicaci\u00f3 i les credencials d\u2019acc\u00e9s de l\u2019usuari que vol connectar.</p> <p>Una vegada configurada la connexi\u00f3, cal executar una instrucci\u00f3, connectar, per a fer efectiva aquesta connexi\u00f3. Si els par\u00e0metres proporcionats s\u00f3n correctes i el servidor de bases de dades est\u00e0 disponible, s\u2019establir\u00e0 la connexi\u00f3 entre el programa i la base de dades. Cal tenir en compte que la connexi\u00f3 pot no establir-se per diferents motius. Per tant, ser\u00e0 important assegurar-se que tot ha anat b\u00e9 despr\u00e9s d\u2019executar la instrucci\u00f3 de connectar.</p> <p>La connexi\u00f3 a la base de dades estar\u00e0 oberta fins que el programa finalitzi la seva execuci\u00f3. Per tal d\u2019assegurar-se que els recursos utilitzats s\u00f3n alliberats, \u00e9s important tancar la connexi\u00f3 un cop ja no s\u2019hagin de fer m\u00e9s accessos a la base de dades. Per a fer-ho existeix una acci\u00f3 de desconnectar.</p> <p>Quan la connexi\u00f3 est\u00e0 establerta, es poden realitzar diferents accions sobre la base de dades. Tres d\u2019aquestes accions tenen un efecte immediat; s\u2019executa l\u2019acci\u00f3 sobre la base de dades i es genera un resultat. Aquestes accions s\u00f3n:</p> <ul> <li>Donar d\u2019alta noves dades: es poden inserir noves dades a les taules de la base de dades. Si la sent\u00e8ncia SQL d\u2019inserci\u00f3 s\u2019executa correctament (sense errors), la inserci\u00f3 es fa efectiva immediatament.</li> <li>Donar de baixa dades: es poden eliminar dades de la base de dades mitjan\u00e7ant una sent\u00e8ncia SQL. Aquesta acci\u00f3 comporta una eliminaci\u00f3 d\u2019informaci\u00f3, amb el que cal assegurar-se que s\u2019elimina la informaci\u00f3 que realment es vol eliminar. En els sistemes transaccionals, existeix el concepte de transacci\u00f3, on un conjunt d\u2019instruccions s\u2019executen com si fossin una sola instrucci\u00f3. Si es fan servir les transaccions, es pot desfer una eliminaci\u00f3 de dades (amb la instrucci\u00f3 rollback), per\u00f2 nom\u00e9s en el cas que la transacci\u00f3 no s\u2019hagi donat per finalitzada amb \u00e8xit. D\u2019altra banda, \u00e9s important realitzar c\u00f2pies de seguretat per a poder recuperar, en cas d\u2019eliminacions err\u00f2nies, les dades anteriors de la darrera c\u00f2pia de seguretat.</li> <li>Modificar les dades de la base de dades: una modificaci\u00f3 \u00e9s el fet de canviar una dada que ja est\u00e0 inserida a la base de dades per tal d\u2019actualitzar-la o corregir-la. La modificaci\u00f3 tamb\u00e9 elimina informaci\u00f3, ja que en modificar una dada, el valor anterior al que s\u2019ha modificat, es perd. S\u2019ha d\u2019assegurar que la dada que es vol modificar ser\u00e0 l\u2019\u00fanica que es modificar\u00e0, i que la instrucci\u00f3 no afectar\u00e0 altres dades. Com en el cas anterior, en fer servir transaccions, hi ha la possibilitat de revertir la instrucci\u00f3 de modificaci\u00f3 (sempre que es faci rollback abans d\u2019acabar la transacci\u00f3).</li> </ul> <p>La quarta de les accions que es pot fer una vegada establerta la connexi\u00f3 \u00e9s la consulta de dades. Aquesta acci\u00f3 \u00e9s una mica diferent, ja que els resultats d\u2019una consulta poden contenir molts elements que s\u2019han de tractar per blocs (es pot pensar en una llista de productes d\u2019una botiga que es presenten de 20 en 20, per exemple). Per aquest motiu, la consulta no \u00e9s una acci\u00f3 immediata com les anteriors, sin\u00f3 que la seva execuci\u00f3 genera una connexi\u00f3 amb la base de dades, que t\u00e9 un estat i que permet anar consultant les dades de mica en mica. M\u00e9s concretament, el que passa en fer una consulta \u00e9s el seg\u00fcent:</p> <ul> <li>Obrir la consulta: s\u2019executa una sent\u00e8ncia SQL de consulta sobre la base de dades. Si no hi ha cap error s\u2019obtenen les dades de la base de dades. Llavors, ja es poden obtenir les dades pel seu tractament.</li> <li>Acc\u00e9s a dades de la consulta: es consulten les dades resultants de la consulta. Mentre s\u2019est\u00e0 realitzant una consulta (fins que no es tanqui la consulta), l\u2019\u00fanica acci\u00f3 que pot fer el programa amb la connexi\u00f3 a la base de dades \u00e9s obtenir m\u00e9s dades de la consulta realitzada. No es pot ni inserir, ni modificar, ni eliminar dades.</li> <li>Tancar la consulta: una vegada el programa (o l\u2019usuari) han acabat el tractament de les dades o s\u2019han obtingut totes les dades, cal donar per finalitzada la consulta. Aix\u00f2 permetr\u00e0 tornar a l\u2019estat de \u201cconnexi\u00f3 establerta\u201d i poder executar noves operacions SQL sobre la base de dades. A aquesta acci\u00f3 tamb\u00e9 se l\u2019anomena Tancar la consulta.</li> </ul> <p>Exemple de modificaci\u00f3 de dades</p> <p>Es pot imaginar el cas de voler modificar el preu d\u2019un producte de 2 \u20ac a 1 \u20ac, fer-ho malament i acabant modificant TOTS els preus de la botiga a 1 \u20ac. Com es recuperen els anteriors preus de tots els productes afectats? Si s\u2019ha fet servir el sistema de transaccions, es pot fer un rollback. Si no, amb una c\u00f2pia de seguretat anterior.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#11transaccions","title":"1.1.Transaccions","text":"<p>El concepte de transacci\u00f3 es fa servir quan es vol executar un conjunt d\u2019instruccions SQL amb la caracter\u00edstica que s\u2019han d\u2019executar totes les instruccions del conjunt, i si no es pot, no se n\u2019ha d\u2019executar cap.</p> <p>Una transacci\u00f3 comen\u00e7a amb una instrucci\u00f3 (<code>Begin</code>, <code>Begin transaction</code> o <code>Start transaction</code>, depenent del sistema gestor de bases de dades que es faci servir), continua amb totes les instruccions que s\u2019han d\u2019executar, i pot acabar de dues maneres:</p> <ul> <li>Confirmada: si totes les instruccions de la transacci\u00f3 s\u2019han executat correctament i la transacci\u00f3 es d\u00f3na per bona, es confirma amb la instrucci\u00f3 <code>commit</code>.</li> <li>Avortada: si s\u2019ha produ\u00eft algun error en l\u2019execuci\u00f3 de les instruccions de la transacci\u00f3, cal deixar la base de dades en el mateix estat que hi era ABANS del comen\u00e7ament de la transacci\u00f3. Una transacci\u00f3 s\u2019avorta amb la instrucci\u00f3 <code>rollback.</code></li> </ul> <p>En els sistemes transaccionals hi ha un mode anomenat autocommit, que fa un <code>commit</code> (confirmaci\u00f3) autom\u00e0tic al final de cada instrucci\u00f3 SQL que s\u2019executa. Fer servir aquest mode autocommit pot esdevenir problem\u00e0tic en haver de desfer un conjunt d\u2019operacions.</p> <p>Exemple de transacci\u00f3</p> <p>Qualsevol transfer\u00e8ncia banc\u00e0ria \u00e9s una transacci\u00f3. Suposem que es vol realitzar una transfer\u00e8ncia banc\u00e0ria de 1.000 euros d\u2019un compte X a un compte Y. Fer una transfer\u00e8ncia implica, com a m\u00ednim, fer dues modificacions a la base de dades: 1) Restar 1.000 euros del saldo del compte X i 2) Afegir 1.000 euros del saldo del compte Y. Si ambdues operacions acaben correctament, la transfer\u00e8ncia \u00e9s acceptada i acaba correctament. Per\u00f2 suposem que l\u2019operaci\u00f3 d\u2019afegir 1000 euros al compte Y acaba amb error. Si no fem servir transaccions i no podem anul\u00b7lar la transacci\u00f3 sencera es perdran 1.000 euros, ja que s\u2019haur\u00e0 restat 1.000 euros del compte X (definitiu) per\u00f2 aquests no han anat a parar enlloc, ja que no s\u2019han afegit al compte Y. Si anul\u00b7lem la transacci\u00f3 mitjan\u00e7ant un rollback, es desfaran les operacions que componen la transacci\u00f3 i els saldos dels comptes X i Y quedaran com si mai s\u2019haguessin transferit al compte.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#2parametres-de-configuracio-de-la-connexio","title":"2.Par\u00e0metres de configuraci\u00f3 de la connexi\u00f3","text":"<p>Com s\u2019ha indicat pr\u00e8viament, el primer que cal fer \u00e9s connectar-se a la base de dades. Els par\u00e0metres de connexi\u00f3 necessaris per a fer-ho s\u00f3n, en la majoria dels casos:</p> <ul> <li>Servidor: \u00e9s el nom del servidor (o l\u2019adre\u00e7a IP) on est\u00e0 ubicat el SGBD que allotja la base de dades a la que es vol connectar. Si el servidor est\u00e0 a la mateixa m\u00e0quina, llavors ser\u00e0 localhost.</li> <li>Usuari: la connexi\u00f3 sempre s\u2019ha de fer mitjan\u00e7ant les credencials d\u2019un determinat usuari de la base de dades. Aix\u00f2 permetr\u00e0 controlar a quines dades t\u00e9 acc\u00e9s i amb quins permisos. S\u2019ha de proveir doncs el nom de l\u2019usuari amb que ens volem connectar a la base de dades.</li> <li>Paraula de pas: \u00e9s necess\u00e0ria per a autentificar a l\u2019usuari de la base de dades.</li> <li>Base de dades: nom de la base de dades ubicada al servidor, a la que es vol connectar per a fer la gesti\u00f3 de les dades.</li> </ul> <p>Despr\u00e9s d\u2019introduir tota aquesta informaci\u00f3, el programa estar\u00e0 preparat per a intentar establir la connexi\u00f3 amb la base de dades.</p> <p>PHP: exemple de par\u00e0metres de configuraci\u00f3. S\u00f3n les variables que despr\u00e9s es passaran a la instrucci\u00f3 de connexi\u00f3:</p> <p></p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#3realitzacio-i-comprovacio-de-la-connexio","title":"3.Realitzaci\u00f3 i comprovaci\u00f3 de la connexi\u00f3","text":"<p>La connexi\u00f3 amb la base de dades es fa sempre a trav\u00e9s d\u2019una variable del programa, que \u00e9s l\u2019encarregada de realitzar la comunicaci\u00f3 bidireccional amb el connector de MySQL.</p> <p>La instrucci\u00f3 necess\u00e0ria per realitzar la connexi\u00f3 retorna aquesta variable, una vegada executada amb els par\u00e0metres de connexi\u00f3 especificats en l\u2019apartat anterior.</p> <p>PHP: retorna una variable amb la connexi\u00f3 establerta, que despr\u00e9s s\u2019haur\u00e0 de fer servir per a la resta de tasques amb la base de dades. Si la variable ($con en aquest cas) \u00e9s FALS despr\u00e9s d\u2019haver realitzat la instrucci\u00f3, \u00e9s que no s\u2019ha pogut establir la connexi\u00f3.</p> <p> Figura 1: Codi de connexi\u00f3 amb la base de dades</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#4insercio-modificacio-i-eliminacio-de-dades","title":"4.Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades","text":"<p>La instrucci\u00f3 per a realitzar aquestes tasques, sol ser la mateixa. El que canvia \u00e9s la comanda SQL que es passa a la instrucci\u00f3. Com que aquesta comanda SQL \u00e9s puntual (un <code>INSERT</code>, un <code>DELETE</code> o un <code>UPDATE</code>) es fan sense que calgui cap m\u00e9s intervenci\u00f3 per part de l\u2019usuari. Aix\u00f2 \u00e9s diferent en la comanda <code>SELECT</code>, on normalment es demanaran dades de diferents files, i caldr\u00e0 que l\u2019usuari vagi demanant les dades retornades per la comanda SQL a mesura que les vagi necessitant.</p> <p>PHP: retorna una variable amb el resultat d\u2019haver realitzat una comanda SQL. Si aquest resultat \u00e9s CERT, la comanda s\u2019ha realitzat correctament. Se li ha de passar com a par\u00e0metres la connexi\u00f3 establerta anteriorment i la instrucci\u00f3 a realitzar.</p> <p>Figura 2: codi d\u2019inserci\u00f3 d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>Figura 3: codi de modificaci\u00f3 d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>Figura 4: codi d\u2019eliminaci\u00f3 d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>Com es pot veure, l\u2019\u00fanica difer\u00e8ncia entre una inserci\u00f3, una modificaci\u00f3 i un esborrat \u00e9s el codi de la instrucci\u00f3 que s\u2019executa. Es munta primer la cadena de car\u00e0cters amb la instrucci\u00f3 de SQL que es vol executar, despr\u00e9s se li passa com a par\u00e0metre, junt amb la variable de la connexi\u00f3 pr\u00e8viament establerta, a la instrucci\u00f3 <code>mysql_query</code> i aquesta retorna un resultat. Si el resultat \u00e9s CERT, la instrucci\u00f3 s\u2019ha realitzat correctament.</p> <p>Aquestes tres instruccions modifiquen el contingut de la base de dades, ja sigui inserint, modificant o eliminant dades. Als exemples mostrats, si es produeix algun error en l\u2019execuci\u00f3 de la instrucci\u00f3 (que la instrucci\u00f3 SQL sigui sint\u00e0cticament incorrecta, per exemple) es genera un error i la instrucci\u00f3 no s\u2019executa. Per\u00f2 en el cas que tot estigui correcte, el contingut de la base de dades ser\u00e0 modificat, i no es podr\u00e0 desfer aquesta modificaci\u00f3, a menys que es faci servir el sistema de transaccions, d\u2019aquesta manera:</p> <p>Figura 5: codi d\u2019eliminaci\u00f3 d\u2019una dada amb transaccions. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>El resultat de l\u2019execuci\u00f3 d\u2019aquest codi \u00e9s el seg\u00fcent:</p> <p></p> <p>Com es pot veure, es fa la connexi\u00f3 a la base de dades, es fa l\u2019eliminaci\u00f3 de l\u2019estudiant amb DNI 52666666F (el resultat mostra que hi ha 0 estudiants amb aquest DNI), es fa rollback, i es torna a fer una consulta del mateix estudiant. El resultat \u00e9s 1, perqu\u00e8 el rollback desf\u00e0 els canvis realitzats dintre de la transacci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#5consulta-de-dades","title":"5.Consulta de dades","text":"<p>En aquest apartat aprendrem a fer una consulta a la base de dades.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#51realitzacio-de-la-consulta","title":"5.1.Realitzaci\u00f3 de la consulta","text":"<pre><code>La instrucci\u00f3 per a fer una consulta a la base de dades, o sigui, executar una comanda `SELECT` de SQL, pot variar respecte a la comanda per a fer `INSERT`, `UPDATE` o `DELETE` depenent del llenguatge. En el cas de PHP, la instrucci\u00f3 \u00e9s la mateixa en ambd\u00f3s casos.\n</code></pre> <p>Una vegada executada la comanda <code>SELECT</code>, la informaci\u00f3 demanada ja est\u00e0 disponible, per\u00f2 encara cal que el programa carregi la informaci\u00f3 obtinguda en variables, per a realitzar el tractament corresponent (que pot ser mostrar aquestes dades a l\u2019usuari, per exemple). Per aix\u00f2, una vegada realitzada la instrucci\u00f3 de consultar, encara queda la feina d\u2019obtenir les dades consultades i emmagatzemar-les dintre de variables del programa en PHP per tal de ser tractades.</p> <p>La unitat m\u00ednima de tractament de les dades d\u2019una consulta \u00e9s la fila o registre. Quan es realitza una consulta, aquesta pot retornar una gran quantitat de files, amb un cert nombre de camps o atributs per a cada fila. Per\u00f2 si hi accedim des d\u2019un programa les dades s\u2019hauran de tractar fila a fila.</p> <p>PHP: en aquest cas, la instrucci\u00f3 que ha realitzat la consulta (<code>mysqli_query</code>) retorna un enlla\u00e7 a les dades consultades. Si la consulta no s\u2019ha pogut realitzar (per un error a la comanda <code>SELECT</code>, per exemple) la variable <code>$res</code> ser\u00e0 NULL.</p> <p>Figura 6: codi de consulta d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1</p> <p></p> <p>En aquest cas, el comportament de la variable <code>$res</code> \u00e9s diferent del cas d\u2019inserci\u00f3, modificaci\u00f3 o esborrat, ja que si la consulta s\u2019ha pogut realitzar amb \u00e8xit, la variable <code>$res</code> cont\u00e9 un apuntador a la zona de mem\u00f2ria que s\u2019haur\u00e0 de consultar per a obtenir la informaci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#52acces-i-gestio-de-les-dades-retornades-per-una-consulta","title":"5.2.Acc\u00e9s i gesti\u00f3 de les dades retornades per una consulta","text":"<p>Una instrucci\u00f3 de consulta de dades pot retornar una gran quantitat d\u2019informaci\u00f3. Per a accedir a aquesta informaci\u00f3, cal fer-lo de forma ordenada.</p> <p>Per a poder realitzar aquestes funcionalitats, es fa servir el concepte de cursor de dades. Conceptualment podem definir un cursor de dades com una variable que apunta a la zona de mem\u00f2ria que cont\u00e9 el resultat d\u2019una consulta SQL (de tipus <code>SELECT</code>) i permet iterar per les diferents files els resultats d\u2019aquesta consulta, una per una. En cada iteraci\u00f3 s\u2019obt\u00e9 les dades de la fila i es passa a la seg\u00fcent fila. Aquesta acci\u00f3 \u00e9s el que s\u2019anomena fer un fetch del cursor.</p> <p></p> <p>Just despr\u00e9s d\u2019executar la instrucci\u00f3 de consulta, si no s\u2019ha produ\u00eft cap error, la variable que retorna la instrucci\u00f3 de consulta <code>($res</code> en aquest cas) juga el rol d\u2019un cursor i apunta a la primera fila de dades retornada.</p> <p>PHP: per a accedir a una fila de dades retornada per una instrucci\u00f3 <code>mysqli_query</code> (la primera o qualsevol altre fila), es fa servir la instrucci\u00f3 <code>mysqli_fetch_assoc</code>, que, a partir d\u2019un conjunt de dades retornat per la instrucci\u00f3 de consulta, retorna la fila actual de dades en forma d\u2019array associatiu. En aquest cas, es retorna un vector <code>($fila</code>) amb tantes posicions com columnes hi hagi al resultat de la consulta, i per a accedir a un d\u2019aquests resultats, nom\u00e9s cal referenciar la posici\u00f3 del vector amb el nom del camp.</p> <p></p> <p>Cada vegada que es fa un <code>mysqli_fetch_assoc</code>, a m\u00e9s de retornar una fila de dades, s\u2019avan\u00e7a una posici\u00f3 en els resultats del <code>SELECT</code> perqu\u00e8 a la seg\u00fcent crida a <code>mysqli_fetch_assoc</code>, es pugui retornar la fila adient.</p> <p>Si la crida a la instrucci\u00f3 <code>mysqli_fetch_assoc</code> retorna un valor NULL, vol dir que ja no hi ha m\u00e9s files de dades.</p> <p>Quan la consulta realitzada retorna m\u00e9s d\u2019una fila de dades, cal fer el tractament de la informaci\u00f3 fila a fila, seguint l\u2019estructura d\u2019un cursor de dades. Per a poder fer-ho cal programar un bucle per a anar accedint una per una a cada fila, fent a cada pas el tractament corresponent a aquella fila. Aquest bucle s\u2019ha d\u2019anar repetint mentre hi hagi files de dades a tractar. \u00c9s molt important recon\u00e8ixer aquest fet per a no programar bucles infinits, o amb errors.</p> <p>PHP: per a poder fer el tractament de totes les files de dades retornades per una consulta, s\u2019ha de programar un bucle que a cada iteraci\u00f3, comprovi si la fila obtinguda \u00e9s o no un valor NULL. En cas que NO sigui NULL, s\u2019accedeix als resultats, es fa el tractament corresponent (en aquest cas, el tractament consisteix a mostrar la informaci\u00f3 per pantalla) i s\u2019accedeix a la seg\u00fcent fila. Si la fila accedida resulta que \u00e9s NULL, ja pot acabar el bucle, ja que no hi ha m\u00e9s dades retornades a la consulta.</p> <p></p> <p>El seg\u00fcent diagrama mostra de forma gr\u00e0fica com actuen les tres instruccions necess\u00e0ries per a accedir, a partir d\u2019una sent\u00e8ncia <code>SELECT</code>, a un valor individual d\u2019una fila de dades.</p> <p>Primer s\u2019obt\u00e9 el resultat de la consulta <code>SELECT</code> amb <code>mysqli_query</code>, despr\u00e9s s\u2019obt\u00e9 la fila de dades actual amb <code>mysqli_fetch_assoc</code>, que tamb\u00e9 avan\u00e7a la fila actual, i finalment s\u2019obt\u00e9 la dada individual accedint a l\u2019array associatiu mitjan\u00e7ant el nom del camp: $nom = $fila[\u2018nom\u2019];</p> <p></p> <p>Array associatiu</p> <p>Un array associatiu \u00e9s un vector (Array) on l\u2019acc\u00e9s als seus elements NO es fa per posici\u00f3, com en els arrays comuns, sin\u00f3 que es fa mitjan\u00e7ant un \u00edndex de text:</p> <p>Array com\u00fa: vc[4] = 32;</p> <p>Array Associatiu: va[\u2018edat\u2019] = 32;</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#53finalitzacio-de-la-consulta","title":"5.3.Finalitzaci\u00f3 de la consulta","text":"<p>Quan s\u2019ha acabat de treballar amb les dades d\u2019una consulta, cal tancar-la per a alliberar els recursos que s\u2019han fet servir, com per exemple, la mem\u00f2ria RAM per a emmagatzemar les dades.</p> <p>PHP: quan finalitza un script, autom\u00e0ticament es tanquen les consultes obertes i s\u2019allibera mem\u00f2ria. De totes maneres, hi ha una instrucci\u00f3 per a tancar expl\u00edcitament les consultes obertes, a la que se li ha de passar el conjunt de resultats obtinguts de fer un <code>mysqli_query</code>:</p> <p></p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#6desconnexio-de-la-base-de-dades","title":"6.Desconnexi\u00f3 de la base de dades","text":"<p>Una vegada acabada la feina de gesti\u00f3 de les dades, cal desconnectar el programa de la base de dades.</p> <p>PHP: Quan finalitza un script, autom\u00e0ticament es tanquen les connexions establertes amb la base de dades. No obstant aix\u00f2, hi ha una instrucci\u00f3 per a tancar expl\u00edcitament les connexions establertes:</p> <p></p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#7gestio-i-control-derrors-i-obtencio-dinformacio","title":"7.Gesti\u00f3 i control d\u2019errors i obtenci\u00f3 d\u2019informaci\u00f3","text":"<p>PHP disposa de dues instruccions per a controlar els errors que es poden produir durant la transfer\u00e8ncia de dades des de i cap a la base de dades amb el sistema mysqli. Aquestes dues instruccions s\u00f3n les seg\u00fcents:</p> <p></p> <p>Retorna el codi d\u2019error si n\u2019hi ha algun. Retorna 0 si no s\u2019ha produ\u00eft cap error a l\u2019execuci\u00f3 de la darrera instrucci\u00f3 <code>mysqli_query</code>.</p> <p></p> <p>Retorna el text d\u2019error de la darrera instrucci\u00f3 SQL executada amb <code>mysqli_query</code>, si \u00e9s que s\u2019ha produ\u00eft un error. Per exemple:</p> <p></p> <p>A banda, hi ha tamb\u00e9 una instrucci\u00f3 molt \u00fatil a l\u2019hora de no tenir problemes amb els car\u00e0cters especials, com els accents, di\u00e8resis, etc. Aquesta instrucci\u00f3 \u00e9s:</p> <p></p> <p>Estableix el conjunt de car\u00e0cters especials per a fer servir a la connexi\u00f3. Per exemple:</p> <p></p> <p>Finalment, hi ha una instrucci\u00f3 que retorna el nombre de files o registres afectats per la darrera instrucci\u00f3 <code>mysql_query</code>. Aquestes files poden ser, per exemple, el nombre de files seleccionades per un <code>SELECT</code>, o eliminades per un <code>DELETE</code>:</p> <p></p> <p>Per exemple:</p> <p></p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#8consideracions-generals-i-bones-practiques","title":"8.Consideracions generals i bones pr\u00e0ctiques","text":"<p>Quan s\u2019aborda el problema de programar una gesti\u00f3 de dades, cal tenir en compte algunes consideracions, que tenen a veure amb la consist\u00e8ncia de les dades. En aquest apartat indicarem com tenir en compte les restriccions d\u2019identitat i d\u2019integritat referencial. Si es tenen en consideraci\u00f3, s\u2019evitar\u00e0 cometre errors, que en alguns casos poden ser molt greus, deixant la base de dades en un estat inconsistent o eliminant dades rellevants per error.</p> <pre><code>Les restriccions d\u2019integritat s\u00f3n condicions que han de complir els valors de la base de dades per a garantir que les dades representades a la base de dades componen una inst\u00e0ncia v\u00e0lida del model representat.\n</code></pre> <p>Exemples de restriccions d\u2019integritat serien: l\u2019edat d\u2019una persona no pot ser negativa o una persona tan sols pot tenir una mare biol\u00f2gica.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#81restriccio-didentitat-claus-primaries","title":"8.1.Restricci\u00f3 d\u2019identitat (claus prim\u00e0ries)","text":"<pre><code>La restricci\u00f3 d\u2019identitat de clau prim\u00e0ria fa refer\u00e8ncia als valors que es poden assignar a un atribut declarat com a clau prim\u00e0ria. Aquests valors no poden ser valor NULL, i han de ser tots diferents, o sigui, no hi pot haver repetits.\n</code></pre> <p>Aquestes caracter\u00edstiques de les claus prim\u00e0ries comporten que cal tenir en compte una s\u00e8rie de consideracions a l\u2019hora de realitzar diferents operacions on estiguin implicades.</p> <p>1) Inserci\u00f3. La consideraci\u00f3 fonamental a l\u2019hora de fer una inserci\u00f3 de dades a una base de dades \u00e9s comprovar que les dades no existeixen a la base de dades. Aqu\u00ed, suposant que volem inserir dades que ja es troben a la base de dades, ens podem trobar amb dos casos, en funci\u00f3 de si proporcionem nosaltres les claus prim\u00e0ries o fem que la clau prim\u00e0ria sigui un camp autoincremental:</p> <ul> <li>Si proporcionem nosaltres la clau prim\u00e0ria: en cas que ja hi hagi una clau prim\u00e0ria amb el valor introdu\u00eft, l\u2019operaci\u00f3 d\u2019inserci\u00f3 acabar\u00e0 amb error i no es produir\u00e0.</li> <li>Clau prim\u00e0ria autoincremental: aquest cas \u00e9s m\u00e9s greu, perqu\u00e8 com el sistema gestor de bases de dades no sap que les dades que inserim ja existeixen a la base de dades, les torna a crear amb una nova clau. El resultat \u00e9s que introduirem una inconsist\u00e8ncia en les dades, ja que tindrem el mateix objecte representat dues vegades.</li> </ul> <p>Abans de fer una inserci\u00f3 podem comprovar que la dada no estigui ja a la base de dades. Aquesta comprovaci\u00f3 es pot fer executant una consulta pr\u00e8via, que retorni el nombre de files que hi ha amb la mateixa clau prim\u00e0ria (o consultant els camps que calgui) que la fila a inserir. Si aquesta consulta retorna 0 (zero), ja es pot inserir sense por de tenir un error de clau prim\u00e0ria.</p> <p>2) Eliminaci\u00f3. En el cas de l\u2019eliminaci\u00f3 d\u2019una o m\u00e9s dades, no es genera cap error que tingui a veure amb la restricci\u00f3 d\u2019integritat de clau prim\u00e0ria.</p> <p>3) Modificaci\u00f3. En realitzar una instrucci\u00f3 de modificaci\u00f3, si les dades a modificar no inclouen atributs que formin part de la clau prim\u00e0ria, no hi ha cap problema.</p> <p>En cas que es vulgui modificar el valor de la clau prim\u00e0ria total o parcialment (en casos on les claus prim\u00e0ries estiguin compostes per diversos atributs) cal tenir en compte que el nou valor a modificar, no coincideixi amb el valor de la clau prim\u00e0ria de cap altra fila de dades. Cal tenir en compte que una modificaci\u00f3 de la clau prim\u00e0ria es pot veure com una eliminaci\u00f3 de la dada antiga i una inserci\u00f3 de la dada nova, aix\u00ed que s\u2019aplica tot el que s\u2019aplicava a inserci\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#82restriccio-dintegritat-referencial-claus-foranes","title":"8.2.Restricci\u00f3 d\u2019integritat referencial (claus foranes)","text":"<pre><code>La restricci\u00f3 d\u2019integritat referencial limita els valors que pot agafar un camp sobre el qual hi ha definida una clau forana. Aquests valors poden ser, o b\u00e9 valor NULL (quan no est\u00e0 relacionada amb cap altra fila o no sabem amb quina fila est\u00e0 relacionada), o b\u00e9 el valor de la clau prim\u00e0ria referenciada.\n</code></pre> <p>Per exemple, en el cas que tinguem dues taules a la base de dades, una d\u2019estudiants i l\u2019altra de cursos, podr\u00edem definir una clau forana a la taula estudiant que ens indiqu\u00e9s quin curs est\u00e0 realitzant l\u2019estudiant (aix\u00f2 implicaria que un estudiant no pot fer m\u00e9s d\u2019un curs a l\u2019hora, per\u00f2 a efectes d\u2019aquest exemple aix\u00f2 no importa).</p> <p>Hi ha molts conflictes que poden apareixen en fer modificacions a la base de dades amb les claus foranes. Aqu\u00ed en veurem els m\u00e9s importants. Alguns d\u2019aquests conflictes poden solucionar-se de diferents formes. Per exemple, suposem que tenim un estudiant, en Joan Pere Pau, que est\u00e0 matriculat del 3r Grau d\u2019inform\u00e0tica (per tant, t\u00e9 una clau forana a la fila de cursos que representa el 3r Grau d\u2019inform\u00e0tica). Suposem que arran d\u2019una modificaci\u00f3 a la taula de cursos es vol eliminar el 3r Grau d\u2019inform\u00e0tica. Fer aquesta eliminaci\u00f3 sense m\u00e9s provocaria que la base de dades caigu\u00e9s en un estat inconsistent, ja que es violaria la restricci\u00f3 d\u2019integritat referencial (els estudiants del 3r Grau d\u2019inform\u00e0tica tindrien un valor de clau forana inexistent a la taula de cursos). Per tal de solucionar aquesta inconsist\u00e8ncia, el sistema gestor de base de dades t\u00e9 diferents opcions:</p> <ul> <li>No deixar fer l\u2019eliminaci\u00f3. En aquest cas no es permetria eliminar el 3r Grau d\u2019Inform\u00e0tica de la taula de cursos.</li> <li>Deixar fer l\u2019eliminaci\u00f3 i posar els valors de clau forana que hi apunten a NULL. En aquest cas s\u2019eliminaria el 3r Grau d\u2019Inform\u00e0tica de la taula de cursos i es modificaria a NULL la clau forana dels estudiants que l\u2019estaven cursant. Per tant, es perdr\u00e0 informaci\u00f3 ja que tindrem estudiants per\u00f2 no tindrem const\u00e0ncia sobre el curs que estan o estaven fent.</li> <li>Fer l\u2019eliminaci\u00f3 en cascada. En aquest cas, s\u2019eliminaria el 3r Grau d\u2019Inform\u00e0tica de la taula de cursos. A m\u00e9s a m\u00e9s, s\u2019eliminarien de la taula d\u2019estudiants totes aquelles persones que estiguessin fent el curs de 3r Grau d\u2019Inform\u00e0tica. Aix\u00ed, com no hi ha ning\u00fa que apunti al curs eliminat, es garanteix que no es viola la restricci\u00f3 d\u2019integritat.</li> </ul> <p>Fer que el sistema gestor de base de dades utilitzi una o una altra estrat\u00e8gia \u00e9s una decisi\u00f3 de disseny que el dissenyador de la base de dades haur\u00e0 d\u2019avaluar. A continuaci\u00f3 mostrarem algunes de les violacions de les restriccions d\u2019integritat referencial pels casos d\u2019insercions, modificacions i esborrats a la base de dades i com poden tractar-se. Tamb\u00e9 mostrarem com definir a MySQL les tres estrat\u00e8gies abans esmentades.</p> <p>1) Inserci\u00f3. A l\u2019hora d\u2019inserir una dada, a banda de controlar la restricci\u00f3 d\u2019identitat, cal tenir en compte tamb\u00e9 si hi ha dades relacionades a la taula on es vol inserir la dada mitjan\u00e7ant claus foranes.</p> <p>Si a la inserci\u00f3 hi ha un camp de la taula que \u00e9s clau forana cap a la clau prim\u00e0ria d\u2019una altra taula, el que s\u2019ha de fer \u00e9s comprovar que aquest valor ja existeix a l\u2019altre taula. Altrament el sistema gestor de base de dades no permetr\u00e0 fer la inserci\u00f3. Per exemple, si a la base de dades hi ha aquestes dues taules:</p> <p></p> <p>Es podria inserir \u201cIrene Riaza Dot\u201d, perqu\u00e8 el curs que fa, 3GInf, est\u00e0 a la clau prim\u00e0ria de la taula de cursos. En canvi, no es podria inserir \u201cVictor Serra Piquer\u201d perqu\u00e8 vol fer un curs, 1GFis que no est\u00e0 a clau prim\u00e0ria de la taula de cursos. Abans de fer la inserci\u00f3, caldria comprovar aquesta situaci\u00f3.</p> <p>2) Eliminaci\u00f3. En el cas de l\u2019eliminaci\u00f3 de dades, cal comprovar que no hi hagi cap clau forana apuntant a la fila o files que es volen eliminar. Que passa si es vol eliminar el curs 1GInf de la taula CURS? Que es fa amb els alumnes que fan aquest curs, Mariano Fad\u00f3 Gim\u00e9nez i S\u00edlvia Mart\u00ednez Espa\u00f1ol?</p> <p>Hi ha tres possibles solucions:</p> <p>a) Restricci\u00f3: no es pot eliminar la informaci\u00f3 apuntada per una clau forana. Cal eliminar primer la informaci\u00f3 relacionada. Si es vol eliminar el curs \u201c1GInf\u201d, es generaria un error dient que hi ha alumnes al curs i no es podr\u00e0 eliminar.</p> <p></p> <p>MySQL: per a indicar que una clau forana ha d\u2019actuar de forma restrictiva quan es produeix una eliminaci\u00f3 de dades, no cal afegir res a la instrucci\u00f3, ja que \u00e9s el comportament per defecte de les claus foranes a MySQL. De totes maneres, la instrucci\u00f3 seria:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete restrict;</code></p> <p>b) Posar a NULL: abans d\u2019eliminar el curs, es modifica el curs dels dos alumnes afectats i es posa a NULL. D\u2019aquesta manera, a la taula ESTUDIANT ja no hi \u00e9s el curs \u201c1Ginf\u201d a eliminar. Despr\u00e9s, s\u2019elimina aquest curs de la taula CURS. Les dues taules de l\u2019exemple quedarien aix\u00ed:</p> <p></p> <p>MySQL: per a indicar que una clau forana es comporti de forma \u201cposar a NULL\u201d quan es produeix una eliminaci\u00f3 de dades, es fa de la seg\u00fcent manera:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete set null;</code></p> <p>c) Cascada: l\u2019eliminaci\u00f3 en cascada s\u2019ha de definir per a cada relaci\u00f3 entre taules que volem que s\u2019apliqui. \u00c9s perillosa, ja que elimina m\u00e9s dades de les que en un principi es veurien afectades per la instrucci\u00f3 que s\u2019executa. Aquest sistema consisteix a eliminar primer de la taula relacionada (ESTUDIANT en aquest cas), tots els registres que poden donar un problema d\u2019integritat referencial (el segon i el quart, en aquest cas), i despr\u00e9s fer l\u2019eliminaci\u00f3 demanada a la primera taula (CURS en aquest cas). Les dues taules quedarien aix\u00ed:</p> <p></p> <p>MySQL: per a indicar que una clau forana elimini dades en cascada en fer una eliminaci\u00f3 de dades, es fa de la seg\u00fcent manera:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete cascade;</code></p> <p>3) Modificaci\u00f3: com ja s\u2019ha vist amb anterioritat, una modificaci\u00f3 es pot equiparar a una eliminaci\u00f3 de les dades velles, i una inserci\u00f3 de les dades noves. Llavors, cal tenir en compte aquests dos fets, pel que fa a evitat errors d\u2019integritat referencial.</p> <p>El valor que es vol modificar, si est\u00e0 referenciat per una clau forana, se li apliquen les mateixes regles que en el cas de l\u2019eliminaci\u00f3, o sigui: restricci\u00f3, posar a NULL o cascada. Aix\u00f2 \u00e9s aix\u00ed perqu\u00e8 a tots els efectes, el valor a modificar es perdr\u00e0, sobreescrit pel nou valor, i aix\u00f2 pot afectar els valors referenciats.</p> <p>A l\u2019exemple anterior, si a la taula CURS es vol canviar el nom del curs \u201c3GM\u201d per \u201c3GMul\u201d, afectar\u00e0 l\u2019estudiant Claudina Marinas Salvanya, que est\u00e0 fent un curs anomenat 3GM.</p> <p>De la mateixa manera, si es vol modificar el valor d\u2019un atribut que \u00e9s clau forana cap a una altra taula, es pot fer, sempre que es continu\u00efn complint les regles d\u2019integritat, referencial, o sigui, que el nou valor sigui NULL, o b\u00e9 un altre valor de la clau prim\u00e0ria referenciada. Per exemple, Jaume Serra Lessner vol canviar-se de curs. T\u00e9 clar que no vol fer \u201c1GM\u201d. Hi ha tres possibilitats:</p> <ul> <li>No t\u00e9 clar quin nou curs vol fer. S\u2019ho pensa. Per ara, el valor del curs que fa \u00e9s NULL, que \u00e9s un valor v\u00e0lid per a una clau forana.</li> <li>T\u00e9 clar qu\u00e8 vol fer \u201c1GInf\u201d. Es pot canviar el valor sense cap problema, perqu\u00e8 \u00e9s un dels valors de la clau prim\u00e0ria de CURS.</li> <li>T\u00e9 clar qu\u00e8 vol fer \u201cAstrof\u00edsica Aplicada\u201d. Doncs no ho pot fer, perqu\u00e8 no \u00e9s un dels valors de la clau prim\u00e0ria de CURS. Si es fes una modificaci\u00f3 amb aquest valor, es generaria un error d\u2019integritat referencial.</li> </ul> <p>MySQL. Per a indicar com es vol que reaccioni la taula en modificar un valor d\u2019una clau forana, la sintaxi \u00e9s molt similar al cas de l\u2019eliminaci\u00f3 de dades:</p> <ul> <li>Restrictiu: <code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on update restrict;</code></li> <li>Posar a NULL: <code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on update set null;</code></li> <li>Cascada: <code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on update cascade;</code></li> </ul> <p>A una mateixa clau forana es poden combinar les accions pel cas de l\u2019eliminaci\u00f3 i pel cas de la modificaci\u00f3. No cal fer dues instruccions, nom\u00e9s cal concatenar:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete set null on update cascade;</code></p>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#9annex-codi-emprat-als-exemples","title":"9.Annex: codi emprat als exemples","text":"<p>1) Codi de connexi\u00f3, inserci\u00f3, modificaci\u00f3, eliminaci\u00f3, consulta d\u2019una dada i consulta de diverses dades amb un cursor.</p> <pre><code>&lt;?php\n   //par\u00e0metres de connexi\u00f3\n   $servidor = \"localhost\";\n   $usuari = \"root\";\n   $contrasenya = \"\";\n   $bd = \"bdprova\";\n\n   //realitzaci\u00f3 de la connexi\u00f3\n   $con = mysqli_connect ($servidor, $usuari, $contrasenya, $bd);\n   if (!$con)\n   {\n      die(\"No s'ha pogut realitzar la connexi\u00f3. ERROR:\" .\n      mysqli_connect_error() . \"&lt;br&gt;\");\n   }\n\n   //inserci\u00f3 d'una dada\n   $instruccio = \"insert into estudiant \n                  values ('52666666F','Toni Blanco Serra',23,'2GM')\";\n   $res = mysqli_query($con, $instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut inserir la dada&lt;br&gt;\");\n   }\n   echo \"Dada inserida&lt;br&gt;\";\n\n   //modificaci\u00f3 d'una dada\n   $instruccio = \"update estudiant set edat = 25 \n   where DNI = '52666666F'\";\n   $res = mysqli_query($con, $instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut modificar la dada&lt;br&gt;\");\n   }\n   echo \"Dada modificada&lt;br&gt;\";\n\n   //eliminaci\u00f3 d'una dada\n   $instruccio = \"delete from estudiant where DNI = '52666666F'\";\n   $res = mysqli_query($con, $instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut eliminar la dada&lt;br&gt;\");\n   }\n   echo \"Dada eliminada&lt;br&gt;\";\n\n\n   //consulta d'una dada simple\n   $instruccio = \"select nom from estudiant where dni = '52222222B'\";\n   $res = mysqli_query($con,$instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut consultar la dada&lt;br&gt;\");\n   }\n   echo \"Dada consultada&lt;br&gt;\";\n   $fila = mysqli_fetch_assoc($res);\n   $camp = 'nom';\n   $dada = $fila['nom'];\n   echo $dada . \"&lt;br&gt;\";\n\n   //consulta de varies files de dades\n   $instruccio = \"select nom, edat from estudiant\";\n   $res = mysqli_query($con,$instruccio);\n   if ($res != null)\n   {\n      $fila = mysqli_fetch_assoc($res);\n      while ($fila != null)\n      {   \n         $nom = $fila['nom'];\n         $edat = $fila['edat'];\n         echo \"Nom: \" . $nom . \" | edat: \" . $edat . \"&lt;br&gt;\";\n         $fila = mysqli_fetch_assoc($res);\n      }\n   }\n   mysqli_free_result($res);\n   mysqli_close ($con);\n\n?&gt;\n</code></pre> <p>Codi d\u2019eliminaci\u00f3 d\u2019una dada dintre d\u2019una transacci\u00f3, i posterior rollback per a desfer la transacci\u00f3.</p> <pre><code>&lt;?php\n   //par\u00e0metres de connexi\u00f3\n   $servidor = \"localhost\";\n   $usuari = \"root\";\n   $contrasenya = \"\";\n   $bd = \"bdprova\";\n\n   //realitzaci\u00f3 de la connexi\u00f3\n   $con = mysqli_connect ($servidor, $usuari, $contrasenya, $bd);\n   if (!$con)\n   {\n      die(\"No s'ha pogut realitzar la connexi\u00f3. ERROR:\" .\n      mysqli_connect_error() . \"&lt;br&gt;\");\n   }\n   else\n   {\n      echo \"S'ha connectat a la base de dades&lt;br&gt;\";\n      //eliminaci\u00f3 d'una dada\n      mysqli_query($con, \"begin\");\n      $instruccio = \"delete from estudiant where \n                     DNI = '52666666F'\";\n      $res = mysqli_query($con, $instruccio);\n      if (mysqli_errno($con) != 0) //si error es finalitza\n      {\n         die(\"No s'ha pogut eliminar la dada\");\n      }\n      else\n      {\n         //Despr\u00e9s de l'eliminaci\u00f3, comprovem que no hi ha cap \n         //estudiant amb aquest DNI\n         $res = mysqli_query($con,\"select count(*) as quants \n            from estudiant where DNI = '52666666F'\");\n         $fila = mysqli_fetch_assoc($res);\n         $num = $fila['quants'];\n         echo \"Estudiants amb DNI = 52666666F: \" . $num . \"&lt;br&gt;\";\n      }\n      mysqli_query($con,\"rollback\");\n      //Despr\u00e9s de l'eliminaci\u00f3, i de desfer la transacci\u00f3 amb un \n      //\"rollback\",comprovem que l'estudiant no ha estat eliminat \n      //de la base de dades\n      $res = mysqli_query($con,\"select count(*) as quants from \n         estudiant where DNI = '52666666F'\");\n      $fila = mysqli_fetch_assoc($res);\n      $num = $fila['quants'];\n      echo \"Estudiants amb DNI = 52666666F: \" . $num . \"&lt;br&gt;\";\n   }\n?&gt;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/UT05AccesADadesAmbMySQL.html#10manuals-i-fonts-dinformacio-addicionals","title":"10.Manuals i fonts d\u2019informaci\u00f3 addicionals","text":"<p>1) MySQL:</p> <ul> <li>https://dev.mysql.com/doc/refman/8.0/en/sql-syntax.html</li> <li>https://downloads.mysql.com/docs/refman-5.0-es.pdf</li> </ul> <p>2) PHP i MySQL:</p> <ul> <li>https://downloads.mysql.com/docs/apis-php-en.pdf</li> <li>https://php.net/manual/es/book.mysqli.php</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/_DWES24245.html","title":"Desenvolupament web en entorn servidor - DAW","text":"<ul> <li> <p> DAW DWES Desenvolupament Web Entorn Servidor</p> </li> </ul> <p> Continguts UT02</p> <p> Continguts UT03</p> <p> Exercicis</p>"},{"location":"Moduls/ARXIU/2425/DWES/spring.html","title":"Spring","text":"<ul> <li>Spring Framework</li> <li>Spring Boot</li> <li>M\u00f3dulos principales de Spring</li> <li>Beans</li> <li>Inversi\u00f3n de Control e Inyecci\u00f3n de Dependencias</li> <li>Pr\u00e1ctica de clase: Spring Boot</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/spring.html#spring-framework","title":"Spring Framework","text":"<p>Spring \u00e9s un marc de treball (framework) de codi obert per al desenvolupament d'aplicacions a la plataforma JVM. Va ser creat per abordar la complexitat del desenvolupament empresarial i \u00e9s \u00e0mpliament adoptat a causa de les seves caracter\u00edstiques, com ara:</p> <ol> <li> <p>Inversi\u00f3 de Control (IoC): Spring maneja la creaci\u00f3 i gesti\u00f3 d'objectes, la qual cosa redueix la depend\u00e8ncia entre els components del programari.</p> </li> <li> <p>Programaci\u00f3 Orientada a Aspectes (AOP): Spring proporciona un suport potent per a la programaci\u00f3 orientada a aspectes, la qual cosa permet als desenvolupadors aplicar funcionalitats transversals de manera declarativa, com registre, seguretat, transaccions, etc.</p> </li> <li> <p>Integraci\u00f3 de la base de dades: Spring proporciona una abstracci\u00f3 de la base de dades a trav\u00e9s del seu m\u00f2dul JDBC i ORM, la qual cosa facilita la integraci\u00f3 amb diferents bases de dades.</p> </li> <li> <p>Suport per a transaccions: Spring proporciona un mecanisme de gesti\u00f3 de transaccions que es pot integrar amb una varietat de tecnologies de persist\u00e8ncia.</p> </li> <li> <p>Integraci\u00f3 amb tecnologies de middleware: Spring s'integra b\u00e9 amb tecnologies de middleware com JMS, EJB, etc.</p> </li> <li> <p>Suport per a proves: Spring proporciona suport per a proves unit\u00e0ries i d'integraci\u00f3, la qual cosa ajuda els desenvolupadors a verificar el seu codi de manera m\u00e9s eficient.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/spring.html#spring-boot","title":"Spring Boot","text":"<p>Spring Boot es un proyecto que se basa en el Spring Framework y simplifica el proceso de configuraci\u00f3n y ejecuci\u00f3n de aplicaciones Spring. Las caracter\u00edsticas clave de Spring Boot incluyen:</p> <ol> <li> <p>Autoconfiguraci\u00f3n: Spring Boot puede configurar autom\u00e1ticamente una aplicaci\u00f3n basada en las dependencias que se han agregado al proyecto.</p> </li> <li> <p>Standalone: Spring Boot permite crear aplicaciones independientes con un servidor embebido, lo que significa que no necesitas un servidor web o de aplicaciones separado.</p> </li> <li> <p>Opini\u00f3n predefinida: Spring Boot tiene una opini\u00f3n predefinida para configurar proyectos Spring, aunque permite a los desarrolladores modificar la configuraci\u00f3n para satisfacer sus necesidades.</p> </li> <li> <p>Dependencias de inicio: Proporciona starters que son un conjunto de dependencias convenientes que simplifican la configuraci\u00f3n de la aplicaci\u00f3n.</p> </li> <li> <p>Actuator: Proporciona funcionalidades de producci\u00f3n listas para usar, como la monitorizaci\u00f3n y la gesti\u00f3n de la aplicaci\u00f3n.</p> </li> <li> <p>Pruebas: Spring Boot proporciona soporte para pruebas con Spring Boot Test Starter, lo que facilita la escritura de pruebas para las aplicaciones Spring Boot.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/spring.html#modulos-principales-de-spring","title":"M\u00f3dulos principales de Spring","text":"<p>Spring Framework est\u00e1 dise\u00f1ado de manera modular, lo que significa que puedes elegir usar solo los m\u00f3dulos que necesitas para tu aplicaci\u00f3n. Aqu\u00ed te describo algunos de los m\u00f3dulos m\u00e1s comunes:</p> <p></p> <ol> <li> <p>Spring Core: Este es el m\u00f3dulo central del framework Spring que proporciona la implementaci\u00f3n fundamental de la Inversi\u00f3n de Control (IoC) y la Inyecci\u00f3n de Dependencias (DI).</p> </li> <li> <p>Spring AOP: Este m\u00f3dulo proporciona soporte para la Programaci\u00f3n Orientada a Aspectos (AOP), que permite a los desarrolladores definir m\u00e9todos que se ejecutan antes, despu\u00e9s o alrededor de los m\u00e9todos de negocio.</p> </li> <li> <p>Spring DAO / Spring JDBC: Estos m\u00f3dulos proporcionan una capa de abstracci\u00f3n sobre las operaciones de bajo nivel de JDBC, lo que facilita el manejo de las operaciones de la base de datos.</p> </li> <li> <p>Spring ORM: Este m\u00f3dulo proporciona integraci\u00f3n con tecnolog\u00edas de mapeo objeto-relacional como Hibernate, JPA, JDO, etc.</p> </li> <li> <p>Spring Web MVC: Este m\u00f3dulo proporciona un marco para el desarrollo de aplicaciones web y RESTful utilizando el patr\u00f3n Modelo-Vista-Controlador.</p> </li> <li> <p>Spring WebFlux: Este m\u00f3dulo es la respuesta de Spring al desarrollo de aplicaciones reactivas y permite la construcci\u00f3n de aplicaciones no bloqueantes.</p> </li> </ol> <p>Adem\u00e1s de estos m\u00f3dulos, Spring tiene varios proyectos que extienden su funcionalidad:</p> <ol> <li> <p>Spring Boot: Facilita la creaci\u00f3n de aplicaciones Spring aut\u00f3nomas y basadas en la producci\u00f3n, simplificando la configuraci\u00f3n y el despliegue.</p> </li> <li> <p>Spring Security: Es un marco de seguridad altamente personalizable que proporciona autenticaci\u00f3n y autorizaci\u00f3n, protecci\u00f3n contra ataques, etc.</p> </li> <li> <p>Spring Data: Simplifica la persistencia de datos y proporciona soporte para diferentes tecnolog\u00edas de base de datos, incluyendo JPA, Hibernate, JDBC, MongoDB, Redis, etc.</p> </li> <li> <p>Spring Cloud: Proporciona herramientas para el desarrollo de aplicaciones en la nube, incluyendo la configuraci\u00f3n centralizada, el descubrimiento de servicios, el enrutamiento, etc.</p> </li> <li> <p>Spring Integration: Proporciona una implementaci\u00f3n del patr\u00f3n de integraci\u00f3n de sistemas empresariales (EIP) para facilitar la integraci\u00f3n con otros sistemas mediante la mensajer\u00eda.</p> </li> <li> <p>Spring Batch: Proporciona funciones robustas para el procesamiento por lotes, incluyendo servicios de transacci\u00f3n, tareas programadas, etc.</p> </li> </ol> <p>Cada uno de estos m\u00f3dulos y proyectos proporciona funcionalidad espec\u00edfica, lo que permite a los desarrolladores elegir y usar solo lo que necesitan para sus aplicaciones.</p>"},{"location":"Moduls/ARXIU/2425/DWES/spring.html#beans","title":"Beans","text":"<p>En Spring y Spring Boot, los Beans son los objetos fundamentales que forman la columna vertebral de tus aplicaciones. Son objetos que son instanciados, ensamblados y administrados por el contenedor Spring.</p> <p>Los Beans son creados a partir de las clases de tu aplicaci\u00f3n. Puedes configurar c\u00f3mo se crean los beans, c\u00f3mo se inyectan las dependencias y c\u00f3mo se gestionan en el tiempo de vida de la aplicaci\u00f3n.</p> <p>La creaci\u00f3n de beans se puede configurar de varias maneras en Spring:</p> <ol> <li>Anotaciones: Puedes usar anotaciones como <code>@Component</code>, <code>@Service</code>, <code>@Repository</code> y <code>@Controller</code> para marcar una clase como bean. Spring entonces autom\u00e1ticamente detectar\u00e1 estas clases y las registrar\u00e1 como beans en el contenedor.</li> </ol> <p></p> <pre><code>@Service\npublic class MyService {\n    //...\n}\n</code></pre> <ol> <li>Archivos de configuraci\u00f3n XML: En aplicaciones Spring m\u00e1s antiguas, puedes definir beans en archivos de configuraci\u00f3n XML. Sin embargo, este enfoque se utiliza con menos frecuencia en aplicaciones modernas.</li> </ol> <pre><code>&lt;bean id=\"myService\" class=\"com.example.MyService\"/&gt;\n</code></pre> <ol> <li>Clases de configuraci\u00f3n de Java: Tambi\u00e9n puedes definir beans en clases de configuraci\u00f3n de Java usando la anotaci\u00f3n <code>@Configuration</code> y el m\u00e9todo <code>@Bean</code>.</li> </ol> <pre><code>@Configuration\npublic class MyConfiguration {\n\n    @Bean\n    public MyService myService() {\n        return new MyService();\n    }\n}\n</code></pre> <p>Una vez que los beans est\u00e1n en el contenedor Spring, puedes inyectarlos en otras partes de tu aplicaci\u00f3n usando la anotaci\u00f3n <code>@Autowired</code>. Spring se encargar\u00e1 de buscar el bean correcto y de inyectarlo en tu clase.</p> <pre><code>public class MyController {\n\n    private final MyService myService;\n\n    @Autowired\n    public MyController(MyService myService) {\n        this.myService = myService;\n    }\n\n    //...\n}\n</code></pre> <p>En este ejemplo, Spring inyectar\u00e1 autom\u00e1ticamente el bean <code>MyService</code> en <code>MyController</code> cuando este \u00faltimo sea creado.</p> <p>Los beans son \u00fatiles porque te permiten abstraer la creaci\u00f3n y gesti\u00f3n de objetos. Esto hace que tu c\u00f3digo sea m\u00e1s limpio, m\u00e1s f\u00e1cil de probar y m\u00e1s modular. Adem\u00e1s, los beans de Spring pueden tener \u00e1mbitos (como singleton, prototype, request, session, etc.) que te permiten controlar cu\u00e1ndo y c\u00f3mo se crean y destruyen los beans.</p>"},{"location":"Moduls/ARXIU/2425/DWES/spring.html#inversion-de-control-e-inyeccion-de-dependencias","title":"Inversi\u00f3n de Control e Inyecci\u00f3n de Dependencias","text":"<p>Inversi\u00f3n de Control (IoC) y Inyecci\u00f3n de Dependencias (DI) son dos conceptos fundamentales en Spring y Spring Boot que facilitan la creaci\u00f3n de aplicaciones modulares y flexibles.</p> <p>Inversi\u00f3n de Control (IoC): IoC es un principio de dise\u00f1o de software que invierte el control del flujo de la aplicaci\u00f3n. En un programa tradicional, el flujo de control est\u00e1 dictado por el propio programa, lo que significa que el programa controla la creaci\u00f3n y gesti\u00f3n de los objetos. Sin embargo, en un programa que utiliza IoC, este control se invierte, es decir, el framework (en este caso, Spring) se encarga de la creaci\u00f3n y gesti\u00f3n de los objetos. Esto reduce el acoplamiento entre las clases y permite una mayor flexibilidad y modularidad.</p> <p>Inyecci\u00f3n de Dependencias (DI): DI es una t\u00e9cnica que implementa el principio de IoC para la gesti\u00f3n de dependencias entre objetos. En lugar de que los objetos creen o busquen sus dependencias, estas se \"inyectan\" en ellos por el framework. En Spring, esto se puede hacer a trav\u00e9s de constructores, m\u00e9todos setter o campos directamente. La DI facilita la prueba unitaria, ya que las dependencias pueden ser f\u00e1cilmente sustituidas por mockups.</p> <p>En Spring y Spring Boot, estos conceptos se implementan a trav\u00e9s del contenedor Spring. El contenedor Spring crea y gestiona los objetos de la aplicaci\u00f3n, que se conocen como beans. Los beans y sus dependencias se configuran en archivos de configuraci\u00f3n XML o mediante anotaciones en el c\u00f3digo.</p> <p>Por ejemplo, si tienes una clase <code>A</code> que depende de una clase <code>B</code>, en lugar de crear un objeto <code>B</code> dentro de <code>A</code> con <code>new B()</code>, declaras esta dependencia y Spring se encarga de inyectarla. Esto se puede hacer mediante anotaciones como <code>@Autowired</code>.</p> <pre><code>public class A {\n    private B b;\n\n    @Autowired\n    public A(B b) {\n        this.b = b;\n    }\n\n    // resto de la clase\n}\n</code></pre> <p>En este ejemplo, Spring crear\u00e1 un bean de <code>B</code> y lo inyectar\u00e1 en <code>A</code> cuando cree un bean de <code>A</code>. Esto significa que no tienes que preocuparte por la creaci\u00f3n y gesti\u00f3n de <code>B</code> - eso es manejado por Spring, lo que es IoC y DI en acci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/DWES/spring.html#practica-de-clase-spring-boot","title":"Pr\u00e1ctica de clase: Spring Boot","text":"<p>Investiga sobre proyectos servicios que conozcas que usen Spring Boot. \u00bfEn qu\u00e9 parten lo usan? \u00bfQu\u00e9 m\u00f3dulos de Spring usan? \u00bfQu\u00e9 ventajas les da Spring Boot?</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/DWESUT0501_PracticaInicialPHPBD.html","title":"Enunciat de la Pr\u00e0ctica","text":"<p>Gestor de tasques</p> <p>Crear una aplicaci\u00f3 web b\u00e0sica per gestionar una llista de tasques.</p> <p>Requisits:</p> <p>Base de Dades MySQL:</p> <p>Crea una base de dades anomenada todolist. Crea una taula anomenada tasks amb les seg\u00fcents columnes:</p> <p><pre><code>id (INT, AUTO_INCREMENT, PRIMARY KEY)\ntask (VARCHAR(255))\nstatus (ENUM(\u2018pending\u2019, \u2018completed\u2019))\n</code></pre> Interf\u00edcie HTML:</p> <p>Crea una p\u00e0gina HTML amb un formulari per afegir noves tasques. El formulari ha de tenir un camp de text per a la tasca i un bot\u00f3 per enviar. Mostra la llista de tasques existents en una taula. Cada fila ha de tenir la tasca i el seu estat (pendent o completada).</p> <p>PHP:</p> <p>Crea un fitxer PHP per gestionar la connexi\u00f3 a la base de dades. Crea un fitxer PHP per processar el formulari d\u2019afegir tasques. Aquest fitxer ha d\u2019inserir la nova tasca a la base de dades. Crea un fitxer PHP per mostrar la llista de tasques des de la base de dades.</p> <p>Com entregar-ho</p> <p>Heu de crear un fitxer anomenat DWESUT0501_PracticaInicialPHPBD_.html i pujar-lo al hosting que teniu creat."},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html","title":"Exercici Gesti\u00f3 Botiga","text":""},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#gestio-duna-botiga-en-linia-amb-productes-i-categories","title":"Gesti\u00f3 d'una botiga en l\u00ednia amb productes i categories","text":""},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#enunciat","title":"Enunciat:","text":"<p>Crea una aplicaci\u00f3 PHP que simuli una botiga en l\u00ednia. L'aplicaci\u00f3 ha de permetre:</p> <ul> <li>Crear productes Cada producte tindr\u00e0 un nom, una descripci\u00f3, un preu i una categoria.</li> <li>Crear categories: Cada categoria tindr\u00e0 un nom i una descripci\u00f3.</li> <li>Assignar productes a categories: Un producte pot pert\u00e0nyer a una o m\u00e9s categories.</li> <li>Mostrar una llista de productes: El llistat ha de permetre filtrar per categoria.</li> <li>Mostrar el detall d'un producte: En seleccionar un producte, es mostrar\u00e0 tota la informaci\u00f3, incloent-hi les categories a qu\u00e8 pertany.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#estructura-del-projecte","title":"Estructura del projecte:","text":"<ul> <li>index.php:<ul> <li>Cont\u00e9 el codi principal del programa.</li> <li>Inclou les dades inicials (productes, categories).</li> <li>Truca a les funcions definides al fitxer <code>funcions.php</code> per fer les operacions.</li> </ul> </li> <li>funcions.php:<ul> <li>Cont\u00e9 totes les funcions necess\u00e0ries per gestionar els productes i les categories.</li> </ul> </li> </ul> <p>index.php (exemple):</p> <pre><code>&lt;?php\n\nrequire_once 'funcions.php';\n\n// Dades inicials (exemple)\n\n$producte1 = crearProducte('Samarreta', 'Samarreta de cot\u00f3', 19.99);\n\n$producte2 = crearProducte('Pantalons', 'Pantalons vaquer', 39.99);\n\n$categoria1 = crearCategoria('Roba', 'Secci\u00f3 de roba');\n\n$categoria2 = crearCategoria('Home', 'Productes per a home');\n\nagregarCategoriaAProducte($producte1, $categoria1);\n\nagregarCategoriaAProducte($producte1, $categoria2);\n\nagregarCategoriaAProducte($producte2, $categoria1);\n\n// Mostrar productes de la categoria \"Roba\"\n\n$productesRoba = obtenirProductesPorCategoria($categoria1);\n\nmostrarProductes($productesRoba);\n</code></pre> <p>funcions.php (exemple):</p> <pre><code>&lt;?php\n\nclass Producte {\n\n    //... \n\n}\n\nclasse Categoria {\n\n    //... \n\n}\n\nfunction crearProducte($nom, $descripcio, $preu) {\n\n    //...\n\n}\n\nfunction crearCategoria($nom, $descripcio) {\n\n    //...\n\n}\n\nfunction agregarCategoriaAProducte(Producte $producte, Categoria $categoria) {\n\n    //...\n\n}\n\nfunction obtenirProductsPorCategoria(Categoria $categoria) {\n\n    //...\n\n}\n\nfunction mostrarProductes(array $productes) {\n\n    //...\n\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#instruccions","title":"Instruccions:","text":"<ol> <li>Crear els fitxers: Crea dos fitxers: <code>index.php</code> i <code>funcions.php</code>.</li> <li>Implementar les funcions: Completa les funcions a <code>funcions.php</code> segons la descripci\u00f3 de lexercici.</li> <li>Utilitzar les funcions: A <code>index.php</code>, crea els productes i categories necessaris i utilitza les funcions per realitzar les operacions sol\u00b7licitades.</li> <li>Mostra resultats: La funci\u00f3 <code>mostrarProductes</code> ha d'imprimir a la pantalla la informaci\u00f3 dels productes.</li> </ol>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#aspectes-que-savaluaran","title":"Aspectes que s\u2019avaluaran:","text":"<ul> <li>Correcci\u00f3 del codi: Les funcions han de fer les tasques correctament.</li> <li>Modularitat: El codi ha d'estar ben organitzat en funcions.</li> <li>Reutilitzaci\u00f3 de codi: Cal evitar duplicacions de codi.</li> <li>Documentaci\u00f3: Es recomana afegir comentaris a les funcions per explicar-ne el prop\u00f2sit.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#ampliacions","title":"Ampliacions:","text":"<ul> <li>Validaci\u00f3 de dades: Afegir validacions per assegurar que les dades ingressades siguin correctes.</li> <li>Maneig d'errors: Implementar un maneig d'errors adequat per evitar que el programa s'aturi inesperadament.</li> <li>Persist\u00e8ncia de dades: Desar les dades en un fitxer o base de dades.</li> <li>Interf\u00edcie d'usuari: Crear una interf\u00edcie web simple utilitzant HTML i formularis per interactuar amb l'aplicaci\u00f3.</li> <li>Sortida HTML: Un cop funcioni el teu codi, prepara\u2019l per presentar les dades de sortida en format HTML. Concretament utilitzant taules.</li> <li>Sortida HTML utilitzant imatges dels productes</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#comentaris-i-observacions","title":"Comentaris i observacions:","text":"<p>En separar la l\u00f2gica en funcions i fitxers separats el codi \u00e9s m\u00e9s net, eficient i reutilitzable, preparant-los per a projectes m\u00e9s complexos.</p> <ul> <li>Major organitzaci\u00f3: El codi est\u00e0 m\u00e9s estructurat i \u00e9s m\u00e9s f\u00e0cil entendre i mantenir.</li> <li>Reutilitzaci\u00f3 de codi: Les funcions poden ser utilitzades a diferents parts del programa.</li> <li>Facilitat de prova: \u00c9s m\u00e9s f\u00e0cil provar les funcions de manera individual.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#exemple-dexecucio-sortida-esperada-del-vostre-codi","title":"Exemple d'execuci\u00f3 (sortida esperada del vostre codi)","text":"<p>Dades d'entrada:</p> <ul> <li>Productes:<ul> <li>Samarreta: Samarreta de cot\u00f3, 19.99\u20ac</li> <li>Pantalons: Pantalons texans, 39.99\u20ac</li> </ul> </li> <li>Categories:<ul> <li>Roba</li> <li>Home</li> </ul> </li> </ul> <p>Codi executat: S'ha cridat a la funci\u00f3 <code>mostrarProductesPerCategoria</code> amb la categoria \"Roba\".</p> <p>Sortida per pantalla:</p> <p>Productes de la categoria \"Roba\":</p> <p>Nom: Samarreta</p> <p>Preu: 19.99\u20ac</p> <p>Categories: Roba Home</p> <p>Nom: Pantalons</p> <p>Preu: 39.99\u20ac</p> <p>Categories: Roba</p> <p>Explicaci\u00f3 de la sortida:</p> <ul> <li>Es mostren tots els productes que pertanyen a la categoria \u201cRoba\u201d.</li> <li>Per a cada producte es mostra el nom, el preu i les categories a qu\u00e8 pertany.</li> <li>En aquest cas, tots dos productes (Samarreta i Pantalons) pertanyen a la categoria \"Roba\", per la qual cosa tots dos es mostren a la sortida.</li> </ul> <p>Un altre exemple:</p> <p>Dades d'entrada:</p> <ul> <li>Es busca el producte \"Samarreta\".</li> </ul> <p>Sortida per pantalla:</p> <p>Detall del producte:</p> <p>Nom: Samarreta</p> <p>Preu: 19.99\u20ac</p> <p>Categories: Roba Home</p> <p>Explicaci\u00f3 de la sortida:</p> <ul> <li>Es mostra la informaci\u00f3 detallada del producte \"Samarreta\", incloent-hi el nom, el preu i les categories a qu\u00e8 pertany.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#rubrica-davaluacio","title":"R\u00fabrica d'avaluaci\u00f3","text":""},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExerciciGestioBotiga.html#llista-de-verifiacio","title":"Llista de verifiaci\u00f3","text":"<p>Enlla\u00e7 a la llista de verificaci\u00f3</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/Exercicis.html","title":"Exercicis","text":""},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/Exercicis.html#1-conceptes-basics-integracio-de-php-en-html-variables-operadors","title":"1. Conceptes b\u00e0sics: Integraci\u00f3 de PHP en HTML. Variables. Operadors","text":"<p>\u270f\ufe0f   EXERCICI 01 Escriu un programa que mostri el teu nom per pantalla. Utilitza codi PHP.</p> <p>\u270f\ufe0f   EXERCICI 02 Modifica el programa anterior perqu\u00e8 mostri la teva adre\u00e7a i el teu n\u00famero de tel\u00e8fon. Cada dada s'ha de mostrar en una l\u00ednia diferent. Barreja d'alguna manera les sortides per pantalla, utilitzant tant HTML com PHP.</p> <p>\u270f\ufe0f   EXERCICI 03 Escriu un programa que mostri per pantalla 10 paraules en angl\u00e8s al costat de la seva corresponent traducci\u00f3 al castell\u00e0. Les paraules han d'estar distribu\u00efdes en dues columnes. Utilitza l'etiqueta  d'HTML. <p>\u270f\ufe0f   EXERCICI 04 Escriu un programa que mostri el teu horari de classe mitjan\u00e7ant una taula. Tot i que es pot fer \u00edntegrament a HTML (igual que els exercicis anteriors), veu intercalant codi HTML i PHP per familiaritzar-te amb aquest \u00faltim.</p> <p>\u270f\ufe0f   EXERCICI 05 Escriu un programa que utilitzi les variables $x i $y. Assignals els valors 144 i 999 respectivament. A continuaci\u00f3, mostra per pantalla el valor de cada variable, la suma, la resta, la divisi\u00f3 i la multiplicaci\u00f3.</p> <p>\u270f\ufe0f   EXERCICI 06 Crea la variable $nombre i aix\u00ed el teu nom complet. Mostra el seu valor per pantalla de tal forma que el resultat sigui el mateix que el de l'exercici 1.</p> <p>\u270f\ufe0f   EXERCICI 07 Crea les variables $nombre, $direccion i $telefono i aix\u00ed els valors adequats. Mostra els valors per pantalla de tal forma que el resultat sigui el mateix que el de l'exercici 2.</p> <p>\u270f\ufe0f   EXERCICI 08 Realitza un conversor d'euros a pessetes. La quantitat en euros que es vol convertir haur\u00e0 d'estar emmagatzemada en una variable.</p> <p>\u270f\ufe0f   EXERCICI 09 Realitza un conversor de pessetes a euros. La quantitat en pessetes que es vol convertir haur\u00e0 d'estar emmagatzemada en una variable.</p> <p>\u270f\ufe0f   EXERCICI 10 Escriu un programa que pinti per pantalla una pir\u00e0mide farcida a base de bifocades. La base de la pir\u00e0mide ha d'estar formada per 9 bifocades.</p> <p>\u270f\ufe0f   EXERCICI 11 Igual que el programa anterior, per\u00f2 aquesta vegada la pir\u00e0mide estar\u00e0 hui (s'ha de veure \u00fanicament el contorn fet amb bifoca).</p> <p>\u270f\ufe0f   EXERCICI 12 Igual que el programa anterior, per\u00f2 aquesta vegada la pir\u00e0mide ha d'apar\u00e8ixer invertida, amb el v\u00e8rtex cap avall.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/Exercicis.html#2-recollida-de-dades-per-teclat-mitjancant-formularis","title":"2. Recollida de dades per teclat mitjan\u00e7ant formularis","text":"<p>\u270f\ufe0f   EXERCICI 13 Realitza un programa que demani dos n\u00fameros i despr\u00e9s mostri el resultat de la seva multiplicaci\u00f3.</p> <p>\u270f\ufe0f   EXERCICI 14 Realitza un conversor d'euros a pessetes. Ara la quantitat en euros que es vol convertir s'haur\u00e0 d'introduir per teclat.</p> <p>\u270f\ufe0f   EXERCICI 15 Realitza un conversor de pessetes a euros. La quantitat en pessetes que es vol convertir s'haur\u00e0 d'introduir per teclat.</p> <p>\u270f\ufe0f   EXERCICI 16 Escriu un programa que sumi, resti, multipliqui i divideixi dos n\u00fameros introdu\u00efts per teclat.</p> <p>\u270f\ufe0f   EXERCICI 17 Escriu un programa que calculi l'\u00e0rea d'un rectangle.</p> <p>\u270f\ufe0f   EXERCICI 18 Escriu un programa que calculi l'\u00e0rea d'un triangle.</p> <p>\u270f\ufe0f   EXERCICI 19 Escriu un programa que calculi el total d'una factura a partir de la base imposable.</p> <p>\u270f\ufe0f   EXERCICI 20 Escriu un programa que calculi el salari setmanal d'un treballador en base a les hores treballades. Es pagaran 12 euros per hora.</p> <p>\u270f\ufe0f   EXERCICI 21 Escriu un programa que calculi el volum d'un con mitjan\u00e7ant la f\u00f3rmula</p> <p>\u270f\ufe0f   EXERCICI 22 Realitza un conversor de Mb a Kb.</p> <p>\u270f\ufe0f   EXERCICI 23 Realitza un conversor de Kb a Mb.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/Exercicis.html#3-sentencia-condicional-if-i-switch","title":"3. Sent\u00e8ncia condicional (if i switch)","text":"<p>\u270f\ufe0f   EXERCICI 24 Escriu un programa que demani per teclat un dia de la setmana i que digui quina assignatura toca a primera hora aquell dia.</p> <p>\u270f\ufe0f   EXERCICI 25 Realitza un programa que demani una hora per teclat i que mostri despr\u00e9s bons dies, bones tardes o bones nits segons l'hora. S'utilitzaran els trams de 6 a 12, de 13 a 20 i de 21 a 5. respectivament. Nom\u00e9s es tenen en compte les hores, els minuts no s'han d'introduir per teclat.</p> <p>\u270f\ufe0f   EXERCICI 26 Escriu un programa en qu\u00e8 donat un n\u00famero de l'1 a 7 escrigui el corresponent nom del dia de la setmana.</p> <p>\u270f\ufe0f   EXERCICI 27 Vam ampliar un dels exercicis de la relaci\u00f3 anterior per considerar les hores extres. Escriu un programa que calculi el salari setmanal d'un treballador tenint en compte que les hores ordin\u00e0ries (40 primeres hores de treball) es paguen a 12 euros l'hora. A partir de l'hora 41, es paguen a 16 euros l'hora.</p> <p>\u270f\ufe0f   EXERCICI 28 Realitza un programa que resolgui una equaci\u00f3 de primer grau (del tipus ax + b =0).</p> <p>\u270f\ufe0f   EXERCICI 29 Realitza un programa que calculi el temps que trigar\u00e0 a caure un objecte des d'una al\u00e7ada h. Aplica la f\u00f3rmula  sent g = 9.81m/s2</p> <p>\u270f\ufe0f   EXERCICI 30 Realitza un programa que calculi la mitjana de tres notes.</p> <p>\u270f\ufe0f   EXERCICI 31 Amplia el programa anterior perqu\u00e8 digui la nota del butllet\u00ed (insuficient, suficient, b\u00e9, notable o sobresortint).</p> <p>\u270f\ufe0f   EXERCICI 32 Realitza un programa que resolgui una equaci\u00f3 de segon grau (del tipus ax2+ bx + c =0).</p> <p>\u270f\ufe0f   EXERCICI 33 Escriu un programa que ens digui l'hor\u00f2scop a partir del dia i el mes de naixement.</p> <p>\u270f\ufe0f   EXERCICI 34 Escriu un programa que donada una hora determinada (hores i minuts), calculi els segons que falten per arribar a la mitjanit.</p> <p>\u270f\ufe0f   EXERCICI 35 Realitza un miniq\u00fcestionari amb 10 preguntes tipus test sobre les assignatures que s'imparteixen en el curs. Cada pregunta encertada sumar\u00e0 un punt. El programa mostrar\u00e0 al final la qualificaci\u00f3 obtinguda. P\u00e1sale el miniq\u00fcestionari als teus companys i p\u00eddeles que ho facin per veure qu\u00e8 tal anessin de coneixements en les diferents assignatures del curs.</p> <p>\u270f\ufe0f   EXERCICI 36 Escriu un programa que ordeni tres nombres enters introdu\u00efts per teclat.</p> <p>\u270f\ufe0f   EXERCICI 37 Realitza un programa que digui si un nombre introdu\u00eft per teclat \u00e9s parell i/o divisible entre 5.</p> <p>\u270f\ufe0f   EXERCICI 38 Escriu un programa que digui quina \u00e9s l'\u00faltima xifra d'un n\u00famero sencer introdu\u00eft per teclat.</p> <p>\u270f\ufe0f   EXERCICI 39 Escriu un programa que digui quina \u00e9s la primera xifra d'un n\u00famero sencer introdu\u00eft per teclat. Es permeten n\u00fameros de fins a 5 xifres.</p> <p>\u270f\ufe0f   EXERCICI 40 Realitza un programa que ens digui quants d\u00edgits t\u00e9 un nombre sencer que pot ser positiu o negatiu. Es permeten n\u00fameros de fins a 5 d\u00edgits.</p> <p>\u270f\ufe0f   EXERCICI 41 Realitza un programa que digui si un nombre sencer positiu introdu\u00eft per teclat \u00e9s capic\u00faa. Es permeten n\u00fameros de fins a 5 xifres.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/Exercicis.html#4-bucles","title":"4. Bucles","text":"<p>\u270f\ufe0f   EXERCICI 42 Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle for.</p> <p>\u270f\ufe0f   EXERCICI 43 Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle while.</p> <p>\u270f\ufe0f   EXERCICI 44 Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle do-while.</p> <p>\u270f\ufe0f   EXERCICI 45 Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle for.</p> <p>\u270f\ufe0f   EXERCICI 46 Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle while.</p> <p>\u270f\ufe0f   EXERCICI 47 Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle do-while.</p> <p>\u270f\ufe0f   EXERCICI 48 Realitza el control d'acc\u00e9s a una caixa forta. La combinaci\u00f3 ser\u00e0 un nombre de 4 xifres. El programa ens demanar\u00e0 la combinaci\u00f3 per obrir-la. Si no encertem, se'ns mostrar\u00e0 el missatge \"Ho sento, aquesta no \u00e9s la combinaci\u00f3\" i si encertem se'ns dir\u00e0 \"La caixa forta s'ha obert satisfact\u00f2riament\". Tindrem quatre oportunitats per obrir la caixa forta.</p> <p>\u270f\ufe0f   EXERCICI 49 Mostra la taula de multiplicar d'un nombre introdu\u00eft per teclat. El resultat s'ha de mostrar en una taula (&lt;table&gt; en HTML).</p> <p>\u270f\ufe0f   EXERCICI 50 Realitza un programa que ens digui quants d\u00edgits t\u00e9 un n\u00famero introdu\u00eft per teclat.</p> <p>\u270f\ufe0f   EXERCICI 51 Escriu un programa que calculi la mitjana d'un conjunt de nombres positius introdu\u00efts per teclat. A priori, el programa no sap quants n\u00fameros s'introduiran. L'usuari indicar\u00e0 que ha acabat d'introduir les dades quan meta un n\u00famero negatiu.</p> <p>\u270f\ufe0f   EXERCICI 52 Escriu un programa que mostri en tres columnes, el quadrat i el cubell dels 5 primers nombres sencers a partir d'un que s'introdueix per teclat.</p> <p>\u270f\ufe0f   EXERCICI 53 Escriu un programa que mostri els n primers termes de la s\u00e8rie de Fibonacci. El primer terme de la s\u00e8rie de Fibonacci \u00e9s 0, el segon \u00e9s 1 i la resta es calcula sumant els dos anteriors, per la qual cosa haur\u00edem de ser 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144... El n\u00famero n s'ha d'introduir per teclat.</p> <p>\u270f\ufe0f   EXERCICI 54 Escriu un programa que llegeixi una llista de deu n\u00fameros i determini quants s\u00f3n positius, i quants s\u00f3n negatius.</p> <p>\u270f\ufe0f   EXERCICI 55 Escriu un programa que demani una base i un exponent (sencer positiu) i que calculi la pot\u00e8ncia.</p> <p>\u270f\ufe0f   EXERCICI 56 Escriu un programa que donats dos n\u00fameros, un de real (base) i un sencer positiu (exponent), tregui per pantalla totes les pot\u00e8ncies amb base el n\u00famero donat i exponents entre un i l'exponent introdu\u00eft. No s'han d'utilitzar funcions d'exponenciaci\u00f3. Per exemple, si introdu\u00efm el 2 i el 5, s'hauran de mostrar 2\u00b9, 2 \u00b2, 2 \u00b3, 2\u2074, 2\u2075.</p> <p>\u270f\ufe0f   EXERCICI 57 Escriu un programa que digui si un n\u00famero introdu\u00eft per teclat \u00e9s o no cos\u00ed. Un n\u00famero cos\u00ed \u00e9s aquell que nom\u00e9s \u00e9s divisible entre ell mateix i la unitat.</p> <p>\u270f\ufe0f   EXERCICI 58 Realitza un programa que sumi els 100 n\u00fameros seg\u00fcents a un nombre sencer i positiu introdu\u00eft per teclat. S'ha de comprovar que la dada introdu\u00efda \u00e9s correcta (que \u00e9s un nombre positiu).</p> <p>\u270f\ufe0f   EXERCICI 59 Escriu un programa que obtingui els nombres enters compresos entre dos nombres introdu\u00efts per teclat i validats com a diferents, el programa ha de comen\u00e7ar pel menor dels enters introdu\u00efts i anar incrementant de 7 en 7.</p> <p>\u270f\ufe0f   EXERCICI 60 Realitza un programa que pinti una pir\u00e0mide per pantalla. L'al\u00e7ada s'ha de demanar per teclat mitjan\u00e7ant un formulari. La pir\u00e0mide estar\u00e0 feta de boletes, maons o qualsevol altra imatge de les 5 que s'han de donar a elegir mitjan\u00e7ant un formulari.</p> <p>\u270f\ufe0f   EXERCICI 61 Igual que l'exercici anterior per\u00f2 aquesta vegada s'ha de pintar una pir\u00e0mide fuita.</p> <p>\u270f\ufe0f   EXERCICI 62 Realitza un programa que vagi demanant n\u00fameros fins que s'introdueixi un nombre negatiu i ens digui quants n\u00fameros s'han introdu\u00eft, la mitjana dels senars i el m\u00e9s gran dels parells . El nombre negatiu nom\u00e9s s'utilitza per indicar el final de la introducci\u00f3 de dades per\u00f2 no s'inclou en el c\u00f2mput.</p> <p>\u270f\ufe0f   EXERCICI 63 Mostra per pantalla tots els n\u00fameros cosins entre 2 i 100, ambd\u00f3s inclosos.</p> <p>\u270f\ufe0f   EXERCICI 64 Escriu un programa que permeti anar introduint una s\u00e8rie indeterminada de n\u00fameros fins que la suma d'ells superi el valor 10000. Quan aix\u00f2 \u00faltim passi, s'ha de mostrar el total acumulat, el comptador dels n\u00fameros introdu\u00efts i la mitjana.</p> <p>\u270f\ufe0f   EXERCICI 65 Escriu un programa que llegeixi un n\u00famero N i imprimeixi una pir\u00e0mide de n\u00fameros amb N files com en la seg\u00fcent figura. Recorda utilitzar un tipus de lletra d'ample fix com per exemple Courier perqu\u00e8 els espais tinguin la mateixa amplada que els n\u00fameros. 1</p> <p>\u270f\ufe0f   EXERCICI 66 Realitza un programa que demani un n\u00famero per teclat i que despr\u00e9s mostri aquest n\u00famero al rev\u00e9s.</p> <p>\u270f\ufe0f   EXERCICI 67 Realitza un programa que demani primer un n\u00famero i a continuaci\u00f3 un d\u00edgit. El programa ens ha de donar la posici\u00f3 (o posicions) comptant d'esquerra a dreta que ocupa aquest d\u00edgit en el n\u00famero introdu\u00eft.</p> <p>\u270f\ufe0f   EXERCICI 68 Escriu un programa que mostri, compti i sumi els m\u00faltiples de 3 que hi ha entre 1 i un n\u00famero llegit per teclat.</p> <p>\u270f\ufe0f   EXERCICI 69 Escriu un programa que calculi el factorial d'un n\u00famero sencer llegit per teclat.</p> <p>\u270f\ufe0f   EXERCICI 70 Escriu un programa que mostri per pantalla tots els n\u00fameros enters positius menors a un llegit per teclat que no siguin divisibles entre un altre tamb\u00e9 llegit de la mateixa manera.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/Exercicis.html#5-matrius","title":"5. Matrius","text":"<p>\u270f\ufe0f   EXERCICI 71    Defineix tres arrays de 20 n\u00fameros sencers cadascuna, amb noms \"numero\", \"quadrat\" i \"cub\". Carrega la matriu \"numero\" amb valors aleatoris entre 0 i 100. En la matriu \"quadrat\" s'han d'emmagatzemar els quadrats dels valors que hi ha a la matriu \"numero\". En la matriu \"cub\" s'han d'emmagatzemar les pot\u00e8ncies de tres dels valors que hi ha en \"numero\". A continuaci\u00f3, mostra el contingut de les tres matrius disposades en tres columnes.</p> <p>\u270f\ufe0f   EXERCICI 72    Escriu un programa que demani 10 n\u00fameros per teclat i que despr\u00e9s mostri els n\u00fameros introdu\u00efts juntament amb les paraules \"m\u00e0xim\" i \"m\u00ednim\" al costat del m\u00e0xim i del m\u00ednim respectivament.</p> <p>\u270f\ufe0f   EXERCICI 73    Escriu un programa que llegeixi 15 n\u00fameros per teclat i que els emmagatzemi en una matriu. Rota els elements d'aquesta matriu, \u00e9s a dir, l' element de la posici\u00f3 0 ha de passar a la posici\u00f3 1, el de la 1 a la 2, etc. El nombre que es troba en l'\u00faltima posici\u00f3 ha de passar a la posici\u00f3 0. Finalment, mostra el contingut de la matriu.</p> <p>\u270f\ufe0f   EXERCICI 74    Escriu un programa que generi 100 n\u00fameros aleatoris del 0 al 20 i que els mostri per pantalla separats per espais. El programa demanar\u00e0 llavors per teclat dos valors i a continuaci\u00f3 canviar\u00e0 totes les ocurr\u00e8ncies del primer valor pel segon en la llista generada anteriorment. Els n\u00fameros que s' han canviat han d' apar\u00e8ixer ressaltats d' un color diferent.</p> <p>\u270f\ufe0f   EXERCICI 75    Realitza un programa que demani la temperatura mitjana que ha fet en cada mes d'un determinat any i que mostri a continuaci\u00f3 un diagrama de barres horitzontals amb aquestes dades. Les barres del diagrama es poden dibuixar a base de la concatenaci\u00f3 d' una imatge.</p> <p>\u270f\ufe0f   EXERCICI 76    Realitza un programa que demani 8 n\u00fameros enters i que despr\u00e9s mostri aquests n\u00fameros de colors, els parells d'un color i els senars d'un altre.</p> <p>\u270f\ufe0f   EXERCICI 77    Escriu un programa que generi 20 n\u00fameros sencers aleatoris entre 0 i 100 i que els emmagatzemo en una matriu. El programa ha de ser capa\u00e7 de passar tots els n\u00fameros parells a les primeres posicions de la matriu (del 0 en endavant) i tots els n\u00fameros senars a les cel\u00b7les restants. Utilitza arrays auxiliars si \u00e9s necessari.</p> <p>\u270f\ufe0f   EXERCICI 78    Realitza un programa que demani 10 n\u00fameros per teclat i que els emmagatzemi en una matriu. A continuaci\u00f3 es mostrar\u00e0 el contingut d'aquesta array al costat de l'\u00edndex (0 \u2013 9) utilitzant per a aix\u00f2 una taula. Seguidament el programa passar\u00e0 els nombres primers a les primeres posicions, despla\u00e7ant la resta de n\u00fameros (els que no s\u00f3n primers) de tal manera que no se'n perdi cap. Al final s' ha de mostrar la matriu resultant. Per exemple:</p> <p></p> <p>\u270f\ufe0f   EXERCICI 79    Realitza un programa que demani 10 n\u00fameros per teclat i que els emmagatzemi en una matriu. A continuaci\u00f3 es mostrar\u00e0 el contingut d'aquest array al costat de l'\u00edndex (0 \u2013 9). Seguidament el programa demanar\u00e0 dues posicions a les quals anomenarem \"inicial\" i \"final\". S'ha de comprovar que inicial \u00e9s menor que final i que ambd\u00f3s n\u00fameros estan entre 0 i 9. El programa haur\u00e0 de col\u00b7locar el n\u00famero de la posici\u00f3 inicial en la posici\u00f3 final, rotant la resta de n\u00fameros perqu\u00e8 no se'n perdi cap. Al final s'ha de mostrar la matriu resultant.</p> <p></p> <p></p> <p>\u270f\ufe0f   EXERCICI 80    Realitza un programa que esculli a l'atzar 10 cartes de la baralla espanyola i que digui quants punts sumen segons el joc de la brisca. Empra una matriu associativa per obtenir els punts a partir del nom de la figura de la carta. Assegura't que no es repeteix cap carta, igual que si les hagu\u00e9ssim agafat d'una baralla de veritat.</p> <p>\u270f\ufe0f   EXERCICI 81    Crea un mini-diccionari espanyol-angl\u00e8s que contingui, almenys, 20 paraules (amb la seva traducci\u00f3). Utilitza una matriu associativa per emmagatzemar les parelles de paraules. El programa demanar\u00e0 una paraula en espanyol i donar\u00e0 la corresponent traducci\u00f3 en angl\u00e8s.</p> <p>\u270f\ufe0f   EXERCICI 82    Realitza un programa que esculli a l'atzar 5 paraules en espanyol del mini-diccionari de l'exercici anterior. El programa demanar\u00e0 que l'usuari teclegi la traducci\u00f3 a l'angl\u00e8s de cadascuna de les paraules i comprovar\u00e0 si s\u00f3n correctes. Al final, el programa haur\u00e0 de mostrar quantes respostes s\u00f3n v\u00e0lides i quantes err\u00f2nies.</p> <p>\u270f\ufe0f   EXERCICI 83    Omple una matriu bidimensional de 6 files per 9 columnes amb nombres enters positius compresos entre 100 i 999 (ambd\u00f3s inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no se'n pot repetir cap. Mostra a continuaci\u00f3 per pantalla el contingut de la matriu de tal forma que es compleixin els requisits seg\u00fcents:</p> <ul> <li>Els n\u00fameros de les dues diagonals on hi ha el m\u00ednim han d'apar\u00e8ixer en color verd.</li> <li>El m\u00ednim ha d'apar\u00e8ixer en color blau.</li> <li>La resta de n\u00fameros ha d'apar\u00e8ixer en color negre.</li> </ul> <p>\u270f\ufe0f   EXERCICI 84    Escriu un programa que, atesa una posici\u00f3 en un tauler d'escacs, ens digui a quines caselles podria saltar un alfil que es troba en aquesta posici\u00f3. Indica\u2019l de forma gr\u00e0fica sobre el tauler amb un color diferent per a aquestes caselles on pot saltar la figura. L'alfil es mou sempre en diagonal. El tauler compta amb 64 caselles. Les columnes s'indiquen amb les lletres de la \"a\" a la \"h\" i les files s'indiquen de l'1 al 8.</p> <p>\u270f\ufe0f   EXERCICI 85    Realitza un programa que sigui capa\u00e7 de rotar tots els elements d\u2019una matriu quadrada una posici\u00f3 en el sentit de les agulles del rellotge. La matriu ha de tenir 12 files per 12 columnes i ha de contenir n\u00fameros generats a l' atzar entre 0 i 100. S' ha de mostrar tant la matriu original com la matriu resultat, ambdues amb els n\u00fameros convenientment alineats.</p> <p>\u270f\ufe0f   EXERCICI 86    Omple una matriu amb 50 n\u00fameros aleatoris compresos entre el 0 i el 99, i despr\u00e9s mostra-la en una llista desordenada. Per crear un n\u00famero aleatori, utilitza la funci\u00f3 'rand(inici, fi)'. Per exemple:</p> <pre><code>$num = rand(0, 99)\n</code></pre> <p>\u270f\ufe0f   EXERCICI 87    Prepara un formulari (html) amb un textbox que realitzi una pregunta a l'usuari.  A partir del formulari anterior, crea un programa que mostri la pregunta rebuda i generi una resposta de manera aleat\u00f2ria entre un conjunt de respostes predefinides, emmagatzemades en una matriu: Si, no, potser, clar que s\u00ed, per suposat que no, no ho tinc clar, segur, jo diria que s\u00ed, ni de conya, etc... Aquest exercici es basa en el joc de la Bolla 8 m\u00e0gica</p> <p>\u270f\ufe0f   EXERCICI 88    A partir de l'exercici 86, genera una matriu aleat\u00f2ria de 33 elements amb nombres compresos entre el 0 i 100 i calcula:</p> <ul> <li>El major</li> <li>El menor</li> <li>La mitjana</li> </ul> <p>\u270f\ufe0f   EXERCICI 89    Omple una matriu de 100 elements de manera aleat\u00f2ria amb valors 'M' o 'F' (per exemple '[\"M\", \"M\", \"F\", \"M\", ...]`). Una vegada completat, torna a rec\u00f3rrer-la i calcula quants elements hi ha de cadascun dels valors emmagatzemant el resultat en una matriu '['M' =&gt; 44, 'F' =&gt; 66]' (no utilitzis variables per comptar les 'M' o les 'F'). Finalment, mostra el resultat per pantalla.</p> <p>\u270f\ufe0f   EXERCICI 90    Mitjan\u00e7ant una matriu associativa, emmagatzema el nom i l'al\u00e7ada de 5 persones ('nom =&gt;'al\u00e7ada'). Posteriorment, recorre l' arrelament i mostra\u2019l en una taula HTML. Finalment afegeix una \u00faltima fila a la taula amb l'al\u00e7ada mitjana.</p> <p>\u270f\ufe0f   EXERCICI 91    Mitjan\u00e7ant una matriu bidimensional, emmagatzema el nom, al\u00e7ada i email de 5 persones. Per a aix\u00f2, crea una matriu de persones, sent cada persona una matriu associativa: '[ ['nom'=&gt;'Tofol', 'altura'=&gt;182, 'email'=&gt;'tofol@correu.com'],[...],... ]' Posteriorment, recorre la matriu i mostra-la en una taula HTML.</p> <p>\u270f\ufe0f   EXERCICI 92    Omple una matriu bidimensional de 6 files per 9 columnes amb n\u00fameros aleatoris compresos entre 100 i 999 (ambd\u00f3s inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no se'n pot repetir cap.  Mostra a continuaci\u00f3 per pantalla el contingut de la matriu de tal forma que:</p> <ul> <li>La columna del m\u00e0xim ha d'apar\u00e8ixer en blau.</li> <li>La fila del m\u00ednim ha d'apar\u00e8ixer en verd</li> <li>La resta de n\u00fameros han d'apar\u00e8ixer en negre.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/Exercicis.html#6-funcions","title":"6. Funcions","text":"<p>\u270f\ufe0f   EXERCICI 93    Crea les seg\u00fcents funcions:</p> <ul> <li>Una funci\u00f3 que esbrini si un n\u00famero \u00e9s parell: 'esParell(int $num): bool' </li> <li>Una funci\u00f3 que retorni una matriu de mida '\\(tam' amb n\u00fameros aleatoris compr\u00e8s entre '\\)min' i '$max' : 'arrayAleatori(int $tam, int $min, int $max) : array' </li> <li>Una funci\u00f3 que rebi un '\\(array' per refer\u00e8ncia i retorni la quantitat de n\u00fameros parells que hi ha emmagatzemats:  'arrayParells(array &amp;\\)array): int'</li> </ul> <p>\u270f\ufe0f   EXERCICI 94    Crea les funcions seg\u00fcents:</p> <ul> <li>Una funci\u00f3 que retorni el m\u00e9s gran de tots els n\u00fameros rebuts com a par\u00e0metres: 'function major(): int'. Utilitza les funcions 'func_get_args()', etc... No pots fer servir la funci\u00f3 'max()'.    </li> <li>Una funci\u00f3 que concateni tots els par\u00e0metres rebuts separant-los amb un espai: 'function concatenar(...$paraules) : string'. Utilitza l'operador '...'.</li> </ul> <p>\u270f\ufe0f   EXERCICI 95    Afegeix les seg\u00fcents funcions:</p> <ul> <li>'digits(int $num): int' \u2192 retorna la quantitat de d\u00edgits d'un n\u00famero.    </li> <li>'digitN(int $num, int \\(pos): int' \u2192 retorna el d\u00edgit que ocupa, comen\u00e7ant per l'esquerra, la posici\u00f3 '\\)pos'.    </li> <li>'llevaPerDarrera(int $num, int \\(quant): int' \u2192 li treu per darrere (dreta) '\\)quant' d\u00edgits.    </li> <li> <p>'llevaPerDavant(int $num, int \\(quant): int' \u2192 li treu per davant (esquerra) '\\)quant' d\u00edgits.</p> <p>Per provar les funcions, fes \u00fas tant de pas d'arguments posicionals com arguments amb nom.</p> </li> </ul> <p>\u270f\ufe0f   EXERCICI 96    Crea un arxiu amb funcions per sumar, restar, multiplicar i dividir dos n\u00fameros.</p> <p>\u270f\ufe0f   EXERCICI 97    Fent \u00fas d'una matriu que emmagatzemi el nom de les funcions de l'arxiu anterior, a partir de dos n\u00fameros rebuts per URL, recorre la matriu i invoca les funcions de manera din\u00e0mica fent \u00fas de funcions variable.</p> <p>\u270f\ufe0f   EXERCICI 98    Crea una biblioteca amb dues funcions:</p> <ul> <li>pessetes2euros: passa de pessetes a euros </li> <li>euros2pesetes: passa d'euros a pessetes </li> </ul> <p>Cada funci\u00f3 ha de rebre dos par\u00e0metres:</p> <ul> <li>La quantitat a transformar </li> <li>La cotitzaci\u00f3, amb un par\u00e0metre per defecte amb el factor de transformaci\u00f3.</li> </ul> <p>\u270f\ufe0f   EXERCICI 99    Utilitza l\u2019exercici98 i prova les funcions passant tant les quantitats amb la cotitzaci\u00f3 per defecte, com amb noves cotitzacions. Recorda que 1 euro s\u00f3n/eren 166.360 pessetes.</p> <p>\u270f\ufe0f   EXERCICI 100   Despr\u00e9s de llegir les dades del tiquet de compra, enumera en una taula els productes, amb el seu preu en euros i pessetes, i finalment, en una \u00faltima fila, totalitzar en ambdues monedes.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/Exercicis.html#6-funcions-predefinides","title":"6. Funcions predefinides","text":"<p>Tots els exercicis s'han de realitzar creant noves funcions per encapsular el codi. A m\u00e9s de la pr\u00f2pia funci\u00f3, l'exercici ha de contenir codi per poder provar-ho.</p> <p>\u270f\ufe0f   EXERCICI 101   Llegeix una frase i en retorna una de nova amb nom\u00e9s els car\u00e0cters de les posicions senars. (exercici101frasesenars.php)</p> <p>\u270f\ufe0f   EXERCICI 102   A partir d'una frase, retorna la quantitat de cadascuna de les vocals, i el total d' elles. (exercici102vocals.php)</p> <p>\u270f\ufe0f   EXERCICI 103   A partir d'una frase amb paraules nom\u00e9s separades per espais, retornar: *   Lletres totals i quantitat de paraules  *   Una l\u00ednia per cada paraula indicant la seva mida (exercici103analitzador.php)</p> <ul> <li>Nota: no es pot fer servir <code>str_word_count</code></li> </ul> <p>\u270f\ufe0f   EXERCICI 104   Investiga que fa la funci\u00f3 <code>str_word_count</code>, i torna a fer l'exercici 103.(exercici104analitzadorwc.php):</p> <p>\u270f\ufe0f   EXERCICI 105   EsCrIu UnA fUnCi\u00d3 qUe TrAnSfOrMi UnA cAdEnA eN cAnI (exercici105cani.php) {millor no utilitzar les funmcions str_replace i str_split)</p> <p>\u270f\ufe0f   EXERCICI 106   Escriu una funci\u00f3 que retorni un boole\u00e0 indicant si una paraula \u00e9s pal\u00edndroma (es llegeix igual d'esquerra a dreta que de dreta a esquerra, per exemple, \" A la galera far\u00e8 la gala\" o \u201cL\u00facid, ir\u00f2nic, i no ridicul\u201d, en espanyol podr\u00edem tenir \u201cA Luci le pasa la pel\u00edcula\u201d i en angl\u00e8s \u201cA dog! A panic in a pagoda!\u201d). (exercici106palindrom.php)</p> <p>\u270f\ufe0f   EXERCICI 107   Utilitzant les funcions per treballar amb car\u00e0cters, a partir d'una cadena i un despla\u00e7ament (exercici107codificar.php) :</p> <ul> <li>Si el despla\u00e7ament \u00e9s 1, substitueix la A per B, la B per C, etc.</li> <li>El despla\u00e7ament no pot ser negatiu</li> <li>Si se surt de l'abecedari, ha de tornar a comen\u00e7ar</li> <li>Cal respectar els espais, punts i comes.</li> </ul> <p>\u270f\ufe0f   EXERCICI 108   Crea un programa que permeti a l'usuari llegir un conjunt de n\u00fameros separats per espais. (exercici108filtrat.html) El programa filtrar\u00e0 els n\u00fameros llegits per tornar a mostrar \u00fanicament els n\u00fameros parells i indicar\u00e0 quant de n\u00fameros parells hi ha. (exercici108filtrat.php) <pre><code>Dona\u2019m n\u00fameros:     1   4   7   9   23  10  8\nEls 3 num parells s\u00f3n:  4   10  8\n</code></pre> \u270f\ufe0f   EXERCICI 109   Investiga les seg\u00fcents funcions de cadena (explica per a qu\u00e8 serveixen mitjan\u00e7ant comentaris, i programa un petit exemple de cadascuna d'elles): <code>ucwords</code>, <code>strrev</code>, <code>str_repeat</code> y <code>md5</code>. (exercici109investiga.php)</p> <p>Note</p> <p>Els seg\u00fcents exercicis es basen en la generaci\u00f3 de nombres aleatoris.</p> <p>\u270f\ufe0f   EXERCICI 110   Crea una funci\u00f3 que permeti generar una lletra aleat\u00f2ria, maj\u00fascula o min\u00fascula. (exercici110generador.php)</p> <p>\u270f\ufe0f   EXERCICI 111   Crea una funci\u00f3 que a partir d'una mida, generi una contrasenya aleat\u00f2ria composta de lletres i d\u00edgits de manera aleat\u00f2ria. (exercici111generaContrasenya.php)</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExercicisCookieSession.html","title":"ExercicisCookieSession","text":""},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExercicisCookieSession.html#exercicis-php-cookies-i-session","title":"Exercicis PHP Cookies i Session","text":"<p>\u270f\ufe0f   EXERCICI 123   (<code>exercici123comptadorVisites.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, informa l'usuari de si \u00e9s la seva primera visita, o si no ho \u00e9s, mostri el seu valor (valor d'un comptador).      A m\u00e9s, has de permetre que l'usuari reinicialitzi el seu comptador de visites.</p> <p>\u270f\ufe0f   EXERCICI 124   (<code>exercici124fons.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, crea una p\u00e0gina amb un desplegable amb diversos colors, de manera que l'usuari pugui canviar el color de fons de la p\u00e0gina (atribut <code>bgcolor</code>).      En tancar la p\u00e0gina, aquesta ha de recordar, almenys durant 24h, el color triat i la propera vegada que es carregui la pagina, ho faci amb l'\u00faltim color seleccionat.</p> <p>\u270f\ufe0f   EXERCICI 125   (<code>exercici125fonsSessio1.php</code>): Modifica l'exercici anterior per emmagatzemar el color de fons en la sessi\u00f3 i no emprar cookies. A m\u00e9s, ha de contenir un enlla\u00e7 al seg\u00fcent arxiu.</p> <p>\u270f\ufe0f   EXERCICI 126   (<code>exercici126fonsSessio2.php</code>): Ha de mostrar el color i donar la possibilitat de:</p> <ul> <li>tornar a la p\u00e0gina anterior mitjan\u00e7ant un enlla\u00e7</li> <li>i mitjan\u00e7ant un altre enlla\u00e7, buidar la sessi\u00f3 i tornar a la p\u00e0gina anterior.</li> </ul> <p>\u270f\ufe0f   EXERCICI 127   Fent \u00fas de la sessi\u00f3, crearem 2 formularios:</p> <ul> <li><code>exercici127formulari1.php</code> envia les dades (nom i cognoms, email, url i sexe) a 'exercici127formulari2.php`.</li> <li><code>exercici127formulari2.php</code> llegeix les dades i les fica a la sessi\u00f3. A continuaci\u00f3, mostra la resta de camps del formulari a omplir (convivents, aficions i men\u00fa). Envia aquestes dades a <code>exercici127formulari3.php</code>.</li> <li><code>exercici127formulari3.php</code> recull les dades enviades en el pas anterior i al costat dels que ja estaven en la sessi\u00f3, es mostren totes les dades en una taula/llista desordenada.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExercicisPOO.html","title":"ExercicisPOO","text":""},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExercicisPOO.html#exercicis-php-orientat-a-objectes","title":"Exercicis PHP Orientat a objectes","text":"<p>\u270f\ufe0f   EXERCICI 112   (<code>exercici112Empleat.php</code>): Crea una classe Empleat amb el seu nom, llinatges i sou. Encapsula les propietats mitjan\u00e7ant <code>getters/setters</code> i afegeix m\u00e8todes per a:</p> <ul> <li> <p>Obtenir el seu nom complet \u2192 getNomComplet(): string</p> </li> <li> <p>Que retorni un boole\u00e0 indicant si ha de pagar o no impostos (es paguen quan el sou \u00e9s superior a3333\u20ac) \u2192 hadePagarImpostos(): bool</p> </li> </ul> <p>\u270f\ufe0f   EXERCICI 113 (<code>exercici113EmpleatTelefons.php</code>): C\u00f2pia la classe de l'exercici 112 i modifica-la. Afegeix una propietat privada que emmagatzemi una matriu de n\u00fameros de tel\u00e8fons. Afegeix els m\u00e8todes seg\u00fcents:</p> <ul> <li><code>public function afegirTelefon(int $telefono) : void</code> \u2192 Afegeix un tel\u00e8fon a la matriu</li> <li><code>public function llistarTelefons(): string</code> \u2192 Mostra els tel\u00e8fons separats per comes</li> <li><code>public function buidarTelefons(): void</code> \u2192 Elimina tots els tel\u00e8fons</li> </ul> <p>\u270f\ufe0f   EXERCICI 114 (<code>exercici114EmpleatConstructor.php</code>): Copia la classe de l'exercici 113 i modifica-la. Elimina els setters de <code>nom</code> y <code>llinatges</code>, de manera que aquestes dades s'assignin mitjan\u00e7ant el constructor (utilitza la sintaxi de PHP7). Si el constructor rep un tercer par\u00e0metre, ser\u00e0 el sou del <code>Empleat</code>. Si no, se li assignaran 1000\u20ac com a sou inicial.</p> <p><code>exercici114EmpleatConstructor8.php</code>: Modifica la classe i utilitza la sintaxi del PHP 8 de promoci\u00f3 de les propietats del constructor.</p> <p>\u270f\ufe0f   EXERCICI 115 (<code>exercici115EmpleatConstant.php</code>): Copia la classe de l'exercici 114 i modifica-la. Afegeix una constant <code>SOU_MAXIM</code> amb el valor del sou que ha de pagar impostos, i modifica el codi per utilitzar la constant.</p> <p>\u270f\ufe0f   EXERCICI 116 (<code>exercici116EmpleatSou.php</code>):Copia la classe de l'exercici 115 i modifica-la. Canvia la constant per una variable est\u00e0tica <code>souMaxim</code>, de manera que mitjan\u00e7ant <code>getter/setter</code> puguis modificar el seu valor.</p> <p>\u270f\ufe0f   EXERCICI 117 (<code>exercici117EmpleatStatic.php</code>: Copia la classe de l'exercici 116 i modifica-la.      Completa el m\u00e8tode seg\u00fcent amb una cadena HTML que mostri les dades d'un empleat dins d'un par\u00e0graf i tots els tel\u00e8fons mitjan\u00e7ant una llista ordenada (per a aix\u00f2, haur\u00e0s de crear un getter per als tel\u00e8fons):</p> <ul> <li><code>public static function toHtml(Empleat $emp): string</code></li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExercicisUT04.html","title":"ExercicisUT04","text":"<p>\u270f\ufe0f Exercici 123: (<code>123server.php</code>): Mostra els valors de <code>$_SERVER</code> en executar un script al teu ordinador. Prova a passar-li par\u00e0metres per GET (i a no passar-li cap). Prepara un formulari ('123post.html') que faci un enviament per POST i comprovam de nou. Crea una p\u00e0gina ('123enlace.html') que tingui un enlla\u00e7 a <code>123server.php</code> i comprova el valor de `HTTP_REFERER'.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExercicisUT04.html#formularis","title":"Formularis","text":"<p>\u270f\ufe0f Exercici 124: (<code>124formulari.html</code> <code>124formulari.php</code>): Creeu un formulari que sol\u00b7liciti:</p> <ul> <li>Nom i cognoms.</li> <li>Email.</li> <li>URL p\u00e0gina personal.</li> <li>Sexe (r\u00e0dio).</li> <li>Nombre de convivents al domicili.</li> <li>Aficions (checkboxes) \u2013 posar m\u00ednim 4 valors.</li> <li>Men\u00fa favorit (llista selecci\u00f3 m\u00faltiple) \u2013 posar m\u00ednim 4 valors.</li> </ul> <p>Mostra els valors carregats en una taula-resum.</p> <p>\u270f\ufe0f Exercici 125: (<code>125validacio.php</code>): A partir del formulari anterior, introdueix validacions en HTML mitjan\u00e7ant l'atribut <code>required</code> dels camps (usa els tipus adequats per a cada camp), i comprova els tipus de les dades i que compleixen els valors esperats (per exemple, en els checkboxes que els valors recollits formen part de tots els possibles). Pots provar de passar-li dades err\u00f2nies via URL i comprovar el seu comportament.  Tip: Investiga l'\u00fas de la funci\u00f3 <code>filter_var</code>.</p> <p>\u270f\ufe0f Exercici 126: (<code>126pujada.html</code> y <code>126pujada.php</code>): Crea un formulari que permeti pujar un arxiu al servidor. A m\u00e9s del fitxer, ha de demanar en el mateix formulari dos camps num\u00e8rics que demanin l'amplada i l'al\u00e7ada. Comprova que tant el fitxer com les dades arriben correctament.</p> <p>\u270f\ufe0f Exercici 127: (<code>127pujadaImatge.php</code>): Modifica l'exercici anterior perqu\u00e8 \u00fanicament permeti pujar imatges (comprova la propietat <code>type</code> de l'arxiu pujat). Si l'usuari selecciona un altre tipus d'arxius, se l'ha d'informar de l'error i permetre que pugi un nou arxiu. En el cas de pujar el tipus correcte, visualitzar la imatge amb la mida d'amplada i al\u00e7ada rebut com a par\u00e0metre.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExercicisUT04.html#cookies-i-sessio","title":"Cookies i Sessi\u00f3","text":"<p>\u270f\ufe0f Exercici 128: (<code>128comptadorVisites.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, informa l'usuari de si \u00e9s la seva primera visita, o si no ho \u00e9s, mostri el seu valor (valor d'un comptador). A m\u00e9s, has de permetre que l'usuari reinicialitzi el seu comptador de visites.</p> <p>\u270f\ufe0f Exercici 129: (<code>129fons.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, crea una p\u00e0gina amb un desplegable amb diversos colors, de manera que l'usuari pugui canviar el color de fons de la p\u00e0gina (atribut `bgcolor'). En tancar la p\u00e0gina, aquesta ha de recordar, almenys durant 24h, el color triat i la pr\u00f2xima vegada que es carregui la p\u00e0gina, ho faci amb l'\u00faltim color seleccionat.</p> <p>\u270f\ufe0f Exercici 130: (<code>130fonsSessio1.php</code>): Modifica l'exercici anterior per emmagatzemar el color de fons en la sessi\u00f3 i no emprar cookies. A m\u00e9s, ha de contenir un enlla\u00e7 al seg\u00fcent arxiu. <code>130fonsSessio2.php</code>: Ha de mostrar el color i donar la possibilitat de:</p> <ul> <li>tornar a la p\u00e0gina anterior mitjan\u00e7ant un enlla\u00e7</li> <li>i mitjan\u00e7ant un altre enlla\u00e7, buidar la sessi\u00f3 i tornar a la p\u00e0gina anterior.</li> </ul> <p>\u270f\ufe0f Exercici 131: (Fent \u00fas de la sessi\u00f3, anam a dividir el formulari de l'exercici <code>124formulari.php</code> en 2 subformularis:</p> <ul> <li><code>131formulari.php</code> envia les dades (nom i cognoms, email, url i sexe) a <code>131formulari2.php</code>.</li> <li><code>131formulari2.php</code> llegeix les dades i les fica a la sessi\u00f3. A continuaci\u00f3, mostra la resta de camps del formulari a omplir (convivents, aficions i men\u00fa). Envia aquestes dades a <code>131formulari3.php</code>.</li> <li><code>131formulari3.php</code> recull les dades enviades en el pas anterior i al costat dels que ja estaven en la sessi\u00f3, es mostren totes les dades en una taula/llista desordenada.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExercicisUT04.html#autenticacio","title":"Autenticaci\u00f3","text":"<p>En els seg\u00fcents exercicis anam a muntar una estructura d'inici de sessi\u00f3 similar a la vista a classe.</p> <p>\u270f\ufe0f Exercici 132: (<code>132index.php</code>): formulari d'inici de sessi\u00f3</p> <p>\u270f\ufe0f Exercici 133: (<code>133login.php</code>): fa de controlador, per la qual cosa ha de comprovar les dades rebudes (nom\u00e9s permet l'entrada de <code>usuari/usuari</code> i si tot \u00e9s correcte, cedir el control a la vista del seg\u00fcent exercici. No cont\u00e9 codi HTML.</p> <p>\u270f\ufe0f Exercici 134: (<code>134pelicules.php</code>): vista que mostra com a t\u00edtol \"Llistat de Pel\u00b7l\u00edcules\", i una llista desordenada amb tres pel\u00b7l\u00edcules.</p> <p>\u270f\ufe0f Exercici 135: (<code>135logout.php</code>): buida la sessi\u00f3 i ens porta de nou al formulari d'inici de sessi\u00f3. No cont\u00e9 codi HTML.</p> <p>\u270f\ufe0f Exercici 136: (<code>136series.php</code>): Afegeix una nova vista similar a <code>134pelicules.php</code> que mostra un \"Llistat de S\u00e8ries\" amb una llista desordenada amb tres s\u00e8ries. Tant <code>134pelicules.php</code> com la vista acabada de crear, han de tenir un petit men\u00fa (senzill, mitjan\u00e7ant enlla\u00e7os) que permeti passar d'un llistat a un altre. Comprova que si s'accedeix directament a qualsevol de les vistes sense tenir un usuari amb sessi\u00f3 iniciada, via URL del navegador, no es mostra el llistat.</p> <p>\u270f\ufe0f Exercici 137: Modifica tant el controlador com les vistes perqu\u00e8:</p> <ul> <li>les dades les obtingui el controlador (emmagatzema en la sessi\u00f3 un array de pel\u00b7l\u00edcules i un altre de s\u00e8ries)</li> <li>col\u00b7loqueu les dades en la sessi\u00f3</li> <li>En les vistes, les dades es recuperen de la sessi\u00f3 i es pinten en la llista desordenada recorrent l'vector corresponent.</li> </ul>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExercicisUT04.html#projecte-videoclub-30","title":"Projecte Videoclub 3.0","text":"<p>\u270f\ufe0f Exercici 138: Per al Videoclub, anam a crear una p\u00e0gina <code>index.php</code> amb un formulari que contingui un formulari de login/password. Es comprovaran les dades en <code>login.php</code>. Els possibles usuaris s\u00f3n admin/admin o usuari/usuari.</p> <ul> <li>Si l'usuari \u00e9s correcte, en <code>main.php</code> mostrar un missatge de benvinguda amb el nom de l'usuari, al costat d'un enlla\u00e7 per tancar la sessi\u00f3, que el portaria de nou al login.</li> <li>Si l'usuari \u00e9s incorrecte, ha de tornar a carregar el formulari donant informaci\u00f3 a l'usuari d'acc\u00e9s incorrecte.</li> </ul> <p>\u270f\ufe0f Exercici 139: Si l'usuari \u00e9s administrador, es carregaran en la sessi\u00f3 les dades de suports i clients del videoclub que ten\u00edem en les nostres proves (no mitjan\u00e7ant <code>include</code> sin\u00f3 copiant les dades i inserint-les en un vector associatiu, el qual col\u00b7locarem posteriorment en la sessi\u00f3).</p> <p>En la seg\u00fcent unitat els obtindrem de la base de dades. En <code>mainAdmin.php</code>, a m\u00e9s de la benvinguda, ha de mostrar:</p> <ul> <li>Llistat de clients</li> <li>Llistat de suports</li> </ul> Esquema navegaci\u00f3 exercici 141 <p>\u270f\ufe0f Exercici 140: Anam a modificar la classe <code>Client</code> per emmagatzemar l'<code>user</code> i la <code>password</code> de cada client. Despr\u00e9s de codificar els canvis, modificar el llistat de clients de <code>mainAdmin.php</code> per afegir al llistat l'usuari.</p> <p>\u270f\ufe0f Exercici 141: Si l'usuari que accedeix no \u00e9s administrador i coincideix amb algun dels clients que tenim carregats despr\u00e9s del login, ha de carregar <code>mainCliente.php</code> on es mostrar\u00e0 un llistat dels lloguers del client. Per a aix\u00f2, modificarem la classe <code>Client</code> per oferir el m\u00e8tode <code>getLloguers() : array</code>, el qual invocarem i despr\u00e9s recorrerem per mostrar el llistat sol\u00b7licitat.</p> <p>Ara tornem a la part d'administraci\u00f3</p> <p>\u270f\ufe0f Exercici 142: A m\u00e9s de mostrar el llistat de clients, vam oferir l'opci\u00f3 de donar d'alta un nou client a <code>formCreateCliente.php'. Les dades s'enviaran mitjan\u00e7ant POST a</code>createCliente.php<code>que les introduir\u00e0 en la sessi\u00f3. Un cop creat el client, ha de tornar a carregar</code>mainAdmin.php` on es podr\u00e0 veure el client inserit. Si hi ha alguna dada incorrecta, ha de tornar a carregar el formulari d'alta.</p> <p>\u270f\ufe0f Exercici 143: Crea en <code>formUpdateCliente.php</code> un formulari que permeti editar les dades d'un client. Has de recollir les dades a <code>updateCliente.php</code>. Les dades de client s'han de poder modificar des de la pr\u00f2pia p\u00e0gina d'un client, aix\u00ed com des del llistat de l'administrador.</p> <p>\u270f\ufe0f Exercici 144: Des del llistat de clients de l'administrador has d'oferir la possibilitat d'esborrar un client. Al navegador, abans de redirigir el servidor, l'usuari ha de confirmar mitjan\u00e7ant JS que realment desitja eliminar el client. Finalment, a <code>removeCliente.php</code> elimina el client de la sessi\u00f3. Un cop eliminat, ha de tornar al llistat de clients.</p> Esquema navegaci\u00f3 Videoclub 3.0"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExpressionsRegularsPHP.html","title":"Exercicis expressions regulars en PHP:","text":""},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-118-validacio-de-correu-electronic","title":"\u270f\ufe0f   Exercici 118: Validaci\u00f3 de Correu Electr\u00f2nic","text":"<p>Crea una funci\u00f3 que validi si una cadena \u00e9s un correu electr\u00f2nic v\u00e0lid. La funci\u00f3 ha de retornar <code>true</code> si la cadena \u00e9s un correu electr\u00f2nic v\u00e0lid i <code>false</code> en cas contrari.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui el patr\u00f3 d'un correu electr\u00f2nic, com ara <code>'/^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,6}$/'</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-119-extraccio-de-numeros-de-telefon","title":"\u270f\ufe0f   Exercici 119: Extracci\u00f3 de N\u00fameros de Tel\u00e8fon","text":"<p>Escriu una funci\u00f3 que extregui tots els n\u00fameros de tel\u00e8fon d'una cadena de text. Els n\u00fameros de tel\u00e8fon poden estar en diferents formats, com ara <code>(123) 456-7890</code>, <code>123-456-7890</code>, o <code>123.456.7890</code>.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui patrons de n\u00fameros de tel\u00e8fon, com ara <code>'/\\(?\\d{3}\\)?[-.\\s]?\\d{3}[-.\\s]?\\d{4}/'</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-120-validacio-de-contrasenyes","title":"\u270f\ufe0f   Exercici 120: Validaci\u00f3 de Contrasenyes","text":"<p>Crea una funci\u00f3 que validi si una contrasenya compleix amb els seg\u00fcents requisits: - Almenys 8 car\u00e0cters de llargada. - Cont\u00e9 almenys una lletra maj\u00fascula. - Cont\u00e9 almenys una lletra min\u00fascula. - Cont\u00e9 almenys un n\u00famero. - Cont\u00e9 almenys un car\u00e0cter especial (com ara <code>!@#$%^&amp;*</code>).</p> Pista <p>Utilitza una expressi\u00f3 regular que combini aquests requisits, com ara <code>'/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&amp;*]).{8,}$/'</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-121-extraccio-de-urls","title":"\u270f\ufe0f   Exercici 121: Extracci\u00f3 de URLs","text":"<p>Escriu una funci\u00f3 que extregui totes les URLs d'una cadena de text. Les URLs poden comen\u00e7ar amb <code>http://</code>, <code>https://</code>, o <code>www.</code>.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui patrons de URLs, com ara <code>'/\\b(?:https?:\\/\\/|www\\.)\\S+\\b/'</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-122-substitucio-de-paraules-prohibides","title":"\u270f\ufe0f   Exercici 122: Substituci\u00f3 de Paraules Prohibides","text":"<p>Crea una funci\u00f3 que substitueixi totes les paraules prohibides d'una cadena de text per una s\u00e8rie d'asteriscs (<code>*</code>). La llista de paraules prohibides ha de ser un array passat com a par\u00e0metre a la funci\u00f3.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui les paraules prohibides dins de la cadena, com ara <code>'/\\b(' . implode('|', $paraules_prohibides) . ')\\b/i'</code>.</p>"},{"location":"Moduls/ARXIU/2425/DWES/exercicisisolucions/solucionsExpressionsRegularsPHP.html","title":"Solucions exercicis expressions regulars","text":"<p>Aqu\u00ed tens possibles solucions per als cinc exercicis amb expressions regulars en PHP:</p> Soluci\u00f3 exercici 1: Validaci\u00f3 de Correu Electr\u00f2nic <pre><code>function validarEmail($email) {\n    return preg_match('/^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,6}$/', $email);\n}\n\n// Exemple d'\u00fas\n$email = \"exemple@domini.com\";\nif (validarEmail($email)) {\n    echo \"El correu electr\u00f2nic \u00e9s v\u00e0lid.\";\n} else {\n    echo \"El correu electr\u00f2nic no \u00e9s v\u00e0lid.\";\n}\n</code></pre> Soluci\u00f3 exercici 2: Extracci\u00f3 de N\u00fameros de Tel\u00e8fon <pre><code>function extreureNumerosTelefon($text) {\n    preg_match_all('/\\(?\\d{3}\\)?[-.\\s]?\\d{3}[-.\\s]?\\d{4}/', $text, $matches);\n    return $matches[0];\n}\n\n// Exemple d'\u00fas\n$text = \"Contacta'ns al (123) 456-7890 o 123-456-7890.\";\n$numeros = extreureNumerosTelefon($text);\nprint_r($numeros);\n</code></pre> Soluci\u00f3 exercici 3: Validaci\u00f3 de Contrasenyes <pre><code>function validarContrasenya($contrasenya) {\n    return preg_match('/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&amp;*]).{8,}$/', $contrasenya);\n}\n\n// Exemple d'\u00fas\n$contrasenya = \"Exemple1!\";\nif (validarContrasenya($contrasenya)) {\n    echo \"La contrasenya \u00e9s v\u00e0lida.\";\n} else {\n    echo \"La contrasenya no \u00e9s v\u00e0lida.\";\n}\n</code></pre> Soluci\u00f3 exercici 4: Extracci\u00f3 de URLs <pre><code>function extreureURLs($text) {\n    preg_match_all('/\\b(?:https?:\\/\\/|www\\.)\\S+\\b/', $text, $matches);\n    return $matches[0];\n}\n\n// Exemple d'\u00fas\n$text = \"Visita https://www.exemple.com o www.exemple.org per m\u00e9s informaci\u00f3.\";\n$urls = extreureURLs($text);\nprint_r($urls);\n</code></pre> Soluci\u00f3 exercici 5: Substituci\u00f3 de Paraules Prohibides <pre><code>function substituirParaulesProhibides($text, $paraules_prohibides) {\n    $pattern = '/\\b(' . implode('|', $paraules_prohibides) . ')\\b/i';\n    return preg_replace($pattern, '****', $text);\n}\n\n// Exemple d'\u00fas\n$text = \"Aquest text cont\u00e9 paraules prohibides com exemple i prova.\";\n$paraules_prohibides = ['exemple', 'prova'];\n$text_nou = substituirParaulesProhibides($text, $paraules_prohibides);\necho $text_nou;\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PFC/comPFC.html","title":"Com fer el Projecte Final del Cicle Superior de DAM/DAW? (PFC)","text":""},{"location":"Moduls/ARXIU/2425/PFC/comPFC.html#passes-a-seguir","title":"Passes a seguir","text":"<ol> <li>Escull el tema del projecte. \u00c9s essencial triar el tema del projecte. El m\u00e9s important per triar el tema sobre el qual vols fer el teu projecte \u00e9s que et motivi. Pensa que seran 11/12 setmanes ben intenses de feina. Per tant, molt millor si fas feina sobre aix\u00f2 que t'agradi. El teu tutor haur\u00e0 de valorar i acceptar la tem\u00e0tica que proposis.</li> </ol> <p>Bibliografia</p> <p>Al document del teu projecte haur\u00e0s d'afegir totes les refer\u00e8ncies de la informaci\u00f3 que utilitzis i que no sigui d'elaboraci\u00f3 pr\u00f2pia. Les normes APA s\u00f3n les m\u00e9s utilitzades per fer refer\u00e8ncia a la bibliografia emprada.</p> <ol> <li>Recopila i cerca informaci\u00f3. Recopila tota la informaci\u00f3 que puguis del cicle formatiu i que guardi relaci\u00f3 amb el teu tema de projecte. A partir d'aqu\u00ed cerca informaci\u00f3 i documents que puguin ser \u00fatils pel teu projecte. No t'oblidis apuntar d'on has obtingut la informaci\u00f3. Ho necessites per crear una bona bibliografia en la mem\u00f2ria.</li> <li>Estructura i d\u00f3na-li forma \"sobre paper\". Abans de comen\u00e7ar a escriure el teu document de projecte \u00e9s fonamental que tinguis clara l'estructura que ha de tenir. Per aix\u00f2 el m\u00e9s recomanable \u00e9s fer un o diversos esbossos del teu projecte. Et recomano que ho facis fent servir \"paper i llapis\". M\u00e9s abaix en aquesta p\u00e0gina trobar\u00e0s un apartat que et pot ajudar a tenir una refer\u00e8ncia.</li> <li>Comen\u00e7ar a escriure la mem\u00f2ria del projecte. Despr\u00e9s, has de comen\u00e7ar a redactar la mem\u00f2ria del projecte. I, per aix\u00f2, \u00e9s fonamental que facis un esquema que inclogui els punts rellevants del projecte. D'aquesta manera, et resultar\u00e0 molt m\u00e9s senzill. Aquest esquema \u00e9s per organitzar millor la teva feina aix\u00ed que no et preocupis per la forma ni \"color\", simplement procura que et sigui \u00fatil a tu.</li> <li>Corregir les faltes d'ortografia. Finalment, \u00e9s imprescindible que corregeixis les possibles faltes d'ortografia que pugui tenir el text. Pensa que es tracta d'un treball seri\u00f3s que podries presentar el dia de dem\u00e0 en una empresa per aconseguir una bona feina.</li> </ol>"},{"location":"Moduls/ARXIU/2425/PFC/comPFC.html#quina-estructura-ha-de-seguir-el-projecte","title":"Quina estructura ha de seguir el Projecte?","text":"<p>L'estructura del Projecte Final pot variar depenent del contingut i tema del treball. Tanmateix, aquests s\u00f3n els apartats principals que se solen incloure:</p> <ol> <li>An\u00e0lisi de requisits: Identificaci\u00f3 i comprensi\u00f3 dels requisits funcionals i no funcionals.</li> <li> <p>Disseny de la soluci\u00f3: Creaci\u00f3 dels diagrames i models necessaris per representar l'arquitectura de la soluci\u00f3 plantejada, la seva interf\u00edcie d'usuari i la seva base de dades (si correspon).</p> <p>2.1.  Descripci\u00f3 arquitectura</p> <p>2.2.  Justificaci\u00f3 t\u00e8cnica</p> <p>2.3.  Eines de desenvolupament</p> </li> <li> <p>Planificaci\u00f3: Defineix les etapes del teu projecte i ub\u00edcales en el temps en l'ordre en qu\u00e8 s'hagin d'executar. Aix\u00ed mateix, defineix la durada, de forma realista, de les diferents etapes que hagis definit.</p> </li> <li> <p>Desenvolupament de la soluci\u00f3: Planteja el desenvolupament de la soluci\u00f3 utilitzant tot l'apr\u00e8s durant el cicle.</p> <p>4.1.  Metodologia de treball</p> <p>4.2.  Esb\u00f3s o prototip de la soluci\u00f3</p> <p>4.3.  Documentaci\u00f3: Elaboraci\u00f3 de documentaci\u00f3 t\u00e8cnica que descrigui la soluci\u00f3, el seu funcionament i les decisions preses durant el desenvolupament.</p> </li> </ol> <p>Trucs per redactar el teu Projecte de Final del Cicle</p> <p>Si arribats a aquest punt, encara tens dubtes sobre com redactar el Projecte Final, presta atenci\u00f3 als seg\u00fcents trucs:</p> <ul> <li>Defineix clarament els objectius i requisits del projecte.</li> <li>Utilitza un llenguatge clar i conc\u00eds, evitant l'\u00fas excessiu de tecnicismes.</li> <li>Estructura el document de manera organitzada, dividint-lo en seccions i subseccions.</li> <li>Inclou exemples i captures de pantalla per il\u00b7lustrar el teu treball.</li> <li>Revisa i edita acuradament per assegurar la coher\u00e8ncia i la correcci\u00f3 gramatical.</li> <li>Tota aquella informaci\u00f3 excessivament t\u00e8cnica o detallada, simplement refer\u00e9nciala en la mem\u00f2ria i l'aportes de forma \u00edntegra com un annex.</li> <li>Utilitza el m\u00e0xim de recursos que has vist durant el cicle formatiu. </li> </ul> Recomanaci\u00f3 per gestionar la teva bibliografia: Zotero <p>Zotero \u00e9s una eina gratu\u00efta i f\u00e0cil d'utilitzar per a la gesti\u00f3 de refer\u00e8ncies bibliogr\u00e0fiques. Permet als usuaris recopilar, organitzar, citar i compartir fonts de recerca. Amb Zotero, pots:</p> <ul> <li>Recopilar refer\u00e8ncies autom\u00e0ticament mentre navegues per la web.</li> <li>Organitzar les teves fonts en col\u00b7leccions i etiquetar-les amb paraules clau.</li> <li>Citar en diversos estils directament en editors de text com Word, LibreOffice i Google Docs.</li> <li>Sincronitzar les dades entre dispositius per mantenir la informaci\u00f3 actualitzada.</li> <li>Col\u00b7laborar amb altres persones en projectes de recerca123.</li> <li>\u00c9s una eina molt \u00fatil per a investigadors i estudiants que necessiten gestionar grans quantitats d'informaci\u00f3 bibliogr\u00e0fica.</li> </ul>"},{"location":"Moduls/ARXIU/2425/PFC/indexPFC.html","title":"Projecte de desenvolupament de DAM/DAW (PFC)","text":"<ul> <li> <p> PFC Projecte Final Cicle</p> <p> Com fer el PFC (Guia pr\u00e0ctica)</p> <p> Ordres que regulen el PFC</p> <p> Exemple mem\u00f2ria del PFC</p> <p> Planificaci\u00f3 de les tasques del PFC</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/PFC/indexPFC.html#exemple-memoria-de-pfc","title":"Exemple Mem\u00f2ria de PFC","text":"<p>Enlla\u00e7 al document</p>"},{"location":"Moduls/ARXIU/2425/PFC/indexPFC.html#planificacio-del-pfc","title":"Planificaci\u00f3 del PFC","text":"--- config:   theme: forest --- gantt     title Planificaci\u00f3 del PFC     dateFormat  YYYY-MM-DD     section Introducci\u00f3         Introducci\u00f3 al PFC  : 2025-03-14, 1d     section Tutories         1a Tutoria          :done, t1, 2025-03-14, 1d         2a Tutoria          :done, t2, 2025-03-24, 1d         3a Tutoria          :done, t3, 2025-04-14, 1d         4a Tutoria          :done, t4, 2025-04-28, 1d         5a Tutoria          :t5, 2025-05-12, 1d         6a Tutoria          :t6, 2025-05-26, 1d         7a Tutoria          :t7, 2025-06-09, 1d     section Desenv. PFC         Presentaci\u00f3 idea i tema del PFC :done, d1, 2025-03-17, 1d         Recopilaci\u00f3 material i redacci\u00f3 esborranys dels apartats :active d2, after d1, 2025-05-25         Creaci\u00f3 esquelet mem\u00f2ria    :done, d3, 2025-03-24, 2025-04-14         Redacci\u00f3 esborrany mem\u00f2ria :active, d4, 2025-03-28,2025-05-12         Entrega esborrany   :milestone, m3, 2025-05-12,1d         Redacci\u00f3 mem\u00f2ria definitiva:    : d5, 2025-05-07, 2025-06-09     section Tasques finals         Entrega document: milestone, m1, 2025-06-10,1d         Preparaci\u00f3 presentaci\u00f3 defensa  :tf1, 2025-06-03,2025-06-13     DEFENSA PFC :milestone, m2, 2025-06-16, 1d"},{"location":"Moduls/ARXIU/2425/PFC/marclegalPFC.html","title":"Marc legal - M\u00f2dul projecte de desenvolupament d'aplicacions web / multiplataforma","text":"<p>Orden EDU/2887/2010 (DAW) Orden EDU/2000/2010 (DAM)</p> <p>Article 5. M\u00f2dul professional de projecte.</p> <ol> <li> <p>El m\u00f2dul professional de projecte t\u00e9 un car\u00e0cter interdisciplinari i incorpora les variables tecnol\u00f2giques i organitzatives relacionades amb els aspectes essencials de la compet\u00e8ncia professional del t\u00edtol de T\u00e8cnic Superior en Desenvolupament d'Aplicacions Multiplataforma.</p> </li> <li> <p>Amb car\u00e0cter general aquest m\u00f2dul ser\u00e0 impartit pel professorat que exerceix la tutoria de formaci\u00f3 en centres de treball.</p> </li> <li> <p>El m\u00f2dul professional de projecte es desenvolupar\u00e0 durant el mateix per\u00edode que el m\u00f2dul professional de formaci\u00f3 en centres de treball. El professorat responsable del seu desenvolupament haur\u00e0 d'anticipar les activitats d'ensenyament i aprenentatge que facilitin el desenvolupament posterior del m\u00f2dul.</p> </li> <li> <p>El desenvolupament i seguiment del m\u00f2dul professional de projecte haur\u00e0 de compaginar la tutoria individual i col\u00b7lectiva. En qualsevol cas, almenys el 50 % de la durada total es dur\u00e0 a terme de forma presencial, completant-se amb la tutoria a dist\u00e0ncia emprant les tecnologies de la informaci\u00f3 i la comunicaci\u00f3.</p> </li> <li> <p>L'avaluaci\u00f3 d'aquest m\u00f2dul professional quedar\u00e0 condicionada a l'avaluaci\u00f3 positiva de la resta dels m\u00f2duls professionals del cicle formatiu, incl\u00f2s el de formaci\u00f3 en centres de treball.</p> </li> </ol> <p>Codis del m\u00f2dul:  0616 (DAW) / 0491 (DAM)</p>"},{"location":"Moduls/ARXIU/2425/PFC/marclegalPFC.html#resultats-daprenentatge","title":"Resultats d'aprenentatge","text":"RA1RA2RA3RA4"},{"location":"Moduls/ARXIU/2425/PFC/marclegalPFC.html#1-identifica-necessitats-del-sector-productiu-i-de-lorganitzacio-de-lempresa","title":"1. Identifica necessitats del sector productiu i de l'organitzaci\u00f3 de l'empresa.","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>1.1 Identificaci\u00f3 de les funcions dels llocs de treball.</p> <p>1.2 Estructura i organitzaci\u00f3 empresarial del sector.</p> <p>1.3 Activitat de l' empresa i la seva ubicaci\u00f3 en el sector.</p> <p>1.4 Organigrama de la empresa. Relaci\u00f3 funcional entre departaments.</p> <p>1.5 Tend\u00e8ncies del sector: productives, econ\u00f2miques, organitzatives, d' ocupaci\u00f3 i altres.</p> <p>1.6 Procediments de treball en l' \u00e0mbit de l' empresa. Sistemes i m\u00e8todes de treball.</p> <p>1.7 Determinaci\u00f3 de les relacions laborals excloses i relacions laborals especials.</p> <p>1.8 Conveni col.lectiu aplicable a l' \u00e0mbit professional.</p> <p>1.9 La cultura de l' empresa: imatge corporativa.</p> <p>1.10 Sistemes de qualitat i seguretat aplicables en el sector.</p>"},{"location":"Moduls/ARXIU/2425/PFC/marclegalPFC.html#2-disseny-de-projectes-relacionats-amb-el-sector","title":"2. Disseny de projectes relacionats amb el sector.","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>2.1 An\u00e0lisi de la realitat local, de l' oferta empresarial del sector a la zona i del context en el qual es desenvolupar\u00e0 el m\u00f2dul professional de formaci\u00f3 en centres de treball.</p> <p>2.2 Recopilaci\u00f3 d' informaci\u00f3.</p> <p>2.3 Estructura general d' un projecte.</p> <p>2.4 Elaboraci\u00f3 d' un gui\u00f3 de treball.</p> <p>2.5 Planificaci\u00f3 de l' execuci\u00f3 del projecte: objectius, continguts, recursos, metodologia, activitats, temporalitzaci\u00f3 i avaluaci\u00f3.</p> <p>2.6 Viabilitat i oportunitat del projecte.</p> <p>2.7 Revisi\u00f3 de la normativa aplicable.</p>"},{"location":"Moduls/ARXIU/2425/PFC/marclegalPFC.html#3-planificacio-de-lexecucio-del-projecte","title":"3. Planificaci\u00f3 de l'execuci\u00f3 del projecte","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>3.1 Seq\u00fcenciaci\u00f3 d'activitats.</p> <p>3.2 Elaboraci\u00f3 d' instruccions de treball.</p> <p>Elaboraci\u00f3 d' un pla de prevenci\u00f3 de riscos.</p> <p>Documentaci\u00f3 necess\u00e0ria per a la planificaci\u00f3 de l' execuci\u00f3 del projecte.</p> <p>Compliment de normes de seguretat i ambientals.</p> <p>Indicadors de garantia de la qualitat de projectes.</p>"},{"location":"Moduls/ARXIU/2425/PFC/marclegalPFC.html#4-definicio-de-procediments-de-control-i-avaluacio-de-l-execucio-del-projecte","title":"4. Definici\u00f3 de procediments de control i avaluaci\u00f3 de l' execuci\u00f3 del projecte","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>4.1 Propuesta de soluciones a los objetivos planteados en el proyecto y justificaci\u00f3n de las seleccionadas.</p> <p>4.2 Definici\u00f3 del procediment d' avaluaci\u00f3 del projecte.</p> <p>4.3 Determinaci\u00f3 de les variables susceptibles d' avaluaci\u00f3.</p> <p>4.4 Documentaci\u00f3 necess\u00e0ria per a l' avaluaci\u00f3 del projecte.</p> <p>4.5 Control de qualitat de proc\u00e9s i producte final.</p> <p>4.6 Registre de resultats.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02Continguts.html","title":"Presentaci\u00f3 diapositives UT02","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT02Continguts.html#programacio-multifil","title":"Programaci\u00f3 multifil","text":"<p>Taula de contingut</p> <p>1. Presentaci\u00f3 diapositives</p> <p>2. Exemple us sem\u00e0fors</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02Continguts.html#presentacio","title":"Presentaci\u00f3","text":"Aquest \u00e9s un presentaci\u00f3 de Microsoft Office incrustat, amb tecnologia de Office."},{"location":"Moduls/ARXIU/2425/PSP/UT02Continguts.html#exemple-us-semafors","title":"Exemple us sem\u00e0fors","text":"<p>Aqu\u00ed teniu un exemple de com utilitzar sem\u00e0fors. Tamb\u00e9 el teniu al github.</p> <pre><code>package docencia.xaviersastre.dam.psp.ut02;\n\nimport java.util.concurrent.Semaphore;\nimport java.util.concurrent.ThreadLocalRandom;\n\nclass RecursCompartit {\n    private Semaphore semafor = new Semaphore(1);\n\n    public void accessResource(String threadName) {\n        try {\n            // Adquireix el sem\u00e0for\n            semafor.acquire();\n            System.out.println(threadName + \" est\u00e0 accedint al recurs.\");\n            // Simula  treball amb el recurs\n            Thread.sleep(1000);\n            System.out.println(threadName + \" es fa amb el recurs.\");\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } finally {\n            // Allibera el sem\u00e0for\n            semafor.release();\n        }\n    }\n}\n\nclass Fil extends Thread {\n    private RecursCompartit recurs;\n    private String nomFil;\n\n    public Fil(RecursCompartit recurs, String nomFil) {\n        this.recurs = recurs;\n        this.nomFil = nomFil;\n    }\n\n    @Override\n    public void run() {\n        try {\n            sleep(ThreadLocalRandom.current().nextInt(0, 2000)); // esperam un temps aleatori per evitar que sempre acabi el primer fil en primer lloc.\n        } catch (InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n        recurs.accessResource(nomFil);\n    }\n}\n\npublic class UT2Exemple19Exemple_Semafor {\n    public static void main(String[] args) {\n        RecursCompartit resource = new RecursCompartit();\n\n        // Create multiple threads\n        Thread t1 = new Fil(resource, \"Thread 1\");\n        Thread t2 = new Fil(resource, \"Thread 2\");\n        Thread t3 = new Fil(resource, \"Thread 3\");\n\n        // Start the threads\n        t1.start();\n        t2.start();\n        t3.start();\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/Problemadeljardi.html","title":"Problema del jard\u00ed","text":"<p>Condicions de carrera</p> <p>Si mirau la presentaci\u00f3 veureu com es planteja el codi i podreu entendre la condici\u00f3 de carrera que es produeix.</p> <p>Codi del problema del jard\u00ed</p> <p>Fes click a l'enlla\u00e7 </p> Aquest \u00e9s un presentaci\u00f3 de Microsoft Office incrustat, amb tecnologia de Office."},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html","title":"UT02ProgramacioMultifil","text":"<p>Fundamentos de la programaci\u00f3n multihilo</p> <p>Programaci\u00f3n secuencial o de \u00fanico hilo</p> <p>Programaci\u00f3n concurrente o multihilo</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#fundamentos-de-la-programacion-multihilo","title":"Fundamentos de la programaci\u00f3n multihilo","text":"<p>En muchas ocasiones las sentencias que forman un programa deben ejecutarse de manera secuencial, ya que, entre todas, forman una lista ordenada de pasos a seguir para resolver un problema. Otras veces, dichos pasos no tienen por qu\u00e9 ser secuenciales, pudi\u00e9ndose realizar varios a la vez.</p> <p>Otras veces, disponer de simultaneidad en la ejecuci\u00f3n no es opcional, sino necesario, como ocurre en las aplicaciones web. Si no se atendiesen simult\u00e1neamente las peticiones que recibe un servidor web, cada usuario deber\u00eda esperar hasta que todos los usuarios que llegaron antes que \u00e9l fuesen atendidos para obtener las p\u00e1ginas o recursos solicitados.</p> <p>En ambos casos, la soluci\u00f3n se encuentra en la programaci\u00f3n multihilo, una t\u00e9cnica utilizada para conseguir procesamiento simult\u00e1neo.</p> <p>Aunque plena de posibilidades, esta t\u00e9cnica no est\u00e1 exenta de condiciones y restricciones. En esta unidad se presentan las herramientas de procesamiento multihilo disponibles en el lenguaje Java, junto con los aspectos te\u00f3ricos referentes al an\u00e1lisis de los procesos para determinar si es posible ejecutarlos con m\u00faltiples hilos, as\u00ed como a detectar y prevenir los conflictos que surgen como consecuencia de la programaci\u00f3n concurrente.</p> <p>Desde el punto de vista del sistema operativo, un programa inform\u00e1tico en ejecuci\u00f3n es un proceso que compite con los dem\u00e1s procesos por acceder a los recursos del sistema. Visto desde dentro, un programa es, b\u00e1sicamente, una sucesi\u00f3n de sentencias que se ejecutan una detr\u00e1s de otra.</p> <p>El sistema operativo se encarga de hacer convivir los diferentes procesos y de repartir los recursos entre s\u00ed, por lo que cuando se programa no hay que tener en cuenta aspectos relacionados con c\u00f3mo se van a gestionar los procesos o c\u00f3mo estos van a tener acceso a los recursos. Salvo el optimizar el uso de memoria y conseguir que los algoritmos sean eficientes, los programadores no tienen que preocuparse del resto: el sistema operativo se encarga de la concurrencia a nivel de proceso.</p> <p>Es dentro del interior de los procesos donde la programaci\u00f3n tiene algo que decir con respecto a la concurrencia, mediante la programaci\u00f3n multihilo.</p> <p>Un hilo, tambi\u00e9n conocido como thread, es una peque\u00f1a unidad de computaci\u00f3n que se ejecuta dentro del contexto de un proceso. Todos los programas utilizan hilos.</p> <p>En el caso de un programa absolutamente secuencial, el hilo de ejecuci\u00f3n es \u00fanico, lo que provoca que cada sentencia tenga que esperar que la sentencia inmediatamente anterior se ejecute completamente antes de comenzar su ejecuci\u00f3n. Esto no quiere decir en ning\u00fan caso que no existan estructuras de control, como <code>if</code> o <code>while</code>, sino que las sentencias se van ejecutando una detr\u00e1s de otra y no de manera simult\u00e1nea.</p> <p>En cambio, en un programa multihilo, algunas de las sentencias se ejecutan simult\u00e1neamente, ya que los hilos creados y activos en un momento dado acceden a los recursos de procesamiento sin necesitar esperar a que otras partes del programa terminen.</p> <p>A continuaci\u00f3n, se citan algunas de las caracter\u00edsticas que tienen los hilos:</p> <ul> <li>Dependencia del proceso. No se pueden ejecutar independientemente. Siempre se tienen que ejecutar dentro del contexto de un proceso.</li> <li>Ligereza. Al ejecutarse dentro del contexto de un proceso, no requiere generar procesos nuevos, por lo que son \u00f3ptimos desde el punto de vista del uso de recursos. Se pueden generar gran cantidad de hilos sin que provoquen p\u00e9rdidas de memoria.</li> <li>Compartici\u00f3n de recursos. Dentro del mismo proceso, los hilos comparten espacio de memoria. Esto implica que pueden sufrir colisiones en los accesos a las variables provocando errores de concurrencia.</li> <li>Paralelismo. Aprovechan los n\u00facleos del procesador generando un paralelismo real, siempre dentro de las capacidades del procesador.</li> <li>Concurrencia. Permiten atender de manera concurrente m\u00faltiples peticiones. Esto es especialmente importante en servidores web y de bases de datos, por ejemplo.</li> </ul> <p>Para ilustrar de manera m\u00e1s precisa c\u00f3mo se comporta un programa de un \u00fanico hilo frente a los programas de m\u00faltiples hilos se puede establecer la siguiente analog\u00eda.</p> <p>El camarero de una cafeter\u00eda recibe a un cliente que le pide un caf\u00e9, una tostada y una tortilla francesa. Si el camarero trabaja como un proceso de un \u00fanico hilo pondr\u00e1 la cafetera a preparar el caf\u00e9, esperar\u00e1 a que termine para poner el pan a tostar y no pedir\u00e1 la tortilla a la cocina hasta que el pan no est\u00e9 tostado. Probablemente, cuando todo est\u00e9 dispuesto para servir, el caf\u00e9 y la tostada estar\u00e1n fr\u00edos y el cliente aburrido de esperar.</p> <p>Los camareros (la gran mayor\u00eda de ellos) suelen trabajar como procesos multihilo: ponen la cafetera a preparar el caf\u00e9, el pan a tostar y piden a la cocina los platos sin esperar a que cada una de las dem\u00e1s tareas est\u00e9 terminada. Dado que cada una de ellas consume diferentes recursos, no es necesario hacerlo. Transcurrido el tiempo que tarda en estar lista la tarea m\u00e1s lenta, el cliente estar\u00e1 atendido.</p> <p>Siguiendo con la analog\u00eda, al igual que pasa en los ordenadores, los recursos de una cafeter\u00eda son limitados, por lo que hay una restricci\u00f3n f\u00edsica que impide que se hagan m\u00e1s tareas simult\u00e1neamente de las que permiten los recursos. Si solo hay una tostadora con capacidad para dos rebanadas de pan no se podr\u00e1n tostar m\u00e1s de dicho n\u00famero en un mismo instante de tiempo.</p> <p>La programaci\u00f3n que permite realizar este tipo de sistemas se llama multihilo, concurrente o as\u00edncrona.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#programacion-secuencial-o-de-unico-hilo","title":"Programaci\u00f3n secuencial o de \u00fanico hilo","text":"<p>El siguiente ejemplo programado en Java ilustra c\u00f3mo se comporta un programa que se ejecuta en un \u00fanico hilo, as\u00ed como las consecuencias que esto implica. El programa est\u00e1 compuesto por una \u00fanica clase (representa un rat\u00f3n) compuesta por dos atributos: el nombre y el tiempo en segundos que tarda en comer. En el m\u00e9todo main se instancian varios objetos (ratones) y se invoca al m\u00e9todo comer de cada uno de ellos. Este m\u00e9todo muestra un texto por pantalla cuando comienza, realiza una pausa de la duraci\u00f3n en se- gundos (con el m\u00e9todo sleep de la clase Thread) que indica el par\u00e1metro tiempoAlimentacion y, finalmente, muestra otro texto por pantalla cuando finaliza.</p> <p>Consulta el Ejemplo01</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#programacion-concurrente-o-multihilo","title":"Programaci\u00f3n concurrente o multihilo","text":"<p>El ejemplo anterior se puede programar de manera concurrente de forma sencilla, ya que no hay ning\u00fan recurso compartido. Para ello, basta con convertir cada objeto de la clase Raton en un hilo (thread) y programar aquello que se quiere que ocurra concurrentemente dentro del m\u00e9todo run. Una vez creadas las instancias, se invoca al m\u00e9todo start de cada una de ellas, lo que provoca la ejecuci\u00f3n del contenido del m\u00e9todo run en un hilo independiente.</p> <p>Consulta el Ejemplo02</p> <p>En Java existen dos formas para la creaci\u00f3n de hilos:</p> <ul> <li>Implementando la interface <code>java.lang.Runnable</code>.</li> <li>Heredando de la clase <code>java.lang.Thread</code>.</li> </ul> <p>La implementaci\u00f3n de la interface <code>Runnable</code> obliga a programar el m\u00e9todo sin argumentos <code>run</code>.</p> <pre><code>public class ThreadViaInterface implements Runnable {\n    @override\n    public void run() {\n    }\n}\n</code></pre> <p>Heredando de la clase Thread esto no es obligatorio porque dicha clase ya es una implementaci\u00f3n de la interface Runnable.</p> <pre><code>public class ThreadViaInheritance extends Thread {\n}\n</code></pre> <p>No obstante, crear un hilo heredando de <code>Thread</code> \u00abnecesita\u00bb la implementaci\u00f3n del m\u00e9todo sin argumentos <code>run</code>, ya que de lo contrario la clase no tendr\u00e1 un comportamiento multihilo.</p> <p>Consulta el Ejemplo3</p> <p>Es habitual que, en las primeras tomas de contacto con los hilos en Java, los programadores intenten ejecutar el m\u00e9todo <code>run</code> en lugar de ejecutar el m\u00e9todo <code>start</code>. Desde el punto de vista de la compilaci\u00f3n no habr\u00e1 problema: el programa se compilar\u00e1 sin errores.</p> <p>Desde la perspectiva de la programaci\u00f3n concurrente el resultado no ser\u00e1 el adecuado, ya que los hilos se ejecutar\u00e1n uno detr\u00e1s de otro, de manera secuencial, no obteniendo ninguna mejora frente a la programaci\u00f3n secuencial convencional.</p> <p>La creaci\u00f3n de threads mediante la implementaci\u00f3n de la interface <code>Runnable</code> tiene una ventaja clara sobre la herencia de la clase <code>Thread</code>: al ser Java un lenguaje que no admite herencia m\u00faltiple, heredar de dicha clase impide otro tipo de herencias, limitando las posibilidades de dise\u00f1o del software.</p> <p>Por otra parte, a trav\u00e9s de la implementaci\u00f3n mediante la interface <code>Runnable</code> se pueden lanzar muchos hilos de ejecuci\u00f3n sobre un \u00fanico objeto, frente a la herencia de <code>Thread</code> que crear\u00e1 un objeto por cada hilo.</p> <p>En el siguiente ejemplo se implementa un hilo mediante la interface <code>Runnable</code> para crear m\u00faltiples hilos a partir de un \u00fanico objeto. En el hilo, un atributo de instancia llamado <code>alimentoConsumido</code> se incrementa en 1 durante la ejecuci\u00f3n del m\u00e9todo <code>comer</code>, invocado en el m\u00e9todo <code>run</code>. Se puede observar en el m\u00e9todo <code>main</code> c\u00f3mo se crea una \u00fanica instancia de la clase <code>RatonSimple</code> y se crean cuatro hilos que la ejecutan.</p> <p>Consulta el Ejemplo04 y Ejemplo04bis</p> <p>Debido a la naturaleza de la programaci\u00f3n multihilo, las salidas de las ejecuciones de los programas de ejemplo pueden no coincidir con las presentadas en los apuntes. De hecho, en distintas ejecuciones en la misma m\u00e1quina los resultados pueden variar.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#estados-de-los-hilos","title":"Estados de los hilos","text":"<p>Durante el ciclo de vida de los hilos, estos pasan por diversos estados. En Java, est\u00e1n recogidos dentro de la enumeraci\u00f3n <code>State</code> contenida dentro de la clase <code>java.lang.Thread</code>.</p> <p>El estado de un hilo se obtiene mediante el m\u00e9todo <code>getState()</code> de la clase <code>Thread</code>, que devolver\u00e1 algunos de los valores posibles recogidos en la enumeraci\u00f3n indicada anteriormente.</p> <p>Los estados de un thread son los que se muestran en la siguiente tabla:</p> Estado Valor en <code>Thread.State</code> Descripci\u00f3n Nuevo <code>NEW</code> El hilo est\u00e1 creado, pero a\u00fan no se ha arrancado. Ejecutado <code>RUNNABLE</code> El hilo est\u00e1 arrancado y podr\u00eda estar en ejecuci\u00f3n o pendiente de ejecuci\u00f3n. Bloqueado <code>BLOCKED</code> Bloqueado por un monitor. Esperando <code>WAITING</code> El hilo est\u00e1 esperando a que otro hilo realice una acci\u00f3n determinada. Esperando un tiempo <code>TIME_WAITING</code> El hilo est\u00e1 esperando a que otro hilo realice una acci\u00f3n determinada en un per\u00edodo de tiempo concreto. Finalizado <code>TERMINATED</code> El hilo ha terminado su ejecuci\u00f3n. <p>En el siguiente c\u00f3digo de ejemplo, se almacenan en un <code>ArrayList</code> los estados por los que pasa un hilo que contiene en su interior una llamada al m\u00e9todo <code>sleep</code>. Se utiliza la clase <code>RatonSimple</code> que implementa <code>Runnable</code> de los ejemplos anteriores.</p> <p>Consulta el Ejemplo05</p> <p>Todos los hilos pasan por los estados NEW, RUNNABLE y TERMINATED. El resto de los estados est\u00e1n condicionados a circunstancias propias de la ejecuci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#introduccion-a-los-problemas-de-concurrencia","title":"Introducci\u00f3n a los problemas de concurrencia","text":"<p>En programaci\u00f3n concurrente las dificultades aparecen cuando los distintos hilos acceden a un recurso compartido y limitado. Si en el ejemplo de los ratones (el f\u00edsico, no el program\u00e1tico), estos comiesen a trav\u00e9s de un dispositivo al que solo pudiesen acceder de uno en uno, la concurrencia ser\u00eda imposible. En el ejemplo program\u00e1tico el problema es el mismo, pero no existe la restricci\u00f3n f\u00edsica, por lo que nada impide que los hilos accedan al recurso compartido y es en ese momento donde aparecer\u00e1n los problemas.</p> <p>El acceso a los recursos compartidos limitados, por lo tanto, se debe gestionar correctamente. Por suerte, existen t\u00e9cnicas, clases y librer\u00edas que implementan soluciones, por lo que \u00fanicamente hay que conocerlas y saberlas utilizar en el momento adecuado.</p> <p>Un aspecto importante referente a los problemas de concurrencia es que no siempre provocan un error en tiempo de ejecuci\u00f3n. Esto significa que en sucesivas ejecuciones del programa multihilo el error se producir\u00e1 en algunas de ellas y en otras no. Frente al determinismo de los programas secuenciales (los mismos datos de entrada generan siempre las mismas salidas), en el entorno multihilo los factores que determinan las condiciones de ejecuci\u00f3n pueden tener su origen en elementos sobre los que el programador no tiene capacidad de influir, como el sistema operativo.</p> <p>La dificultad, en este tipo de programaci\u00f3n, reside en el hecho de que el programador tiene que saber de forma anticipada que el error se puede producir en una sentencia o bloque de sentencias, por c\u00f3mo esta se ejecuta y qu\u00e9 recursos utiliza. No basta simplemente con realizar pruebas convencionales para determinar que el algoritmo est\u00e1 bien programado. Adem\u00e1s, hay que \u00absaber\u00bb que est\u00e1 bien programado.</p> <p>Como se ha indicado anteriormente existen soluciones para todos los problemas, pero en esta afirmaci\u00f3n hay una verdad a medias. Los problemas de la programaci\u00f3n concurrente se resuelven, en ciertos casos, convirtiendo en secuenciales determinadas partes del c\u00f3digo. Si no se programa correctamente, se corre el riesgo de convertir todo el programa en secuencial lo que evitar\u00eda, efectivamente, los problemas de concurrencia ya que esta habr\u00eda dejado de existir.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#programacion-multihilo-clases-y-librerias","title":"Programaci\u00f3n multihilo: clases y librer\u00edas","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#paquete-javalang","title":"Paquete <code>java.lang</code>","text":"<p>Java dispone de un importante n\u00famero de clases destinadas a la programaci\u00f3n multihilo. Estas clases tienen m\u00faltiples aplicaciones, desde la propia construcci\u00f3n de los hilos hasta dar soporte a estructuras de datos consistentes cuando varios hilos acceden a ellas.</p> <p>Estas clases se encuentran agrupadas en dos paquetes principales: el paquete <code>java.lang</code> y el paquete <code>java.util.concurrent</code>.</p> <p>El paquete <code>java.lang</code> es un paquete importado por defecto en Java (contiene las clases b\u00e1sicas, incluida <code>Object</code> como clase ra\u00edz de la jerarqu\u00eda de clases del lenguaje) por lo que no hay que importar ninguna librer\u00eda para utilizar sus clases.</p> <p>Dentro de este paquete se encuentran la interfaz <code>Runnable</code> y la clase <code>Thread</code>, como elementos fundamentales para la construcci\u00f3n de hilos. Tambi\u00e9n se encuentran las clases <code>Timer</code> y <code>TimerTask</code></p> Nombre Tipo Descripci\u00f3n <code>Runnable</code> Interface Esta interface debe implementarse por aquellas clases que se quieran ejecutar como un <code>thread</code>. Define un m\u00e9todo sin argumentos <code>run</code>. <code>Thread</code> Clase Esta clase implementa la interface <code>Runnable</code>, siendo un hilo en s\u00ed misma. Una clase que hereda de <code>Thread</code> y que sobrescribe el m\u00e9todo <code>run</code> se ejecuta de manera concurrente si se invoca al m\u00e9todo <code>start</code>.Con la clase <code>Thread</code> se puede envolver un objeto que implemente <code>Runnable</code> provocando que se ejecute en un hilo independiente. <code>Timer</code> Clase Permite la programaci\u00f3n de la ejecuci\u00f3n de tareas en diferido y de forma repetitiva mediante el m\u00e9todo <code>schedule</code>. Este m\u00e9todo espera tareas programables, representadas por objetos de la clase <code>TimerTask</code>, as\u00ed como informaci\u00f3n del momento de inicio de la tarea y del tiempo que debe transcurrir entre cada una de las ejecuciones de la misma. <code>TimerTask</code> Clase abstracta Heredando de esta clase y sobrescribiendo el m\u00e9todo <code>run</code> se puede crear una tarea programable con la clase <code>Timer</code>. <p>Consulta el Ejemplo06</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#paquete-javautilconcurrent","title":"Paquete <code>java.util.concurrent</code>","text":"<p>En este paquete se incluyen un interesante conjunto de clases y herramientas relacionadas con la programaci\u00f3n concurrente. A continuaci\u00f3n, se muestran algunos de los elementos m\u00e1s relevantes del mismo.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#executor","title":"Executor","text":"<p>Es una interface para la definici\u00f3n de sistemas multihilo. Permite ejecutar tareas de tipo <code>Runnable</code>. Algunas de sus interfaces derivadas, as\u00ed como clases directamente relaciona das se muestran en la siguiente tabla.</p> Nombre Tipo Descripci\u00f3n <code>ExecutorService</code> Interface Subinterface de Executor, permite gestionar tareas as\u00edncronas <code>SchedulledExecutorService</code> Interface Permite la planificaci\u00f3n de la ejecuci\u00f3n de tareas as\u00edncronas. <code>Executors</code> Clase F\u00e1brica de objetos <code>Executor</code>, <code>ExecutorServices</code>, <code>ThreadFactory</code> y <code>Callable</code>. <code>TimeUnit</code> Enumeraci\u00f3n Proporciona representaciones de unidades de tiempo con distinta granularidad, desde d\u00edas hasta nanosegundos. <p>Consulta el Ejemplo07</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#queues","title":"Queues","text":"<p>Java proporciona componentes que resuelven todo el espectro de necesidades relacionado con las colas para crear entornos seguros de ejecuci\u00f3n de soluciones de mensajer\u00eda, gesti\u00f3n de colas de trabajo y sistemas basados en esquemas productor-consumidor en entornos concurrentes.</p> <p>Las clases m\u00e1s relevantes de este grupo se recogen en la siguiente tabla.</p> Nombre Tipo Descripci\u00f3n <code>ConcurrentLinkedQueue</code> Clase Una cola enlazada resistente a hilos. <code>ConcurrentLinkedDeque</code> Clase Una cola doblemente enlazada resistente a hilos. <code>BlockingQueue</code> Interface Una cola que incluye bloqueos de espera para la gesti\u00f3n del espacio. Algunas de sus implementaciones son <code>LinkedBlockingQueue</code>, <code>ArrayBlockingQueue</code>, <code>SynchronousQueue</code>, <code>PriorityBlockingQueue</code> y <code>DelayQueue</code>. <code>TransferQueue</code> Interface Un tipo de <code>BlockingQueue</code> especialmente dise\u00f1ado para mensajer\u00eda. <code>BlockingDeque</code> Interface Una cola doblemente enlazada que incluye bloqueos de espera para la gesti\u00f3n del espacio. Dispone de una implementaci\u00f3n en la clase <code>LinkedBlockingDeque</code>. <p>Consulta el Ejemplo08 y Ejemplo08bis</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#sincronizadores","title":"Sincronizadores","text":"<p>El paquete <code>java.util.concurrent</code> proporciona cinco clases espec\u00edficas para conseguir que la concurrencia entre hilos se desarrolle de manera correcta. Estas clases son las que se recogen en la siguiente tabla.</p> Nombre Tipo Descripci\u00f3n <code>Semaphore</code> Clase Proporciona el mecanismo cl\u00e1sico para regular el acceso de los a recursos de uso limitado. <code>CountDownLatch</code> Clase Proporciona una ayuda para la sincronizaci\u00f3n cuando los hilos deben esperar hasta que se realicen un conjunto de operaciones. <code>CyclingBarrier</code> Clase Proporciona una ayuda para la sincronizaci\u00f3n cuando unos hilos deben esperar hasta que otros hilos alcancen un punto de ejecuci\u00f3n determinado. <code>Phaser</code> Clase Proporcionauna funcionalidad similar a <code>CountDownLatch</code> y a <code>CyclingBarrier</code> a trav\u00e9s de un uso m\u00e1s flexible. <code>Exchanger</code> Clase Permite intercambiar elementos entre dos hilos. <p>Consulta el Ejemplo09</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#estructuras-de-datos-concurrentes","title":"Estructuras de datos concurrentes","text":"<p>Java dispone de interfaces y clases para almacenar informaci\u00f3n con pr\u00e1cticamente cualquier tipo de estructura de datos. Interfaces heredadas de la interface <code>Collection</code>, como <code>List</code>, <code>Map</code>, <code>Set</code>, <code>Qeue</code> o <code>Deque</code>, son la base de una serie de clases que, implementando dichas interfaces, proporcionan el soporte necesario para todo tipo de estructuras de datos.</p> <p>Desde el punto de vista de la concurrencia, estas implementaciones no est\u00e1n dise\u00f1adas para soportar que m\u00faltiples hilos lean y escriban simult\u00e1neamente en ellas, pudiendo provocar errores.</p> <p>En el Ejemplo10, varios hilos leen y escriben en un objeto <code>ArrayList</code> compartido.</p> <p>La ejecuci\u00f3n de este c\u00f3digo provoca m\u00faltiples errores de concurrencia.</p> <p>La clase <code>Collections</code> de Java proporciona m\u00e9todos est\u00e1ticos para convertir estructuras de datos en seguras respecto a hilos (thread-safe), como <code>synchronizedList</code>, <code>synchronizedMap</code> o <code>synchronizedSet</code> entre otros, pero no son las alternativas m\u00e1s eficientes en todos los casos.</p> <p>Como alternativa m\u00e1s eficiente si la mayor parte de las operaciones son de lectura, el paquete <code>java.util.concurrent</code> proporciona implementaciones espec\u00edficamente dise\u00f1adas para entornos de ejecuci\u00f3n multihilo. Algunas de esas clases se muestran en la siguiente tabla.</p> Nombre Tipo Descripci\u00f3n <code>ConcurrentHashMap</code> Clase Equivalente a un <code>HashMap</code> sincronizado. <code>ConcurrentSkipListMap</code> Clase Equivalente a un <code>TreeMap</code> sincronizado. <code>CopyOnWriteArrayList</code> Clase Equivalente a un <code>ArrayList</code> sincronizado. <code>CopyOnWriteArraySet</code> Clase Equivalente a un <code>Set</code> sincronizado. <p>El ejemplo anterior, referente a los lectores y escritores trabajando conjuntamente sobre un <code>ArrayList</code>, se convierte en thead-safe utilizando la clase <code>CopyOnWriteArraySet</code> en lugar de <code>ArrayList</code>, tal y como se puede observar en el Ejemplo11.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#las-interfaces-executorservice-callable-y-future","title":"Las interfaces <code>ExecutorService</code>, <code>Callable</code> y <code>Future</code>","text":"<p>Usadas de manera conjunta, estas tres interfaces proporcionan mecanismos para ejecutar el c\u00f3digo de manera as\u00edncrona.</p> <p><code>ExecutorService</code> proporciona el marco de ejecuci\u00f3n de c\u00f3digo as\u00edncrono contenido en objetos de las interfaces <code>Callable</code> y <code>Runnable</code>. Sus principales m\u00e9todos se muestran en la siguiente tabla.</p> M\u00e9todo Descripci\u00f3n <code>awaitTermination</code> Bloquea el servicio cuando se recibe una petici\u00f3n de apagado hasta que todas las tareas que ten\u00eda asignadas han terminado o se ha alcanzado el tiempo l\u00edmite E de espera (timeout) o ha habido una interrupci\u00f3n. <code>invokeAll</code> Permite lanzar una colecci\u00f3n de tareas y recoger una lista de objetos <code>Future</code>. <code>invokeAny</code> Permite lanzar una colecci\u00f3n de tareas y recoger el resultado de la que termine satisfactoriamente (si alguna lo hace). <code>shutdown()</code> Hace que que est\u00e1n el servicio en ejecuci\u00f3n deje de y finaliza. aceptar nuevas tareas, espera a que terminen <code>shutdownNow()</code> Finaliza el servicio sin esperar a que las tareas que tiene en ejecuci\u00f3n lo hagan. <code>submit()</code> Env\u00eda a ejecuci\u00f3n una tarea <code>Runnable</code> o <code>Callable</code>. <p>La construcci\u00f3n de instancias de <code>ExecutorService</code> se realiza a trav\u00e9s de una serie de m\u00e9todos est\u00e1ticos de la clase Executors. Estos m\u00e9todos permiten indicar la estrategia de hilos que desea que siga el ExecutorService. Algunos de los m\u00e9todos est\u00e1ticos de Executors para crear objetos de la interfaz ExecutorService son:</p> <ul> <li><code>Executors.newCachedThreadPool()</code>: Crea un <code>ExecutorService</code> con un pool de hilos con todos los que sean necesarios, reutilizando aquellos que est\u00e1n libres.</li> <li><code>Executors.newFixedThreadPool(int nThreads)</code>: Crea un <code>ExecutorService</code> con un pool con un n\u00famero determinado de hilos.</li> <li><code>Executors.newSingleThreadExecutor()</code>: Crea un <code>ExecutorService</code> con un \u00fanico hilo.</li> </ul> <p>Por su parte, la interfaz <code>Callable</code> es una interfaz que funciona similar a <code>Runnable</code>, pero con la diferencia de que puede devolver un retorno y lanzar una excepci\u00f3n. Es una interfaz funcional, ya que solo tiene el m\u00e9todo call, por lo que se puede utilizar en expresiones lambda. El c\u00f3digo as\u00edncrono de un objeto <code>Callable</code> se ejecuta a trav\u00e9s del m\u00e9todo submit de <code>ExecutorService</code>.</p> <p>La interfaz <code>Future</code> representa un resultado futuro generado por un proceso as\u00edncrono. De alguna manera, es un sistema que permite dejar en suspenso la obtenci\u00f3n de un resultado hasta que este est\u00e1 disponible. El resultado de invocar al m\u00e9todo <code>submit</code> de un <code>ExecutorService</code> es un objeto <code>Future</code>.</p> <p>Los m\u00e9todos de la interfaz <code>Future</code> se recogen en la siguiente tabla.</p> M\u00e9todo Descripci\u00f3n <code>cancel</code> Intenta cancelar la ejecuci\u00f3n de la tarea. <code>get</code> Espera a que para termine la tarea y obtiene el resultado. En una de sus formas admite un timeout para limitar el tiempo de espera. <code>isCancelled()</code> Indica si la tarea se ha cancelado antes de terminar. <code>isDone()</code> Indica si la tarea ha terminado. <p>En resumen, la relaci\u00f3n entre estas tres interfaces es la siguiente: <code>ExecutorService</code> ejecuta un objeto <code>Callable</code> (o <code>Runnable</code>) con una estrategia multihilo determinada y deposita en un objeto <code>Future</code> el retorno futuro de la tarea.</p> <p>Consulta el Ejemplo12</p> <p>En programaci\u00f3n, casi nunca una alternativa es siempre mejor que otra. Las interfaces <code>Runnable</code> y <code>Callable</code> son absolutamente v\u00e1lidas y, dependiendo de la situaci\u00f3n, una u otra ser\u00e1n la mejor alternativa.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#programacion-asincrona","title":"Programaci\u00f3n as\u00edncrona","text":"<p>Conceptualmente, la programaci\u00f3n as\u00edncrona es independiente del lenguaje de programaci\u00f3n en el que se realice, siempre y cuando este la admita. En cambio, a nivel pr\u00e1ctico, cada lenguaje de programaci\u00f3n proporciona distintas herramientas para permitir la creaci\u00f3n y gesti\u00f3n de hilos.</p> <p>Java es un lenguaje con una extensa biblioteca de clases orientadas a la programaci\u00f3n as\u00edncrona o multihilo. Gracias a muchas de estas clases se pueden resolver problemas extremadamente complejos sin excesiva dificultad, ya que implementan soluciones que, de no existir, habr\u00eda que desarrollar.</p> <p>En este apartado se muestran los mecanismos b\u00e1sicos de creaci\u00f3n, ejecuci\u00f3n y sincronizaci\u00f3n de hilos. Aunque algunos de estos mecanismos ya han sido previamente presentados en esta unidad, se vuelven a presentar de manera resumida con el fin de ofrecer una visi\u00f3n panor\u00e1mica de los elementos b\u00e1sicos de la programaci\u00f3n as\u00edncrona en Java.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#la-interfaz-runnable","title":"La interfaz <code>Runnable</code>","text":"<p>Una clase que implementa la interfaz <code>Runnable</code> est\u00e1 concebida para ejecutarse dentro de un thread. El m\u00e9todo <code>run</code> es su \u00fanico m\u00e9todo y este no tiene argumentos ni retorno. El contenido del m\u00e9todo <code>run</code> se ejecuta de manera as\u00edncrona, por lo que el hilo principal de la aplicaci\u00f3n no se detiene, aunque el bloque de c\u00f3digo contenido en dicho m\u00e9todo lo haga.</p> <p>Cuando se instancia un objeto de una clase que implementa <code>Runnable</code>, esta se tiene que ejecutar a partir del m\u00e9todo <code>start</code> de la instancia de <code>Thread</code> construida a partir del objeto <code>Runnable</code>.</p> <p>En el Ejemplo13 se muestra la creaci\u00f3n y ejecuci\u00f3n de 10 threads utilizando objetos de la interfaz <code>Runnable</code>.</p> <p>Al tratarse de una interfaz funcional, <code>Runnable</code> se puede utilizar en una expresi\u00f3n lambda, disponible en Java desde la versi\u00f3n 8.</p> <p>Consulta el Ejemplo14 donde se muestra una versi\u00f3n modificada del Ejemplo13 usando la expresi\u00f3n lambda.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#la-clase-thread","title":"La clase <code>Thread</code>","text":"<p>La clase <code>Thread</code> representa un hilo de ejecuci\u00f3n. Cuando una clase hereda de <code>Thread</code> puede implementar el m\u00e9todo <code>run</code> y ejecutarse de forma as\u00edncrona.</p> <p>Para lanzar un objeto <code>Thread</code> de manera as\u00edncrona, basta ejecutar su m\u00e9todo <code>start</code>. El Ejemplo15 muestra la creaci\u00f3n y ejecuci\u00f3n de un hilo b\u00e1sico utilizando la clase <code>Thread</code>.</p> <p>En Java, los hilos normales se denominan hilos de usuario, existiendo otro tipo conocido como hilos demonios. Estos hilos se crean a partir de un hilo convencional mediante el m\u00e9todo <code>setDaemon</code>. Un hilo demonio constituye un subproceso con una prioridad inferior a la de un hilo de usuario, ejecut\u00e1ndose despu\u00e9s. La otra diferencia es que este tipo de hilos tienen utilidad cuando existen hilos de usuario, por lo que cuando estos \u00faltimos terminan, finalizan los hilos daemon.</p> <p>Los m\u00e9todos principales de la clase <code>Thread</code> se muestran en la siguiente tabla.</p> M\u00e9todo Descripci\u00f3n <code>start</code> M\u00e9todo de inicio del bloque as\u00edncrono de la clase. <code>run</code> M\u00e9todo en el que se programa el bloque as\u00edncrono. Se ejecuta cuando se invoca el m\u00e9todo start. <code>join</code> Bloquea el hilo hasta que termina el hilo referenciado. <code>sleep</code> M\u00e9todo est\u00e1tico que detiene temporalmente la ejecuci\u00f3n del hilo. <code>getld</code> Devuelve el identificador del hilo. Es un long positivo generado cuando se crea el hilo. <code>getName</code> Devuelve el nombre del hilo, asignado en algunas de las formas del constructor. <code>getState</code> Devuelve el estado del hilo como un valor de la enumeraci\u00f3n <code>Thread.State</code>. <code>interrupt</code> Interrumpe la ejecuci\u00f3n del hilo. <code>interrupted</code> M\u00e9todo est\u00e1tico que comprueba si el hilo actual ha sido interrumpido. <code>isInterrupted</code> Comprueba si el hilo en el que se encuentra ha sido interrumpido. <code>isAlive</code> Comprueba si el hilo est\u00e1 vivo. <code>setPriority</code> Cambia la prioridad del hilo. El valor debe estar entre las constantes <code>MIN_PRIORITY</code> y <code>MAX_PRIORITY</code> de la propia clase <code>Thread</code>. El uso que se haga de las prioridades establecidas viene determinado por el sistema operativo. <code>setDaemon</code> Permite marcar el hilo como un hilo demonio. <code>isDaemon</code> Determina si un hilo es un hilo demonio. <code>yield</code> M\u00e9todo est\u00e1tico que indica al planificador que est\u00e1 dispuesto a ceder su uso actual de procesador. El planificador decide si atiende o no esta sugerencia."},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#suspension-de-ejecucion-el-metodo-sleep","title":"Suspensi\u00f3n de ejecuci\u00f3n: el m\u00e9todo <code>sleep</code>","text":"<p>El m\u00e9todo est\u00e1tico <code>sleep</code> de la clase <code>Thread</code> permite suspender la ejecuci\u00f3n del hilo desde el que se invoca. Acepta como par\u00e1metro la cantidad de tiempo en milisegundos que se desea realizar esta suspensi\u00f3n, cuya precisi\u00f3n queda sometida a la precisi\u00f3n de los temporizadores del sistema y al planificador.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#interrupciones","title":"Interrupciones","text":"<p>En computaci\u00f3n, una interrupci\u00f3n es una suspensi\u00f3n temporal de la ejecuci\u00f3n de un proceso o de un hilo de ejecuci\u00f3n. Las interrupciones no suelen pertenece a los programas, sino al sistema operativo, viniendo generadas por peticiones realizadas por los dispositivos perif\u00e9ricos.</p> <p>En Java, una interrupci\u00f3n es una indicaci\u00f3n a un hilo de que debe detener su ejecuci\u00f3n para hacer otra cosa. Es responsabilidad del programador decidir qu\u00e9 quiere hacer ante una interrupci\u00f3n, siendo lo m\u00e1s habitual detener la ejecuci\u00f3n del hilo.</p> <p>Las interrupciones se capturan mediante la excepci\u00f3n InterruptedException, provocada por algunas operaciones como la invocaci\u00f3n al m\u00e9todo sleep. En caso de que la excepci\u00f3n no se tenga que controlar, se deber\u00e1 invocar al m\u00e9todo est\u00e1tico interrupted para Paraninto gestionar la interrupci\u00f3n.</p> <p>En el Ejemplo16 se realiza la gesti\u00f3n de una excepci\u00f3n que se lanza de manera forzada ante cierta condici\u00f3n. En la captura de la excepci\u00f3n se invoca a la sentencia <code>return</code> para finalizar la ejecuci\u00f3n del hilo.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#comparticion-de-informacion","title":"Compartici\u00f3n de informaci\u00f3n","text":"<p>Varios hilos pueden crearse como instancias de la clase Thread. Los atributos de dichos hilos, si no son est\u00e1ticos, ser\u00e1n espec\u00edficos de cada uno de ellos, por lo que no se podr\u00e1n utilizar para compartir informaci\u00f3n.</p> <p>Si se desea que varios hilos compartan informaci\u00f3n existen varias alternativas:</p> <ul> <li>Utilizar atributos est\u00e1ticos. Los atributos est\u00e1ticos son comunes a todas las instancias, por los que independientemente de la manera de construir los hilos la informaci\u00f3n es compartida.</li> <li>Utilizando referencias a objetos comunes accesibles desde todos los hilos. En el Ejemplo17 se muestra un ejemplo de uso de una instancia de un objeto com\u00fan a varios hilos que se modifican en cada uno de ellos.</li> <li>Utilizando atributos no est\u00e1ticos de la instancia de una clase que implemente <code>RunnableSharing</code> y construyendo los hilos a partir de dicha instancia. El Ejemplo18 muestra un ejemplo.</li> </ul> <p>Existen otras formas de compartir informaci\u00f3n, ya sea a trav\u00e9s de ficheros, bases de datos o servicios de red o de internet. En todos los casos hay que tener en cuenta que la informaci\u00f3n compartida por varios hilos para lectura y escritura es una potencial fuente de errores de concurrencia.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#problemas-y-soluciones-de-la-programacion-concurrente-sincronizacion","title":"Problemas y soluciones de la programaci\u00f3n concurrente. Sincronizaci\u00f3n","text":"<p>De manera intr\u00ednseca, la programaci\u00f3n concurrente tiene dos caracter\u00edsticas que pueden ser fuentes de errores: los recursos compartidos y el orden de ejecuci\u00f3n.</p> <p>En lo referente a la compartici\u00f3n de recursos la problem\u00e1tica es diversa, ya que puede afectar a c\u00f3mo se modifica el valor de una variable, se accede a los datos de una estructura de datos, se ejecuta un bloque de c\u00f3digo o se accede a un recurso limitado.</p> <p>Para ilustrar este tipo de problemas se puede utilizar el Ejemplo19.</p> <p>Es representativo de la problem\u00e1tica de la programaci\u00f3n concurrente que en una operaci\u00f3n aparentemente tan sencilla puedan surgir errores tan importantes.</p> <p>Los problemas de concurrencia no se producen siempre de la misma manera, ya que la ejecuci\u00f3n no es determinista. El algoritmo que genera un error cuando 1000 hilos incrementan en 1000 unidades una variable compartida puede funcionar correctamente en la mayor\u00eda de los casos con 10 hilos y un incremento de 10 unidades por hilo. No obstante, el riesgo de que un algoritmo pueda fallar, aunque la posibilidad sea baja, normalmente es inaceptable en computaci\u00f3n.</p> <p>El orden de ejecuci\u00f3n, por su parte, tiene que ver con las dependencias que se pueden producir entre los bloques de c\u00f3digo en funci\u00f3n del orden de ejecuci\u00f3n. Si, por ejemplo, un bloque de c\u00f3digo necesita como entrada datos generados como salida por otro bloque, esto provocar\u00e1 una dependencia, dado que en un sistema multihilo no se tiene control sobre el orden de las ejecuciones salvo que se establezcan mecanismos de sincronizaci\u00f3n.</p> <p>En este apartado se exponen los t\u00e9rminos y conceptos m\u00e1s importantes relacionados con los problemas de concurrencia, as\u00ed como dichos problemas y sus posibles soluciones.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#conceptos","title":"Conceptos","text":"<p>Para poder comprender tanto los problemas como las soluciones relacionados con la programaci\u00f3n concurrente es necesario conocer el significado de algunos conceptos. En este apartado se exponen los m\u00e1s importantes.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#recursos-compartidos","title":"Recursos compartidos","text":"<p>Un recurso compartido es, como su propio nombre indica, un elemento del sistema que es utilizado por varios hilos de ejecuci\u00f3n simult\u00e1neamente. Puede ser un atributo est\u00e1tico de una clase o un atributo no est\u00e1tico de un objeto compartido por todos los hilos, un m\u00e9todo est\u00e1tico de una clase o un m\u00e9todo no est\u00e1tico de un objeto compartido por todos los hilos, una conexi\u00f3n a una base de datos, un socket o cualquier elemento con un n\u00famero limitado de instancias.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#dependencias","title":"Dependencias","text":"<p>Como ya se ha comentado anteriormente, no todas las tareas se pueden ejecutar en un entorno multihilo. Para poder hacerlo hay que tener la certeza de que los segmentos de c\u00f3digo que se van a ejecutar en paralelo son independientes y el orden en el que se ejecutan es irrelevante.</p> <p>Una tarea no se podr\u00e1 ejecutar en un entorno multihilo si tiene dependencias. Existen tres tipos de dependencias principales:</p> <ul> <li>Dependencias de datos. Varios segmentos de c\u00f3digo utilizan el mismo dato.</li> <li>Dependencias de flujos. Debido a que el orden de ejecuci\u00f3n del programa no se puede determinar por existir instrucciones de control de flujo existe dependencias potenciales que no se pueden determinar en un an\u00e1lisis est\u00e1tico del c\u00f3digo.</li> <li>Dependencias de recursos. Varios segmentos de c\u00f3digo acceden simult\u00e1neamente    a recursos del procesador.</li> </ul> <p>La existencia de dependencias de cualquier tipo impide la programaci\u00f3n concurrente salvo que se puedan establecer mecanismos de sincronizaci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#condiciones-de-bernstein","title":"Condiciones de Bernstein","text":"<p>De manera formal, el cumplimiento de las condiciones de Bernstein determina si dos segmentos de c\u00f3digo pueden ser ejecutados en paralelo. Dados dos segmentos de c\u00f3digo S<sub>1</sub>, y S<sub>2</sub> se determina que son independientes y pueden ser ejecutados en paralelo si:</p> <ul> <li>Las entradas de S<sub>2</sub> son distintas de las salidas de S<sub>1</sub>. De no ser as\u00ed se produce lo que se conoce como dependencia de flujo.</li> <li>Las entradas de S<sub>1</sub> son distintas de las salidas de S<sub>2</sub>. De no ser as\u00ed se produce lo que se conoce como antidependencia.</li> <li>Las salidas de S<sub>1</sub> son distintas de las salidas de S<sub>2</sub>. De no ser as\u00ed se produce lo que se conoce como dependencia de salida.</li> </ul> <p>Si dos segmentos de c\u00f3digo cumplen con las condiciones de Bernstein su ejecuci\u00f3n se puede paralelizar.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#accion-y-acceso-atomicos","title":"Acci\u00f3n y acceso at\u00f3micos","text":"<p>Una acci\u00f3n at\u00f3mica es aquella que se ejecuta sin interrupciones, de una \u00fanica vez. Cualquier efecto de la acci\u00f3n solo es visible al finalizar la misma.</p> <p>En Java, algunas acciones sencillas son at\u00f3micas:</p> <ul> <li>Leer y escribir variables de los tipos primitivos, excepto los tipos <code>long</code> y <code>double</code>.</li> <li>Leer y escribir todas las variables declaradas <code>volatile</code>, incluidos los tipos <code>long</code> y <code>double</code>.</li> </ul> <p>Acciones muy sencillas, como incrementar en 1 el valor de una variable de tipo <code>int</code> no son at\u00f3micas, por lo que hay que evaluar si es necesario establecer un mecanismo de sincronizaci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#seccion-critica","title":"Secci\u00f3n cr\u00edtica","text":"<p>La secci\u00f3n cr\u00edtica de un programa multihilo es el bloque de c\u00f3digo que accede a recursos compartidos, por lo la que solo debe ser accedido por un \u00fanico hilo de ejecuci\u00f3n. Determinar correctamente la secci\u00f3n cr\u00edtica permite sincronizar correctamente el programa para evitar errores de concurrencia, as\u00ed como hacerlo eficiente para poder aprovechar al Ediciones m\u00e1ximo el paralelismo. El garantizar que a la secci\u00f3n cr\u00edtica solo acceda un hilo de ejecuci\u00f3n es lo que se conoce como exclusi\u00f3n mutua.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#exclusion-mutua","title":"Exclusi\u00f3n mutua","text":"<p>Se denomina as\u00ed a la t\u00e9cnica de programaci\u00f3n consistente en hacer que, en un entorno concurrente, un proceso excluya a todos los dem\u00e1s del uso de un recurso compartido (una secci\u00f3n cr\u00edtica) para garantizar la integridad del sistema.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#seguridad-en-hilos-seguro-frente-a-hilos-o-thread-safety","title":"Seguridad en hilos, seguro frente a hilos o <code>Thread safety</code>","text":"<p>Estos t\u00e9rminos hacen referencia a la propiedad que tiene un elemento de software (una clase o una estructura de datos, por ejemplo) para ser ejecutado en un entorno de m\u00faltiples hilos de forma segura.</p> <p>En Java, la documentaci\u00f3n de las estructuras de datos suele especificar si son <code>Thread safety</code> o en cambio no est\u00e1n sincronizadas (no son seguras frente a hilos). Es conveniente revisar la documentaci\u00f3n de las clases que se utilicen por primera vez en general, prestando especial atenci\u00f3n a las referencias a los threads en entornos multihilo.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#problemas-de-la-programacion-concurrente","title":"Problemas de la programaci\u00f3n concurrente","text":"<p>En esta secci\u00f3n se presentan algunos de los problemas que surgen como consecuencia de la programaci\u00f3n multihilo, as\u00ed como las soluciones que se pueden adoptar, tanto gen\u00e9ricas como espec\u00edficas del lenguaje Java.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#interbloqueo-o-deadlock","title":"Interbloqueo o deadlock","text":"<p>Se produce cuando dos o m\u00e1s hilos est\u00e1n bloqueados entre s\u00ed. Por ejemplo, si el hilo A est\u00e1 esperando a que termine el hilo B para continuar su proceso y este, a su vez, est\u00e1 esperando a que termine el hilo A para continuar su proceso se produce un interbloqueo.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#muerte-por-inanicion","title":"Muerte por inanici\u00f3n","text":"<p>Este problema se produce cuando se establece una pol\u00edtica de prioridades que provoca que algunos hilos nunca tengan acceso a la CPU.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#condiciones-de-carrera","title":"Condiciones de carrera","text":"<p>Se produce cuando dos bloques de c\u00f3digo concurrente tienen dependencias entre los datos entrada y salida y no se ejecutan en el orden correcto (dependencia de flujo o antidependencia).</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#inconsistencia-de-memoria","title":"Inconsistencia de memoria","text":"<p>Ocurre cuando dos o m\u00e1s hilos tienen simult\u00e1neamente valores diferentes para la misma variable.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#condiciones-deslizadas","title":"Condiciones deslizadas","text":"<p>Se produce cuando en un proceso se eval\u00faa una condici\u00f3n para determinar si se tiene que ejecutar una secci\u00f3n de c\u00f3digo y, despu\u00e9s de la evaluaci\u00f3n y antes de la ejecuci\u00f3n, la condici\u00f3n cambia de valor. Se estar\u00eda ejecutando un bloque de c\u00f3digo cuya condici\u00f3n no se est\u00e1 cumpliendo.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#sincronizacion-basica-variables-volatile","title":"Sincronizaci\u00f3n b\u00e1sica: variables <code>volatile</code>","text":"<p>En un entorno de computaci\u00f3n de m\u00faltiples n\u00facleos, los procesadores disponen de t\u00e9cnicas de optimizaci\u00f3n y algunas de ellas se basan en el uso de memoria cach\u00e9. Estas t\u00e9cnicas habitualmente son ventajosas, pero en la programaci\u00f3n concurrente pueden ser una fuente de errores.</p> <p>Cuando varios hilos comparten la misma variable, si esta se almacena en las cach\u00e9s de los n\u00facleos, puede ser que los hilos vean copias distintas de la misma variable, lo que puede provocar inconsistencia de memoria.</p> <p>Para evitar que una variable se almacene en la cach\u00e9 de procesador y que todos los hilos accedan a la misma copia en Java se utiliza la palabra clave volatile. Declarando una variable como volatile solo existir\u00e1 una copia en el procesador.</p> <p>El siguiente c\u00f3digo de ejemplo muestra la declaraci\u00f3n de una variable volatile.</p> <pre><code>private volatile static long contador\n</code></pre> <p>Esta soluci\u00f3n no resuelve por s\u00ed sola todos los problemas de inconsistencia de memoria. Si varios hilos modifican concurrentemente la misma variable, aunque sea declarada volatile, se podr\u00eda seguir produciendo (habr\u00eda que incluir mecanismos de sincronizaci\u00f3n).</p> <p>Las variables <code>volatile</code> ser\u00edan apropiadas para sistemas en los que un \u00fanico hilo modifica el valor de la variable y el resto solamente lo consultan.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#sincronizacion-basica-wait-notify-y-notifyall","title":"Sincronizaci\u00f3n b\u00e1sica: <code>wait</code>, <code>notify</code> y <code>notifyAll</code>","text":"<p>Los m\u00e9todos <code>wait</code>, <code>notity</code> y <code>notifyAll</code> son propios de la clase <code>Object</code>, por lo que todas las clases en Java disponen de ellos.</p> <p>Todos estos m\u00e9todos se tienen que invocar desde segmentos de c\u00f3digo de un hilo que disponga de un monitor, como, por ejemplo, un bloque o un segmento sincronizados, y obliga a capturar una excepci\u00f3n del tipo <code>InterruptedException</code>.</p> <p>El m\u00e9todo <code>wait</code> detiene la ejecuci\u00f3n del hilo y los m\u00e9todos <code>notify</code> y <code>notifiyAll</code> producen la reactivaci\u00f3n de los hilos detenidos. El m\u00e9todo <code>notify</code> hace continuar a un \u00fanico segmento al azar de los que est\u00e1n detenidos con <code>wait</code> mientras que <code>notifyAll</code> hace continuar a todos los segmentos detenidos con <code>wait</code>.</p> <p>En el Ejemplo20 se muestra un ejemplo de uso de estos m\u00e9todos de sincronizaci\u00f3n. En \u00e9l, dos hilos creados a partir del mismo objeto ejecutan dos m\u00e9todos distintos. El primero de los hilos, al realizar la mitad de la tarea entra en espera hasta que el segundo de los hilos finaliza y notifica que debe reanudar la ejecuci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#sincronizacion-basica-el-metodo-join","title":"Sincronizaci\u00f3n b\u00e1sica: el m\u00e9todo <code>join</code>","text":"<p>El m\u00e9todo <code>join</code> permite indicar a un hilo que debe suspender su ejecuci\u00f3n hasta que termina otro hilo de referencia. Este m\u00e9todo debe ejecutarse dentro del bloque as\u00edncrono del c\u00f3digo, ya que lo contrario no tendr\u00e1 ning\u00fan efecto.</p> <p>El Ejemplo21 permite ilustrar el funcionamiento de este m\u00e9todo. En \u00e9l, dos hilos ejecutan un bucle con 3 iteraciones que en ausencia de mecanismos de sincronizaci\u00f3n generar\u00edan una salida similar a esta:</p> <pre><code>Thread 1. Interaction 0\nThread 2. Interaction 0\nThread 1. Interaction 1\nThread 2. Interaction 1\nThread 2. Interaction 2\nThread 1. Interaction 2\n</code></pre> <p>Dado que cada hilo tiene la misma prioridad y el mismo c\u00f3digo, escribir\u00e1n simult\u00e1neamente la salida programada.</p> <p>En cambio, en el Ejemplo22, despu\u00e9s de arrancar los dos hilos, se le indica al hilo <code>hilo2</code> que debe quedar suspendido hasta que termine la ejecuci\u00f3n de <code>hilo1</code>. Para ello es necesario que <code>hilo2</code> tenga una referencia a <code>hilo1</code> (<code>referenceThread</code> en el ejemplo) para invocar al m\u00e9todo <code>join</code>.</p> <p>El resultado obtenido en este caso es el siguiente:</p> <pre><code>Thread 1. Interaction 0\nThread 1. Interaction 1\nThread 1. Interaction 2\nThread 2. Interaction 0\nThread 2. Interaction 1\nThread 2. Interaction 2\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#sincronizacion-basica-estructuras-de-datos-resistentes-a-hilos","title":"Sincronizaci\u00f3n b\u00e1sica: estructuras de datos resistentes a hilos","text":"<p>Las estructuras de datos convencionales proporcionadas por Java satisfacen cualquier necesidad relacionada con el almacenamiento de datos en memoria. Desde el <code>punto de vista de la programaci\u00f3n concurrente hay que tener en cuenta que las clases ArrayList, Vector</code>, <code>HashMap</code> o <code>HashSet</code>, todas ellas del paquete <code>java.util</code> no est\u00e1n sincronizadas, lo que implica que no est\u00e1n programadas para ser consistentes frente al acceso desde m\u00faltiples hilos.</p> <p>Para poder utilizar estas estructuras hay que usar las t\u00e9cnicas de sincronizaci\u00f3n tratadas en esta unidad, convertirlas a estructuras sincronizadas con los m\u00e9todos est\u00e1ticos proporcionados por la clase <code>java.util.Collections</code> (por ejemplo <code>synchronizedList</code> para objetos que implementen la interfaz <code>List</code>) o utilizar las estructuras de datos proporcionadas por el paquete <code>java.util.concurrent</code> y presentadas en un apartado anterior.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#sincronizacion-avanzada-exclusion-mutua-synchronized-y-monitores","title":"Sincronizaci\u00f3n avanzada: exclusi\u00f3n mutua, <code>synchronized</code> y monitores","text":"<p>Uno de los mecanismos proporcionados por Java para sincronizar segmentos de c\u00f3digo consiste en utilizar la palabra clave <code>synchronized</code>. Mediante el uso de synchronized se puede limitar el acceso a un segmento del c\u00f3digo a un \u00fanico hilo concurrentemente, logr\u00e1ndose as\u00ed la exclusi\u00f3n mutua o mutex. Permite sincronizar tanto m\u00e9todos como segmentos de c\u00f3digo (declaraciones sincronizadas), permitiendo esta \u00faltima alternativa delimitar la secci\u00f3n cr\u00edtica con m\u00e1s precisi\u00f3n.</p> <p>A nivel de m\u00e9todo, el uso es tan sencillo como incluir la palabra en la declaraci\u00f3n del m\u00e9todo:</p> <pre><code>public synchronized void calculate ()\n</code></pre> <p>El efecto de esta declaraci\u00f3n es que, para una instancia de objeto, solo un hilo puede estar ejecutando el m\u00e9todo sincronizado en un momento dado.</p> <p>Por su parte, a nivel de segmento de c\u00f3digo, la sincronizaci\u00f3n se efect\u00faa delimitando un bloque de sentencias haciendo una declaraci\u00f3n sincronizada. El siguiente c\u00f3digo muestra una declaraci\u00f3n sincronizada.</p> <pre><code>public void calculate()(\n    //Sentences not synchronized\n    synchronized (objetoBloqueo) {\n        //Block of unsyncrhonized sentences\n    }\n    //Sentences not synchronized\n}\n</code></pre> <p>Este sistema utiliza un concepto conocido como bloqueo intr\u00ednseco, bloqueo de <code>monitor</code> o, simplemente, <code>monitor</code>. El <code>monitor</code> es un elemento asociado a una instancia que hace la funci\u00f3n de candado. Cuando se ejecuta un m\u00e9todo o bloque sincronizado utilizando un determinado <code>monitor</code>, este se bloquea y no puede utilizarse hasta que no queda liberado, impidiendo ejecutar un c\u00f3digo que utilice el mismo bloqueo.</p> <p>Cuando se utilizan m\u00e9todos sincronizados se usa como <code>monitor</code> el objeto en el que est\u00e1n. Esto supone que cuando un m\u00e9todo sincronizado de un objeto se est\u00e1 ejecutando ning\u00fan otro m\u00e9todo sincronizado de ese objeto se puede ejecutar. La exclusi\u00f3n es, por lo tanto, muy gen\u00e9rica y puede que sea poco eficiente en muchos casos.</p> <p>Consulta el Ejemplo23</p> <p>Como se ha indicado anteriormente, el comportamiento de los m\u00e9todos sincronizados del ejemplo se debe a que se ejecutan sobre la misma instancia del objeto que implementa <code>Runnable</code>, por lo que utilizan dicho objeto como monitor provocando el bloqueo.</p> <p>Si en cambio utilizasen objetos distintos, el resultado ser\u00eda el mismo que al no marcar los m\u00e9todos como <code>synchronized</code>, ya que utilizan bloqueos diferentes.</p> <p>Consulta el Ejemplo24</p> <p>Por su parte, la sincronizaci\u00f3n a nivel de segmento necesita tambi\u00e9n un <code>monitor</code>, pero al no depender del objeto en el que se est\u00e1 ejecutando es m\u00e1s flexible. Utilizando bloques sincronizados no es necesario bloquear todos los segmentos de un objeto como ocurre con los m\u00e9todos de objeto, sino que se pueden agrupar en monitores distintos.</p> <p>En el Ejemplo25 se realiza la sincronizaci\u00f3n a nivel de bloque, utilizando dos bloqueos distintos en cada uno de ellos. De tal manera que los m\u00e9todos no son exclusivos entre s\u00ed. La sincronizaci\u00f3n se realiza a nivel de m\u00e9todo (cada uno de los m\u00e9todos solo puede estar siendo ejecutado por un objeto simult\u00e1neamente, pero ambos m\u00e9todos se pueden estar ejecutando por dos objetos distintos).</p> <p>En cambio, si los m\u00e9todos utilizan el mismo objeto como bloqueo, cuando un objeto est\u00e9 ejecutando uno de los m\u00e9todos ning\u00fan objeto puede ejecutar ninguno de los dos m\u00e9todos.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#sincronizacion-avanzada-semaforos","title":"Sincronizaci\u00f3n avanzada: sem\u00e1foros","text":"<p>El uso de la palabra clave <code>synchronized</code> permite establecer secciones cr\u00edticas a las que \u00fanicamente tiene acceso un hilo en un momento determinado, pero existen otros escenarios en los que los recursos limitados permiten el acceso de m\u00e1s de un hilo.</p> <p>Cuando una secci\u00f3n cr\u00edtica permite ser ejecutada por m\u00e1s de un hilo, pero el n\u00famero de estos est\u00e1 limitado se utiliza un elemento de programaci\u00f3n concurrente conocido como sem\u00e1foro e implementado en Java por la clase <code>Semaphore</code>.</p> <p>Los sem\u00e1foros se suelen utilizar cuando un recurso tiene una capacidad limitada y se desea controlar el n\u00famero de consumidores de dicho recurso. Es, por lo tanto, un elemento de sincronizaci\u00f3n.</p> <p>Al construir el sem\u00e1foro se le proporciona a trav\u00e9s del constructor una capacidad que hace referencia al n\u00famero de hilos que puede estar ejecutando concurrentemente.</p> <p>Esta capacidad se convierte en n\u00famero de permisos de acceso que se conceden a los bloques de c\u00f3digo que quieran hacer uso del recurso limitado. Si todos los permisos est\u00e1n concedidos, los hilos quedan en espera a que los propietarios de los permisos los liberen.</p> <p>Los principales m\u00e9todos de la clase sem\u00e1foro son los que se recogen a continuaci\u00f3n en la siguiente tabla.</p> M\u00e9todo Descripci\u00f3n <code>acquire</code> Adquiere uno o m\u00e1s permisos del sem\u00e1foro si hay alguno disponible. En caso contrario el hilo queda a la espera. <code>release</code> Libera uno o m\u00e1s permisos concedidos previamente. <code>tryAcquire</code> Intenta obtener uno o m\u00e1s permisos, pudiendo quedar en espera durante un tiempo limitado. <p>Adem\u00e1s de estos m\u00e9todos la clase <code>Semaphore</code> proporciona m\u00e9todos de gesti\u00f3n y consulta del estado del sem\u00e1foro.</p> <p>En el Ejemplo26 ejemplo, se construye con sem\u00e1foro con capacidad para tres permisos. A su vez, cinco hilos construidos a partir de la misma instancia de <code>Runnable</code> acceden a la secci\u00f3n cr\u00edtica, solicitan el permiso, realizan los pasos de la actividad sincronizada y liberan el bloqueo.</p> <p>No solo se pueden utilizar los sem\u00e1foros cuando los recursos son limitados. En ocasiones es conveniente limitar el n\u00famero de hilos que realizan determinadas tareas para no saturar el sistema o alguno de sus componentes. Por ejemplo, limitar el n\u00famero de hilos que acceden a servicios web o a bases de datos puede ser una estrategia adecuada en muchos casos.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplos","title":"Ejemplos","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo01","title":"Ejemplo01","text":"<p>Ejemplo con un \u00fanico hilo de ejecuci\u00f3n:</p> <pre><code>public class Mouse {\n\n    private String name;\n    private int feedingTime;\n\n    public Mouse(String name, int feedingTime) {\n        super();\n        this.name = name;\n        this.feedingTime = feedingTime;\n    }\n\n    public void eat() {\n        try {\n            System.out.printf(\"The mouse %s has started to feed%n\", name);\n            Thread.sleep(feedingTime * 1000);\n            System.out.printf(\"The mouse %s has stopped to feed%n\", name);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        Mouse fievel = new Mouse(\"Fievel\", 4);\n        Mouse jerry = new Mouse(\"Jerry\", 5);\n        Mouse pinky = new Mouse(\"Pinky\", 3);\n        Mouse mickey = new Mouse(\"Mickey\", 6);\n        fievel.eat();\n        jerry.eat();\n        pinky.eat();\n        mickey.eat();\n    }\n}\n</code></pre> <p>La salida producida por la ejecuci\u00f3n es la siguiente:</p> <pre><code>The mouse Fievel has started to feed\nThe mouse Fievel has stopped to feed\nThe mouse Jerry has started to feed\nThe mouse Jerry has stopped to feed\nThe mouse Pinky has started to feed\nThe mouse Pinky has stopped to feed\nThe mouse Mickey has started to feed\nThe mouse Mickey has stopped to feed\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo02","title":"Ejemplo02","text":"<p>Ejemplo multihilo:</p> <pre><code>public class Mouse extends Thread {\n\n    private String name;\n    private int feedingTime;\n\n    public Mouse(String name, int feedingTime) {\n        super();\n        this.name = name;\n        this.feedingTime = feedingTime;\n    }\n\n    public void eat() {\n        try {\n            System.out.printf(\"The mouse %s has started to feed%n\", name);\n            Thread.sleep(feedingTime * 1000);\n            System.out.printf(\"The mouse %s has stopped to feed%n\", name);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void run() {\n        this.eat();\n    }\n\n    public static void main(String[] args) {\n        Mouse fievel = new Mouse(\"Fievel\", 4);\n        Mouse jerry = new Mouse(\"Jerry\", 5);\n        Mouse pinky = new Mouse(\"Pinky\", 3);\n        Mouse mickey = new Mouse(\"Mickey\", 6);\n        fievel.start();\n        jerry.start();\n        pinky.start();\n        mickey.start();\n    }\n}\n</code></pre> <p>Ejemplo de salida de su ejecuci\u00f3n:</p> <pre><code>The mouse Fievel has started to feed\nThe mouse Jerry has started to feed\nThe mouse Pinky has started to feed\nThe mouse Mickey has started to feed\nThe mouse Pinky has stopped to feed\nThe mouse Fievel has stopped to feed\nThe mouse Jerry has stopped to feed\nThe mouse Mickey has stopped to feed\n</code></pre> <p>Todos los ratones han comenzado a alimentarse de inmediato, sin esperar a que termine ninguno de los dem\u00e1s. El tiempo total del proceso ser\u00e1, aproximadamente, el tiempo del proceso m\u00e1s lento (en este caso, 6 segundos). La reducci\u00f3n del tiempo total de ejecuci\u00f3n es evidente.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo03","title":"Ejemplo03","text":"<p>Retomando el enunciado del ejemplo de los objetos de la clase Raton, la soluci\u00f3n mediante implementaci\u00f3n de la interface Runnable tendr\u00eda el c\u00f3digo que se muestra a continuaci\u00f3n, revisa las partes del c\u00f3digo que se han modificado respecto de la soluci\u00f3n anterior en la que se heredaba de Thread.</p> <pre><code>public class Mouse implements Runnable {\n\n    private String name;\n    private int feedingTime;\n\n    public Mouse(String name, int feedingTime) {\n        super();\n        this.name = name;\n        this.feedingTime = feedingTime;\n    }\n\n    public void eat() {\n        try {\n            System.out.printf(\"The mouse %s has started to feed%n\", name);\n            Thread.sleep(feedingTime * 1000);\n            System.out.printf(\"The mouse %s has stopped to feed%n\", name);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void run() {\n        this.eat();\n    }\n\n    public static void main(String[] args) {\n        Mouse fievel = new Mouse(\"Fievel\", 4);\n        Mouse jerry = new Mouse(\"Jerry\", 5);\n        Mouse pinky = new Mouse(\"Pinky\", 3);\n        Mouse mickey = new Mouse(\"Mickey\", 6);\n        new Thread(fievel).start();\n        new Thread(jerry).start();\n        new Thread(pinky).start();\n        new Thread(mickey).start();\n    }\n}\n</code></pre> <p>El resultado de ejecuci\u00f3n:</p> <pre><code>The mouse Fievel has started to feed\nThe mouse Pinky has started to feed\nThe mouse Jerry has started to feed\nThe mouse Mickey has started to feed\nThe mouse Pinky has stopped to feed\nThe mouse Fievel has stopped to feed\nThe mouse Jerry has stopped to feed\nThe mouse Mickey has stopped to feed\n</code></pre> <p>Se puede observar que el c\u00f3digo es muy similar, salvo en la declaraci\u00f3n de la clase (implementaci\u00f3n de una interface frente a herencia) y en la creaci\u00f3n de los hilos y su arranque: los objetos <code>Runnable</code> deben \u00abenvolverse\u00bb en objetos <code>Thread</code> para poder ser arrancados. Es importante apreciar que en ambos casos la ejecuci\u00f3n se realiza invocando al m\u00e9todo <code>start</code>.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo04","title":"Ejemplo04","text":"<p>Ejemplo multihilo a partir de un \u00fanico.</p> <pre><code>public class SimpleMouse implements Runnable {\n\n    private String name;\n    private int feedingTime;\n    private int consumedFood;\n\n    public SimpleMouse(String name, int feedingTime) {\n        super();\n        this.name = name;\n        this.feedingTime = feedingTime;\n    }\n\n    public void eat() {\n        try {\n            System.out.printf(\"The mouse %s has started to feed%n\", name);\n            Thread.sleep(feedingTime * 1000);\n            consumedFood++;\n            System.out.printf(\"The mouse %s has stopped to feed%n\", name);\n            System.out.printf(\"Consumed food: %d%n\", consumedFood);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void run() {\n        this.eat();\n    }\n\n    public static void main(String[] args) {\n        SimpleMouse fievel = new SimpleMouse(\"Fievel\", 4);\n        new Thread(fievel).start();\n        new Thread(fievel).start();\n        new Thread(fievel).start();\n        new Thread(fievel).start();\n    }\n}\n</code></pre> <p>El resultado de la ejecuci\u00f3n es el siguiente:</p> <pre><code>The mouse Fievel has started to feed\nThe mouse Fievel has started to feed\nThe mouse Fievel has started to feed\nThe mouse Fievel has started to feed\nThe mouse Fievel has stopped to feed\nThe mouse Fievel has stopped to feed\nConsumed food: 3\nThe mouse Fievel has stopped to feed\nConsumed food: 2\nConsumed food: 4\nThe mouse Fievel has stopped to feed\nConsumed food: 4\n</code></pre> <p>Cada hilo ha ejecutado el m\u00e9todo <code>run</code> sobre los datos del mismo objeto. Es decir, se ha ejecutado simult\u00e1neamente cuatro veces un bloque de c\u00f3digo de un \u00fanico objeto, compartiendo sus atributos. De esta forma, en la salida se puede apreciar que el valor del atributo <code>consumedFood</code> se ha incrementado en 1 por cada hilo. Esto se puede observar porque el valor de <code>consumedFood</code> se ha incrementado varias veces durante la ejecuci\u00f3n. El hecho de que algunos valores intermedios no aparezcan en la siguiente captura de la salida de la ejecuci\u00f3n tiene que ver con la <code>asincron\u00eda</code> y el alto coste de ejecuci\u00f3n que tienen las sentencias que escriben por pantalla.</p> <p>Aunque se tratar\u00e1 m\u00e1s adelante en esta misma unidad, es importante insistir en que los diferentes hilos del ejemplo anterior est\u00e1n trabajando sobre una \u00fanica copia del objeto en memoria, por lo que las variables (los atributos) son compartidas, pudiendo sufrir errores de concurrencia.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo04bis","title":"Ejemplo04bis","text":"<p>Por ejemplo, sustituyendo el m\u00e9todo main del ejemplo anterior por el siguiente c\u00f3digo, se pueden crear y ejecutar varios threads mediante un bucle for a partir de una \u00fanica instancia de una clase que implementa la interfaz <code>Runnable</code>. El resultado, con un n\u00famero bajo de iteraciones (por ejemplo, 4) ser\u00e1 habitualmente correcto (el atributo <code>consumedFood</code> alcanzar\u00e1 el mismo valor que el n\u00famero de iteraciones). Con un n\u00famero alto (por ejemplo, 1000 iteraciones) el resultado ser\u00e1 habitualmente err\u00f3neo (el atributo <code>consumedFood</code> alcanzar\u00e1 un valor por debajo del n\u00famero de iteraciones). Esto se debe a que al compartir todos los hilos los mismos atributos producen errores de concurrencia que deben evitarse mediante t\u00e9cnicas concretas que veremos m\u00e1s adelante.</p> <pre><code>public static void main(String[] args) {\n    SimpleMouse fievel = new SimpleMouse(\"Fievel\", 4);\n    for (int i = 0; i &lt; 1000; i++) {\n        new Thread(fievel).start();\n    }\n}\n</code></pre> <p>En una ejecuci\u00f3n del c\u00f3digo anterior, el resultado es 998, cuando deber\u00eda haber sido 1000 si no hubiese habido problemas de concurrencia</p> <pre><code>Consumed food: 998\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo05","title":"Ejemplo05","text":"<p>Listado de estados por los que pasa un hilo:</p> <pre><code>import java.util.ArrayList;\n\npublic class SimpleMouse implements Runnable {\n\n    private String name;\n    private int feedingTime;\n    private int consumedFood;\n\n    public SimpleMouse(String name, int feedingTime) {\n        super();\n        this.name = name;\n        this.feedingTime = feedingTime;\n    }\n\n    public void eat() {\n        try {\n            System.out.printf(\"The mouse %s has started to feed%n\", name);\n            Thread.sleep(feedingTime * 1000);\n            consumedFood++;\n            System.out.printf(\"The mouse %s has stopped to feed%n\", name);\n            System.out.printf(\"Consumed food: %d%n\", consumedFood);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    @Override\n    public void run() {\n        this.eat();\n    }\n\n    public static void main(String[] args) {\n        SimpleMouse mickey = new SimpleMouse(\"Mickey\", 6);\n        ArrayList&lt;Thread.State&gt; threadState = new ArrayList();\n        Thread h = new Thread(mickey);\n        threadState.add(h.getState());\n        h.start();\n\n        while (h.getState() != Thread.State.TERMINATED) {\n            if (!threadState.contains(h.getState())) {\n                threadState.add(h.getState());\n            }\n        }\n        if (!threadState.contains(h.getState())) {\n            threadState.add(h.getState());\n\n        }\n        for (Thread.State estado : threadState) {\n            System.out.println(estado);\n        }\n    }\n}\n</code></pre> <p>Al finalizar la ejecuci\u00f3n se muestran los estados recogidos:</p> <pre><code>The mouse Mickey has started to feed\nThe mouse Mickey has stopped to feed\nConsumed food: 1\nNEW\nRUNNABLE\nTIMED_WAITING\nTERMINATED\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo06","title":"Ejemplo06","text":"<p>En el siguiente ejemplo se muestra un uso conjunto de las clases <code>Timer</code> y <code>TimerTask</code>. El programa simula controlar un sistema de regad\u00edo autom\u00e1tico. Este sistema riega por primera vez transcurridos <code>1000</code> milisegundos desde el inicio de la ejecuci\u00f3n y repite el riego cada <code>2000</code> milisegundos.</p> <pre><code>import java.util.Timer;\nimport java.util.TimerTask;\n\npublic class IrrigationSystem extends TimerTask {\n\n    @Override\n    public void run() {\n        System.out.println(\"Watering...\");\n    }\n\n    public static void main(String[] args) {\n        Timer timer = new Timer();\n        timer.schedule(new IrrigationSystem(),1000,2000);\n    }\n}\n</code></pre> <p>La salida generada transcurridos unos segundos es la que se muestra a continuaci\u00f3n. Entre la escritura de cada l\u00ednea transcurren 2000 milisegundos.</p> <pre><code>Watering...\nWatering...\nWatering...\n...\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo07","title":"Ejemplo07","text":"<p>El siguiente ejemplo ilustra el uso de <code>ScheduledExecutorService</code> como herramienta para la programaci\u00f3n de ejecuciones de tareas. Como se puede observar, mediante la clase <code>Executors</code> se obtiene una instancia de <code>ScheduledExecutorService</code>, que es la interface que permite programar tareas recurrentes en hilos independientes. Una vez obtenido el programador de tareas, se le indica qu\u00e9 tarea se quiere ejecutar (objeto <code>sr</code>), cu\u00e1ntas unidades de tiempo se desea esperar hasta que se inicie la primera tarea (1), cu\u00e1ntas unidades de tiempo se desea esperar entre cada repetici\u00f3n de la tarea (2) y en qu\u00e9 unidad est\u00e1n representadas las unidades de tiempo (<code>TimeUnit.SECONDS</code>)</p> <pre><code>import java.util.concurrent.Executors;\nimport java.util.concurrent.ScheduledExecutorService;\nimport java.util.concurrent.TimeUnit;\n\npublic class IrrigationSystem implements Runnable {\n\n    @Override\n    public void run() {\n        System.out.println(\"Watering...\");\n    }\n\n    public static void main(String[] args) {\n        IrrigationSystem ir = new IrrigationSystem();\n        ScheduledExecutorService ses = Executors.newSingleThreadScheduledExecutor();\n        ses.scheduleAtFixedRate(ir, 1, 2, TimeUnit.SECONDS);\n        System.out.println(\"Configured irrigation system\");\n    }\n}\n</code></pre> <p>La salida de la ejecuci\u00f3n transcurridos unos segundos es la que se muestra a continuaci\u00f3n. Entre cada escritura del texto \u00abRegando\u00bb transcurren dos segundos.</p> <pre><code>Configured irrigation system\nWatering...\nWatering...\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo08","title":"Ejemplo08","text":"<p>Para ilustrar mejor el comportamiento de este tipo de soluciones se presenta el siguiente ejemplo. utiliza Una cola recibe escrituras y lecturas de un conjunto de hilos. La primera soluci\u00f3n utiliza una estructura de datos <code>LinkedList</code> como un soporte. Al no ser esta estructura segura frente a m\u00faltiples hilos, la ejecuci\u00f3n produce un error.</p> <pre><code>import java.util.LinkedList;\nimport java.util.Queue;\n\npublic class nonConcurrentQueue implements Runnable {\n\n    private static Queue&lt;Integer&gt; queue = new LinkedList&lt;Integer&gt;();\n\n    @Override\n    public void run() {\n        queue.add(10);\n        for (Integer i : queue) {\n            System.out.print(1 + \":\");\n        }\n        System.out.println(\"Queue size:\" + queue.size());\n    }\n\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 10; i++) {\n            new Thread(new nonConcurrentQueue()).start();\n        }\n    }\n}\n</code></pre> <p>La salida ser\u00e1 similar a esta:</p> <pre><code>Exception in thread \"Thread-1\" Exception in thread \"Thread-0\" java.util.ConcurrentModificationException\n1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:Queue size:6\nQueue size:4\nQueue size:5\nQueue size:3\n1:1:1:1:1:1:1:Queue size:7\n1:1:1:1:1:1:1:1:Queue size:8\n1:1:1:1:1:1:1:1:1:Queue size:9\n1:1:1:1:1:1:1:1:1:1:Queue size:10\n    at java.base/java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:970)\n[...]\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo08bis","title":"Ejemplo08bis","text":"<p>La segunda soluci\u00f3n utiliza el mismo c\u00f3digo cambiando la estructura de datos a <code>ConcurrentLinkedDeque</code> obteniendo una ejecuci\u00f3n sin errores.</p> <pre><code>import java.util.Queue;\nimport java.util.concurrent.ConcurrentLinkedDeque;\n\npublic class ConcurrentQueue implements Runnable {\n\n    private static Queue&lt;Integer&gt; queue = new ConcurrentLinkedDeque&lt;Integer&gt;();\n\n    @Override\n    public void run() {\n        queue.add(10);\n        for (Integer i : queue) {\n            System.out.print(1 + \":\");\n        }\n        System.out.println(\"Queue size:\" + queue.size());\n    }\n\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 10; i++) {\n            new Thread(new ConcurrentQueue()).start();\n        }\n    }\n}\n</code></pre> <p>Salida obtenida:</p> <pre><code>1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:Queue size:2\nQueue size:4\nQueue size:2\nQueue size:7\nQueue size:7\nQueue size:7\nQueue size:3\n1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:1:Queue size:9\n1:Queue size:9\n1:1:1:1:1:1:1:1:1:1:Queue size:10\n</code></pre> <p>Aunque de esta \u00faltima ejecuci\u00f3n no est\u00e1 ordenada debido a la concurrencia de los hilos, s\u00ed se puede observar que la ejecuci\u00f3n ha generado una cola con 10 elementos correspondientes a los 10 hilos que estaban accediendo a leer y escribir en la estructura de datos.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo09","title":"Ejemplo09","text":"<p>En el siguiente ejemplo se muestra el uso de <code>Exchanger</code>. Se crean dos clases que implementan <code>Runnable</code>, <code>TaskA</code> y <code>TaskB</code>. Ambas clases reciben una instancia de <code>Exchanger</code> en el constructor y la utilizan para intercambiar informaci\u00f3n entre s\u00ed. La llamada al m\u00e9todo <code>exchange</code> por parte de una de las dos tareas producir\u00e1 un bloqueo de espera hasta que la otra tarea haga lo propio, intercambiando en ese momento la informaci\u00f3n entre los dos hilos. Por su parte, la clase <code>Commuter</code>, construye tanto el objeto <code>Exchanger</code> como las dos tareas programadas en <code>TaskA</code> y <code>TaskB</code>. Es importante prestar atenci\u00f3n al hecho de que las tareas no tienen referencias la una de la otra, sino que tienen acceso al objeto que hace de \u00abintercambiador\u00bb de informaci\u00f3n.</p> <p><code>TaskA</code>:</p> <pre><code>import java.util.concurrent.Exchanger;\n\npublic class TaskA implements Runnable {\n\n    private Exchanger&lt;String&gt; exchanger;\n\n    public TaskA(Exchanger&lt;String&gt; exchanger) {\n        super();\n        this.exchanger = exchanger;\n    }\n\n    @Override\n    public void run() {\n        try {\n            String receivedMessage = exchanger.exchange(\"Message sent by TaskA\");\n            System.out.println(\"Message received in TaskA: \" + receivedMessage);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p><code>TaskB</code>:</p> <pre><code>import java.util.concurrent.Exchanger;\n\npublic class TaskB implements Runnable {\n\n    private Exchanger&lt;String&gt; exchanger;\n\n    public TaskB(Exchanger&lt;String&gt; exchanger) {\n        super();\n        this.exchanger = exchanger;\n    }\n\n    @Override\n    public void run() {\n        try {\n            String receivedMessage = exchanger.exchange(\"Message sent by TaskB\");\n            System.out.println(\"Message received in TaskB: \" + receivedMessage);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p><code>Commuter</code>:</p> <pre><code>import java.util.concurrent.Exchanger;\n\npublic class Commuter {\n\n    public static void main(String[] args) {\n        Exchanger&lt;String&gt; exchanger = new Exchanger&lt;String&gt;();\n        new Thread(new TaskA(exchanger)).start();\n        new Thread(new TaskB(exchanger)).start();\n    }\n}\n</code></pre> <p>La salida obtenida ser\u00e1:</p> <pre><code>Message received in TaskA: Message sent by TaskB\nMessage received in TaskB: Message sent by TaskA\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo10","title":"Ejemplo10","text":"<pre><code>import java.util.ArrayList;\nimport java.util.List;\n\npublic class nonSafeReaderWriter extends Thread {\n\n    private static List&lt;String&gt; words = new ArrayList&lt;String&gt;();\n\n    @Override\n    public void run() {\n        words.add(\"New word\");\n        for (String word : words) {\n            words.size();\n        }\n        System.out.println(words.size());\n    }\n\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 100; i++) {\n            new nonSafeReaderWriter().start();\n        }\n    }\n}\n</code></pre> <p>En la salida aparecen referencias a excepciones que indican que han ocurrido errores de concurrencia en el acceso a la lista, como <code>java.util.ConcurrentModificationException</code>:</p> <pre><code>[...]\nException in thread \"Thread-21\" java.util.ConcurrentModificationException\n[...]\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo11","title":"Ejemplo11","text":"<pre><code>import java.util.List;\nimport java.util.concurrent.CopyOnWriteArrayList;\n\npublic class safeReaderWriter extends Thread {\n\n    private static List&lt;String&gt; words = new CopyOnWriteArrayList&lt;String&gt;();\n\n    @Override\n    public void run() {\n        words.add(\"New word\");\n        for (String word : words) {\n            words.size();\n        }\n        System.out.println(words.size());\n    }\n\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 100; i++) {\n            new safeReaderWriter().start();\n        }\n    }\n}\n</code></pre> <p>Que esta vez se ejecuta sin problemas ni errores.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo12","title":"Ejemplo12","text":"<pre><code>import java.util.concurrent.Callable;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.Future;\n\npublic class Reader implements Callable&lt;String&gt; {\n\n    @Override\n    public String call() throws Exception {\n        String readedText = \"I like action movies\";\n        Thread.sleep(1000);\n        return readedText;\n    }\n\n    public static void main(String[] args) {\n        try {\n            Reader reader = new Reader();\n            ExecutorService executionService = Executors.newSingleThreadExecutor();\n            Future&lt;String&gt; result = executionService.submit(reader);\n            String text = result.get();\n            if (result.isDone()) {\n                System.out.println(text);\n                System.out.println(\"Process finished\");\n            } else if (result.isCancelled()) {\n                System.out.println(\"Process cancelled\");\n            }\n            executionService.shutdown();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>La salida producida es la siguiente:</p> <pre><code>Me gustan las pel\u00edculas de acci\u00f3n\nProceso finalizado\n</code></pre> <p>Como se ha indicado anteriormente, la principal diferencia entre implementar <code>Callable</code> y <code>Runnable</code> es que la primera opci\u00f3n puede proporcionar un retorno. No obstante, con <code>Runnable</code> existen t\u00e9cnicas para transmitir valores mediante el uso de referencias a objetos.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo13","title":"Ejemplo13","text":"<pre><code>public class BasicRunnable implements Runnable {\n\n    private int id;\n\n    public BasicRunnable(int id) {\n        super();\n        this.id = id;\n    }\n\n    @Override\n    public void run() {\n        try {\n            System.out.println(\"Processing thread \" + id);\n            Thread.sleep(10000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 10; i++) {\n            BasicRunnable br = new BasicRunnable(i);\n            new Thread(br).start();\n        }\n    }\n}\n</code></pre> <p>La salida generada para una ejecuci\u00f3n cualquiera ser\u00e1 similar a esta:</p> <pre><code>Processing thread 9\nProcessing thread 1\nProcessing thread 5\nProcessing thread 6\nProcessing thread 3\nProcessing thread 7\nProcessing thread 8\nProcessing thread 4\nProcessing thread 2\nProcessing thread 0\n</code></pre> <p>Como se puede observar, el orden de las escrituras no coincide con el orden de las ejecuciones de los hilos.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo14","title":"Ejemplo14","text":"<pre><code>public class BasicRunnableLambda {\n\n    private int id;\n\n    public BasicRunnableLambda(int id) {\n        super();\n        this.id = id;\n    }\n\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 10; i++) {\n            BasicRunnableLambda br = new BasicRunnableLambda(i);\n            new Thread(() -&gt; {\n                try {\n                    System.out.println(\"Processing thread \" + br.id);\n                    Thread.sleep(10000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }).start();\n        }\n    }\n}\n</code></pre> <p>La salida no difiere del ejemplo anterior.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo15","title":"Ejemplo15","text":"<pre><code>public class BasicThread extends Thread{\n        private int id;\n\n    public BasicThread(int id) {\n        super();\n        this.id = id;\n    }\n\n    @Override\n    public void run() {\n        try {\n            System.out.println(\"Processing thread \" + id);\n            Thread.sleep(10000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        for (int i = 0; i &lt; 10; i++) {\n            BasicThread bt = new BasicThread(i);\n            new Thread(bt).start();\n        }\n    }\n\n}\n</code></pre> <p>La salida no difiere de la clase que implementamos anteriormente con <code>Runnable</code>.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo16","title":"Ejemplo16","text":"<pre><code>public class BasicInterruption extends Thread {\n\n    @Override\n    public void run() {\n        int counter = 0;\n        while (true) {\n            counter++;\n            try {\n                System.out.println(counter);\n                if (counter == 3) {\n                    System.out.print(\"Interruption\");\n                    this.interrupt();\n                }\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                return;\n            }\n        }\n\n    }\n\n    public static void main(String[] args) {\n        new BasicInterruption().start();\n    }\n}\n</code></pre> <p>La salida al ejecutar el c\u00f3digo debe ser:</p> <pre><code>1\n2\n3\nInterruption\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo17","title":"Ejemplo17","text":"<p>SharedObject class:</p> <pre><code>public class SharedObject {\n    public int sharedVariable;\n}\n</code></pre> <p>UniqueInstanceSharing class:</p> <pre><code>public class UniqueInstanceSharing extends Thread {\n\n    private SharedObject so;\n\n    public UniqueInstanceSharing(SharedObject so) {\n        this.so = so;\n    }\n\n    @Override\n    public void run() {\n        this.so.sharedVariable++;\n        System.out.println(\"Shared Variable: \" + this.so.sharedVariable);\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        SharedObject so = new SharedObject();\n        UniqueInstanceSharing uis1 = new UniqueInstanceSharing(so);\n        UniqueInstanceSharing uis2 = new UniqueInstanceSharing(so);\n        uis1.start();\n        Thread.sleep(1000);\n        uis2.start();\n    }\n}\n</code></pre> <p>La salida ser\u00e1 similar a esta:</p> <pre><code>Shared Variable: 1\nShared Variable: 2\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo18","title":"Ejemplo18","text":"<pre><code>public class RunnableSharing extends Thread {\n\n    private int counter;\n\n    @Override\n    public void run() {\n        counter++;\n        System.out.println(\"Counter: \" + counter);\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        RunnableSharing rs = new RunnableSharing();\n        for (int i = 0; i &lt; 1000; i++) {\n            new Thread(rs).start();\n        }\n    }\n}\n</code></pre> <p>Debes obtener una salida similar a esta:</p> <pre><code>[...]\nCounter: 998\nCounter: 999\nCounter: 1000\n</code></pre> <p>En este caso aunque llamemos m\u00e1s de 1000 veces no existen problemas al acceder a la variable <code>counter</code>.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo19","title":"Ejemplo19","text":"<p>En este ejemplo 1000 hilos incrementan en 1000 unidades una variable est\u00e1tica com\u00fan. La variable deber\u00eda obtener como resultado 1000000.</p> <pre><code>public class SharedVariable extends Thread {\n\n    private static int counter;\n\n    @Override\n    public void run() {\n        for (int i = 0; i &lt; 1000; i++) {\n            counter++;\n        }\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        for (int i = 0; i &lt; 1000; i++) {\n            new SharedVariable().start();\n        }\n        try {\n            Thread.sleep(1000);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        System.out.println(\"Counter value: \" + counter);\n    }\n}\n</code></pre> <p>Obtendremos una salida similar a esta:</p> <pre><code>Counter value: 993203\n</code></pre> <p>Que dista bastante del valor esperado. Esto es debido a que la operaci\u00f3n de incremento con el operador unario ++ no realiza una operaci\u00f3n at\u00f3mica (que se ejecuta sin interrupciones), sino que consta de varios pasos y la ejecuci\u00f3n se puede interrumpir en cualquiera de ellos, provocando un problema de inconsistencia de memoria.</p> <p>Suponiendo que el proceso de incremento en 1 de una variable est\u00e1 compuesto de los siguientes pasos:</p> <ul> <li>Lectura del valor de la variable.</li> <li>Incremento en 1 del valor de la variable.</li> <li>Escritura del valor de la variable.</li> </ul> <p>Si un hilo lee el valor de la variable siendo este 2, calcula el nuevo valor y antes de escribir el 3 resultante otro hilo toma su lugar en el procesador, este leer\u00e1 de nuevo 2, calcular\u00e1 el nuevo valor que ser\u00e1 3 y lo escribir\u00e1, cuando el primer hilo vuelva al procesador continuar\u00e1 ejecutando el tercer paso y escribiendo el valor 3. Dos hilos han incrementado en 1 el valor de una misma variable, pero al finalizar solo se ha reflejado uno de los incrementos. Esto explica las p\u00e9rdidas de incrementos que se muestran en el ejemplo.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo20","title":"Ejemplo20","text":"<pre><code>public class SimpleWaitNotify implements Runnable {\n\n    private volatile boolean runningMethod1 = false;\n\n    public synchronized void method1() {\n        for (int i = 0; i &lt; 10; i++) {\n            System.out.printf(\"Method1: Running %d\\n\", i);\n            if (i == 5) {\n                try {\n                    this.wait();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n\n    public synchronized void method2() {\n        for (int i = 10; i &lt; 20; i++) {\n            System.out.printf(\"Method2: Running %d\\n\", i);\n        }\n        this.notifyAll();\n    }\n\n    @Override\n\n    public void run() {\n        if (!runningMethod1) {\n            runningMethod1 = true;\n            method1();\n        } else {\n            method2();\n        }\n    }\n\n    public static void main(String[] args) {\n        SimpleWaitNotify swn = new SimpleWaitNotify();\n        new Thread(swn).start();\n        new Thread(swn).start();\n    }\n}\n</code></pre> <p>La salida debe ser:</p> <pre><code>Running 0\nRunning 1\nRunning 2\nRunning 3\nRunning 4\nRunning 5\nRunning 10\nRunning 11\nRunning 12\nRunning 13\nRunning 14\nRunning 15\nRunning 16\nRunning 17\nRunning 18\nRunning 19\nRunning 6\nRunning 7\nRunning 8\nRunning 9\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo21","title":"Ejemplo21","text":"<pre><code>public class Basic extends Thread {\n\n    private int id;\n\n    public Basic(int id) {\n        this.id = id;\n    }\n\n    @Override\n    public void run() {\n        try {\n            for (int i = 0; i &lt; 3; i++) {\n                System.out.printf(\"Thread %d. Interaction %d\\n\", id, i);\n                Thread.sleep(1000);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        Basic thread1 = new Basic(1);\n        Basic thread2 = new Basic(2);\n        thread1.start();\n        thread2.start();\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo22","title":"Ejemplo22","text":"<pre><code>public class BasicJoin extends Thread {\n\n    private int id;\n    private boolean suspend = false;\n    private Thread referenceThread;\n\n    public BasicJoin(int id) {\n        this.id = id;\n    }\n\n    public void threadSuspend(Thread referenceThread) {\n        this.suspend = true;\n        this.referenceThread = referenceThread;\n    }\n\n    @Override\n    public void run() {\n        try {\n            for (int i = 0; i &lt; 3; i++) {\n                if (suspend) {\n                    referenceThread.join();\n                }\n                System.out.printf(\"Thread %d. Interaction %d\\n\", id, i);\n                Thread.sleep(1000);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        BasicJoin thread1 = new BasicJoin(1);\n        BasicJoin thread2 = new BasicJoin(2);\n        thread1.start();\n        thread2.start();\n        thread2.threadSuspend(thread1);\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo23","title":"Ejemplo23","text":"<pre><code>public class MethodSyncronization implements Runnable {\n\n    public synchronized void method1() {\n        System.out.println(\"Method 1 start\");\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException ie) {\n            return;\n        }\n        System.out.println(\"Method 1 ends\");\n    }\n\n    public synchronized void method2() {\n        System.out.println(\"Method 2 start\");\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException ie) {\n            return;\n        }\n        System.out.println(\"Method 2 ends\");\n    }\n\n    @Override\n    public void run() {\n        method1();\n        method2();\n    }\n\n    public static void main(String[] args) {\n        MethodSyncronization ms = new MethodSyncronization();\n        new Thread(ms).start();\n        new Thread(ms).start();\n    }\n}\n</code></pre> <p>Los m\u00e9todos se ejecutar\u00e1n de uno en uno, pese a que se dispone de dos hilos distintos. La salida generada es la siguiente:</p> <pre><code>Method 1 start\nMethod 1 ends\nMethod 2 start\nMethod 2 ends\nMethod 1 start\nMethod 1 ends\nMethod 2 start\nMethod 2 ends\n</code></pre> <p>Recuerda que el orden puede variar, lo importante es que los m\u00e9todos se ejecutan todos unos detr\u00e1s de otros.</p> <p>Si los m\u00e9todos no estuviesen sincronizados (<code>MethodSyncronizationBis</code>) los dos hilos ejecutar\u00edan simult\u00e1neamente el primer m\u00e9todo, tras su finalizaci\u00f3n, el segundo. La salida habr\u00eda resultado la siguiente:</p> <pre><code>Method 1 start\nMethod 1 start\nMethod 1 ends\nMethod 1 ends\nMethod 2 start\nMethod 2 start\nMethod 2 ends\nMethod 2 ends\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo24","title":"Ejemplo24","text":"<pre><code>public class WrongMethodSyncronization extends Thread {\n\n    public synchronized void method1() {\n        System.out.println(\"Method 1 start\");\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException ie) {\n            return;\n        }\n        System.out.println(\"Method 1 ends\");\n    }\n\n    public synchronized void method2() {\n        System.out.println(\"Method 2 start\");\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException ie) {\n            return;\n        }\n        System.out.println(\"Method 2 ends\");\n    }\n\n    @Override\n    public void run() {\n        method1();\n        method2();\n    }\n\n    public static void main(String[] args) {\n        new WrongMethodSyncronization().start();\n        new WrongMethodSyncronization().start();\n    }\n}\n</code></pre> <p>La salida en este caso ser\u00e1:</p> <pre><code>Method 1 start\nMethod 1 start\nMethod 1 ends\nMethod 2 start\nMethod 1 ends\nMethod 2 start\nMethod 2 ends\nMethod 2 ends\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo25","title":"Ejemplo25","text":"<pre><code>public class SegmentSyncronization extends Thread {\n\n    int id;\n    static Object block1 = new Object();\n    static Object block2 = new Object();\n\n    public SegmentSyncronization(int id) {\n        this.id = id;\n    }\n\n    public void method1() {\n        synchronized (block1) {\n            System.out.printf(\"Method 1 from thread %d start\\n\", id);\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException ie) {\n                return;\n            }\n            System.out.printf(\"Method 1 from thread %d ends\\n\", id);\n        }\n    }\n\n    public void method2() {\n        synchronized (block2) {\n            System.out.printf(\"Method 2 from thread %d start\\n\", id);\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException ie) {\n                return;\n            }\n            System.out.printf(\"Method 2 from thread %d ends\\n\", id);\n        }\n    }\n\n    @Override\n    public void run() {\n        if (id == 1) {\n            method1();\n            method2();\n        } else {\n            method2();\n            method1();\n        }\n    }\n\n    public static void main(String[] args) {\n        new SegmentSyncronization(1).start();\n        new SegmentSyncronization(2).start();\n    }\n}\n</code></pre> <p>La salida ser\u00e1 similar a esta:</p> <pre><code>Method 1 from thread 1 start\nMethod 2 from thread 2 start\nMethod 1 from thread 1 ends\nMethod 2 from thread 2 ends\nMethod 2 from thread 1 start\nMethod 1 from thread 2 start\nMethod 2 from thread 1 ends\nMethod 1 from thread 2 ends\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#ejemplo26","title":"Ejemplo26","text":"<pre><code>package UD02.Example26;\n\nimport java.util.concurrent.Semaphore;\n\npublic class BasicSemaphore implements Runnable {\n\n    Semaphore semaphore = new Semaphore(3);\n\n    @Override\n    public void run() {\n        try {\n            semaphore.acquire();\n            System.out.println(\"Step 1\");\n            Thread.sleep(1000);\n            System.out.println(\"Step 2\");\n            Thread.sleep(1000);\n            System.out.println(\"Step 3\");\n            Thread.sleep(1000);\n            semaphore.release();\n        } catch (InterruptedException ie) {\n            ie.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        BasicSemaphore sb = new BasicSemaphore();\n        for (int i = 0; i &lt; 5; i++) {\n            new Thread(sb).start();\n        }\n    }\n}\n</code></pre> <p>Salida:</p> <pre><code>Step 1\nStep 1\nStep 1\nStep 2\nStep 2\nStep 2\nStep 3\nStep 3\nStep 3\nStep 1\nStep 1\nStep 2\nStep 2\nStep 3\nStep 3\n</code></pre> <p>La salida  muestra  que  los tres primeros hilos que han intentado acceder a la secci\u00f3n cr\u00edtica a trav\u00e9s del bloqueo del sem\u00e1foro se han ejecutado concurrentemente, y el resto de los hilos se han ejecutado cuando los primeros han terminado y liberado los bloqueos.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02ProgramacioMultifil_.html#fuentes-de-informacion","title":"Fuentes de informaci\u00f3n","text":"<ul> <li>Wikipedia</li> <li>Programaci\u00f3n de servicios y procesos - FERNANDO PANIAGUA MART\u00cdN [Paraninfo]</li> <li>Programaci\u00f3n de Servicios y Procesos - ALBERTO S\u00c1NCHEZ CAMPOS [Ra-ma]</li> <li>Programaci\u00f3n de Servicios y Procesos - M\u00aa JES\u00daS RAMOS MART\u00cdN - [Garceta] (1\u00aa y 2\u00aa Edici\u00f3n)</li> <li>Programaci\u00f3n de servicios y procesos - CARLOS ALBERTO CORTIJO BON [Sintesis]</li> <li>Programaci\u00f3 de serveis i processos - JOAR ARNEDO MORENO, JOSEP CA\u00d1ELLAS BORNAS i JOS\u00c9 ANTONIO LEO MEG\u00cdAS [IOC]</li> <li>GitHub repositories:</li> <li>https://github.com/ajcpro/psp</li> <li>https://oscarmaestre.github.io/servicios/index.html</li> <li>https://github.com/juanro49/DAM/tree/master/DAM2/PSP</li> <li>https://github.com/pablohs1986/dam_psp2021</li> <li>https://github.com/Perju/DAM</li> <li>https://github.com/eldiegoch/DAM</li> <li>https://github.com/eldiegoch/2dam-psp-public</li> <li>https://github.com/franlu/DAM-PSP</li> <li>https://github.com/ProgProcesosYServicios</li> <li>https://github.com/joseluisgs</li> <li>https://github.com/oscarnovillo/dam2_2122</li> <li>https://github.com/PacoPortillo/DAM_PSP_Tarea02_La-Cena-de-los-Filosofos</li> </ul>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html","title":"UT02Programaciomultifil","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html#2-programacion-multihilo","title":"2. Programaci\u00f3n multihilo","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html#21-elementos-relacionados-con-la-programacion-de-hilos-librerias-y-clases","title":"2.1. Elementos relacionados con la programaci\u00f3n de hilos. Librer\u00edas y clases","text":"<p>\u2022 Clase Thread</p> void start () Inicializa el hilo. void run () Comienza la ejecuci\u00f3n del hilo. static Thread currentThread () Devuelve la referencia del hilo que se encuentra en ejecuci\u00f3n. long getId () Devuelve el identificador del hilo. static void sleep (long milis) El hilo se detiene durante el n\u00famero de milisegundos especificado. void interrupt () Interrumpe la ejecuci\u00f3n del hilo."},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html#22-gestion-de-hilos","title":"2.2. Gesti\u00f3n de hilos","text":"<p>Un proceso es cualquier programa en ejecuci\u00f3n y es totalmente independiente de otros procesos. Un proceso puede tener varios hilos de ejecuci\u00f3n que realizar\u00e1n subtareas del proceso principal que los ha creado. Un hilo es un conjunto de tareas que se ejecutan por el Sistema Operativo. Tambi\u00e9n se denominan hebras o subprocesos.</p> <p>Los hilos contienen informaci\u00f3n propia, como, por ejemplo, su identificador y toda aquella informaci\u00f3n que sea necesaria para que la aplicaci\u00f3n pueda comunicarse con el sistema, es decir, el contador del programa, la pila de ejecuci\u00f3n y el estado de la CPU.</p> <p>Mientras que los procesos se caracterizan por no compartir la memoria con la que trabajan y ser independientes entre ellos, los hilos no son iguales. Estos \u00faltimos suelen compartir la memoria con la que trabajan, puesto que pertenecen al mismo proceso.  Un ejemplo que puede ayudar a entender este concepto es un navegador web. El navegador web es un proceso con un identificador. Dentro de ese navegador es posible crear diferentes pesta\u00f1as que comparten la memoria.</p> <p>Cuando un hilo modifica un dato en la memoria, el resto de hilos del proceso pueden obtener este valor modificado.</p> <p>El uso de hilos en lugar de procesos tiene bastantes ventajas, entre las que se destacan dos:</p> <ul> <li> <p>La creaci\u00f3n de un hilo tiene un coste menor que la creaci\u00f3n de un proceso, puesto que no es necesario reservar memoria para cada uno de ellos porque la comparten.</p> </li> <li> <p>Es m\u00e1s r\u00e1pido cambiar de un hilo a otro que de un proceso a otro.</p> </li> </ul> <p>Estos hilos suelen ser utilizados la mayor parte de las ocasiones para llevar a cabo tareas en segundo plano, puesto que se reduce mucho el tiempo de realizaci\u00f3n de diversas tareas de forma simult\u00e1nea.</p> <p>Java es uno de los lenguajes de programaci\u00f3n que permite trabajar con distintos hilos en el desarrollo de una aplicaci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html#23-programacion-de-aplicaciones-multihilo","title":"2.3.  Programaci\u00f3n de aplicaciones multihilo","text":"<p>A la hora de desarrollar un software es necesario tener en cuenta qu\u00e9 tiempo de ejecuci\u00f3n debe de tener como m\u00e1ximo una aplicaci\u00f3n. Adem\u00e1s, es importante medir el consumo de recursos que esta ha utilizado. Cuando existe solo un proceso, existe la posibilidad de que el consumo de memoria RAM y recursos del procesador por parte del proceso en ejecuci\u00f3n, sobrecargue el sistema.</p> <p>Como soluci\u00f3n a esto se han creado los hilos de ejecuci\u00f3n que permiten ser ejecutados dentro de una aplicaci\u00f3n de forma paralela y haciendo uso de otra parte del c\u00f3digo. De esta forma, es posible ejecutar un hilo en primer plano que permita la comunicaci\u00f3n con el usuario, y, en segundo plano, hilos que vayan ejecutando las diferentes tareas de carga de una aplicaci\u00f3n. Con esto se consigue que el rendimiento del equipo est\u00e9 m\u00e1s optimizado.</p> <p>Adem\u00e1s, permiten al usuario trabajar con diferentes aplicaciones al mismo tiempo sin penalizar el rendimiento del equipo. Esto posibilita una gran cantidad de opciones como, por ejemplo, el trabajo en m\u00faltiples escritorios con diversas aplicaciones de forma paralela.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html#24-estados-de-un-hilo-cambios-de-estado","title":"2.4.  Estados de un hilo. Cambios de estado","text":"<p>Al igual que los procesos, los hilos tienen un ciclo de vida en el que van pasando por diferentes estados.</p> <p>Los estados que pueden tener un hilo son:</p> <ul> <li>Listo: se ha creado el hilo, pero a\u00fan no ha comenzado su ejecuci\u00f3n.</li> <li>Ejecuci\u00f3n: cuando un objeto llama al m\u00e9todo start() comienza la ejecuci\u00f3n del hilo, es decir, se empiezan a ejecutar las instrucciones que se encuentran en el m\u00e9todo run().</li> <li>Bloqueado: el hilo se ha parado pero puede volver a ejecutarse. Normalmente, el hilo se bloquea por alguna de las siguientes acciones:<ul> <li>Se invoca al m\u00e9todo sleep().</li> <li>El hilo queda a la espera de que finalice una operaci\u00f3n de entrada/salida.</li> <li>Se invoca el m\u00e9todo wait(). Cuando un hilo queda bloqueado por este m\u00e9todo, otro hilo debe invocar el m\u00e9todo notify() o notifyAll(), dependiendo de si quiere despertar un \u00fanico hilo, o todos aquellos que est\u00e9n bloqueados, respectivamente.</li> <li>Otro hilo, externamente, invoca al m\u00e9todo suspend(). Cuando un hilo llama al m\u00e9todo suspend(), el hilo bloqueado debe recibir el mensaje resume() para poder volver a la ejecuci\u00f3n.</li> </ul> </li> <li>Muerto: el hilo muere, ya sea porque ha finalizado el m\u00e9todo run() o porque externamente han decidido pararlo.</li> </ul> <p>Los cambios de estado de un hilo vienen dados por las siguientes situaciones:</p> <ul> <li>Creaci\u00f3n: cuando se crea un proceso se crea un hilo para ese proceso. Despu\u00e9s, este hilo puede crear otros hilos dentro del mismo proceso. El hilo pasar\u00e1 a la cola de los Listos.</li> <li>Bloqueo: cuando un hilo necesita esperar por un suceso, se bloquea (guardando sus registros de usuario, contador de programa y punteros de pila). Ahora el procesador podr\u00e1 pasar a ejecutar otro hilo que est\u00e9 al principio de la cola de Listos, mientras el anterior permanece bloqueado.</li> <li>Desbloqueo: cuando el evento por el que el hilo permanec\u00eda en estado de bloqueo finaliza, el hilo pasa a la cola de los Listos.</li> <li>Terminaci\u00f3n: cuando un hilo finaliza, se liberan todos los recursos utilizados por \u00e9l.</li> </ul>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html#25-comparticion-de-informacion-entre-hilos-y-gestion-de-recursos-compartidos-por-los-hilos","title":"2.5.  Compartici\u00f3n de informaci\u00f3n entre hilos y gesti\u00f3n de recursos compartidos por los hilos","text":"<p>Cuando varios hilos comparten el mismo espacio de memoria es posible que aparezcan algunos problemas, denominados problemas de sincronizaci\u00f3n:</p> <ul> <li> <p>Condici\u00f3n de carrera: se denomina condici\u00f3n de carrera a la ejecuci\u00f3n de un programa en la que su salida depende de la secuencia de eventos que se produzcan.</p> </li> <li> <p>Inconsistencia de memoria: es aquel problema en el que los hilos, que comparten un dato en memoria, ven diferentes valores para el mismo elemento.</p> </li> <li> <p>Inanici\u00f3n: es uno de los problemas m\u00e1s graves. Consiste en que se deniegue siempre el acceso a un recurso compartido al mismo hilo, de forma que quede bloqueado a la espera del mismo.</p> </li> <li> <p>Interbloqueo: es el otro de los problemas m\u00e1s graves. Es aquel en el que un hilo est\u00e1 esperando por un recurso compartido que est\u00e1 asociado a un hilo cuyo estado es bloqueado.</p> </li> </ul> <p>Para poder evitarlos en gran medida, es necesario implementar mecanismos de sincronizaci\u00f3n entre los hilos de un proceso. De esta forma se consigue que un hilo que quiere acceder al mismo recurso que otro, se quede en espera hasta que se liberan dichos recursos. Este tipo de mecanismos se denominan zona de exclusi\u00f3n mutua.</p> <p>Estos hilos deben saber qui\u00e9nes de ellos deben esperar y cu\u00e1les continuar con su ejecuci\u00f3n. Para ello existen diferentes mecanismos de comunicaci\u00f3n entre hilos:</p> <ul> <li> <p>Operaciones at\u00f3micas: son aquellas operaciones que se realizan a la vez, es decir, que forman un pack. De esta forma se evita que los datos compartidos tengan distintos valores para el resto de hilos del proceso.</p> </li> <li> <p>Secciones cr\u00edticas: se estructura el c\u00f3digo de la aplicaci\u00f3n de tal forma que se accede de forma ordenada a aquellos datos compartidos.</p> </li> <li> <p>Sem\u00e1foros: este mecanismo solo puede tomar valores 0 o 1. El hilo que accede al recurso inicializa el sem\u00e1foro a 1 y tras su finalizaci\u00f3n el valor se queda a 0.</p> </li> <li> <p>Tuber\u00edas: todos los hilos se a\u00f1aden a una cola que se prioriza por medio de un algoritmo FIFO, es decir, el primero en solicitar el acceso ser\u00e1 asignado al recurso.</p> </li> <li> <p>Monitores: garantizan que solo un hilo acceder\u00e1 al recurso con el estado de ejecuci\u00f3n. Esto se consigue por medio del env\u00edo de se\u00f1ales. devuelve este al monitor.</p> </li> <li> <p>Paso de mensajes: todos los hilos deben tener implementados los m\u00e9todos para entender los mensajes. Esto supone un mayor coste, aunque si existe seguridad en el env\u00edo y recepci\u00f3n de un mensaje, se garantiza que solo un proceso acceder\u00e1 en el mismo momento a un recurso.</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html#26-programas-multihilo-que-permitan-la-sincronizacion-entre-ellos","title":"2.6. Programas multihilo, que permitan la sincronizaci\u00f3n entre ellos","text":"<p>Cuando en un programa tenemos varios hilos ejecut\u00e1ndose a la vez es posible que varios hilos intenten acceder a la vez al mismo sitio (fichero, conexi\u00f3n, otro. Para solucionar estos problemas, hay que sincronizar los hilos. Por quedar\u00e1n las letras entremezcladas. La finalidad es que el Hilo A escriba As\u00ed que cuando un hilo escriba en el fichero, debe marcar de alguna manera que el fichero est\u00e1 ocupado y el otro hilo deber\u00e1 esperar que est\u00e9 libre.</p> <p>La forma de comunicarse consiste en compartir un objeto. Imaginemos que escribimos en un fichero usando una variable fichero de tipo PrintWriter. Para escribir el Hilo A har\u00e1 esto:</p> <p><code>fichero.println(\"Hola\");</code></p> <p>Mientras el Hilo B har\u00e1 esto:</p> <p><code>fichero.println(\"Adi\u00f3s\");</code></p> <p>Si los dos hilos lo hacen a la vez, sin ning\u00fan tipo de sincronizaci\u00f3n, el fichero final puede tener esto:</p> <p><code>HoAldia\u00f3s</code></p> <p>Para evitar este problema debemos sincronizar los hilos. En Java el c\u00f3digo ser\u00eda as\u00ed:</p> <p><code>synchronized (fichero)</code></p> <p><code>{</code> <code>fichero.println(\"Hola\");</code></p> <p><code>}</code></p> <p>Y el otro hilo:</p> <p><code>synchronized (fichero)</code></p> <p><code>{</code> <code>fichero.println(\"Adi\u00f3s\"); }</code></p> <p>Al poner synchronized(fichero) marcamos fichero como ocupado desde que se abren las llaves hasta que se cierran. Cuando el Hilo B intenta tambi\u00e9n su synchronized(fichero), se queda ah\u00ed bloqueado, en espera de que el Hilo A termine con fichero.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html#27-gestion-de-hilos-por-parte-del-sistema-operativo-planificacion-y-acceso-a-su-prioridad","title":"2.7. Gesti\u00f3n de hilos por parte del sistema operativo. Planificaci\u00f3n y acceso a su prioridad","text":"<p>Los sistemas operativos tienen dos formas de implementar hilos:</p> <ul> <li> <p>Multihilo apropiativo: permite al sistema operativo determinar cu\u00e1ndo debe haber un cambio de contexto. Pero esto tiene una desventaja, y es que el sistema puede hacer un cambio de contexto en un momento inoportuno, causando una confusi\u00f3n de prioridades, creando una serie de problemas.</p> </li> <li> <p>Multihilo cooperativo: depende del mismo hilo abandonar el control el control cuando llega a un punto de detecci\u00f3n, lo cual puede traer problemas cuando el hilo espera la disponibilidad de un recurso.</p> </li> </ul> <p>En cuanto a la gesti\u00f3n de las prioridades, en el lenguaje Java, cada tiene una preferencia. Predeterminadamente, un hilo hereda la prioridad del hilo padre que lo crea, aunque puede aumentar o disminuir mediante el m\u00e9todo setPriority(). Para obtener la prioridad del hilo se utiliza el m\u00e9todo getPriority().</p> <p>La prioridad se mide mediante un rango de valores enteros entre 1 y 10, siendo 1 la m\u00ednima prioridad (MIN_PRIORITY) y 10 el valor de m\u00e1xima (MAX_PRIORITY). Si varios hilos tienen la misma prioridad, la m\u00e1quina virtual va cediendo control de forma c\u00edclica.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/UT02Programaciomultifil.html#28-depuracion-y-documentacion-de-aplicaciones","title":"2.8. Depuraci\u00f3n y documentaci\u00f3n de aplicaciones","text":"<p>Durante todo el proceso de desarrollo de una aplicaci\u00f3n es necesario hacer depuraciones constantes y comprobaciones del comportamiento y resultados obtenidos.</p> <p>La mejor forma de realizarlas es a trav\u00e9s del uso de puntos de interrupci\u00f3n. Estos puntos indican al depurador del software que ejecuta la aplicaci\u00f3n qu\u00e9 debe parar o pausar su ejecuci\u00f3n en un punto determinado.</p> <p>Estos puntos suelen usarse para mostrar los valores obtenidos y mensajes necesarios para comprobar que los datos son los correctos y la ejecuci\u00f3n hasta ese punto es correcta. Adem\u00e1s, este tipo de puntos se utilizan como herramienta de trazabilidad de la aplicaci\u00f3n.</p> <p>Toda la documentaci\u00f3n debe detallar cu\u00e1l es la funcionalidad de dicha aplicaci\u00f3n. En ella deben de aparecer de forma esquem\u00e1tica todos los puntos relevantes, que son necesarios para comprender y conocer el correcto funcionamiento de la misma.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/_PSP2425.html","title":"Programaci\u00f3 Serveis i Processos - DAM","text":"Repositori PSP - Github <p> Repositori de codis i exemples</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/_PSP2425.html#teoria-sobre-programacio-multifil-ut02","title":"Teoria sobre programaci\u00f3 multifil (UT02)","text":"<p> D'aqu\u00ed poc estar\u00e0 llest, revisant tot el material.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT02/_PSP2425.html#explicacio-problema-dels-filosofs","title":"Explicaci\u00f3 problema dels fil\u00f2sofs","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT02/filosofs.html","title":"Problema del sopar dels fil\u00f2sofs","text":"<p>Aqu\u00ed teniu el v\u00eddeo amb l'explicaci\u00f3 del del problema del sopar dels fil\u00f2sofs.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT03/UT03Continguts.html","title":"Presentaci\u00f3 diapositives UT03","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT03/UT03Continguts.html#programacio-comunicacions-en-xarxa","title":"Programaci\u00f3 comunicacions en xarxa","text":"<p>Taula de contingut</p> <p>1. Presentaci\u00f3 diapositives</p> <p>2. Exemple client TCP</p> <p>3. Exemple servidor TCP</p> <p>4. Exemple client UDP</p> <p>5. Exemple servidor UDP</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT03/UT03Continguts.html#presentacio","title":"Presentaci\u00f3","text":"\"Designed by Wannapik\""},{"location":"Moduls/ARXIU/2425/PSP/UT03/UT03Continguts.html#exemple-tcp-client","title":"Exemple TCP CLient","text":"<p>Aqu\u00ed teniu un exemple de com crear un client amb TCP. Tamb\u00e9 el teniu al github.</p> <pre><code>package docencia.xaviersastre.dam.psp.ut03;\n\n//TCPClient.java\n\nimport java.io.*;\nimport java.net.*;\n\nclass TCPClient {\n    public static void main(String argv[]) throws Exception {\n        String sentence;\n        String modifiedSentence;\n        BufferedReader inFromUser = new BufferedReader(new InputStreamReader(System.in));\n        //Socket clientSocket = new Socket(\"195.77.81.43\", 44014);\n        Socket clientSocket = new Socket();\n        InetSocketAddress addr = new InetSocketAddress(\"nom_dns\", 44014);\n        clientSocket.connect(addr);\n        DataOutputStream outToServer = new DataOutputStream(clientSocket.getOutputStream());\n        BufferedReader inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));\n        sentence = inFromUser.readLine();\n        outToServer.writeBytes(sentence + '\\n');\n        modifiedSentence = inFromServer.readLine();\n        System.out.println(\"FROM SERVER: \" + modifiedSentence);\n        clientSocket.close();\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT03/UT03Continguts.html#exemple-tcp-server","title":"Exemple TCP Server","text":"<p>Aqu\u00ed teniu un exemple de com crear un servidor amb TCP. Tamb\u00e9 el teniu al github.</p> <pre><code>package docencia.xaviersastre.dam.psp.ut03;\n\nimport java.io.*;\nimport java.net.*;\n\nclass TCPServer {\n    public static void main(String argv[]) throws Exception {\n        String clientSentence;\n        String capitalizedSentence;\n        ServerSocket welcomeSocket = new ServerSocket(44014);\n\n        while (true) {\n            Socket connectionSocket = welcomeSocket.accept();\n            BufferedReader inFromClient =\n                    new BufferedReader(new InputStreamReader(connectionSocket.getInputStream()));\n            DataOutputStream outToClient = new DataOutputStream(connectionSocket.getOutputStream());\n            clientSentence = inFromClient.readLine();\n            System.out.println(\"Received: \" + clientSentence);\n            capitalizedSentence = clientSentence.toUpperCase() + '\\n';\n            outToClient.writeBytes(capitalizedSentence);\n        }\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT03/UT03Continguts.html#exemple-udp-client","title":"Exemple UDP Client","text":"<p>Aqu\u00ed teniu un exemple de com crear un client amb UDP. Tamb\u00e9 el teniu al github.</p> <pre><code>package docencia.xaviersastre.dam.psp.ut03;\n\n//UDPClient.java\n\nimport java.io.*;\nimport java.net.*;\n\nclass UDPClient\n{\n    public static void main(String args[]) throws Exception\n    {\n        BufferedReader inFromUser =\n                new BufferedReader(new InputStreamReader(System.in));\n        DatagramSocket clientSocket = new DatagramSocket();\n        InetAddress IPAddress = InetAddress.getByName(\"localhost\");\n        byte[] sendData = new byte[1024];\n        byte[] receiveData = new byte[1024];\n        String sentence = inFromUser.readLine();\n        sendData = sentence.getBytes();\n        DatagramPacket sendPacket = new DatagramPacket(sendData, sendData.length, IPAddress, 44013);\n        clientSocket.send(sendPacket);\n        DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);\n        clientSocket.receive(receivePacket);\n        String modifiedSentence = new String(receivePacket.getData());\n        System.out.println(\"FROM SERVER:\" + modifiedSentence);\n        clientSocket.close();\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT03/UT03Continguts.html#exemple-udp-server","title":"Exemple UDP Server","text":"<p>Aqu\u00ed teniu un exemple de com crear un servidor amb UDP. Tamb\u00e9 el teniu al github.</p> <pre><code>package docencia.xaviersastre.dam.psp.ut03;\n//UDPserver.java\n\nimport java.io.*;\nimport java.net.*;\n\nclass UDPServer\n{\n public static void main(String args[]) throws Exception\n    {\n       DatagramSocket serverSocket = new DatagramSocket(44013);\n          byte[] receiveData = new byte[1024];\n          byte[] sendData = new byte[1024];\n          while(true)\n             {\n                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);\n                serverSocket.receive(receivePacket);\n                String sentence = new String( receivePacket.getData());\n                System.out.println(\"RECEIVED: \" + sentence);\n                InetAddress IPAddress = receivePacket.getAddress();\n                int port = receivePacket.getPort();\n                String capitalizedSentence = sentence.toUpperCase();\n                sendData = capitalizedSentence.getBytes();\n                DatagramPacket sendPacket =\n                new DatagramPacket(sendData, sendData.length, IPAddress, port);\n                serverSocket.send(sendPacket);\n             }\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html","title":"Utilitzaci\u00f3 de t\u00e8cniques de programaci\u00f3 segura","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#introduccio","title":"Introducci\u00f3","text":"<p>En general, quan s'envia alguna cosa a trav\u00e9s de s\u00f2cols s'envia com a \u00abtext pla\u00bb, \u00e9s a dir, no sabem si hi ha alg\u00fa fent servir un sniffer a la xarxa i per tant no sabem si alg\u00fa est\u00e0 capturant les dades.</p> <p>En general, qualsevol sistema que pretengui ser segur necessitar\u00e0 usar xifrat.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#practiques-de-programacio-segura","title":"Pr\u00e0ctiques de programaci\u00f3 segura.","text":"<p>Per enviar missatges xifrats es necessita algun mecanisme o algoritme per convertir un text normal en un de m\u00e9s dif\u00edcil de comprendre.</p> <p>L'esquema general de tots els m\u00e8todes \u00e9s tenir codi com el seg\u00fcent:</p> <pre><code>public String cifrar  (String texto, String clave)  \n{  \n}\n\npublic String descifrar(String texto,String clave)\n{\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#metode-cesar","title":"M\u00e8tode C\u00e8sar","text":"<p>Si l'alfabet \u00e9s el seg\u00fcent:</p> <p>ABCDEFGHIJKLMN\u00d1OPQRSTUVWXYZ0123456789-</p> <p>BCDEFGHIJKLMN\u00d1OPQRSTUVWXYZ0123456789-A</p> <p>El missatge HOLA MUNDO, amb clau 1 seria aix\u00ed</p> <p>HOLAMUNDO IPMBNV\u00d1EP</p> <p>El desxifrat simplement implicaria el m\u00e8tode invers. Si el despla\u00e7ament \u00e9s un valor diferent d' 1, l' \u00fanic que cal fer \u00e9s construir l' alfabet trencat tantes vegades com el despla\u00e7ament</p> <p>Aquesta classe implementa un sistema de rotat b\u00e0sic per poder efectuar</p> <pre><code>public class Cifrador {\n    private String alfabeto=\n        \"ABCDEFGHIJKLMN\u00d1OPQRSTUVWXYZ\"+\n        \"0123456789 \";\n    private String alfabetoCifrado;\n    /* Dada una cadena como\n     * \"ABC\" y un n\u00famero (p.ej 2)\n     * devuelve la cadena rotada a la izq\n     * tantas veces como indique el numero,\n     * en este caso \"CAB\"\n     */\n    public String rotar(String cad,int numVeces){\n    char[] resultado=new char[cad.length()];\n    for (int i=0; i&lt;cad.length();i++){\n        int posParaExtraer=(i+numVeces)%cad.length();\n        resultado[i]=cad.charAt(posParaExtraer);\n    }\n    String cadResultado=String.copyValueOf(resultado);\n        return cadResultado;\n    }\n    public String cifrar(String mensaje, String clave){\n        String mensajeCifrado=\"\";\n        return mensajeCifrado;\n    }\n    public String descifrar(String mensajeCifrado, String clave){\n        String mensajeDescifrado=\"\";\n        return mensajeDescifrado;\n    }\n    public static void main(String[] args){\n        Cifrador c=new Cifrador();\n        String cad=c.rotar(\"ABCDEFG\", 0);\n        System.out.println(cad);\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#criptografia-de-clau-publica-i-clau-privada","title":"Criptografia de clau p\u00fablica i clau privada.","text":"<p>Els principals sistemes moderns de seguretat utilitzen dues claus d'una per xifrar i una altra per desxifrar. Aix\u00f2 es pot fer servir de diverses formes.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#principals-aplicacions-de-la-criptografia","title":"Principals aplicacions de la criptografia.","text":"<ul> <li>Missatgeria segura: tothom dona la seva clau de xifrat per\u00f2 conserva la de desxifrat. Si volem enviar un missatge a alg\u00fa agafem la seva clau de xifrat i xifrem el missatge que li enviem. Nom\u00e9s ell podr\u00e0 desxifrar-lo.</li> <li>Signatura digital: pilar del comer\u00e7 electr\u00f2nic. Permet verificar que un arxiu no ha estat modificat.</li> <li>Missatgeria segura: en aquest tipus de missatgeria s'intenta evitar que un atacant (potser amb un sniffer) aconsegueixi desxifrar els nostres missatges.</li> <li>Autenticaci\u00f3: els sistemes d' autenticaci\u00f3 intenten resoldre una q\u00fcesti\u00f3 clau en la inform\u00e0tica: verificar que una m\u00e0quina \u00e9s qui diu ser</li> </ul>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#protocols-criptografics","title":"Protocols criptogr\u00e0fics.","text":"<p>En realitat protocols criptogr\u00e0fics n'hi ha molts, i solen dividir-se en sistemes sim\u00e8trics o asim\u00e8trics.</p> <ul> <li>Els sistemes sim\u00e8trics s\u00f3n aquells basats en una funci\u00f3 que converteix un missatge en un altre missatge xifrat. Si es vol desxifrar alguna cosa s'aplica el proc\u00e9s invers amb la mateixa clau que es va utilitzar.</li> <li>Els sistemes asim\u00e8trics utilitzen una clau de xifrat i una altra de desxifrat. Encara que es tingui una clau \u00e9s matem\u00e0ticament impossible esbrinar l'altra clau pel que es pot donar a tothom una de les claus (anomenada habitualment clau p\u00fablica) i conservar l'altra (anomenada clau privada). A m\u00e9s, podem fer servir les claus per al que vulguem i per exemple en uns casos xifrarem amb la clau p\u00fablica i en d'altres tal vegada cifrem amb la clau privada.</li> </ul> <p>Ara per ara, les majors garanties les ofereixen els asim\u00e8trics, dels quals hi ha diversos sistemes. L'inconvenient que poden tenir els asim\u00e8trics \u00e9s que s\u00f3n m\u00e9s lents computacionalment.</p> <p>En aquest curs farem servir el xifrat asim\u00e8tric RSA.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#encriptacio-d-informacio","title":"Encriptaci\u00f3 d' informaci\u00f3.","text":"<p>El seg\u00fcent codi mostra com crear una classe que permeti xifrar i desxifrar textos.</p> <pre><code>public class GestorCifrado {\n    KeyPair claves;\n    KeyPairGenerator generadorClaves;\n    Cipher cifrador;\n    public GestorCifrado()\n        throws NoSuchAlgorithmException,\n    NoSuchPaddingException{\n    generadorClaves=\n        KeyPairGenerator.getInstance(\"RSA\");\n    /*Usaremos una longitud de clave\n     * de 1024 bits */\n    generadorClaves.initialize(1024);\n    claves=generadorClaves.generateKeyPair();\n    cifrador=Cipher.getInstance(\"RSA\");\n    }\n    public PublicKey getPublica(){\n    return claves.getPublic();\n    }\n    public PrivateKey getPrivada(){\n    return claves.getPrivate();\n    }\n\n    public byte[] cifrar(byte[] paraCifrar,\n        Key claveCifrado\n        ) throws InvalidKeyException,\n        IllegalBlockSizeException,\n        BadPaddingException{\n    byte[] resultado;\n    /* Se pone el cifrador en modo cifrado*/\n    cifrador.init(Cipher.ENCRYPT_MODE,\n        claveCifrado);\n    resultado=cifrador.doFinal(paraCifrar);\n    return resultado;\n    }\n\n    public byte[] descifrar(\n        byte[] paraDescifrar,\n        Key claveDescifrado)\n            throws InvalidKeyException,\n            IllegalBlockSizeException,\n            BadPaddingException{\n    byte[] resultado;\n    /* Se pone el cifrador en modo descifrado*/\n    cifrador.init(Cipher.DECRYPT_MODE,\n        claveDescifrado);\n    resultado=cifrador.doFinal(paraDescifrar);\n    return resultado;\n    }\n\n\n\n    public static void main(String[] args)\n        throws NoSuchAlgorithmException,\n        NoSuchPaddingException,\n        InvalidKeyException,\n        IllegalBlockSizeException,\n        BadPaddingException,\n        UnsupportedEncodingException\n    {\n    GestorCifrado gestorCifrado=\n        new GestorCifrado();\n    String mensajeOriginal=\"Hola mundo\";\n    Key clavePublica=gestorCifrado.getPublica();\n\n    byte[] mensajeCifrado=\n        gestorCifrado.cifrar(\n            mensajeOriginal.getBytes(),\n            clavePublica\n    );\n    String cadCifrada=\n        new String(mensajeCifrado, \"UTF-8\");\n\n    System.out.println\n        (\"Cadena original:\"+mensajeOriginal);\n    System.out.println\n        (\"Cadena cifrada:\"+cadCifrada);\n\n    /* Cogemos la cadCifrada y la desciframos\n     * con la otra clave */\n    Key clavePrivada;\n    clavePrivada=gestorCifrado.getPrivada();\n    byte[] descifrada=\n        gestorCifrado.descifrar(\n            mensajeCifrado,clavePrivada);\n    String mensajeDescifrado;\n    /* E imprimimos el mensaje*/\n    mensajeDescifrado=\n        new String(descifrada, \"UTF-8\");\n    System.out.println(\n        \"El mensaje descifrado es:\"+\n            mensajeDescifrado);\n    }\n}\n</code></pre> <p>Advert\u00e8ncia</p> <p>Els objectes que xiquen i desxifran en Java utilitzen estrictament objectes <code>byte[]</code>, que s\u00f3n els que hem de manejar sempre. Les conversions a <code>String</code> les fem nosaltres per poder visualitzar resultats.Lorem ipsum dolor sit amet, consectetur</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#treballant-amb-blocs-llargs","title":"Treballant amb blocs llargs","text":"<p>En general els diferents m\u00e8todes criptogr\u00e0fics no sempre poden treballar amb blocs tot el llargs que vulguem, aix\u00ed que si es necessita \u00abxifrar una cadena llarga\u00bb \u00e9s molt probable que haguem d'anar \u00abxifrant bloc a bloc\u00bb.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#protocols-segurs-de-comunicacions","title":"Protocols segurs de comunicacions.","text":"<p>En general, ara que ja coneixem sockets, l'\u00fas de servidors i clients i l'\u00fas de la criptografia de clau asim\u00e8trica ja \u00e9s possible crear aplicacions que es comuniquin de forma molt segura.</p> <p>En general, tot protocol que vulguem implementar far\u00e0 aquests passos.</p> <ol> <li>Tot client genera la seva parella de claus.</li> <li>Tot servidor genera la seva parella de claus.</li> <li>Quan un client es connecti a un servidor, li envia la seva clau de xifrat i conserva la de desxifrat.</li> <li>Quan un servidor rep la connexi\u00f3 d' un client rep la clau de xifrat d' aquest client.</li> <li>El servidor envia la seva clau p\u00fablica al client.</li> <li>Ara client i servidor poden enviar missatges a l'altre amb la garantia que nom\u00e9s servidor i client respectivament poden desxifrar.</li> </ol> <p>En realitat es pot assegurar m\u00e9s el proc\u00e9s fent que en el pas 5 el servidor cifre la seva pr\u00f2pia clau p\u00fablica amb la clau p\u00fablica del client. D'aquesta manera, fins i tot encara que alg\u00fa rob\u00e9s la clau privada del client tampoc tindria massa, ja que hauria de robar la clau privada del servidor.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#infraestructura-de-clau-publica-pki","title":"Infraestructura de clau p\u00fablica (PKI)","text":"<p>Per garantir la seguretat cal que entri un tercer jugador en l' intercanvi de claus entre clients i servidors. Aquest tercer individu s\u00f3n les autoritats de certificaci\u00f3 .</p> <p></p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#programacio-d-aplicacions-amb-comunicacions-segures","title":"Programaci\u00f3 d' aplicacions amb comunicacions segures.","text":"<p>Per fortuna Java disposa de classes ja prefabricades que faciliten enormement el que dues aplicacions de forma segura a trav\u00e9s d'una xarxa. S' han de considerar els punts seg\u00fcents:</p> <ul> <li>El servidor ha de tenir el seu propi certificat. Si no el tenim, es pot generar primer una parella de claus amb l'eina <code>keytool</code>, com es mostra en la figura adjunta. L'eina guardar\u00e0 la parella de claus en un magatzem (el qual t\u00e9 la seva pr\u00f2pia clau). Despr\u00e9s generarem un certificat a partir d'aquesta parella amb <code>keytool -export -file certificadoservidor.cer -keystore magatzems</code>.</li> <li>El codi del servidor necessitar\u00e0 indicar el fitxer on s' emmagatzemen les claus i la clau per accedir a aquest magatzem.</li> <li>El client necessita indicar que confia en el certificat del servidor. Aquest certificat del servidor pot estar guardat (per exemple) al magatzem de claus del client.</li> <li>Tot i que no sol fer-se tamb\u00e9 podria fer-se a la inversa i obligar el client a tenir un certificat que el servidor pogu\u00e9s importar, cosa que augmentaria la seguretat.</li> </ul> <p></p> <p>Els passos desglossats impliquen executar aquests comandaments en el servidor:</p> <pre><code># El servidor genera una pareja de claves que se almacena en un\n#fichero llamado \"clavesservidor\". Dentro del fichero se indica\n#un alias para poder referirnos a esa clave f\u00e1cilmente\nkeytool -genkeypair -keyalg RSA\n     -alias servidor -keystore clavesservidor\n\n#El servidor genera su \"certificado\", es decir un fichero que\n#de alguna forma indica quien es \u00e9l. El certificado se almacena\n#en un fichero llamado clavesservidor y a partir de \u00e9l queremos\n#generar el certificado de un alias que tiene que haber llamado servidor\nkeytool --exportcert -alias servidor\n     -file servidor.cer -keystore clavesservidor\n</code></pre> <p>En el client donarem aquests passos:</p> <pre><code>#Se genera una pareja de claves (en realidad no nos hace falta solo\n#queremos tener un almac\u00e9n de claves.\nkeytool -genkeypair -keyalg RSA -alias cliente -keystore clavescliente\n\n#Se importa el certificado del servidor indicando que pertenece a\n#la lista de certificados confiables.\nkeytool -importcert -trustcacerts -alias servidor -file servidor.cer -keystore clavescliente\n</code></pre> <p>Un cop creats els fitxers inicials s'han de donar els seg\u00fcents passos a Java (servidor i client van per separat):</p> <ol> <li>El servidor ha de carregar el seu magatzem de claus (el fitxer <code>clausservidor</code>)</li> <li>Aquest magatzem (carregat en un objecte Java anomenat <code>KeyStore</code>), es far\u00e0 servir per crear un gestor de claus (objecte <code>KeyManager</code>), el qual s'obt\u00e9 a partir d'una \u00abf\u00e0brica\u00bb anomenada <code>KeyManagerFactory</code>.</li> <li>Es crear\u00e0 un context SSL (objecte <code>SSLContext</code>) a partir de la f\u00e0brica comentada.</li> <li>L'objecte <code>SSLContext</code> permetr\u00e0 crear una f\u00e0brica de sockets que ser\u00e0 la que finalment ens permeti tenir un <code>SSLServerSocket</code>, \u00e9s a dir un socket de servidor que far\u00e0 servir xifrat.</li> </ol> <p>El codi Java del servidor seria una cosa aix\u00ed: <pre><code>public OtroServidor (String rutaAlmacen, String claveAlmacen){\n        this.rutaAlmacen=rutaAlmacen;\n        this.claveAlmacen=claveAlmacen;\n    }\n\n    public SSLServerSocket getServerSocketSeguro()\n            throws KeyStoreException, NoSuchAlgorithmException,\n            CertificateException, IOException,\n            KeyManagementException, UnrecoverableKeyException\n    {\n        SSLServerSocket serverSocket=null;\n        /* Paso 1, se carga el almac\u00e9n de claves*/\n        FileInputStream fichAlmacen=\n                new FileInputStream(this.rutaAlmacen);\n        /* Paso 1.1, se crea un almac\u00e9n del tipo por defecto\n         * que es un JKS (Java Key Store), a d\u00eda de hoy*/\n        KeyStore almacen=KeyStore.getInstance(KeyStore.getDefaultType());\n        almacen.load(fichAlmacen, claveAlmacen.toCharArray());\n        /* Paso 2: obtener una f\u00e1brica de KeyManagers que ofrezcan\n         * soporte al algoritmo por defecto*/\n        KeyManagerFactory fabrica=\n                KeyManagerFactory.getInstance(\n                KeyManagerFactory.getDefaultAlgorithm());\n        fabrica.init(almacen, claveAlmacen.toCharArray());\n        /* Paso 3:Intentamos obtener un contexto SSL\n         * que ofrezca soporte a TLS (el sistema m\u00e1s\n         * seguro hoy d\u00eda) */\n        SSLContext contextoSSL=SSLContext.getInstance(\"TLS\");\n        contextoSSL.init(fabrica.getKeyManagers(), null, null);\n        /* Paso 4: Se obtiene una f\u00e1brica de sockets que permita\n         * obtener un SSLServerSocket */\n        SSLServerSocketFactory fabricaSockets=\n                contextoSSL.getServerSocketFactory();\n        serverSocket=\n            (SSLServerSocket)\n                fabricaSockets.createServerSocket(puerto);\n        return serverSocket;\n    }\n    public void escuchar()\n    throws KeyManagementException, UnrecoverableKeyException,\n        KeyStoreException, NoSuchAlgorithmException,\n        CertificateException, IOException\n    {\n        SSLServerSocket socketServidor=this.getServerSocketSeguro();\n        BufferedReader entrada;\n        PrintWriter salida;\n        while (true){\n            Socket connRecibida=socketServidor.accept();\n            System.out.println(\"Conexion segura recibida\");\n            entrada=\n            new BufferedReader(\n            new InputStreamReader(connRecibida.getInputStream()));\n            salida=\n            new PrintWriter(\n                new OutputStreamWriter(\n                connRecibida.getOutputStream()));\n            String linea=entrada.readLine();\n            salida.println(linea.length());\n            salida.flush();\n        }\n    }\n</code></pre></p> <p>En el client s' han de fer alguns passos semblants:</p> <ol> <li>En primer lloc es carrega el magatzem de claus del client (que cont\u00e9 el certificat del servidor i que \u00e9s la clau per poder \u00abautenticar\u00bb el servidor)</li> <li>El magatzem del client es far\u00e0 servir per crear un \u00abgestor de confian\u00e7a\u00bb (<code>TrustManager</code>) que Java far\u00e0 servir per determinar si pot confiar o no en una connexi\u00f3. Usarem un <code>TrustManagerFactory</code> que far\u00e0 servir el magatzem del client per crear objectes que puguin gestionar la confian\u00e7a.</li> <li>Es crear\u00e0 un context SSL (<code>SSLContext</code>) que es basar\u00e0 en els <code>TrustManager</code> que pugui crear la f\u00e0brica.</li> <li>A partir del context SSL el client ja pot crear un socket segur (<code>SSLSocket</code>) que pot fer servir per connectar amb el servidor de forma segura.</li> </ol> <p>El codi del client seria una cosa aix\u00ed:</p> <pre><code>public class OtroCliente {\n    String almacen=\"/home/usuario/clavescliente\";\n    String clave=\"abcdabcd\";\n    SSLSocket conexion;\n    public OtroCliente(String ip, int puerto)\n            throws UnknownHostException, IOException,\n            KeyManagementException, NoSuchAlgorithmException,\n            KeyStoreException, CertificateException{\n\n        conexion=this.obtenerSocket(ip,puerto);\n    }\n    /* Env\u00eda un mensaje de prueba para verificar que la conexi\u00f3n\n     * SSL es correcta */\n    public void conectar() throws IOException{\n        System.out.println(\"Iniciando..\");\n        BufferedReader entrada;\n        PrintWriter salida;\n        entrada=new BufferedReader(new InputStreamReader(conexion.getInputStream()));\n        salida=new PrintWriter(new OutputStreamWriter(conexion.getOutputStream()));\n        /* De esta linea se intenta averiguar la longitud*/\n        salida.println(\"1234567890\");\n        salida.flush();\n        /* Si todo va bien, el servidor nos contesta el numero*/\n        String num=entrada.readLine();\n        int longitud=Integer.parseInt(num);\n        System.out.println(\"La longitud devuelta es:\"+longitud);\n\n    }\n    public SSLSocket obtenerSocket(String ip, int puerto)\n            throws KeyStoreException, NoSuchAlgorithmException,\n            CertificateException, IOException, KeyManagementException\n    {\n        System.out.println(\"Obteniendo socket\");\n        SSLSocket socket=null;\n        /* Paso 1: se carga al almac\u00e9n de claves\n         * (que recordemos debe contener el\n         * certificado del servidor)*/\n        KeyStore almacenCliente=KeyStore.getInstance(KeyStore.getDefaultType());\n        FileInputStream ficheroAlmacenClaves=\n                new FileInputStream( this.almacen );\n        almacenCliente.load(ficheroAlmacenClaves, clave.toCharArray());\n        System.out.println(\"Almacen cargado\");\n        /* Paso 2, crearemos una fabrica de gestores de confianza\n         * que use el almac\u00e9n cargado antes (que contiene el\n         * certificado del servidor)\n         */\n        TrustManagerFactory fabricaGestoresConfianza=\n                TrustManagerFactory.getInstance(\n                        TrustManagerFactory.getDefaultAlgorithm());\n        fabricaGestoresConfianza.init(almacenCliente);\n        System.out.println(\"Fabrica Trust creada\");\n        /*Paso 3: se crea el contexto SSL, que ofrezca\n         * soporte al algoritmo TLS*/\n        SSLContext contexto=SSLContext.getInstance(\"TLS\");\n        contexto.init(\n                null, fabricaGestoresConfianza.getTrustManagers(), null);\n        /* Paso 4: Se crea un socket que conecte con el servidor*/\n        System.out.println(\"Contexto creado\");\n        SSLSocketFactory fabricaSockets=\n                contexto.getSocketFactory();\n        socket=(SSLSocket) fabricaSockets.createSocket(ip, puerto);\n        /* Y devolvemos el socket*/\n        System.out.println(\"Socket creado\");\n        return socket;\n    }\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#signat-d-aplicacions","title":"Signat d' aplicacions","text":"<p>Utilitzant la criptografia de clau p\u00fablica \u00e9s possible \u00absignar\u00bb aplicacions. El signat \u00e9s un mecanisme que permet a l'usuari d'una aplicaci\u00f3 el verificar que l'aplicaci\u00f3 no ha estat alterada des que el programador la va crear (virus o programes malignes, personal descontent amb l'empresa, etc...).</p> <p>Abans d' efectuar el signat s' ha de disposar d' un parell de claus generades amb l' eina <code>keytool</code> esmentada anteriorment. Suposem que el magatzem de claus est\u00e0 creat i que hi ha un o diversos \u00e0lies creats . El proc\u00e9s de signat \u00e9s el seg\u00fcent:</p> <ol> <li>Crear l' aplicaci\u00f3, que pot estar formada per un conjunt de classes per\u00f2 que en \u00faltima inst\u00e0ncia tindr\u00e0 un <code>main</code>.</li> <li>Empaquetar l'aplicaci\u00f3 amb <code>eixe Aplicacion.jar com.ies.Aplicacion *</code>. Aquest comandament crea un fitxer (<code>f</code>) JAR en el qual el punt d'entrada (<code>e</code>) \u00e9s la classe <code>com.ies.Aplicacion</code> (que \u00e9s la que tindr\u00e0 el <code>main</code>).</li> <li>Es pot comprovar que l'aplicaci\u00f3 dins del JAR s'executa correctament amb <code>java -jar Aplicacion.jar</code>.</li> <li>Ara es pot executar <code>jarsigner -keystore &lt;ruta-magatzem&gt; Aplicacion.jar &lt;\u00e0lies&gt;</code>.</li> </ol> <p>Amb aquests passos es t\u00e9 una aplicaci\u00f3 signada que l'usuari pot verificar si aix\u00ed ho desitja. De fet, si s'extreu el contingut del JAR amb <code>jar -xf Aplicacion.jar</code> s'extreuen els arxius <code>.class</code> i un fitxer <code>META-INF/Manifest</code> que es pot obrir amb un editor per veure que realment est\u00e0 signat.</p> <p>Perqu\u00e8 altres persones puguin comprovar que la nostra aplicaci\u00f3 \u00e9s correcta els programadors haurem d'exportar un certificat que els usuaris puguin importar per fer el verificat. Recordem que el comandament \u00e9s:</p> <p><code>keytool -exportcert -keystore ...\\Magatzem.store -file Programador.cer -\u00e0lies Programador</code></p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#verificat-d-aplicacions","title":"Verificat d' aplicacions","text":"<p>Si ara un altre usuari desitja executar la nostra aplicaci\u00f3 haur\u00e0 d'importar el nostre certificat. El proc\u00e9s de verificat \u00e9s simple:</p> <ol> <li>L'usuari importa el certificat.</li> <li>Ara que t\u00e9 el certificat pot comprovar l'aplicaci\u00f3 amb <code>jarsigner -verify -keystore &lt;ruta-magatzem&gt; Aplicacion.jar &lt;alias_del_programador&gt;</code></li> </ol> <p>El comandament haur\u00e0 de respondre amb alguna cosa com <code>ara jar verified</code>. Tanmateix si no tenim un certificat signat per alguna autoritat de certificaci\u00f3 (CA) l'eina es queixar\u00e0 que alguns criteris de seguretat no es compleixen.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#exercici","title":"Exercici","text":"<p>Intenta extreure l'arxiu JAR i reempla\u00e7a el <code>.class</code> per alguna altra classe. Torna a crear l'arxiu . JAR i torna a intentar verificar-ho, qu\u00e8 passa?</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#recordatori","title":"Recordatori","text":"<p>Hem fet el proc\u00e9s de signat i verificat amb certificats autofirmats, la qual cosa \u00e9s \u00fatil per practicar per\u00f2 completament in\u00fatil des del punt de vista de la seguretat. Perqu\u00e8 un certificat sigui segur hem de fer que pr\u00e8viament alguna autoritat de certificaci\u00f3 ens ho signi primer (per a la qual cosa sol ser habitual haver de pagar).</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/ProgramacioSegura.html#politica-de-seguretat","title":"Pol\u00edtica de seguretat.","text":"<p>Java inclou un mecanisme per definir pol\u00edtiques de seguretat. La definici\u00f3 oficial de Java per a una pol\u00edtica \u00e9s objecte que especifica quins permisos estan disponibles per al codi en funci\u00f3 del seu origen i de l'usuari amb el qual s'executen. Aquest origen pot ser els diversos directoris del sistema operatiu o fins i tot adreces URL.</p> <p>Cal destacar que tot el que s'esmenta aqu\u00ed no funciona si l'usuari t\u00e9 acc\u00e9s al sistema i pot executar l'int\u00e8rpret de Java sense restriccions. \u00c9s a dir, es necessita el treball d' un administrador de sistemes per restringir la manera com l' usuari executa el codi.</p> <p>Suposem llavors que estem en un entorn segur on els programes Java s'executen utilitzant un gestor de seguretat, \u00e9s a dir, es llancen executant <code>java -Djava.security.manager Classe</code>. En principi, els programes no podran fer gaires coses, com per exemple, connectar-se a Internet o llegir un fitxer que no estigui en el mateix directori de la classe.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html","title":"Html to markdown","text":"<p>DAM_PSP_06         document.body.className+=\" js\"</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#dam_psp_06","title":"DAM_PSP_06","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#tecnicas-de-programacion-segura","title":"T\u00e9cnicas de programaci\u00f3n segura.","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#caso-practico","title":"Caso pr\u00e1ctico","text":"<p>Juan esta terminado de realizar una aplicaci\u00f3n.</p> <p>Mar\u00eda: Hola Juan. Ya he visto que est\u00e1s terminado la aplicaci\u00f3n para la empresa. Recientemente hemos tenido bastantes problemas con la seguridad en las aplicaciones desarrolladas porque cada vez es m\u00e1s frecuente sufrir ataques inform\u00e1ticos.</p> <p>Juan: \u00bfY qu\u00e9 tengo que tener en cuenta? Pensaba que la seguridad inform\u00e1tica era una funci\u00f3n de los administradores de la red y de los servidores. Ya sabes, cortafuegos, gesti\u00f3n de usuarios,\u2026</p> <p>Mar\u00eda. Una parte muy importante de la seguridad de la empresa reside en la red y en los servidores. Pero ten en cuenta, que cuando el usuario puede ejecutar la aplicaci\u00f3n, la seguridad del sistema queda en la aplicaci\u00f3n. Tenemos que tener mucho cuidado en la seguridad de las aplicaciones que desarrollamos. Mira, a continuaci\u00f3n, vamos a ver una introducci\u00f3n a la seguridad inform\u00e1tica haciendo hincapi\u00e9 en las aplicaciones y luego entraremos en m\u00e1s detalle, en la programaci\u00f3n de aplicaciones seguras.</p> <p></p> <p>Ministerio de Educaci\u00f3n y Formaci\u00f3n Profesional (Dominio p\u00fablico)</p> <p>Materiales formativos de FP Online propiedad del Ministerio y Formaci\u00f3n Profesional.</p> <p>Aviso Legal</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#1-introduccion-a-la-seguridad-informatica","title":"1.- Introducci\u00f3n a la seguridad Inform\u00e1tica.","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#caso-practico_1","title":"Caso pr\u00e1ctico","text":"<p>Mar\u00eda: Mira Juan. Ahora vamos a ver los conceptos m\u00e1s importantes sobre la seguridad inform\u00e1tica, para saber cu\u00e1ndo un sistema o aplicaci\u00f3n es seguro. Despu\u00e9s, nos centraremos en la seguridad de las aplicaciones, para saber como programador qu\u00e9 recomendaciones tenemos que tener en cuenta.</p> <p>Juan: Ok, estupendo. Estoy deseando empezar\u2026</p> <p></p> <p>Seg\u00fan la Real Academia Espa\u00f1ola, seguridad es \"la cualidad de seguro, es decir, de estar libre y exento de todo da\u00f1o, peligro o riesgo\". En inform\u00e1tica, como en tantas facetas de la vida, la seguridad entendida seg\u00fan la definici\u00f3n anterior es pr\u00e1cticamente imposible de conseguir, por lo que se ha relajado acerc\u00e1ndose m\u00e1s al concepto de fiabilidad; se entiende un sistema seguro como aquel que se comporta como se espera de \u00e9l.</p> <p>De los sistemas inform\u00e1ticos, ya sean sistemas operativos, servicios o aplicaciones, se dice que son seguros si cumplen las siguientes caracter\u00edsticas:</p> <ul> <li>Confidencialidad. Requiere que la informaci\u00f3n sea accesible \u00fanicamente para las entidades autorizadas.</li> <li>Integridad. Requiere que la informaci\u00f3n s\u00f3lo pueda ser modificada por las entidades autorizadas. La modificaci\u00f3n incluye escritura, cambio, borrado, creaci\u00f3n y reenv\u00edo de los mensajes transmitidos.</li> <li>No repudio. Ofrece protecci\u00f3n a un usuario frente a otro que niegue posteriormente que se realiz\u00f3 cierta comunicaci\u00f3n. El no repudio de origen protege al receptor de que el emisor niegue haber enviado el mensaje, mientras que el no repudio de recepci\u00f3n protege al emisor de que el receptor niegue haber recibido el mensaje. Las firmas digitales constituyen el mecanismo m\u00e1s empleado para este fin.</li> <li>Disponibilidad. Requiere que los recursos del sistema inform\u00e1tico est\u00e9n disponibles para las entidades autorizadas cuando los necesiten.</li> </ul> <p>El tratamiento de los posibles incidentes de seguridad exige que toda organizaci\u00f3n tenga definida una pol\u00edtica de seguridad, cuya funci\u00f3n sea establecer las responsabilidades y reglas necesarias para evitar amenazas y minimizar los efectos de \u00e9stas. Lo primero que se debe realizar es identificar qu\u00e9 queremos proteger.</p> <p>Desde el punto de vista inform\u00e1tico, existen tres tipos de elementos que pueden sufrir amenazas:</p> <ul> <li>hardware,</li> <li>software y</li> <li>datos.</li> </ul> <p>El m\u00e1s sensible, y en el que se basa casi toda la literatura sobre seguridad, son los datos, ya que es el \u00fanico elemento que depende exclusivamente de la organizaci\u00f3n. Es decir, tanto el hardware como el software, si en la peor de las situaciones se pierden, siempre se pueden adquirir y/o instalarlos; pero los datos pertenecen a la organizaci\u00f3n y nadie puede, en el caso de p\u00e9rdida, proporcionarlos. Sin embargo, la seguridad se debe entender a todos los niveles y aplicarla a todos los elementos.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#autoevaluacion","title":"Autoevaluaci\u00f3n","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#pregunta","title":"Pregunta","text":"<p>\u00bfQu\u00e9 caracter\u00edstica no es propia de un sistema seguro?</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#respuestas","title":"Respuestas","text":"<p>Opci\u00f3n 1</p> <p>Integridad.</p> <p>Opci\u00f3n 2</p> <p>Disponibilidad.  </p> <p>Opci\u00f3n 3</p> <p>Rapidez.</p> <p>Opci\u00f3n 4</p> <p>No repudio.  </p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#retroalimentacion","title":"Retroalimentaci\u00f3n","text":"<p>No es correcto, repasa los conocimientos de este apartado.</p> <p>No, repasa los conocimientos del apartado.</p> <p>Correcto.</p> <p>Incorrecto, repasa el apartado.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#solucion","title":"Soluci\u00f3n","text":"<ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#11-amenazas-de-seguridad","title":"1.1.- Amenazas de seguridad.","text":"<p>Se entiende por amenaza una condici\u00f3n del entorno del sistema de informaci\u00f3n (por ejemplo: persona, m\u00e1quina) que, dada una oportunidad, podr\u00eda dar lugar a que se produjese una violaci\u00f3n de la seguridad (confidencialidad, integridad, disponibilidad o uso leg\u00edtimo).</p> <p>Las amenazas de seguridad pueden caracterizarse modelando el sistema como un flujo de informaci\u00f3n; desde una fuente, como por ejemplo un fichero o un equipo, a un destino, como por ejemplo otro fichero o un usuario.</p> <p>Tal y como puede ver en la figura las cuatro categor\u00edas generales de amenazas o ataques son las siguientes:</p> <ul> <li>Interrupci\u00f3n. Un recurso del sistema es destruido o deja de estar disponible. \u00c9ste es un ataque contra la disponibilidad. Un ejemplo de ataque es la destrucci\u00f3n de un elemento hardware, como un disco duro, cortar una l\u00ednea de comunicaci\u00f3n o deshabilitar el sistema de gesti\u00f3n de ficheros.</li> <li>Intercepci\u00f3n. Una entidad no autorizada consigue acceso a un recurso. \u00c9ste es un ataque contra la confidencialidad. La entidad no autorizada puede ser una persona, un programa o un ordenador. Un ejemplo de este ataque es escuchar una l\u00ednea para registrar los datos que circulen por la red y la copia il\u00edcita de ficheros o programas (intercepci\u00f3n de datos), o bien la lectura de las cabeceras de paquetes para desvelar la identidad de uno o m\u00e1s de los usuarios implicados en la comunicaci\u00f3n observada ilegalmente (intercepci\u00f3n de identidad).</li> <li>Modificaci\u00f3n. Una entidad no autorizada no s\u00f3lo consigue acceder a un recurso, sino que es capaz de manipularlo. \u00c9ste es un ataque contra la integridad. Un ejemplo de este ataque es alterar un programa para que funcione de forma diferente, modificar el contenido de un fichero o de un mensaje transferido por red.</li> <li>Fabricaci\u00f3n. Un ataque contra la autenticidad tiene lugar cuando una entidad no autorizada inserta objetos falsificados en el sistema. Un ejemplo de este ataque es la inserci\u00f3n de mensajes espurios (mensajes basura) en una red o a\u00f1adir registros a un fichero.</li> </ul>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#autoevaluacion_1","title":"Autoevaluaci\u00f3n","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#pregunta_1","title":"Pregunta","text":"<p>\u00bfEn qu\u00e9 categor\u00eda de amenaza se clasifica un programa para escuchar el tr\u00e1fico de la red?</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#respuestas_1","title":"Respuestas","text":"<p>Opci\u00f3n 1</p> <p>Interrupci\u00f3n.</p> <p>Opci\u00f3n 2</p> <p>Intercepci\u00f3n.  </p> <p>Opci\u00f3n 3</p> <p>Modificaci\u00f3n.  </p> <p>Opci\u00f3n 4</p> <p>Fabricaci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#retroalimentacion_1","title":"Retroalimentaci\u00f3n","text":"<p>No, repasa los conocimientos del apartado.  </p> <p>Correcto.</p> <p>Incorrecto.</p> <p>No es correcto, repasa de nuevo.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#solucion_1","title":"Soluci\u00f3n","text":"<ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#12-ataques","title":"1.2.- Ataques.","text":"<p>Los ataques se pueden, clasificar de forma \u00fatil en t\u00e9rminos de ataques pasivos y ataques activos.</p> <ul> <li> <p>Ataques pasivos. En los ataques pasivos, el atacante no altera la comunicaci\u00f3n, sino que \u00fanicamente la escucha o monitoriza para obtener informaci\u00f3n de lo que est\u00e1 siendo transmitido. El principal uso que se suele realizar de los ataques pasivos es para ver el tr\u00e1fico de un equipo, obtener las contrase\u00f1as de red, etc.</p> <p>Los ataques pasivos son muy dif\u00edciles de detectar, ya que no provocan ninguna alteraci\u00f3n de los datos. Sin embargo, es posible evitar su \u00e9xito mediante el cifrado de la informaci\u00f3n.</p> </li> <li> <p>Ataques activos. Estos ataques implican alg\u00fan tipo de modificaci\u00f3n del flujo de datos transmitido o la creaci\u00f3n de un falso flujo de datos. Algunas formas puede ser: suplantaci\u00f3n de identidad (el intruso se hace pasa por un usuario leg\u00edtimo), reactuaci\u00f3n (se reenv\u00edan mensajes leg\u00edtimos), modificaci\u00f3n de mensajes, denegaci\u00f3n de servicio (se satura un servicio para que no pueda ser utilizado correctamente), etc.</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas","title":"Para saber m\u00e1s","text":"<p>Si deseas m\u00e1s informaci\u00f3n sobre los diferentes tipos de ataques inform\u00e1ticos puedes consultar el siguiente enlace:</p> <p>Tabla de ataques inform\u00e1ticos</p> <p>Resumen textual alternativo</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#13-vulnerabilidades-en-el-software","title":"1.3.- Vulnerabilidades en el software.","text":"<p>Debido al auge de Internet, las vulnerabilidades de software son uno de los mayores problemas de la inform\u00e1tica actualmente. Las aplicaciones actuales cada vez tratan con m\u00e1s datos (personales, bancarios, etc.) y por eso, cada vez es m\u00e1s necesario que las aplicaciones sean seguras.</p> <p>Una vulnerabilidad de software puede definirse como un fallo o hueco de seguridad detectado en alg\u00fan programa o sistema inform\u00e1tico que puede ser utilizado para entrar en los sistemas de forma no autorizada.</p> <p>De una forma sencilla, se trata de un fallo de dise\u00f1o de alg\u00fan programa, que puede tener instalado en su equipo, y que permite a los atacantes realizar una acci\u00f3n maliciosa. Si nos centramos en una aplicaci\u00f3n, es posible que ese fallo de seguridad permita a un usuario que acceda o manipule a una informaci\u00f3n a la que no est\u00e9 autorizado.</p> <p>Pero el gran problema de los agujeros de seguridad reside en la forma en que son detectados. Cuando una aplicaci\u00f3n tiene una cierta envergadura, se encarga el trabajo de detectar fallos de seguridad a usuarios externos para que utilicen la aplicaci\u00f3n normalmente y/o a expertos de seguridad para que analicen a fondo la seguridad de la aplicaci\u00f3n.</p> <p>A pesar de que antes de lanzar una aplicaci\u00f3n al mercado se intentan descubrir y solucionar todos sus fallos de seguridad, en muchas ocasiones se descubren despu\u00e9s y por lo tanto, es necesario informar a los usuarios y permitir que se actualicen a la \u00faltima versi\u00f3n que se encuentre libre de fallos.</p> <p>Para poder garantizar la seguridad de una aplicaci\u00f3n en Java nos vamos a centrar en dos pilares:</p> <ul> <li>Seguridad interna de aplicaci\u00f3n. A la hora de realizar la aplicaci\u00f3n se debe programar de una forma robusta para que comporte tal y como esperamos de ella. Algunas de las t\u00e9cnicas que podemos implementar, y que veremos en el segundo apartado, es la gesti\u00f3n de excepciones, validaciones de entradas de datos y la utilizaci\u00f3n de los ficheros de registro.</li> <li>Pol\u00edticas de acceso. Una vez que tenemos una aplicaci\u00f3n \"segura\" es importante definir las pol\u00edticas de acceso para determinar las acciones que puede realizar la aplicaci\u00f3n en nuestro equipo. Por ejemplo, podemos indicar que la aplicaci\u00f3n pueda leer los ficheros de una determinada carpeta, enviar datos a trav\u00e9s de Internet a un determinado equipo, etc. De esta forma, aunque un usuario malicioso utilice la aplicaci\u00f3n de forma incorrecta, se limita el impacto de su ataque. As\u00ed, si hemos indicado que s\u00f3lo puede leer los ficheros de la carpeta <code>c:/datos</code>, el atacante nunca podr\u00e1 modificar esos datos o leer los ficheros de otro directorio.</li> </ul>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#autoevaluacion_2","title":"Autoevaluaci\u00f3n","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#pregunta_2","title":"Pregunta","text":"<p>\u00bfQu\u00e9 permiten las pol\u00edticas de acceso?:</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#respuestas_2","title":"Respuestas","text":"<p>Opci\u00f3n 1</p> <p>Indicar los recursos a los que puede acceder una determinada aplicaci\u00f3n.</p> <p>Opci\u00f3n 2</p> <p>Gestionar los usuarios del sistema.</p> <p>Opci\u00f3n 3</p> <p>Permite el acceso del usuario al sistema de forma correcta.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#retroalimentacion_2","title":"Retroalimentaci\u00f3n","text":"<p>Correcto.</p> <p>No es correcto, repasa los conocimientos del apartado.</p> <p>Incorrecto.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#solucion_2","title":"Soluci\u00f3n","text":"<ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#2-programacion-segura","title":"2.- Programaci\u00f3n segura.","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#caso-practico_2","title":"Caso pr\u00e1ctico","text":"<p>Juan: Hola Mar\u00eda, ya tengo claro los conceptos b\u00e1sicos de seguridad y estoy deseando poder empezar a utilizarlos en mis programas. \u00bfPuedes orientarme?</p> <p>Mar\u00eda: Claro que s\u00ed Juan. Mira, para tener aplicaciones en Java seguras, primero tenemos que tener en cuenta unas medidas b\u00e1sicas de seguridad que nos van a permitir mejorar la seguridad de nuestras aplicaciones. Por ejemplo, las excepciones permiten que el c\u00f3digo se ejecute siempre correctamente, la validaci\u00f3n de datos evita ataques y garantiza la consistencia de la informaci\u00f3n\u2026 Vamos a ir viendo todo esto para que puedas utilizarlo en tus programas.</p> <p>Juan: \u00a1Estupendo!</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#21-excepciones-i","title":"2.1.- Excepciones (I).","text":"<p>Una excepci\u00f3n es un evento que ocurre durante de la ejecuci\u00f3n de un programa e interrumpe el flujo normal de las instrucciones.</p> <p>Por ejemplo, si desea crear una aplicaci\u00f3n que lea un archivo y lo env\u00ede por la red, algunas de las posibles excepciones son: que el dispositivo donde se almacena el fichero no est\u00e9 disponible, que no tenga permisos de lectura sobre el fichero, que el fichero no exista, que la red no est\u00e9 disponible, etc.</p> <p>Es importante gestionar las posibles excepciones que puedan ocurrir en el programa para evitar cualquier tipo de fallos en su ejecuci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_1","title":"Para saber m\u00e1s","text":"<p>En el siguiente enlace tienes m\u00e1s informaci\u00f3n, a nivel te\u00f3rico, sobre las excepciones.</p> <p>Manejo de excepciones (Wikipedia).</p> <p></p> <p>En Java existen varios tipos fundamentales de excepciones:</p> <ul> <li>Error. Excepciones que indican problemas muy graves, que suelen ser no recuperables y no deben casi nunca ser capturadas.</li> <li>Exception. Excepciones no definitivas, pero que se detectan fuera del tiempo de ejecuci\u00f3n.</li> <li>RuntimeException. Excepciones que se dan durante la ejecuci\u00f3n del programa.</li> </ul>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_2","title":"Para saber m\u00e1s","text":"<p>En los siguientes enlaces tienes m\u00e1s informaci\u00f3n sobre las excepciones en java.</p> <p>Excepciones en Java. (0.12 MB) Resumen textual alternativo</p> <p>Excepciones en Java (presentaci\u00f3n en formato pdf)</p> <p>Excepciones en Java con ejemplos (0.27 MB)</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#211-excepciones-ii","title":"2.1.1.- Excepciones (II).","text":"<p> De forma general, para incluir el manejo de excepciones en un programa hay que realizar los siguientes pasos:</p> <ul> <li>Dentro de un bloque <code>try</code> inserte el flujo normal de las instrucciones.</li> <li>Estudie los errores que pueden producirse durante la ejecuci\u00f3n de las instrucciones y compruebe que cada uno de ellos provoca una excepci\u00f3n.</li> <li>Capture y gestione las excepciones en bloques <code>catch</code>.</li> </ul> <p>Cuando el programador ejecuta un c\u00f3digo que puede provocar una excepci\u00f3n (por ejemplo: una lectura o escritura de un fichero), debe incluir este fragmento de c\u00f3digo dentro de un bloque <code>try</code>:</p> <pre><code>try { // C\u00f3digo posiblemente problem\u00e1tico }\n</code></pre> <p>Pero lo importante es c\u00f3mo controlar qu\u00e9 hacer con la posible excepci\u00f3n que se genera. Para ello se utilizan las clausulas <code>catch</code> que permiten especificar la acci\u00f3n a realizar cuando se produce una determinada excepci\u00f3n.</p> <pre><code>try {\n\n// C\u00f3digo posiblemente problem\u00e1tico\n\n} catch( tipo_de_excepcion e) {\n\n// C\u00f3digo para solucionar la excepci\u00f3n e\n\n} catch( tipo_de_excepcion_mas_general e) {\n\n// C\u00f3digo para solucionar la excepci\u00f3n e\n\n}\n</code></pre> <p>Como puede ver en el ejemplo, se pueden anidar sentencias <code>catch</code> para ir gestionando, de forma diferente, diferentes errores. Es conveniente hacerlo indicando en \u00faltimo lugar las excepciones m\u00e1s generales (es decir, que se encuentren m\u00e1s arriba en el \u00e1rbol de herencia de excepciones), porque el int\u00e9rprete <code>Java</code> ejecuta el bloque de c\u00f3digo <code>catch</code> cuyo par\u00e1metro es el tipo de una excepci\u00f3n lanzada.</p> <p>Si desea realizar una acci\u00f3n com\u00fan a todas las excepciones se utiliza la sentencia <code>finally</code>. Este c\u00f3digo se ejecuta tanto si se trata una excepci\u00f3n (<code>catch</code>) como sino.</p> <pre><code>try {\n\n// C\u00f3digo posiblemente problem\u00e1tico\n\n} catch( Exception e ) {\n\n// C\u00f3digo para solucionar la excepci\u00f3n e\n\n} finally {\n\n// Se ejecuta tras try o catch\n\n}\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_3","title":"Para saber m\u00e1s","text":"<p>A continuaci\u00f3n puedes ver la informaci\u00f3n oficial sobre las clases m\u00e1s importantes:</p> <p>Handling.</p> <p>Try.</p> <p>Exceptions.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#autoevaluacion_3","title":"Autoevaluaci\u00f3n","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#pregunta_3","title":"Pregunta","text":"<p>Indica la afirmaci\u00f3n incorrecta sobre las excepciones:</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#respuestas_3","title":"Respuestas","text":"<p>Opci\u00f3n 1</p> <p>Se pueden utilizar todas las cl\u00e1usulas <code>catch</code> para gestionar todas las excepciones que consideremos necesarias.</p> <p>Opci\u00f3n 2</p> <p>Las excepciones se tienen que gestionar de lo m\u00e1s espec\u00edfico a lo m\u00e1s general.</p> <p>Opci\u00f3n 3</p> <p>EL c\u00f3digo en <code>finally</code> se ejecuta siempre.</p> <p>Opci\u00f3n 4</p> <p>Todas las afirmaciones son correctas.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#retroalimentacion_3","title":"Retroalimentaci\u00f3n","text":"<p>No es correcto, repasa de nuevo el apartado.  </p> <p>Incorrecto, repasa los conocimientos del apartado.</p> <p>No es la respuesta correcta, repasa otra vez el apartado.</p> <p>Correcto.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#solucion_3","title":"Soluci\u00f3n","text":"<ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#22-ejemplo-i","title":"2.2.- Ejemplo I.","text":"<p> A continuaci\u00f3n, para aprender a utilizar las excepciones, vamos a ver un ejemplo en el que como se puede ver en el siguiente c\u00f3digo, se genera un vector de 100 elementos con valores aleatorios y posteriormente, se almacenan los valores en el fichero <code>Salida.txt</code>.</p> <p>EscribirNumeros.java</p> <pre><code>// Nota: Este c\u00f3digo no funciona. Es simplemente para uso educativo\n\nimport java.io.*;\n\nimport java.util.Vector;\n\nimport java.util.Random;\n\nclass EscribirNumeros {\n\n    private Vector&lt;Integer&gt; numeros;\n\n    private static final int SIZE = 100;\n\n    public EscribirNumeros (){\n\n        // Generamos el vector con n\u00fameros aleatorios\n\n        numeros = new Vector&lt;Integer&gt;(SIZE);\n\n        Random randomGenerator = new Random();\n\n        for (int i = 0; i &lt; SIZE; i++){\n\n            Integer num=randomGenerator.nextInt(100);\n\n            numeros.addElement(new Integer(num));\n\n        }\n\n        // Guardamos el vector en un fichero\n\n        PrintWriter out = null;\n\n        System.out.println(\"Entrando a la zona Try\");\n\n        out = new PrintWriter(new FileWriter(\"Salida.txt\"));\n\n        for (int i = 0; i &lt; SIZE; i++)\n\n            out.println(\"Valor de: \" + i + \" = \" + numeros.elementAt(i));\n\n        out.close();\n\n    }\n\n     public static void main( String[] arg ) {\n\n          new EscribirNumeros ();\n\n     }\n\n}\n</code></pre> <p>En la primera parte del c\u00f3digo, donde se generan los valores aleatorios no se puede producir ning\u00fan tipo de excepci\u00f3n. Pero a la hora de guardar los valores en el fichero, es posible que no se pueda abrir el fichero y se produzca una excepci\u00f3n de entrada/salida (<code>IOException</code>). Otro posible fallo es al ejecutar la sentencia</p> <pre><code>numeros.elementAt(i)\n</code></pre> <p>es que el n\u00famero de elemento solicitado (i) est\u00e9 fuera del rango del vector (que es de 0 a 99). En el caso de intentar obtener un elemento que se encuentre fuera del vector se genera la excepci\u00f3n <code>IndexOutOfBoundsException</code>.</p> <p>En el siguiente c\u00f3digo vamos a tratar las dos excepciones comentadas para permitir que el c\u00f3digo siempre se ejecute de una forma segura.</p> <p>EscribirNumeros.java</p> <pre><code>import java.io.*;\n\nimport java.util.Vector;\n\nimport java.util.Random;\n\nclass EscribirNumeros {\n\n    private Vector&lt;Integer&gt; numeros;\n\n    private static final int SIZE = 100;\n\n    public EscribirNumeros (){\n\n        // Generamos el vector con n\u00fameros aleatorios\n\n        numeros = new Vector&lt;Integer&gt;(SIZE);\n\n        Random randomGenerator = new Random();\n\n        for (int i = 0; i &lt; SIZE; i++){\n\n            Integer num=randomGenerator.nextInt(100);\n\n            numeros.addElement(new Integer(num));\n\n        }\n\n        // Guardamos el vector en un fichero\n\n        PrintWriter out = null;\n\n        try {\n\n            System.out.println(\"Entrando a la zona Try\");\n\n            out = new PrintWriter(new FileWriter(\"Salida.txt\"));\n\n            for (int i = 0; i &lt; SIZE; i++)\n\n                out.println(\"Valor de: \" + i + \" = \" + numeros.elementAt(i));\n\n            } catch (ArrayIndexOutOfBoundsException e) {\n\n                System.err.println(\"Caught ArrayIndexOutOfBoundsException: \" +e.getMessage());\n\n            } catch (IOException e) {\n\n                System.err.println(\"Caught IOException: \" + e.getMessage());\n\n            } finally {\n\n                if (out != null) {\n\n                    System.out.println(\"Cerrando el fichero\");\n\n                    out.close();\n\n                } else {\n\n                    System.out.println(\"NO se ha abierto el fichero\");\n\n                }\n\n            }\n\n    }\n\n     public static void main( String[] arg ) {\n\n          new EscribirNumeros ();\n\n     }\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#23-validacion-de-entradas","title":"2.3.- Validaci\u00f3n de entradas.","text":"<p> Una v\u00eda importante de errores de seguridad y de inconsistencia de datos dentro de una aplicaci\u00f3n se produce a trav\u00e9s de los datos que introducen los usuarios. Un fallo de seguridad muy frecuente, consiste en los errores basados en buffer overflow, se producen cuando se desborda el tama\u00f1o de una determinada variable, vector, matriz, etc. y se consigue acceder a zonas de memoria reservadas. Por ejemplo, si reservamos memoria para el nombre de usuario que ocupa 20 caracteres y, de alguna forma, el usuario consigue que la aplicaci\u00f3n almacene m\u00e1s datos, se est\u00e1 produciendo un buffer overflow ya que los primeros 20 valores se almacenan en un lugar correcto, pero los restantes valores se almacenan en zonas de memoria destinadas a otros fines.</p> <p>La validaci\u00f3n de datos permite:</p> <ul> <li>Mantener la consistencia de los datos. Por ejemplo, si a un usuario le indicamos que debe introducir su DNI \u00e9ste debe tener el mismo formato siempre.</li> <li>Evitar desbordamientos de memoria buffer overflow. Al comprobar el formato y la longitud del campo evitamos que se produzcan los desbordamientos de memoria.</li> </ul> <p>Para llevar un riguroso control, sobre los datos de entrada de los usuarios hay que tener en cuenta la validaci\u00f3n del formato y la validaci\u00f3n del tama\u00f1o de la entrada.</p> <p>Java incorpora una potente y \u00fatil librer\u00eda (<code>import java.util.regex</code>) para utilizar la clase <code>Pattern</code> que nos permite definir expresiones regulares. Las expresiones regulares permiten definir exactamente el formato de la entrada de datos.</p> <p>Para utilizar las expresiones regulares debemos realizar los siguientes pasos:</p> <ol> <li> <p>Importamos la librer\u00eda:  </p> <pre><code>import java.util.regex.*;\n</code></pre> </li> <li> <p>Definimos <code>Pattern</code> y <code>Matcher</code>:</p> <pre><code>Pattern pat=null;\n\nMatcher mat=null;\n</code></pre> </li> <li> <p>Compilamos el patr\u00f3n a utilizar.  </p> <pre><code>pat=Pattern.compile(patron);\n</code></pre> <p>donde el patr\u00f3n a comprobar es la parte m\u00e1s importante ya que es donde tenemos que indicar el formato que va a tener la entrada.</p> <p>Elementos para la validaci\u00f3n entradas</p> <p>Elemento</p> <p>Comentario.</p> <p>x</p> <p>El car\u00e1cter x.</p> \\[abc\\] <p>Los caracteres a, b o c.</p> \\[a-z\\] <p>Una letra en min\u00fascula.</p> \\[A-Z\\] <p>Una letra en may\u00fascula.</p> \\[a-zA-Z\\] <p>Una letra en min\u00fascula o may\u00fascula.</p> \\[0-9\\] <p>Un n\u00famero comprendido entre el 0 y el 9.</p> \\[a-zA-Z0-9\\] <p>Una letra en min\u00fascula, may\u00fascula o un n\u00famero.</p> <p>Operadores para la validaci\u00f3n entradas</p> <p>Operador</p> <p>Comentario</p> <p>[a-z]{2}</p> <p>Hay que introducir 2 letras en min\u00fasculas.</p> <p>[a-z]{2,5}</p> <p>Hay que introducir de 2 a 5 letras en min\u00fasculas.</p> <p>[a-z]{2,}</p> <p>Hay que introducir m\u00e1s de 2 letras en min\u00fasculas.</p> <p>hola|adios</p> <p>Es la operaci\u00f3n OR l\u00f3gica y permite indicar que se introduzca el texto \"hola\" o \"adios\".</p> <p>XY</p> <p>Es la operaci\u00f3n AND l\u00f3gica y permite indicar que se deben introducir dos expresiones X seguida de Y.</p> <p>e(n|l) campo</p> <p>Los delimitadores ( ) permite hacer expresiones m\u00e1s complejas. En el ejemplo, el usuario debe introducir el texto \"en campo\" o \"el campo\".</p> <p>A modo de ejemplo, a continuaci\u00f3n se muestran varios ejemplos de expresiones:</p> <ul> <li> <p>Tel\u00e9fono (formato 000-000000)  </p> <pre><code>pat=Pattern.compile(\"[0-9]{3}-[0-9]{6}\");\n</code></pre> </li> <li> <p>DNI  </p> <pre><code>pat=Pattern.compile(\"[0-9]{8}-[a-zA-Z]\");\n</code></pre> </li> <li> <p>Provincias andaluzas  </p> <pre><code>pat=Pattern.compile(\"Almer\u00eda\",\"Granada\",\"Ja\u00e9n\",\"M\u00e1laga\",\"Sevilla\",\"C\u00e1diz\",\"C\u00f3rdoba\",\"Huelva\");\n</code></pre> </li> </ul> </li> <li> <p>Le pasamos al evaluador de expresiones el texto a comprobar.  </p> <pre><code>mat=pat.matcher(texto_a_comprobar);\n</code></pre> </li> <li> <p>Comprobamos si hay alguna coincidencia:</p> <pre><code>if(mat.find()){\n    // Coincide con el patr\u00f3n \n    }else{\n    // NO coincide con el patr\u00f3n \n    }\n</code></pre> </li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_4","title":"Para saber m\u00e1s","text":"<p>En los siguientes enlaces puedes encontrar m\u00e1s informaci\u00f3n sobre la clase <code>Pattern</code></p> <p>Documentaci\u00f3n oficial (<code>Pattern</code>).</p> <p>Ejemplos.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#autoevaluacion_4","title":"Autoevaluaci\u00f3n","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#pregunta_4","title":"Pregunta","text":"<p>Indica el patr\u00f3n que permite validar un DNI con la letra en min\u00fascula:</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#respuestas_4","title":"Respuestas","text":"<p>Opci\u00f3n 1</p> <p>Pattern.compile(\"[0-9]{9}-[a-zA-Z]\");</p> <p>Opci\u00f3n 2</p> <p>Pattern.compile(\"[0-9][a-zA-Z]\");</p> <p>Opci\u00f3n 3</p> <p>Pattern.compile(\"[0-9]{8}-[a-zA-Z]\");</p> <p>Opci\u00f3n 4</p> <p>Pattern.compile(\"[0-9]{8}-[a-z]\");  </p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#retroalimentacion_4","title":"Retroalimentaci\u00f3n","text":"<p>No es as\u00ed.</p> <p>Incorrecto.</p> <p>No es correcto, repasa los conocimientos del apartado.</p> <p>Correcto.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#solucion_4","title":"Soluci\u00f3n","text":"<ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#24-ejemplo-ii","title":"2.4.- Ejemplo II.","text":"<p>A continuaci\u00f3n, vamos a ver un ejemplo en que se valida el texto de entrada para que cumpla el formato de DNI.</p> <p>ValidarEntrada.java</p> <pre><code>import java.io.*;\n\nimport java.util.regex.*;\n\nclass ValidarEntrada {\n\n     public ValidarEntrada(){\n\n          String dni_cliente=new String();\n\n          Pattern pat=null;\n\n          Matcher mat=null;\n\n          // para leer del teclado\n\n          BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));\n\n          try{\n\n               System.out.println(\"Introduce tu DNI (Formato 00000000-A):\");\n\n               dni_cliente=reader.readLine();\n\n               pat=Pattern.compile(\"[0-9]{8}-[a-zA-Z]\");\n\n               mat=pat.matcher(dni_cliente);\n\n               if(mat.find()){\n\n                         System.out.println(\"Correcto!!  \"+dni_cliente);\n\n               }else{\n\n                    System.out.println(\"El DNI esta mal  \"+dni_cliente);\n\n               }\n\n          } catch( Exception e ) {\n\n               System.out.println( e.getMessage() );\n\n          }\n\n     }\n\n     public static void main( String[] arg ) {\n\n          new ValidarEntrada();\n\n     }\n\n}\n</code></pre> <p>Compilamos el c\u00f3digo:</p> <pre><code>javac ValidarEntrada.java\n</code></pre> <p>y lo ejecutamos:</p> <pre><code>java ValidarEntrada\n</code></pre> <p>En la siguiente figura podemos ver un ejemplo del resultado de la ejecuci\u00f3n de la aplicaci\u00f3n.</p> <p></p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#25-ficheros-de-registro","title":"2.5.- Ficheros de registro.","text":"<p>Los ficheros de registro o logs, permiten almacenar informaci\u00f3n sobre las distintas acciones que realiza la aplicaci\u00f3n. Estos ficheros permiten realizar un seguimiento detallado de lo que ocurre en el sistema.</p> <p>Java incorpora la librer\u00eda <code>java.util.logging</code> que permite utilizar la clase <code>logger</code> para llevar un control de todos los eventos que ocurren a lo largo de la ejecuci\u00f3n de la aplicaci\u00f3n</p> <p>Para trabajar con ficheros de registro en Java debemos realizar los siguientes pasos:</p> <ol> <li> <p>Importamos la librer\u00eda:  </p> <pre><code>import java.util.logging.*;\n</code></pre> </li> <li> <p>Buscar o crear el logger que queremos utilizar.  </p> <pre><code>Logger logger = Logger.getLogger(\"MyLog\");\n</code></pre> </li> <li> <p>Una vez definido el logger debemos asociarlo a un fichero log:  </p> <pre><code>FileHandler fh = new FileHandler(\"c:\\\\MyLogFile.log\", true);\n</code></pre> <p>donde <code>MyLogFile.log</code> es el fichero donde se guardan el registro de la aplicaci\u00f3n. Y la variable <code>true</code> indica que los registros se a\u00f1adan a los ya existentes. Si establece <code>false</code>, el fichero se reinicia.</p> </li> <li> <p>Establecer si queremos visualizar los mensajes de log por pantalla. En caso de no querer ver los mensajes por pantalla lo indicamos de la siguiente forma:  </p> <pre><code>logger.setUseParentHandlers(false);\n</code></pre> </li> <li> <p>Establecer el formato del fichero. Los tipos de formato pueden ser:</p> <ul> <li> <p>Fichero de texto simple (<code>SimpleFormatter</code>).  </p> <pre><code>SimpleFormatter formatter = new SimpleFormatter();\n\nfh.setFormatter(formatter);\n</code></pre> </li> <li> <p>Fichero en formato XML (<code>XMLFormatter</code>).</p> <pre><code>XMLFormatter formatter = new XMLFormatter();\n</code></pre> </li> </ul> </li> <li> <p>Establezco el nivel de seguridad de las actividades que quiero registrar.</p> <p>Niveles de seguridad de los registros</p> <p>Nivel</p> <p>Importancia</p> <p>SEVERE</p> <p>7 (M\u00e1xima)</p> <p>WARNING</p> <p>6</p> <p>INFO</p> <p>5</p> <p>CONFIG</p> <p>4</p> <p>FINE</p> <p>3</p> <p>FINER</p> <p>2</p> <p>FINEST</p> <p>1 (M\u00ednima)</p> </li> </ol> <p>Por ejemplo, si deseo registrar s\u00f3lo los registros m\u00e1s graves ejecutamos</p> <pre><code>logger.setLevel(Level.SEVERE);\n</code></pre> <p>Adem\u00e1s, de los niveles anteriores, si queremos registrar todos los eventos utilizaremos:</p> <pre><code>logger.setLevel(Level.ALL);\n</code></pre> <p>Y si no queremos reegistrar ning\u00fan evento, ejecutaremos:</p> <pre><code>logger.setLevel(Level.OFF);\n</code></pre> <p>Una vez inicializado correctamente el <code>logger</code>, el siguiente paso es ir registrando en la aplicaci\u00f3n los diferentes registros. Por ejemplo, para a\u00f1adir un registro de nivel de importancia medio (WARNING) lo creamos de la siguiente forma:</p> <pre><code>logger.log(Level.WARNING,\"Mi primer log\");\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_5","title":"Para saber m\u00e1s","text":"<p>En los siguientes enlaces puedes encontrar m\u00e1s informaci\u00f3n sobre las diferentes clases relacionadas con los ficheros de registro</p> <p>Documentaci\u00f3n oficial (Logger)</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#autoevaluacion_5","title":"Autoevaluaci\u00f3n","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#pregunta_5","title":"Pregunta","text":"<p>\u00bfQu\u00e9 nivel de registro es el m\u00e1s alto?</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#respuestas_5","title":"Respuestas","text":"<p>Opci\u00f3n 1</p> <p>WARNING</p> <p>Opci\u00f3n 2</p> <p>DANGEROUS</p> <p>Opci\u00f3n 3</p> <p>SEVERE</p> <p>Opci\u00f3n 4</p> <p>INFO</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#retroalimentacion_5","title":"Retroalimentaci\u00f3n","text":"<p>No es correcto, repasa de nuevo.</p> <p>Incorrecto, repasa los conocimientos del apartado.  </p> <p>Correcto.</p> <p>No es correcto, repasa el apartado.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#solucion_5","title":"Soluci\u00f3n","text":"<ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#26-ejemplo-iii","title":"2.6.- Ejemplo III.","text":"<p>A continuaci\u00f3n, vamos a ver un ejemplo completo para crear un fichero de registro sencillo de una aplicaci\u00f3n.</p> <p>MyLogger.java</p> <pre><code>import java.io.*;\n\nimport java.util.logging.*;\n\npublic class MyLogger {\n\n  public static void main(String[] args) {\n\n    Logger logger = Logger.getLogger(\u201dMyLog\u201d);\n\n    FileHandler fh;\n\n    try {\n\n      // Configuro el logger y establezco el formato\n\n      fh = new FileHandler(\u201dc:\\\\MyLogFile.log\u201d, true);\n\n      logger.addHandler(fh);\n\n      logger.setLevel(Level.ALL);\n\n      SimpleFormatter formatter = new SimpleFormatter();\n\n      fh.setFormatter(formatter);\n\n      // A\u00f1ado un mensaje al log\n\n      logger.log(Level.WARNING,\u201dMi primer log\u201d);\n\n    } catch (SecurityException e) {\n\n      e.printStackTrace() ;\n\n    } catch (IOException e) {\n\n      e.printStackTrace() ;\n\n    }\n\n  }\n\n}\n</code></pre> <p>Compilamos el c\u00f3digo:</p> <pre><code>javac MyLogger.java\n</code></pre> <p>y lo ejecutamos:</p> <pre><code>java MyLogger\n</code></pre> <p>En la siguiente figura podemos ver como la aplicaci\u00f3n nos muestra el registro.</p> <p></p> <p>Y si abrimos el fichero de registro, en el ejemplo <code>c:/MyLogFile.log</code> podemos ver su contenido donde se van guardando los registros.</p> <pre><code>Feb 16, 2012 10:50:12 AM MyLogger main\n\nAdvertencia: Mi primer log\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#3-politicas-de-seguridad","title":"3.- Pol\u00edticas de seguridad.","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#caso-practico_3","title":"Caso pr\u00e1ctico","text":"<p>Juan: Hola Mar\u00eda. Ya he hecho todo lo que me has indicado y por lo tanto mi programa es seguro.</p> <p>Mar\u00eda: Si tu programa es bastante seguro ya pero todav\u00eda lo podemos mejorar.</p> <p>Juan: \u00bfC\u00f3mo puedo mejorarlo?</p> <p>Mar\u00eda: Es muy f\u00e1cil, vamos a utilizar las pol\u00edticas de acceso de java. Las pol\u00edticas de acceso permiten indicar las acciones que puede realizar una determina aplicaci\u00f3n por su ubicaci\u00f3n o por su firma digital. Mejor que lo veamos y ver\u00e1s su utilidad.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#31-modelo-de-seguridad-de-java","title":"3.1.- Modelo de seguridad de java.","text":"<p>La plataforma Java permite un gran conjunto de caracter\u00edsticas de seguridad: basado en pol\u00edticas de acceso, f\u00e1cilmente configurable, control de acceso, servicio criptogr\u00e1fico y gesti\u00f3n de claves, etc.</p> <p>En la siguiente unidad nos centraremos en la utilizaci\u00f3n del servicio criptogr\u00e1fico y ahora vamos a centrarnos en las pol\u00edticas de seguridad de las aplicaciones.</p> <p>Modelos de seguridad en java</p> <p>Versi\u00f3n</p> <p>Esquema de seguridad</p> <p>Descrpci\u00f3n</p> <p>JDK 1.0</p> <p></p> <p>Inicialmente, el modelo de seguridad de Java en su primera versi\u00f3n era un modelo muy b\u00e1sico ya que las aplicaciones locales ten\u00edan total acceso a todos los recursos del sistema y las aplicaciones remotas no ten\u00edan acceso total al sistema.</p> <p>JDK 1.1</p> <p></p> <p>En la siguiente versi\u00f3n, se permiti\u00f3 que las aplicaciones firmadas digitalmente puedan acceder a todos los recursos del sistema.</p> <p>JDK 1.2</p> <p></p> <p>Se incrementa la seguridad del sistema permitiendo establecer las pol\u00edticas de acceso tanto a las aplicaciones locales o remotas. Una vez que la aplicaci\u00f3n es autorizada, se env\u00edan las peticiones al Security Manager para poder acceder a los recursos del sistema.</p> <p>Las pol\u00edticas de seguridad se pueden establecer utilizando los siguientes elementos:</p> <ul> <li>Origen (usuario o ruta de acceso de la aplicaci\u00f3n).</li> <li>Permisos (por ejemplo, se puede indicar si tiene permisos de lectura/escritura sobre un fichero, si puede enviar o no informaci\u00f3n).</li> <li>Destino. Destino al que afecta el permiso. Por ejemplo si trabamos con ficheros el destino es su ubicaci\u00f3n.</li> <li>Acci\u00f3n. Las acciones que se pueden realizar sobre el fichero. Por ejemplo, en un fichero los permisos son lectura o escritura.</li> </ul> <p>Aunque existen muchos tipos de permisos que se pueden especificar en las pol\u00edticas de seguridad, en la siguiente tabla se pueden ver las m\u00e1s importantes.</p> <p>Permisos m\u00e1s utilizados en java</p> <p>Permiso</p> <p>Descripci\u00f3n</p> <p>PropertyPermission.</p> <p>Permite establecer los permisos de acceso sobre informaci\u00f3n del sistema (por ejemplo: sistema operativo, versi\u00f3n de java, directorio home del usuario actual)</p> <p>Documentaci\u00f3n oficial (SocketPermison).</p> <p>Permite establecer los permisos sobre las comunicaciones de red. Los permisos se pueden establecer sobre una determinada direcci\u00f3n IP o URL y/o el puerto de comunicaciones al que puede acceder.</p> <p>Documentaci\u00f3n oficial (FilePermission).</p> <p>Permite establecer los permisos de acceso al disco de una aplicaci\u00f3n. Los permisos se pueden establecer a un determinado fichero o carpeta y, permite establecer los permisos de lectura o escritura.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_6","title":"Para saber m\u00e1s","text":"<p>En la siguiente presentaci\u00f3n puedes ver m\u00e1s informaci\u00f3n sobre los fallos de seguridad m\u00e1s importantes en las aplicaciones y una breve introducci\u00f3n sobre la seguridad en Java.</p> <p>Documentaci\u00f3n oficial (SecurityManager).</p> <p>Documentaci\u00f3n Java SE.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#32-asegurando-las-aplicaciones-i","title":"3.2.- Asegurando las aplicaciones (I).","text":"<p>Como hemos comentado anteriormente, en las aplicaciones que se ejecutan localmente, el Security Manager se encuentra deshabilitado. A continuaci\u00f3n, vamos a ver c\u00f3mo aplicar las pol\u00edticas de seguridad a las aplicaciones para poder controlar los recursos a los que pueden acceder.</p> <p>Para comprobar que, por defecto, una aplicaci\u00f3n local se ejecuta \"libremente\", vamos a descargar la siguiente aplicaci\u00f3n que obtiene y muestra las propiedades del sistema y de java.</p> <p>Descargar c\u00f3digo fuente <code>GetProps.java</code></p> <p>GetProps.java</p> <pre><code>// Download from\n\nhttp://docs.oracle.com/javase/tutorial/security/tour2/examples/GetProps.java\n\nimport java.lang.*;\n\nimport java.security.*;\n\nclass GetProps {\n\n    public static void main(String[] args) {\n\n        /* Test reading properties w &amp; w/out security manager */\n\n        String s;\n\n        try {\n\n            System.out.println(\"About to get os.name property value\");\n\n            s = System.getProperty(\"os.name\", \"not specified\");\n\n            System.out.println(\"  The name of your operating system is: \" + s);\n\n            System.out.println(\"About to get java.version property value\");\n\n            s = System.getProperty(\"java.version\", \"not specified\");\n\n            System.out.println(\"  The version of the JVM you are running is: \" + s);\n\n            System.out.println(\"About to get user.home property value\");\n\n            s = System.getProperty(\"user.home\", \"not specified\");\n\n            System.out.println(\"  Your user home directory is: \" + s);\n\n            System.out.println(\"About to get java.home property value\");\n\n            s = System.getProperty(\"java.home\", \"not specified\");\n\n            System.out.println(\"  Your JRE installation directory is: \" + s);\n\n         } catch (Exception e) {\n\n            System.err.println(\"Caught exception \" + e.toString());\n\n        }\n\n    }\n\n}\n</code></pre> <p>Compila y ejecuta el c\u00f3digo:</p> <pre><code>javac GetProps.java\n\njava GetProps\n</code></pre> <p></p> <p>Como puedes ver en la figura anterior, la aplicaci\u00f3n tiene acceso a las propiedades del sistema.</p> <p>Para poder aplicar las pol\u00edticas de seguridad, en una aplicaci\u00f3n local, debemos activar el Security Manager utilizando la opci\u00f3n <code>\u2013Djava.security.manager</code>, por lo que ejecutaremos:</p> <pre><code>java \u2013Djava.security.manager GetProps\n</code></pre> <p></p> <p>Las pol\u00edticas de seguridad que se cargan por defecto, permiten al c\u00f3digo a acceder a datos que no son sensibles y no son un riesgo de seguridad como la versi\u00f3n del sistema operativo (<code>os.name</code>) y la versi\u00f3n de java (<code>java.version</code>). En cambio, en los datos m\u00e1s sensibles como el directorio home del usuario (<code>user.home</code>) o el directorio de trabajo de java (<code>java.home</code>) el gestor de seguridad no permite el acceso de lectura y por eso se produce la excepci\u00f3n de que no tiene permisos (<code>AccessControlException</code>).</p> <p>Tal y como podemos ver en la siguiente figura, se ha denegado el acceso a (\"<code>java.util.PropertyPermission</code>\" \"<code>user.home</code>\" \"<code>read</code>\"). Estos datos son necesarios para poder establecer correctamente las pol\u00edticas de acceso.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#321-asegurando-las-aplicaciones-y-ii","title":"3.2.1.- Asegurando las aplicaciones (y II).","text":"<p>A continuaci\u00f3n se va a configurar las pol\u00edticas de seguridad para permitir el acceso de la aplicaci\u00f3n para que pueda leer las propiedades en la que no hab\u00eda acceso (<code>user.home</code> y <code>java.home</code>).</p> <p>Los pasos que tenemos que realizar para establecer los permisos son:</p> <ul> <li>Ejecutamos el comando <code>policytool</code> para iniciar la herramienta que nos permite administrar las pol\u00edticas de acceso.</li> <li>Nos vamos al men\u00fa Archivo -&gt; Abrir y seleccionamos el fichero <code>java.policy</code> que se encuentra en <code>c:\\Archivos de programa\\Java\\jre7\\lib\\security</code> (hay que tener cuidado porque la ubicaci\u00f3n puede cambiar dependiendo de la versi\u00f3n de java).</li> </ul> <p>En el siguiente enlace puedes ver m\u00e1s informaci\u00f3n sobre los ficheros de pol\u00edticas de acceso.</p> <p>Documentaci\u00f3n oficial (PolicyFiles).</p> <ul> <li> <p></p> <p>Una vez abierto el fichero de pol\u00edticas de acceso (ver siguiente figura), tenemos que a\u00f1adir una entrada para permitir el acceso de nuestro c\u00f3digo. Para ello, realizamos los siguientes pasos: *   Pulsamos el bot\u00f3n Agregar Entrada de Pol\u00edtica y podemos indicar el origen del fichero por su ubicaci\u00f3n (<code>codebase</code>) o por su firma (<code>SignedBy</code>). En nuestro caso, vamos a identificar la aplicaci\u00f3n por su ubicaci\u00f3n por lo que escribimos <code>file:/C:/ejemplo/</code> (<code>C:/ejemplo</code> es la ubicaci\u00f3n donde estamos trabajando. Si utilizas otro directorio c\u00e1mbialo). Si vamos a establecer los permisos en una aplicaci\u00f3n en la red ser\u00eda <code>http://direccion</code>. *   Pulsamos en Agregar Permiso y a\u00f1adimos un permisos con los siguientes datos: *   A\u00f1adimos una nueva pol\u00edtica de acceso con los siguientes datos:     *   PropertyPermission = <code>java.util.PropertyPermission</code>.     *   Nombre de Destino = <code>user.home</code>.     *   Acciones = <code>read</code> *   Pulsamos en Agregar Permiso para a\u00f1adir el segundo permiso con los siguientes datos:     *   PropertyPermission = <code>java.util.PropertyPermission</code>.     *   Nombre de Destino = <code>java.home</code>.     *   Acciones = <code>read</code></p> <pre><code>    [![Captura de pantalla que muestra la edici\u00f3n de permisos de las pol\u00edticas de seguridad. ](PSP06_CONT_R17_miniatura.png \"Editando permisos.\")](PSP06_CONT_R17.png \"Ampliar imagen.\")\n\n    .\n</code></pre> <ul> <li>Finalmente, guardamos todos los cambios.</li> </ul> </li> </ul> <p>Una vez configurada la pol\u00edtica de acceso, volvemos a ejecutar la aplicaci\u00f3n y ya podemos comprobar que la aplicaci\u00f3n se ejecuta correctamente.</p> <p></p> <pre><code>java \u2013Djava.security.manager GetProps\n</code></pre>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#autoevaluacion_6","title":"Autoevaluaci\u00f3n","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#pregunta_6","title":"Pregunta","text":"<p>\u00bfQu\u00e9 comando hay que ejecutar para editar las pol\u00edticas de seguridad?</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#respuestas_6","title":"Respuestas","text":"<p>Opci\u00f3n 1</p> <p><code>policymanager</code>.</p> <p>Opci\u00f3n 2</p> <p><code>policytool</code>.</p> <p>Opci\u00f3n 3</p> <p><code>Security Manager</code></p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#retroalimentacion_6","title":"Retroalimentaci\u00f3n","text":"<p>No es correcto, repasa los conocimientos del apartado.</p> <p>Correcto.  </p> <p>Incorrecto, repasa los conocimientos del apartado.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#solucion_6","title":"Soluci\u00f3n","text":"<ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_7","title":"Para saber m\u00e1s","text":"<p>Si lo deseas, tambi\u00e9n puedes ver la documentaci\u00f3n oficial para asegurar Applets.</p> <p>Controlando la seguridad de los Applets.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#33-firmando-ficheros-jar","title":"3.3.- Firmando ficheros Jar.","text":"<p>Los ficheros JAR (ARchive of Java) contienen componentes de Java (como archivos de clase) y, opcionalmente, recursos de soporte (como im\u00e1genes o sonidos).</p> <p>Como hemos visto antes, las pol\u00edticas de seguridad se pueden especificar por su ubicaci\u00f3n o por la persona que firma el fichero <code>jar</code>. A continuaci\u00f3n, vamos a aprender a crear un fichero <code>jar</code> y firmarlo digitalmente para, m\u00e1s adelante, establecer correctamente sus pol\u00edticas de acceso.</p> <p>Los pasos que debemos realizar son:</p> <ul> <li> <p>Descarga el siguiente c\u00f3digo fuente o utiliza cualquier otro c\u00f3digo que estimes conveniente.</p> <p>Descargar c\u00f3digo fuente GetProps.java</p> </li> <li> <p>Compila el c\u00f3digo fuente:  </p> <pre><code>javac GetProps.java\n</code></pre> </li> <li> <p>Crea el fichero jar ejecutando:</p> <pre><code>jar cvf GetProps.jar GetProps.class\n</code></pre> </li> <li> <p>Genera las claves. A continuaci\u00f3n vamos a crear un par de claves (una clave privada y una clave p\u00fablica) para firmar el fichero. La clave privada la vamos a utilizar para firmar el fichero y la clave p\u00fablica la van a utilizar los dem\u00e1s usuarios para comprobar que el fichero es correcto. En la siguiente unidad aprender\u00e1s muchos m\u00e1s conceptos relacionados con la criptograf\u00eda en java.</p> <p>Para generar las claves ejecutamos:</p> <pre><code>keytool \u2013genkey \u2013alias firmar \u2013keypass hola00 \u2013keystore DAM \u2013storepass distancia\n</code></pre> <p>donde:</p> <ul> <li>-<code>alias firmar</code>. Indica el alias que se va a utilizar para referirnos al keystore, que es donde se van almacenar las llaves generadas.</li> <li>-<code>keypass hola00</code>. Especifica la contrase\u00f1a de la llave privada.</li> <li>-<code>keystore DAM</code>. Indica el nombre del <code>keystore</code> que se esta creando o utilizando.</li> <li>-<code>storepass distancia</code>. Indica el password del <code>keystore</code>.</li> </ul> <p>A continuaci\u00f3n, tal y como se puedes ver en la siguiente figura, hay que introducir los datos del certificado: nombre, organizaci\u00f3n, localidad, etc.</p> <p></p> </li> <li> <p>Finalmente, firmados el fichero jar utilizando el certificado creado</p> <pre><code>jarsigner \u2013keystore DAM \u2013signedjar sGetProps.jar GetProps.jar firmar\n</code></pre> <p>donde:</p> </li> <li> <p>-<code>keystore DAM</code>. Es el keystore creado anteriormente.</p> </li> <li>-<code>signedjar sGetPrrops.jar</code>. Indica el fichero <code>jar</code> firmado.</li> <li><code>GetProps.jar</code> Es el fichero <code>jar</code> a firmar.</li> <li> <p><code>firmar</code>. Es el alias que se ha creado anteriormente.</p> <p></p> </li> <li> <p>Exportamos la llave p\u00fablica del certificado ejecutando:</p> <pre><code>keytool \u2013export \u2013keystore DAM \u2013alias firmar \u2013file Javier.cert\n</code></pre> </li> </ul> <p>Ahora ya tenemos todos los archivos necesarios para enviarlos a los diferentes clientes que quieran utilizar nuestra aplicaci\u00f3n: el fichero jar firmado (<code>sGetProps.jar</code>) y el certificado (<code>Javier.cert</code>).</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_8","title":"Para saber m\u00e1s","text":"<p>Si deseas conocer el funcionamiento de los certificados de seguridad, consulta el siguiente enlace:</p> <p>Certificado digital.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#34-utilizando-ficheros-jar-firmados","title":"3.4.- Utilizando ficheros Jar firmados.","text":"<p>Una vez que tenemos el fichero jar firmado (<code>sGetProps.jar</code>) y el certificado de seguridad (<code>Javier.cert</code>), podemos intentar ejecutar directamente la aplicaci\u00f3n, pero veremos que al utilizar el SecurityManger nos da problemas de seguridad.</p> <pre><code>java \u2013cp sGetProps.jar GetProps\n\njava \u2013Djava.security.manager \u2013cp sGetProps.jar GetProps\n</code></pre> <p></p> <p>Para que la aplicaci\u00f3n funcione correctamente, primero debemos importar el certificado ejecutando:</p> <pre><code>keytool \u2013import alias Javier \u2013file Javier.cert \u2013keystore DAM\n</code></pre> <p>donde:</p> <ul> <li><code>-import alias Javier</code>. Indica que se va a importar el certificado con el alias <code>Javier</code>.</li> <li><code>-keystore DAM</code>. Indica el keystore donde se guarda el certificado.</li> </ul> <p>Una vez que tenemos el alias, tenemos que configurar las pol\u00edticas de acceso para que el usuario <code>Javier</code> pueda ejecutar correctamente la aplicaci\u00f3n. Para ello, debemos realizar los siguientes pasos:</p> <ul> <li>Ejecutamos el comando <code>policytool</code> para iniciar la herramienta que permite administrar las pol\u00edticas de acceso.</li> <li> <p>Nos vamos al men\u00fa Archivo -&gt; Abrir y seleccionamos el fichero <code>java.policy</code> que se encuentra en <code>c:\\Archivos de programa\\Java\\jre7\\lib\\security\\java.policy</code> (hay que tener cuidado porque la ubicaci\u00f3n puede cambiar dependiendo de la versi\u00f3n de java).</p> <p></p> </li> <li> <p>Una vez abierto el fichero de pol\u00edticas de acceso tenemos que indicar el keystore que vamos a utilizar. Para ello, en el men\u00fa Almacen de claves seleccionamos Editar y en el campo URL de almac\u00e9n de claves indicamos la ubicaci\u00f3n de las claves (que en nuestro caso es <code>file:\\c:\\ejemplo\\DAM)</code>.</p> </li> <li>A\u00f1adimos una entrada para permitir el acceso de nuestro c\u00f3digo. Para ello, realizamos los siguientes pasos:</li> <li>Pulsamos el bot\u00f3n Agregar Entrada de Pol\u00edtica y podemos indicar el origen del fichero por su ubicaci\u00f3n (<code>codebase</code>) o por su firma (<code>SignedBy</code>). En esta ocasi\u00f3n, en el campo <code>SignedBy</code> escribimos nuestro usuario Javier.</li> <li>Pulsamos en Agregar Permiso y a\u00f1adimos un permisos con los siguientes datos:</li> <li>a\u00f1adimos una nueva pol\u00edtica de acceso con los siguientes datos:<ul> <li>PropertyPermission = <code>java.util.PropertyPermission</code></li> <li>Nombre de Destino = <code>user.home</code></li> <li>Acciones = <code>read</code></li> </ul> </li> <li>Pulsamos en Agregar Permiso para a\u00f1adir el segundo permiso con los siguientes datos:<ul> <li>PropertyPermission = <code>java.util.PropertyPermission</code></li> <li>Nombre de Destino = <code>java.home</code></li> <li>Acciones = <code>read</code></li> </ul> </li> <li> <p>Finalmente, guardamos todos los cambios.</p> <p></p> </li> </ul> <p>Una vez configurada la pol\u00edtica de acceso, volvemos a ejecutar la aplicaci\u00f3n y ya podemos comprobar que la aplicaci\u00f3n se ejecuta correctamente.</p> <pre><code>java \u2013Djava.security.manager \u2013cp sGetProps.jar GetProps\n</code></pre> <p></p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_9","title":"Para saber m\u00e1s","text":"<p>A continuaci\u00f3n puedes ver una gu\u00eda r\u00e1pida para la firma de aplicaciones.</p> <p>Documentaci\u00f3n oficial (Steps for the Code Signer).</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#autoevaluacion_7","title":"Autoevaluaci\u00f3n","text":""},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#pregunta_7","title":"Pregunta","text":"<p>\u00bfQu\u00e9 comando permite firmar ficheros <code>jar</code>?</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#respuestas_7","title":"Respuestas","text":"<p>Opci\u00f3n 1</p> <p>policytool.  </p> <p>Opci\u00f3n 2</p> <p>jarsigner.</p> <p>Opci\u00f3n 3</p> <p>keytool.  </p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#retroalimentacion_7","title":"Retroalimentaci\u00f3n","text":"<p>Incorrecto, repasa los conocimientos del apartado.</p> <p>Correcto.</p> <p>No es correcto, repasa los conocimientos del apartado.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#solucion_7","title":"Soluci\u00f3n","text":"<ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> <li>Incorrecto (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#35-herramientas-de-seguridad","title":"3.5.- Herramientas de seguridad.","text":"<p>El JDK proporciona herramientas que se utilizar para implementar las normas de seguridad de Java. Las herramientas que podemos utilizar son:</p> <ul> <li> <p>policytool. Es una herramienta gr\u00e1fica que permite administrar las normas de seguridad de una instalaci\u00f3n local de JDK. Para utilizar la herramienta debemos ejecutar:  </p> <pre><code>policytool\n</code></pre> <p>Una vez ejecutada la herramienta <code>policytool</code>, selecciona Open en el men\u00fa File y luego selecciona el archivo de normas que desea modificar. La ruta predeterminada es <code>c:\\Archivos de programa\\Java\\jre7\\lib\\security\\java.policy</code>.</p> </li> <li> <p><code>keytool</code>. Permite administrar la base de datos de claves y certificados del sistema. Para utilizarla la herramienta ejecuta:</p> <pre><code>keytool [comandos]\n</code></pre> <p>Si ejecutas <code>keytool \u2013help</code> podr\u00e1s ver la lista de \u00f3rdenes y sus respectivas opciones.</p> </li> <li> <p><code>jarsigner</code>. Permite firmar y verificar la firma de los ficheros jar. Su sintaxis es:</p> <pre><code>jarsigner [opciones] Fichero.jar alias\n</code></pre> <p>donde</p> <ul> <li><code>Fichero.jar</code> Es el fichero <code>jar</code> que se firma o verifica</li> <li><code>Alias</code>. Es el alias de entrada al almac\u00e9n de claves que contiene la clave privada que se utiliza para generar la firma. El almac\u00e9n de claves es una base de datos de claves y certificados que mantiene la herramienta <code>keytool</code>.</li> <li>Opciones. Son las opciones que utiliza <code>jarsigner</code> y que podemos ver al ejecutar simplemente <code>jarsigner</code>.</li> </ul> </li> </ul>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#para-saber-mas_10","title":"Para saber m\u00e1s","text":"<p>A continuaci\u00f3n puedes ver la informaci\u00f3n oficial sobre las herramientas de seguridad comentadas.</p> <p>Documentaci\u00f3n oficial (policytool).</p> <p>Documentaci\u00f3n oficial (keytool).</p> <p>Documentaci\u00f3n oficial (jarsigner).</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#anexo-i-ataques","title":"Anexo I.- Ataques.","text":"<p>Tipos de ataques</p> <p>Nombre</p> <p>Descripci\u00f3n</p> <p>Sistemas</p> <p>Explotar bugs del software</p> <p>Utilizar fallos de seguridad en el software para atacar un sistema.</p> <p>Romper contrase\u00f1as</p> <p>Fuerza bruta o ataques basados en diccionarios que permiten obtener las contrase\u00f1as del sistema o de un determinado servicio.</p> <p>Red</p> <p>Barridos de ping</p> <p>Utilizaci\u00f3n del protocolo ICMP para determinar los equipos activos de una red.</p> <p>Confianza transitiva</p> <p>Aprovechar la confianza entre usuarios o equipos para tomar sus privilegios.</p> <p>DNS spoofing</p> <p>Falsificaci\u00f3n de una entrada DNS que apunta a un servidor no autorizad</p> <p>DoS</p> <p>Ataque de denegaci\u00f3n de servicio que consiste en saturar un sistema para impedir la utilizaci\u00f3n correcta del sistema.</p> <p>Hijacking</p> <p>Permite a un usuario robar una conexi\u00f3n de un usuario que ha sido autentificado en el sistema.</p> <p>Man in the middle</p> <p>A trav\u00e9s del ataque ARPspoofing el atacante se sit\u00faa en medio de la comunicaci\u00f3n entre varios equipos para realizar otros ataques, como sniffer, spoofing, phising etc.</p> <p>Mensajes de control de red o enrutamiento fuente</p> <p>Se env\u00edan paquetes ICMP para hacer pasar los paquetes por un router comprometido.</p> <p>Navegaci\u00f3n an\u00f3nima</p> <p>No se considera directamente un ataque, pero la suelen utilizar los atacantes para realizar sus fechor\u00edas. Se denomina \u201cnavegaci\u00f3n an\u00f3nima\u201d cuando un usuario utilizar diferentes servidores proxy para ocultar su direcci\u00f3n IP.</p> <p>Phising</p> <p>Ataque inform\u00e1tico que consiste en falsificar un sitio web para poder obtener las contrase\u00f1as de sus usuarios.</p> <p>Reenv\u00edo de paquetes</p> <p>Retransmisi\u00f3n de paquetes para enga\u00f1ar o duplicar un mensaje (p.ej. una transferencia).</p> <p>Sniffer</p> <p>Programa o equipo que registra todo el tr\u00e1fico de una red. Se utiliza especialmente para obtener las contrase\u00f1as de los sistemas.</p> <p>Spoofing</p> <p>El atacante env\u00eda paquetes con una direcci\u00f3n fuente incorrecta. Las respuestas se env\u00edan a la direcci\u00f3n falsa. Pueden usarse para: Acceder a recursos confiados sin privilegios Para DoS directo como indirecto o recursivo.</p> <p>Servidores web</p> <p>Inyecci\u00f3n SQL</p> <p>Ataque que consiste en modificar las consultas SQL de un servidor web para poder realizar consultas SQL maliciosas.</p> <p>LFI</p> <p>Ataque inform\u00e1tico que consiste en hacer que un servidor ejecute un script que est\u00e1 alojado en el mismo servidor.</p> <p>RFI</p> <p>Ataque inform\u00e1tico que consiste en hacer que un servidor ejecute un script que est\u00e1 alojado en una m\u00e1quina remota.</p> <p>XSS</p> <p>Consiste en enga\u00f1ar al servidor web para que ejecute un script malicioso en el navegador del cliente que visita una determinada p\u00e1gina.</p> <p>Aplicaciones</p> <p>Crack</p> <p>Software que permite romper la protecci\u00f3n de una aplicaci\u00f3n comercial.</p> <p>Keylogger</p> <p>Software o hardware que registra todas las pulsaciones de teclado que se realizan en el sistema.</p> <p>Rootkit</p> <p>Software que se instala en un sistema y oculta toda la actividad de un usuario (el atacante).</p> <p>Troyano</p> <p>Software que se instala en el ordenador atacado que permite al atacante hacerse con el control de la m\u00e1quina.</p> <p>Virus</p> <p>Software que se copia autom\u00e1ticamente y que tiene por objeto alterar el normal funcionamiento del equipo sin el permiso o el conocimiento del usuario.</p> <p>Varios</p> <p>Ingenier\u00eda social</p> <p>Atacante que consiste en convencer a un usuario leg\u00edtimo para que facilite informaci\u00f3n (contrase\u00f1as, configuraciones, etc.).</p> <p>Rubber-hosse</p> <p>Utilizar soborno o tortura para obtener una determinada informaci\u00f3n.</p>"},{"location":"Moduls/ARXIU/2425/PSP/UT05/html-to-markdown.html#anexo-licencias-de-recursos","title":"Anexo.- Licencias de recursos.","text":"<p>Licencias de recursos utilizados en la Unidad de Trabajo.</p> <p>Recurso (1)</p> <p>Datos del recurso (1)</p> <p>Recurso (2)</p> <p>Datos del recurso (2)</p> <p></p> <p>Autor\u00eda: jhnri4.</p> <p>Licencia: Dominio p\u00fablico.</p> <p>Procedencia: http://openclipart.org/detail/ 74581/fingerprint-by-jhnri4</p> <p></p> <p>Autor\u00eda: Dias.</p> <p>Licencia: Dominio p\u00fablico.</p> <p>Procedencia: http://openclipart.org/detail/ 63019/padepokan:-firewall-by-d ias</p> <p></p> <p>Autor\u00eda: AJ.</p> <p>Licencia: Dominio p\u00fablico.</p> <p>Procedencia: www.openclipart.org/detail/179 24.</p> <p></p> <p>Autor\u00eda: johnny_automatic.</p> <p>Licencia: Dominio p\u00fablico.</p> <p>Procedencia: www.openclipart.org/detail/505 5/old-pocketwatch-by-johnny_au tomatic.</p> <p></p> <p>Autor\u00eda: Alexey Zharov / verses.</p> <p>Licencia: Dominio p\u00fablico.</p> <p>Procedencia: http://www.openclipart.org/det ail/20214/verses_Computer</p> <p></p> <p>Autor\u00eda: Anonymous.</p> <p>Licencia: Dominio p\u00fablico.</p> <p>Procedencia: www.openclipart.org/detail/108 955/button_ok.</p> <p></p> <p>Autor\u00eda: djmx1.</p> <p>Licencia: Dominio p\u00fablico.</p> <p>Procedencia: http://openclipart.org/detail/ 19173/cadenas-by-djmx1-19173</p> <p></p> <p>Autor\u00eda: Ricard Lou Torrijos.</p> <p>Licencia: Uso Educativo no comercial.</p> <p>Procedencia: http://www.programacion.com/ar ticulo/seguridad_en_la_platafo rma_java_2_jdk_1_2_87</p> <p></p> <p>Autor\u00eda: Ricard Lou Torrijos.</p> <p>Licencia: Uso Educativo no comercial.</p> <p>Procedencia: http://www.programacion.com/ar ticulo/seguridad_en_la_platafo rma_java_2_jdk_1_2_87</p> <p></p> <p>Autor\u00eda: Ricard Lou Torrijos.</p> <p>Licencia: Uso Educativo no comercial.</p> <p>Procedencia: http://www.programacion.com/ar ticulo/seguridad_en_la_platafo rma_java_2_jdk_1_2_87</p> <p></p> <p>Autor\u00eda: Oracle.</p> <p>Licencia: Uso Educativo no comercial.</p> <p>Procedencia: http://docs.oracle.com/javase/tutorial /security/tour2/examples/GetProps.java</p>"},{"location":"Moduls/ARXIU/2425/PSP/exercicisisolucions/ExercicisFils.html","title":"Col\u00b7lecci\u00f3 exercicis simples de programaci\u00f3 multifil","text":"<p>Aquesta petita col\u00b7lecci\u00f3 d'exercicis \u00e9s molt recomanable per agafar confian\u00e7a amb la programaci\u00f3 multifil i les seves eines. \u00c0NIM!</p>"},{"location":"Moduls/ARXIU/2425/PSP/exercicisisolucions/ExercicisFils.html#activitats-diniciacio","title":"Activitats d'iniciaci\u00f3","text":"<ol> <li>Imprimeix \"Hola, m\u00f3n!\" des d'un fil.</li> <li>Imprimeix cinc vegades \"Hola, m\u00f3n!\" mitjan\u00e7ant cinc fils diferents.</li> <li>Imprimeix cinc vegades mitjan\u00e7ant cinc fils diferents \"Hola, s\u00f3c el fil X!\" on X \u00e9s el n\u00famero o identificador del fil.</li> <li>Amb dos fils, incrementa un sencer compartit en un repetidament, sense sincronitzaci\u00f3, 1.000.000 de vegades (500.000 cadascun) i imprimeix el resultat al final del programa.</li> <li>Amb dos fils, incrementa un sencer compartit en un repetidament, amb sincronitzaci\u00f3, 1.000.000 de vegades (500.000 cadascun) i imprimeix el resultat al final del programa.</li> <li>Llan\u00e7a dos fils simult\u00e0niament: un fil que incrementi un sencer en un 1.000.000 de vegades i un segon fil que imprimeixi el valor del sencer en aquell moment.</li> <li>Llan\u00e7a dos fils simult\u00e0niament: un fil que incrementi un sencer en un 1 000 000 de vegades i un segon fil que esperi (m\u00e8tode wait() ) la notificaci\u00f3 (m\u00e8tode notify() ) del primer que ha finalitzat per imprimir finalment aquest sencer .</li> <li>Simula una cursa de relleus amb quatre corredors. Cada corredor \u00e9s un fil que comen\u00e7ar\u00e0 a c\u00f3rrer quan l'altre s'acabi (excepte el primer). Usa els m\u00e8todes start() i join() alternativament per a cada fil.</li> <li>Repeteix l'activitat anterior per\u00f2 aquesta vegada usant els m\u00e8todes wait() i notify().</li> <li>Simula una cursa de 100 metres de cinc animals on cada animal \u00e9s un fil que avan\u00e7a 1 metre en cada iteraci\u00f3 d'un bucle. Mostra els progressos de cada animal i el r\u00e0nquing final. Pots fer servir el m\u00e8tode yield() al final de cada iteraci\u00f3 per fer la cursa m\u00e9s igualada.</li> </ol> M\u00e8tode yield() <p>Ves aqu\u00ed per veure m\u00e9s informaci\u00f3</p>"},{"location":"Moduls/ARXIU/2425/PSP/exercicisisolucions/ExercicisFils.html#activitats","title":"Activitats","text":"<ol> <li>Donat un enter n divisible per 5, calcula la suma de tots els enters des de 1 fins a n , ambd\u00f3s inclosos. Divideix la feina en almenys 5 fils.</li> <li>Donat un String, calcula el nombre de vocals que hi ha. Per aix\u00f2, llan\u00e7a cinc fils: un per a cada vocal. Mostra el total per a cada vocal i el total de vocals.</li> <li>Repeteix l'activitat anterior, per\u00f2 donat un fitxer de text.</li> <li>Donades dues matrius d'enters 3 \u00d7 3, calcula'n la multiplicaci\u00f3. Per aix\u00f2, llan\u00e7a nou fils: un per calcular cada element.</li> </ol> Com calcular un producte de matrius <p>Anem a detallar com s'han calculat alguns dels seus elements.</p> \\[ \\left( \\begin{array}{ccc} 2 &amp; 5 &amp; 1 \\\\ 4 &amp; -2 &amp; 0 \\\\ 1 &amp; 6 &amp; 2 \\end{array} \\right) \\cdot \\left( \\begin{array}{ccc} 1 &amp; 2 &amp; 3 \\\\ 3 &amp; 4 &amp; 1 \\\\ 1 &amp; -4 &amp; 2 \\end{array} \\right) = \\left( \\begin{array}{ccc} 18 &amp; 20 &amp; 13 \\\\ -2 &amp; 0 &amp; 10 \\\\ 21 &amp; 18 &amp; 13 \\end{array} \\right) \\] <p>L'element \\(a_{11}\\) s'obt\u00e9 multiplicant primera fila per primera columna:</p> \\[ \\left( \\begin{array}{ccc} \\fbox{2} &amp; \\fbox{5} &amp; \\fbox{1} \\\\ 4 &amp; -2 &amp; 0 \\\\ 1 &amp; 6 &amp; 2 \\end{array} \\right) \\cdot \\left( \\begin{array}{ccc} \\fbox{1} &amp; 2 &amp; 3 \\\\ \\fbox{3} &amp; 4 &amp; 1 \\\\ \\fbox{1} &amp; -4 &amp; 2 \\end{array} \\right) = \\left( \\begin{array}{ccc} \\fbox{18} &amp; 20 &amp; 13 \\\\ -2 &amp; 0 &amp; 10 \\\\ 21 &amp; 18 &amp; 13 \\end{array} \\right) \\] \\[ 2\\cdot1+5\\cdot3+1\\cdot1=2+15+1=18 \\] <p>L'element \\(a_{23}\\) s'obt\u00e9 multiplicant segona fila per tercera columna:</p> \\[ \\left( \\begin{array}{ccc} 2 &amp; 5 &amp; 1 \\\\ \\fbox{4} &amp; \\fbox{-2} &amp; \\fbox{0} \\\\ 1 &amp; 6 &amp; 2 \\end{array} \\right) \\cdot \\left( \\begin{array}{ccc} 1 &amp; 2 &amp; \\fbox{3} \\\\ 3 &amp; 4 &amp; \\fbox{1} \\\\ 1 &amp; -4 &amp; \\fbox{2} \\end{array} \\right) = \\left( \\begin{array}{ccc} 18 &amp; 20 &amp; 13 \\\\ -2 &amp; 0 &amp; \\fbox{10} \\\\ 21 &amp; 18 &amp; 13 \\end{array} \\right) \\] \\[ 4\\cdot3+(-2)\\cdot1+0\\cdot2=12-2+0=10 \\] <p>L'element \\(a_{31}\\) s'obt\u00e9 multiplicant tercera fila per primera columna:</p> \\[ \\left( \\begin{array}{ccc} 2 &amp; 5 &amp; 1 \\\\ 4 &amp; -2 &amp; 0 \\\\ \\fbox{1} &amp; \\fbox{6} &amp; \\fbox{2} \\end{array} \\right) \\cdot \\left( \\begin{array}{ccc} \\fbox{1} &amp; 2 &amp; 3 \\\\ \\fbox{3} &amp; 4 &amp; 1 \\\\ \\fbox{1} &amp; -4 &amp; 2 \\end{array} \\right) = \\left( \\begin{array}{ccc} 18 &amp; 20 &amp; 13 \\\\ -2 &amp; 0 &amp; 10 \\\\ \\fbox{21} &amp; 18 &amp; 13 \\end{array} \\right) \\] \\[ 1\\cdot1+6\\cdot3+1\\cdot2=1+18+2=21 \\] <p>L'element \\(a_{22}\\) s'obt\u00e9 multiplicant segona fila per segona columna:</p> \\[ \\left( \\begin{array}{ccc} 2 &amp; 5 &amp; 1 \\\\ \\fbox{4} &amp; \\fbox{-2} &amp; \\fbox{0} \\\\ 1 &amp; 6 &amp; 2 \\end{array} \\right) \\cdot \\left( \\begin{array}{ccc} 1 &amp; \\fbox{2} &amp; 3 \\\\ 3 &amp; \\fbox{4} &amp; 1 \\\\ 1 &amp; \\fbox{-4} &amp; 2 \\end{array} \\right) = \\left( \\begin{array}{ccc} 18 &amp; 20 &amp; 13 \\\\ -2 &amp; \\fbox{0} &amp; 10 \\\\ 21 &amp; 18 &amp; 13 \\end{array} \\right) \\] \\[ 4\\cdot2+(-2)\\cdot4+0\\cdot2=8-8+0=0 \\] <p>Els elements restants de la matriu producte es calculen seguint el mateix m\u00e8tode. </p> <ol> <li>Simula un convertidor d'escala de grisos a binari. Per aix\u00f2, donada una matriu 100 \u00d7 100 d'enters aleatoris entre 0 i 255 (tots dos inclosos), converteix-la en una nova matriu 100 \u00d7 100 on els valors de 0 a 127 passin a 0 i els valors de 128 a 255 a 1. Divideix el treball a 4 fils, un per cada regi\u00f3 de 50 \u00d7 50.</li> <li>Repeteix l'activitat anterior per\u00f2 atesa una imatge. Pistes: 1 , 2.</li> <li>Simula una cursa de relleus amb quatre corredors i amb pas de testimoni. Cada corredor \u00e9s un fil que comen\u00e7ar\u00e0 a c\u00f3rrer quan l'altre s'acabi (excepte el primer). Utilitza synchronized() , wait() i notify() per al pas del testimoni.</li> <li>Repeteix l'activitat anterior per\u00f2 fent servir la classe Semaphore.</li> <li>(lector-escriptor). Simula l'acc\u00e9s i l'escriptura a una base de dades. Per fer-ho, llan\u00e7a 20 fils simult\u00e0niament, 10 de lectura i 10 d'escriptura d'un enter. Els fils d'escriptura s'han d'incrementar en un sencer mentre no hi hagi un altre fil d'escriptura escrivint o un fil de lectura llegint. Els de lectura poden llegir i imprimir sencer encara que hi hagi altres fils de lectura per\u00f2 no mentre n'hi hagi un d'escriptura escrivint. Fes servir la classe Semaphore de Java.</li> </ol>"},{"location":"Moduls/ARXIU/2425/PSP/exercicisisolucions/ExercicisFils.html#activitats-dampliacio","title":"Activitats d'ampliaci\u00f3","text":"<ol> <li>Donades dues matrius d'enters aleatoris 100 \u00d7 100, calcula'n la multiplicaci\u00f3 sense fer servir fils. A continuaci\u00f3, fes-ho de nou per\u00f2 amb 10.000 fils: un per calcular cada element. Finalment, calcula el temps d'execuci\u00f3 amb fils i sense.</li> </ol> <p>22. Problema del supermercat:</p> <p>Escriu una classe anomenada Parking que implementi el funcionament de N caixes d'un supermercat. Els M clients del supermercat estaran un temps aleatori comprant i amb posterioritat seleccionaran aleat\u00f2riament en quina caixa posicionar-se per situar-se en la seva cua corresponent. Quan els toqui el torn seran atesos procedint al pagament corresponent i guardant aquesta quantitat a la variable Resultats del supermercat. S'han de crear tants threads com a clients hi hagi i els par\u00e0metres M i N s\u2019han de passar com a arguments al programa. Per simplificar la implementaci\u00f3, el valor de pagament de cada client pot ser aleatori.</p> <p>22a. Problema del supermercat modern:</p> <p>Escriu una classe anomenada ParkingModern que implementi el funcionament de N caixes d\u2019un supermercat. Els M clients del supermercat realitzaran el mateix proc\u00e9s que a l\u2019exercici anterior del supermercat, per\u00f2 en aquest cas, en haver acabat la compra, els clients es col\u00b7locaran en una \u00fanica coa. Quan una caixa estigui disponible, el primer de la coa ser\u00e0 at\u00e8s a la caixa corresponent. Codificau M i N com a constants dins la vostra classe. De igual manera que a l\u2019exercici original, simulau amb temps aleatori els seg\u00fcents processos:</p> <ul> <li> <p>Temps de compra</p> </li> <li> <p>Temps que tarda el caixer de cada una de les caixes en cobrar a un client.</p> </li> </ul> <p>Guardar en una variable el resultat del cobro de totes les caixes.</p> <p>22b. Qu\u00e8 \u00e9s m\u00e9s \u00f2ptim una \u00fanica coa o tantes coes com caixes?</p> <p></p> <p>Fes les dues versions del problema del p\u00e0rking. A continuaci\u00f3 demostra a trav\u00e9s de les modificacions als dos codis que consideris oportunes, quin dels dos m\u00e8todes \u00e9s m\u00e9s eficient.</p> <p>Quan hagis arribat a la teva conclusi\u00f3, llegeix aquesta entrada del bloc.</p> <p>23. Simulaci\u00f3 parking</p> <p></p> <p>Escriu una classe que simuli el funcionament d'un aparcament. Fes-ho de tal manera que contengui en dues constants el nombre de places del p\u00e0rquing i el nombre de cotxes existents en el sistema. S'han de crear tants threads com cotxes hi hagi. L'aparcament disposar\u00e0 d'una \u00fanica entrada i una \u00fanica sortida. A l'entrada de vehicles hi haur\u00e0 un dispositiu de control que permeti o impedeixi l'acc\u00e9s dels mateixos al p\u00e0rquing, depenent de l'estat actual del mateix (places d'aparcament disponibles). Els temps d'espera dels vehicles dins del p\u00e0rquing s\u00f3n aleatoris. En el moment en qu\u00e8 un vehicle surt del p\u00e0rquing, notifica al dispositiu de control el n\u00famero de la pla\u00e7a que tenia assignada i s'allibera la pla\u00e7a que estigu\u00e9s ocupant, quedant aix\u00ed aquestes novament disponibles.</p> <p>Un vehicle que ha sortit del p\u00e0rquing esperar\u00e0 un temps aleatori per tornar a entrar novament en el mateix. Per tant, els vehicles han d'estar entrant i sortint indefinidament del p\u00e0rquing. \u00c9s important que es dissenyi el programa de tal manera que s\u2019asseguri que, abans o despr\u00e9s, un vehicle que roman esperant a l'entrada del p\u00e0rquing entrar\u00e0 en el mateix (no es produeixi inanici\u00f3).</p> <p>Aquest exercici l\u2019heu de plantejar utilitzant notify i wait. </p> <p>24. Simulaci\u00f3 bany</p> <p> </p> <p>Heu de fer un programa que simuli el proc\u00e9s d'un bany public. Ha d'estar fet utilitzant wait() i notify() per\u00f2 on tres persones (Tofol, Biel i Pep) arriben de forma aleat\u00f2ria al bany i l'ordre d'arribada ha de ser l'ordre d'entrada al bany (FIFO). Feis un document de text \ud83d\udcc4 amb l'explicaci\u00f3 a alt nivell del vostre plantejament del programa. Es tracta d'explicar els detalls t\u00e8cnics relacionats amb els fils que heu creat (no heu d'explicar el que \u00e9s un bucle ni les variables utilitzades a no ser que tingui rellev\u00e0ncia amb el problema que resoleu. Per exemple, si utilitzeu una booleana per sincronitzar part d'un proc\u00e9s o un integer per garantir l'ordre, aleshores s\u00ed).</p>"},{"location":"Moduls/ARXIU/2425/PSP/exercicisisolucions/PSPUT02Supermercat.html","title":"Exercici multifil del Supermercat","text":"<p>Escriu una classe anomenada PSPUT02Supermercat_&lt;nom&gt; que implementi el funcionament de N caixes d'un supermercat. Els M clients del supermercat estaran un temps aleatori comprant i amb posterioritat seleccionaran aleat\u00f2riament en quina caixa posicionar-se per situar-se en la seva cua corresponent. Quan els toqui el torn seran atesos procedint al pagament corresponent i guardant aquesta quantitat a la variable Resultats del supermercat. S'han de crear tants threads com a clients hi hagi i els par\u00e0metres M i N s\u2019han de passar com a arguments al programa. Per simplificar la implementaci\u00f3, el valor de pagament de cada client pot ser aleatori. </p> <p>Codificacio del nom pels entregables</p> <p>&lt;nom&gt; ho substituirem per la primera lletra del vostre nom i a continuaci\u00f3 el vostre primer llinatge. Tot en min\u00fascules. Exemple: Tofol Verdera seria tverdera</p>"},{"location":"Moduls/ARXIU/2425/PSP/exercicisisolucions/UT03Exercicis1.html","title":"SPU03E01 Col\u00b7lecci\u00f3 exercicis comunicaci\u00f3  en xarxa","text":"<p> Exercici 1</p> <p>Escriu una parella de programes (A i B) que transfereixin un fitxer entre  ells. El programa A haur\u00e0 de llegir un fitxer de text del disc i enviar-lo a B. B  rebr\u00e0 el contingut del fitxer i l'imprimir\u00e0 per la seva sortida est\u00e0ndard.  Utilitza per a aix\u00f2 sockets stream.</p> <p> Exercici 2</p> <p>Escriu un programa que contesti a preguntes. El programa crear\u00e0 un  socket stream i esperar\u00e0 connexions. Quan arribi una connexi\u00f3, llegir\u00e0 els  missatges rebuts, byte a byte, fins que trobi el car\u00e0cter ASCII \"?\" (signe de  final d'interrogaci\u00f3). Quan aix\u00f2 passi, construir\u00e0 una frase amb tots els  bytes rebuts i contestar\u00e0 amb un missatge. El contingut del missatge  dependr\u00e0 de la frase rebuda:</p> <p>- Si la frase \u00e9s \"Com et dius?\", respondr\u00e0 amb la cadena \"Em dic Exercici  2\".</p> <p>- Si la frase \u00e9s \"Quantes l\u00ednies de codi tens?\", Respondr\u00e0 amb el nombre  de l\u00ednies de codi que tingui.</p> <p>- Si la frase \u00e9s qualsevol altra cosa, respondr\u00e0 \"No he ent\u00e8s la pregunta\".</p> <p> Exercici 3</p> <p>Escriu un programa que respongui a salutacions utilitzant sockets  Datagram. El programa escoltar\u00e0 pel s\u00f2col, missatges que continguin la  cadena de text \"Uep\". Quan en rebi un, respondr\u00e0 al seu emissor amb un  altre missatge que contingui la cadena \"Qu\u00e8 tal?\". Escriu a m\u00e9s un  programa addicional per provar el funcionament d'aquest.</p> <p> Exercici 4</p> <p>Escriu una parella de programes (A i B) que usin socket Datagram per  intercanviar un missatge anomenat \u201ctoken\u201d. A l'arrencar, el programa A  enviar\u00e0 un missatge al B amb la paraula \"token\". Quan el B la rebi, enviar\u00e0  de tornada a A un missatge amb la paraula \"rebut\", i acabar\u00e0. Quan A rebi  el missatge de B, acabar\u00e0 tamb\u00e9.</p> <p> Exercici 5</p> <p>Escriu un programa que compti el nombre de connexions que vagi rebent.  Aquest programa disposar\u00e0 d'un socket stream servidor. Cada vegada que  un socket client es connecti, aquest li enviar\u00e0 un missatge amb el nombre de clients connectats fins ara. Aix\u00ed doncs, el primer client que es connecti  rebr\u00e0 un 1, el segon un 2, el tercer un 3, etc.</p> <p> Exercici 6</p> <p>Crea una versi\u00f3 generalitzada dels programes de l'exercici 4, per fer  possible que el token es passi entre un grup de 2 o m\u00e9s programes, en  forma d'anell. Cadascun dels programes s'ha d'arrencar indicant com a  arguments d'entrada la seva posici\u00f3 en l'anell i la mida de l'anell. El  programa que es trobi en la posici\u00f3 n\u00famero 1 (el primer), generar\u00e0 el  missatge \"token\" i l'hi enviar\u00e0 al programa 2. Quan aquest el rebi l'hi  passar\u00e0 al 3, i aix\u00ed successivament. Quan el rebi l'\u00faltim programa, el  trametr\u00e0 de tornada al nombre 1. Quan el n\u00famero 1 el rebi, la seq\u00fc\u00e8ncia  s'interrompr\u00e0 (el testimoni haur\u00e0 donat una volta completa a l'anell).</p> <p>S'han de complir a m\u00e9s les seg\u00fcents restriccions:</p> <p>- Tots els programes han de tenir el mateix codi font. Es tracta, per tant, del  mateix programa, per\u00f2 executat amb diferents par\u00e0metres.</p> <p>- El programa ha de permetre un nombre variable d'elements en l'anell. La  mida de l'anell s'especificar\u00e0 per endavant.</p> <p>Es pot programar utilitzant s\u00f2cols stream o s\u00f2cols Datagram.</p> <p> Exercici 7</p> <p>Crea un programa servidor que pugui atendre fins a 3 clients. Ha d'enviar a cada client un missatge indicant el nombre de client que \u00e9s. Aquest nombre ser\u00e0 1, 2 o 3. El client mostrar\u00e0 el missatge rebut pel servidor.</p> <p>Canvia el programa per a que ho faci amb N clients, essent N un par\u00e0metre que haur\u00e0s de definir en el programa. </p> Possible soluci\u00f3 <pre><code>import java.io.*^;\nimport java.net.*;\n\npublic class exercici7Servidor {\n    public staci void main(String[] arg) throws IOException {\n        int nombrePort = 6000;\n        ServerSocket servidor = new ServerSocket(nombrePort);\n        String cad=\"\";\n        Sys\n</code></pre>"},{"location":"Moduls/ARXIU/2425/SI/index.html","title":"Informaci\u00f3 general del m\u00f2dul","text":"<p>Reial Decret 1691/2007</p> <p>Orden EDU/2187/2009</p> <p>Durada m\u00f2dul</p> <p>140 hores</p>"},{"location":"Moduls/ARXIU/2425/SI/index.html#resultats-daprenentatge","title":"Resultats d'aprenentatge","text":"<p>RA1.- Aplica mesures de seguretat passiva en sistemes inform\u00e0tics descrivint caracter\u00edstiques d'entorns i relacionant-les amb les seves necessitats. RA2.- Gestiona dispositius d'emmagatzematge descrivint els procediments efectuats i aplicant t\u00e8cniques per a assegurar la integritat de la informaci\u00f3. RA3.- Aplica mecanismes de seguretat activa descrivint les seves caracter\u00edstiques i relacionant-les amb les necessitats d'\u00fas del sistema inform\u00e0tic.  RA4.- Assegura la privadesa de la informaci\u00f3 transmesa en xarxes inform\u00e0tiques descrivint vulnerabilitats i instal\u00b7lant programari espec\u00edfic.  RA5.- Reconeix la legislaci\u00f3 i normativa sobre seguretat i protecci\u00f3 de dades analitzant les repercussions del seu incompliment.</p>"},{"location":"Moduls/ARXIU/2425/SI/index.html#continguts","title":"Continguts","text":""},{"location":"Moduls/ARXIU/2425/SI/index.html#unitat-de-treball-1-introduccio-a-la-seguretat-informatica-10-hores","title":"UNITAT DE TREBALL 1: Introducci\u00f3 a la seguretat inform\u00e0tica (10 hores).","text":"<ol> <li>Seguretat inform\u00e0tica i seguretat de la informaci\u00f3</li> <li>Conceptes b\u00e0sics<ol> <li>Actius</li> <li>Vulnerabilitats</li> <li>Amenaces</li> <li>Atacs</li> <li>Riscos</li> <li>Impactes</li> <li>Desastres</li> </ol> </li> <li>Principis de la seguretat inform\u00e0tica<ol> <li>Integritat</li> <li>Confidencialitat</li> <li>Disponibilitat</li> <li>Altres caracter\u00edstiques desitjables en un sistema segur</li> </ol> </li> <li>Pol\u00edtiques de seguretat</li> <li>Plans de conting\u00e8ncia</li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/index.html#unitat-de-treball-2-seguretat-fisica-equips-25-hores","title":"UNITAT DE TREBALL 2: Seguretat f\u00edsica. Equips (25 hores).","text":"<ol> <li>Import\u00e0ncia de la seguretat f\u00edsica</li> <li>Protecci\u00f3 f\u00edsica dels equips.<ol> <li>Entorn f\u00edsic de l'equip.</li> <li>Instal\u00b7lacions.</li> <li>Sistemes d'alimentaci\u00f3 ininterrompuda.</li> <li>Controls de pres\u00e8ncia i acc\u00e9s.</li> </ol> </li> <li>Centres de processament de dades.<ol> <li>Caracter\u00edstiques constructives i de disposici\u00f3</li> <li>Sistemes de seguretat del CPD.</li> <li>Climatitzaci\u00f3</li> <li>Dades</li> </ol> </li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/index.html#unitat-de-treball-3-seguretat-passiva-emmagatzematge-30-hores","title":"UNITAT DE TREBALL 3: Seguretat passiva. Emmagatzematge. (30 hores).","text":"<ol> <li>Gesti\u00f3 i pol\u00edtiques d'emmagatzematge.</li> <li>Dispositius d'emmagatzematge.<ol> <li>Classificaci\u00f3</li> <li>Serveis d'emmagatzematge remot</li> <li>Emmagatzematge extern</li> </ol> </li> <li>Tecnologies d'emmagatzematge redundant i distribu\u00eft<ol> <li>RAID 0</li> <li>RAID 1</li> <li>RAID 5</li> </ol> </li> <li>C\u00f2pies de seguretat<ol> <li>Classes de c\u00f2pies de seguretat</li> <li>Realitzaci\u00f3 de c\u00f2pies de seguretat</li> </ol> </li> <li>Gesti\u00f3 d'imatges del sistema</li> <li>Recuperaci\u00f3 de dades eliminades</li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/index.html#unitat-de-treball-4-seguretat-logica-sistemes-operatius-i-aplicacions-14-hores","title":"UNITAT DE TREBALL 4: Seguretat l\u00f2gica. Sistemes operatius i aplicacions. (14 hores).","text":"<ol> <li>Concepte de seguretat l\u00f2gica.</li> <li>Acc\u00e9s a sistemes operatius i a aplicacions.<ol> <li>Contrasenyes.</li> <li>Llistes de control d'acc\u00e9s.</li> </ol> </li> <li>Acc\u00e9s a aplicacions per internet.</li> <li>Altres alternatives de gesti\u00f3 d'identitats.<ol> <li>Autenticaci\u00f3 d'usuaris</li> </ol> </li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/index.html#unitat-de-treball-5-criptografia-30-hores","title":"UNITAT DE TREBALL 5: Criptografia. (30 hores).","text":"<ol> <li>Introducci\u00f3 a la criptografia.<ol> <li>Definicions</li> <li>Elements d'un sistemes d'encriptaci\u00f3</li> <li>Tipus de sistemes de xifrat.</li> </ol> </li> <li>Xifrat de clau sim\u00e8trica</li> <li>Xifrat de clau asim\u00e8trica.<ol> <li>Autenticaci\u00f3 amb claus asim\u00e8triques</li> <li>Confidencialitat amb claus asim\u00e8triques.</li> <li>Algorismes de xifrat.</li> </ol> </li> <li>Algorismes de xifrat hash</li> <li>Sistemes h\u00edbrids<ol> <li>5.1 PGP (Pretty Good Privacy)</li> <li>5.2 OpenPGP</li> <li>5.3 GnuPG (GNU Privacy Guard)</li> </ol> </li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/index.html#unitat-de-treball-6-seguretat-activa-acces-a-xarxes-20-hores","title":"UNITAT DE TREBALL 6: Seguretat activa. Acc\u00e9s a xarxes. (20 hores).","text":"<ol> <li>Vulnerabilitats dels serveis en xarxa<ol> <li>Vulnerabilitats en el nivell f\u00edsic</li> <li>Vulnerabilitats en el nivell d'enlla\u00e7</li> <li>Vulnerabilitats en el nivell de xarxa</li> <li>Vulnerabilitats en el nivell d'enlla\u00e7</li> <li>Vulnerabilitats en els nivells de sessi\u00f3, presentaci\u00f3 i aplicaci\u00f3</li> <li>Atacs de denegaci\u00f3 de servei en xarxes</li> </ol> </li> <li>Monitoratge<ol> <li>Port mirroring</li> <li>Network tap</li> <li>Eines de monitoratge</li> </ol> </li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/index.html#unitat-de-treball-7-seguretat-activa-control-de-xarxes-15-hores","title":"UNITAT DE TREBALL 7: Seguretat activa. Control de xarxes. (15 hores).","text":"<ol> <li>T\u00e8cniques de protecci\u00f3 en xarxes<ol> <li>Tallafocs. Iptables</li> <li>Zones desmilitaritzades (DMZ)</li> <li>Detectors d'intrusos</li> <li>Proxy</li> <li>Gesti\u00f3 unificada d'amenaces</li> </ol> </li> <li>Seguretat en els protocols per a xarxes sense fils<ol> <li>Atacs m\u00e9s comuns</li> <li>Mecanismes de seguretat</li> <li>Falses mesures de seguretat</li> </ol> </li> <li>Auditories de seguretat inform\u00e0tica<ol> <li>Tipus d'auditories</li> <li>Eines per a auditories</li> </ol> </li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/index.html#unitat-de-treball-8-normativa-legal-en-materia-de-seguretat-informatica-6-hores","title":"UNITAT DE TREBALL 8: Normativa legal en mat\u00e8ria de seguretat inform\u00e0tica (6 hores).","text":"<ol> <li>Con\u00e8ixer la normativa espanyola en mat\u00e8ria de seguretat inform\u00e0tica.</li> <li>Analitzar la normativa i les aplicacions de la LOPD, en mat\u00e8ria de seguretat de les dades de car\u00e0cter personal.</li> <li>Analitzar la normativa i les aplicacions de la LSSICE, en mat\u00e8ria de comer\u00e7 electr\u00f2nic i activitats empresarials via Internet.</li> <li>Valorar la import\u00e0ncia de la normativa com a reguladora de drets i obligacions a ciutadans i empreses.</li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/index.html#temporitzacio","title":"Temporitzaci\u00f3","text":"UNITAT DE TREBALL RAs DURADA 1 Introducci\u00f3 a la seguretat inform\u00e0tica RA1;RA4;RA5 10 hores 2 Seguretat f\u00edsica. Equips RA1 25 hores 3 Seguretat passiva. Emmagatzematge RA1;R2 30 hores 4 Seguretat l\u00f2gica. Sistemes operatius i aplicacions RA1 14 hores 5 Criptografia RA4 30 hores 6 Seguretat activa. Acc\u00e9s a xarxes RA1;RA3;RA4 20 hores 7 Seguretat activa. Control de xarxes RA1;RA3;RA4 15 hores 8 Reglament general de protecci\u00f3 de dades RA5 6 hores TOTAL HORES 140 TRIMESTRE UT - RA Data prevista inici 1er Trimestre UT1 - RA1;RA4;RA5 20/09/2024 1er Trimestre UT2 - RA1 04/10/2024 1er Trimestre UT3 - RA1;RA2 02/11/2024 1er Trimestre UT4 - RA1 7/12/2024 2n Trimestre UT5 - RA4 UT6 7/1/2025 2n Trimestre UT6 - RA1;RA3;RA4 11/2/2025 2n Trimestre UT7 - RA1;RA3;RA4 25/2/2025 2n Trimestre UT8 - RA5"},{"location":"Moduls/ARXIU/2425/SI/SIUT01UT02_RA3.html","title":"SIUT01UT02 RA3","text":""},{"location":"Moduls/ARXIU/2425/SI/SIUT01UT02_RA3.html#ra3-aplica-mecanismes-de-seguretat-activa-descrivint-les-seves-caracteristiques-i-relacionant-les-amb-les-necessitats-dus-del-sistema-informatic","title":"RA3.- Aplica mecanismes de seguretat activa descrivint les seves caracter\u00edstiques i relacionant-les amb les necessitats d'\u00fas del sistema inform\u00e0tic.","text":"<p>Aqu\u00ed teniu les diapositives que hem presentat a classe:</p> Aquest \u00e9s un presentaci\u00f3 de Microsoft Office incrustat, amb tecnologia de Office."},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03.html","title":"Treball d'assimilaci\u00f3 i comparativa SIUT02UT03","text":""},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03.html#assimilacio-de-conceptes-i-comparativa-entre-diferents-fonts-dinformacio-seguretat-passiva-equips-i-emmagatzematge","title":"Assimilaci\u00f3 de conceptes i comparativa entre diferents fonts d'informaci\u00f3 (seguretat passiva equips i emmagatzematge)","text":"<p>A continuaci\u00f3 trobareu els enlla\u00e7os a 4 documents diferents que parlen sobre la mateixa tem\u00e0tica: \"La seguretat passiva en equips inform\u00e0tics i sistemes d'emmagatzematge\"</p> <p>El que heu de fer \u00e9s llegir els documents de forma activa (\u00e9s a dir prenent notes sobre les coses que es diuen i les considereu importants) i a continuaci\u00f3 fer una comparativa entre els diferents documents. Aquesta comparativa, una vegada la tingueu feta en paper, avisareu al professor perqu\u00e8 la revisi i a continuaci\u00f3 la passareu a l'ordinador en format de presentaci\u00f3 o en un document de text (en ambd\u00f3s casos ben estructurat i redactat, i mantenint les particularitats de cada un dels dos formats) </p> <p>Per exemple, \"La idea introduct\u00f2ria principal \u00e9s la mateixa en els 4 documents\" o \"Inicialment els 4 documents fan una introducci\u00f3 per\u00f2 mentres 2 d'ells coincideixen en ... els altres dos tenen una percepci\u00f3 o concepte diferent\", i aix\u00ed amb la resta de punts que es tractin. \u00d2bviament si apareix qualcun punt que nom\u00e9s apareix en un dels documents, aleshores tamb\u00e9 ho heu de destacar i referenciar.</p> <p>A mode d'exemple teniu dos documents que vos donaran indicacions molt generals sobre els continguts que es recomana que tenguin els dos formats demanats:</p> <ul> <li>Estructura formal d'un document que resumeix una comparativa</li> <li>Estructura formal d'una presentaci\u00f3 que resumeix una comparativa</li> </ul> <ul> <li> <p> Document 1 </p> <p> Fes clic aqu\u00ed per veure el contingut</p> </li> <li> <p> Document 2 </p> <p> Fes clic aqu\u00ed per veure el contingut</p> </li> <li> <p> Document 3</p> <p> Fes clic aqu\u00ed per veure el contingut</p> </li> <li> <p> Document 4</p> <p> Fes clic aqu\u00ed per veure el contingut</p> </li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc1.html","title":"SIUT02UT03 Doc1","text":""},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc1.html#la-seguretat-passiva-en-equips-informatics-i-sistemes-demmagatzematge","title":"La seguretat passiva en equips inform\u00e0tics i sistemes d'emmagatzematge","text":"<p>La seguretat inform\u00e0tica \u00e9s un \u00e0mbit essencial per protegir la informaci\u00f3 i garantir la integritat dels sistemes digitals. Dins d\u2019aquest camp, la seguretat passiva es refereix a les mesures preventives i estructurals destinades a reduir riscos i protegir dades i dispositius, independentment de la intervenci\u00f3 humana directa. A difer\u00e8ncia de la seguretat activa, que implica respostes immediates a incidents (com l'\u00fas d'antivirus o tallafocs), la seguretat passiva actua com a primera l\u00ednia defensiva i assegura que els sistemes es mantinguin robustos davant de possibles amenaces.</p>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc1.html#principals-components-de-la-seguretat-passiva","title":"Principals components de la seguretat passiva","text":"<ol> <li> <p>Protecci\u00f3 f\u00edsica dels equips    Un aspecte crucial de la seguretat passiva \u00e9s garantir que els equips inform\u00e0tics estiguin f\u00edsicament protegits. Aix\u00f2 inclou:</p> <ul> <li>L\u2019\u00fas de sales segures, amb acc\u00e9s controlat mitjan\u00e7ant targetes, claus o sistemes biom\u00e8trics.</li> <li>La instal\u00b7laci\u00f3 de sistemes de vigil\u00e0ncia, com c\u00e0meres de seguretat, per supervisar els espais on es guarden servidors o dispositius cr\u00edtics.</li> <li>Proteccions contra factors ambientals com la humitat, les temperatures extremes, o les fluctuacions de tensi\u00f3 el\u00e8ctrica mitjan\u00e7ant sistemes d\u2019alimentaci\u00f3 ininterrompuda (SAI) i refrigeraci\u00f3 adequada.</li> </ul> </li> <li> <p>C\u00f2pies de seguretat (backups)    Un dels pilars de la seguretat passiva \u00e9s l'exist\u00e8ncia de c\u00f2pies de seguretat actualitzades. Aquestes permeten recuperar dades en cas de p\u00e8rdua o dany. Les c\u00f2pies han de complir amb els seg\u00fcents criteris:</p> <ul> <li>Freq\u00fc\u00e8ncia i redund\u00e0ncia: Es recomana fer c\u00f2pies regulars i mantenir versions anteriors per prevenir errors o corrupcions de dades recents.</li> <li>Emmagatzematge diversificat: Les c\u00f2pies s\u2019han de guardar en diversos llocs, incloent-hi sistemes locals i remots, com el n\u00favol o centres de dades externs, per protegir-les davant cat\u00e0strofes f\u00edsiques com incendis o inundacions.</li> </ul> </li> <li> <p>Xifratge de dades    El xifratge garanteix que la informaci\u00f3 sigui inintel\u00b7ligible per a tercers no autoritzats. Aquest mecanisme s\u2019aplica tant a les dades en tr\u00e0nsit (quan es transmeten a trav\u00e9s de la xarxa) com a les dades emmagatzemades. Les unitats de disc amb xifratge integrat s\u00f3n un exemple com\u00fa en sistemes d\u2019emmagatzematge moderns.</p> </li> <li> <p>Seguretat en els sistemes d'emmagatzematge    Els sistemes d\u2019emmagatzematge s\u00f3n especialment vulnerables a fallades i atacs. La seguretat passiva inclou l\u2019\u00fas de tecnologies com:</p> <ul> <li>RAID (Redundant Array of Independent Disks): Aquest sistema permet emmagatzemar dades de manera redundada, oferint toler\u00e0ncia a fallades en cas que un dels discos falli.</li> <li>Control d'acc\u00e9s: Assegurar que nom\u00e9s els usuaris autoritzats puguin accedir als dispositius o particions espec\u00edfiques.</li> <li>Marcatge de dispositius externs: Identificar clarament discs durs, USBs i altres dispositius per evitar p\u00e8rdues o confusions.</li> </ul> </li> <li> <p>Auditories i revisions peri\u00f2diques    Una mesura passiva important \u00e9s la revisi\u00f3 constant dels sistemes, per detectar possibles vulnerabilitats o anomalies abans que siguin explotades. Les auditories permeten comprovar l\u2019efectivitat de les c\u00f2pies de seguretat, la fiabilitat del maquinari i la implementaci\u00f3 correcta de protocols de seguretat.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc1.html#beneficis-i-limitacions-de-la-seguretat-passiva","title":"Beneficis i limitacions de la seguretat passiva","text":"<p>Un dels avantatges m\u00e9s significatius de la seguretat passiva \u00e9s que ofereix protecci\u00f3 cont\u00ednua i preventiva, sense requerir accions immediates. Aix\u00f2 la fa especialment \u00fatil per afrontar amenaces que no sempre s\u00f3n detectades a temps, com desastres naturals, robatoris f\u00edsics o p\u00e8rdues accidentals de dades. Tamb\u00e9 redueix el marge d\u2019error hum\u00e0, ja que moltes mesures estan automatitzades o integrades en els sistemes.</p> <p>Tanmateix, la seguretat passiva presenta algunes limitacions. No \u00e9s suficient per protegir sistemes davant d\u2019atacs sofisticats o en temps real, com ara programari malici\u00f3s avan\u00e7at o intrusions en xarxes. Per tant, cal combinar-la amb mesures actives per assegurar una protecci\u00f3 completa.</p>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc1.html#conclusio","title":"Conclusi\u00f3","text":"<p>La seguretat passiva \u00e9s fonamental en qualsevol estrat\u00e8gia de protecci\u00f3 inform\u00e0tica. Les mesures com el xifratge, les c\u00f2pies de seguretat i la protecci\u00f3 f\u00edsica dels equips constitueixen la base per garantir la integritat i la disponibilitat de les dades. Tot i aix\u00ed, per aconseguir una seguretat integral, \u00e9s imprescindible complementar-la amb mesures actives, creant un sistema defensiu robust i eficient. Les empreses i els usuaris individuals han d\u2019entendre que una inversi\u00f3 adequada en seguretat passiva \u00e9s una asseguran\u00e7a contra p\u00e8rdues irreparables i una pe\u00e7a clau en la seva resili\u00e8ncia digital.</p>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc2.html","title":"SIUT02UT03 Doc2","text":""},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc2.html#la-seguretat-passiva-en-equips-informatics-i-sistemes-demmagatzematge","title":"La seguretat passiva en equips inform\u00e0tics i sistemes d'emmagatzematge","text":"<p>La seguretat passiva en el m\u00f3n de la inform\u00e0tica \u00e9s la primera l\u00ednia de defensa contra les amenaces externes. A difer\u00e8ncia de la seguretat activa, que implica l'\u00fas de software i mesures l\u00f2giques per protegir els sistemes, la seguretat passiva se centra en la protecci\u00f3 f\u00edsica dels equips i les dades. En ess\u00e8ncia, es tracta de crear un entorn f\u00edsic segur que dificulti al m\u00e0xim qualsevol intent d'acc\u00e9s no autoritzat o de dany.</p>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc2.html#per-que-es-important-la-seguretat-passiva","title":"Per qu\u00e8 \u00e9s important la seguretat passiva?","text":"<ul> <li>Prevenci\u00f3 de robatoris: Els equips inform\u00e0tics, especialment els port\u00e0tils, s\u00f3n objectius freq\u00fcents de robatori. Una bona seguretat passiva pot dissuadir els lladres i dificultar l'acc\u00e9s als dispositius.</li> <li>Protecci\u00f3 contra danys f\u00edsics: Els equips inform\u00e0tics s\u00f3n sensibles a factors ambientals com la temperatura, la humitat i els impactes f\u00edsics. La seguretat passiva ajuda a protegir-los d'aquests danys.</li> <li>Prevenci\u00f3 d'acc\u00e9s no autoritzat: En molts casos, el primer pas per a un atac cibernetic \u00e9s l'acc\u00e9s f\u00edsic a un equip. La seguretat passiva dificulta aquest acc\u00e9s.</li> <li>Compliment normatiu: Moltes empreses i organitzacions estan obligades a complir amb normes de seguretat que inclouen mesures de protecci\u00f3 f\u00edsica.</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc2.html#mesures-de-seguretat-passiva","title":"Mesures de seguretat passiva","text":"<ul> <li>Ubicaci\u00f3 dels equips:<ul> <li>Accessibilitat: Els equips haurien d'estar ubicats en zones amb control d'acc\u00e9s i vigil\u00e0ncia.</li> <li>Ambient: L'entorn ha de ser sec, amb una temperatura estable i lluny de finestres o altres fonts de calor directa.</li> <li>Seguretat contra incendis: Els equips han d'estar protegits contra incendis mitjan\u00e7ant sistemes d'extinci\u00f3 i deteccions d'incendis.</li> </ul> </li> <li>Control d'acc\u00e9s:<ul> <li>Portes i finestres segures: Les portes d'acc\u00e9s a les sales inform\u00e0tiques haurien d'estar equipades amb panells s\u00f2lids, pany i claus, i sistemes d'alarma.</li> <li>Sistemes de videovigil\u00e0ncia: Les c\u00e0meres de seguretat permeten monitoritzar l'activitat a l'interior i a l'exterior de les instal\u00b7lacions.</li> <li>Control d'accessos: L'\u00fas de targetes d'identificaci\u00f3 o sistemes biom\u00e8trics permet controlar qui entra i surt de les zones restringides.</li> </ul> </li> <li>Protecci\u00f3 dels equips:<ul> <li>Ancoratge: Els equips haurien d'estar ancorats a les taules o a la paret per evitar que siguin robats o despla\u00e7ats.</li> <li>Caixes fortes: La informaci\u00f3 confidencial ha de ser emmagatzemada en caixes fortes o armaris segurs.</li> <li>UPS: Un sistema d'alimentaci\u00f3 ininterrompuda (UPS) protegeix els equips contra talls de corrent i sobretensions.</li> </ul> </li> <li>Gesti\u00f3 de dispositius m\u00f2bils:<ul> <li>Encriptaci\u00f3: Els dispositius m\u00f2bils han d'estar encriptats per protegir les dades en cas de p\u00e8rdua o robatori.</li> <li>Seguiment: Els dispositius m\u00f2bils poden ser rastrejats en cas de robatori.</li> </ul> </li> <li>Conscienciaci\u00f3 dels usuaris:<ul> <li>Formaci\u00f3: Els usuaris han de ser conscients de les mesures de seguretat passiva i de la seva import\u00e0ncia.</li> <li>Procediments: S'han d'establir procediments a seguir en cas de p\u00e8rdua o robatori d'un dispositiu.</li> </ul> </li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc2.html#sistemes-demmagatzematge","title":"Sistemes d'emmagatzematge","text":"<p>La seguretat passiva tamb\u00e9 \u00e9s crucial per als sistemes d'emmagatzematge, tant els interns com els externs. Els discs durs, les unitats USB i els sistemes de c\u00f2pia de seguretat han d'estar protegits f\u00edsicament per evitar p\u00e8rdues de dades.</p> <ul> <li>Ubicaci\u00f3: Els sistemes d'emmagatzematge haurien d'estar ubicats en zones amb control d'acc\u00e9s i protegits contra inundacions i altres riscos naturals.</li> <li>C\u00f2pies de seguretat: Les c\u00f2pies de seguretat han de ser emmagatzemades en un lloc f\u00edsicament separat dels originals.</li> <li>Encriptaci\u00f3: Les dades emmagatzemades haurien d'estar encriptades per protegir-les en cas d'acc\u00e9s no autoritzat.</li> </ul> <p>En conclusi\u00f3, la seguretat passiva \u00e9s un element fonamental per garantir la seguretat dels equips inform\u00e0tics i dels sistemes d'emmagatzematge. Combinada amb mesures de seguretat activa, proporciona una protecci\u00f3 integral contra les amenaces cibern\u00e9tiques i f\u00edsiques.</p>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc3.html","title":"SIUT02UT03 Doc3","text":""},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc3.html#la-seguretat-passiva-en-equips-informatics-i-sistemes-demmagatzematge-una-primera-linia-de-defensa","title":"La seguretat passiva en equips inform\u00e0tics i sistemes d'emmagatzematge: una primera l\u00ednia de defensa","text":"<p>La seguretat inform\u00e0tica, en l'era digital actual, \u00e9s un aspecte crucial tant per a individus com per a empreses. Sovint ens centrem en les mesures de seguretat actives, com els antivirus, els tallafocs i les contrasenyes complexes. No obstant aix\u00f2, la seguretat passiva, aquella que protegeix f\u00edsicament els equips i la informaci\u00f3, constitueix la primera l\u00ednia de defensa i \u00e9s fonamental per garantir la integritat dels nostres sistemes.</p> <p>Qu\u00e8 \u00e9s la seguretat passiva?</p> <p>La seguretat passiva en el context inform\u00e0tic fa refer\u00e8ncia a les mesures f\u00edsiques i ambientals que es prenen per protegir els equips inform\u00e0tics, els sistemes d'emmagatzematge i la informaci\u00f3 que contenen. A difer\u00e8ncia de la seguretat activa, que es basa en programari i processos, la seguretat passiva se centra en la protecci\u00f3 f\u00edsica dels elements.</p> <p>Per qu\u00e8 \u00e9s important la seguretat passiva?</p> <ul> <li>Prevenci\u00f3 de robatoris: Un equip f\u00edsicament protegit \u00e9s menys probable que sigui robat.</li> <li>Protecci\u00f3 contra danys f\u00edsics: Els equips poden patir danys per inundacions, incendis, o simplement per mala manipulaci\u00f3.</li> <li>Prevenci\u00f3 d'acc\u00e9s no autoritzat: Una bona seguretat passiva dificulta l'acc\u00e9s f\u00edsic a equips i dades confidencials.</li> <li>Compliment normatiu: En molts sectors, hi ha normatives que exigeixen mesures de seguretat f\u00edsiques espec\u00edfiques.</li> </ul> <p>Mesures de seguretat passiva</p> <ul> <li>Ubicaci\u00f3 f\u00edsica: Els equips han d'estar ubicats en espais segurs, amb control d'acc\u00e9s i vigil\u00e0ncia.</li> <li>Control d'acc\u00e9s: \u00c9s essencial limitar l'acc\u00e9s f\u00edsic als equips a persones autoritzades. Aix\u00f2 es pot aconseguir mitjan\u00e7ant portes amb claus, targes d'acc\u00e9s o sistemes biom\u00e8trics.</li> <li>Vigil\u00e0ncia: La pres\u00e8ncia de c\u00e0meres de seguretat i personal de vigil\u00e0ncia pot dissuadir els intrusos.</li> <li>Proteccions f\u00edsiques: Els equips han d'estar protegits amb elements com ara tanques, alarmes i detectors de moviment.</li> <li>Reserves de seguretat: \u00c9s important realitzar c\u00f2pies de seguretat de la informaci\u00f3 i emmagatzemar-les en un lloc f\u00edsicament separat.</li> <li>Control ambiental: Els equips han d'estar en un entorn amb temperatura i humitat adequades per evitar malfuncions.</li> <li>Pol\u00edtica de seguretat: \u00c9s essencial establir una pol\u00edtica de seguretat que estableixi les normes i procediments a seguir en mat\u00e8ria de seguretat passiva.</li> </ul> <p>Sistemes d'emmagatzematge:</p> <p>Els sistemes d'emmagatzematge, tant interns com externs, requereixen una atenci\u00f3 especial. A m\u00e9s de les mesures generals de seguretat passiva, cal considerar:</p> <ul> <li>Encriptaci\u00f3 de dades: Encriptar les dades \u00e9s essencial per protegir la informaci\u00f3 en cas de p\u00e8rdua o robatori del dispositiu d'emmagatzematge.</li> <li>Autenticaci\u00f3: Els dispositius d'emmagatzematge han d'estar protegits amb contrasenyes o altres m\u00e8todes d'autenticaci\u00f3.</li> <li>Seguretat de la xarxa: Si els dispositius d'emmagatzematge estan connectats a una xarxa, cal implementar mesures de seguretat de xarxa adequades.</li> </ul> <p>En conclusi\u00f3,</p> <p>La seguretat passiva \u00e9s un component fonamental de qualsevol estrat\u00e8gia de seguretat inform\u00e0tica. En combinar les mesures de seguretat passiva amb les mesures de seguretat activa, es pot crear una defensa s\u00f2lida contra les amenaces a la seguretat de la informaci\u00f3. \u00c9s important recordar que la seguretat passiva no \u00e9s un aspecte est\u00e0tic, sin\u00f3 que requereix una avaluaci\u00f3 i actualitzaci\u00f3 cont\u00ednua per adaptar-se a les noves amenaces i tecnologies.</p> <p>Paraules clau: seguretat passiva, seguretat inform\u00e0tica, equips inform\u00e0tics, sistemes d'emmagatzematge, protecci\u00f3 f\u00edsica, control d'acc\u00e9s, vigil\u00e0ncia, encriptaci\u00f3. </p>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc4.html","title":"SIUT02UT03 Doc4","text":""},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc4.html#seguretat-passiva-en-equips-informatics-i-sistemes-demmagatzematge","title":"Seguretat Passiva en Equips Inform\u00e0tics i Sistemes d'Emmagatzematge","text":"<p>La seguretat passiva \u00e9s un aspecte fonamental en la protecci\u00f3 dels equips inform\u00e0tics i els sistemes d'emmagatzematge. A difer\u00e8ncia de la seguretat activa, que implica mesures din\u00e0miques com la detecci\u00f3 d'intrusions i la resposta a incidents, la seguretat passiva se centra en la prevenci\u00f3 i la protecci\u00f3 est\u00e0tica. A continuaci\u00f3, explorarem els principals components i estrat\u00e8gies de la seguretat passiva en aquests contextos.</p>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc4.html#1-proteccio-fisica","title":"1. Protecci\u00f3 F\u00edsica","text":"<p>La protecci\u00f3 f\u00edsica \u00e9s el primer nivell de defensa per als equips inform\u00e0tics i els sistemes d'emmagatzematge. Aquesta inclou mesures com:</p> <ul> <li>Control d'acc\u00e9s: \u00das de claus, targetes d'acc\u00e9s, i sistemes biom\u00e8trics per restringir l'entrada a les \u00e0rees on es troben els equips.</li> <li>Barreres f\u00edsiques: Instal\u00b7laci\u00f3 de portes refor\u00e7ades, tanques i altres barreres per evitar l'acc\u00e9s no autoritzat.</li> <li>Sistemes de vigil\u00e0ncia: C\u00e0meres de seguretat i sistemes d'alarma per monitoritzar i detectar activitats sospitoses.</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc4.html#2-proteccio-ambiental","title":"2. Protecci\u00f3 Ambiental","text":"<p>Els equips inform\u00e0tics s\u00f3n sensibles a les condicions ambientals. Per tant, \u00e9s crucial mantenir un entorn adequat per evitar danys f\u00edsics. Aix\u00f2 inclou:</p> <ul> <li>Control de temperatura i humitat: \u00das de sistemes de climatitzaci\u00f3 per mantenir una temperatura i humitat \u00f2ptimes.</li> <li>Protecci\u00f3 contra incendis: Instal\u00b7laci\u00f3 de detectors de fum, sistemes d'extinci\u00f3 d'incendis i altres mesures per prevenir i controlar incendis.</li> <li>Protecci\u00f3 contra inundacions: Elevaci\u00f3 dels equips i \u00fas de sensors d'aigua per detectar i prevenir danys per inundaci\u00f3.</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc4.html#3-proteccio-de-dades","title":"3. Protecci\u00f3 de Dades","text":"<p>La protecci\u00f3 de dades \u00e9s un component clau de la seguretat passiva. Les estrat\u00e8gies inclouen:</p> <ul> <li>Xifrat de dades: \u00das de t\u00e8cniques de xifrat per protegir les dades emmagatzemades i en tr\u00e0nsit.</li> <li>C\u00f2pies de seguretat: Realitzaci\u00f3 de c\u00f2pies de seguretat regulars per garantir la recuperaci\u00f3 de dades en cas de p\u00e8rdua o corrupci\u00f3.</li> <li>Control d'acc\u00e9s a dades: Implementaci\u00f3 de pol\u00edtiques d'acc\u00e9s basades en rols per assegurar que nom\u00e9s el personal autoritzat pugui accedir a dades sensibles.</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc4.html#4-proteccio-contra-atacs","title":"4. Protecci\u00f3 contra Atacs","text":"<p>Tot i que la seguretat passiva no implica una resposta activa als atacs, s\u00ed que inclou mesures per minimitzar els riscos:</p> <ul> <li>Actualitzaci\u00f3 de programari: Manteniment dels sistemes actualitzats amb els \u00faltims pegats de seguretat per evitar vulnerabilitats.</li> <li>Configuraci\u00f3 segura: Assegurar que els sistemes estiguin configurats de manera segura, desactivant serveis innecessaris i aplicant les millors pr\u00e0ctiques de seguretat.</li> <li>Monitoritzaci\u00f3 i auditoria: Realitzaci\u00f3 d'auditories regulars i monitoritzaci\u00f3 dels sistemes per detectar possibles vulnerabilitats i assegurar el compliment de les pol\u00edtiques de seguretat.</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc4.html#5-educacio-i-formacio","title":"5. Educaci\u00f3 i Formaci\u00f3","text":"<p>Finalment, la formaci\u00f3 del personal \u00e9s essencial per garantir la seguretat passiva. Aix\u00f2 inclou:</p> <ul> <li>Programes de formaci\u00f3: Educaci\u00f3 cont\u00ednua sobre les millors pr\u00e0ctiques de seguretat i la import\u00e0ncia de la seguretat passiva.</li> <li>Simulacres de seguretat: Realitzaci\u00f3 de simulacres per preparar el personal per a situacions d'emerg\u00e8ncia i assegurar que coneguin els protocols de seguretat.</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/SIUT02UT03_Doc4.html#conclusio","title":"Conclusi\u00f3","text":"<p>La seguretat passiva \u00e9s una part integral de la protecci\u00f3 dels equips inform\u00e0tics i els sistemes d'emmagatzematge. Mitjan\u00e7ant la implementaci\u00f3 de mesures f\u00edsiques, ambientals, de protecci\u00f3 de dades i contra atacs, aix\u00ed com la formaci\u00f3 del personal, es pot crear un entorn segur que minimitzi els riscos i protegeixi els actius cr\u00edtics de l'organitzaci\u00f3. La combinaci\u00f3 d'aquestes estrat\u00e8gies assegura una defensa robusta i efica\u00e7 contra una \u00e0mplia gamma d'amenaces.</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html","title":"Seguridad activa de sistemas operativos\"","text":""},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#carrera-de-obstaculos","title":"Carrera de obst\u00e1culos","text":"<p>Por muchas medidas de control de acceso que pongamos, un hacker puede sentarse delante de un equipo de nuestra empresa. O directamente robar un port\u00e1til a uno de nuestros directivos. Vamos a intentar pon\u00e9rselo dif\u00edcil para que su \"trabajo\" sea una carrera de obst\u00e1culos y, seguramente, ante alguna barrera, desista.</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#la-caja-del-ordenador","title":"La Caja Del Ordenador","text":"<p>Lo primero es evitar que pueda abrir la caja del ordenador para llevarse el disco duro y \"destriparlo\" tranquilamente en casa. La mayor\u00eda de las cajas de los ordenadores de sobremesa llevan un par de anclajes donde colocar un candado normal. Tambi\u00e9n esta la opci\u00f3n de cambiar un tornillo normal por un tornillo con llave.</p> <p>Para los port\u00e1tiles tenemos el famoso candado Kensington, que tiene una cabeza que se introduce por una ranura especial de la caja del port\u00e1til. La cabeza contin\u00faa en un cable de acero para que lo enrollemos en alguna parte fija (la mesa o alg\u00fan anclaje especial). La cabeza puede utilizar una llave o una combinaci\u00f3n de n\u00famero.</p> <p>!!!{:.question} \u00bfSabr\u00edas identificar un candado Kensington?</p> <p>Los candados son poco efectivos, pero por lo menos obligamos al ladr\u00f3n a traer alguna herramienta m\u00e1s y le hacemos perder un tiempo precioso. Incluso si lo abre, la mayor\u00eda de las cajas de ordenador profesionales llevan un detector que graba en la memoria de la BIOS la fecha y hora en que se ha producido la apertura. Al d\u00eda siguiente, cuando el empleado encienda el ordenador, aparecer\u00e1 un mensaje en pantalla avis\u00e1ndole.</p> <p>{:.subsection}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#la-bios-del-ordenador","title":"La BIOS del ordenador","text":"<p>Con el candado, el hacker ya no se podr\u00e1 llevar el disco. Pero utilizando la t\u00e9cnica del arranque con LiveCD, podemos tranquilamente montar el disco duro local y hacer una copia del mismo en un dispositivo externo.</p> <p>Para evitar que el hacker haga esto, habr\u00eda que cambiar el orden de arranque. Deber\u00edamos de cambiarlo para que el primero y el \u00fanico sea el HDD.</p> <p>Esta tarea se suele hacer cuando llega un nuevo equipo a la empresa. Tampoco hay que olvidar cambiar las contrase\u00f1as de administrador, porque si no ponemos ninguna o dejamos los valores por defecto, el hacker puede entrar en la BIOS y modificar el orden de arranque.</p> <p>En algunas empresas incluso activan una contrase\u00f1a de uso del ordenador. Es decir, al arrancar la BIOS siempre pide una contrase\u00f1a, no solo cuando queremos acceder a su configuraci\u00f3n.</p> <p>Si hemos olvidado las contrase\u00f1as de la BIOS, la soluci\u00f3n t\u00edpica es retirar la pila que mantiene esos valores en memoria. Por eso hay que seguir evitando el acceso al interior de la caja del ordenador.</p> <p>{:.question} \u00bfSe puede poner contrase\u00f1a a la BIOS?</p> <p>{:.question} \u00bfC\u00f3mo se puede quitar la contrase\u00f1a de una BIOS?</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#que-es-la-bios","title":"\u00bfQu\u00e9 es la BIOS?","text":"<p>Se trata de las siglas de Basic Input Output System (en castellano, sistema b\u00e1sico de entrada/salida) y se refiere a un firmware almacenado en un dispositivo de memoria no vol\u00e1til instalado sobre la placa base del ordenador. Tradicionalmente las BIOS han estado guardadas en una memoria ROM que, a diferencia de las memorias RAM habituales, no se elimina al apagar el PC y, por lo tanto, est\u00e1 de nuevo disponible al volver a encenderlo. Tan pronto como el usuario enciende cualquier PC de 64 u 86 bits, la BIOS se arranca autom\u00e1ticamente. Al contrario que los sistemas operativos, no tiene que instalarse, sino que ya est\u00e1 integrada en el hardware del ordenador.</p> <p> BIOS</p> <p>{:.question} \u00bfQu\u00e9 es un firmware?</p> <p>{:.question} \u00bfQu\u00e9 es una ROM?</p> <p>Si queremos poner la BIOS de nuestro PC a su estado de f\u00e1brica es tan sencillo como quitar la pila de la placa base.</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#funciones-principales-de-la-bios","title":"Funciones principales de la BIOS","text":"<p>La BIOS pone las funciones b\u00e1sicas de un ordenador a disposici\u00f3n del usuario. Al encenderlo, comprueba si las partes m\u00e1s importantes son funcionales, como la memoria, la CPU y otros componentes de hardware. Esta prueba se denomina autoprueba de arranque.</p> <p>Si la BIOS detecta un error durante la autoprueba de arranque, emite uno o m\u00e1s pitidos por los altavoces del equipo. Estos sonidos sirven para indicar al usuario d\u00f3nde se ha detectado el problema y siguen diferentes c\u00f3digos, dependiendo del fabricante: por ejemplo, con la BIOS de IBM, un pitido corto y dos largos indicar\u00edan un error de la tarjeta gr\u00e1fica.</p> <p>La BIOS soluciona uno de los principales problemas de los ordenadores, ya que cada programa debe cargarse en la memoria principal del equipo para poder ejecutarse. Este proceso tambi\u00e9n requiere un software que le indique al sistema d\u00f3nde se encuentra ese programa, como el sistema operativo. Aqu\u00ed entra en juego la BIOS, el firmware que asume esta tarea. Al mismo tiempo, la BIOS act\u00faa de intermediaria entre la CPU y el software, formando la llamada capa de abstracci\u00f3n de hardware, una interfaz que permite que el software no tenga que acceder directamente al hardware, sino que pueda obtener sus datos de manera estandarizada.</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#tecnologias-sucesoras-efi-y-uefi","title":"Tecnolog\u00edas sucesoras: EFI y UEFI","text":"<p>Los elementos b\u00e1sicos de la BIOS apenas han cambiado desde la d\u00e9cada de 1980, por lo que esta presenta cada vez m\u00e1s limitaciones frente a los requisitos del hardware moderno. No obstante, hay tecnolog\u00edas sucesoras que llevan mucho tiempo desarroll\u00e1ndose. La EFI (Extensible Firmware Interface) se cre\u00f3 en la d\u00e9cada de 1990. Desde la d\u00e9cada de 2010, la UEFI se ha establecido como el est\u00e1ndar en los ordenadores de 64 bits y ofrece m\u00e1s y mejores funciones, siendo adem\u00e1s m\u00e1s c\u00f3moda de utilizar que la BIOS original.</p> <p>La UEFI (Unified Extensible Firmware Interface) cuenta con una interfaz gr\u00e1fica de usuario, se puede utilizar con el rat\u00f3n o el teclado y puede acceder a los componentes de red e Internet incluso sin iniciar el sistema operativo. Una de las caracter\u00edsticas que m\u00e1s la diferencian de la BIOS es que la UEFI utiliza un gestor de arranque seguro (en ingl\u00e9s, secure bootloader), es decir, que evita que se inicien sistemas operativos no autorizados y software no deseado y, por lo tanto, aumenta la protecci\u00f3n contra los ataques cibern\u00e9ticos.</p> <p> UEFI</p> <p>{:.question} \u00bfQu\u00e9 diferencias hay entre BIOS, EFI y UEFI?</p> <p>{:.question} \u00bfQu\u00e9 es GPT? \u00bfY MBR?</p> <p>{:.subsection}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#el-boot-manager","title":"El Boot Manager","text":"<p>Ya hemos conseguido que el hacker no se pueda llevar nada y solo arranque la m\u00e1quina desde nuestro disco local. En este disco puede ocurrir que tengamos instalados varios SO, de manera que, al arrancar, un programa llamado boot manager (gestor de arranque) nos permite elegir uno de ellos.</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#que-es-el-grub","title":"\u00bfQu\u00e9 es el GRUB?","text":"<p>GNU GRUB (GNU GRand Unified Bootloader) es un cargador de arranque m\u00faltiple, desarrollado por el proyecto GNU que nos permite elegir qu\u00e9 Sistema Operativo arrancar de los instalados.</p> <p>Se usa principalmente en sistemas operativos GNU Linux.</p> <p>{:.question} \u00bfSe puede fijar el orden de los dispositivos de arranque como deseemos?</p> <p>{:.question} \u00bfSe puede poner contrase\u00f1a al GRUB?</p> <p>{:.subsection}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#cifrado-de-particiones","title":"Cifrado de particiones","text":"<p>Con las barreras que hemos puesto, el hacker ya no se puede llevar nada; solo puede arrancar desde el disco local y solo puede elegir alguna de las entradas del boot manager. Pero si alguno de estas medidas falla, todav\u00eda podemos evitar que acceda a nuestros datos: hay que cifrar el contenido, de manera que sea ilegible.</p> <p>Cifra discos, particiones y archivos con LUKS en tu servidor Linux</p> <p>{:.question} \u00bfQu\u00e9 pros y qu\u00e9 contras tiene cifrar un disco?</p> <p>{:.question} \u00bfQu\u00e9 es LUKS? \u00bfQu\u00e9 algoritmo de cifrado de los vistos en clase usa LUKS?</p> <p>{:.section}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#autenticacion-en-el-sistema-operativo","title":"Autenticaci\u00f3n en el sistema operativo","text":"<p>Hemos conseguido que nuestro hacker no pueda evitar que la m\u00e1quina arranque con un SO instalado por nosotros. Pero los SO permiten incluir muchos m\u00e1s software de autenticaci\u00f3n y m\u00e1s complejos. Hay varias maneras de autenticarte en un sistema operativo:</p> <ol> <li>Usuario y contrase\u00f1a</li> <li>Tarjetas</li> <li>Biometr\u00eda</li> <li>Elevaci\u00f3n de privilegios</li> </ol> <p>{:.subsection}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#usuario-y-contrasena","title":"Usuario y contrase\u00f1a","text":"<p>Es el mecanismo m\u00e1s t\u00edpico. Aplicando la estrategia \"algo que se sabe\", la pantalla inicial del sistema espera que la persona introduzca el nombre de un usuario y la contrase\u00f1a asociada a ese usuario. Mientras lo teclea, el nombre del usuario es visible pero la contrase\u00f1a no, para evitar que la vea alguien que se encuentre a nuestra espalda.</p> <p>Si nos equivocamos, en el usuario o en la contrase\u00f1a, el sistema no nos deja entrar pero nos dejar\u00eda intentarlo otra vez. En algunos sistemas nos ofrece una pista sobre la contrase\u00f1a. En algunos casos tiene un limite de intentos y al llegar ese limite se bloquea por un tiempo o definitivamente.</p> <p>Tambi\u00e9n es recomendable, para pon\u00e9rselo mas dif\u00edcil al hacker, cambiar el nombre por defecto de los usuarios con m\u00e1s privilegios sobre el sistema. As\u00ed no tendr\u00e1 que averiguar solo la contrase\u00f1a si no tambi\u00e9n el nombre de usuario del sistema.</p> <p>Aun as\u00ed, siempre conviene utilizar contrase\u00f1as no triviales: palabras que no aparezcan en el diccionario de ninguna lengua, combinar letras may\u00fasculas con min\u00fasculas, n\u00fameros, signos de puntuaci\u00f3n, etc. Y cambiar la contrase\u00f1a regularmente, porque no sabemos cu\u00e1nto tiempo llevan intentando atacarla. Los sistemas operativos permiten obligar al usuario a cumplir todas estas normas.</p> <p>{:.subsection}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#tarjetas","title":"Tarjetas","text":"<p>En algunas ocasiones, el mecanismo de usuario y contrase\u00f1a no es lo suficientemente seguro, ya que alguien nos puede espiar y averiguarlo. Para estos casos aplicaremos la estrategia \"algo que se tiene\" y repartiremos tarjetas entre los usuarios.</p> <p>Las tarjetas son de dos tipos: sencillas (magn\u00e9ticas, RFID) o complejas (chip). Las magn\u00e9ticas van desapareciendo porque las EFID son igual de baratas y no sufren borrados accidentales.</p> <p>Las tarjetas con chip son m\u00e1s seguras pero m\u00e1s caras, por lo que se utilizan en ocasiones especiales. Hay dos tipos:</p> <ul> <li>Las que son simplemente un dispositivo de almacenamiento: contiene nuestras claves para que las lea el dispositivo donde introducimos la tarjeta.</li> <li>Las que constituyen un dispositivo de procesamiento: contiene nuestras claves, pero nunca salen de la tarjeta. El chip se limita a cifrar con ellas alg\u00fan desaf\u00edo que lanza el dispositivo por donde introducimos la tarjeta.</li> </ul> \u00bfEs lo mismo RFID que NFC?   RFID es el proceso en el cual objetos son identificados de manera \u00fanica usando ondas de radio y NFC es una tecnolog\u00eda especializada dentro de la familia de tecnolog\u00edas RFID.   <p>{:.subsection}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#biometria","title":"Biometr\u00eda","text":"<p>La seguridad del mecanismo usuario/contrase\u00f1a es suficiente para la mayor\u00eda de las aplicaciones. La tarjeta es c\u00f3moda. Pero cualquiera podr\u00eda sentarse en nuestro ordenador, insertar nuestra tarjeta (robada o duplicada), introducir nuestro usuario y contrase\u00f1a y acceder al sistema como si fu\u00e9ramos nosotros mismos. Si la informaci\u00f3n que manejamos es importante, aplicaremos la estrategia \"algo que eres\", para complementar el mecanismo usuario/contrase\u00f1a con un control m\u00e1s: la biometr\u00eda.</p> <p>La biometr\u00eda consiste en identificar alguna caracter\u00edstica f\u00edsica del sujeto: la huella dactilar, el ojo, la voz. La persona o personas autorizadas deben grabar primero su caracter\u00edstica f\u00edsica. Con esta t\u00e9cnica aumentaremos la seguridad.</p> <p>{:.question} \u00bfConoces alguna pel\u00edcula que se use la biometr\u00eda como m\u00e9todo de autenticaci\u00f3n?</p> <p>{:.subsection}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#elevacion-de-privilegios","title":"Elevaci\u00f3n de privilegios","text":"<p>Ya estamos autenticados en el sistema operativo y podemos trabajar con \u00e9l, pero siempre limitados a los privilegios asociados al usuario con el que nos hemos presentado.</p> <p>En las empresas, la mayor\u00eda de los empleados utilizan usuarios que no tienen permiso para realizar tareas de administraci\u00f3n de la m\u00e1quina (usuarios limitados, no administradores); as\u00ed se reduce el da\u00f1o que puedan causar, ya sea por error o porque se ha colado un virus.</p> <p>Pero hay determinadas situaciones (instalaci\u00f3n de nuevos programas, modificaci\u00f3n de par\u00e1metros del sistema) para las que s\u00ed necesitamos ser administradores.</p> <p>Una soluci\u00f3n es salir del usuario actual y entrar como administrador, pero es m\u00e1s sencillo solicitar, de manera puntual, una elevaci\u00f3n de privilegios. Consiste en pedirle al sistema ejecutar un determinado programa con permisos de administrador. Se aplica solo a ese programa y solo a esa ejecuci\u00f3n: no afecta a las aplicaciones abiertas antes o despu\u00e9s, ni siquiera cuando abramos ese mismo programa m\u00e1s adelante.</p> <p>En cuanto al usuario, dependiendo de la configuraci\u00f3n del sistema, simplemente aparecer\u00e1 una ventana de confirmaci\u00f3n o nos pedir\u00e1 una nueva autenticaci\u00f3n.</p> <p>{:.question} \u00bfQu\u00e9 comando usamos para elevar nuestros privilegios en GNU Linux? \u00bfY en Windows?</p> <p>{:.section}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#cuotas","title":"Cuotas","text":"<p>Hasta ahora hemos protegido nuestros sistemas evitando el acceso de personas no autorizadas; ahora vamos a protegerlos de las personas que s\u00ed est\u00e1n autorizadas. Porque nuestros usuarios, con intenci\u00f3n o no, tambi\u00e9n pueden da\u00f1ar el sistema. Por ejemplo, pueden descargar muchos archivos pesados, de manera que llenan el disco y el sistema empieza a fallar; tambi\u00e9n pueden lanzar procesos muy pesados, que ralentizan la CPU y no permiten trabajar a los dem\u00e1s usuarios.</p> <p>Para evitarlo, los sistemas se configuran para aplicar cuotas. Para el disco, se establece que cada usuario puede ocupar un n\u00famero determinado de bytes (megabytes, gigabytes). Cuando excede ese l\u00edmite, podemos configurar de modo que el sistema no le permita extenderse m\u00e1s.</p> <p>Hay que asignar las cuotas con cuidado:</p> <ul> <li>Si son muy bajas, tendremos a los usuarios quej\u00e1ndose todos los d\u00edas porque no les dejamos trabajar. Hay que tener especial cuidado con los usuarios que se crean porque son necesarios para arrancar una aplicaci\u00f3n, como el www-data del servidor web Apache: si exceden la cuota, la aplicaci\u00f3n se parar\u00e1.</li> <li>Si son muy altas, no tendr\u00e1n el efecto disuasorio que se espera de ellas y, al final, terminaremos comprando m\u00e1s disco.</li> </ul> <p>{:.section}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#actualizaciones-y-parches","title":"Actualizaciones y parches","text":"<p>Ya tenemos el sistema protegido contra el acceso de extra\u00f1os y contra el mal uso de los propios. Pero estamos hablando de software: hecho por humanos y, por tanto, sujeto a errores.</p> <p>El CD/DVD que hemos utilizado para instalar Windows, GNU Linux o OSX contiene una versi\u00f3n concreta liberada en una fecha concreta; desde entonces, los programadores de cada marca han seguido trabajando. El resultado son las actualizaciones: paquetes de software donde se introducen mejoras y, sobre todo, corrigen defectos.</p> <p>Como administradores responsables del sistema, debemos instalar esas actualizaciones.</p> <p>Podemos elegir entre:</p> <ul> <li>No buscar actualizaciones ni instalarlas (no recomendable).</li> <li>Comprobar si hay actualizaciones, pero no descargarlas ni instalarlas. Esto solo tiene sentido en equipos con poco disco o acceso limitado a Internet.</li> <li>Descargar actualizaciones, pero no instalarlas. En algunos sistemas podemos tener una configuraci\u00f3n muy sensible a cambios en el sistema operativo.</li> <li>Descargar e instalar siempre. Es lo m\u00e1s habitual en los puestos de usuario.</li> </ul> <p>Los parches son parecidos a las actualizaciones, pero se utilizan solo para corregir defectos y suelen necesitar que el usuario lo descargue y lo instale.</p> <p>{:.question} \u00bfEs lo mismo una actualizaci\u00f3n que un parche?</p> <p>{:.section}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#antivirus","title":"Antivirus","text":"<p>Los llamados virus inform\u00e1ticos, que son de muchos tipos, pero, en cualquier caso, estamos hablando de malware (software maligno) y hay que evitarlos.</p> <p>Leer art\u00edculo Malware.</p> <p>Los virus pueden instalarse en nuestra m\u00e1quina sin que lo sepamos, aprovechando alg\u00fan defecto del sistema operativo o las aplicaciones instaladas.</p> <p>El antivirus es un programa que est\u00e1 vigilando continuamente lo que ocurre en nuestra m\u00e1quina. Concretamente, cualquier software que se intenta ejecutar (ejecutables .exe, .msi, .deb, .rpm, librer\u00edas .dll, etc.) primero pasa por el antivirus. \u00c9l lo compara con su base de datos de virus y, si lo encuentra, impide que se ejecute y avisa al usuario.</p> \u00bfQu\u00e9 antivirus conoces?   - Avast - AVG - Windows defender - Kaspersky - McAfee - Avira - ESET - Norton - Panda   \u00bfCu\u00e1l es el mejor antivirus?   No existe el antivirus infalible.   <p>{:.question} \u00bfQu\u00e9 es VirusTotal?</p> \u00bfQu\u00e9 deber\u00edamos hacer si sospechamos que un programa que vamos a instalar es un virus?   Lo mejor ser\u00eda NO instalarlo, pero tambi\u00e9n se puede instalar en una m\u00e1quina virtual y comprobar su actividad de red y de uso de CPU.   \u00bfEs m\u00e1s seguro GNU Linux que Windows?   No se puede saber a ciencia cierta. Los sistemas m\u00e1s populares se atacan m\u00e1s pero tambi\u00e9n hay m\u00e1s gente prob\u00e1ndolos.  Lo que si se sabe es la diferencia entre las llamadas de sistema que se realizan en un servidor Apache en GNU Linux y un servidor IIS en Windows cuando una sola p\u00e1gina HTML es servida a un cliente \ud83d\ude2e.  ![Grafo de llamadas de sistema Apache en GNU Linux](syscallapache.jpg) _Grafo de llamadas de sistema Apache en GNU Linux_  ![Grafo de llamadas de sistema IIS en Windows](syscalliis.jpg) _Grafo de llamadas de sistema IIS en Windows_  Lo m\u00e1s probable que esto sea debido a la filosof\u00eda de retrocompatibilidad de Windows.   <p>{:.section}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#monitorizacion","title":"Monitorizaci\u00f3n","text":"<p>Hemos visto que cualquiera de las medidas aplicadas es imperfecta. Nuestra labor es instalarlas, formar a los usuarios y, todos los d\u00edas, vigilar que todo est\u00e9 normal. Esta vigilancia consiste en:</p> <ul> <li>Revisar los log del sistema y las aplicaciones. Cualquier suceso an\u00f3malo quedar\u00e1 anotado en alguna parte. Para cada aplicaci\u00f3n hay que saber d\u00f3nde lo hace (fichero o base de datos).</li> <li>Si el sistema lo permite, activar la copia sincronizada del log en otra m\u00e1quina. Es decir, cada aviso se escribe a la vez en nuestra m\u00e1quina y en otra. De esta forma podremos analizar un desastre y evitaremos que un hacker borre sus huellas.</li> <li>Revisar la ocupaci\u00f3n del sistema, principalmente el disco y la CPU. Lo habitual es programar una tarea para revisarlo regularmente (cada cinco minutos, por ejemplo) y generar una alarma que alerte al administrador cuando se supere alg\u00fan l\u00edmite (90 % del disco, por ejemplo).</li> <li>Suscribirse a las newsletters de los fabricantes de nuestro hardware y software para tener a mano la informaci\u00f3n oficial: actualizaciones, parches, nueva funcionalidad, workarounds, etc.</li> <li>Participar en foros de usuarios de las mismas aplicaciones que nosotros, para estar al d\u00eda de los problemas que aparecen (puede que nos pase lo mismo) y para poder pedir ayuda si algo nos sobrepasa (en paralelo con la consulta al soporte oficial).</li> </ul> <p>Conviene instalar una herramienta de inventario y monitorizaci\u00f3n. El inventario es la lista de equipos y conexiones y la configuraci\u00f3n de ambos; la monitorizaci\u00f3n es la supervisi\u00f3n en todo momento del estado de los elementos del inventario. Estas herramientas facilitan mucho el trabajo del administrador porque:</p> <ul> <li>Rastrean la red peri\u00f3dicamente buscando nuevas altas y bajas de equipos en el inventario.</li> <li>Son capaces de identificar distintos tipos de equipos, no solo ordenadores, sino tambi\u00e9n equipamiento de red. Para ello es necesario que los equipos ofrezcan interfaces est\u00e1ndar, como SNMP (Simple Network Management Protocol).</li> <li>Obtienen la configuraci\u00f3n para todos los equipos del inventario y la registran en una base de datos para generar informes, avisar de cambios, etc.</li> <li>Incorporan alertas sobre ocupaci\u00f3n de disco, inactividad de una interfaz, etc.</li> <li>Podemos monitorizar en directo la actividad de las interfaces de red, uso de CPU, etc.</li> </ul> <p>{:.question} \u00bfQu\u00e9 es un log?</p> <p>{:.section}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#aplicaciones-web","title":"Aplicaciones web","text":"<p>La arquitectura de aplicaciones ha evolucionado con el tiempo:</p> <ul> <li>En los a\u00f1os sesenta y setenta eran monol\u00edticas: toda la funcionalidad, tanto la interfaz de usuario como la l\u00f3gica de proceso, estaba en la misma m\u00e1quina. Los usuarios utilizaban terminales \"tontos\" conectados al ordenador principal. La protecci\u00f3n de una aplicaci\u00f3n monol\u00edtica se centraba en proteger la m\u00e1quina donde ejecutaban todos los programas.</li> <li>En los a\u00f1os ochenta y noventa aparecen los ordenadores personales y las redes de comunicaciones dentro de las empresas. Estos dos avances permiten implementar las aplicaciones siguiendo la arquitectura cliente-servidor: la interfaz de usuario y parte de la l\u00f3gica de proceso est\u00e1n en el ordenador del usuario, y el resto de la l\u00f3gica de proceso est\u00e1 en un ordenador central, al que conectan los ordenadores de usuario mediante la red local. La protecci\u00f3n se complica: ahora hay que proteger a cada cliente, el servidor y la red local de la empresa.</li> <li>A partir de los a\u00f1os noventa, el \u00e9xito de Internet permite extender las aplicaciones web (que siguen el modelo cliente-servidor) a cualquier punto de conexi\u00f3n del planeta. Hay un par de diferencias con los a\u00f1os ochenta: el cliente suele ser siempre el mismo (el navegador) y la comunicaci\u00f3n utiliza redes p\u00fablicas, sobre las que la empresa tiene nulo control. La protecci\u00f3n es m\u00e1s dif\u00edcil que nunca.</li> </ul> <p>Nadie duda de las ventajas de implementar una aplicaci\u00f3n mediante tecnolog\u00edas web:</p> <ul> <li>No necesitamos instalar nada en el cliente: solo se necesita el navegador (que se incluye con el sistema operativo y que tiene otros usos, como navegar por Internet). Con esto evitamos instalar un cliente nuevo que pueda entrar en conflicto con otras aplicaciones de la m\u00e1quina, el usuario no necesita privilegios especiales para instalar programas, etc.</li> <li>Cualquier actualizaci\u00f3n generada por nuestros programadores (m\u00e1s funcionalidad, parches que arreglan defectos) est\u00e1 inmediatamente disponible para los usuarios porque siempre descargan la p\u00e1gina actualizada de la \u00faltima versi\u00f3n. No hay que esperar a que todos los usuarios sean avisados de la actualizaci\u00f3n, la descarguen, instalen, etc.</li> </ul> <p>Por esta raz\u00f3n est\u00e1n ampliamente extendidas en Internet (Google Apps, ZoHo, Twitter, WordPress YouTube, etc.), y tambi\u00e9n dentro de las empresas, las intranets.</p> <p>{:.question} \u00bfQu\u00e9 es una intranet?</p> <p>Pero debemos tener cuidado con:</p> <ul> <li>La m\u00e1quina que aloja el servidor web y sus aplicaciones accesorias (base de datos y otras). Si un hacker toma esta m\u00e1quina, tiene acceso a toda la informaci\u00f3n y todas las conexiones de los usuarios. Hay que aplicar las medidas de protecci\u00f3n que hemos estudiado en este art\u00edculo.</li> <li>Si la m\u00e1quina del servidor web no es nuestra, sino alquilada (hosting web), no tenemos control sobre las medidas de protecci\u00f3n. Debemos confiar en la profesionalidad del proveedor y repasar el contrato, en especial el apartado de los niveles de servicio (SLA o Service Level Agreement). Por ejemplo, podemos exigir al proveedor que si el servidor web est\u00e1 ca\u00eddo m\u00e1s de dos horas al a\u00f1o, nos haga un descuento del 25 % en la siguiente cuota.</li> <li>La transmisi\u00f3n entre el cliente web (navegador) y el servidor web. Muchas aplicaciones todav\u00eda utilizan el protocolo HTTP, donde todo viaja en texto en claro. En alg\u00fan tramo de red puede estar escuchando un hacker (man in the middle) y conocer qu\u00e9 hacemos, incluso modificarlo para su provecho. Siempre debemos optar por usar HTTPS.</li> <li>La m\u00e1quina de un usuario conectado puede haber sido hackeada y su navegador tambi\u00e9n. Por ejemplo, se ha instalado un keylogger que env\u00eda todas las contrase\u00f1as fuera de nuestro control. En este punto es importante el antivirus.</li> </ul> <p>{:.question} \u00bfQu\u00e9 es un keylogger?</p> <p>{:.section}</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#cloud-computing","title":"Cloud computing","text":"<p>Despu\u00e9s de las aplicaciones web, la siguiente evoluci\u00f3n de las aplicaciones en Internet es el cloud computing (computaci\u00f3n en la nube). Conviene diferenciar entre computaci\u00f3n en la nube y almacenamiento en la nube.</p> <p>El almacenamiento tambi\u00e9n aporta flexibilidad, pero se limita a guardar archivos y carpetas; la computaci\u00f3n es m\u00e1s amplia porque ejecuta programas que trabajan con archivos, bases de datos, otros servidores, etc. Sin embargo, se complementan porque la computaci\u00f3n en la nube puede trabajar con archivos de almacenamiento en la nube.</p> <p>Leer \u00bfQu\u00e9 es el cloud computing?.</p>"},{"location":"Moduls/ARXIU/2425/SI/UT04%20Seguretat%20l%C3%B2gica.html#bibliografia","title":"Bibliograf\u00eda","text":"<ul> <li>\u00bfQu\u00e9 es la BIOS?</li> <li>GNU GRUB (Wikipedia)</li> <li>Fundamentos de la computaci\u00f3n en la Nube</li> <li>SEGURIDAD ACTIVA: SISTEMA OPERATIVO Y APLICACIONES</li> <li>47 Apache on Linux vs IIS on Windows </li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/_SI2425.html","title":"Seguretat Inform\u00e0tica - SMX","text":""},{"location":"Moduls/ARXIU/2425/SI/_SI2425.html#continguts","title":"Continguts","text":"<p>Test coneixements inicials</p>"},{"location":"Moduls/ARXIU/2425/SI/calculPotenciaSAI.html","title":"calculPotenciaSAI","text":""},{"location":"Moduls/ARXIU/2425/SI/calculPotenciaSAI.html#potencia-necessaria-per-un-sai","title":"Pot\u00e8ncia necess\u00e0ria per un SAI","text":"<p>Hi ha diversos factors que cal tenir en compte abans d\u2019adquirir i d\u2019instal\u00b7lar un SAI: la mida que t\u00e9, el tipus de SAI, la c\u00e0rrega que suporta, el grau de protecci\u00f3 contra les alteracions del subministrament el\u00e8ctric, etc. Depenent del cas, escollireu un model o un altre tenint en compte el nombre i el tipus d\u2019ordinadors que vulgueu protegir.</p> <p>Tres de les caracter\u00edstiques m\u00e9s rellevants d\u2019un SAI s\u00f3n la c\u00e0rrega, l\u2019autonomia i la capacitat, conceptes que estan relacionats entre ells.</p> <p>La c\u00e0rrega d\u2019un SAI \u00e9s el conjunt d\u2019equips que t\u00e9 connectats. L\u2019autonomia d\u2019un SAI \u00e9s la quantitat de temps que podr\u00e0 subministrar energia de la bateria a una c\u00e0rrega concreta.</p> <p>La capacitat d\u2019un SAI \u00e9s la pot\u00e8ncia m\u00e0xima que podr\u00e0 subministrar a la seva c\u00e0rrega.</p> <p>Quan mesurem la capacitat d'un SAI ens podem trobar amb dues mesures. La pot\u00e8ncia real o la pot\u00e8ncia aparent.</p> <p>La pot\u00e8ncia real \u00e9s la que es mesura en Watts (W) i la pot\u00e8ncia aparent en VoltAmpers (VA).</p> <p>La difer\u00e8ncia \u00e9s que la real ens dona la pot\u00e8ncia que consumeix un aparell i la aparent \u00e9s la pot\u00e8ncia real multiplicada per un factor per tenir en compte el pic m\u00e0xim de pot\u00e8ncia a la que podria arribar un equip. Aquest factor acostuma a ser 1,4 tot i que ens podrem trobar 1,33 o 1,6.</p> <p>S'ha de tenir en compte que quan calculem la capacitat necess\u00e0ria d'un SAI (normalment ve expressada en VA) sempre hem de calcular una capacitat un 60% o 70% superior.</p> <p>Per exemple si volem connectar a un SAI 2 PCs i 2 Monitors que consumeixen un total de 200 W (pot\u00e8ncia real), el nostre SAI haur\u00e0 de subministrar 200 * 1,4 = 280 VA. Per\u00f2 com que hem de tenir en compte que aquesta pot\u00e8ncia no pot superar el 70% de la pot\u00e8ncia total del SAI (VA), necessitarem un SAI de com a m\u00ednim 400 VA (400 VA * 70% = 280 VA).</p> <p>Hi han diversos m\u00e8todes per calcular el consum en W dels nostres equips i d'aquesta forma fer una estimaci\u00f3:</p> <ul> <li>Mitjan\u00e7ant un mesurador de pot\u00e8ncia o mitjan\u00e7ant una pin\u00e7a amperim\u00e8trica que mesura el corrent subministrat per els equips connectats, d'aquesta manera multiplicant per la tensi\u00f3 nominal (230 V a Espanya), podrem obtenir el consum mig aproximat.</li> <li>Coneixent el consum mig (W) subministrat en la caracter\u00edstiques del fabricant.</li> <li>Mitjan\u00e7ant un model aproximat d'estimaci\u00f3 de consum, prenent com refer\u00e8ncia estimacions pr\u00e8vies. Per exemple podem veure estimacions de consums en la web d'etiquetat d'efici\u00e8ncia energ\u00e8tica Energy Star.</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html","title":"Exercicis c\u00f2pies de seguretat","text":""},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-2-us-de-la-comanda-tar-empaquetatge","title":"Exercici 2 (\u00fas de la comanda tar, empaquetatge)","text":"<p>Crear un contenidor o paquet anomenat exemple.tar dins de la carpeta /tmp que contingui els arxius emmagatzemats dins de  /var/log. Mostra el contingut d'aquest contenidor. S'ha redu\u00eft la mida dels arxius al empaquetar-los?</p> <pre><code>sudo tar -cvf /tmp/exemple.tar /var/log\n\ntar -tvf exemple.tar\n</code></pre>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-3-empaquetatge-compressio","title":"Exercici 3 (empaquetatge + compressi\u00f3)","text":"<p>Realitza el mateix que en l'exercici anterior per\u00f2 ara comprimint-lo amb gzip exemple.tar.gz i amb bzip2 exemple.tar.bz2. Compara la mida dels dos arxius. Quin compressor comprimeix m\u00e9s?</p> <pre><code>sudo tar -czvf /tmp/exemple.tar.gz /var/log\n\nsudo tar -cjvf /tmp/exemple.tar.bz2 /var/log\n\n//verificaci\u00f3 gz\n\nsudo tar -tvzf /tmp/exemple.tar.gz\n</code></pre>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-4-extraccio-i-descompressio","title":"Exercici 4 (extracci\u00f3 i descompressi\u00f3)","text":"<p>Extreu el contingut de l'arxiu exemple.tar.gz. en la carpeta /tmp/exemple. Comprova que respecta l'estructura de carpetes original. <pre><code>sudo tar -xzvf exemple.tar.gz -C /tmp/exemple\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-5-compressio-dun-llistat-directoris-o-fitxers-guardat-en-un-arxiu","title":"Exercici 5 (compressi\u00f3 d'un llistat directoris o fitxers guardat en un arxiu)","text":"<p>Comprimeix el seg\u00fcent llistat de directoris i fitxers en un arxiu anomenat llista.tar.bz2 dins del directori /tmp (llista de directoris i fitxers: /boot/grub/locale, /etc/firefox, /etc/passwd, /etc/shadow). Comproveu que s'ha creat correctament. <pre><code>sudo tar -cjvf /tmp/llista.tar.bz2 /boot/grub/locale /etc/firefox /etc/passwd /etc/shadow\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-6-afegir-data-en-el-nom-de-larxiu-de-sortida","title":"Exercici 6 (afegir data en el nom de l'arxiu de sortida)","text":"<p>Feu el mateix que en l'exercici anterior per\u00f2 l'arxiu de sortida ha de tenir el format seg\u00fcent: COP_SEG_dia_mes_any.tar.bz2 (per exemple COP_SEG_07_11_2011.tar.bz2). La data l'ha d'agafar autom\u00e0ticament del sistema. <pre><code>sudo tar -cjvf /tmp/COP_SEG_`date +%d_%m_%Y`.tar.bz2 /boot/grub/locale /etc/firefox /etc/passwd /etc/shadow\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-7-creacio-dun-script-i-programacio-dexecucio-automatica","title":"Exercici 7 (creaci\u00f3 d'un script i programaci\u00f3 d'execuci\u00f3 autom\u00e0tica)","text":"<p>Guarda la comanda anterior (sense el sudo) en un script amb el nom CopiaTotal.sh. Dona-li permisos d'execuci\u00f3 (chmod u+x) Comproveu que teniu instal\u00b7lat a herramientas, si no \u00e9s aix\u00ed instal\u00b7leu-lo, l'aplicaci\u00f3 \"cron\" o tareas programadas. Executa l'script (simplement amb la ruta i el seu nom) per comprovar que funciona. Programa una tasca per tal que s'executi aquest script el dia 1 de cada mes a les 3 de la matinada.</p> <ol> <li>Crees un fitxer anomenat /home/usuari/CopiaTotal.sh am el seg\u00fcent contingut:` <pre><code>#!/bin/bash\ntar -cjvf /tmp/COP_SEG_`date +%d_%m_%Y`.tar.bz2 /boot/grub/locale /etc/firefox /etc/passwd /etc/shadow\n</code></pre> 2.Canvia els permisos: <pre><code>chmod +x CopiaTotal.sh\n</code></pre> 3.Crees una tarea al cron de la seg\u00fcent manera: <pre><code>crontab -e\n</code></pre> i al fitxer afegir la linea: <pre><code>0 3 1 * * /home/usuari/CopiaTotal.sh\n</code></pre></li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-8-creacio-dun-script-de-copia-diferencial-i-programacio-execucio","title":"Exercici 8 (creaci\u00f3 d'un script de copia diferencial i programaci\u00f3 execuci\u00f3)","text":"<p>Suposem que volem fer una c\u00f2pia diferencial d'aquest fitxer (llistat.txt que contindr\u00e0 els directoris /boot/grub/locale /etc/firefox /etc/passwd /etc/shadow); els dies 7, 15 i 25 de cada mes. Escriu un script anomenat CopiaDiferencial.sh per fer aquesta c\u00f2pia. Programa l'administrador de tasques per tal que l'executi cada mes en aquests dies tamb\u00e9 a les 3 de la matinada. El fitxer generat de cada c\u00f2pia de seguretat diferencial s'ha de dir CD_DataDarreraCopiaTotal-DataCopiaDiferencial.tar.bz2 (per exemple CD_01nov11-7nov11.tar.bz2)</p> <ol> <li>llistat es un fitxer que hi ha la seug\u00fcent informaci\u00f3: <pre><code>/boot/grub/locale /etc/firefox /etc/passwd /etc/shadow\n</code></pre> 2.Crear un fitxer anomenat CopiaDiferencial.sh amb la seg\u00fcent informaci\u00f3: <pre><code>#!/bin/bash\ntar -cjvf /tmp/CD_SEG_01`date +%b%y`- `date +%d%b%y`.tar.bz2 $(cat /tmp/llistat.txt) -N 01`date +%b%y`\ntar -cjvf /tmp/CD_01`date +%b%y`- `date +%d%b%y`.tar.bz2 $(cat /tmp/llistat.txt) -N 01`date +%b%y`\n</code></pre></li> </ol> <p>3.Canvia els permisos: <pre><code>chmod +x CopiaDiferencial.sh\n</code></pre> 4.Crees una tarea al cron de la seg\u00fcent manera: <pre><code>crontab -e\n\ni al fitxer afegir la linea:\n\n0 3 7 * * /home/usuari/CopiaDiferencial.sh\n\n0 3 15 * * /home/usuari/CopiaDiferencial.sh\n\n0 3 25 * * /home/usuari/CopiaDiferencial.sh\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#windows","title":"Windows","text":""},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#eina-propia-de-windows","title":"Eina pr\u00f2pia de Windows","text":""},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-1-backup-complert","title":"Exercici 1 (Backup complert)","text":"<p>Cerca l'eina de programaci\u00f3 de c\u00f2pies de seguretat de windows. Crea en una carpeta els fitxers de text seg\u00fcents:</p> <ul> <li>Escriu en el fitxer file1 el text: \u201cAquest \u00e9s el fitxer file1\u201d</li> <li>Escriu en el fitxer file2 el text: \u201cAquest \u00e9s el fitxer file2\u201d</li> <li>Escriu en el fitxer file3 el text: \u201cAquest \u00e9s el fitxer file3\u201d</li> <li>Escriu en el fitxer file4 el text: \u201cAquest \u00e9s el fitxer file4\u201d</li> <li>Escriu en el fitxer file5 el text: \u201cAquest \u00e9s el fitxer file5\u201d</li> </ul> <p>Programa un backup programat per un dia i una hora determinada de tot el directori Dades. Canvia l'hora i la data del sistema per a qu\u00e8 es faci la copia programada.</p> <p>Comprova que efectivament s'ha realitzat la c\u00f2pia programada. Fes una captura de pantalla de l'arxiu log.</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-2-backup-incremental","title":"Exercici 2 (Backup incremental)","text":"<p>Dissenya un sistema de backups incrementals per a qu\u00e8 es faci un backup programat cada minut del directori Dades.</p> <p>Mentres es va realitzant el backup realitza (no ho facis molt r\u00e0pid) els seg\u00fcents canvis en els fitxers:</p> <ul> <li>Afegeix en el fitxer file1 el text: \u201cAquest \u00e9s el fitxer file1\u201d (debe estar dos veces)</li> <li>Afegeix en el fitxer file2 el text: \u201cAquest \u00e9s el fitxer file2\u201d (debe estar dos veces)</li> <li>Canvia el nom del fitxer \u201cfile3\u201d per \u201cfile33\u201d</li> <li>Esborra el \u201cfile5\u201d.</li> <li>Esborra el contingut del file4, per\u00f2 no el fitxer.</li> <li>Afegeix en el fitxer file1 el text: \u201cAquest \u00e9s el fitxer file1\u201d (debe estar tres veces)</li> <li>Afegeix en el fitxer file2 el text: \u201cAquest \u00e9s el fitxer file2\u201d (debe estar tres veces)</li> </ul> <p>Comprova que s'han efectuat les c\u00f2pies programades. Indica quantes c\u00f2pies s'han fet i qu\u00e8 ha guardat cadascuna d'elles. Fes una captura de pantalla del contingut de l'arxiu log.</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-3-restauracio-parcial","title":"Exercici 3 (Restauraci\u00f3 parcial)","text":"<p>Volem restaurar l'arxiu file5. Indica els passos que has de seguir per fer-ho i si s'ha restaurat.</p> <p>Volem restaura l'arxiu file1 en la seva primera versi\u00f3 indica els passos que hem de seguir per fer-ho i si ho ha restaurat correctament.</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#exercici-4-restauracio-complerta","title":"Exercici 4 (Restauraci\u00f3 complerta)","text":"<p>Esborra tot el directori Dades. Executa una restauraci\u00f3 complerta. Indica els passos que hem de seguir i qu\u00e8 obtens al final.</p> <p>Podem programar backups diferencials amb aquesta eina?</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#paragon-backup-recovery-windows","title":"Paragon Backup &amp; Recovery- windows","text":"<p>Descarrega el programari</p> <p>Fes una c\u00f2pia de seguretat de tot un directori i comprova que despr\u00e9s pots recuperar el contingut amb la c\u00f2pia que has fet.</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#freefilesync-windows","title":"FREEFILESYNC- windows","text":"<p>Desc\u00e0rrega</p> <p>Crear dues carpetes de fitxers \"Principal\" y \"BackUp\".</p> <p>1) crea 4 archivos en principal y otros 2 en Backupcrea 4 arxius en principal i altres 2 a Backup, utilitza la sincronitzaci\u00f3 BIDIRECCIONAL d\u00f3na-li a COMPARAR i SINCRONITZAR.</p> <p>2) crea 2 arxius i elimina'n un altre a Principal, utilitza la sincronitzaci\u00f3 MIRALL d\u00f3na-li a COMPARAR i SINCRONITZAR.</p> <p>2.1) Qu\u00e8 passa si esborres un arxiu al Backup?</p> <p>3) crea 2 arxius, utilitza la sincronitzaci\u00f3 PERSONALITZADA d\u00f3na-li a COMPARAR i SINCRONITZAR.</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#eina-cobian-backup-windows","title":"Eina Cobian Backup -Windows","text":"<p>==== V\u00eddeotutorials c\u00f2pies completes, diferencials i incrementals amb Cobian:</p> <p><code>https://www.youtube.com/watch?v=FAuvx1rGLtw</code></p> <p>Exercici 1 (programaci\u00f3 c\u00f2pia de seguretat diferencial comprimida)</p> <p>Programeu una c\u00f2pia de seguretat  diferencial, comprimida en zip i protegida amb contrasenya de la carpeta \"Mis documentos\" (heu de crear una \"tarea nueva\"). Aquesta c\u00f2pia s'ha d'efectuar tots els divendres a les 23:30 hores.</p> <p>Exercici 2 (Programaci\u00f3 c\u00f2pia de seguretat incremental comprimida)</p> <p>Programeu una c\u00f2pia de seguretat  incremental, comprimida en zip i protegida amb contrasenya de la carpeta \"Mis documentos\" (heu de crear una \"tarea nueva\"). Aquesta c\u00f2pia s'ha d'efectuar tots els dies excepte els divendres a les 23:30 hores.</p> <p>Exercici 3 (Restauraci\u00f3 c\u00f2pia de seguretat comprimida)</p> <p>Feu que s'executin les tasques anteriorment programades. Elimineu la carpeta mis documentos i restaureu-la. El Cobian posseeix alguna eina de restauraci\u00f3? Creieu que \u00e9s necessari o es pot fer manualment?</p> <p>Exercici 4 (Programaci\u00f3 c\u00f2pia de seguretat comprimida i encriptada)</p> <p>Programeu una c\u00f2pia de seguretat comprimida i encriptada de la carpeta \u201cimatges\u201d que s'executi cada 12 hores.</p> <p>Exercici 5 (Restauraci\u00f3 c\u00f2pia de seguretat comprimida i encriptada)</p> <p>Elimineu algunes imatges de la carpeta i restaureu-la. Indiqueu els passos que hem de seguir per tal de restaurar una carpeta encriptada com aquesta.</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#rsync-linux","title":"RSYNC-linux","text":"<p>rsync es el standar sync para la sincronizaci\u00f3n remota.La utilidad rsync se utiliza para sincronizar los archivos y directorios de un lugar a otro de una manera eficaz. La ubicaci\u00f3n de copia de seguridad podr\u00eda estar en el servidor local o en un servidor remoto</p> <p>Estructura del comando: $ rsync [opciones] origen destino</p> <p>Los comandos m\u00e1s \u00fatiles y utilizados son:</p> <p>-v --verbose Muestra informaci\u00f3n a trav\u00e9s del terminal.</p> <p>-e --rsh=command Especifica la consola Shell a utilizar.</p> <p>-a --archive Modo archivado: recursivo, copia enlaces, mantiene los permisos, la fecha de modificaci\u00f3n, la informaci\u00f3n de grupos, propietarios y los archivos de dispositivos.</p> <p>-r --recursive Recusividad para todos los directorios.</p> <p>--delete Elimina archivos ajenos a la fuente de origen.</p> <p>-z --compress Comprime archivos durante la transferencia.</p> <p>-P --progress Muestra una barra de progreso</p> <p>Nos conectaremos desde la m\u00e1quina Real a una maquina Virtual (openssh-server) activamos el proxy aula</p> <p>1. Sincronizar dos directorios en un servidor local</p> <p>rsync -azv /var/opt/installation/inventory/ /root/temp/</p> <p>2. Sincronizar archivos de local a remoto</p> <p>rsync -avz ./Datos/ administrador@172.16.104.2:/home/administrador/Escriptori/backup</p> <p>3. Sincronizar archivos de remoto a local</p> <p>rsync -avz administrador@172.16.104.2:/home/administrador/Escriptori/backup ./Datos</p> <p>4. Ver el progreso rsync durante la transferencia</p> <p>rsync -avz --progress ./Datos/ administrador@172.16.104.2:/home/administrador/Escriptori/backup</p> <p>5. I si volguesim encriptar toda la informaci\u00f3?</p> <p>rsync -e ssh -avPz /origen usuario@172.168.106.250:/destino</p> <p>https://javierin.com/rsync-funcionamiento-opciones/</p> <p>https://www.linuxparty.es/index.php/8177-copias-de-seguridad-remotas-en-linux-ejemplos-con-rsync</p> <p>https://gigastur.es/copias-seguridad-linux-rsync</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#unison-linux","title":"UNISON- linux","text":"<p>Copia Sincronizada Trataremos de hacer una copia de seguridad de un ordenador a otro, por ello necesitamos dos MV ubuntu 14. (red internas, asignar unas ip 192.168.1.X)</p> <p>En la primera instalaremos Unison-gtk y tendremos una carpeta llamada \"Datos\" en la que guardaremos im\u00e1genes y archivos (192.168.1.2)</p> <p>En la segunda MV instalaremos un servidor ssh \"openssh-server\" y crearemos una carpeta vacia para guardar informaci\u00f3n. (192.168.1.3)</p> <ul> <li>1) Abrimos el programa Unison, ponemos conectarnos con ssh en HOST ponemos la direcci\u00f3n Ip del ordenador donde est\u00e1 el servidor ssh (192.168.1.2) y su nombre de usuario 'administrador'.</li> </ul> <p>Seleccionamos el origen (datos que queremos copiar) y destino (ruta de la otra m\u00e1quina) /home/administrador/Escriptori/copia Activamos FAT. Aceptamos y ponemos contrase\u00f1a. Luego bot\u00f3n Go</p> <ul> <li>2) Agregamos y borramos alg\u00fan fichero de la m\u00e1quina destino.\u00bfQu\u00e9 ocurre en el origen?</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#gadmin-rsync-linux","title":"GADMIN-RSYNC - linux","text":"<p>Copia Sincronizada Trataremos de hacer una copia de seguridad de un ordenador a otro, por ello necesitamos dos MV ubuntu 14. (red internas, asignar unas ip 192.168.1.X)</p> <p>En la primera instalaremos gadmin-rsync y tendremos una carpeta llamada \"Datos\" en la que guardaremos im\u00e1genes y archivos (192.168.1.2)</p> <p>En la segunda MV instalaremos un servidor ssh \"openssh-server\" y crearemos una carpeta vacia para guardar informaci\u00f3n. (192.168.1.3)</p> <ul> <li>1) Abrimos el programa gadmin-rsync, Creamos un nuevo perfil, y elegimos de Local a Remoto, rellenamos los par\u00e1metros. Y hacemos la copia en una carpeta llamada \"backup_gadmin\"</li> <li>2) Modificamos alg\u00fan fichero del destino y hacemos el procedimiento inverso, es decir, restauramos los valores de la copia de seguridad en el origen.</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#busca","title":"BUSCA","text":"<p>Busca, prueba y documenta UN programa que realice copias de seguridad en windows (FREEFILESYNC, Rclone, cobian...) y otro en linux(Grsync, Gadmin-rsync... ).</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaCopiesSeguretat.html#enlaces-interes","title":"Enlaces Inter\u00e9s","text":"<p>https://www.2brightsparks.com/syncback/syncback-hub.html</p> <p>https://www.softzone.es/2012/08/04/freefilesync-5-6-uno-de-los-mas-interesantes-sincronizadores-de-archivos-se-actualiza/ https://www.freefilesync.org/</p> <p>http://www.laguialinux.es/sincronizacion-directorios-remotos-rsync</p> <p>http://blog.elhacker.net/2014/02/ejemplos-rsync-para-hacer-copias-de-seguridad-remotas-backup.html</p> <p>https://www.smythsys.es/8740/rclonebrowser-maneja-sincroniza-visualiza-unidades-la-nube-rclone/</p> <p>https://blog.desdelinux.net/rclone-sincronizar-archivos-y-directorios-entre-nubes/</p> <p>https://www.youtube.com/watch?v=qTNHPyoXols</p> <p>http://www.abcdatos.com/programa/sincroniza-archivos.html</p>"},{"location":"Moduls/ARXIU/2425/SI/practicaPotenciaSAI.html","title":"Pr\u00e0ctica dimensionament SAI","text":"<p>A l'aula 107 disposam del seg\u00fcent SAI</p> <ul> <li>Salicru SPS 3000 ADV RT2</li> </ul> <p>i per altra banda disposam d'un rack on hi tenim el seg\u00fcent maquinari:</p> <ul> <li>2 Switch TPLink TL-SG1016D</li> <li>2 servidors DELL (DellEMC): un R450 (Rack Premium) i un altre R440 (Rack)</li> <li>Un NAS Synology RS818+</li> <li>1 Switch Mikrotik CRS326-24G-2S+RM</li> </ul> <p>Heu de fer i documentar tot all\u00f2 necessari per determinar si podem protegir tot el maquinari del rack amb el SAI que tenim o si per contra, no es pot. Si no es pot, decideix de forma raonada i justificada, quin maquinari protegiries.</p> <p> Heu d'entregar un pdf (nomenclatura habitual) ben estructurat, amb tot el contingut que considereu necessari per justificar la vostra decisi\u00f3.</p>"},{"location":"Moduls/ARXIU/2425/SI/testconeixmentsinicials.html","title":"Test de coneixements inicials m\u00f2dul Seguretat infom\u00e0tica","text":"<ul> <li> <ol> <li>Qu\u00e8 entens per seguretat inform\u00e0tica? </li> </ol> </li> <li> <ol> <li>Pensa en alguns exemples d'amenaces a la seguretat inform\u00e0tica que coneguis. </li> </ol> </li> <li> <ol> <li>Quines creus que s\u00f3n les principals difer\u00e8ncies entre un virus i un troi\u00e0? </li> </ol> </li> <li> <ol> <li>Saps qu\u00e8 \u00e9s un firewall i quina funci\u00f3 t\u00e9 en una xarxa? </li> </ol> </li> <li> <ol> <li>Per qu\u00e8 creus que \u00e9s important mantenir els programes actualitzats? </li> </ol> </li> <li> <ol> <li>Explica breument all\u00f2 qu\u00e8 s\u00e0pigues sobre un atac de phishing. </li> </ol> </li> <li> <ol> <li>Quines mesures de seguretat b\u00e0siques recomanaries per a una contrasenya segura? </li> </ol> </li> <li> <ol> <li>Saps qu\u00e8 \u00e9s una c\u00f2pia de seguretat i per qu\u00e8 \u00e9s important fer-ne?  </li> </ol> </li> <li> <ol> <li>Has sentit parlar de LOPD? Si \u00e9s aix\u00ed, explica breument all\u00f2 que pensis qu\u00e8 \u00e9s.  </li> </ol> </li> <li> <ol> <li>Imaginem que treballes en una empresa i observes una activitat sospitosa en un ordinador. Qu\u00e8 faries? </li> </ol> </li> <li> <ol> <li>Saps qu\u00e8 \u00e9s un atac de denegaci\u00f3 de servei (DoS) i com funciona? Pots esmentar alguns exemples d'atacs DoS comuns? </li> </ol> </li> <li> <ol> <li>Saps explicar la difer\u00e8ncia entre un antivirus i un anti-malware. Quin consideres m\u00e9s complet i per qu\u00e8? :simple-malwarebytes:</li> </ol> </li> <li> <ol> <li>Saps qu\u00e8 \u00e9s un certificat digital i per a qu\u00e8 s'utilitza en la seguretat inform\u00e0tica? </li> </ol> </li> <li> <ol> <li>Saps qu\u00e8 \u00e9s l'enginyeria social i com es pot utilitzar per comprometre la seguretat d'un sistema?  </li> </ol> </li> <li> <ol> <li>Saps quines s\u00f3n les principals difer\u00e8ncies entre un firewall de maquinari i un de programari? </li> </ol> </li> <li> <ol> <li>Saps qu\u00e8 \u00e9s una VPN i quins beneficis ofereix per a la seguretat d'una connexi\u00f3 a Internet?  </li> </ol> </li> <li> <ol> <li>Saps qu\u00e8 \u00e9s la criptografia i quin paper juga en la seguretat de les dades? </li> </ol> </li> <li> <ol> <li>Saps qu\u00e8 \u00e9s un atac d'injecci\u00f3 SQL i com es pot prevenir? </li> </ol> </li> <li> <ol> <li>Saps quines mesures de seguretat s'han de prendre en utilitzar xarxes sense fil (Wi-Fi)?  </li> </ol> </li> <li> <ol> <li>Saps qu\u00e8 \u00e9s un pla de resposta a incidents de seguretat i per qu\u00e8 \u00e9s important tenir-ne un? </li> </ol> </li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici1.html","title":"Pr\u00e0ctica - Copies de Seguretat - Realitzar una c\u00f2pia de seguretat incremental en linux amb l'ordre tar.","text":"<ol> <li> <p>Es crearan dos fitxers \"fitxer1\" i \"fitxer2\" a la carpeta \"dades\" i una altra carpeta \"backup\" on s'allotjaran les c\u00f2pies de seguretat.</p> </li> <li> <p>Es vol crear la c\u00f2pia nivell 0, dins de la carpeta \"backup\" la primera vegada es crear\u00e0 la total, a m\u00e9s dins del nom del fitxer posar\u00e0 la hora:minuts:segons.</p> </li> </ol> <pre><code>tar -cvzf backup/bkp0.tgz -g backup/snapshot.snar dades/\n\n-c: crear l'arxiu\n\n-v: verbose\n\n-z: comprimir gzip, -j per bzip2, -J per XZ\n\n-g: permet especificar un fitxer de snapshot incremental\n\nNota: arxiu de SNAPSHOT incremental emmagatzemar\u00e0 metadades que ajudar\u00e0 l'eina tar a determinar quins fitxers han canviat des del darrer incremental, quins s'han afegit, o quins s'han eliminat, de manera que tar podr\u00e0 generar el seg\u00fcent backup incremental nom\u00e9s dels canvis de l'anterior.\n\n/*ho afegim dins de la cadena bkp0_`date +%d-%m-%y`.tgz */\n</code></pre> <ol> <li> <p>Fem una c\u00f2pia de seguretat nivell 1 (bkp1.tgz) per\u00f2 sense modificar cap dels fitxers.</p> </li> <li> <p>Modifiquem el \"fitxer1\" afegint el vostre nom i fem la c\u00f2pia de nivell 2 (bkp2.tgz).</p> </li> <li> <p>Modifiquem el \"fitxer2\" afegint el vostre cognom i fem la c\u00f2pia de nivell 3 (bkp3.tgz).</p> </li> <li> <p>Modifiquem els dos fitxers afegint \"SMX IES Politecnic\" a cadascun i fem c\u00f2pia de nivell4 (bkp4.tgz).</p> </li> <li> <p>Comprovem i analitzem cadascun dels Backups</p> </li> </ol> <pre><code>tar -tvGf backup/bkp0.tgz\n\n/*\n\n-v : verbose\n-G: incremental\nY: significa que el fitxer \u00e9s al backup\nN: significa que el fitxer NO \u00e9s al backup\n\n*/\n</code></pre> <p>Restaurant la c\u00f2pia de Seguretat</p> <ol> <li>Esborrem la carpeta \"dades\" del nostre escriptori simulant que hem perdut les dades i procedim a fer la recuperaci\u00f3 amb cadascun dels arxius un a un.</li> </ol> <pre><code>tar -xvGf backup/bkp0.tgz\n\n/*\n-x : extreure\n-G: incremental  \n*/\n</code></pre> <ol> <li> <p>Llistem i comprovem tots els fitxers.</p> </li> <li> <p>Ara cerca per Internet, utilitza IAs o all\u00f2 que necessitis per crear un fitxer \"script\\Copia_incremental.sh\", d\u00f3na permisos d'execuci\u00f3 (chmod u+x), es tracta de programar una c\u00f2pia completa el dia 1 de cada mes i cada dia fer-ne una c\u00f2pia incremental. Pensa que hauras de recordar com fer un script amb bash, pensar la l\u00f2gica de l'script i planificar l'execuci\u00f3 de l'script amb el cron. Documenta (captura) el lloc d'on hagis tret la informaci\u00f3 per poder-ho fer aquesta activitat i cerca una altra banda on confirmi que la informaci\u00f3 \u00e9s correcta. Aquest lloc tamb\u00e9 l'has de documentar.</p> </li> <li>Modifica el fitxer amb l'script anterior perqu\u00e8 en lloc de fer c\u00f2pia incremental, faci c\u00f2pia diferencial. Documenta d'on has tret la informaci\u00f3 igual que abans.</li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html","title":"Pr\u00e0ctica volumns din\u00e0mics i RAIDs","text":"<p>** Discos B\u00e0sics:**</p> <p>Un disc b\u00e0sic pot dividir-se en una o m\u00e9s particions.</p> <p>Per utilitzar una partici\u00f3, cal formatar-la amb un sistema d'arxius i assignar-li una unitat. La partici\u00f3 es coneix com a volum b\u00e0sic.</p> <p>Els discos b\u00e0sics fan servir la MBR i tenen la limitaci\u00f3 que nom\u00e9s s'hi pot crear com a m\u00e0xim quatre particions prim\u00e0ries, amb una unitat l\u00f2gica cadascuna d'elles.</p> <p>** Discos din\u00e0mics:**</p> <p>Els discos din\u00e0mics es divideixen en volums en lloc de particions.</p> <p>El volum s' ha de formatar i cal assignar-li una unitat abans d' utilitzar-lo. Al volum formatat se li diu volum din\u00e0mic.</p> <p>Els volums permeten major flexibilitat que les particions, per exemple, es pot estendre un volum \u00fanic en diversos discos.</p> <p>Els canvis en els discos tenen efecte en el sistema sense necessitat de reiniciar l'equip</p> <p>** Tipus de volums din\u00e0mics:**</p> <p>** Volums Simples.**:</p> <p>Es tracta de un volum format per una o diverses porcions del mateix disc. Nom\u00e9s es poden crear en discos din\u00e0mics i es poden reflectir. Els volums simples s\u00f3n el m\u00e9s semblant a les particions en els discos b\u00e0sics.</p> <p>Els volums simples es poden estendre si hi afegim porcions del mateix disc o d' altres discos, per\u00f2 no es pot reduir la seva mida un cop est\u00e8s ni eliminar porcions que s' hi hagin afegit, nom\u00e9s es podr\u00e0 eliminar el volum complet. Un volum simple es pot estendre per altres discos fins a ocupar un m\u00e0xim de 32 discos din\u00e0mics.</p> <p>** Volums Distribu\u00efts:**</p> <p>\u00c9s l'extensi\u00f3 d'un volum simple per m\u00e9s d'un disc.*</p> <p>Es tracta d'un volum format per diverses porcions de diversos discos. Nom\u00e9s es poden crear en discos din\u00e0mics i no suporten opcions de toler\u00e0ncia a fallades.</p> <p>Els volums distribu\u00efts es poden estendre afegint porcions del mateix disc. En estendre un volum distribu\u00eft, passar\u00e0 igual que en els simples, que no es podr\u00e0 desassignar espai.</p> <p>Volums Seccionats (stripped) (RAID-0).</p> <p>Volums mirall (RAID-1).</p> <p>Volums Seccionats Tolerants a Fallades (RAID-5).</p> <p>Calculadora RAID:</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html#windows","title":"Windows","text":"<p>Crea en la m\u00e0quina virtual amb 3 discs durs virtuals de 100Mb, 200Mb i 300Mb. Podr\u00e0s anar afegint o traient discs durs a mesura que avanci la pr\u00e0ctica.</p> <p>Utilitza Windows Server 2019</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html#exercici-1","title":"Exercici 1","text":"<ul> <li>Converteix els 2 discs a discs din\u00e0mics,</li> <li>Crea la unitat H amb el HD de 100 Mb. Grava-hi informaci\u00f3 a dins fins omplir-la.</li> <li>Despr\u00e9s expandeix la unitat H amb un HD de 200 Mb. Indica la mida de la unitat resultant.</li> </ul> <p>Captura una imatge de l'administrador de discs i contesta a les seg\u00fcents preguntes:</p> <ul> <li>Has hagut de formatejar o reiniciar?</li> <li>Has perdut dades?</li> <li>Quina es la capacitat actual de la partici\u00f3?</li> <li>Fes una captura de pantalla de l'administrador de discs.</li> <li>Afegeix m\u00e9s arxius a la unitat H . Extreu el disc extra de 200 Mb que havies posat. Has perdut dades?</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html#exercici-2","title":"Exercici 2","text":"<p>Volem crear una unitat inicialment distribu\u00efda (expandida) amb dos HD.</p> <ul> <li>Han de ser de la mateixa mida?</li> <li>Crea una unitat H amb dos HD. Graba informaci\u00f3 a dins i indica la mida de la unitat resultant.</li> <li>Has hagut de formatejar o reiniciar?</li> <li>Fes una captura de pantalla de l'administrador de discs.</li> <li>Elimina un dels dos HD. Has perdut dades?</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html#exercici-3","title":"Exercici 3","text":"<p>Volem crear un raid 0 amb tres HD. (seccionado)</p> <ul> <li>Han de ser de la mateixa mida?</li> <li>Crea la unitat H amb tres HD. Grava informaci\u00f3 a dins i indica la mida de la unitat resultant.</li> <li>Quina \u00e9s el tamany total ?</li> <li>Has hagut de formatejar o reiniciar per crear aquesta unitat H?</li> <li>Treu un disc, qu\u00e8 succeeix?</li> <li>Fes una captura de pantalla de l'administrador de discs.</li> <li>Elimina un dels tres HD. Has perdut dades?</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html#exercici-4","title":"Exercici 4","text":"<p>Volem crear un raid 5 amb tres HD.</p> <ul> <li>Crea una nova unitat H amb 3 HD per tal d'implementar un RAID 5.</li> <li>Han de ser de mateixa mida?</li> <li>Grava informaci\u00f3 a dins i indica la mida de la unitat resultant.</li> <li>Has hagut de formatejar o reiniciar per crear aquesta unitat H?</li> <li>Fes una captura de pantalla de l'administrador de discs.</li> <li>Elimina un dels HD qualsevol, simulant que se'ns espatlla aquest disc. Hem perdut dades?</li> <li>Torna a crear un altra HD per reempla\u00e7ar l'anterior. Reconstrueix el HD eliminat amb la opci\u00f3 de reconstruir disc.</li> <li>Has hagut de formatejar de nou o reiniciar?</li> <li>Has perdut les dades o hi trobem les mateixes que ten\u00edem? Com \u00e9s aix\u00f2 possible?</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html#exercici-5","title":"Exercici 5","text":"<p>Volem crear un raid 1 amb dos HD. (reflejado)</p> <ul> <li>Crea una unitat H amb un HD de 100 MB. Grava-hi informaci\u00f3 a dins.</li> <li>Volem afegir un disc mirall. ha de ser de la mateixa mida?</li> <li>Afegeix el disc mirall. Quin \u00e9s el tamany o mida resultant total?</li> <li>Has hagut de formatejar o reiniciar per crear el disc mirall?</li> <li>Elimina un disc has perdut dades?</li> <li>Fes una captura de pantalla de l'administrador de discs.</li> <li>Extreu el disc original simulant que s'ha espatllat. Hem perdut dades?</li> <li>Afegeix un altre HD i reconstrueix el mirall. Has hagut de formatejar o reiniciar per fer aix\u00f2?</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html#linux","title":"Linux","text":"<p>Podem implementar RAIDS per software en linux. Linux ens permet fer la instal\u00b7laci\u00f3 i configuraci\u00f3 del propi sistema operatiu directament en RAID. En funci\u00f3 dels discs que detecti ubuntu ens permetr\u00e0 construir un raid o un altra. Una vegada escollit el tipus de raid que volem implementar i si aquest ser\u00e0 per software o b\u00e9 per hardware hem de pensar en com particionar els discs.</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html#exercici-1_1","title":"Exercici 1","text":"<p>1-*Creeu una altra m\u00e0quina virtual amb la iso d'un ubuntu server 20.04, amb dos discs durs de 16 GB cadascun.</p> <ul> <li>Feu un Raid 1 durant la instal\u00b7laci\u00f3 de la seg\u00fcent manera:</li> <li>Crea un tutorial pas a pas de la creaci\u00f3 del RAID</li> </ul> <p></p> <p>https://askubuntu.com/questions/1234949/install-ubuntu-20-04-focal-fossa-with-raid-1-on-two-devices</p> <p>De les preguntes 2 a 10, captura pantalla de cadascuna de les preguntes.</p> <p>2-Reinicia el sistema i entra com a administrador. Comprova l'estat del raid executant: cat /proc/mdstat Qu\u00e8 ens mostra aquest arxiu? Explica.</p> <p>3-Vull con\u00e8ixer m\u00e9s detalls de les unitats del raid, per aix\u00f2 utilitzarem la comanda mdadm ( aquesta comanda ens permet administrar conjunts de m\u00faltiples dispositius com per exemple els raids.) Escriu la comanda per visualitzar les diferents unitats. (per exemple md0) Explica mdadm --detail /dev/md0</p> <p>4.Qu\u00e8 ens mostrar\u00e0 la comanda seg\u00fcent: mdadm --query /dev/sdb2  ? Explica</p> <p>5.Visualitzeu les particions del sistema: cat /etc/fstab i cat /proc/partitions</p> <p>6.Anem a simular un error en la partici\u00f3 /dev/sda1 i treieu el disc del RAID: Simuleu un error en la partici\u00f3 sda1 del multidisc md0 amb sudo mdadm /dev/md0 -f /dev/sda2</p> <p>7.Executeu de nou cat /proc/mdstat. Quina difer\u00e8ncia hi veus respecte abans?</p> <p>8.Extraieu el disc del raid sudo mdadm /dev/md0 -r /dev/sda2</p> <p>9.Quin missatge us dona? torneu a mirar el mdstat. Qu\u00e8 ha canviat? Com sabem que s'ha trencat el mirall?</p> <p>10.Torneu a afegir el disc /dev/sda1 amb sudo mdadm dev/md0 -a /dev/sda2 Aneu executant el mdstat i observant com es va reconstruint el mirall.</p> <p>11. Comproveu que s'ha reconstru\u00eft totalment el mirall amb cat /proc/mdstat</p> <p>M\u00e9s informaci\u00f3 Mdadm</p> <p>SOLUCI\u00d3</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercici4.html#exercici-2_1","title":"Exercici 2","text":"<ul> <li>Creeu una altra m\u00e0quina virtual amb la iso d'un ubuntu server 20.04, amb dos discs durs de 30 GB cadascun.</li> <li>Crea un tutorial pas a pas de la creaci\u00f3 del LVM</li> <li>Feu un LVM durant la instal\u00b7laci\u00f3 de la seg\u00fcent manera:</li> </ul> <p>2) Creeu una partici\u00f3 d'arrencada (/boot) en el primer disc d'1GB</p> <p>3) Amb la resta del disc1 f\u00edsic (pv) usarem LVM (en comptes de ext4, volum f\u00edsic per LVM).</p> <p>4) Amb tot el segon disc dur f\u00edsic (pv) sencer utilitzarem LVM.</p> <p>5) Agrupeu tots els volums f\u00edsics en un sol grup de volums (nom:VG_GRUP) i afegiu a aquest grup de volums(vg) tres volums l\u00f2gics (lv):</p> <ul> <li>un de 15 GB amb el sistema de fitxers ext4 i el punt de muntatge / (ARREL)</li> <li>un de 8GB amb el sistema de fitxers swap; (SWAP)</li> <li>un de 15 GB amb el sistema de fitxers ext4 i el punt de muntatge /home (HOME)</li> <li>amb tota la resta de l\u2019espai disponible amb el sistema de fitxers ext4 (DADES).</li> </ul> <p>6)Feu consultes amb les comandes vgdisplay, lvdisplay i pvdisplay. Explica el seu funcionament i el que mostra.</p> <p>SOLUCI\u00d3</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html","title":"Exercicis c\u00f2pies de seguretat","text":""},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-2-us-de-la-comanda-tar-empaquetatge","title":"Exercici 2 (\u00fas de la comanda tar, empaquetatge)","text":"<p>Crear un contenidor o paquet anomenat exemple.tar dins de la carpeta /tmp que contingui els arxius emmagatzemats dins de  /var/log. Mostra el contingut d'aquest contenidor. S'ha redu\u00eft la mida dels arxius al empaquetar-los?</p> <pre><code>sudo tar -cvf /tmp/exemple.tar /var/log\n\ntar -tvf exemple.tar\n</code></pre>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-3-empaquetatge-compressio","title":"Exercici 3 (empaquetatge + compressi\u00f3)","text":"<p>Realitza el mateix que en l'exercici anterior per\u00f2 ara comprimint-lo amb gzip exemple.tar.gz i amb bzip2 exemple.tar.bz2. Compara la mida dels dos arxius. Quin compressor comprimeix m\u00e9s?</p> <pre><code>sudo tar -czvf /tmp/exemple.tar.gz /var/log\n\nsudo tar -cjvf /tmp/exemple.tar.bz2 /var/log\n\n//verificaci\u00f3 gz\n\nsudo tar -tvzf /tmp/exemple.tar.gz\n</code></pre>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-4-extraccio-i-descompressio","title":"Exercici 4 (extracci\u00f3 i descompressi\u00f3)","text":"<p>Extreu el contingut de l'arxiu exemple.tar.gz. en la carpeta /tmp/exemple. Comprova que respecta l'estructura de carpetes original. <pre><code>sudo tar -xzvf exemple.tar.gz -C /tmp/exemple\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-5-compressio-dun-llistat-directoris-o-fitxers-guardat-en-un-arxiu","title":"Exercici 5 (compressi\u00f3 d'un llistat directoris o fitxers guardat en un arxiu)","text":"<p>Comprimeix el seg\u00fcent llistat de directoris i fitxers en un arxiu anomenat llista.tar.bz2 dins del directori /tmp (llista de directoris i fitxers: /boot/grub/locale, /etc/firefox, /etc/passwd, /etc/shadow). Comproveu que s'ha creat correctament. <pre><code>sudo tar -cjvf /tmp/llista.tar.bz2 /boot/grub/locale /etc/firefox /etc/passwd /etc/shadow\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-6-afegir-data-en-el-nom-de-larxiu-de-sortida","title":"Exercici 6 (afegir data en el nom de l'arxiu de sortida)","text":"<p>Feu el mateix que en l'exercici anterior per\u00f2 l'arxiu de sortida ha de tenir el format seg\u00fcent: COP_SEG_dia_mes_any.tar.bz2 (per exemple COP_SEG_07_11_2011.tar.bz2). La data l'ha d'agafar autom\u00e0ticament del sistema. <pre><code>sudo tar -cjvf /tmp/COP_SEG_`date +%d_%m_%Y`.tar.bz2 /boot/grub/locale /etc/firefox /etc/passwd /etc/shadow\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-7-creacio-dun-script-i-programacio-dexecucio-automatica","title":"Exercici 7 (creaci\u00f3 d'un script i programaci\u00f3 d'execuci\u00f3 autom\u00e0tica)","text":"<p>Guarda la comanda anterior (sense el sudo) en un script amb el nom CopiaTotal.sh. Dona-li permisos d'execuci\u00f3 (chmod u+x) Comproveu que teniu instal\u00b7lat a herramientas, si no \u00e9s aix\u00ed instal\u00b7leu-lo, l'aplicaci\u00f3 \"cron\" o tareas programadas. Executa l'script (simplement amb la ruta i el seu nom) per comprovar que funciona. Programa una tasca per tal que s'executi aquest script el dia 1 de cada mes a les 3 de la matinada.</p> <ol> <li>Crees un fitxer anomenat /home/usuari/CopiaTotal.sh am el seg\u00fcent contingut:` <pre><code>#!/bin/bash\ntar -cjvf /tmp/COP_SEG_`date +%d_%m_%Y`.tar.bz2 /boot/grub/locale /etc/firefox /etc/passwd /etc/shadow\n</code></pre> 2.Canvia els permisos: <pre><code>chmod +x CopiaTotal.sh\n</code></pre> 3.Crees una tarea al cron de la seg\u00fcent manera: <pre><code>crontab -e\n</code></pre> i al fitxer afegir la linea: <pre><code>0 3 1 * * /home/usuari/CopiaTotal.sh\n</code></pre></li> </ol>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-8-creacio-dun-script-de-copia-diferencial-i-programacio-execucio","title":"Exercici 8 (creaci\u00f3 d'un script de copia diferencial i programaci\u00f3 execuci\u00f3)","text":"<p>Suposem que volem fer una c\u00f2pia diferencial d'aquest fitxer (llistat.txt que contindr\u00e0 els directoris /boot/grub/locale /etc/firefox /etc/passwd /etc/shadow); els dies 7, 15 i 25 de cada mes. Escriu un script anomenat CopiaDiferencial.sh per fer aquesta c\u00f2pia. Programa l'administrador de tasques per tal que l'executi cada mes en aquests dies tamb\u00e9 a les 3 de la matinada. El fitxer generat de cada c\u00f2pia de seguretat diferencial s'ha de dir CD_DataDarreraCopiaTotal-DataCopiaDiferencial.tar.bz2 (per exemple CD_01nov11-7nov11.tar.bz2)</p> <ol> <li>llistat es un fitxer que hi ha la seug\u00fcent informaci\u00f3: <pre><code>/boot/grub/locale /etc/firefox /etc/passwd /etc/shadow\n</code></pre> 2.Crear un fitxer anomenat CopiaDiferencial.sh amb la seg\u00fcent informaci\u00f3: <pre><code>#!/bin/bash\ntar -cjvf /tmp/CD_SEG_01`date +%b%y`- `date +%d%b%y`.tar.bz2 $(cat /tmp/llistat.txt) -N 01`date +%b%y`\ntar -cjvf /tmp/CD_01`date +%b%y`- `date +%d%b%y`.tar.bz2 $(cat /tmp/llistat.txt) -N 01`date +%b%y`\n</code></pre></li> </ol> <p>3.Canvia els permisos: <pre><code>chmod +x CopiaDiferencial.sh\n</code></pre> 4.Crees una tarea al cron de la seg\u00fcent manera: <pre><code>crontab -e\n\ni al fitxer afegir la linea:\n\n0 3 7 * * /home/usuari/CopiaDiferencial.sh\n\n0 3 15 * * /home/usuari/CopiaDiferencial.sh\n\n0 3 25 * * /home/usuari/CopiaDiferencial.sh\n</code></pre></p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#windows","title":"Windows","text":""},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#eina-propia-de-windows","title":"Eina pr\u00f2pia de Windows","text":""},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-1-backup-complert","title":"Exercici 1 (Backup complert)","text":"<p>Cerca l'eina de programaci\u00f3 de c\u00f2pies de seguretat de windows. Crea en una carpeta els fitxers de text seg\u00fcents:</p> <ul> <li>Escriu en el fitxer file1 el text: \u201cAquest \u00e9s el fitxer file1\u201d</li> <li>Escriu en el fitxer file2 el text: \u201cAquest \u00e9s el fitxer file2\u201d</li> <li>Escriu en el fitxer file3 el text: \u201cAquest \u00e9s el fitxer file3\u201d</li> <li>Escriu en el fitxer file4 el text: \u201cAquest \u00e9s el fitxer file4\u201d</li> <li>Escriu en el fitxer file5 el text: \u201cAquest \u00e9s el fitxer file5\u201d</li> </ul> <p>Programa un backup programat per un dia i una hora determinada de tot el directori Dades. Canvia l'hora i la data del sistema per a qu\u00e8 es faci la copia programada.</p> <p>Comprova que efectivament s'ha realitzat la c\u00f2pia programada. Fes una captura de pantalla de l'arxiu log.</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-2-backup-incremental","title":"Exercici 2 (Backup incremental)","text":"<p>Dissenya un sistema de backups incrementals per a qu\u00e8 es faci un backup programat cada minut del directori Dades.</p> <p>Mentres es va realitzant el backup realitza (no ho facis molt r\u00e0pid) els seg\u00fcents canvis en els fitxers:</p> <ul> <li>Afegeix en el fitxer file1 el text: \u201cAquest \u00e9s el fitxer file1\u201d (debe estar dos veces)</li> <li>Afegeix en el fitxer file2 el text: \u201cAquest \u00e9s el fitxer file2\u201d (debe estar dos veces)</li> <li>Canvia el nom del fitxer \u201cfile3\u201d per \u201cfile33\u201d</li> <li>Esborra el \u201cfile5\u201d.</li> <li>Esborra el contingut del file4, per\u00f2 no el fitxer.</li> <li>Afegeix en el fitxer file1 el text: \u201cAquest \u00e9s el fitxer file1\u201d (debe estar tres veces)</li> <li>Afegeix en el fitxer file2 el text: \u201cAquest \u00e9s el fitxer file2\u201d (debe estar tres veces)</li> </ul> <p>Comprova que s'han efectuat les c\u00f2pies programades. Indica quantes c\u00f2pies s'han fet i qu\u00e8 ha guardat cadascuna d'elles. Fes una captura de pantalla del contingut de l'arxiu log.</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-3-restauracio-parcial","title":"Exercici 3 (Restauraci\u00f3 parcial)","text":"<p>Volem restaurar l'arxiu file5. Indica els passos que has de seguir per fer-ho i si s'ha restaurat.</p> <p>Volem restaura l'arxiu file1 en la seva primera versi\u00f3 indica els passos que hem de seguir per fer-ho i si ho ha restaurat correctament.</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#exercici-4-restauracio-complerta","title":"Exercici 4 (Restauraci\u00f3 complerta)","text":"<p>Esborra tot el directori Dades. Executa una restauraci\u00f3 complerta. Indica els passos que hem de seguir i qu\u00e8 obtens al final.</p> <p>Podem programar backups diferencials amb aquesta eina?</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#paragon-backup-recovery-windows","title":"Paragon Backup &amp; Recovery- windows","text":"<p>Descarrega el programari</p> <p>Fes una c\u00f2pia de seguretat de tot un directori i comprova que despr\u00e9s pots recuperar el contingut amb la c\u00f2pia que has fet.</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis2.html#freefilesync-windows","title":"FREEFILESYNC- windows","text":"<p>Desc\u00e0rrega</p> <p>Crear dues carpetes de fitxers \"Principal\" y \"BackUp\".</p> <p>1) crea 4 archivos en principal y otros 2 en Backupcrea 4 arxius en principal i altres 2 a Backup, utilitza la sincronitzaci\u00f3 BIDIRECCIONAL d\u00f3na-li a COMPARAR i SINCRONITZAR.</p> <p>2) crea 2 arxius i elimina'n un altre a Principal, utilitza la sincronitzaci\u00f3 MIRALL d\u00f3na-li a COMPARAR i SINCRONITZAR.</p> <p>2.1) Qu\u00e8 passa si esborres un arxiu al Backup?</p> <p>3) crea 2 arxius, utilitza la sincronitzaci\u00f3 PERSONALITZADA d\u00f3na-li a COMPARAR i SINCRONITZAR.</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis3.html","title":"Eina Cobian Backup -Windows","text":"<p>Desc\u00e0rrega</p> <p>Exercici 1 (programaci\u00f3 c\u00f2pia de seguretat diferencial comprimida)</p> <p>Programeu una c\u00f2pia de seguretat  diferencial, comprimida en zip i protegida amb contrasenya de la carpeta \"Mis documentos\" (heu de crear una \"tarea nueva\"). Aquesta c\u00f2pia s'ha d'efectuar tots els divendres a les 23:30 hores.</p> <p>Exercici 2 (Programaci\u00f3 c\u00f2pia de seguretat incremental comprimida)</p> <p>Programeu una c\u00f2pia de seguretat  incremental, comprimida en zip i protegida amb contrasenya de la carpeta \"Mis documentos\" (heu de crear una \"tarea nueva\"). Aquesta c\u00f2pia s'ha d'efectuar tots els dies excepte els divendres a les 23:30 hores.</p> <p>Exercici 3 (Restauraci\u00f3 c\u00f2pia de seguretat comprimida)</p> <p>Feu que s'executin les tasques anteriorment programades. Elimineu la carpeta mis documentos i restaureu-la. El Cobian posseeix alguna eina de restauraci\u00f3? Creieu que \u00e9s necessari o es pot fer manualment?</p> <p>Exercici 4 (Programaci\u00f3 c\u00f2pia de seguretat comprimida i encriptada)</p> <p>Programeu una c\u00f2pia de seguretat comprimida i encriptada de la carpeta \u201cimatges\u201d que s'executi cada 12 hores.</p> <p>Exercici 5 (Restauraci\u00f3 c\u00f2pia de seguretat comprimida i encriptada)</p> <p>Elimineu algunes imatges de la carpeta i restaureu-la. Indiqueu els passos que hem de seguir per tal de restaurar una carpeta encriptada com aquesta.</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis3.html#rsync-linux","title":"RSYNC-linux","text":"<p>Desc\u00e0rrega</p> <p>rsync \u00e9s l'estandar sync per a la sincronitzaci\u00f3 remota. La utilidad rsync se utiliza para sincronizar los archivos y directorios de un lugar a otro de una manera eficaz. La ubicaci\u00f3 de c\u00f2pia de seguretat podria estar en el servidor local o en un servidor remot.</p> <p>Estructura de la instrucci\u00f3: $ rsync [opcions] origen desti</p> <p>Els comandaments m\u00e9s \u00fatils i utilitzats s\u00f3n:</p> <p>-v --verbose Mostra informaci\u00f3 a trav\u00e9s del terminal.</p> <p>-e --rsh=command Especifica la consola Shell a utilitzar.</p> <p>-a --archive Mode arxivat: recursiu, c\u00f2pia enlla\u00e7os, mant\u00e9 els permisos, la data de modificaci\u00f3, la informaci\u00f3 de grups, propietaris i els arxius de dispositius.</p> <p>-r --recursive Recusivitat per a tots els directoris.</p> <p>--delete Elimina arxius aliens a la font d'origen.</p> <p>-z --compress Comprimeix arxius durant la transfer\u00e8ncia.</p> <p>-P --progress Mostra una barra de progr\u00e9s</p> <p>Ens connectarem des de la m\u00e0quina f\u00edsica a la maquina virtual que estam utilitzant (openssh-server) </p> <p>1. Sincronitzar dos directoris en un servidor local</p> <p>Per exemple: rsync -azv /var/opt/installation/inventory/ /root/temp/</p> <p>2. Sincronitzar arxius de local a remot</p> <p>Per exemple: rsync -avz ./Datos/ administrador@:/home/administrador/Escriptori/backup <p>3. Sincronitzar arxius de remot a local</p> <p>Per exemple: rsync -avz administrador@:/home/administrador/Escriptori/backup ./Datos <p>4. Veure el progr\u00e9s rsync durant la transfer\u00e8ncia</p> <p>Per exemple: rsync -avz --progress ./Datos/ administrador@:/home/administrador/Escriptori/backup <p>5. I si volguesim encriptar toda la informaci\u00f3?</p> <p>Per exemple: rsync -e ssh -avPz /origen usuario@172.168.106.250:/destino</p> <p>https://javierin.com/rsync-funcionamiento-opciones/</p> <p>https://www.linuxparty.es/index.php/8177-copias-de-seguridad-remotas-en-linux-ejemplos-con-rsync</p> <p>https://gigastur.es/copias-seguridad-linux-rsync</p>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis4_.html","title":"M\u00e9s exercicis sobre c\u00f2pies de seguretat en Linux","text":""},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis4_.html#unison-linux","title":"UNISON- linux","text":"<p>Copia Sincronizada Trataremos de hacer una copia de seguridad de un ordenador a otro, por ello necesitamos dos MV ubuntu 14. (red internas, asignar unas ip 192.168.1.X)</p> <p>En la primera instalaremos Unison-gtk y tendremos una carpeta llamada \"Datos\" en la que guardaremos im\u00e1genes y archivos (192.168.1.2)</p> <p>En la segunda MV instalaremos un servidor ssh \"openssh-server\" y crearemos una carpeta vacia para guardar informaci\u00f3n. (192.168.1.3)</p> <ul> <li>1) Abrimos el programa Unison, ponemos conectarnos con ssh en HOST ponemos la direcci\u00f3n Ip del ordenador donde est\u00e1 el servidor ssh (192.168.1.2) y su nombre de usuario 'administrador'.</li> </ul> <p>Seleccionamos el origen (datos que queremos copiar) y destino (ruta de la otra m\u00e1quina) /home/administrador/Escriptori/copia Activamos FAT. Aceptamos y ponemos contrase\u00f1a. Luego bot\u00f3n Go</p> <ul> <li>2) Agregamos y borramos alg\u00fan fichero de la m\u00e1quina destino.\u00bfQu\u00e9 ocurre en el origen?</li> </ul>"},{"location":"Moduls/ARXIU/2425/SI/exercicisisolucions/SIUT02_exercicis4_.html#gadmin-rsync-linux","title":"GADMIN-RSYNC - linux","text":"<p>Copia Sincronizada Trataremos de hacer una copia de seguridad de un ordenador a otro, por ello necesitamos dos MV ubuntu 14. (red internas, asignar unas ip 192.168.1.X)</p> <p>En la primera instalaremos gadmin-rsync y tendremos una carpeta llamada \"Datos\" en la que guardaremos im\u00e1genes y archivos (192.168.1.2)</p> <p>En la segunda MV instalaremos un servidor ssh \"openssh-server\" y crearemos una carpeta vacia para guardar informaci\u00f3n. (192.168.1.3)</p> <ul> <li>1) Abrimos el programa gadmin-rsync, Creamos un nuevo perfil, y elegimos de Local a Remoto, rellenamos los par\u00e1metros. Y hacemos la copia en una carpeta llamada \"backup_gadmin\"</li> <li>2) Modificamos alg\u00fan fichero del destino y hacemos el procedimiento inverso, es decir, restauramos los valores de la copia de seguridad en el origen.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/DHCP_encaminador_concentrador.html","title":"Configuraci\u00f3 DHCP en un encaminador (o en un concentrador)","text":"<p>Moltes vegades ser\u00e0 m\u00e9s convenient i \u00fatil tenir configurat el servidor DHCP, ja sigui en una LAN o en una VLAN, a un dispositiu d'interconnexi\u00f3 com pugui ser un encaminador (router) o concentrador (switch). A continuaci\u00f3 trobareu la seq\u00fc\u00e8ncia d'instruccions que s'han d'executar des d'una consola del dispositiu per configurar el DHCP, m\u00e9s que no haver de tenir un servidor f\u00edsic pel mateix prop\u00f2sit.</p> <p>En el cas que tenim aqu\u00ed, l'adre\u00e7ament de la xarxa \u00e9s 172.38.0.0 / 15</p> <p>Les passes a seguir s\u00f3n les seg\u00fcents:</p> <ol> <li>Entrar en el mode configuraci\u00f3 del dispositiu</li> <li>Seleccionar la interf\u00edcia sobre la qual volem configurar en servidor DHCP (en el nostre cas el dispositiu \u00e9s el GigabitEthernet 0/0, per\u00f2 podria ser qualsevol altre segons les necessitats.)</li> <li>Primer de tot, si no ho hem fet encara, li assignarem la IP a la nostra interf\u00edcia. (172.38.0.1 / 15)</li> <li>Crearem el POOL i li especificam la xarxa al pool (172.38.0.0 / 15)</li> <li>Configuram el default gateway i dns server al pool. D'aquesta manera quan s'assigni una ip del pool a un client, tamb\u00e9 se li passaran les dades de default gateway i dns server que ara hem configurat.</li> <li>Finalment definim un rang d'ips que quedin excloses del pool per aix\u00ed poder-les utilitzar com ip fixes, si fos necessari.</li> </ol> <pre><code>Router&gt;en\nRouter#conf term\nEnter configuration commands, one per line.  End with CNTL/Z.\nRouter(config)#interface GigabitEthernet 0/0\nRouter(config-if)#ip address 172.38.0.1 255.254.0.0\nRouter(config-if)#no shutdown \nRouter(config-if)#exit\nRouter(config)#ip dhcp pool LAN\nRouter(dhcp-config)#network 172.38.0.0 255.254.0.0\nRouter(dhcp-config)#default-router 172.38.0.1\nRouter(dhcp-config)#dns-server 8.8.8.8\nRouter(dhcp-config)#exit\nRouter(config)#ip dhcp excluded-address 172.38.0.1 172.38.0.10\n</code></pre>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html","title":"Exercicis Packet Tracer","text":""},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#subnetting-i-encaminament","title":"Subnetting i encaminament","text":"<p>Per a les taules d'encaminament que es demanen als seg\u00fcents exercicis, fes servir una taula equivalent a la seg\u00fcent:</p> <p> Exemple de taula d'encaminament </p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-1-de-les-adreces-ip-que-sespecifiquen-a-continuacio-indica","title":"Exercici  1. De les adreces IP que s'especifiquen a continuaci\u00f3, indica:","text":"<ul> <li>Quin \u00e9s l\u2019id de xarxa (subxarxa)?</li> <li>Quina \u00e9s l\u2019adre\u00e7a de broadcast?</li> <li>Quants de hosts hi poden haver a la xarxa (subxarxa)?</li> <li>La m\u00e0scara en format CIDR o en format de 4 octets decimals (segons la que s\u2019aporti)</li> <li>Classe de la xarxa (subxarxa)</li> </ul> Cas 1: 215.215.215.213 Mask 255.255.255.248 Address: 215.215.215.213 11010111.11010111.11010111.11010 101 Netmask: 255.255.255.248 = 29 11111111.11111111.11111111.11111 000 Wildcard: 0.0.0.7 00000000.00000000.00000000.00000 111 =&gt; Network: 215.215.215.208/29 11010111.11010111.11010111.11010 000 HostMin: 215.215.215.209 11010111.11010111.11010111.11010 001 HostMax: 215.215.215.214 11010111.11010111.11010111.11010 110 Broadcast: 215.215.215.215 11010111.11010111.11010111.11010 111 Hosts/Net: 6 Class C Cas 2: 192.168.0.192 Mask 255.255.254.0 Address: 192.168.0.213 11000000.10101000.0000000 0.11010101 Netmask: 255.255.254.0 = 23 11111111.11111111.1111111 0.00000000 Wildcard: 0.0.1.255 00000000.00000000.0000000 1.11111111 =&gt; Network: 192.168.0.0/23 11000000.10101000.0000000 0.00000000 HostMin: 192.168.0.1 11000000.10101000.0000000 0.00000001 HostMax: 192.168.1.254 11000000.10101000.0000000 1.11111110 Broadcast: 192.168.1.255 11000000.10101000.0000000 1.11111111 Hosts/Net: 510 Class C, Private Internet Cas 3: 10.10.10.10 / 10 Address: 10.10.10.10 00001010.00 001010.00001010.00001010 Netmask: 255.192.0.0 = 10 11111111.11 000000.00000000.00000000 Wildcard: 0.63.255.255 00000000.00 111111.11111111.11111111 =&gt; Network: 10.0.0.0/10 00001010.00 000000.00000000.00000000 HostMin: 10.0.0.1 00001010.00 000000.00000000.00000001 HostMax: 10.63.255.254 00001010.00 111111.11111111.11111110 Broadcast: 10.63.255.255 00001010.00 111111.11111111.11111111 Hosts/Net: 4194302 Class A, Private Internet"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-2-sobre-els-casos-anteriors-i-amb-el-fitxer-del-pt-que-trobaras-abaix-fes","title":"Exercici  2. Sobre els casos anteriors i amb el fitxer del PT que trobaras abaix fes:","text":"<ul> <li>Connecta el segon PC de cada sector al concentrador</li> <li>Assigna la seg\u00fcent IP disponible de cada rang utilitzat i calculat en l'exercici anterior</li> <li>Verifica i captura evid\u00e8ncies de que hi ha connectivitat entre els pcs que haurien de tenir connectivitat i que NO n'hi ha entre els que NO n'haurien de tenir (PC0 amb PC1; Laptop1 amb Laptop2; PC2 amb PC3. Qualsevol altra combinaci\u00f3 no ha de tenir connectivitat)</li> <li>Raona i explica perqu\u00e8 tenen connectivitat les combinacions anteriors i la resta no. Qu\u00e8 passaria si un usuari canvi\u00e9s la IP de Laptop0 a la IP 215.215.215.214? Justifica la resposta i comprova-ho amb el PT. Captura evid\u00e8ncies de la comprovaci\u00f3.</li> </ul> Fitxer PT exercici2 <p> exercici2.pkt </p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-3-al-fitxer-adjunt-trobaras-un-esquema-amb-una-configuracio-inicial-ja-feta-allo-que-es-demana-es-el-seguent","title":"Exercici  3. Al fitxer adjunt trobar\u00e0s un esquema amb una configuraci\u00f3 inicial ja feta. All\u00f2 que es demana \u00e9s el seg\u00fcent:","text":"<ul> <li>Configura l'encaminador inal\u00e0mbric perqu\u00e8 els dos elements de la xarxa privada puguin tenir acc\u00e9s a internet. Haur\u00e0s de fer una configuraci\u00f3n completa incloent:</li> <li>\"Network Setup\" incloent DHCP Server sobre la xarxa indicada (192.168.0.0 / 24)</li> <li>\"Internet Setup\" (de manera que tengui la IP 101.0.0.1 / 8)</li> <li>\"Wireless\" utilitzant WPA2 Personal, encriptaci\u00f3 AES i contrasenya 12345678</li> </ul> Esquema exercici 3 Fitxer PT exercici3 <p> exercici3.pkt </p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-4-partint-de-la-base-del-fitxer-anterior-hauras-de-completar-la-configuracio-taula-dencaminament-dels-encaminadors-1-i-2-de-manera-que-hi-hagi-connectivitat-completa-entre-els-elements-de-lesquema-plantejat","title":"Exercici  4. Partint de la base del fitxer anterior, hauras de completar la configuraci\u00f3 (taula d'encaminament) dels encaminadors 1 i 2, de manera que hi hagi connectivitat completa entre els elements de l'esquema plantejat.","text":"Esquema exercici 4 Fitxer PT exercici4 <p> exercici4.pkt </p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-5-en-el-seguent-esquema-utilitzant-encaminament-estatic-indica-quines-serien-les-taules-dencaminament-dels-encaminadors-1-2-i-3-per-a-un-funcionament-correcte-de-la-comunicacio","title":"Exercici  5. En el seg\u00fcent esquema, utilitzant encaminament est\u00e0tic, indica quines serien les taules d'encaminament dels encaminadors 1, 2 i 3 per a un funcionament correcte de la comunicaci\u00f3.","text":"Esquema exercici 5 Fitxer PT exercici5 <p> exercici5.pkt </p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-6-a-partir-del-seguent-esquema-completa-les-taules-dencaminament-dels-encaminadors-a-i-b","title":"Exercici  6. A partir del seg\u00fcent esquema completa les taules d'encaminament dels encaminadors A i B.","text":"Esquema exercici 6"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-7-a-partir-del-seguent-esquema-completa-les-taules-dencaminament-dels-encaminadors-a-i-b","title":"Exercici  7. A partir del seg\u00fcent esquema completa les taules d'encaminament dels encaminadors A i B.","text":"Esquema exercici 7"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-8-en-el-seguent-esquema-utilitzant-encaminament-estatic-indica-quines-serien-les-taules-dencaminament-dels-encaminadors-1-2-i-3-per-a-un-funcionament-correcte-de-la-comunicacio","title":"Exercici  8. En el seg\u00fcent esquema, utilitzant encaminament est\u00e0tic, indica quines serien les taules d'encaminament dels encaminadors 1, 2 i 3 per a un funcionament correcte de la comunicaci\u00f3.","text":"Esquema exercici 8"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-9-una-empresa-que-te-contractades-dues-connexions-a-lexterior-amb-dos-isp-diferents-utilitza-encaminament-estatic-a-tots-els-seus-routers-i-per-a-totes-les-rutes-lesquema-de-xarxes-de-lempresa-es-el-que-es-mostra","title":"Exercici  9. Una empresa que t\u00e9 contractades dues connexions a l'exterior amb dos ISP diferents, utilitza encaminament est\u00e0tic a tots els seus routers i per a totes les rutes. L'esquema de xarxes de l'empresa \u00e9s el que es mostra.","text":"Esquema exercici 9"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#vlans","title":"VLANs","text":""},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-10-en-un-institut-hi-ha-3-fibres-amb-connexio-a-internet-i-amb-la-distribucio-de-dispositius-que-es-mostra-a-lesquema-planteja-una-solucio-perque-cada-aula-utilitzi-una-fibra-mantenint-la-distribucio-fisica","title":"Exercici 10. En un institut hi ha 3 fibres amb connexi\u00f3 a internet i amb la distribuci\u00f3 de dispositius que es mostra a l'esquema. Planteja una soluci\u00f3 perqu\u00e8 cada Aula utilitzi una fibra mantenint la distribuci\u00f3 f\u00edsica.","text":"Diagrama exercici 10 Fitxer PT exercici6 <p> exercici6.pkt exercici6_solucio.pkt </p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-11-a-partir-del-seguent-esquema-determina-quins-enllacos-han-de-ser-troncals","title":"Exercici 11. A partir del seg\u00fcent esquema determina quins enlla\u00e7os han de ser troncals:","text":"Esquema exercici 11 Pista <p>Per saber quins ports hem de posar en mode troncal i en mode acc\u00e9s podem utilitzar un truc que consisteix a unir els PCs de diferents grups amb l\u00ednies de colors, assenyalant el recorregut que caldria fer per comunicar els uns amb els altres com es mostra a continuaci\u00f3:</p> <p> Pista exercici 11 </p> <p>Els ports dels quals surti m\u00e9s d'un color seran ports troncals.</p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-12-utilitzant-el-packet-tracer-i-en-un-switch-configura-dues-vlans","title":"Exercici 12. Utilitzant el Packet Tracer i en un switch, configura dues VLANs:","text":"<ul> <li>VLAN 10 (Nom: Professors)</li> <li> <p>VLAN 20 (Nom: Alumnes).</p> </li> <li> <p>Assigna els ports FastEthernet 0/1 a 0/5 a la VLAN 10 i els ports FastEthernet 0/6 a 0/10 a la VLAN 20.</p> </li> </ul> <p>Pregunta addicional</p> <p>Quina ordre s\u2019utilitza per verificar les VLANs creades i els ports assignats?</p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-13-configura-un-enllac-trunk-entre-dos-switches-switcha-i-switchb-que-transporti-les-vlans-10-20-i-30-estableix-la-vlan-99-com-a-vlan-nativa","title":"Exercici 13. Configura un enlla\u00e7 trunk entre dos switches (SwitchA i SwitchB) que transporti les VLANs 10, 20 i 30. Estableix la VLAN 99 com a VLAN nativa.","text":"<p>Note</p> <p>Cerca informaci\u00f3 sobre qu\u00e8 \u00e9s la VLAN nativa</p> <p>Pregunta addicional</p> <p>Quina difer\u00e8ncia hi ha entre un port en mode trunk i un port en mode access? Escriu-ho una explicaci\u00f3 amb les teves paraules de la manera m\u00e9s clara possible per\u00f2 utilitzant la terminologia adequada. </p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius.html#exercici-14-fes-una-configuracio-de-vlan-i-enllacos-troncals-aixi-com-esta-especificat-a-lesquema-i-amb-les-dades-de-la-taula","title":"Exercici 14. Fes una configuraci\u00f3 de VLAN i enlla\u00e7os troncals aix\u00ed com est\u00e0 especificat a l'esquema i amb les dades de la taula.","text":"Esquema exercici 14 <p>Taula d'assignaci\u00f3 d'adreces</p> Dispositiu Interf\u00edcie Adre\u00e7a IP M\u00e0scara de subxarxa Gateway predeterminat S1 VLAN 1 192.168.1.11 255.255.255.0 N/D S2 VLAN 1 192.168.1.12 255.255.255.0 N/D PC-A NIC 192.168.10.3 255.255.255.0 192.168.10.1 PC-B NIC 192.168.10.4 255.255.255.0 192.168.10.1"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html","title":"Exercicis Packet Tracer","text":""},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#subnetting-i-encaminament","title":"Subnetting i encaminament","text":"<p>Recomanacions generals:</p> <ul> <li>Adre\u00e7ament: Utilitza m\u00e0scares <code>/24</code> per a xarxes locals i <code>/30</code> per a enlla\u00e7os entre routers.</li> <li>Verificaci\u00f3: Fes servir ping i traceroute des dels PCs per comprovar la connectivitat.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-1-interconnexio-entre-dues-xarxes-i-un-encaminador","title":"Exercici  1. Interconnexi\u00f3 entre dues xarxes i un encaminador","text":"<p>Tenim dues xarxes privades 172.16.100.0 / 24 i la 172.17.99.0 / 24. Es demana que es crei amb packet tracer una simulaci\u00f3 per fer la interconnexi\u00f3 de les dues xarxes, verificant la connectivitat entre tots els dispositius.</p> Fitxer PT exercici1 <p> Col\u00b7lecci\u00f3 2 exercici 1 </p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-2-configuracio-basica-de-vlans","title":"Exercici 2. Configuraci\u00f3 b\u00e0sica de VLANs","text":"<p>Crea dues VLANs (VLAN 10 i VLAN 20) en un switch.</p> <p>Assigna 2 PCs a la VLAN 10 i 2 PCs a la VLAN 20.</p> <p>Verifica que els PCs de la mateixa VLAN poden comunicar-se, per\u00f2 no amb els de l'altra VLAN.</p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-3-configuracio-de-vlans-entre-switchs","title":"Exercici 3. Configuraci\u00f3 de VLANs entre switchs","text":"<p>Connecta dos switchs amb un enlla\u00e7 trunk.</p> <p>Crea la VLAN 30 en ambd\u00f3s switchs.</p> <p>Assigna un PC a cada switch dins la VLAN 30.</p> <p>Comprova que poden comunicar-se malgrat estar en switchs diferents.</p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-4-configuracio-de-dhcp-per-vlans","title":"Exercici 4. Configuraci\u00f3 de DHCP per VLANs","text":"<p>Configura un switch per actuar com a servidor DHCP per a dues VLANs (VLAN 80 i VLAN 90).</p> <p>Assigna rang d'adreces diferents per a cada VLAN.</p> <p>Verifica que els PCs reben adreces IP autom\u00e0ticament de la VLAN corresponent.</p> <p>Aqu\u00ed tens 10 enunciats d\u2019exercicis b\u00e0sics d\u2019encaminament entre xarxes privades, sense incloure VLANs, combinant diferents nombres d\u2019encaminadors (fins a 4) i xarxes (fins a 7). Tots es poden resoldre amb Packet Tracer utilitzant configuraci\u00f3 gr\u00e0fica (no CLI).</p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-5-xarxa-simple-amb-1-encaminador-i-2-xarxes","title":"Exercici 5: Xarxa simple amb 1 encaminador i 2 xarxes","text":"<ul> <li>Configura un encaminador (Router0) amb dues interf\u00edcies:<ul> <li>Fa0/0: Xarxa <code>192.168.1.0/24</code> (connecta 2 PCs).</li> <li>Fa0/1: Xarxa <code>192.168.2.0/24</code> (connecta 2 PCs).</li> </ul> </li> <li>Assigna adreces IP est\u00e0tiques als PCs i verifica la comunicaci\u00f3 entre les dues xarxes.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-6-2-encaminadors-i-3-xarxes-en-cadena","title":"Exercici 6: 2 encaminadors i 3 xarxes en cadena","text":"<ul> <li>Connecta Router0 i Router1 amb un enlla\u00e7 serial (<code>10.0.0.0/30</code>).</li> <li>Router0:<ul> <li>Xarxa <code>192.168.1.0/24</code> (2 PCs).</li> </ul> </li> <li>Router1:<ul> <li>Xarxa <code>192.168.2.0/24</code> (2 PCs).</li> </ul> </li> <li>Configura encaminament est\u00e0tic als routers per permetre comunicaci\u00f3 entre totes les xarxes.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-7-3-encaminadors-en-estrella-4-xarxes","title":"Exercici 7: 3 encaminadors en estrella (4 xarxes)","text":"<ul> <li>Router0 (centre) connectat a:<ul> <li>Router1: Xarxa <code>192.168.1.0/24</code>.</li> <li>Router2: Xarxa <code>192.168.2.0/24</code>.</li> <li>Router3: Xarxa <code>192.168.3.0/24</code>.</li> </ul> </li> <li>Assigna una xarxa <code>/30</code> per a cada enlla\u00e7 entre routers.</li> <li>Configura rutes est\u00e0tiques per interconnectar totes les xarxes.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-8-2-encaminadors-i-4-xarxes-amb-redundancia","title":"Exercici 8: 2 encaminadors i 4 xarxes (amb redund\u00e0ncia)","text":"<ul> <li>Router0 i Router1 connectats amb dos enlla\u00e7os (serial i Ethernet):<ul> <li>Enlla\u00e7 1: <code>10.0.0.0/30</code> (serial).</li> <li>Enlla\u00e7 2: <code>10.0.1.0/30</code> (Ethernet).</li> </ul> </li> <li>Cada router t\u00e9 dues xarxes locals (<code>192.168.1.0/24</code> i <code>192.168.2.0/24</code>).</li> <li>Configura encaminament est\u00e0tic per utilitzar nom\u00e9s l\u2019enlla\u00e7 serial com a primari.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-9-4-encaminadors-i-5-xarxes-topologia-en-anell","title":"Exercici 9: 4 encaminadors i 5 xarxes (topologia en anell)","text":"<ul> <li>Connecta 4 routers en anell amb enlla\u00e7os <code>/30</code>:<ul> <li>Router0 \u2192 Router1 \u2192 Router2 \u2192 Router3 \u2192 Router0.</li> </ul> </li> <li>Cada router t\u00e9 una xarxa local (<code>192.168.X.0/24</code>, on <code>X</code> \u00e9s 1 a 4).</li> <li>Configura rutes est\u00e0tiques per evitar bucles (simulant un protocol d\u2019encaminament).</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-10-3-encaminadors-i-6-xarxes-jerarquic","title":"Exercici 10: 3 encaminadors i 6 xarxes (jer\u00e0rquic)","text":"<ul> <li>Router0 (nivell superior) connectat a Router1 i Router2 (nivell inferior).</li> <li>Cada router inferior t\u00e9 dues xarxes locals (<code>192.168.X.0/24</code> i <code>192.168.Y.0/24</code>).</li> <li>Utilitza xarxes <code>/30</code> per als enlla\u00e7os entre routers.</li> <li>Configura rutes per defecte (default route) als routers inferiors cap a Router0.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-7-2-encaminadors-i-3-xarxes-amb-dhcp","title":"Exercici 7: 2 encaminadors i 3 xarxes amb DHCP","text":"<ul> <li>Router0 actua com a servidor DHCP per a la xarxa <code>192.168.1.0/24</code>.</li> <li>Router1 t\u00e9 una xarxa <code>192.168.2.0/24</code> amb adreces est\u00e0tiques.</li> <li>Connecta els routers amb un enlla\u00e7 <code>10.0.0.0/30</code>.</li> <li>Verifica que els PCs de la xarxa DHCP poden comunicar-se amb la xarxa est\u00e0tica.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-8-4-encaminadors-i-7-xarxes-topologia-malla-parcial","title":"Exercici 8: 4 encaminadors i 7 xarxes (topologia malla parcial)","text":"<ul> <li>Connecta 4 routers en una topologia mixta (alguns enlla\u00e7os directes, altres no).</li> <li>Cada router t\u00e9 1 o 2 xarxes locals (<code>192.168.X.0/24</code>).</li> <li>Configura encaminament est\u00e0tic per assegurar connectivitat entre totes les xarxes.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-9-3-encaminadors-i-4-xarxes-amb-nat","title":"Exercici 9: 3 encaminadors i 4 xarxes amb NAT","text":"<ul> <li>Router0 t\u00e9 una xarxa privada (<code>192.168.1.0/24</code>) i una interf\u00edcie p\u00fablica (simulada amb <code>203.0.113.0/30</code>).</li> <li>Router1 i Router2 tenen xarxes privades (<code>192.168.2.0/24</code> i <code>192.168.3.0/24</code>).</li> <li>Configura NAT a Router0 per permetre als PCs de les xarxes privades accedir a la \"Internet\" p\u00fablica.</li> </ul> <p>Recorda</p> <p>Tenim un exercici fet a classe sobre el NAT. Intenta recordar el concepte i aplica'l a aquest execici.</p>"},{"location":"Moduls/ARXIU/2425/XL/exercicisinterconnexiodispositius2.html#exercici-10-exercici-complet-vlan-subnetting","title":"Exercici 10: Exercici complet VLAN + Subnetting","text":"Esquema exercici 10 <p>En l\u2019esquema pots observar que hi ha tres xarxes (PALMA, MURO i POLLEN\u00c7A) interconnectades a trav\u00e9s d\u2019encaminadors. Sen\u2019s demana el seg\u00fcent:</p> <ul> <li>A la xarxa de Palma tenim assignada la xarxa 172.17.100.0/24, per\u00f2 ara ens demanen que hi facem dues VLANs:<ul> <li>VLAN110</li> <li>VLAN200</li> </ul> </li> </ul> <p>La primera haur\u00e0 de tenir l\u2019adre\u00e7ament IP de la tercera subxarxa resultant de fer subnetting de 172.17.100.0/24 amb m\u00e1scara CIDR 27.</p> <p>La segona haur\u00e0 de tenir l\u2019adre\u00e7ament IP de la cinquena subxarxa resultant de fer subnetting de 172.17.100.0/24 amb m\u00e1scara CIDR 27.</p> <ul> <li>Assigna totes les IPs, de forma manual, als dispositius de la xarxa de Palma</li> <li>La xarxa de Muro ha de tenir la xarxa 172.17.150.0/24</li> <li>Assigna totes les IPs, de forma manual, als dispositius de la xarxa de Muro</li> <li>La xarxa de Pollen\u00e7a ha de tenir la xarxa 172.17.151.0/24</li> <li>Assigna totes les IPs, de forma manual, als dispositius de la xarxa de Pollen\u00e7a</li> <li>Ara haur\u00e0s de configurar els encaminadors de manera que tots els ordinadors es puguin veure amb la resta d\u2019ordinadors (tots amb tots). Les xarxes per intercomunicar els encaminadors han de sortir de la xarxa 10.10.10.0/24, fent subnetting amb m\u00e0scara de 30 bits.</li> </ul> <p>Per aquest exercici i amb l\u2019objectiu de poder intercomunicar les VLANs 110 i 200 amb la resta de xarxes i tamb\u00e9 entre elles, s\u2019ha disposat un router amb dos ports assignats un per a cada VLAN. Pensa com haur\u00e0s de realitzar la configuraci\u00f3, tenint en compte que en aquest esquema, cada VLAN ha de disposar d\u2019un gateway per defecte. </p> Fitxer PT exercici10 <p> Col\u00b7lecci\u00f3 2 exercici 10 </p>"},{"location":"Moduls/ARXIU/2425/XL/practica1encaminadors.html","title":"Exercicis encaminament de xarxes","text":"<p>Sobre els exercicis</p> <p>Aquests exercicis estan pensats per qu\u00e8 els resolguis i guardis en arxius per m\u00e9s endavant poder-los consultar. </p>"},{"location":"Moduls/ARXIU/2425/XL/practica1encaminadors.html#encaminament-de-dues-xarxes","title":"Encaminament de dues xarxes","text":""},{"location":"Moduls/ARXIU/2425/XL/practica1encaminadors.html#exercici-1","title":"Exercici 1","text":"<p>Contesta les q\u00fcestions plantejades tenint en compte que el mapa l\u00f2gic de la xarxa d'una organitzaci\u00f3 qualsevol \u00e9s el seg\u00fcent:</p> Mapa l\u00f2gic exercici <ol> <li>Implementa amb el Packet Tracer la xarxa plantejada a la imatge.</li> <li>Configura els dispositius de la xarxa per qu\u00e8 les dues xarxes estiguin interconnectades.</li> <li>Explica per a qu\u00e8 serveix la taula de rutes d\u2019un router i quines dades permet mostrar. \u00c9s important entendre i saber explicar amb les teves pr\u00f2pies paraules l'explicaci\u00f3 que posis.</li> </ol>"},{"location":"Moduls/ARXIU/2425/XL/practica1encaminadors.html#encaminament-de-tres-xarxes-amb-dos-encaminadors","title":"Encaminament de tres xarxes amb dos encaminadors","text":""},{"location":"Moduls/ARXIU/2425/XL/practica1encaminadors.html#exercici-2","title":"Exercici 2","text":"<p>Part 1</p> <p>El mapa l\u00f2gic base sobre el que es treballa en aquesta activitat \u00e9s el que mostra la seg\u00fcent imatge.... \u00c9s important que responguis facis els exercicis en l\u2019ordre que es plantegen, sin\u00f3 el resultat no ser\u00e0 el desitjat.</p> Mapa l\u00f2gic exercici <ol> <li> <p>Implementa amb el Packet Tracer, el mapa l\u00f2gic proposat. Enganxa una imatge que compleixi les condicions seg\u00fcents:</p> <ol> <li>Modifica els noms del routers RTx_ELTEUNOM, on x=n\u00famero del router.</li> <li>Afegeix al disseny totes les etiquetes amb les ips i dades que trobis que falten.</li> <li>Els hosts de la xarxa 10.0.0.0/8 han de veure els hosts de la xarxa 192.168.1.0/24</li> <li>Els hosts de la xarxa 10.0.0.0/8 no han de veure els hosts de la xarxa 172.16.0.0/16</li> <li>Els hosts de la xarxa 172.16.0.0/16 no han de veure els hosts de la xarxa 192.168.1.0/24</li> <li>Recorda que si tens algun dubte o prens alguna decisi\u00f3 amb dubtes la pots explicar per escrit.</li> </ol> </li> <li> <p>Enganxa una imatge que demostri la connectivitat (o no) entre els hosts de la xarxa 10.0.0.0/8 amb els de la xarxa 192.168.1.0/24. S\u2019haurien de veure...podries explicar el motiu?</p> </li> <li>Enganxa una imatge que demostri la connectivitat (o no) entre els hosts de la xarxa 10.0.0.0/8 amb els de la xarxa 172.16.0.0/16.  No s\u2019haurien de veure.....podries explicar el motiu?</li> <li>Enganxa una imatge que demostri la connectivitat (o no) entre els hosts de la xarxa 172.16.0.0/16 amb els de la xarxa 192.168.1.0/24.  No s\u2019haurien de veure.....podries explicar el motiu?</li> </ol> <p>Part 2</p> <ol> <li>Enganxa una imatge de taula de rutes de l'encaminador \u00abRouter0\u00bb </li> <li>Enganxa una imatge de la taula de rutes de l'encaminador \u00abRouter1\u00bb</li> <li>Ara, ja hauries de poder explicar per qu\u00e8....<ol> <li>Els hosts de la xarxa 10.0.0.0/8 veuen als hosts de la xarxa 192.168.1.0/24</li> <li>Els hosts de la xarxa 10.0.0.0/8 no veuen als hosts de la xarxa 172.16.0.0/16.</li> <li>Els hosts de la xarxa 172.16.0.0/16 no veuen als hosts de la xarxa 192.168.1.0/24.</li> <li>Els \u00absobres\u00bb dels hosts de la xarxa 172.16.0.0/16. si que arriben als hosts de la xarxa 10.0.0.0/8 ....per\u00f2 no tornen. Verifica-ho en mode simulat !!!!!!</li> </ol> </li> </ol> <p>Part 3</p> <ol> <li>Per poder fer que els hosts de la xarxa 10.0.0.0/8 vegin als hosts de la xarxa 172.16.0.0/16 hi ha m\u00e9s d\u2019una soluci\u00f3. Una provoca danys col\u00b7laterals i la resta no. Implementa dues solucions, documenta-les i demostra que les has aplicat.</li> </ol> Pistes <p>SOLUCI\u00d3 1. Amb efectes col\u00b7laterals. CONDICIONS: No es pot fer servir encaminament. No pots modificar la part f\u00edsica de la xarxa. No t\u2019oblidis d\u2019explicar quin \u00e9s l\u2019efecte col\u00b7lateral.</p> <p>SOLUCI\u00d3 2. LA BONA. CONDICI\u00d3: No es pot fer servir encaminament din\u00e0mic.</p> <p>Part 4</p> <ol> <li>Els hosts de la xarxa 172.16.0.0/8 encara no veuen als hosts de la xarxa 192.168.1.0/24. Soluciona el problema per\u00f2 sense provocar danys col\u00b7laterals, \u00e9s a dir, no es pot perdre les connectivitats creades en punts anteriors !!!!!!!! No es pot fer servir encaminament din\u00e0mic.  Implementa la soluci\u00f3, documenta-la i demostra que l\u2019has aplicat.</li> </ol> <p>Part 5 </p> <ol> <li>Afegeix un servidor DHCP nom\u00e9s a la xarxa 10.0.0.0/8. Fes els canvis necessaris per a que tots els hosts de la xarxa rebin la IP del servidor.  Especifica les dades que ofereix el servidor. Enganxa una imatge de la configuraci\u00f3 del servidor i una imatge que demostri que un dels ordinadors de la xarxa t\u00e9 ip din\u00e0mica. El servidor DHCP ha de tenir el nom SRV_ELTEUNOM</li> </ol> <p>AJUDA DHCP: Fes clic </p> <p>Si necessites m\u00e9s ajuda, mira aquest v\u00eddeo:</p>"},{"location":"Moduls/ARXIU/2425/XL/practica1vlans.html","title":"Pr\u00e0ctica 1 VLANs i Packet Tracer","text":"<p>OBJECTIU DE L'ACTIVITAT</p> <p>Definir i veure les capacitats de les VLAN\u2019s utilitzant el software de Cisco Packet Tracer.</p> <p>DESENVOLUPAMENT DE L\u2019ACTIVITAT. PART 1</p> <p>Inicialment tenim la seg\u00fcent topologia de xarxa:</p> Esquema inicial <p>Realitza les seg\u00fcents accions i demostra amb una captura d\u2019imatge que has tingut \u00e8xit:</p> <ol> <li> <p>Crea la topologia de la imatge amb el Packet Tracer. ATENCI\u00d3, els hosts amb adre\u00e7a l\u00f2gica parell han d\u2019anar en un port parell del switch, i els hosts amb  adre\u00e7a l\u00f2gica senar han d\u2019anar en un port senar del switch</p> </li> <li> <p>Verifica que els diferents hosts es veuen entre ells.</p> </li> </ol> <p>DESENVOLUPAMENT DE L\u2019ACTIVITAT. PART 2</p> <p>Realitza les seg\u00fcents accions i demostra amb una captura d\u2019imatge que has tingut \u00e8xit:</p> <ol> <li>Al disseny de la xarxa realitzat amb el Packet Tracer, crea les VLAN\u2019s definides en la taula seg\u00fcent. Emplena la darrera columna amb els valors adequats.</li> </ol> id. VLAN nom hosts ports 2 ALUMNES 192.168.0.2 i 192.168.0.4 3 PROFESSORS 192.168.0.1 i 192.168.0.3 <ol> <li> <p>(  Requereix recerca per part teva   ) Especifica les ordres necess\u00e0ries per crear una de les xarxes virtuals anteriors.</p> </li> <li> <p>(  Requereix recerca per part teva   ) Especifica les ordres necess\u00e0ries per assignar un dels ports del switch a la vlan corresponent.</p> </li> <li> <p>Verifica que els hosts de la vlan 2 no veuen als hosts de la vlan 3.</p> </li> <li> <p>Dibuixa un esquema dels ports del switch on es pugui veure a quina vlan pertany cada port.</p> </li> <li> <p>Intenta modificar l\u2019identificador d\u2019una de les vlan posant-li el valor 1. Ha generat algun problema? Per qu\u00e8? Raona la resposta.</p> </li> </ol> <p>DESENVOLUPAMENT DE L\u2019ACTIVITAT. PART 3</p> <p>La vida evoluciona i amb la vida la nostra topologia de xarxa:</p> Esquema evolucionat <p>ATENCI\u00d3: els ports parells continuen sent per la VLAN 2, i els senars per la VLAN 3.</p> <p>Realitza les seg\u00fcents accions i demostra amb una captura d\u2019imatge que has tingut \u00e8xit:</p> <ol> <li> <p>Crea la topologia de la imatge. CONSELL: primer fes que funcionin els switch de forma independent i despr\u00e9s intenta solucionar la connexi\u00f3 entre switch's. Verifica que els hosts d\u2019una mateixa vlan es veuen encara que estiguin en commutadors diferents, i que al mateix temps, no veuen als hosts de l\u2019altra vlan.</p> </li> <li> <p>Explica que has de fer per aconseguir que els hosts que estan connectats al Switch0 vegin als hosts de la mateixa vlan que estan connectats al Switch1.</p> </li> <li> <p>Explica les passes que has seguit per configurar els dos commutadors  per aconseguir que els hosts que estan connectats al Switch0 vegin als hosts de la mateixa vlan que estan connectats al Switch1</p> </li> <li> <p>Dibuixa un esquema dels ports dels commutadors on es pugui veure clarament a quina vlan pertany cada port.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/XL/practica2vlans.html","title":"Pr\u00e0ctica 2 VLANs, Subnettting i Packet Tracer","text":"<p>OBJECTIU DE L'ACTIVITAT</p> <p>Verificar amb el Packet Tracer la creaci\u00f3 de subxarxes i vlan's.</p> <p>DESENVOLUPAMENT DE L\u2019ACTIVITAT</p> <ol> <li>Emplena les taules seg\u00fcents amb les dades que falten:</li> </ol> Number of needed usable subnets 5 Network Address 218.35.50.0 Address class Default subnet mask (decimal) Number of bits borrowed Custom subnet mask (decimal) Custom subnet mask (binari ) Total number of subnets Number of usable subnets Total number of host addresses Number of usable addresses <p>SUBXARXES NO UTILITZABLES</p> DADES XARXA (valors en decimal) DADES XARXA nom\u00e9s DARRER BYTE (valors en binari) N\u00fam. Xarxa IP de Xarxa IP de Broadcast IP de Xarxa IP de Broadcast 1 8 <p>RECORDA que la primera xarxa es considera inutilizable perqu\u00e8 t\u00e9 tot zeros en la part de host de l'adre\u00e7a i coincideix amb l\u2019adre\u00e7a de la xarxa subnetejada, i la darrera xarxa tamb\u00e9 es considera inutilitzable perqu\u00e8 t\u00e9 tot uns en la part de host de l'adre\u00e7a i coincideix amb l\u2019adre\u00e7a de broadcast de la xarxa subnetejada.</p> <ol> <li>SUBXARXES UTILITZABLES</li> </ol> DADES XARXA (valors en decimal) DADES XARXA nom\u00e9s DARRER BYTE (valors en binari) N\u00fam. Xarxa IP de Xarxa IP de Broadcast IP de Xarxa IP de Broadcast 2 3 4 5 6 7 <ol> <li> <p>Uilitza el Packet Tracer per crear el mapa l\u00f2gic \u00daNICAMENT amb les subxarxes UTILITZABLES de l\u2019exercici anterior. En cadascuna de les subxarxes nom\u00e9s cal posar el primer i el darrer host. Captura i enganxa una imatge amb el resultat final.</p> <p>ATENCI\u00d3: el nom dels dispositius de xarxa que utilitzis han d\u2019acabar amb \u00ab_el teu nom\u00bb</p> <p>ATENCI\u00d3: utilitza un sol switch per implementar el mapa l\u00f2gic</p> <ol> <li>Verifica que els hosts d'una mateixa subxarxa es veuen entre ells, per\u00f2 no els hosts de subxarxes diferents. Enganxa i captura una imatge que ho demostri.</li> <li>Verifica que si modifiques la ip d'un host i li assignes la ip d'una altra subxarxa, aquest host pot veure als hosts de la nova subxarxa. Enganxa i captura una imatge que ho demostri.</li> </ol> </li> <li> <p>Crea tantes vlan\u2019s com subxarxes hi ha i assigna a cada subxarxa a una vlan. Captura i enganxa una imatge del nou disseny l\u00f2gic.</p> <ol> <li>Ha canviat gaire el mapa l\u00f2gic amb i sense vlan's? Raona la resposta.</li> <li>Verifica que els hosts d'una mateixa subxarxa es veuen entre ells per\u00f2 no els hosts de subxarxes diferents. Enganxa i captura una imatge que ho demostri.</li> <li>Verifica que un cop has creat i assignat les vlan's als ports corresponents, encara que modifiquis la ip d'un host i li assignis la ip d'una altra xarxa, aquesta m\u00e0quina no pot veure els hosts de la nova xarxa assignada. Enganxa i captura una imatge que ho demostri.</li> </ol> </li> <li> <p>Especifica els identificadors i noms de les vlan's creades.</p> </li> </ol> IDENTIFICADOR VLAN NOM VLAN <ol> <li>Especifica a quina vlan pertany cada port del switch.</li> </ol> NOM SWITCH PORT SWITCH IDENTIFICADOR VLAN <ol> <li> <p>(  Requereix recerca per part teva   ) Especifica les ordres per crear una vlan en un switch CISCO suposant que est\u00e0s en \u00abmode usuari\u00bb.</p> </li> <li> <p>Captura i enganxa una imatge amb un exemple que demostri la pregunta anterior.</p> </li> <li> <p>(  Requereix recerca per part teva   ) Especifica les ordres necess\u00e0ries per assignar un port a una vlan en un switch CISCO. Suposa que est\u00e0s en \u00abmode usuari\u00bb.</p> </li> <li> <p>Captura i enganxa una imatge amb un exemple que demostri la pregunta anterior.</p> </li> </ol>"},{"location":"Moduls/ARXIU/2425/XL/vlan.html","title":"VLANs","text":"<p>Plantilles i aplicacions de Francesc Xavier Sastre Flexas</p>"},{"location":"Moduls/ARXIU/2425/XL/vlan.html#1-vlan-en-ports-access-vs-trunk","title":"1. VLAN en Ports Access vs Trunk","text":"Caracter\u00edstica Port Access Port Trunk Funci\u00f3 principal Connecta dispositius finals (PCs, impressores) Connecta switches/routers (transporta m\u00faltiples VLANs) Etiquetatge VLAN No etiqueta tr\u00e0nsit (VLAN nativa) Etiqueta tr\u00e0nsit amb 802.1Q (excepte VLAN nativa) VLANs suportades 1 VLAN (assignada manualment) M\u00faltiples VLANs (configurades al trunk) Exemple de configuraci\u00f3 (Cisco) <p><pre><code>switchport mode access\nswitchport access vlan 10\n</code></pre> | <pre><code>switchport mode trunk\nswitchport trunk allowed vlan 10,20\n</code></pre></p> <p>Cas d'\u00fas: - Access: Per a dispositius que no entenen VLANs (un PC). - Trunk: Per a enlla\u00e7os entre switches o routers (per exemple, per a inter-VLAN routing).</p>"},{"location":"Moduls/ARXIU/2425/XL/vlan.html#2-vlan-com-a-interficie-virtual-svi-amb-adreca-ip","title":"2. VLAN com a Interf\u00edcie Virtual (SVI) amb Adre\u00e7a IP","text":"Caracter\u00edstica SVI (Switch Virtual Interface) Funci\u00f3 principal Actuar com a gateway per als hosts de la VLAN (permet inter-VLAN routing) Requereix Switch de capa 3 (o router) Configuraci\u00f3 (Cisco) <pre><code>interface Vlan10\n ip address 192.168.10.1 255.255.255.0\n no shutdown\n</code></pre> <p>Cas d'\u00fas: - Permet que hosts de la VLAN 10 (connectats a ports access) es comuniquin amb altres VLANs sense necessitat d'un router f\u00edsic extern. - \u00c9s essencial per a routing intern en switches de capa 3 (per exemple, Cisco 3560).</p>"},{"location":"Moduls/ARXIU/2425/XL/vlan.html#diferencia-clau","title":"Difer\u00e8ncia Clau:","text":"<ul> <li>Ports Access/Trunk: Defineixen com es transmet el tr\u00e0nsit (sense etiquetar (untagged) vs etiquetat (tagged)).</li> <li>SVI amb IP: Actua com a punt de sortida (gateway) per al tr\u00e0nsit de la VLAN, permetent comunicaci\u00f3 entre VLANs.</li> </ul>"},{"location":"Moduls/ARXIU/2425/XL/vlan.html#exemple-practic","title":"Exemple Pr\u00e0ctic:","text":"<ol> <li>Un PC (VLAN 10) envia un paquet a un servidor (VLAN 20):<ul> <li>El paquet arriba al switch via port access (VLAN 10).</li> <li>L\u2019SVI de la VLAN 10 (192.168.10.1) reenvia el paquet a l\u2019SVI de la VLAN 20 (192.168.20.1) si hi ha routing activat.</li> <li>El paquet surt per un port trunk o access de la VLAN 20 cap al servidor.</li> </ul> </li> </ol>"},{"location":"Moduls/CECNC/UT01.html","title":"UT01.- Punts principals sobre el compliment normatiu","text":"<p>Al llarg d'aquesta unitat desenvoluparan una s\u00e8rie de conceptes sobre el compliment normatiu de l'objectiu de:</p> <ol> <li>Identificar les bases del compliment regulador a tenir en compte a les organitzacions.</li> <li>Con\u00e8ixer els principis del bon govern i la seva relaci\u00f3 amb l\u2019\u00e8tica professional.</li> <li>Construir un conjunt de pol\u00edtiques i procediments, aix\u00ed com una estructura organitzativa que estableixi la cultura de compliment normatiu dins de les organitzacions.</li> <li>Descriure les funcions i compet\u00e8ncies del responsable de compliment normatiu.</li> <li>Establir les relacions amb tercers per a un correcte compliment normatiu.</li> </ol> <p>Aquesta unitat est\u00e0 enfocada en elements introductoris, per la qual cosa es desenvoluparan, en concret, els continguts seg\u00fcents:</p> <ol> <li>Introducci\u00f3 al compliment normatiu (Compliance: objectiu, definici\u00f3 i conceptes principals).</li> <li>Principis del bon govern i \u00e8tica empresarial.</li> <li>Compliance Officer: funcions i responsabilitats.</li> <li>Relacions amb terceres parts dins del Compliance.</li> </ol>"},{"location":"Moduls/CECNC/UT01.html#1-introduccio-al-compliment-normatiu","title":"1 - Introducci\u00f3 al compliment normatiu","text":""},{"location":"Moduls/CECNC/UT01.html#definicio-objectiu-i-funcio-del-compliment-normatiu","title":"Definici\u00f3, objectiu i funci\u00f3 del compliment normatiu.","text":"<p>El compliment consisteix a establir una s\u00e8rie de processos en una organitzaci\u00f3, que, acompanyats d'un conjunt de pol\u00edtiques i procediments aconsegueixin assegurar que es respectin tots els requeriments legals, normatius i compromisos interns i amb tercers que siguin d'aplicaci\u00f3 a l'organitzaci\u00f3.</p> <p>El principal objectiu del compliment -tamb\u00e9 denominat compliance- \u00e9s, en definitiva, el de garantir que una organitzaci\u00f3 compleix amb les seves obligacions adquirides com a conseq\u00fc\u00e8ncia del funcionament del seu negoci..</p> <p>La funci\u00f3 de compliance implica l'adopci\u00f3 dins de l'organitzaci\u00f3 de diferents components que suporten la seva funci\u00f3, com ara:</p> <ul> <li>Un codi \u00e8tic, com un conjunt de principis i pautes de conducta que conformen la cultura organitzacional d'una empresa.</li> <li>Un conjunt de bones pr\u00e0ctiques, que, essent ja adoptades i provades d'ocasionar beneficis en organitzacions, estan demostrades i reconegudes per proporcionar beneficis en organitzacions similars.</li> <li>Una identificaci\u00f3 de compromisos a dividir en: legals, normatius, contractuals, organitzacionals.</li> <li>L'exist\u00e8ncia d'un responsable de compliment, encarregat d'assegurar que es respectin, les normes, lleis, i en general, compromisos adquirits per l'organitzaci\u00f3, i, que supervisi el bon funcionament del sistema de gesti\u00f3 de compliment.</li> <li>L'exist\u00e8ncia d'un canal de den\u00fancies, per articular la comunicaci\u00f3 an\u00f2nima de qualsevol tipus de violaci\u00f3 de les normes existents.</li> <li>Activitats de formaci\u00f3 per conscienciar l'organitzaci\u00f3 sobre els deures i obligacions sobre el compliment i per a la creaci\u00f3 d'una cultura organitzacional de compliment.</li> <li>L'exist\u00e8ncia d'un sistema de gesti\u00f3 de compliment, per operar i assegurar la millora cont\u00ednua del proc\u00e9s de compliment.</li> </ul> <p>Com s'ha comentat, el compliment normatiu implica el disseny d'una s\u00e8rie de pol\u00edtiques, processos i procediments que s'hauran de respectar durant el funcionament del negoci per impedir actuacions delictives i sancions per infringir la llei, no obstant aix\u00f2, no s'ha de limitar \u00fanicament a les lleis aplicables, sin\u00f3 que ha de tenir en compte diferents elements com pol\u00edtiques internes,  compromisos contractuals amb clients, prove\u00efdors o tercers, a m\u00e9s, tamb\u00e9 ha de comptar amb un enfocament \u00e8tic, ja que el funcionament negoci d'acord amb la legislaci\u00f3 no sempre \u00e9s d'acord amb un codi \u00e8tic.</p>"},{"location":"Moduls/CECNC/UT01.html#compromisos-de-les-organitzacions","title":"Compromisos de les organitzacions","text":"<p>Els compromisos adquirits per una organitzaci\u00f3, es poden classificar en dues categories diferents, d\u2019una banda, aquells que poden ser d\u2019obligat compliment, com pot ser la legislaci\u00f3 vigent, sent\u00e8ncies d\u2019un tribunal o un jutge, o imposicions sota contracte amb un tercer. D\u2019altra banda, es podria definir una categoria de compromisos voluntaris que l\u2019empresa decideix assumir, com ara codis \u00e8tics, est\u00e0ndards, normatives o bones pr\u00e0ctiques.</p> <p>A continuaci\u00f3, es presenten alguns dels compromisos possibles que poden ser adquirits per una organitzaci\u00f3:</p> <p>Compromisos d\u2019obligat compliment:</p> <p>En aquest tipus de compromisos implica un alt nivell de risc m\u00e9s elevat per a la companyia, ja que en cas d'incompliment, poden existir sancions econ\u00f2miques i penals, es podrien posar en risc contractes signats amb clients, amb la conseg\u00fcent p\u00e8rdua de negoci, aix\u00ed com ocasionar p\u00e8rdues en la imatge i reputaci\u00f3 de la companyia.</p> <p>Legislaci\u00f3 vigent:</p> <p>Qualsevol empresa est\u00e0 sotmesa a una legislaci\u00f3 pel sol fet de mantenir la seva funci\u00f3. El compliment legislatiu est\u00e0 tamb\u00e9 associat a un dels principals riscos als quals es veu sotm\u00e8s una organitzaci\u00f3, el risc penal, financer i reputacional. Aquest haur\u00e0 de ser tingut en compte a l\u2019hora d\u2019identificar, analitzar i gestionar els riscos dins del pla de gesti\u00f3 de compliment.</p> <p>Qualsevol empresa que tingui la seva activitat a Espanya ha de respectar, per exemple, les lleis seg\u00fcents:</p> <ul> <li>Llei de Societats de Capital: \u00e9s la llei que regula les societats a Espanya. Totes les persones que cre\u00efn una societat empresa han de con\u00e8ixer que drets i obligacions tenen com a socis i administradors, i les conseq\u00fc\u00e8ncies sobre el seu propi patrimoni podria tenir el no actuar d\u2019acord amb la legislaci\u00f3.</li> <li>Llei d\u2019impost de societats: \u00e9s la legislaci\u00f3 sobre la tributaci\u00f3 de les activitats econ\u00f2miques d\u2019una societat. Regula els impostos sobre els rendiments de negoci i les deduccions, bonificacions i tipus impositius, una cosa similar a l\u2019IRPF, per\u00f2 per a empreses.</li> <li>Llei de l'Impost sobre el Valor Afegit: es tracta de la llei que regula els impostos sobre els productes i serveis que presta l'empresa cap al consumidor final, aquesta llei estableix que, com a prove\u00efdora i consumidora de productes i serveis, una organitzaci\u00f3 ha de suportar i repercutir l'Impost de Valor Afegit (IVA), en cas que l'IVA repercutit sigui m\u00e9s gran que el suportat,  l\u2019empresari ha de pagar a hisenda la difer\u00e8ncia en concepte d\u2019IVA.</li> <li>Llei de marques: \u00e9s la legislaci\u00f3 per a la protecci\u00f3 dels elements distintius d\u2019una empresa, a trav\u00e9s d\u2019ella es regiran els drets sobre les marques i els noms comercials de productes i serveis d\u2019una empresa espanyola. La sol\u00b7licitud i tramitaci\u00f3 de les marques a Espanya, es realitza a trav\u00e9s de l'Oficina Espanyola de Patents i Marques, i han d'especificar les tipologies de productes i serveis que es vol identificar. Aquestes, poden ser renovades de manera indefinida o per per\u00edodes de deu anys.</li> <li>Llei de Serveis de la Societat de la Informaci\u00f3 i de comer\u00e7 electr\u00f2nic (LSSI-CE): Es tracta de la llei que regula les activitats comercials realitzades a trav\u00e9s d'internet. Principalment defineix els requisits que han de complir els llocs web de comer\u00e7 electr\u00f2nic de totes aquelles empreses registrades a Espanya. En ella, s'estableix que en els llocs de comer\u00e7 electr\u00f2nic ha de constar el nom del domini d'Internet, oferir informaci\u00f3 sobre l'empresa, col\u00b7laborar amb les autoritats i retenir les dades concernents a comunicacions electr\u00f2niques.</li> <li>Reglament General de Protecci\u00f3 de Dades (RGPD): Estableix les normes relatives a la protecci\u00f3 de les persones f\u00edsiques pel que fa al tractament de les dades personals i les normes relatives a la lliure circulaci\u00f3 d'aquestes dades. A m\u00e9s, protegeix els drets i llibertats fonamentals de les persones f\u00edsiques i, en particular, el seu dret a la protecci\u00f3 de les dades personals. Finalment, regula la lliure circulaci\u00f3 de les dades personals a la Uni\u00f3, que no podr\u00e0 ser restringida ni prohibida per motius relacionats amb la protecci\u00f3 de les persones f\u00edsiques pel que fa al tractament de dades personals.</li> <li>Llei Org\u00e0nica de Protecci\u00f3 de Dades i Garantia dels Drets Digitals (LOPD): \u00c9s l'adaptaci\u00f3 a la normativa local espanyola al Reglament Europeu de Protecci\u00f3 de Dades (RGPD), l'objectiu d'aquesta llei \u00e9s proporcionar una base legal per al tractament de les dades personals de les persones f\u00edsiques, a m\u00e9s, en la normativa nacional s'inclouen articles enfocats en la garantia dels drets digitals com ara la desconnexi\u00f3 digital,  dret a l\u2019oblit, seguretat digital, protecci\u00f3 de menors.</li> </ul> <p>Obligacions per manament judicial, tribunals o sent\u00e8ncies judicials:</p> <p>En aquest tipus d\u2019obligacions, implica una acci\u00f3 per part de l\u2019organitzaci\u00f3 que els rep, aquestes accions podrien ser, des de la proporci\u00f3 de certa informaci\u00f3 a un judgat o a forces i cossos de seguretat de l\u2019estat, fins al pagament de multes o sancions, fins i tot la modificaci\u00f3 del seu model de negoci, fins al punt de la rescissi\u00f3 de les llic\u00e8ncies que permeten executar l\u2019activitat de l\u2019organitzaci\u00f3. Aquest tipus d\u2019obligacions poden implicar grans riscos per a les organitzacions i han de ser tingudes en compte en el moment de construir els sistemes de gesti\u00f3 de compliment.</p> <p>Obligacions per contracte de tercers:</p> <p>En ocasions, les organitzacions es comprometen en el compliment de certes normes com a forma de garantir els seus serveis, en general es tracta de condicions que podrien classificar-se com a compromisos voluntaris, per\u00f2, en ser incloses en els contractes de prestaci\u00f3 de serveis, esdevenen compromisos d\u2019obligat compliment.</p> <p>Una mostra d\u2019aquest tipus d\u2019obligacions poden ser els compromisos contractuals de certificaci\u00f3 en normes ISO, com pot ser la 9001 sobre sistemes de gesti\u00f3 de la qualitat, 14001 sobre sistemes de gesti\u00f3 ambiental, 20001 sobre gesti\u00f3 de serveis de TI, i ISO 27001 sobre sistemes de gesti\u00f3 de seguretat de la informaci\u00f3.</p> <p>Compromisos voluntaris:</p> <p>Els compromisos voluntaris tenen un menor nivell de risc quant a les conseq\u00fc\u00e8ncies directes derivades del seu incompliment, ja que en el curt termini aquestes seran molt lleus i podrien limitar-se a danys reputacionals, no obstant aix\u00f2, aquest tipus compromisos signifiquen un millor funcionament per a l\u2019organitzaci\u00f3, podent implicar en funci\u00f3 dels esfor\u00e7os realitzats, un funcionament m\u00e9s eficient,  segur i respectu\u00f3s amb la societat i medi ambient. Aquests poden ser:</p> <ul> <li> <p>Pol\u00edtiques i procediments:</p> <p> </p> <p>Les pol\u00edtiques i procediments integren les normes, regles i directrius a trav\u00e9s de les quals s\u2019ha de regir una organitzaci\u00f3.</p> <p>Les pol\u00edtiques han de ser espec\u00edfiques per a cada organitzaci\u00f3 i establir-ne els principis i el mode de comportament. Aquests documents, s\u00f3n en general escrits en llenguatge d\u2019alt nivell sense incloure detalls t\u00e8cnics ja que s\u00f3n directrius, estrat\u00e8gics. Les pol\u00edtiques d'una organitzaci\u00f3 tenen diversos objectius, principalment ajuden a aconseguir els objectius estrat\u00e8gics d'una organitzaci\u00f3, estalviar temps i costos en la presa de decisions rutin\u00e0ries, implementar sistemes normatius de gesti\u00f3 empresarial (qualitat, medi ambient, seguretat de la informaci\u00f3), redueixen els riscos empresarials i ajuden a millorar el control directiu, administratiu i operatiu de la companyia.</p> <p>Si b\u00e9 les pol\u00edtiques s\u00f3n documents estrat\u00e8gics, els procediments, s\u00f3n els documents que defineixen les t\u00e0ctiques a trav\u00e9s de les quals s'aconseguiran els objectius de la companyia. En general s\u00f3n documents amb un nivell de detall m\u00e9s elevat, que descriuen una manera d\u2019executar una activitat o un proc\u00e9s dins de l\u2019empresa.  El procediment pot descriure un proc\u00e9s empresarial complet, descrivint pas a pas les activitats que el comprenen.</p> </li> <li> <p>Normes i est\u00e0ndards:</p> <p>Una norma \u00e9s una forma comunament acceptada de dur a terme una activitat.  En general, pot tractar-se de qualsevol proc\u00e9s empresarial, no obstant aix\u00f2, en relaci\u00f3 amb tecnologies d\u2019informaci\u00f3, es poden definir com a formes de gestionar els sistemes i tecnologies d\u2019informaci\u00f3 i comunicacions d\u2019una organitzaci\u00f3.</p> <p>L'exemple m\u00e9s conegut s\u00f3n les ISO (International Organization for Standardization), que, encara que no estiguin limitades a la gesti\u00f3 de processos d'IT si s\u00f3n les m\u00e9s generalitzades, per exemple, la norma ISO 20000 de gesti\u00f3 de serveis TI, la ISO 27001 de gesti\u00f3 de seguretat de la informaci\u00f3 o la ISO 22301 sobre continu\u00eftat de negoci. A Espanya, la transposici\u00f3 a aquests est\u00e0ndards s\u00f3n les normes UNE ( Una Norma Espanyola), publicades per l'Associaci\u00f3 Espanyola per a la NORmalitzaci\u00f3 i Certificaci\u00f3 (AENOR).</p> </li> <li> <p>Bones Pr\u00e0ctiques i Millors pr\u00e0ctiques:</p> <p>Les bones pr\u00e0ctiques s\u00f3n accions recomanades per dur a terme una activitat que han resultat satisfact\u00f2ries per a l\u2019organitzaci\u00f3, aquestes activitats, han de ser documentades per tal de crear guies, procediments, directrius o manuals d\u2019execuci\u00f3 d\u2019un proc\u00e9s.</p> <p>Les millors pr\u00e0ctiques s\u00f3n accions, que, si b\u00e9 han demostrat ser satisfact\u00f2ries per a l\u2019organitzaci\u00f3, han estat monitoritzades i optimitzades per obtenir els millors resultats en execuci\u00f3 i efici\u00e8ncia en els objectius d\u2019una organitzaci\u00f3. Les millors pr\u00e0ctiques s\u00f3n fruit de l\u2019an\u00e0lisi i aplicaci\u00f3 de coneixements i processos empresarials dels resultats obtinguts dels mateixos, del que s\u2019ha identificat \u00e9s benefici\u00f3s per a l\u2019organitzaci\u00f3, de les lli\u00e7ons apreses despr\u00e9s d\u2019incid\u00e8ncies, i en definitiva despr\u00e9s de la reflexi\u00f3 sobre resultats i aprenentatge continu.</p> </li> <li> <p>Marcs de treball o Frameworks:</p> <p>Els marcs de treball s\u2019enfoquen en el com implementar una s\u00e8rie de processos en una organitzaci\u00f3, aquests poden ser constru\u00efts basant-se en normes existents, per\u00f2 desenvolupant un conjunt de processos i bones pr\u00e0ctiques que marquen els passos per desenvolupar certes funcions dins d\u2019una companyia. Establint t\u00e8cniques estandarditzades d\u2019operaci\u00f3 incrementant el valor i l\u2019efici\u00e8ncia dels processos TI i per tant, del negoci. Exemple de marcs de treball s\u00f3n:</p> <ul> <li>ITIL: Acr\u00f2nim en angl\u00e8s de \"Biblioteca d'Infraestructura per a les Tecnologies de la Informaci\u00f3\", consisteix en una s\u00e8rie de llibres que recullen els processos i bones pr\u00e0ctiques per a la gesti\u00f3 de les tecnologies d'informaci\u00f3 obtingudes de diverses fonts. L'\u00faltima versi\u00f3 d'ITIL (v4) publicada el 2019, s'enfoca en l'automatitzaci\u00f3 de serveis IT, la gesti\u00f3 dels serveis, i la integraci\u00f3 de les \u00e0rees d'IT en el negoci de l'organitzaci\u00f3.</li> <li> <p>Objectius de Control per a Tecnologies de la Informaci\u00f3 i Relacionades (COBIT, per les seves sigles en angl\u00e8s): \u00c9s un marc desenvolupat per ISACA l'objectiu de desenvolupar estrat\u00e8gies de gesti\u00f3 i govern de la informaci\u00f3 i a m\u00e9s inclou eines per construir, supervisar i millorar processos IT despr\u00e9s de la seva implementaci\u00f3 i proveir de solucions per a la gesti\u00f3 de riscos.  Cobit inclou 40 objectius de gesti\u00f3 per ajudar les organitzacions, per aconseguir els seg\u00fcents objectius:</p> </li> <li> <p>Alinear els objectius empresarials amb els objectius inform\u00e0tics</p> </li> <li>Establir un marc de governan\u00e7a s\u00f2lid</li> <li>Navegar pel govern de la informaci\u00f3, la gesti\u00f3 de riscos i la seguretat</li> </ul> </li> <li> <p>Codi \u00e8tic:</p> <p>El codi \u00e8tic \u00e9s el conjunt de valors, principis i pautes a trav\u00e9s de les quals s\u2019ha de regir la cultura d\u2019una organitzaci\u00f3. Associat al codi \u00e8tic de l\u2019organitzaci\u00f3, podem trobar el codi de conducta, en el qual s\u2019establiran les directrius comportamentals que han de regir la manera d\u2019actuar dels professionals que componen l\u2019organitzaci\u00f3.</p> <p>Sota l\u2019\u00e0mbit del codi \u00e8tic de l\u2019empresa, es poden establir elements com les relacions entre persones, la discriminaci\u00f3, el medi ambient, el suborn i l\u2019\u00fas d\u2019informaci\u00f3 privilegiada i la responsabilitat social corporativa. El codi \u00e8tic permet prendre decisions als integrants de l\u2019organitzaci\u00f3 en relaci\u00f3 a la realitzaci\u00f3 del seu treball i en les seves relacions amb altres persones i organitzacions, establint quin ha de ser el seu comportament m\u00e9s apropiat.</p> <p>El codi \u00e8tic va m\u00e9s enll\u00e0 de la legislaci\u00f3 i dels compromisos obligatoris d\u2019una organitzaci\u00f3. Les activitats d\u2019una empresa poden ser considerades legals, i tanmateix, aquestes mateixes activitats, poden de dubtosa eticitat.  Per exemple: \u00c9s legal que un esportista que participa en un torneig pugui cobrar una comissi\u00f3 per l\u2019organitzaci\u00f3 d\u2019aquest torneig en un pa\u00eds estranger, per\u00f2, no \u00e9s \u00e8tic el cobrament d\u2019aquesta comissi\u00f3 degut principalment a: 1) la participaci\u00f3 de l\u2019esportista en la competici\u00f3 que ha ajudat a organitzar, 2) dur a terme una acci\u00f3 que t\u00e9 impacte sobre un o diversos grups per aconseguir un benefici individual o de molt pocs individus, 3) cobrar una comissi\u00f3 elevada, 4) el greuge comparatiu en la remuneraci\u00f3 de la resta d\u2019esportistes, 5) l\u2019impacte que pot ocasionar en costos log\u00edstics per a la resta d\u2019esportistes i clubs que formen part de la competici\u00f3, 6) el cost mediambiental que implica traslladar una competici\u00f3 a un altre pa\u00eds a diversos milers de quil\u00f2metres de dist\u00e0ncia.</p> </li> </ul>"},{"location":"Moduls/CECNC/UT01.html#principi-del-bon-govern-i-etica-empresarial","title":"Principi del bon govern i \u00e8tica empresarial","text":""},{"location":"Moduls/CECNC/UT01.html#el-bon-govern-corporatiu","title":"El bon govern corporatiu","text":"Image by  Mariakray from Pixabay <p>El govern corporatiu t\u00e9 a veure amb la presa de decisions per part de la direcci\u00f3 de l'empresa i de la seva estrat\u00e8gia corporativa.</p> <p>Per obtenir suport a aquest tipus de decisions, s\u2019estableixen processos de bon govern corporatiu que consisteixen en el conjunt de regles, processos i principis utilitzats pels consells de govern de les empreses per prendre decisions que afectin l\u2019empresa i la seva relaci\u00f3 amb tots els actors involucrats i parts interessades.</p> <p>Les decisions preses per les empreses de gran grand\u00e0ria poden tenir una gran repercussi\u00f3 en la societat, per aquest motiu conv\u00e9 tenir unes normes i pautes d\u2019actuaci\u00f3 que ajudin a prendre decisions en les organitzacions, i especialment pel que fa a elements com estrat\u00e8gia de la companyia i inversions, per\u00f2 tamb\u00e9 en altres elements com fusions i adquisicions.</p> <p>Els processos de bon govern corporatiu tenen com a objectiu principal millorar la credibilitat de les organitzacions introduint elements que garanteixin la veracitat, transpar\u00e8ncia i responsabilitat social corporativa en les decisions de gesti\u00f3 empresarial preses per les c\u00fapules directives.</p> <p>Dins d\u2019aquestes pautes, hi ha l\u2019exist\u00e8ncia d\u2019eines de control corporatiu, que siguin utilitzades per mesurar les decisions de l\u2019organitzaci\u00f3 des del punt de vista econ\u00f2mic, social o estrat\u00e8gic.</p> <p>Un altre element del bon govern implica el concepte de compliment normatiu, i com a conseq\u00fc\u00e8ncia, el compliment de la llei vigent i la reducci\u00f3 del risc de qualsevol conseq\u00fc\u00e8ncia penal o econ\u00f2mica per a la companyia i la seva direcci\u00f3.</p> <p>Aix\u00ed mateix, un altre objectiu consisteix a vigilar i controlar els comportaments de la companyia, de les \u00e0rees de negoci i dels seus integrants, establint drets i obligacions de les mateixes i vigilant el seu compliment.</p> <p>Les activitats relacionades amb el bon govern corporatiu poden ser interpretades pel mercat com un avantatge competitiu, per aix\u00f2, s\u00f3n utilitzades com una m\u00e8trica de situaci\u00f3 respecte a la compet\u00e8ncia, i una manera de dur a terme accions de millora que principalment estaran relacionades amb els majors beneficis generats pel bon govern, com l\u2019augment de la confian\u00e7a del mercat,  la millora dels processos interns de la companyia i la garantia de funcionament dins dels marges de la llei, com a exemple, un dels elements que m\u00e9s es realitza dins de les pol\u00edtiques de bon govern corporatiu s\u00f3n la prevenci\u00f3 de delictes fiscals i blanqueig de capitals, existint-ne d'altres m\u00e9s relacionats amb l'estricte compliment normatiu m\u00e9s enfocats a la prevenci\u00f3 del finan\u00e7ament del terrorisme.</p> <p>Durant els \u00faltims anys, totes les companyies s'han vist immerses d'alguna o altra forma en processos de digitalitzaci\u00f3. L\u2019\u00fas d\u2019eines digitals, de tecnologies de comunicaci\u00f3 i d\u2019obertura a internet, comporta inevitablement un augment dels riscos de les organitzacions.  Per aix\u00f2, i cada vegada m\u00e9s, les organitzacions centren els seus esfor\u00e7os en el control dels seus sistemes d\u2019informaci\u00f3, i per tant la protecci\u00f3 de la seva infraestructura tecnol\u00f2gica contra ciberincidents que puguin tenir impacte en la confidencialitat, integritat i disponibilitat de la seva informaci\u00f3 i per tant en els seus processos de negoci.</p> <p>En l'actualitat, una de les normatives amb major impacte per a les empreses \u00e9s la Llei Org\u00e0nica de Protecci\u00f3 de Dades nacional (LOPD), i a nivell europeu la Regulaci\u00f3 General de Protecci\u00f3 de Dades (RGPD), la finalitat principal de la qual \u00e9s augmentar el control de les companyies respecte a la informaci\u00f3 que manegen, i en especial el de les dades dels seus clients.</p> <p>El bon govern corporatiu t\u00e9 part tamb\u00e9 en elements m\u00e9s relacionats amb l\u2019\u00e8tica i no tant amb les limitacions legals o normatives, com poden ser les retribucions dels seus consellers. Les empreses cotitzades han de realitzar un informe de retribuci\u00f3 dels seus consellers amb car\u00e0cter anual. Aquesta retribuci\u00f3 ha de ser sotmesa a votaci\u00f3 i aprovada en junta d\u2019accionistes per evitar que els comit\u00e8s de direcci\u00f3 de les companyies tinguin retribucions allunyades de la realitat del mercat i a m\u00e9s garantir la transpar\u00e8ncia en encabir els seus clients i actors relacionats.</p> <p>Com a part de les activitats relacionades amb el bon govern corporatiu, s\u2019ha de realitzar un informe anual d\u2019avaluaci\u00f3 de compliment d\u2019objectius, la finalitat d\u2019aquest proc\u00e9s \u00e9s establir un pla de compliment, mesurant les accions realitzades i establint plans d\u2019acci\u00f3 correctiva en cas necessari, l\u2019informe cobreix de manera anual les activitats d\u2019un proc\u00e9s de revisi\u00f3,  com s\u00f3n:</p> <ul> <li> <p>Disseny:</p> </li> <li> <p>An\u00e0lisi del negoci i aspectes que cal avaluar.</p> </li> <li> <p>Avaluaci\u00f3:</p> </li> <li> <p>Q\u00fcestionari d\u2019avaluaci\u00f3.</p> </li> <li>An\u00e0lisi de la documentaci\u00f3 interna i externa de l\u2019organitzaci\u00f3.</li> <li>Entrevistes amb la direcci\u00f3.</li> <li> <p>Diagn\u00f2stic:</p> </li> <li> <p>Conclusions i recomanacions.</p> </li> <li> <p>Resposta:</p> </li> <li> <p>Pla d\u2019accions correctives.</p> </li> </ul> <p>El bon govern corporatiu est\u00e0 \u00edntimament relacionat amb el compliment normatiu at\u00e8s que un dels principals elements que ha de tenir en compte el bon govern, t\u00e9 a veure amb la bona execuci\u00f3 d\u2019un proc\u00e9s de compliment normatiu. Aquesta relaci\u00f3 es fa cada vegada m\u00e9s necess\u00e0ria a partir de l\u2019any 2010 en el qual, el codi penal recull responsabilitats penals per a persones jur\u00eddiques. A m\u00e9s, la llei de societats de capital, tamb\u00e9 requereix des d'aquest mateix any la introducci\u00f3 de pol\u00edtiques de bon govern corporatiu tant a companyies cotitzades com a companyies que no ho estan.</p> <p>Precisament, hi ha diverses funcions que tenen a veure tant amb el bon govern corporatiu com amb el compliment normatiu, entre elles:</p> <ul> <li>L\u2019aprovaci\u00f3 dels plans estrat\u00e8gics, plans de negoci, pressupostos corporatius, i la pol\u00edtica de responsabilitat social corporativa, entre d\u2019altres.</li> <li>Definici\u00f3 de pol\u00edtiques de gesti\u00f3 de riscos que cobreixin a m\u00e9s dels riscos del propi negoci, aquells relacionats amb l\u2019incompliment legal, fiscal, i sancions penals.</li> <li>Establiment dels governs corporatius, i funcions relacionades amb la presa de decisions sobre</li> <li>Definici\u00f3 de codis \u00e8tics, pol\u00edtiques de transpar\u00e8ncia i de compliment legal que donin suport a la presa de decisions.</li> <li>Presa de decisions relacionades amb els sistemes de gesti\u00f3 de compliance.</li> </ul> <p>Elements amb els quals ha de comptar una pol\u00edtica de bon govern corporatiu:</p> <ul> <li> <p>Cultura, valors i principis de l\u2019organitzaci\u00f3.</p> </li> <li> <p>Exist\u00e8ncia de missi\u00f3 i visi\u00f3 de l\u2019organitzaci\u00f3.</p> </li> <li>Exist\u00e8ncia d\u2019un codi de conducta.</li> <li>Canal de den\u00fancies obert i an\u00f2nim.</li> <li>R\u00e8gim sancionador davant d\u2019incompliments del codi de conducta.</li> <li>Principis \u00e8tics de comportaments i presa de decisions.</li> <li> <p>Supervisi\u00f3 de l\u2019entorn de control de l\u2019organitzaci\u00f3.</p> </li> <li> <p>Definici\u00f3 dels equips de supervisi\u00f3 del sistema de control intern (auditoria interna, reportant directament al comit\u00e8 de direcci\u00f3).</p> </li> <li>Exist\u00e8ncia de consellers externs i independents.</li> <li>Independ\u00e8ncia dels consellers en funci\u00f3 amb rols o negocis previs.</li> <li>Formaci\u00f3 dels consellers en pol\u00edtiques de control intern i gesti\u00f3 de riscos.</li> <li>Estructura organitzativa de l\u2019empresa:</li> <li>Exist\u00e8ncia d\u2019un organigrama amb el detall de l\u00ednies de negoci, funcionals, geogr\u00e0fiques, auxiliars i divisions per entitats legals.</li> <li>Definici\u00f3 de rols i responsabilitats per a cada funci\u00f3.</li> <li>Segregaci\u00f3 de rols i responsabilitats.</li> <li>Report coherent a l\u2019estructura organitzativa.</li> <li>Pol\u00edtiques i procediments de recursos humans:</li> <li>Procediments d\u2019altes i baixes d\u2019empleats i documentaci\u00f3 de formaci\u00f3 per a les noves incorporacions que introdueixi la cultura corporativa de l\u2019organitzaci\u00f3.</li> <li>Establiment de programes formatius, d\u2019avaluaci\u00f3 d\u2019acompliment, remuneraci\u00f3 i pol\u00edtiques sancionadores.</li> <li>Definici\u00f3 de programes de mesurament d\u2019acompliment i alineament amb els objectius de l\u2019organitzaci\u00f3.</li> <li>Identificaci\u00f3 les funcions cr\u00edtiques de l\u2019organitzaci\u00f3.</li> <li>Exist\u00e8ncia d\u2019un pla de successi\u00f3 per a les funcions cr\u00edtiques.</li> <li>Definici\u00f3 de plans formatius que cobreixin els aspectes sense successi\u00f3 en funcions cr\u00edtiques.</li> <li>Models d\u2019assignaci\u00f3 d\u2019autoritat i responsabilitat per a la presa de decisions.</li> <li>Exist\u00e8ncia d\u2019un model formal d\u2019assignaci\u00f3 d\u2019autoritat segons objectius de l\u2019organitzaci\u00f3.</li> <li>Definici\u00f3 de protocols d\u2019assignaci\u00f3 d\u2019autoritzar en funci\u00f3 de la criticitat de la decisi\u00f3 a prendre.</li> <li>Definici\u00f3 de procediment de revisi\u00f3 peri\u00f2dica del model de decisi\u00f3 en funci\u00f3 de canvis en l\u2019organitzaci\u00f3 i la inclusi\u00f3 de noves casu\u00edstiques a integrar.</li> <li>Exist\u00e8ncia de processos de validaci\u00f3 per part d\u2019auditoria interna.</li> <li>Sistemes de gesti\u00f3 del canvi.</li> <li>Definici\u00f3 de processos d\u2019estrat\u00e8gia empresarial a mitj\u00e0 i llarg termini.</li> <li>Establiment de recursos i eines per al monitoratge del canvi i les seves conseq\u00fc\u00e8ncies.</li> <li>Exist\u00e8ncia de processos de monitoratge de factors externs (legislaci\u00f3, compet\u00e8ncia, mercat, economia, geopol\u00edtica) i an\u00e0lisi dels impactes en el negoci per a establiment de processos d'innovaci\u00f3.</li> <li>Revisi\u00f3 de canvis en l\u2019organitzaci\u00f3 i les funcions clau en l\u2019organitzaci\u00f3.</li> <li>Exist\u00e8ncia de pol\u00edtiques de gesti\u00f3 de riscos i de continu\u00eftat de negoci davant de canvis.</li> </ul>"},{"location":"Moduls/CECNC/UT01.html#principis-de-letica-empresarial","title":"Principis de l\u2019\u00e8tica empresarial","text":"<p>L\u2019\u00e8tica empresarial \u00e9s el codi que segueix una organitzaci\u00f3 a l\u2019hora de realitzar la seva activitat, prendre decisions, gestiona els seus recursos humans i desenvolupar-se en una comunitat. Defineix els l\u00edmits que una empresa decideix posar-se, directrius a seguir, metes a assolir a nivell social i mediambiental, essent aquests generalment m\u00e9s restrictius que les normes i lleis.  Tot aquest conjunt d\u2019elements conforma una s\u00e8rie de valors i principis que alhora constitueixen la cultura de l\u2019empresa.</p> <p>Aix\u00ed mateix, l\u2019\u00e8tica empresarial regeix la manera com l\u2019organitzaci\u00f3 es relaciona amb els seus clients, prove\u00efdors, i treballadors amb l\u2019objectiu d\u2019exercir un impacte positiu en la societat.</p> <p>L'\u00e8tica empresarial \u00e9s una manera d'atraure talent i generar un ambient laboral benefici\u00f3s per als empleats de l'organitzaci\u00f3, a m\u00e9s, generar\u00e0 m\u00e9s confian\u00e7a tant en clients com en inversors, la qual cosa indirectament repercutir\u00e0 en un augment de la rendibilitat. Aquest tipus d\u2019activitats genera atracci\u00f3 cap a les empreses d\u2019un major volum i qualificaci\u00f3 de professionals que volen cr\u00e9ixer en organitzacions en les quals confien i que compten en projectes en els quals creuen.</p> <p>Tot i que els objectius de les organitzacions poden ser diferents, l\u2019\u00e8tica gira entorn d\u2019aspectes que en general tenen a veure amb la millora de l\u2019entorn i clima laboral, promoure la igualtat, el respecte als drets, etc.</p> <p>Aquest tipus d\u2019activitats no nom\u00e9s es limiten a destinar part del pressupost anual a una iniciativa espec\u00edfica, sin\u00f3 que tamb\u00e9 suposen una s\u00e8rie d\u2019actuacions en les quals l\u2019organitzaci\u00f3 pot millorar en aspectes no directament relacionats amb el negoci, per exemple, en diversitat en el lloc de treball, en reciclatge, conciliaci\u00f3, etc...</p> <p>Les iniciatives relacionades amb \u00e8tica empresarial poden tenir multitud d\u2019objectius, no obstant aix\u00f2, els seg\u00fcents es plantegen com els m\u00e9s rellevants, o freq\u00fcents:</p> <ul> <li>Respecte al medi ambient. Totes les empreses tenen d\u2019alguna manera o altra un impacte mediambiental a causa del consum energ\u00e8tic, emissions o producci\u00f3 de deixalles, per aix\u00f2, la majoria de les organitzacions tracten d\u2019optimitzar els seus models de producci\u00f3 per reduir els seus impactes mediambientals, per exemple, fent m\u00e9s eficient el seu consum energ\u00e8tic o utilitzant energies renovables.</li> <li>Responsabilitat social corporativa. Consisteix en iniciatives que tindran impacte actual o futur en la societat, es tracta de dur a terme accions que millorin les condicions de vida de les zones en les quals treballa l\u2019organitzaci\u00f3, impulsant iniciatives que afavoreixin el creixement de la comunitat. Tamb\u00e9 fa refer\u00e8ncia a iniciatives que solucionin problemes existents en la societat que no tenen necess\u00e0riament a veure amb el producte o servei que presta la companyia.</li> <li>Compet\u00e8ncia deslleial. L\u2019\u00e8tica empresarial tamb\u00e9 t\u00e9 en compte iniciatives que evitin la compet\u00e8ncia deslleial entre organitzacions, com pot ser, la venda per sota de cost, la comparaci\u00f3, les comunicacions agressives, la cr\u00edtica o la desinformaci\u00f3.</li> <li>Tot i que aquest \u00e9s un aspecte directament relacionat amb el producte, la qualitat t\u00e9 tamb\u00e9 un component \u00e8tic, evidentment les empreses han de complir uns est\u00e0ndards de qualitat m\u00ednims, no obstant aix\u00f2, es tracta de posar atenci\u00f3 en l'augment dels nivells d'excel\u00b7l\u00e8ncia dels clients per millorar-hi la confian\u00e7a, a m\u00e9s de,  per exemple, s'aconsegueixi evitar que aquests siguin substitu\u00efts en un curt espai de temps, amb els impactes que aix\u00f2 pugui comportar.</li> <li>Publicitat enganyosa, fent de la comunicaci\u00f3 cap als clients una eina per a la generaci\u00f3 de confian\u00e7a sense utilitzar arguments de venda inv\u00e0lids o incorrectes. Millorar la transpar\u00e8ncia de l\u2019organitzaci\u00f3 a trav\u00e9s de la publicaci\u00f3 dels comptes econ\u00f2mics de l\u2019empresa.</li> <li>Gesti\u00f3 dels recursos humans, fomentant un bon ambient laboral desenvolupant valors positius de respecte pels empleats i les seves fam\u00edlies, com la conciliaci\u00f3.</li> <li>Creaci\u00f3 i innovaci\u00f3, com a eina de millora d\u2019efici\u00e8ncia i millora en impactes ambientals i rendibilitat, millora en la imatge de l\u2019organitzaci\u00f3 i en la competitivitat.</li> </ul> <p>Motius per construir un codi \u00e8tic empresarial:</p> <ol> <li>Millora de la imatge i reconeixement empresarial entre empleats, clients, prove\u00efdors compet\u00e8ncia, la qual cosa es tradueix en un augment de la confian\u00e7a en totes les parts interessades.</li> <li>Reducci\u00f3 dels riscos per incompliment legal i per tant de sancions econ\u00f2miques i penals. L\u2019\u00e8tica empresarial posa el llist\u00f3 del compliment en una posici\u00f3 m\u00e9s elevada que la de les obligacions legals.</li> <li>Obtenci\u00f3 de beneficis fiscals per l\u2019execuci\u00f3 d\u2019activitats relacionades amb l\u2019\u00e8tica empresarial. Per exemple, a trav\u00e9s de proporci\u00f3 d'assegurances m\u00e8diques i plans de pensions a empleats.</li> <li>Augment de la lleialtat dels treballadors a trav\u00e9s de la creaci\u00f3 d\u2019iniciatives de conciliaci\u00f3 i generaci\u00f3 d\u2019ambients segurs despr\u00e9s de la definici\u00f3 de normes de conviv\u00e8ncia i respecte als treballadors.</li> <li>M\u00e9s atracci\u00f3 a inversi\u00f3 a causa d\u2019un augment de la imatge corporativa en la societat.</li> </ol> <p>Arribats a aquest punt ja coneixem els objectius i motius d'una organitzaci\u00f3 per definir un codi \u00e8tic empresarial, per\u00f2, Qu\u00e8 ha de contenir aquest codi? A continuaci\u00f3, es presenten una s\u00e8rie de caracter\u00edstiques amb la qual ha de comptar una pol\u00edtica d\u2019\u00e8tica empresarial.</p> <p>El codi \u00e8tic sempre ha de comptar amb els valors corporatius com a base.</p> <p>A m\u00e9s, ha de girar al voltant de principis \u00e8tics universals, com s\u00f3n la just\u00edcia, igualtat, legalitat, responsabilitat i solidaritat.</p> <p>Ha de contenir una enumeraci\u00f3 de les obligacions legals a les quals est\u00e0 sotmesa l\u2019empresa.</p> <p>En ell, s\u2019han de tenir en compte possibles aspectes conflictius de l\u2019organitzaci\u00f3 que permetin prendre decisions, com per exemple una pol\u00edtica de retribuci\u00f3 justa i equitativa, aix\u00ed mateix, ha d\u2019establir el codi comportamental dels empleats de l\u2019organitzaci\u00f3.</p> <p>Ha d\u2019estar descrita en un llenguatge accessible per a tots els destinataris de la mateixa tant a nivell intern com extern i ha d\u2019aplicar a tots els empleats de l\u2019organitzaci\u00f3.</p> <p>La seva construcci\u00f3 ha de comptar amb personal de diferents parts de l\u2019organitzaci\u00f3 per obtenir el major volum d\u2019informaci\u00f3 i representaci\u00f3 possible.</p> <p>I, finalment ha de ser un document viu, que es revisi i actualitzi amb certa freq\u00fc\u00e8ncia.</p>"},{"location":"Moduls/CECNC/UT01.html#12-compliance-officer-funcions-i-responsabilitats","title":"1.2.- Compliance Officer: Funcions i responsabilitats","text":"<p>El Compliance Officer</p> <p>El compliance officer \u00e9s la persona encarregada de vetllar pel compliment dels requisits legals i normatius d\u2019una organitzaci\u00f3, s\u2019encarrega d\u2019identificar els riscos regulatoris i assegura l\u2019exist\u00e8ncia de controls interns per al mesurament i gesti\u00f3 dels mateixos.</p> <p>Ha de promoure una conducta \u00e8tica i una cultura de compliment normatiu i ha de treballar per garantir que l\u2019activitat de l\u2019empresa de realitzi d\u2019acord amb la llei, els compromisos adquirits amb clients i la normativa interna.</p> <p>Com a responsable de compliment, ha d\u2019estar al tant de les darreres lleis, normatives i reglaments que s\u2019han de complir, i ha d\u2019aconseguir transformar-los a requisits i procediments dins de l\u2019organitzaci\u00f3.</p> <p>Si b\u00e9 la figura de compliance officer no est\u00e0 definida en la legislaci\u00f3 espanyola, aquest, pot arribar a tenir responsabilitat penal sobre qualsevol tipus d'activitat il\u00b7l\u00edcita desenvolupada dins de l'organitzaci\u00f3, ja sigui per la seva participaci\u00f3 en la mateixa, o de manera indirecta, \u00fanicament amb el coneixement de les activitats il\u00b7legals de l'organitzaci\u00f3, o,  per desconeixement per l\u2019omissi\u00f3 en les seves responsabilitats com a supervisor del compliment en l\u2019organitzaci\u00f3. Les funcions de supervisi\u00f3 i vigil\u00e0ncia si estan contemplades en la legislaci\u00f3.</p> <p>Despr\u00e9s de la reforma del Codi Penal operada per la Llei Org\u00e0nica 1/2015, s'estableix:</p> <p>\" 2a la supervisi\u00f3 del funcionament i del compliment del model de prevenci\u00f3 implantat ha estat confiada a un \u00f2rgan de la persona jur\u00eddica amb poders aut\u00f2noms d\u2019iniciativa i de control o que tingui encomanada legalment la funci\u00f3 de supervisar l\u2019efic\u00e0cia dels controls interns de la persona jur\u00eddica;\" (\u2026)</p> <p>\" 4a no s\u2019ha produ\u00eft una omissi\u00f3 o un exercici insuficient de les seves funcions de supervisi\u00f3, vigil\u00e0ncia i control per part de l\u2019\u00f2rgan a qu\u00e8 es refereix la condici\u00f3 2a\"</p> <p>Si b\u00e9 l'article 2 no fa refer\u00e8ncia expl\u00edcita al compliance officer, es pot interpretar la seva figura en les la definici\u00f3 d'\u00f2rgan de la persona jur\u00eddica amb poders aut\u00f2noms d'iniciativa i de control, aix\u00ed com les eines i obligacions amb qu\u00e8 ha de comptar aquesta figura per exercir la seva funci\u00f3, com s\u00f3n:</p> <p>Poders per realitzar de manera aut\u00f2noma i proactiva controls sobre el negoci, o una funci\u00f3 legalment establerta de supervisi\u00f3 sobre aquest.</p> <p>Que no existeixi una omissi\u00f3 o insufici\u00e8ncia de les funcions de compliance officer. Ha d\u2019executar les seves funcions amb dilig\u00e8ncia i determinaci\u00f3.</p> <p>Que informi obligat\u00f2riament de possibles incompliments legals i els riscos associats.</p> <p>Dins de l\u2019organitzaci\u00f3 tant el responsable de compliment com el comit\u00e8 d\u2019administraci\u00f3 tenen dins de les seves funcions el compliment legal i normatiu, no obstant aix\u00f2, mentre la funci\u00f3 del comit\u00e8 se centra en la consecuci\u00f3 dels objectius comercials respectant la llei per\u00f2 defensant els interessos de l\u2019empresa, el compliance officer t\u00e9 com a objectiu el com respectar la llei,  dissenyant processos organitzacionals per complir-la, fomentant la cultura i conscienciaci\u00f3 en compliment, i establint objectius m\u00e9s estrictes a trav\u00e9s dels codis \u00e8tics i de bona conducta.</p> <p>Aix\u00ed mateix, cal destacar la figura del responsable de compliment respecte a la del delegat de protecci\u00f3 de dades. Si b\u00e9 el primer s\u2019encarrega del compliment de la normativa a nivell general, el segon s\u2019enfoca \u00fanicament en el compliment normatiu en mat\u00e8ria de protecci\u00f3 de dades i en els processos associats a aquest compliment tals, com el registre d\u2019activitats de tractament, l\u2019an\u00e0lisi de riscos de privacitat, les avaluacions d\u2019impacte en privacitat,  els compromisos de confidencialitat i els documents de requisits de seguretat.</p> <p>Ambdues figures estan estretament relacionades ja que la normativa de protecci\u00f3 de dades \u00e9s una de les m\u00e9s rellevants i de les quals majors riscos i sancions suposa a les organitzacions.</p> <p>Funcions del compliance officer</p> <p>A continuaci\u00f3, es descriuen les funcions principals que s\u00f3n desenvolupades pel responsable de compliment d\u2019una organitzaci\u00f3:</p> <ul> <li> <p>Entendre el funcionament de l\u2019organitzaci\u00f3 i del negoci:</p> <p>La primera funci\u00f3 del compliance officer \u00e9s la d\u2019entendre el negoci de l\u2019organitzaci\u00f3 i els processos i procediments de l\u2019empresa, de tal manera que pugui identificar els requisits i obligacions dels mateixos i integrar-los en el sistema de compliment normatiu.</p> </li> <li> <p>Operaci\u00f3 dels sistemes de gesti\u00f3 de compliment:</p> <p>Cal definir i assegurar el desplegament de les mesures i controls que permetin identificar i gestionar els riscos i incid\u00e8ncies relacionades amb el compliment, b\u00e9 sigui a trav\u00e9s del personal o a trav\u00e9s d\u2019eines internes o externes a l\u2019organitzaci\u00f3, tals com:</p> <ul> <li>Sistemes de den\u00fancies.</li> <li>Reunions amb responsables de processos.</li> <li>Reports d\u2019incid\u00e8ncies.</li> <li>Comunicaci\u00f3 i suport cap a empleats davant el dubte que una activitat suposi un risc per a l\u2019organitzaci\u00f3.</li> <li>Revisi\u00f3 de nous processos de l\u2019organitzaci\u00f3 o modificaci\u00f3 dels existents.</li> <li>M\u00e8triques i indicadors d\u2019acompliment i compliment.</li> </ul> </li> <li> <p>Desenvolupar una cultura de compliment en l\u2019organitzaci\u00f3:</p> <p>El compliance officer ha de promoure els processos de compliment dins de l\u2019organitzaci\u00f3, comunicar-los i supervisar-los, amb l\u2019objectiu que els seus integrants els coneguin i els prenguin en compte. Han de ser comunicats i recordats amb freq\u00fc\u00e8ncia. En cas que existeixi maduresa quant a la cultura de compliment de l\u2019organitzaci\u00f3, el compliance officer ser\u00e0 consultat a l\u2019hora d\u2019establir nous processos de negoci en l\u2019organitzaci\u00f3, i aquest ajudar\u00e0 a dissenyar-los dins del l\u00edmits legals.</p> </li> <li> <p>Assessorament legal i regulatori:</p> <p>S\u2019ha d\u2019encarregar de con\u00e8ixer les lleis i regulacions que afecten el negoci de l\u2019organitzaci\u00f3 i s\u2019ha de mantenir actualitzat sobre totes les modificacions o noves regulacions que puguin sorgir. A m\u00e9s, han de con\u00e8ixer els possibles impactes que pot ocasionar el seu incompliment, per la qual cosa s\u00f3n consultats davant el llan\u00e7ament de nous productes o serveis.</p> </li> <li> <p>Supervisi\u00f3 dels processos de l\u2019organitzaci\u00f3:</p> <p>Cal assegurar del monitoratge proactiu dels processos de l\u2019organitzaci\u00f3 pel que fa al compliment legal o normatiu. Per a aquest tipus de seguiments es realitzaran revisions peri\u00f2diques amb una freq\u00fc\u00e8ncia determinada avaluant el proc\u00e9s i als seus integrants.</p> </li> <li> <p>Contacte amb el regulador:</p> <p>El responsable de compliment ha de ser el punt de contacte a trav\u00e9s del qual es duguin a terme les comunicacions amb regulador. \u00c9s l\u2019encarregat de comunicar a l\u2019empresa qualsevol tipus de requeriment amb origen en alguna llei o en el propi regulador, aix\u00ed mateix, tamb\u00e9 \u00e9s el responsable de transmetre informaci\u00f3 cap al regulador, comunicant requeriments, sol.licituds d\u2019informaci\u00f3, suggeriments, dubtes i consultes.</p> </li> <li> <p>Gesti\u00f3 d'incid\u00e8ncies:</p> <p>Com a responsable d'un proc\u00e9s de risc per a les organitzacions, el compliance officer ha de ser capa\u00e7 de reaccionar a qualsevol incid\u00e8ncia relacionada amb el compliment, b\u00e9 a trav\u00e9s de den\u00fancies o a trav\u00e9s de sancions, ha de tenir les eines necess\u00e0ries per poder aturar una situaci\u00f3 de risc per a la companyia i mitigar qualsevol vulnerabilitat que pugui ocasionar sancions o multes.</p> </li> <li> <p>Conscienciaci\u00f3:</p> <p>Ha de tenir la capacitat de comunicar els processos de gesti\u00f3 de compliance, per\u00f2 a m\u00e9s ha de dur a terme activitats de conscienciaci\u00f3 sobre compliment normatiu als empleats amb freq\u00fc\u00e8ncia, l\u2019objectiu d\u2019aquestes formacions \u00e9s principalment mitigar els riscos d\u2019incompliment, per\u00f2 tamb\u00e9 actualitzar els empleats davant l\u2019aparici\u00f3 de noves normatives o requisits legals i mantenir la comunicaci\u00f3 entre el negoci i l\u2019\u00e0rea de compliment.</p> </li> <li> <p>Assegurar el compliment en terceres parts:</p> <p>El compliance officer ha de tenir en compte tamb\u00e9 el compliment legal i normatiu en els productes i serveis contractats a terceres parts, i ser capa\u00e7 d\u2019identificar i gestionar els riscos que sorgeixen de la relaci\u00f3 amb els seus clients, prove\u00efdors i en general amb qualsevol tercer relacionat amb l\u2019organitzaci\u00f3.</p> </li> </ul> <p>S\u2019ha de tenir especial atenci\u00f3 a les responsabilitats de compliment, ja que, en cas d\u2019externalitzar un servei, i s\u2019esdevingui una incid\u00e8ncia per algun tipus d\u2019incompliment legal amb el prove\u00efdor, l\u2019empresa contractant, no est\u00e0 eximida de responsabilitat sobre aquest servei, aquests casos s\u00f3n especialment rellevants, per exemple, en processos relacionats amb la protecci\u00f3 de dades.</p>"},{"location":"Moduls/CECNC/UT01.html#13-relacions-amb-terceres-parts-en-compliance","title":"1.3.- Relacions amb terceres parts en compliance","text":"<p>Riscos de compliment amb tercers</p> <p>Avui dia totes les empreses tenen relaci\u00f3 amb tercers que formen part de manera directa o indirecta del seu negoci. Els tercers relacionats, poden ser entre d'altres, prove\u00efdors, socis, distribu\u00efdors, intermediaris, empreses col\u00b7laboradores, i tamb\u00e9 clients.</p> <p>Com hem vist en l'apartat anterior, el codi penal estableix que una empresa (persona jur\u00eddica) \u00e9s responsable dels actes delictius comesos pels seus representants legals o pels qui ostentin facultats d'organitzaci\u00f3 i control dins d'aquesta. En aquest punt estem incloent \"els seus representants legals\", \u00e9s a dir, els tercers relacionats. Per aquest motiu, cobra tanta rellev\u00e0ncia la gesti\u00f3 del compliment en terceres parts i els riscos associats als serveis prestats per terceres parts.</p> <p>Per aquest motiu el compliance no s\u2019ha de limitar a l\u2019organitzaci\u00f3, sin\u00f3 que es tracta que tots els tercers relacionats amb l\u2019empresa respectin tamb\u00e9 els seus compromisos. En cas contrari, la seva activitat econ\u00f2mica es pot veure afectada, i tamb\u00e9 la seva reputaci\u00f3.</p> <p>El risc de corrupci\u00f3 relacionat amb tercers \u00e9s estad\u00edsticament elevat, ja que, en la majoria dels casos, els pagaments de suborns s\u00f3n gestionats a trav\u00e9s de tercers, sent aquest focus en la identificaci\u00f3 dels riscos relacionats amb suborns i corrupci\u00f3 en les transaccions comercials.</p> <p>De quina manera es pot controlar el compliment en terceres parts?</p> <p>Per a aquesta tasca existeixen procediments denominats de \"dilig\u00e8ncia deguda\" l'objectiu dels quals \u00e9s dur a terme una adequada selecci\u00f3 i supervisi\u00f3 de les empreses que col\u00b7laboren amb l'organitzaci\u00f3, de tal manera que s'ajustin als principis, valors i conductes de l'organitzaci\u00f3. Aix\u00ed mateix, serveix per con\u00e8ixer el nivell de comprom\u00eds \u00e8tic i de compliment legal dels tercers.</p> <p>Tal \u00e9s la import\u00e0ncia d'aquest tipus de processos que organismes com l'Organitzaci\u00f3 per a la Cooperaci\u00f3 i el Desenvolupament Econ\u00f2mic (OCDE) ha publicat una guia de deguda dilig\u00e8ncia per a una conducta empresarial responsable, tenint en compte especialment els seg\u00fcents elements a analitzar, que formen part de la Conducta Empresarial Responsable.</p> <ul> <li>Drets humans.</li> <li>Ocupaci\u00f3 i relacions laborals.</li> <li>Medi ambient.</li> <li>Lluita contra la corrupci\u00f3, suborn i extorsi\u00f3.</li> <li>Interessos dels consumidors.</li> <li>Divulgaci\u00f3 d\u2019informaci\u00f3.</li> </ul> <p>Processos de dilig\u00e8ncia deguda</p> <p>Els processos de dilig\u00e8ncia deguda es poden articular a trav\u00e9s de tres fases: 1.  Avaluaci\u00f3 del comportament del tercer a contractar, a trav\u00e9s de l\u2019an\u00e0lisi dels seus antecedents, valorant informaci\u00f3 financera, responsables de les organitzacions, relacions amb l\u2019administraci\u00f3 p\u00fablica, problemes amb l\u2019administraci\u00f3 o problemes legals previs o exist\u00e8ncia de not\u00edcies negatives pr\u00e8vies. 2.  Formalitzaci\u00f3 detallada de la relaci\u00f3 amb el tercer, servei a proveir, element que ha de ser objecte d\u2019una transacci\u00f3 econ\u00f2mica, o qualsevol que sigui l\u2019objecte del contracte, ha de quedar clarament definit i delimitat. En el contracte s\u2019han d\u2019establir clausules relacionades amb el compliment, la legalitat dels productes o serveis prove\u00efts, la veracitat de la informaci\u00f3 prove\u00efda pel tercer, els valors de l\u2019organitzaci\u00f3, i l\u2019exist\u00e8ncia de processos de gesti\u00f3 de compliment tals com vigil\u00e0ncia i control, a m\u00e9s de possibilitat de ser auditat.  Aix\u00ed mateix, s\u2019han d\u2019avaluar els pagaments a realitzar, els motius dels mateixos i la raonabilitat de les quantitats relacionades amb els serveis o productes objecte del contracte. 3.  Monitoratge dels tercers relacionats amb l\u2019organitzaci\u00f3, no limitant l\u2019estudi al proc\u00e9s de contractaci\u00f3, sin\u00f3 analitzant els tercers de manera com a part d\u2019un proc\u00e9s, amb una freq\u00fc\u00e8ncia determinada la informaci\u00f3 prove\u00efda pels tercers en relaci\u00f3 al compliance i el compliment dels compromisos definits en el contracte.</p> <p>\u2795 informaci\u00f3</p> <p>Es pot consultar la guia de l'OCDE sobre dilig\u00e8ncia deguda en el seg\u00fcent link: Guia de l'OCDE de deguda dilig\u00e8ncia per a una conducta empresarial responsable</p> <p>Els seg\u00fcents elements representen informaci\u00f3 addicional estesa sobre l\u2019exposat a la unitat. Aquests continguts s\u00f3n d\u2019estudi opcional i no formaran part de l\u2019avaluaci\u00f3.</p> <p>Codis de bon govern corporatiu per a societats cotitzades. https://www.cnmv.es/portal/Publicaciones/CodigosGovCorp.aspx</p> <p>Llei org\u00e0nica de protecci\u00f3 de dades i drets digitals (LOPD-DD): https://www.boe.es/boe/dias/2018/12/06/pdfs/BOE-A-2018-16673.pdf</p> <p>Regulaci\u00f3 general de protecci\u00f3 de daus (GDPR): https://www.boe.es/doue/2016/119/L00001-00088.pdf</p> <p>Reforma de codi penal 2015: https://www.boe.es/diario_boe/txt.php?id=BOE-A-2015-3439</p> <p>Guia de dilig\u00e8ncia deguda per a una conducta empresarial responsable, per l'Organitzaci\u00f3 per a la Cooperaci\u00f3 i el Desenvolupament Econ\u00f2mic (OCDE): https://mneguidelines.oecd.org/Guia-de-la-OCDE-de-debida-diligencia-para-una-conducta-empresarial-responsable.pdf</p>"},{"location":"Moduls/CECNC/UT02.html","title":"UT02.- Disseny de sistemes de gesti\u00f3 de compliment normatiu.","text":"<p>En aquesta unitat actuarem com a oficial de compliment, i desenvoluparem un sistema de gesti\u00f3 de compliance basat en la metodologia proposada per est\u00e0ndards internacionals reconeguts.</p> <p>Al llarg d'aquesta unitat desenvoluparan una s\u00e8rie de compet\u00e8ncies sobre el desenvolupament de sistemes de gesti\u00f3 de compliment normatiu amb l' objectiu de:</p> <ol> <li>Recollir les principals normatives que afecta els diferents tipus d' organitzacions.</li> <li>Establir recomanacions v\u00e0lides per a diferents tipus d' organitzacions d' acord amb la normativa vigent.</li> <li>Realitzar an\u00e0lisis i avaluacions de riscos de diferents tipus d' organitzacions.</li> <li>Documentar un sistema de compliment normatiu.</li> </ol> <p>Aquesta unitat est\u00e0 enfocada als sistemes de gesti\u00f3 de compliment desenvolupar\u00e0 els continguts seg\u00fcents:</p> <ol> <li>Sistemes de Gesti\u00f3 de Compliance.</li> <li>Entorn regulatori d' aplicaci\u00f3.</li> <li>An\u00e0lisi i gesti\u00f3 de riscos, mapes de riscos.</li> <li>Documentaci\u00f3 del sistema de compliment normatiu dissenyat.</li> </ol>"},{"location":"Moduls/CECNC/UT02.html#diagrama-conceptual","title":"Diagrama conceptual","text":"Mapa conceptual <p> Mapa conceptual unitat 2 </p>"},{"location":"Moduls/CECNC/UT02.html#1-sistemes-de-gestio-de-compliance","title":"1.- Sistemes de gesti\u00f3 de compliance","text":""},{"location":"Moduls/CECNC/UT02.html#definicio-dun-sistema-de-gestio-de-compliance","title":"Definici\u00f3 d'un sistema de gesti\u00f3 de compliance","text":"Foto de Pixabay(CC0)"},{"location":"Moduls/DWEC/UT03Diapositives.html","title":"Presentaci\u00f3 diapositives UT03","text":""},{"location":"Moduls/DWEC/UT03Diapositives.html#utilitzacio-dels-objectes-predefinits-del-llenguatge","title":"Utilitzaci\u00f3 dels objectes predefinits del llenguatge","text":"Aquest \u00e9s un presentaci\u00f3 de Microsoft Office incrustat, amb tecnologia de Office."},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html","title":"Funcions a JavaScript","text":""},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#introduccio","title":"Introducci\u00f3","text":"<p>Les funcions s\u00f3n blocs fonamentals de codi a JavaScript. Permeten agrupar i reutilitzar codi, i s\u00f3n essencials per a la programaci\u00f3 modular, estructurada i funcional.</p> <p>Amplia informaci\u00f3</p> <p>Llegeix l'article Qu\u00e8 \u00e9s una funci\u00f3?.</p> \u00c9s el mateix un par\u00e0metre que un argument? <p>En JavaScript, els termes \"par\u00e0metre\" i \"argument\" sovint es confonen, per\u00f2 tenen significats diferents:</p> <ul> <li> <p>Par\u00e0metre: \u00c9s una variable que es defineix en la declaraci\u00f3 d'una funci\u00f3. Serveix com a marcador de posici\u00f3 per als valors que la funci\u00f3 rebr\u00e0 quan sigui cridada. Per exemple, en la funci\u00f3 seg\u00fcent, <code>x</code> i <code>y</code> s\u00f3n par\u00e0metres:   <pre><code>function suma(x, y) {\n    return x + y;\n}\n</code></pre></p> </li> <li> <p>Argument: \u00c9s el valor real que es passa a la funci\u00f3 quan aquesta \u00e9s cridada. Els arguments substitueixen els par\u00e0metres definits en la funci\u00f3. Per exemple, en la crida seg\u00fcent, <code>5</code> i <code>3</code> s\u00f3n arguments:     <pre><code>let resultat = suma(5, 3);\n</code></pre></p> </li> </ul> <p>En resum, els par\u00e0metres s\u00f3n les variables en la definici\u00f3 de la funci\u00f3, mentre que els arguments s\u00f3n els valors que es passen a la funci\u00f3 quan es crida. Espero que aix\u00f2 aclareixi la difer\u00e8ncia! Si tens m\u00e9s preguntes, no dubtis a preguntar.</p> Qu\u00e8 \u00e9s una funci\u00f3? <p>Les funcions ens permeten agrupar l\u00ednies de codi en tasques amb un nom, perqu\u00e8 posteriorment puguem fer refer\u00e8ncia a aquest nom per realitzar tot el que s'agrupi en aquesta tasca.</p> \u00c9s el mateix declarar una funci\u00f3 que executar una funci\u00f3? <p>No.</p> <p>Qu\u00e8 \u00e9s un par\u00e0metre/arguments?</p> <p>Pot tenir una funci\u00f3 m\u00faltiples par\u00e0metres? Quin \u00e9s el l\u00edmit?</p> <p>Hi ha els par\u00e0metres per defecte?</p> <p>En qu\u00e8 consisteix la devoluci\u00f3 o el retorn de valors? Totes les funcions tornen alguna cosa?</p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#parametres-duna-funcio","title":"Par\u00e0metres d'una funci\u00f3","text":"<p>Una caracter\u00edstica notable de JavaScript \u00e9s que no d\u00f3na error si crides a una funci\u00f3 amb m\u00e9s arguments dels que espera. Els arguments addicionals simplement s\u00f3n ignorats.</p> <pre><code>function saludar(nom) {\n\n    console.log(\"Hola, \" + nom);\n\n}\n\nsaludar(\"Joan\", \"extra\"); // \"Hola, Joan\"\n</code></pre> <pre><code>Hola, Joan\n</code></pre> <p>L'ordre dels arguments \u00e9s crucial. Els arguments s'assignen als par\u00e0metres a l'ordre en qu\u00e8 es passen.</p> <p>Javascript, a les funcions, crea un objecte anomenant arguments que t\u00e9 els arguments passats, la posici\u00f3 com a clau i la quantitat d'arguments amb length.</p> <pre><code>function a(){ console.log (arguments)}\n\na(1,2,3);\n</code></pre> <pre><code>[Arguments] { \"0\": 1, \"1\": 2, \"2\": 3 }\n</code></pre> <p>Amplia informaci\u00f3</p> <p>Llegeix l'article Par\u00e0metres d'una funci\u00f3. </p> <p>Quantes maneres hi ha de declarar una funci\u00f3? Hi ha alguna no recomanada?</p> <p>Com executem una funci\u00f3 que no t\u00e9 nom?</p> Qu\u00e8 \u00e9s una funci\u00f3 an\u00f2nima? <p>Llegir apartat Funcions an\u00f2nimes de Funcions</p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#return-en-funcions","title":"Return en funcions","text":"<p>Les funcions poden tenir un valor de retorn o no. Si no s'especifica un return, la funci\u00f3 torna undefined per defecte. Les funcions nom\u00e9s retornen un valor. Si volem retornar-ne m\u00e9s d'un els podem agrupar en arrays o objectes.</p> <p><pre><code>function senseRetorn() {\n\n    let missatge = \"Hola\";\n\n}\n\nfunction ambRetorn() {\n\n    let missatge = \"Hola\";\n\n    return missatge;\n\n}\n\nconsole.log(sinRetorno(),conRetorno());\n</code></pre> <pre><code>undefined Hola\n</code></pre></p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#invocacio-de-funcions","title":"Invocaci\u00f3 de funcions","text":"<p>En utilitzar par\u00e8ntesis <code>()</code>, invoques a la funci\u00f3. Sense par\u00e8ntesis, fas refer\u00e8ncia a l'objecte que representa la funci\u00f3.</p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#les-funcions-son-objectes","title":"Les funcions s\u00f3n objectes","text":"<p>A JavaScript, les funcions s\u00f3n objectes de primera classe. Aix\u00f2 significa que poden ser assignades a variables, passades com a arguments i tornades per altres funcions.</p> <p><pre><code>function multiplicar(x, y) {\n\n    return  x * y;\n\n}\n\nlet operacio =  multiplicar;\n\nconsole.log(operacio(2, 3)); // 6\n</code></pre> <pre><code>6\n</code></pre></p> <p>La capacitat de Javascript de tractar les funcions com a objectes us permet facilitar l'\u00fas de funcions de Callback i la programaci\u00f3 funcional, que veurem en el seu cap\u00edtol.</p> <p>Qu\u00e8 \u00e9s un callback?</p> Qu\u00e8 \u00e9s una funci\u00f3 autoexecutable? <p>Una funci\u00f3 autoexecutable \u00e9s una funci\u00f3 en JavaScript que es defineix i s'executa autom\u00e0ticament a l'hora de ser interpretada. La seva estructura caracter\u00edstica permet executar una funci\u00f3 immediatament sense necessitat de trucar-la expl\u00edcitament despr\u00e9s de la seva definici\u00f3.</p> <p>La sintaxi b\u00e0sica d'una funci\u00f3 autoexecutable \u00e9s la seg\u00fcent:</p> <p><pre><code>(function () {\n    // Codi de la funci\u00f3\n})();\n</code></pre> O b\u00e9: <pre><code>(() =&gt; {\n    // Codi de la funci\u00f3\n})();\n</code></pre> Exemple amb par\u00e0metres: <pre><code>(function(nom) {\n    console.log(`Hola, ${nom}!`);\n})(\"Joan\");\n</code></pre></p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#declaracio-de-funcions","title":"Declaraci\u00f3 de funcions","text":"<p>Les funcions poden ser declarades de manera expl\u00edcita. Aquest tipus de declaraci\u00f3 es carrega en temps de compilaci\u00f3, permetent-ne l'\u00fas abans de la declaraci\u00f3 (hoisting). <pre><code>console.log(suma(2, 3)); // 5\n\nfunction suma(a, b) {\nreturn a + b;\n}\n</code></pre> <pre><code>5\n</code></pre></p> <p>Les funcions tamb\u00e9 es poden definir mitjan\u00e7ant expressions. Aquest tipus de funci\u00f3 savalua en temps dexecuci\u00f3 i no suporta hoisting.</p> <p><pre><code>let restar = function(a, b) {\n  return a - b;\n};\n\nconsole.log(restar(5, 3)); // 2\n</code></pre> <pre><code>2\n</code></pre></p> <p>Les expressions de funci\u00f3 poden ser an\u00f2nimes, \u00e9s a dir, no tenir nom. Com que no tenen nom, no es poden invocar a si mateixes, per la qual cosa no es poden fer recursives. Si no tenen nom i s\u00f3n assignades a una variable amb una expressi\u00f3 de funci\u00f3, adquireixen el nom de la variable. Se solen utilitzar com a funcions de \u201cCallback\u201d, encara que no \u00e9s el m\u00e9s recomanable perqu\u00e8 despr\u00e9s compliquen la tra\u00e7abilitat dels errors. <pre><code>let dividir = function(a, b) {\n    return a / b;\n};\nconsole.log(dividir(10, 2)); // 5\n</code></pre> <pre><code>5\n</code></pre></p>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#funcions-fletxa","title":"Funcions fletxa","text":"<p>Una arrow function \u00e9s una manera m\u00e9s abreujada/simplificada d'escriure funcions an\u00f2nimes. Aix\u00f2 les fa m\u00e9s complicades d'entendre fins que t'acostumes a fer servir. Aquestes s\u00f3n les seves principals caracter\u00edstiques:</p> <ul> <li>Sintaxi Concisa: No cal utilitzar la paraula clau function, return, ni utilitzar claus {} si la funci\u00f3 nom\u00e9s t\u00e9 una expressi\u00f3.</li> <li>Constants per Defecte: Es recomana declarar funcions fletxa utilitzant const en lloc de var o let, ja que un cop assignades, no poden ser reassignades a un altre valor.</li> <li>No tenen aquest propi: A difer\u00e8ncia de les funcions regulars, les funcions fletxa no tenen el seu propi context this. Al seu lloc, hereten el this del context en qu\u00e8 van ser creades.</li> <li>No s\u00f3n hoisted: les funcions fletxa no s\u00f3n elevades (hoisted) com les funcions tradicionals. Aix\u00f2 significa que no poden ser invocades abans de la seva declaraci\u00f3 al codi.</li> <li>\u00das de {} i return: Si la funci\u00f3 fletxa t\u00e9 m\u00e9s d'una l\u00ednia de codi o m\u00e9s d'una instrucci\u00f3, cal utilitzar claus {} i la paraula clau return expl\u00edcitament.</li> <li>No poden ser m\u00e8todes: Com que no tenen el seu propi this, no poden ser utilitzades com a m\u00e8todes en objectes.</li> </ul> <p>A continuaci\u00f3 us mostro com passar d'una funci\u00f3 an\u00f2nima a una funci\u00f3 fletxa:</p> <pre><code>// Funci\u00f3 tradicional\n\n(function (a){\n    return a + 100;\n});\n\n// Desglossament de la funci\u00f3 fletxa\n\n// 1. Elimina la paraula \"function\" i col\u00b7loca la fletxa entre l'argument i el claud\u00e0tor d'obertura.\n\n(a) =&gt; {\n    return a + 100;\n}\n\n// 2. Treu els claud\u00e0tors del cos i la paraula \"return\" \u2014 el return est\u00e0 impl\u00edcit.\n\n(a) =&gt; a + 100;\n\n// 3. Suprimeix els par\u00e8ntesis dels arguments\n\na =&gt; a + 100;\n</code></pre>"},{"location":"Moduls/DWEC/UT03FuncionsJavascript.html#bibliografia","title":"Bibliografia","text":"<ul> <li>Ministeri d'Educaci\u00f3 i Formaci\u00f3 Professional</li> <li>https://xxjcaxx.github.io/libro_dwec/desarrollofrontend.html</li> <li>Lloc web de Marcos Ruiz</li> </ul>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html","title":"Treball amb matrius en Javascript","text":"<p>Hi ha diversos m\u00e8todes d'array en JavaScript que poden ser molt \u00fatils per treballar amb arrays de manera eficient i clara. Aqu\u00ed tens alguns dels m\u00e9s comuns i \u00fatils:</p>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#1-map","title":"1. <code>map()</code>","text":"<p>Crea un nou array amb els resultats de cridar una funci\u00f3 per a cada element de l'array original.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst dobles = numeros.map(num =&gt; num * 2);\nconsole.log(dobles); // Sortida: [2, 4, 6, 8, 10]\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#2-filter","title":"2. <code>filter()</code>","text":"<p>Crea un nou array amb tots els elements que compleixen una condici\u00f3 especificada.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst parells = numeros.filter(num =&gt; num % 2 === 0);\nconsole.log(parells); // Sortida: [2, 4]\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#3-foreach","title":"3. <code>forEach()</code>","text":"<p>Executa una funci\u00f3 per a cada element de l'array. No retorna un nou array.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nnumeros.forEach(num =&gt; console.log(num * 2));\n// Sortida: 2, 4, 6, 8, 10 (cada n\u00famero en una l\u00ednia separada)\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#4-some","title":"4. <code>some()</code>","text":"<p>Comprova si almenys un element de l'array compleix una condici\u00f3 especificada. Retorna un boole\u00e0.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst hiHaParells = numeros.some(num =&gt; num % 2 === 0);\nconsole.log(hiHaParells); // Sortida: true\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#5-every","title":"5. <code>every()</code>","text":"<p>Comprova si tots els elements de l'array compleixen una condici\u00f3 especificada. Retorna un boole\u00e0.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst totsPositius = numeros.every(num =&gt; num &gt; 0);\nconsole.log(totsPositius); // Sortida: true\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#6-find","title":"6. <code>find()</code>","text":"<p>Retorna el primer element de l'array que compleix una condici\u00f3 especificada. Si no troba cap element, retorna <code>undefined</code>.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst primerParell = numeros.find(num =&gt; num % 2 === 0);\nconsole.log(primerParell); // Sortida: 2\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#7-findindex","title":"7. <code>findIndex()</code>","text":"<p>Retorna l'\u00edndex del primer element de l'array que compleix una condici\u00f3 especificada. Si no troba cap element, retorna <code>-1</code>.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst indexPrimerParell = numeros.findIndex(num =&gt; num % 2 === 0);\nconsole.log(indexPrimerParell); // Sortida: 1\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#8-sort","title":"8. <code>sort()</code>","text":"<p>Ordena els elements de l'array i retorna l'array ordenat. Per defecte, ordena els elements com a cadenes de text.</p> <pre><code>const numeros = [5, 3, 8, 1, 2];\nnumeros.sort((a, b) =&gt; a - b);\nconsole.log(numeros); // Sortida: [1, 2, 3, 5, 8]\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#9-concat","title":"9. <code>concat()</code>","text":"<p>Combina dos o m\u00e9s arrays i retorna un nou array.</p> <pre><code>const array1 = [1, 2, 3];\nconst array2 = [4, 5, 6];\nconst combinat = array1.concat(array2);\nconsole.log(combinat); // Sortida: [1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"Moduls/DWEC/UT03_Treball_amb_matrius.html#10-slice","title":"10. <code>slice()</code>","text":"<p>Retorna una c\u00f2pia superficial d'una porci\u00f3 de l'array en un nou array.</p> <pre><code>const numeros = [1, 2, 3, 4, 5];\nconst part = numeros.slice(1, 3);\nconsole.log(part); // Sortida: [2, 3]\n</code></pre>"},{"location":"Moduls/DWEC/UT04Diapositives.html","title":"Presentaci\u00f3 diapositives UT04","text":""},{"location":"Moduls/DWEC/UT04Diapositives.html#programacio-amb-matrius-funcions-i-objectes-definits-per-lusuari","title":"Programaci\u00f3 amb matrius, funcions i objectes definits per l'usuari","text":"Aquest \u00e9s un presentaci\u00f3 de Microsoft Office incrustat, amb tecnologia de Office."},{"location":"Moduls/DWEC/_DWEC2425.html","title":"Desenvolupament web en entorn client - DAW","text":"<p>Dins del cicle de DAW, el segon curs t\u00e9 3 m\u00f2duls \u00edntimament relacionats i que, tots plegats, serveixen per fer una web completament. Tenim un m\u00f2dul per programar el servidor (backend): 'DWES', un per al client (frontend): 'DWEC' i un per a la interf\u00edcie d'usuari: 'DIW'. El m\u00f2dul DWEC, per tant, ha de suposar que hi ha un servidor funcionant correctament, aix\u00ed com el m\u00f2dul de DWES suposa que alg\u00fa far\u00e0 el frontend. A m\u00e9s, a DWEC no ens vam preocupar massa de la part est\u00e8tica, tot i que \u00e9s inevitable construir HTML i reaccionar a les accions de l'usuari. Per tant, aquest m\u00f2dul se centra en com recollir dades del servidor, mostrar-les i fer alguna cosa amb ells. At\u00e8s que aquest m\u00f2dul \u00e9s gaireb\u00e9 tot 'Javascript', la manera de tractar-lo m\u00e9s intensament i en tots els aspectes del frontend \u00e9s fer una 'SPA' (ja veurem qu\u00e8 \u00e9s aix\u00f2). \u00c9s important recalcar que vam veure un subconjunt molt petit de totes les maneres diferents que hi ha per enfocar un projecte de frontend i que no t\u00e9 perqu\u00e8 ser el millor en tots els casos. L' alumnat d' aquests cicles ha d' afegir a la seva rutina personal alguna manera d' estar al dia de les novetats del desenvolupament web. Per exemple, seguir la MDN en xarxes, /r/javascript a Reddit, Canals de Youtube, Hacker News, la W3C...</p> <p>Podem separar el curs en dos grans blocs amb els temes seg\u00fcents:</p> <ul> <li>Javascript \"vainilla\":</li> <li>Programaci\u00f3 Javascript per al frontend</li> <li>Testing</li> <li>Comunicaci\u00f3 amb el servidor<ul> <li>Promeses</li> <li>Fetch</li> </ul> </li> <li>Programaci\u00f3 moderna a Javascript<ul> <li>Vite</li> <li>CI/CD</li> <li>Desplegament</li> <li>Observables i programaci\u00f3 reactiva</li> <li>Programaci\u00f3 funcional</li> </ul> </li> <li>Frameworks</li> <li>Typescript</li> <li>Angular</li> <li>Components, rutes, serveis...</li> <li>Formularis</li> </ul> <p>At\u00e8s que tot est\u00e0 m\u00e9s ben documentat a les webs oficials de cada tecnologia, a MDN o W3CSchool i altres, no cal ser exhaustiu a cada secci\u00f3. Ens aturarem en les parts m\u00e9s interessants i representatives del frontend amb exemples pr\u00e0ctics i intentant sempre aplicar les millors pr\u00e0ctiques.</p> <p>Actualment hi ha poca gent que programi directament a Javascript \"Vanilla\". En un m\u00f2dul per a formaci\u00f3 professional ens podem preguntar si no seria millor ensenyar directament un framework. I tamb\u00e9 si no seria millor ensenyar el framework \"de moda\". Els motius per al fet d'explicar els fonaments a Javascript sense frameworks o moltes biblioteques i de seguir amb Angular han estat reflexionats amb altres professors i amb tutors a empreses. D'una banda hi ha el fet que cal con\u00e8ixer la base i no dependre d'una llibreria en concret. Per\u00f2 \u00e9s que l'\u00fas de frameworks, tot i ser massiu, tamb\u00e9 t\u00e9 la seva controv\u00e8rsia. Con\u00e8ixer els fonaments i les bones pr\u00e0ctiques \u00e9s millor que saber programar r\u00e0pidament una cosa comercial. Pel que fa al framework, Angular \u00e9s usat massivament per gent que no publicita la seva feina en xarxes socials. La majoria d'empreses de la zona l'utilitzen. A m\u00e9s, \u00e9s un framework totalment actualitzat a les metodologies modernes, que for\u00e7a a tenir una disciplina i con\u00e8ixer arquitectures, patrons de disseny i bones pr\u00e0ctiques.</p> <p>Desenvolupament frontend</p>"},{"location":"Moduls/DWEC/ajax.html","title":"Comunicaci\u00f3n con el servidor","text":""},{"location":"Moduls/DWEC/ajax.html#ajax-en-javascript","title":"AJAX en JavaScript","text":"<p>Lectura recomendada: https://developer.mozilla.org/es/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data</p> <p>AJAX, acr\u00f3nimo de \"Asynchronous JavaScript and XML\", es un conjunto de tecnolog\u00edas que permite a las aplicaciones web enviar y recibir datos del servidor de manera as\u00edncrona, sin necesidad de recargar la p\u00e1gina completa. Esto mejora significativamente el rendimiento y la experiencia del usuario. No obstante tiene unos inconvenientes que tambi\u00e9n hay que mencionar. De esta manera, originalmente, AJAX se compone de: </p> <ol> <li>JavaScript: El lenguaje de programaci\u00f3n que controla la interacci\u00f3n y el comportamiento din\u00e1mico de la p\u00e1gina web.</li> <li>XHTML y CSS: Utilizados para estructurar y estilizar la p\u00e1gina web.</li> <li>XML o JSON: Formatos de datos que se env\u00edan y reciben desde el servidor.</li> <li>XMLHttpRequest: El objeto que permite a JavaScript realizar solicitudes HTTP de manera as\u00edncrona.</li> </ol> <p>Esta es la definici\u00f3n original de AJAX, no obstante, aunque se puede mantener el nombre a la metodolog\u00eda, algunas tecnolog\u00edas han mejorado. Ahora, en general, se usa <code>JSON</code> y en vez de <code>XMLHttpRequest</code> se usa <code>fetch</code>. </p> <p>Con AJAX, JavaScript puede enviar o solicitar datos en formato XML o JSON al servidor sin recargar la p\u00e1gina. El servidor responde a estas solicitudes, generalmente a trav\u00e9s de una API REST o similar. El cliente, usando JavaScript, procesa la respuesta y actualiza el contenido de la p\u00e1gina din\u00e1micamente.</p>"},{"location":"Moduls/DWEC/ajax.html#ejemplo-basico-de-ajax","title":"Ejemplo B\u00e1sico de AJAX","text":""},{"location":"Moduls/DWEC/ajax.html#enviar-una-solicitud-ajax-con-xmlhttprequest","title":"Enviar una solicitud AJAX con <code>XMLHttpRequest</code>","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;AJAX Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;button id=\"loadData\"&gt;Load Data&lt;/button&gt;\n    &lt;div id=\"result\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n        document.getElementById('loadData').addEventListener('click', function() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', 'https://api.example.com/data', true);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {\n                    var data = JSON.parse(xhr.responseText);\n                    document.getElementById('result').innerText = data.message;\n                }\n            };\n            xhr.send();\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En este ejemplo, cuando se hace clic en el bot\u00f3n \"Load Data\", se env\u00eda una solicitud <code>GET</code> al servidor. La respuesta, que se espera est\u00e9 en formato JSON, se procesa y se muestra en el <code>div</code> con el ID \"result\".</p> <p>Este ejemplo se puede considerar anticuado, a partir de ES6 es mejor hacerlo con fetch y promesas. No obstante, es interesante analizar este c\u00f3digo y entender c\u00f3mo funciona. Adem\u00e1s, fetch no permite un control a tan bajo nivel de todas las etapas de una petici\u00f3n, por lo que sigue siendo necesario para hacer barras de progreso, cancelar peticiones... </p>"},{"location":"Moduls/DWEC/ajax.html#beneficios-de-ajax","title":"Beneficios de AJAX","text":"<ul> <li>Mejora del Rendimiento: Al no recargar la p\u00e1gina completa, solo se actualizan las partes necesarias, lo que resulta en una experiencia de usuario m\u00e1s r\u00e1pida y fluida.</li> <li>Experiencia de Usuario Mejorada: Las actualizaciones din\u00e1micas permiten una interacci\u00f3n m\u00e1s r\u00e1pida y eficiente.</li> </ul>"},{"location":"Moduls/DWEC/ajax.html#problemas-de-ajax","title":"Problemas de AJAX","text":"<ul> <li>SEO: Las p\u00e1ginas que utilizan AJAX pueden ser m\u00e1s dif\u00edciles de indexar por los motores de b\u00fasqueda, ya que gran parte del contenido se carga de manera din\u00e1mica.</li> <li>Complejidad en el Desarrollo: El desarrollo de aplicaciones AJAX puede ser m\u00e1s complicado debido a la necesidad de manejar las solicitudes as\u00edncronas y actualizar el DOM din\u00e1micamente.</li> </ul>"},{"location":"Moduls/DWEC/ajax.html#apis","title":"APIs","text":"<p>La comunicaci\u00f3n entre el cliente y el servidor en una aplicaci\u00f3n web puede llevarse a cabo de varias maneras. Dos enfoques comunes incluyen:</p> <ol> <li>Solicitudes de HTML: JavaScript puede solicitar un HTML est\u00e1tico o din\u00e1mico y luego insertar el resultado en la p\u00e1gina.</li> <li>Interacci\u00f3n con APIs: JavaScript puede enviar y recibir datos en formato XML o JSON a trav\u00e9s de una API.</li> </ol> <p>Las APIs (Interfaz de Programaci\u00f3n de Aplicaciones) permiten que diferentes software se comuniquen entre s\u00ed. Existen varios tipos de APIs, cada una con sus propias caracter\u00edsticas y casos de uso:</p>"},{"location":"Moduls/DWEC/ajax.html#tipos-de-apis","title":"Tipos de APIs","text":"<ol> <li> <p>SOAP (Simple Object Access Protocol):     - Es un protocolo basado en XML.    - Conocido por su complejidad y sobrecarga debido a la utilizaci\u00f3n de XML.    - No est\u00e1 optimizado para HTTP.</p> </li> <li> <p>REST (Representational State Transfer):    - Basado en HTTP y utiliza URLs.    - Aprovecha los verbos HTTP (GET, POST, PUT, DELETE, PATCH).    - Es popular por su simplicidad y eficiencia.</p> </li> <li> <p>GraphQL:    - Permite consultas m\u00e1s granulares y controladas.    - Env\u00eda un JSON con la consulta en la URL.    - Independiente del protocolo HTTP.    - Utiliza un lenguaje de definici\u00f3n de esquemas (IDL).</p> </li> <li> <p>gRPC (gRPC Remote Procedure Calls):    - Utiliza HTTP/2, permitiendo una comunicaci\u00f3n m\u00e1s eficiente.    - Ofrece soporte para m\u00faltiples lenguajes de programaci\u00f3n.</p> </li> </ol>"},{"location":"Moduls/DWEC/ajax.html#api-rest","title":"API REST","text":"<p>Las APIs REST utilizan las peticiones HTTP como verbos del protocolo:</p> <ul> <li>GET: Recuperar recursos.</li> <li>POST: Crear nuevos recursos.</li> <li>PUT: Actualizar recursos existentes.</li> <li>DELETE: Eliminar recursos.</li> <li>PATCH: Actualizar parcialmente recursos.</li> </ul> <p>Caracter\u00edsticas de las APIs REST:</p> <ul> <li>Utilizan rutas URL para identificar los recursos.</li> <li>Los c\u00f3digos de respuesta HTTP indican el estado de la solicitud (por ejemplo, 200 para \u00e9xito, 404 para no encontrado, 500 para error del servidor).</li> <li>Los datos (payload) pueden enviarse en XML o JSON.</li> <li>Una API que sigue estrictamente las caracter\u00edsticas REST se denomina RESTful.</li> </ul> <p>Ejemplo de API REST:</p> <p>Supongamos una API para gestionar una colecci\u00f3n de libros:</p> <ul> <li><code>GET /books</code>: Recupera la lista de libros.</li> <li><code>POST /books</code>: Crea un nuevo libro.</li> <li><code>GET /books/:id</code>: Recupera un libro espec\u00edfico.</li> <li><code>PUT /books/:id</code>: Actualiza un libro espec\u00edfico.</li> <li><code>DELETE /books/:id</code>: Elimina un libro espec\u00edfico.</li> </ul>"},{"location":"Moduls/DWEC/ajax.html#api-graphql","title":"API GraphQL","text":"<p>GraphQL es una alternativa a REST que permite realizar consultas m\u00e1s precisas y espec\u00edficas. En lugar de varias URLs, una sola URL acepta consultas en JSON.</p> <p>Caracter\u00edsticas de las APIs GraphQL:</p> <ul> <li>Permiten m\u00e1s control y granularidad en las consultas.</li> <li>Las peticiones son f\u00e1ciles de entender y leer para los humanos.</li> <li>No est\u00e1n limitadas a HTTP.</li> <li>Utilizan el IDL (Schema Definition Language) para definir el esquema.</li> </ul> <p>Ejemplo de API GraphQL:</p> <p>Consulta para obtener el t\u00edtulo y autor de un libro espec\u00edfico:</p> <pre><code>{\n  book(id: \"1\") {\n    title\n    author\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#sdks-kits-de-desarrollo-de-software","title":"SDKs (Kits de Desarrollo de Software)","text":"<p>Las APIs pueden ser complejas, y herramientas como Firebase, MongoDB Realm, y Supabase ofrecen SDKs que simplifican tareas comunes como la autenticaci\u00f3n de usuarios y las consultas avanzadas.</p> <p>Caracter\u00edsticas de los SDKs:</p> <ul> <li>Facilitan la interacci\u00f3n con las APIs al proporcionar bibliotecas preconstruidas.</li> <li>Ahorra tiempo en la programaci\u00f3n de la comunicaci\u00f3n entre el cliente y el servidor.</li> <li>No son est\u00e1ndar y dependen del proveedor del servicio.</li> </ul> <p>Nota: Aunque los SDKs pueden simplificar mucho el trabajo, en este curso evitaremos su uso para centrarnos en aprender los fundamentos de las APIs.</p>"},{"location":"Moduls/DWEC/ajax.html#webs-spa-single-page-application","title":"Webs SPA (Single Page Application)","text":"<p>Las aplicaciones de una sola p\u00e1gina (SPA) utilizan AJAX para cargar y actualizar contenido sin necesidad de recargar la p\u00e1gina completa. Esto permite crear aplicaciones web m\u00e1s r\u00e1pidas y con una experiencia de usuario similar a las aplicaciones de escritorio.</p>"},{"location":"Moduls/DWEC/ajax.html#ejemplo-de-spa-con-ajax","title":"Ejemplo de SPA con AJAX","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;SPA Example&lt;/title&gt;\n    &lt;style&gt;\n        .hidden { display: none; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;nav&gt;\n        &lt;button onclick=\"loadPage('home')\"&gt;Home&lt;/button&gt;\n        &lt;button onclick=\"loadPage('about')\"&gt;About&lt;/button&gt;\n        &lt;button onclick=\"loadPage('contact')\"&gt;Contact&lt;/button&gt;\n    &lt;/nav&gt;\n    &lt;div id=\"content\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n        function loadPage(page) {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', page + '.html', true);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) {\n                    document.getElementById('content').innerHTML = xhr.responseText;\n                }\n            };\n            xhr.send();\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En este ejemplo, cada bot\u00f3n en la navegaci\u00f3n carga contenido diferente en el <code>div</code> con el ID \"content\" utilizando AJAX. Esto permite que la p\u00e1gina se actualice din\u00e1micamente sin necesidad de recargarla por completo.</p>"},{"location":"Moduls/DWEC/ajax.html#xmlhttprequest-en-javascript","title":"XMLHttpRequest en JavaScript","text":"<p>XMLHttpRequest (XHR) es una API utilizada para enviar y recibir datos entre un cliente web y un servidor. A pesar de su nombre, XMLHttpRequest puede manejar diferentes tipos de datos, aunque en este cap\u00edtulo nos centraremos principalmente en JSON debido a su popularidad en las aplicaciones web modernas.</p>"},{"location":"Moduls/DWEC/ajax.html#inicializacion-y-uso-basico","title":"Inicializaci\u00f3n y Uso B\u00e1sico","text":"<p>Para comenzar a utilizar XMLHttpRequest, primero debemos crear una instancia del objeto <code>XMLHttpRequest</code>.</p> <pre><code>var req = new XMLHttpRequest();\n</code></pre> <p>Una vez creado el objeto, debemos configurar la solicitud utilizando el m\u00e9todo <code>open</code>. Este m\u00e9todo tiene tres par\u00e1metros principales: 1. M\u00e9todo HTTP: El m\u00e9todo de la solicitud, como 'GET' o 'POST'. 2. URL: La URL a la que se env\u00eda la solicitud. 3. As\u00edncrono: Un valor booleano que indica si la solicitud debe ser as\u00edncrona (<code>true</code>) o s\u00edncrona (<code>false</code>). En la mayor\u00eda de los casos, queremos que sea as\u00edncrona para no bloquear la ejecuci\u00f3n del script.</p> <pre><code>req.open('GET', 'http://www.mozilla.org/', true);\n</code></pre> <p>XMLHttpRequest tiene un conjunto de estados que indican el progreso de la solicitud. Estos estados est\u00e1n representados por la propiedad <code>readyState</code> del objeto XHR. Los posibles valores de <code>readyState</code> son: - <code>0</code> (UNSENT): La solicitud no ha sido inicializada. - <code>1</code> (OPENED): Se ha establecido la conexi\u00f3n con el servidor. - <code>2</code> (HEADERS_RECEIVED): Se han recibido los encabezados de la respuesta. - <code>3</code> (LOADING): El cuerpo de la respuesta se est\u00e1 recibiendo. - <code>4</code> (DONE): La solicitud se ha completado y la respuesta est\u00e1 lista.</p> <p>Para realizar alguna acci\u00f3n cuando la solicitud cambie de estado, se utiliza la propiedad <code>onreadystatechange</code>, que se asigna a una funci\u00f3n. Esta funci\u00f3n se ejecutar\u00e1 cada vez que cambie el estado de la solicitud.</p> <pre><code>req.onreadystatechange = function (aEvt) {\n  if (req.readyState == 4) {\n    if (req.status == 200) {\n      console.log(req.responseText);\n    } else {\n      console.log(\"Error loading page\\n\");\n    }\n  }\n};\n</code></pre> <p>Finalmente, enviamos la solicitud al servidor utilizando el m\u00e9todo <code>send</code>. Si estamos enviando datos (por ejemplo, en una solicitud <code>POST</code>), estos se pasan como argumento a <code>send</code>. En una solicitud <code>GET</code>, simplemente pasamos <code>null</code>.</p> <pre><code>req.send(null);\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#ejemplo-completo","title":"Ejemplo Completo","text":"<pre><code>var req = new XMLHttpRequest();\nreq.open('GET', 'http://www.mozilla.org/', true);\nreq.onreadystatechange = function (aEvt) {\n  if (req.readyState == 4) {\n    if (req.status == 200) {\n      console.log(req.responseText);\n    } else {\n      console.log(\"Error loading page\\n\");\n    }\n  }\n};\nreq.send(null);\n</code></pre> <ol> <li> <p>Crear el Objeto XHR:    <pre><code>var req = new XMLHttpRequest();\n</code></pre>    Aqu\u00ed se crea una nueva instancia del objeto <code>XMLHttpRequest</code>.</p> </li> <li> <p>Configurar la Solicitud:    <pre><code>req.open('GET', 'http://www.mozilla.org/', true);\n</code></pre>    Se configura la solicitud para hacer una petici\u00f3n <code>GET</code> a la URL especificada. El tercer par\u00e1metro, <code>true</code>, indica que la solicitud debe ser as\u00edncrona.</p> </li> <li> <p>Monitorear Cambios de Estado:    <pre><code>req.onreadystatechange = function (aEvt) {\n  if (req.readyState == 4) {\n    if (req.status == 200) {\n      console.log(req.responseText);\n    } else {\n      console.log(\"Error loading page\\n\");\n    }\n  }\n};\n</code></pre>    Se define una funci\u00f3n que se ejecuta cada vez que cambia el estado de la solicitud. Cuando <code>readyState</code> es <code>4</code>, significa que la solicitud se ha completado. Si <code>status</code> es <code>200</code>, significa que la solicitud fue exitosa y se imprime la respuesta en la consola. Si el estado es diferente, se imprime un mensaje de error.</p> </li> <li> <p>Enviar la Solicitud:    <pre><code>req.send(null);\n</code></pre>    Finalmente, se env\u00eda la solicitud al servidor.</p> </li> </ol> <p>Este cap\u00edtulo ha cubierto los conceptos b\u00e1sicos y la implementaci\u00f3n de XMLHttpRequest. En cap\u00edtulos posteriores, exploraremos m\u00e9todos modernos como <code>fetch</code> y la forma en que se integran con las caracter\u00edsticas m\u00e1s recientes de JavaScript, como las promesas y la sintaxis <code>async/await</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#fetch","title":"Fetch","text":"<p>La funci\u00f3n <code>fetch</code> de JavaScript proporciona una manera sencilla y poderosa de realizar solicitudes HTTP. Es similar a <code>XMLHttpRequest</code> (XHR), pero utiliza promesas y tiene una sintaxis m\u00e1s moderna y limpia.</p> <pre><code>(()=&gt;{\nfetch('http://127.0.0.1:5500/datos.json')\n .then(\n   function(response) {\n     if (response.status !== 200) {\n       console.log('Looks like there was a problem. Status Code: ' + response.status);\n       return;     \n     }\n     response.json().then(function(data) {\n       console.log(data);\n     });\n   }\n )\n .catch(function(err) {\n   console.log('Fetch Error : ', err);\n });\n})();\n</code></pre> <p>En este ejemplo, <code>fetch</code> solicita un archivo JSON. Si la respuesta tiene un estado diferente de 200 (OK), se imprime un mensaje de error. Si la respuesta es correcta, se convierte a JSON y se imprime.</p>"},{"location":"Moduls/DWEC/ajax.html#objeto-response","title":"Objeto Response","text":"<p>Si la solicitud tiene \u00e9xito, <code>fetch</code> devuelve un objeto <code>Response</code>, que es un flujo (stream) con varias propiedades y m\u00e9todos \u00fatiles.</p> <pre><code>(()=&gt;{\nfetch('https://github.com/').then(function(response) {\n   console.log(response.headers.get('Content-Type'));\n   console.log(response.headers.get('Date'));\n   console.log(response.status);\n   console.log(response.statusText);\n   console.log(response.type);\n   console.log(response.url);\n});\n})();\n</code></pre> <pre><code>Fetch Error :  TypeError: error sending request for url (http://127.0.0.1:5500/datos.json): error trying to connect: tcp connect error: Connection refused (os error 111)\n    at async mainFetch (ext:deno_fetch/26_fetch.js:170:12)\n    at async fetch (ext:deno_fetch/26_fetch.js:391:7)\n</code></pre> <p>Este ejemplo muestra c\u00f3mo acceder a diferentes propiedades del objeto <code>Response</code>, como los encabezados y el estado de la solicitud.</p>"},{"location":"Moduls/DWEC/ajax.html#guardar-los-datos","title":"Guardar los Datos","text":"<p><code>fetch</code> permite obtener el texto o un objeto de la respuesta. Las funciones <code>response.json()</code> y <code>response.text()</code> devuelven promesas que se resuelven con el contenido adecuado. No es posible usar ambas funciones en una misma petici\u00f3n.</p> <pre><code>(()=&gt;{\nfetch(\"https://dwec-daw-default-rtdb.firebaseio.com/productos.json\")\n       .then(response =&gt; response.json())\n       .then(data =&gt; console.log(data));\n\nfetch(\"https://dwec-daw-default-rtdb.firebaseio.com/productos.json\")\n       .then(response =&gt; response.text())\n       .then(data =&gt; console.log(data));\n})();\n</code></pre> <pre><code>https://github.com/\n</code></pre> <p>En estos ejemplos, se hace una solicitud a una URL y se procesan los datos como JSON en el primer caso y como texto en el segundo.</p>"},{"location":"Moduls/DWEC/ajax.html#encadenar-promesas","title":"Encadenar Promesas","text":"<p>Es posible encadenar promesas para manejar el flujo de la solicitud de manera m\u00e1s estructurada.</p> <pre><code>(()=&gt;{\nfunction showStatus(response) {\n   if (response.status &gt;= 200 &amp;&amp; response.status &lt; 300) {\n     return Promise.resolve(response);\n   } else {\n     return Promise.reject(new Error(response.statusText));\n   }\n}\n\nfunction json(response) { \n  return response.json();  \n}\n\nfetch('datos.json')\n   .then(showStatus)\n   .then(json)\n   .then(function(data) {\n     console.log('Request succeeded with JSON response', data);\n   }).catch(function(error) {\n     console.log('Request failed: ', error);\n   });\n  })();\n</code></pre> <pre><code>{\n  \"error\" : \"Permission denied\"\n}\n</code></pre> <p>En este ejemplo, la funci\u00f3n <code>status</code> verifica si la respuesta es correcta, y la funci\u00f3n <code>json</code> convierte la respuesta en un objeto JSON. Luego, se manejan los datos o se capturan errores seg\u00fan corresponda.</p>"},{"location":"Moduls/DWEC/ajax.html#enviar-datos-con-fetch","title":"Enviar Datos con Fetch","text":""},{"location":"Moduls/DWEC/ajax.html#usar-el-metodo-post","title":"Usar el m\u00e9todo POST","text":"<p>Para enviar datos a un servidor, se puede usar el m\u00e9todo <code>POST</code> con <code>fetch</code>.</p> <pre><code>fetch(url, {\n       method: 'post',\n       headers: {\n         \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n       },\n       body: 'foo=bar&amp;lorem=ipsum'\n     })\n     .then(response =&gt; response.json())\n     .then(function (data) {\n       console.log('Request succeeded with JSON response', data);\n     })\n     .catch(function (error) {\n       console.log('Request failed', error);\n     });\n</code></pre> <p>En este ejemplo, se env\u00edan datos codificados en la URL (formato de formulario) al servidor.</p>"},{"location":"Moduls/DWEC/ajax.html#enviar-json","title":"Enviar JSON","text":"<p>Para enviar datos en formato JSON, se debe configurar el encabezado <code>Content-Type</code> y convertir el objeto de datos a JSON.</p> <pre><code>let datos = {username: 'example'};\n\nfetch(url, {\n       method: 'post',\n       headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n       },\n       body: JSON.stringify(datos)\n     })\n     .then(response =&gt; response.json())\n     .then(function (data) {\n       console.log('Request succeeded with JSON response', data);\n     })\n     .catch(function (error) {\n       console.log('Request failed', error);\n     });\n</code></pre> <p>En este ejemplo, un objeto JavaScript se convierte a JSON y se env\u00eda al servidor.</p>"},{"location":"Moduls/DWEC/ajax.html#uso-de-formdata","title":"Uso de FormData","text":"<p><code>FormData</code> es un objeto predefinido en JavaScript que se utiliza para crear pares clave-valor para enviar formularios mediante <code>XMLHttpRequest</code> o <code>fetch</code>.</p> <pre><code>let formElement = document.getElementById(\"myFormElement\"); // Un formulario HTML\nlet formData = new FormData(formElement); // Constructor de FormData con un formulario\n\nformData.append(\"serialnumber\", serialNumber++); // A\u00f1adir m\u00e1s datos\nformData.append(\"afile\", fileInputElement.files[0]); // A\u00f1adir un archivo\n\nfetch('http://localhost:3000/upload', { method: 'POST', body: formData });\n</code></pre> <p>Este ejemplo muestra c\u00f3mo crear un objeto <code>FormData</code> a partir de un formulario HTML y enviar datos adicionales, incluyendo un archivo, al servidor.</p>"},{"location":"Moduls/DWEC/ajax.html#convertir-formdata-a-json","title":"Convertir FormData a JSON","text":"<p>Para enviar <code>FormData</code> como JSON, se puede convertir a un objeto JavaScript y luego a una cadena JSON.</p> <pre><code>let data = new FormData(form);\nlet body = JSON.stringify(Object.fromEntries(data));\n\nreturn fetch(url, {\n   method: 'POST',\n   headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n   },\n   body\n}).then(response =&gt; response.json());\n</code></pre> <p>En este ejemplo, se convierte <code>FormData</code> en un objeto JSON antes de enviarlo.</p>"},{"location":"Moduls/DWEC/ajax.html#cargar-imagenes-en-segundo-plano","title":"Cargar Im\u00e1genes en Segundo Plano","text":"<p>Es posible cargar im\u00e1genes en segundo plano utilizando <code>fetch</code> y el m\u00e9todo <code>blob</code>.</p> <pre><code>&lt;img src=\"placeholder.png\" alt=\"${name}\"&gt;\n\nfetch(image_url)\n.then(response =&gt; response.status == 200 ? response : Promise.reject(response.status))\n.then(response =&gt; response.blob())\n.then(imageBlob =&gt; {\n   let imageURL = URL.createObjectURL(imageBlob);\n   document.querySelector('img').src = imageURL;\n})\n.catch(error =&gt; console.log(error));\n</code></pre> <p>Este ejemplo muestra c\u00f3mo cargar una imagen en segundo plano y actualizar la fuente de una etiqueta <code>&lt;img&gt;</code> con la URL del <code>blob</code> de la imagen.</p> <p>La funci\u00f3n URL.createObjectURL(blob) es un m\u00e9todo del API de URL en JavaScript que permite crear una URL temporal, de tipo \"blob\", que representa un objeto de datos (Blob o File) en el navegador. Esta URL puede ser utilizada para acceder y manipular el contenido del objeto de datos como si fuera un archivo disponible en una URL normal. </p> <p><code>URL.createObjectURL(blob)</code> crea una URL \u00fanica que representa el objeto <code>Blob</code> (o <code>File</code>). Esta URL es v\u00e1lida mientras el documento que la cre\u00f3 est\u00e9 en memoria, y se puede usar como referencia al contenido del objeto de datos. La URL generada permite acceder y manipular el contenido del <code>Blob</code> como si fuera un archivo remoto. La URL no requiere que los datos sean enviados a un servidor; todo se maneja localmente en el navegador. La URL generada puede ser asignada a elementos HTML, como <code>&lt;img&gt;</code>, <code>&lt;video&gt;</code>, <code>&lt;audio&gt;</code>, o cualquier otro elemento que acepte una URL de recursos. Tambi\u00e9n se puede usar para descargar archivos, mostrar previsualizaciones, o procesar datos de archivos de manera local.</p> <p>Las URLs creadas con <code>URL.createObjectURL(blob)</code> ocupan recursos en el navegador. Para liberar estos recursos cuando ya no se necesite la URL, se debe llamar a <code>URL.revokeObjectURL(url)</code>:</p> <pre><code>const objectURL = URL.createObjectURL(file);\n// Usar la URL...\nURL.revokeObjectURL(objectURL); // Liberar la URL cuando ya no sea necesaria\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#construccion-de-urls","title":"Construcci\u00f3n de URLs","text":"<p><code>fetch</code> puede utilizar URLs construidas din\u00e1micamente. Esto es \u00fatil cuando los par\u00e1metros de la consulta cambian en tiempo de ejecuci\u00f3n.</p> <pre><code>let country = `Saint Vincent &amp; the Grenadines`;\n\nfetch(`/api/cities?country=${country}`);\n//\"/api/cities?country=Saint Vincent &amp; the Grenadines\"\n\nurl = `/api/cities?${new URLSearchParams([['country', country]])}`;\n\nfetch(url);\n//\"/api/cities?country=Saint+Vincent+%26+the+Grenadines\"\n</code></pre> <p>En este ejemplo, se construye una URL con par\u00e1metros de consulta utilizando <code>URLSearchParams</code>, asegur\u00e1ndose de que los caracteres especiales est\u00e9n correctamente codificados.</p> <p>Si usamos el constructor con una URL ya formada nos retorna un objeto URLSearchParams, que es un iterable con los datos:</p> <pre><code>const url = new URL(\"http://example.com/search?query=%40\");\nconst searchParams3 = new URLSearchParams(url.search);\nconsole.log(searchParams3.has(\"query\")); // true\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#websockets","title":"WebSockets","text":"<p>WebSocket es una tecnolog\u00eda que proporciona un canal de comunicaci\u00f3n full-duplex sobre un \u00fanico socket TCP. Es decir, permite establecer una conexi\u00f3n persistente entre el cliente y el servidor, donde ambos pueden enviar y recibir datos en tiempo real. Esto es especialmente \u00fatil para aplicaciones que requieren comunicaci\u00f3n bidireccional constante, como chats en l\u00ednea, notificaciones en tiempo real, y juegos multijugador.</p> <p>A continuaci\u00f3n, analizamos un ejemplo de uso de WebSocket en JavaScript.</p>"},{"location":"Moduls/DWEC/ajax.html#establecer-una-conexion-websocket","title":"Establecer una Conexi\u00f3n WebSocket","text":"<pre><code>let socket = new WebSocket(\"ws://localhost:8080\");\n</code></pre> <p>Esta l\u00ednea crea una nueva instancia de WebSocket, abriendo una conexi\u00f3n a la URL proporcionada. En este caso, la URL es <code>\"ws://localhost:8080\"</code>, lo que indica que se est\u00e1 intentando conectar a un servidor WebSocket que est\u00e1 ejecut\u00e1ndose en <code>localhost</code> en el puerto <code>8080</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#manejadores-de-eventos","title":"Manejadores de Eventos","text":""},{"location":"Moduls/DWEC/ajax.html#evento-open","title":"Evento <code>open</code>","text":"<pre><code>socket.addEventListener(\"open\", function(event) {\n   console.log(\"Conexi\u00f3n establecida.\");\n   socket.send(\"\u00a1Hola, servidor!\");\n});\n</code></pre> <p>El evento <code>open</code> se dispara cuando la conexi\u00f3n WebSocket se ha establecido con \u00e9xito. En este manejador, se imprime un mensaje en la consola indicando que la conexi\u00f3n se ha establecido, y se env\u00eda un mensaje al servidor utilizando <code>socket.send(\"\u00a1Hola, servidor!\");</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#evento-message","title":"Evento <code>message</code>","text":"<pre><code>socket.addEventListener(\"message\", function(event) {\n   console.log(\"Mensaje recibido del servidor: \" + event.data);\n});\n</code></pre> <p>El evento <code>message</code> se dispara cada vez que el cliente recibe datos del servidor. El objeto <code>event</code> contiene la propiedad <code>data</code>, que almacena los datos recibidos. En este manejador, los datos recibidos se imprimen en la consola.</p>"},{"location":"Moduls/DWEC/ajax.html#evento-error","title":"Evento <code>error</code>","text":"<pre><code>socket.addEventListener(\"error\", function(error) {\n   console.log(\"Error en la conexi\u00f3n: \" + error);\n});\n</code></pre> <p>El evento <code>error</code> se dispara cuando ocurre un error en la comunicaci\u00f3n WebSocket. En este manejador, el error se imprime en la consola.</p>"},{"location":"Moduls/DWEC/ajax.html#evento-close","title":"Evento <code>close</code>","text":"<pre><code>socket.addEventListener(\"close\", function(event) {\n   console.log(\"Conexi\u00f3n cerrada. C\u00f3digo: \" + event.code);\n});\n</code></pre> <p>El evento <code>close</code> se dispara cuando la conexi\u00f3n WebSocket se cierra. El objeto <code>event</code> contiene una propiedad <code>code</code>, que indica el c\u00f3digo de cierre de la conexi\u00f3n. En este manejador, se imprime un mensaje en la consola indicando que la conexi\u00f3n se ha cerrado y mostrando el c\u00f3digo de cierre.</p>"},{"location":"Moduls/DWEC/ajax.html#tratamiento-de-los-datos","title":"Tratamiento de los Datos","text":"<p>En las aplicaciones web modernas, es com\u00fan recibir datos del servidor en formato JSON, que es un formato ligero para el intercambio de datos. JavaScript proporciona herramientas potentes para trabajar con JSON, permitiendo convertir objetos en JSON y viceversa. Adem\u00e1s, tambi\u00e9n es importante poder almacenar datos en el lado del cliente para mejorar la experiencia del usuario. En este cap\u00edtulo, exploraremos c\u00f3mo convertir objetos a JSON y c\u00f3mo trabajar con almacenamiento en el lado del cliente, incluyendo cookies y LocalStorage.</p>"},{"location":"Moduls/DWEC/ajax.html#convertir-objetos-a-json","title":"Convertir Objetos a JSON","text":"<p>JavaScript permite convertir objetos en cadenas JSON utilizando el m\u00e9todo <code>JSON.stringify</code>. Este m\u00e9todo es \u00fatil cuando necesitamos enviar datos al servidor o almacenarlos en el lado del cliente.</p> <pre><code>(()=&gt;{\nclass Apple {\n  constructor(type){\n     this.type = type;\n     this.color = \"red\";\n  }\n}\nlet  apple1 = new Apple('Golden'); // Se crea una instancia\nlet appleJson = JSON.stringify(apple1);\nconsole.log(appleJson);\n})();\n</code></pre> <pre><code>{\"type\":\"Golden\",\"color\":\"red\"}\n</code></pre> <p>En este ejemplo: 1. Definimos una clase <code>Apple</code> que tiene un constructor que inicializa el tipo y el color de la manzana. 2. Creamos una instancia de <code>Apple</code> con el tipo 'Golden'. 3. Convertimos la instancia en una cadena JSON usando <code>JSON.stringify</code>. 4. Imprimimos la cadena JSON resultante en la consola.</p> <p>El resultado en la consola ser\u00e1: <code>{\"type\":\"Golden\",\"color\":\"red\"}</code>, que es la representaci\u00f3n JSON del objeto <code>apple1</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#convertir-json-a-objetos","title":"Convertir JSON a Objetos","text":"<p>Para convertir una cadena JSON en un objeto de JavaScript, utilizamos el m\u00e9todo <code>JSON.parse</code>. Esto es \u00fatil cuando recibimos datos del servidor en formato JSON y necesitamos trabajar con ellos en nuestro c\u00f3digo.</p> <pre><code>(()=&gt;{\nclass Hero {\n  constructor(name, car){\n     this.name = name;\n     this.car = car;\n  }\n}\nlet heroJSON = '{\"name\":\"Max\",\"car\":\"V8\"}';\nlet heroObject = JSON.parse(heroJSON);\nlet heroClass = Object.assign(new Hero, heroObject);\nconsole.log(heroObject, heroClass);\n})();\n</code></pre> <pre><code>{ name: \"Max\", car: \"V8\" } Hero { name: \"Max\", car: \"V8\" }\n</code></pre> <p>En este ejemplo: 1. Definimos una clase <code>Hero</code> que tiene un constructor que inicializa el nombre y el coche del h\u00e9roe. 2. Creamos una cadena JSON que representa un h\u00e9roe. 3. Convertimos la cadena JSON en un objeto usando <code>JSON.parse</code>. 4. Asignamos las propiedades del objeto JSON a una nueva instancia de <code>Hero</code> usando <code>Object.assign</code>. 5. Imprimimos el objeto JSON y la instancia de <code>Hero</code> en la consola.</p> <p>El resultado en la consola mostrar\u00e1 el objeto plano y la instancia de <code>Hero</code> con las propiedades correspondientes.</p>"},{"location":"Moduls/DWEC/ajax.html#conversion-de-binarios-para-enviar-como-json","title":"Conversi\u00f3n de binarios para enviar como JSON","text":"<p>Si se necesita enviar un binario dentro de un mensaje JSON, podemos convertirlo a Base64:</p> <pre><code>document.getElementById('fileForm').addEventListener('submit', event =&gt; {\n    event.preventDefault();\n    const fileInput = document.getElementById('fileInput');\n    const file = fileInput.files[0];\n    const reader = new FileReader();\n\n    reader.addEventListener('loadend', () =&gt; {\n        const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\n        const jsonData = {\n            fileName: file.name,\n            fileType: file.type,\n            fileData: base64String\n        };\n\n        fetch('/upload-json', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(jsonData)\n        })\n        .then(response =&gt; response.json())\n        .then(data =&gt; console.log(data))\n        .catch(error =&gt; console.error('Error:', error));\n    });\n\n    reader.readAsDataURL(file);\n});\n</code></pre>"},{"location":"Moduls/DWEC/ajax.html#almacenamiento-en-el-lado-del-cliente","title":"Almacenamiento en el Lado del Cliente","text":""},{"location":"Moduls/DWEC/ajax.html#cookies","title":"Cookies","text":"<p>Las cookies son peque\u00f1os fragmentos de datos almacenados en el navegador del usuario. Son \u00fatiles para almacenar informaci\u00f3n persistente que debe enviarse con cada solicitud HTTP al servidor, como sesiones de usuario.</p>"},{"location":"Moduls/DWEC/ajax.html#ejemplo","title":"Ejemplo","text":"<pre><code>document.cookie = \"username=John Doe; expires=Thu, 18 Dec 2021 12:00:00 UTC; path=/;\";\n</code></pre> <p>En este ejemplo: 1. Creamos una cookie llamada <code>username</code> con el valor <code>John Doe</code>. 2. Establecemos una fecha de expiraci\u00f3n para la cookie. 3. Definimos el <code>path</code> para especificar la ruta en la que la cookie est\u00e1 disponible.</p>"},{"location":"Moduls/DWEC/ajax.html#manipular-cookies","title":"Manipular Cookies","text":"<pre><code>var x = document.cookie;  // Leer todas las cookies\ndocument.cookie = \"username=John Smith; expires=Thu, 18 Dec 2021 12:00:00 UTC; path=/;\";  // Modificar una cookie\ndocument.cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";  // Borrar una cookie\n</code></pre> <p>En este ejemplo: 1. Leemos todas las cookies disponibles. 2. Modificamos la cookie <code>username</code>. 3. Borramos la cookie <code>username</code> estableciendo una fecha de expiraci\u00f3n pasada.</p> <p>Para una gesti\u00f3n m\u00e1s avanzada de cookies, se recomienda utilizar las funciones proporcionadas por la W3C: W3Schools - Cookies.</p>"},{"location":"Moduls/DWEC/ajax.html#localstorage","title":"LocalStorage","text":"<p>LocalStorage permite almacenar datos en el navegador de forma persistente. Los datos persisten incluso despu\u00e9s de cerrar el navegador.</p>"},{"location":"Moduls/DWEC/ajax.html#ejemplo_1","title":"Ejemplo","text":"<pre><code>// Guardar\nlocalStorage.setItem(\"lastname\", \"Smith\");\n// Obtener\nvar lastname = localStorage.getItem(\"lastname\");\n// Borrar\nlocalStorage.removeItem(\"lastname\");\n</code></pre> <p>En este ejemplo: 1. Guardamos un valor con la clave <code>lastname</code> en LocalStorage. 2. Recuperamos el valor almacenado usando la clave <code>lastname</code>. 3. Eliminamos el valor asociado a la clave <code>lastname</code>.</p>"},{"location":"Moduls/DWEC/ajax.html#indexeddb","title":"IndexedDB","text":"<p>IndexedDB es una API de bajo nivel para almacenar grandes cantidades de datos estructurados. Es una base de datos transaccional y as\u00edncrona que permite almacenar archivos y realizar b\u00fasquedas avanzadas.</p>"},{"location":"Moduls/DWEC/ajax.html#caracteristicas-de-indexeddb","title":"Caracter\u00edsticas de IndexedDB","text":"<ul> <li>Hasta 50MB de almacenamiento.</li> <li>API as\u00edncrona para operaciones de lectura y escritura.</li> <li>Transaccional para garantizar la integridad de los datos.</li> <li>M\u00e1s compleja que LocalStorage.</li> </ul>"},{"location":"Moduls/DWEC/ajax.html#ejemplo-basico-de-indexeddb","title":"Ejemplo B\u00e1sico de IndexedDB","text":"<p>IndexedDB es m\u00e1s compleja de manejar que LocalStorage o cookies, pero ofrece muchas m\u00e1s capacidades. Aqu\u00ed presentamos un ejemplo muy b\u00e1sico para ilustrar su uso:</p> <pre><code>let request = indexedDB.open(\"myDatabase\", 1);\n\nrequest.onupgradeneeded = function(event) {\n  let db = event.target.result;\n  let objectStore = db.createObjectStore(\"customers\", { keyPath: \"id\" });\n  objectStore.createIndex(\"name\", \"name\", { unique: false });\n  objectStore.createIndex(\"email\", \"email\", { unique: true });\n};\n\nrequest.onsuccess = function(event) {\n  let db = event.target.result;\n  let transaction = db.transaction([\"customers\"], \"readwrite\");\n  let objectStore = transaction.objectStore(\"customers\");\n  let request = objectStore.add({ id: 1, name: \"John Doe\", email: \"john.doe@example.com\" });\n\n  request.onsuccess = function(event) {\n    console.log(\"Customer added to the database\");\n  };\n\n  request.onerror = function(event) {\n    console.log(\"Error adding customer: \", event.target.error);\n  };\n};\n</code></pre> <p>En este ejemplo: 1. Abrimos una conexi\u00f3n a IndexedDB y, si es la primera vez, se crea o actualiza la base de datos. 2. Definimos un <code>objectStore</code> para almacenar datos de clientes con un \u00edndice para <code>name</code> y <code>email</code>. 3. A\u00f1adimos un cliente a la base de datos dentro de una transacci\u00f3n y manejamos los eventos de \u00e9xito y error.</p> <pre><code>\n</code></pre>"},{"location":"Moduls/DWEC/angular_menu.html","title":"Angular menu","text":""},{"location":"Moduls/DWEC/angular_menu.html#angular","title":"Angular","text":"<p>Typescript </p> <p>Introducci\u00f3n a Angular</p> <p>Consejos</p> <p>Comunicaci\u00f3n con el servidor en Angular</p> <p>Rutas en Angular</p> <p>Formularios en Angular</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html","title":"La Web i el Desenvolupament Web","text":"<p>La Web \u00e9s un dels conjunts de protocols m\u00e9s reeixits d'Internet, i la seva creaci\u00f3 va marcar un abans i un despr\u00e9s en la manera com accedim i compartim informaci\u00f3. Va ser inventada per Tim Berners-Lee al CERN (Organitzaci\u00f3 Europea per a la Recerca Nuclear) i ha evolucionat fins a convertir-se en una eina fonamental en la vida quotidiana i professional de milions de persones.</p> <p>La Web es basa en el concepte de <code>hipertext</code>, una tecnologia que permet enlla\u00e7ar diferents documents i recursos a trav\u00e9s d'enlla\u00e7os o hipervincles. Aquesta capacitat denlla\u00e7 \u00e9s el que permet la navegaci\u00f3 entre diferents p\u00e0gines i llocs web.</p> <p>El World Wide Web Consortium (W3C) \u00e9s lorganitzaci\u00f3 que sencarrega de desenvolupar est\u00e0ndards per a la Web. El seu objectiu \u00e9s garantir que la Web continu\u00ef sent oberta, accessible i funcional per a tothom. Aquests est\u00e0ndards inclouen tecnologies fonamentals com HTML, CSS i JavaScript.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#components-de-la-web","title":"Components de la Web","text":"<p>La Web es compon de diversos elements clau:</p> <ul> <li>Hipertext: Permet la creaci\u00f3 denlla\u00e7os entre documents.</li> <li>Protocol HTTP: \u00c9s el protocol de comunicaci\u00f3 que permet la transfer\u00e8ncia de dades a la Web.</li> <li>Servidors i Clients: Els servidors allotgen els llocs web i els clients (navegadors web) els sol\u00b7liciten i mostren.</li> <li>DNS (Sistema de Noms de Domini): Tradueix els noms de domini llegibles per humans (com www.ejemplo.com) en adreces IP que els ordinadors poden entendre.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#el-desenvolupament-web","title":"El Desenvolupament Web","text":"<p>El desenvolupament web \u00e9s un camp multidisciplinari que abasta diverses \u00e0rees i tecnologies. A continuaci\u00f3, es descriuen les principals \u00e0rees professionals del desenvolupament web:</p> <p>Contingut</p> <p>El contingut es refereix a l'organitzaci\u00f3, sem\u00e0ntica, presentaci\u00f3 i estructura de la informaci\u00f3 a la web. El llenguatge fonamental per al contingut web \u00e9s HTML (HyperText Markup Language), que defineix lestructura i el contingut duna p\u00e0gina web.</p> <p>Disseny</p> <p>El disseny se centra en laspecte visual i els elements gr\u00e0fics duna p\u00e0gina web. Utilitza tecnologies com CSS (Cascading Style Sheets) per definir estils i plantilles que controlen l'aparen\u00e7a de les p\u00e0gines.</p> <p>Tecnologia Frontend</p> <p>Les tecnologies frontend s\u00f3n les que s'executen al navegador de l'usuari i s\u00f3n responsables dels elements interactius d'una p\u00e0gina web. El principal llenguatge de programaci\u00f3 frontend \u00e9s JavaScript, que permet crear interf\u00edcies din\u00e0miques i reactives.</p> <p>Tecnologia Backend</p> <p>El backend s'encarrega de la l\u00f2gica del servidor, l'acc\u00e9s a les bases de dades i el processament de les sol\u00b7licituds dels usuaris. Els llenguatges comuns de backend inclouen PHP, Python i Node.js, entre d'altres.</p> <p>Distribuci\u00f3</p> <p>La distribuci\u00f3 fa refer\u00e8ncia a com es despleguen i gestionen els llocs web. Aix\u00f2 inclou tant el maquinari (servidors, m\u00e0quines virtuals, contenidors) com el programari (servidors web com Apache, IIS i NGINX).</p> <p>Prop\u00f2sit</p> <p>Les webs es fan per a alguna cosa. Definir el prop\u00f2sit pot ser que no sigui la tasca m\u00e9s t\u00e8cnica, per\u00f2 calen perfils intermedis que s\u00e0piguen traslladar les necessitats dels clients als desenvolupadors. O fins i tot inventar nous models de negoci basats en tecnologies web.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#arquitectura-client-servidor","title":"Arquitectura Client - Servidor","text":"<p>L'arquitectura client-servidor \u00e9s el model fonamental en qu\u00e8 es basa la web. Es divideix en dues parts principals:</p> <ul> <li>Server-side (Costat del servidor)</li> <li>Maquinari: Inclou servidors i elements de xarxa, m\u00e0quines virtuals i contenidors.</li> <li>Programari: Involucra servidors web (com Apache, IIS, NGINX) i llenguatges CGI (com Perl, PHP, C). Tamb\u00e9 inclou llenguatges i frameworks amb servidors web integrats, com ara Python, Java, Node.js i C++.</li> <li>Client-side (Costat del client)</li> <li>Clients web: navegadors web com ara Firefox, Chrome, Vivaldi, Opera, Edge i Internet Explorer.</li> <li>Llenguatges de marques: HTML, XHTML, HTML5 i CSS.</li> <li>Llenguatges de programaci\u00f3 de l'entorn Client: Principalment JavaScript.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#el-cami-del-frontend","title":"El Cam\u00ed del Frontend","text":"<p>Per a m\u00e9s detalls, podeu consultar Full de ruta per a desenvolupadors de front-end.</p> <p>Aquest terme, extret de la web anterior, reflecteix l'itinerari formatiu recomanat per ser un professional del desenvolupament web a la part del Frontend. Aquest m\u00f2dul no \u00e9s suficient per dominar-ho tot i \u00e9s important ser conscients que estem veient una petita part de les m\u00faltiples possibilitats que tenim al nostre abast.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#del-costat-del-servidor-vs-del-costat-del-client","title":"Del costat del servidor vs del costat del client","text":"<p>En el desenvolupament web, tant el costat del servidor (server-side) com el costat del client (client-side) juguen els seus rols. No obstant aix\u00f2, moltes tasques poden dur-se a terme a qualsevol dels dos costats, i lelecci\u00f3 don implementar una funcionalitat espec\u00edfica dep\u00e8n de diversos factors, com la tecnologia adequada per al cas o la comoditat del desenvolupador amb una tecnologia particular.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#tasques-comunes-a-server-side-i-client-side","title":"Tasques comunes a Server-side i Client-side","text":"<ul> <li>Validar formularis: La validaci\u00f3 es pot fer al client per millorar l'experi\u00e8ncia de l'usuari, per\u00f2 s'ha de verificar novament al servidor per raons de seguretat.</li> <li>Desar dades permanents: Generalment es fa al servidor utilitzant bases de dades.</li> <li>Presentaci\u00f3 de diapositives: \u00c9s m\u00e9s com\u00fa al costat del client, utilitzant JavaScript o frameworks de frontend.</li> <li>Eliminar un par\u00e0graf: Aquesta tasca es realitza t\u00edpicament al client, utilitzant JavaScript per modificar el DOM (Document Object Model).</li> <li>Calcular dades: Els c\u00e0lculs es poden fer a banda i banda, depenent de la naturalesa del c\u00e0lcul i els requisits de seguretat.</li> <li>Accedir a bases de dades: Aquesta tasca es realitza al servidor per mantenir la seguretat i la integritat de les dades.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#javascript-al-costat-del-client","title":"JavaScript al costat del client","text":"<p>JavaScript \u00e9s el llenguatge de programaci\u00f3 m\u00e9s utilitzat al costat del client. Tot i aix\u00f2, t\u00e9 les seves limitacions i particularitats:</p> <ul> <li>Limitacions de JavaScript:</li> <li>No podeu escriure directament al servidor.</li> <li>No tots els navegadors suporten JavaScript i es pot desactivar, de manera que una p\u00e0gina web ben dissenyada hauria de funcionar sense.</li> <li>No podeu modificar prefer\u00e8ncies del navegador, llan\u00e7ar aplicacions, llegir o escriure fitxers al client, retransmetre streaming, enviar correus electr\u00f2nics, interactuar amb llenguatges de servidor, accedir a un web d'un domini diferent, protegir l'origen de les imatges, ni implementar multiprocessos.</li> <li>Tecnologia as\u00edncrona:</li> <li>JavaScript pot sol\u00b7licitar dades al servidor de forma as\u00edncrona utilitzant tecnologies com AJAX (Asynchronous JavaScript and XML).</li> <li>Usos de JavaScript:</li> <li>Fer que la web reaccioni a la interacci\u00f3 de lusuari.</li> <li>Proporcionar una interf\u00edcie agradable per a les dades.</li> <li>Controlar finestres, marcs i applets al document HTML.</li> <li>Preprocessar dades abans d'enviar-les al servidor.</li> <li>Modificar l'estil i el contingut de manera din\u00e0mica en funci\u00f3 de la interacci\u00f3 de l'usuari.</li> <li>Sol\u00b7licitar o enviar fitxers al servidor.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#compatibilitat-i-validacio-html","title":"Compatibilitat i Validaci\u00f3 HTML","text":"<p>Per evitar problemes de compatibilitat, el codi HTML ha de ser v\u00e0lid. Es pot utilitzar el validador d'HTML del W3C (https://validator.w3.org/) per assegurar-se que el codi compleixi amb els est\u00e0ndards.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#seguretat-en-javascript","title":"Seguretat en JavaScript","text":"<p>El JavaScript s'executa en un entorn segur sense contacte directe amb el sistema operatiu del client. Implementa una \"pol\u00edtica del mateix origen\", cosa que significa que nom\u00e9s t\u00e9 acc\u00e9s a dades rebudes del mateix servidor des del qual va ser carregat.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#entorns-de-programacio-web-per-al-client","title":"Entorns de Programaci\u00f3 Web per al Client","text":"<p>L'elecci\u00f3 del programari per al desenvolupament web dep\u00e8n de les necessitats i la complexitat del projecte:</p> <ul> <li>Programari per a modificacions casuals:</li> <li>Editors de text lleugers i r\u00e0pids com Gedit, Nano, Notepad.</li> <li>Editors de text avan\u00e7ats:</li> <li>Eines m\u00e9s potents com Sublim Text, Brackets, Jedit, Visual Studio Code, Vim.</li> <li>Entorns de Desenvolupament Integrats (IDEs):</li> <li>Solucions completes com NetBeans, Eclipse, WebStorm.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#preparar-lentorn-de-desenvolupament","title":"Preparar l'entorn de desenvolupament","text":"<p>En un entorn de desenvolupament t\u00edpic, com una classe de programaci\u00f3 web, es pot utilitzar Visual Studio Code amb les extensions seg\u00fcents:</p> <ul> <li>M\u00e9s bonica: Per formatar fitxers de manera autom\u00e0tica, ja sigui manualment o en desar.</li> <li>EsLint: Ajuda a detectar errors d'estil o programaci\u00f3 que JavaScript no pot detectar per si mateix (requereix instal\u00b7lar eslint al projecte).</li> <li>Servidor en directe: Per provar la web en un servidor local de manera r\u00e0pida i senzilla.</li> </ul> <p>M\u00e9s endavant anirem instal\u00b7lant alguna extensions m\u00e9s.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#altres-eines","title":"Altres Eines","text":"<ul> <li>Tecla F12 als navegadors: Accedeix a les eines de desenvolupament del navegador.</li> <li>Edici\u00f3 per a desenvolupadors de Firefox: Una versi\u00f3 del navegador Firefox amb eines avan\u00e7ades per a desenvolupadors web.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#tipus-daplicacions-web-segons-el-frontend","title":"Tipus d'aplicacions web segons el Frontend","text":"<p>El desenvolupament d'aplicacions web ha evolucionat significativament amb el temps i avui dia hi ha diverses maneres d'abordar el frontend. A continuaci\u00f3, explorarem els diferents tipus d'aplicacions web segons les tecnologies de frontend que es facin servir, aix\u00ed com l'evoluci\u00f3 de les mateixes.</p> <ul> <li>Amb JavaScript 'Vanilla': Es refereix a la utilitzaci\u00f3 de JavaScript pur sense cap biblioteca o framework addicional. \u00c9s una manera directa i eficient de programar sobretot quan s\u00f3n aplicacions petites i senzilles.</li> <li>Amb Biblioteques:</li> <li>JQuery: Facilita la manipulaci\u00f3 del DOM, esdeveniments i AJAX.</li> <li>Prototip: Simplifica les tasques de programaci\u00f3 orientada a objectes en JavaScript.</li> <li>D3.js: S'utilitza per crear visualitzacions de dades.</li> <li>Bootstrap: Biblioteca de CSS i JavaScript per a disseny responsiu.</li> <li>View.js: Ofereix una manera progressiva de construir interf\u00edcies dusuari.</li> <li>Reacciona: Biblioteca per construir interf\u00edcies d'usuari, principalment en aplicacions d'una sola p\u00e0gina.</li> <li>Con Frameworks:</li> <li>Angular: Framework de JavaScript de Google per construir aplicacions din\u00e0miques duna sola p\u00e0gina.</li> <li>Reacciona: Encara que \u00e9s una biblioteca, tamb\u00e9 s'utilitza com a framework quan es combina amb altres eines.</li> <li>View.js: Igual que React, es pot considerar un framework quan s'utilitza en projectes m\u00e9s grans.</li> <li>Phaser: Framework per al desenvolupament de jocs en HTML5.</li> <li>Con Frameworks Full Stack:</li> <li>Odoo: Plataforma de codi obert que proporciona un conjunt complet d'aplicacions empresarials.</li> <li>Blitz: Framework de React basat en Next.js per a aplicacions de pila completa.</li> <li>Next.js: Framework de React per a aplicacions de servidor i client.</li> <li>SvelteKit: Framework per construir aplicacions r\u00e0pides i modernes.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#evolucio-de-les-aplicacions-web","title":"Evoluci\u00f3 de les Aplicacions Web","text":"<ol> <li>P\u00e0gines Web Est\u00e0tiques: Les primeres aplicacions web eren simples p\u00e0gines est\u00e0tiques amb hipervincles.</li> <li>P\u00e0gines Web Generades pel Servidor: Amb el temps, es va introduir una mica de JavaScript per millorar la interacci\u00f3.</li> <li>Introducci\u00f3 d'AJAX: Permet carregar o pujar dades al servidor de manera as\u00edncrona, millorant la interactivitat sense recarregar la p\u00e0gina.</li> <li>Aplicaci\u00f3 d'una sola p\u00e0gina (SPA): Les aplicacions d'una sola p\u00e0gina es comuniquen amb el servidor usant JSON o XML, proporcionant una experi\u00e8ncia m\u00e9s fluida.</li> </ol> <p>Evoluci\u00f3 de les aplicacions web.</p> <p>Actualment es poden fer p\u00e0gines web de moltes maneres. En aquest llibre, cap al final, ens enfoquem m\u00e9s a imitar els frameworks actuals, que solen estar pensats per a SPA amb una API. No obstant aix\u00f2, es poden fer p\u00e0gines nom\u00e9s amb HTML est\u00e0tic, o generat una vegada a partir de Markdown, com aquest mateix llibre (Jekyll, Jupyter Books...), tamb\u00e9 es pot generar HTML amb PHP, Node, Java... O es pot tenir un CMS com a Wordpress i programar plugins. Es pot tenir un CMS Headless o generat mitjan\u00e7ant Micro-Frontends. O aplicacions progressives PWA o H\u00edbrides amb Ionic i Cordova. Pel que fa a servir-les, tenim els hostings i servidors tradicionals o \"Serverless\", plataformes \"Low Code\"... La llista no s'acaba i cadascuna d'aquestes idees t\u00e9 moltes m\u00e9s opcions.</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#aplicacions-duna-sola-pagina-spa","title":"Aplicacions d'una sola p\u00e0gina (SPA)","text":"<ul> <li>SPA com a sobreenginyeria: En molts casos, utilitzar SPA pot complicar innecess\u00e0riament el desenvolupament web. Tot seguit veurem la justificaci\u00f3 per fer web d'aquesta manera.</li> <li>Freq\u00fc\u00e8ncia d'\u00fas: \u00c9s important considerar si l'aplicaci\u00f3 ser\u00e0 utilitzada constantment o espor\u00e0dicament. Una aplicaci\u00f3 web utilitzada espor\u00e0dicament no ha de ser molt pesada i \u00e9s millor que sigui generada pel servidor o est\u00e0tica per millorar el SEO. No obstant aix\u00f2, una aplicaci\u00f3 web que el client mant\u00e9 sempre oberta, pot ser m\u00e9s agradable dutilitzar si \u00e9s una SPA.</li> <li>Servidor vs Client: Crear l'HTML i l'estil al servidor pot ser menys complicat, per\u00f2 en aplicacions grans, podeu sobrecarregar el servidor i dificultar la separaci\u00f3 de la vista del model i controlador.</li> <li>SPA al nostre m\u00f2dul: Optarem per una SPA pel fet que \u00e9s m\u00e9s adequat per al m\u00f2dul que estem desenvolupant. Una SPA requereix saber construir elements del DOM, comunicar-se amb el servidor mitjan\u00e7ant peticions as\u00edncrones amb Javascript i manejar els esdeveniments i la reactivitat. Per tant, \u00e9s l'escusa perfecta per impartir els nostres continguts.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#entre-la-pagina-web-i-lapp","title":"Entre la p\u00e0gina web i l'APP","text":"<ol> <li>P\u00e0gines Web: Contingut est\u00e0tic i din\u00e0mic accessible a trav\u00e9s de navegadors.</li> <li>Aplicacions Web: Poden ser SPA o no.</li> <li>Aplicacions Web Responsives: Dissenyades per adaptar-se a diferents dispositius.</li> <li>PWA (aplicaci\u00f3 web progressiva): Combinen el millor de les p\u00e0gines web i les aplicacions m\u00f2bils.</li> <li>Apps H\u00edbrides: Utilitzen frameworks com Ionic per funcionar en m\u00faltiples plataformes.</li> <li>Aplicacions pr\u00e0cticament natives: Utilitzen tecnologies com React Native o Flutter per apropar-se al rendiment de les aplicacions natives.</li> </ol>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#les-biblioteques","title":"Les Biblioteques","text":"<ul> <li>Caracter\u00edstiques: Aporten funcionalitats espec\u00edfiques al llenguatge de programaci\u00f3.</li> <li>Flexibilitat: No obliguen a canviar la manera de programar.</li> <li>Simplificaci\u00f3: Faciliten la programaci\u00f3 de tasques concretes.</li> <li>Desavantatges: Poden crear depend\u00e8ncia al programador.</li> <li>Reempla\u00e7ament: Algunes biblioteques, com Underscore, Lodash o JQuery, han perdut rellev\u00e0ncia amb la introducci\u00f3 d'ES6.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#els-frameworks","title":"Els Frameworks","text":"<ul> <li>Modificaci\u00f3: Canvien completament la manera de programar.</li> <li>Integraci\u00f3: S'encarreguen de plantilles, comunicacions, encaminaments, components, m\u00f2duls, etc.</li> <li>Corba d'aprenentatge: S\u00f3n complexos d'aprendre.</li> <li>Efici\u00e8ncia: Un cop dominats, fan la programaci\u00f3 m\u00e9s \u00e0gil i correcta.</li> <li>In\u00e8rcia: Poden dificultar el canvi a un altre framework.</li> <li>Obsolesc\u00e8ncia: Si el framework queda obsolet, la web tamb\u00e9.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#utilitat-dels-frameworks","title":"Utilitat dels Frameworks","text":"<ul> <li>Aplicacions espec\u00edfiques: S\u00f3n \u00fatils si es desenvolupen per a una aplicaci\u00f3 en particular.</li> <li>Normes: S\u00f3n valuosos si permeten exportar components.</li> <li>Valor afegit: Han d'aportar una cosa \u00fanica.</li> <li>Aplicacions no cr\u00edtiques: S\u00f3n ideals per a aplicacions que no s\u00f3n cr\u00edtiques.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#obtencio-de-biblioteques-i-frameworks","title":"Obtenci\u00f3 de Biblioteques i Frameworks","text":"<ul> <li>Desc\u00e0rrega directa: Descarregar un fitxer .js o un directori comprimit del web oficial i copiar-lo al projecte.</li> <li>CDN: Utilitzar un CDN directament des de la web oficial.</li> <li>Gestors de paquets: Utilitzar NPM o Yarn per gestionar depend\u00e8ncies.</li> </ul>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#modes-i-tendencies","title":"Modes i Tend\u00e8ncies","text":"<p>Les xarxes socials s\u00f3n plenes de gent intentant vendre el seu curs. Al m\u00f3n professional hi ha molta m\u00e9s gent treballant silenciosament i efica\u00e7ment en productes de qualitat i duradors. Encara que els primers tinguin una mica de ra\u00f3 a dir que PHP, JQuery o altres estan obsolets, el m\u00f3n laboral de vegades diu el contrari. Cal prendre una certa dist\u00e0ncia per triar la millor tecnologia per a cada ocasi\u00f3. (https://www.bitecode.dev/p/hype-cycles)</p>"},{"location":"Moduls/DWEC/desenvolupamentfrontend.html#posar-la-web-en-produccio","title":"Posar la Web en Producci\u00f3","text":"<p>Perqu\u00e8 una web amb HTML, CSS i Javascript funcioni tan sols necessitem un servidor web que serveixi <code>est\u00e0ticament</code> aquests fitxers quan se us faci una petici\u00f3 HTTP. Aquest servidor sol estar accessible per Internet mitjan\u00e7ant SFTP, SSH o qualsevol protocol. Aquests HTML, CSS i JS poden ser tractats de dues maneres:</p> <ol> <li>M\u00e8tode tradicional: Copiar tot el contingut de les carpetes al servidor al voltant del fitxer index.html.</li> <li>Eina de creaci\u00f3 de JavaScript: Utilitzar eines que compilen el codi font, el minifiquen, unifiquen, optimitzen i comprimeixen per millorar la velocitat de c\u00e0rrega i evitar incompatibilitats entre navegadors.</li> </ol> <p>M\u00e9s endavant, al cap\u00edtol del CI/CD parlarem d'una metodologia per automatitzar tot el proc\u00e9s. Amb aquesta metodologia podrem centrar-nos a escriure codi c\u00f2modament mentre que les nostres eines ho proven tot i ho posen en producci\u00f3.</p>"},{"location":"Moduls/DWEC/dom.html","title":"DOM","text":""},{"location":"Moduls/DWEC/dom.html#dom-en-javascript","title":"DOM en JavaScript","text":"<p>El DOM (Document Object Model) \u00e9s una interf\u00edcie de programaci\u00f3 que permet als scripts actualitzar el contingut, l'estructura i l'estil d'un document mentre aquest s'est\u00e0 visualitzant al navegador.</p>"},{"location":"Moduls/DWEC/dom.html#estructura-del-document-html","title":"Estructura del Document HTML","text":"<p>El DOM representa l'estructura d'un document HTML i l'entorn en el que s'executa com una jerarquia d'objectes. Els principals components s\u00f3n:</p> <ul> <li>Window: Representa la finestra del navegador i \u00e9s l'objecte global en els scripts del navegador.</li> <li>Document: Representa el document HTML que es carrega a la finestra.</li> </ul> <p>A m\u00e9s de <code>window</code> i <code>document</code>, hi ha diversos altres objectes principals accessibles a l'entorn d'una p\u00e0gina web, aquests es denominen <code>Web APIs</code> :</p> <ol> <li>Navigator: Proporciona informaci\u00f3 sobre el navegador. -   <code>navigator.userAgent</code> -   <code>navigator.language</code> -   <code>navigator.geolocation</code> -   <code>navigator.getBattery()</code></li> <li>Screen: Proporciona informaci\u00f3 sobre la pantalla de l'usuari. -   <code>screen.width</code> -   <code>screen.height</code> -   <code>screen.availWidth</code> -   <code>screen.availHeight</code></li> <li>History: Permet la manipulaci\u00f3 de l'historial del navegador. -   <code>history.back()</code> -   <code>history.forward()</code> -   <code>history.go()</code></li> <li>Location: Proporciona la URL actual de la finestra. -   <code>location.href</code> -   <code>location.hostname</code> -   <code>location.pathname</code> -   <code>location.search</code> -   <code>location.hash</code> -   <code>location.reload()</code></li> <li>Storage APIs: LocalStorage, sessionStorage, IndexedDB</li> <li>Network APIs: XMLHttpRequest, fetch</li> <li>Console: Proporciona acc\u00e9s a la consola de depuraci\u00f3 del navegador.</li> <li>WebSocket: Proporciona una interf\u00edcie per a les connexions WebSocket.</li> <li>Worker: Permet l'execuci\u00f3 de scripts en segon pla.</li> </ol>"},{"location":"Moduls/DWEC/dom.html#dom-window","title":"DOM: Window","text":"<p><code>Window</code> \u00e9s un objecte predefinit en els navegadors web que representa la finestra en la qual es mostra el document. Alguns m\u00e8todes importants de <code>window</code> inclouen:</p> <ul> <li><code>alert()</code>, <code>prompt()</code>: M\u00e8todes per mostrar di\u00e0legs.</li> <li><code>setTimeout(funci\u00f3, temps)</code>: Executa una funci\u00f3 despr\u00e9s d'un temps especificat.</li> <li><code>setInterval(funci\u00f3, temps)</code>: Executa una funci\u00f3 repetidament a intervals de temps especificats.</li> <li><code>clearTimeout(identificador)</code>: Cancel\u00b7la un <code>setTimeout</code> programat.</li> </ul> <p>Aquests m\u00e8todes no solen invocar-se amb <code>window.setTimeout()</code>, per exemple, perqu\u00e8 s\u00f3n accessibles directament en estar en l'\u00e0mbit global. De fet, qualsevol funci\u00f3 o variable <code>var</code> declarada en l'\u00e0mbit global passa a ser un atribut de l'objecte window:</p> <pre><code>var globalVar = \"I'm global!\";\nfunction globalFunction() { console.log(\"I'm a global function!\");\n}\nconsole.log(window.globalVar); // \"I'm global!\"\nwindow.globalFunction(); // \"I'm a global function!\"\n</code></pre> <p>Aix\u00f2 no passa amb variables declarades amb <code>let</code> o <code>const</code>. L'especificaci\u00f3 d'ECMAScript busca millorar la claredat i previsibilitat del codi. En evitar que let i const es converteixin en propietats de l'objecte window, es fomenta un disseny de codi m\u00e9s modular i amb menys depend\u00e8ncies globals.</p> <p>Window no est\u00e0 disponible quan programem per<code>Node</code> o altres int\u00e8rprets de servidor. Per aquesta ra\u00f3, el Javascript dedicat al DOM hauria d'estar separat de funcions normals, de manera que aquestes es puguin reaprofitar si part de la l\u00f2gica es mou al servidor.</p>"},{"location":"Moduls/DWEC/dom.html#dom-buscar-nodes","title":"DOM: Buscar Nodes","text":"<p>Per manipular elements del DOM, primer els hem de trobar. Els m\u00e8todes m\u00e9s comuns s\u00f3n:</p> <ul> <li><code>document.getElementById(id)</code>: Troba un element pel seu ID.</li> <li><code>getElementsByTagName(tag)</code>: Troba tots els elements amb un nom d'etiqueta espec\u00edfic.</li> <li><code>getElementsByName(name)</code>: Troba tots els elements amb un nom especificat.</li> <li><code>querySelector(selector)</code>: Retorna el primer element que coincideix amb un selector CSS.</li> <li><code>querySelectorAll(selector)</code>: Retorna un <code>Nodelist</code> de tots els elements que coincideixen amb un selector CSS.</li> </ul> <pre><code>let element = document.getElementById('exampleId');\nlet elements = document.getElementsByTagName('p');\nlet elementByName = document.getElementsByName('exampleName');\nlet firstElement = document.querySelector('.exampleClass');\nlet allElements = document.querySelectorAll('.exampleClass');\n</code></pre> <p>El resultat dels m\u00e8todes que troben m\u00e9s d'un node \u00e9s un <code>HTMLCollection</code> o un <code>NodeList</code> . Si volem tractar-lo com un array cal convertir-lo amb <code>Array.from()</code> o <code>[... HTMLCollection]</code>.</p> <p>Sovint, necessitem accedir a un node espec\u00edfic a partir d'un ja existent al DOM. Per a aix\u00f2, podem utilitzar els seg\u00fcents m\u00e8todes aplicats a un element de l'arbre DOM:</p> <ul> <li><code>element.parentElement</code>:retorna l'element pare del node actual.</li> <li><code>element.children</code>: retorna una col\u00b7lecci\u00f3 de tots els elements fills del node actual (nom\u00e9s elements HTML, no inclou comentaris ni nodes de text).</li> <li><code>element.childNodes</code>: retorna una col\u00b7lecci\u00f3 de tots els nodes fills, incloent comentaris i nodes de text, per la qual cosa no es fa servir freq\u00fcentment.</li> <li><code>element.firstElementChild</code>: retorna el primer fill que \u00e9s un element HTML.</li> <li><code>element.firstChild</code>: retorna el primer node fill, incloent nodes de text o comentaris.</li> <li><code>element.lastElementChild</code>: similar a <code>firstElementChild</code>, per\u00f2 retorna l'\u00faltim fill element HTML.</li> <li><code>element.lastChild</code>: similar a <code>firstChild</code>, per\u00f2 retorna l'\u00faltim node fill.</li> <li><code>element.nextElementSibling</code>:retorna el seg\u00fcent germ\u00e0 que \u00e9s un element HTML.</li> <li><code>element.nextSibling</code>: retorna el seg\u00fcent node germ\u00e0, incloent nodes de text o comentaris.</li> <li><code>element.previousElementSibling</code>: similar a <code>nextElementSibling</code>, per\u00f2 retorna el germ\u00e0 anterior que \u00e9s un element HTML.</li> <li><code>element.previousSibling</code>: similar a <code>nextSibling</code>, per\u00f2 retorna el germ\u00e0 anterior.</li> <li><code>element.hasChildNodes()</code>:indica si el node t\u00e9 nodes fills.</li> <li><code>element.childElementCount</code>:retorna el nombre d'elements fills.</li> <li><code>element.closest(selector)</code>: retorna l'ancestre m\u00e9s proper que coincideix amb el selector donat. Per exemple, si l'element \u00e9s un <code>&lt;td&gt;</code> dins d'una taula, <code>element.closest('table')</code> retornar\u00e0 la taula a la qual pertany.</li> </ul> <p>El DOM proporciona accessos directes (dreceres) per obtenir elements comuns:</p> <ul> <li><code>document.documentElement</code>: obt\u00e9 el node de l'element<code>&lt;html&gt;</code>.</li> <li><code>document.head</code>: obt\u00e9 el node de l'element <code>&lt;head&gt;</code>.</li> <li><code>document.body</code>: obt\u00e9 el node de l'element <code>&lt;body&gt;</code>.</li> <li><code>document.title</code>: obt\u00e9 el node de l'element <code>&lt;title&gt;</code>.</li> <li><code>document.links</code>: obt\u00e9 una col\u00b7lecci\u00f3 de tots els hipervincles del document.</li> <li><code>document.anchors</code>: obt\u00e9 una col\u00b7lecci\u00f3 de totes les \u00e0ncores del document.</li> <li><code>document.forms</code>: obt\u00e9 una col\u00b7lecci\u00f3 de tots els formularis del document.</li> <li><code>document.images</code>: obt\u00e9 una col\u00b7lecci\u00f3 de totes les imatges del document.</li> <li><code>document.scripts</code>: obt\u00e9 una col\u00b7lecci\u00f3 de tots els scripts del document.</li> </ul> <p>No hi ha una manera millor que d'altres en totes les ocasions de trobar  els nodes. Si no volem fallar es pot fer servir <code>querySelector</code>i usar selectors de CSS. D'aquesta manera, canviar el selector \u00e9s canviar la \"query\". No obstant aix\u00f2, els altres selectors m\u00e9s primitius pot que siguin m\u00e9s r\u00e0pids en certes ocasions.</p>"},{"location":"Moduls/DWEC/dom.html#dom-modificar-nodes","title":"DOM: Modificar Nodes","text":"<p>Un cop hem trobat els nodes, podem modificar-los. Alguns m\u00e8todes \u00fatils inclouen:</p> <ul> <li><code>.innerHTML</code>, <code>.innerText</code>, <code>.outerHTML</code>: Per canviar el contingut HTML o text d'un element.</li> <li><code>.insertAdjacentHTML(position, text)</code>: Insereix text HTML en una posici\u00f3 espec\u00edfica. https://lenguajejs.com/dom/crear/insertadjacent-api/</li> <li><code>.append(content, element)</code>, <code>.prepend(content, element)</code>: Afegeix contingut al principi o al final d'un element.</li> <li><code>.after()</code>, <code>.before()</code>: Insereix un element abans o despr\u00e9s de l'element actual.</li> <li><code>.cloneNode(deep)</code>: Clona un node, amb o sense els seus fills.</li> <li><code>.remove()</code>: Elimina un node.</li> </ul> <p>M\u00e8todes m\u00e9s antics per\u00f2 encara en \u00fas inclouen <code>removeChild()</code> i <code>appendChild()</code>.</p> <pre><code>let element = document.getElementById('exampleId');\nelement.innerHTML = 'Nou contingut';\nelement.insertAdjacentHTML('beforeend', '&lt;p&gt;M\u00e9s contingut&lt;/p&gt;');\nelement.append('Text addicional');\nelement.remove();\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#atributs","title":"Atributs","text":"<p>Els elements solen tenir atributs. Alguns s\u00f3n especials com el <code>id</code> o la <code>class</code>. El <code>id</code>est\u00e0 accessible directament com a atribut de l'element, aix\u00ed com el <code>className</code>, tot i que despr\u00e9s veurem que \u00e9s millor manipular-lo d'una altra manera. Altres atributs com <code>value</code> en els <code>Input</code>o <code>scr</code> en els <code>&lt;img&gt;</code> tamb\u00e9 poden ser llegits i modificats com a propietats. Es tracta dels atributs est\u00e0ndard.</p> <p>Per als atributs que no tenen acc\u00e9s directe perqu\u00e8 no s\u00f3n est\u00e0ndard, podem fer servir <code>setAttribute()</code> <code>getAttribute()</code>, <code>hasAttribute()</code> o <code>removeAttribute()</code>:</p> <pre><code>const button = document.querySelector(\"button\");\n\nbutton.setAttribute(\"name\", \"helloButton\");\nbutton.setAttribute(\"disabled\", \"\");\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#propietats","title":"Propietats","text":"<p>At\u00e8s que els elements HTML en ser analitzats i convertits al DOM es converteixen en objectes, aquests s\u00f3n manipulables com qualsevol objecte, podent afegir o modificar propietats, fins i tot aquelles que venen en l'HTML com a atributs est\u00e0ndard.</p> <p>Atributs com a <code>id</code> se sincronitzen perfectament amb la propietat. Altres com <code>value</code> no se sincronitzen directament: https://es.javascript.info/dom-attributes-and-properties#sincronizacion-de-propiedad-y-atributo</p> <p>Hi ha uns atributs que se sincronitzen de forma especial amb les propietats. S\u00f3n els que comencen per <code>data-</code>, que es guarden en un objecte <code>.dataset</code> de l'element en el DOM. Aix\u00f2 ho expliquem a la secci\u00f3 de Atributs de dades.</p>"},{"location":"Moduls/DWEC/dom.html#dom-estils","title":"DOM: Estils","text":"<p>Per manipular els estils d'un element, podem usar propietats de estil i classes CSS.</p> <ul> <li><code>.style.property</code>: Modifica un estil CSS directament.</li> <li><code>.className</code>: Canvia el nom de la classe de l'element.</li> <li><code>.classList.add()</code>, <code>.classList.toggle()</code>, <code>.classList.remove()</code>, <code>.classList.replace()</code>: M\u00e8todes per manipular classes CSS de manera m\u00e9s din\u00e0mica.</li> </ul> <pre><code>let element = document.getElementById('exampleId');\nelement.style.color = 'blue';\nelement.classList.add('new-class');\nelement.classList.remove('old-class');\n</code></pre> <p>ClassName no s'hauria de fer servir, ja que pot molestar si es fa servir classList d'altra banda. Usarem classList en totes les ocasions excepte per a eliminar totes les classes.</p>"},{"location":"Moduls/DWEC/dom.html#creacio-delements-plantilles","title":"Creaci\u00f3 d'elements (plantilles)","text":"<p>Se pueden crear elementos totalmente de forma program\u00e1tica. Pero puede ser tedioso. Muchas veces, si sabemos que hay fragmentos de HTML bastante est\u00e1ticos, podemos usar <code>innerHTML</code> y <code>.append()</code> con plantillas creadas mediante strings.</p> <p>Para crear elementos del DOM mediante plantillas hay muchas formas. Obviaremos las m\u00e1s farragosas y nos centraremos en aquellas que son m\u00e1s r\u00e1pidas.</p>"},{"location":"Moduls/DWEC/dom.html#creacion-de-elementos-template-literal","title":"Creaci\u00f3n de Elementos: Template Literal","text":"<p>Els template literals i les interpolacions de cadenes permeten crear contingut din\u00e0mic de manera senzilla.</p> <pre><code>function generateGraphCard(graph) {\n    let cardTemplate = document.createElement('div');\n    cardTemplate.classList.add('col');\n    cardTemplate.innerHTML = `\n        &lt;div class=\"card\"&gt;\n            &lt;div class=\"card-header\"&gt;${graph.title}&lt;/div&gt;\n            &lt;div class=\"card-body\"&gt;\n                &lt;div class=\"graph\"&gt;&lt;/div&gt;\n                &lt;p class=\"card-text\"&gt;${graph.description}&lt;/p&gt;\n                &lt;a href=\"#/graph/${graph.id}\" class=\"btn btn-primary\"&gt;Full screen&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;`;\n    let graphContainer = cardTemplate.querySelector('.graph');\n    graphContainer.append(graph.Data ? generateBarGraph(graph.Data) : graphPlaceholder());\n    return cardTemplate;\n}\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#creacio-delements-mitjancant-tagged-template-literals","title":"Creaci\u00f3 d'elements mitjan\u00e7ant Tagged Template Literals","text":"<p>Els \"Tagged Template Literals\" s\u00f3n una caracter\u00edstica de JavaScript que et permet crear funcions que accepten una plantilla literal i les seves interpolacions. Aquestes funcions s\u00f3n invocades de forma molt diferent, ja que no tenen (parentesi) i s'ent\u00e9n que el primer argument \u00e9s la plantilla i la resta d'arguments s\u00f3n els diferents valors de les variables interpolades.</p> <p>En lloc de rebre una sola cadena de text amb les interpolacions <code>${}</code>, la funci\u00f3 d'etiqueta rep dos arguments separats: un array de strings i un arrelament amb els valors interpolats.</p> <pre><code>(()=&gt;{\n  function miTaggedTemplateLiteral(strings, ...values) { return console.log(strings, ...values);\n  }\n  let nombre = \"Carlos\";\n  let edad = 32;\n  miTaggedTemplateLiteral`Hola soy ${nombre} y tengo ${edad} a\u00f1os`;\n})();\n</code></pre> <pre><code>[ \"Hola s\u00f3c \", \" i tinc \", \" anys\" ] Carles 32\n</code></pre> <p>En el seg\u00fcent exemple, extret de https://exploringjs.com/es6/ch_template-literals.html#sec_html-tag-function-implementation es pot veure com fer una funci\u00f3 per a tagged temperate literal que personalitzi una plantilla.</p> <pre><code>function htmlEscape(str) {\n  return str.replace(/&amp;/g, '&amp;amp;') // first!\n            .replace(/&gt;/g, '&amp;gt;')\n            .replace(/&lt;/g, '&amp;lt;')\n            .replace(/\"/g, '&amp;quot;')\n            .replace(/'/g, '&amp;#39;')\n            .replace(/`/g, '&amp;#96;');\n}\nfunction html(templateObject, ...substs) {\n  // Use raw template strings: we don\u2019t want\n  // backslashes (\\n etc.) to be interpreted\n  const raw = templateObject.raw;\n\n  let result = '';\n\n  substs.forEach((subst, i) =&gt; {\n      // Retrieve the template string preceding\n      // the current substitution\n      let lit = raw[i];\n\n      // In the example, map() returns an Array:\n      // If `subst` is an Array (and not a string),\n      // we turn it into a string\n      if (Array.isArray(subst)) {\n          subst = subst.join('');\n      }\n\n      // If the substitution is preceded by an exclamation\n      // mark, we escape special characters in it\n      if (lit.endsWith('!')) {\n          subst = htmlEscape(subst);\n          lit = lit.slice(0, -1);\n      }\n      result += lit;\n      result += subst;\n  });\n  // Take care of last template string\n  result += raw[raw.length-1]; // (A)\n\n  return result;\n}\nconst tmpl = addrs =&gt; html`\n    &lt;table&gt;\n    ${addrs.map(addr =&gt; html`\n        &lt;tr&gt;&lt;td&gt;!${addr.first}&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;!${addr.last}&lt;/td&gt;&lt;/tr&gt;\n    `)}\n    &lt;/table&gt;\n`;\nconst data = [\n    { first: '&lt;Jane&gt;', last: 'Bond' },\n    { first: 'Lars', last: '&lt;Croft&gt;' },\n];\nconsole.log(tmpl(data));\n</code></pre> <pre><code>    &lt;table&gt;\n\n        &lt;tr&gt;&lt;td&gt;&amp;lt;Jane&amp;gt;&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;Bond&lt;/td&gt;&lt;/tr&gt;\n\n        &lt;tr&gt;&lt;td&gt;Lars&lt;/td&gt;&lt;/tr&gt;\n        &lt;tr&gt;&lt;td&gt;&amp;lt;Croft&amp;gt;&lt;/td&gt;&lt;/tr&gt;\n\n    &lt;/table&gt;\n</code></pre> <p>Aquest seria el resultat:</p> &lt;Jane&gt; Bond Lars &lt;Croft&gt;"},{"location":"Moduls/DWEC/dom.html#creacio-delements-interpolacions-wrapper-fragments","title":"Creaci\u00f3 d'Elements: Interpolacions, Wrapper, fragments","text":"<p>Podem fer servir funcions per extreure i implementar interpolacions en template literals.</p> <pre><code>function extractInterpolations(template) {\n    let regex = /\\{\\{([^\\{\\}]*)\\}\\}/g;\n    return [...template.matchAll(regex)];\n}\n\nfunction applyInterpolations(template, data) {\n    return extractInterpolations(template).reduce((T, [I, att]) =&gt; \n        T = T.replace(I, data[att]), template);\n}\n\nfunction wrapElement(innerHTML) {\n    let wrapper = document.createElement('div');\n    wrapper.innerHTML = innerHTML;\n    return wrapper.firstElementChild;\n}\n\nfunction renderNews(news) {\n    let newsTemplate = `\n        &lt;article id=\"article_{{id}}\"&gt;\n            &lt;a href=\"{{link}}\"&gt;&lt;h2&gt;{{headline}}&lt;/h2&gt;&lt;/a&gt;\n            &lt;time&gt;{{date}}&lt;/time&gt;&lt;address&gt;{{authors}}&lt;/address&gt;\n            &lt;p&gt;{{short_description}}&lt;/p&gt;\n            &lt;p&gt;{{category}}&lt;/p&gt;\n        &lt;/article&gt;`;\n    return wrapElement(applyInterpolations(newsTemplate, news));\n}\n</code></pre> <p>Aquest exemple \u00e9s una mica m\u00e9s complicat del que s'espera poder fer a aquestes al\u00e7ades. No obstant aix\u00f2, \u00e9s interessant intentar entendre el seu funcionament. S'hi fan servir <code>{{}}</code> com a interpolacions com a <code>Angular</code>. Aquesta pot ser una base per fer un motor de plantilles com tenen els frameworks. D'altra banda, es crea un div que actua de <code>Wrapper</code>, \u00e9s a dir, que envolta el veritable element per poder treballar nom\u00e9s amb strings fins al final, per\u00f2 retornar un <code>Element</code>, gr\u00e0cies a <code>innerHTML</code>.</p> <p>Com a millora a l'exemple anterior, el <code>Wrapper</code> pot ser un <code>fragment</code>. Aquest t\u00e9 millor rendiment, no nom\u00e9s permet treure el primer element fill, per la qual cosa no necessitem un divan que els contingui i no genera un node addicional. \u00c9s molt eficient inserint m\u00faltiples nodes, per inserir en bucle.</p> <pre><code>function renderComments(comments) {\n    const fragment = document.createDocumentFragment();\n\n    comments.forEach(comment =&gt; {\n        const commentElement = document.createElement('div');\n        commentElement.className = 'comment';\n        commentElement.innerHTML = `\n            &lt;h4&gt;${comment.author}&lt;/h4&gt;\n            &lt;p&gt;${comment.text}&lt;/p&gt;\n            &lt;time&gt;${comment.date}&lt;/time&gt;\n        `;\n        fragment.appendChild(commentElement); // Afegir cada comentari al fragment, no al DOM\n    });\n\n   return fragment;\n}\n\n// Dades d'exemple\nconst comments = [\n    { author: \"Aina\", text: \"Bon article!\", date: \"2024-11-11\" },\n    { author: \"Lluis\", text: \"Gr\u00e0cies per la informaci\u00f3.\", date: \"2024-11-10\" },\n    { author: \"Marta\", text: \"M'ha resultat molt \u00fatil.\", date: \"2024-11-09\" }\n];\n\n// Crida a la funci\u00f3 per renderitzar els comentaris\n document.getElementById('comments-section').appendChild(renderComments(comments)); \n // Inserir tots els comentaris alhora;\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#creacio-delements-ambtemplate","title":"Creaci\u00f3 d'elements amb<code>&lt;template&gt;</code>","text":"<p>L'etiqueta <code>&lt;template&gt;</code> \u00e9s especial. El seu interior no es renderitza com la resta, per\u00f2 queda accessible per ser buscat. La utilitat \u00e9s crear plantilles en HTML que puguin ser clonades i emplenades com es desitja.</p> <p>Vegem aquest HTML extret del web de refer\u00e8ncia:</p> <p>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template:</p> <pre><code>&lt;table id=\"producttable\"&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;td&gt;UPC_Code&lt;/td&gt;\n      &lt;td&gt;Product_Name&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;!-- dades opcionals es poden incloure aqu\u00ed opcionalment --&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;template id=\"productrow\"&gt;\n  &lt;tr&gt;\n    &lt;td class=\"record\"&gt;&lt;/td&gt;\n    &lt;td&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/template&gt;\n</code></pre> <p>I amb aquest javascript obtenim el contingut del temperat, es clona i s'omple les vegades que sigui necessari:</p> <pre><code>// Test to see if the browser supports the HTML template element by checking\n// for the presence of the template element's content attribute.\nif (\"content\" in document.createElement(\"template\")) {\n  // Instantiate the table with the existing HTML tbody\n  // and the row with the template\n  const tbody = document.querySelector(\"tbody\");\n  const template = document.querySelector(\"#productrow\");\n\n  // Clone the new row and insert it into the table\n  const clone = template.content.cloneNode(true);\n  let td = clone.querySelectorAll(\"td\");\n  td[0].textContent = \"1235646565\";\n  td[1].textContent = \"Stuff\";\n\n  tbody.appendChild(clone);\n\n  // Clone the new row and insert it into the table\n  const clone2 = template.content.cloneNode(true);\n  td = clone2.querySelectorAll(\"td\");\n  td[0].textContent = \"0384928528\";\n  td[1].textContent = \"Acme Kidney Beans 2\";\n\n  tbody.appendChild(clone2);\n} else {\n  // Find another way to add the rows to the table because\n  // the HTML template element is not supported.\n}\n</code></pre> <p>Qualsevol de les formes que hem vist per crear elements, mitjan\u00e7ant template literal o funcions tagged, creant les nostres interpolacions o amb templates \u00e9s v\u00e0lida i combinable. Per aconseguir el que els frameworks fan amb els seus motors de plantilla hi ha molt de cam\u00ed per fer,  perqu\u00e8 no s'ha parlat del <code>shadow DOM</code> i altres t\u00e8cniques avan\u00e7ades com els <code>custom elements</code> per aconseguir plantilles amb reactivitat. Si aconsegueixes fer un motor de plantilles suficientment gen\u00e8ric per a l'aplicaci\u00f3 en la qual estem treballant, l'\u00fas de frameworks queda molt menys justificat.</p>"},{"location":"Moduls/DWEC/dom.html#esperar-a-que-es-carregui-el-dom","title":"Esperar a que es carregui el DOM","text":"<p>Podem assegurar-nos que el DOM estigui completament carregat abans d'executar el nostre script utilitzant <code>DOMContentLoaded</code>.</p> <pre><code>(function () {\n    \"use strict\";\n    document.addEventListener(\"DOMContentLoaded\", function () {\n        for (let i = 0; i &lt; 100; i++) {\n            let container = document.getElementById(\"content\");\n            let number = document.createElement(\"p\");\n            number.innerHTML = i;\n            container.appendChild(number);\n        }\n    });\n})();\n</code></pre> <p>Tamb\u00e9 podem col\u00b7locar el nostre script al final del cos (<code>body</code>)del document HTML.</p> <p>Si, a m\u00e9s, hi afegim l'atribut <code>defer</code> a un script, aquest es descarregar\u00e0 de manera as\u00edncrona i s'executar\u00e0 quan l'HTML hagi estat totalment interpretat i just abans que <code>DOMContentLoaded</code>.</p> <p>Si cal esperar que carregui tamb\u00e9 tot el CSS, \u00e9s a dir el <code>CSSOM</code>, podem rec\u00f3rrer a l'esdeveniment <code>load</code>, que espera a carregar i interpretar tot el CSS. Per\u00f2 si no \u00e9s necessari, \u00e9s millor esperar nom\u00e9s al DOM. Aix\u00f2 \u00e9s perqu\u00e8 hi ha recursos molt pesants com imatges o v\u00eddeos que pot fins i tot que no arribin a carregar.</p> <p>En general, recomanarem fer servir <code>DOMContentLoaded</code>en comptes de posar el script al final o <code>load</code>perqu\u00e8 en ser executat al principi, ja hi ha coses que es pot anar executant sense necessitat de DOM abans que carregui totalment. En qualsevol cas, els script en M\u00f2duls sempre s'executen en mode<code>defer</code>.</p>"},{"location":"Moduls/DWEC/dom.html#atributs-de-dades","title":"Atributs de Dades","text":"<p>HTML5 permet agregar atributs personalitzats no visuals a les etiquetes utilitzant <code>data-*</code>. Aquests atributs poden ser accessibles a trav\u00e9s de JavaScript fent servir <code>dataset</code>.</p> <pre><code>&lt;article\n    id=\"electriccars\"\n    data-columns=\"3\"\n    data-index-number=\"12314\"\n    data-parent=\"cars\"&gt;\n    ...\n&lt;/article&gt;\n</code></pre> <pre><code>let article = document.getElementById('electriccars');\nconsole.log(article.dataset.columns); // 3\nconsole.log(article.dataset.indexNumber); // 12314\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#formularis-a-javascript","title":"Formularis a JavaScript","text":"<p>En una aplicaci\u00f3 web, la validaci\u00f3 dels formularis es realitza tant en el costat del client com en el del servidor.</p> <p>De fet, l'\u00fanica validaci\u00f3 estrictament necess\u00e0ria s'ha de fer en el servidor per evitar peticions il\u00b7legals per clients com postman o curl.</p> <p>Per\u00f2 es pot fer servir Javascript per a molt m\u00e9s que validar formularis. Per exemple, ens pot ajudar a autocompletar camps, descarregar dades en segon pla o tractar amb imatges o dades complexes abans d'enviar al servidor.</p>"},{"location":"Moduls/DWEC/dom.html#atributs-de-formularis","title":"Atributs de Formularis","text":"<p>El contingut dels camps d'entrada en un formulari es pot visualitzar i modificar utilitzant l'atribut <code>value</code>. Altres elements del formulari, com els botons d'opci\u00f3 (r\u00e0dio button) i les caselles de verificaci\u00f3 (checkbox), han de tenir un <code>name</code> com\u00fa i tamb\u00e9 utilitzen els atributs <code>value</code> i <code>checked</code>. Per als elements <code>select</code>, s'utilitzen els atributs <code>options</code> i <code>selectedIndex</code>.</p> <p>Observa l'exemple a continuaci\u00f3, que fa servir la manera (obsoleta) d'associar esdeveniments <code>onclick</code> per executar una funci\u00f3 que informi dels valors dels inputs del formulari:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Formulari d'Exemple&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"exampleForm\"&gt;\n        &lt;label for=\"textInput\"&gt;Text:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"textInput\" value=\"Text inicial\"&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label&gt;Opcions:&lt;/label&gt;\n        &lt;input type=\"radio\" name=\"options\" value=\"opcio1\" checked&gt; Opci\u00f3 1\n        &lt;input type=\"radio\" name=\"options\" value=\"opcio2\"&gt; Opci\u00f3 2&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"checkboxInput\"&gt;Casella:&lt;/label&gt;\n        &lt;input type=\"checkbox\" id=\"checkboxInput\" checked&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"selectInput\"&gt;Selecciona:&lt;/label&gt;\n        &lt;select id=\"selectInput\"&gt;\n            &lt;option value=\"1\"&gt;Opci\u00f3 1&lt;/option&gt;\n            &lt;option value=\"2\" selected&gt;Opci\u00f3 2&lt;/option&gt;\n            &lt;option value=\"3\"&gt;Opci\u00f3 3&lt;/option&gt;\n        &lt;/select&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;button type=\"button\" onclick=\"manipulateValues()\"&gt;Veure i Manipular Valors&lt;/button&gt;\n    &lt;/form&gt;\n\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>function manipulateValues() {\n    // Obtenir el valor del camp de text\n    let textInput = document.getElementById('textInput');\n    console.log('Valor del camp de text:', textInput.value);\n    textInput.value = 'Nou text';\n\n    // Obtenir el valor del radi button seleccionat\n    let selectedOption = document.querySelector('input[name=\"options\"]:checked');\n    console.log('Valor del radi button seleccionat:', selectedOption.value);\n    // Canviar la selecci\u00f3 del r\u00e0dio button\n    document.querySelector('input[name=\"options\"][value=\"opcio2\"]').checked = true;\n\n    // Obtenir el valor del checkbox\n    let checkboxInput = document.getElementById('checkboxInput');\n    console.log('Checkbox est\u00e0 marcat:', checkboxInput.checked);\n    // Canviar l'estat del checkbox\n    checkboxInput.checked = !checkboxInput.checked;\n\n    // Obtenir el valor del select\n    let selectInput = document.getElementById('selectInput');\n    console.log('Valor del select:', selectInput.value);\n    // Canviar la selecci\u00f3 del select\n    selectInput.value = '3';\n}\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#cicle-tradicional-del-formulari","title":"Cicle Tradicional del Formulari","text":"<p>Tradicionalment, un formulari est\u00e0 dissenyat per enviar dades mitjan\u00e7ant HTTP al servidor. En enviar (submit) un formulari, el navegador empaqueta les dades i les envia utilitzant el m\u00e8tode HTTP especificat (com GET o POST). Els formularis poden incloure validaci\u00f3 interna mitjan\u00e7ant HTML, cosa que \u00e9s m\u00e9s r\u00e0pida que JavaScript per\u00f2 ofereix menys control i personalitzaci\u00f3. La validaci\u00f3 interna d'HTML genera pseudo-classes que poden estilitzar-se amb CSS.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Formulari amb Validaci\u00f3&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"validationForm\"&gt;\n        &lt;label for=\"name\"&gt;Nom:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"name\" name=\"name\" required&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"email\"&gt;Correu Electr\u00f2nic:&lt;/label&gt;\n        &lt;input type=\"email\" id=\"email\" name=\"email\" required&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;label for=\"password\"&gt;Contrasenya:&lt;/label&gt;\n        &lt;input type=\"password\" id=\"password\" name=\"password\" required minlength=\"6\"&gt;&lt;br&gt;&lt;br&gt;\n\n        &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n    &lt;/form&gt;\n\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>/* Estils b\u00e0sics */\nform {\n    width: 300px;\n    margin: 0 auto;\n}\n\nlabel {\n    display: block;\n    margin-bottom: 5px;\n}\n\ninput {\n    width: 100%;\n    padding: 8px;\n    margin-bottom: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n}\n\n/* Pseudo-classes per a la validaci\u00f3 */\ninput:required {\n    border-left: 5px solid #0000FF; /* Vora blava per a camps requerits */\n}\n\ninput:valid {\n    border-left: 5px solid #00FF00; /* Vora verda per a camps v\u00e0lids */\n}\n\ninput:invalid {\n    border-left: 5px solid #FF0000; /* Vora vermell per a camps inv\u00e0lids */\n}\n\n/* Pseudo-classe per a camp enfocat */\ninput:focus {\n    outline: none;\n    border-color: #66AFE9;\n    box-shadow: 0 0 8px rgba(102, 175, 233, 0.6);\n}\n</code></pre> <pre><code>document.getElementById('validationForm').addEventListener('submit', function(event) {\n    event.preventDefault(); // Evita l'enviament del formulari per a la demostraci\u00f3\n    alert('Formulari enviat correctament (validaci\u00f3 exitosa)');\n});\n</code></pre> <p>Aquest exemple demostra com utilitzar pseudo-classes CSS per estilitzar formularis amb validaci\u00f3 interna en HTML.</p>"},{"location":"Moduls/DWEC/dom.html#cicle-del-formulari-amb-javascript","title":"Cicle del Formulari amb JavaScript","text":"<p>Podem interceptar i aturar el cicle per defecte d'un formulari per validar-lo i enviar-lo utilitzant JavaScript. D'aquesta manera, podem evitar tenir un bot\u00f3 <code>submit</code> i controlar completament el proc\u00e9s d'enviament. Si el formulari envia dades al servidor i es refresca, JavaScript perd el control del programa. Per evitar aix\u00f2, podem utilitzar <code>preventDefault()</code> dins de l'esdeveniment <code>submit</code> o retornar <code>false</code>.</p>"},{"location":"Moduls/DWEC/dom.html#exemple-dinterceptar-submit-amb-javascript","title":"Exemple d'Interceptar Submit amb JavaScript","text":"<p>Podem manejar esdeveniments de formularis per personalitzar el seu comportament. Un exemple com\u00fa \u00e9s l'\u00fas de l'esdeveniment <code>onsubmit</code> per executar una funci\u00f3 de validaci\u00f3 abans d'enviar el formulari. Si la funci\u00f3 de validaci\u00f3 retorna <code>true</code>, el formulari s'envia; altrament, es cancel\u00b7la l'enviament.</p> <pre><code>&lt;form id=\"formulario\" onsubmit=\"return validar();\"&gt;\n  &lt;input type=\"text\" id=\"phone-number\" required&gt;\n  &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\nfunction validar() {\n  var phoneNumber = document.getElementById('phone-number').value;\n  var phoneRGEX = /^[(]{0,1}[0-9]{3}[)]{0,1}[-\\s\\.]{0,1}[0-9]{3}[-\\s\\.]{0,1}[0-9]{4}$/;\n  var phoneResult = phoneRGEX.test(phoneNumber);\n  alert(\"phone: \" + phoneResult);\n  return phoneResult; // Retorna true si \u00e9s v\u00e0lid, altrament false\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"Moduls/DWEC/dom.html#enviar-formulari-per-javascript","title":"Enviar Formulari per JavaScript","text":"<p>Podem enviar un formulari mitjan\u00e7ant JavaScript utilitzant el m\u00e8tode <code>submit()</code>. Aix\u00f2 \u00e9s \u00fatil quan volem enviar el formulari despr\u00e9s de realitzar alguna operaci\u00f3 addicional o validaci\u00f3 personalitzada.</p>"},{"location":"Moduls/DWEC/dom.html#exemple-denviament-per-javascript","title":"Exemple d'Enviament per JavaScript","text":"<pre><code>&lt;button onclick=\"enviarFormulari()\"&gt;Enviar&lt;/button&gt;\n\n&lt;script&gt;\nfunction enviarFormulari() {\n  let formulari = document.getElementById(\"formulari\");\n  formulari.submit();\n}\n&lt;/script&gt;\n</code></pre> <p>Per\u00f2 si no ens val amb enviar el formulari amb <code>submit()</code> i volem manipular les seves dades abans d'enviar o enviar una API per POST manualment, obtindrem el contingut input per input o amb <code>FormData</code>:</p> <pre><code>div.querySelector(\"#buttonSubmit\").addEventListener('click', async (event) =&gt; {\n      event.preventDefault();\n      const newProfile = Object.fromEntries(new FormData(div.querySelector('form')).entries());\n      updateCurrentProfile(newProfile); // Li passem un objecte. Tot i que en una petici\u00f3 POST tradicional podem enviar un FormData directament amb fetch\n    });\n</code></pre> <p>Mirar el cap\u00edtol de comunicaci\u00f3 amb el servidor per a m\u00e9s informaci\u00f3 i exemples amb 'FormData</p> <p> <p>Documentaci\u00f3 encara en proc\u00e9s </p>"},{"location":"Moduls/DWEC/git.html","title":"Introducci\u00f3 a Git","text":"<p>Al m\u00f3n del desenvolupament web, \u00e9s crucial comptar amb eines i t\u00e8cniques que permetin gestionar i col\u00b7laborar en projectes de manera eficient. En aquest article introductori, abordarem una de les eines m\u00e9s utilitzades a la ind\u00fastria per al control de versions: Git.</p> <p></p> <p>L'objectiu \u00e9s proporcionar una base s\u00f2lida per comprendre i aplicar Git als teus futurs projectes.</p>"},{"location":"Moduls/DWEC/git.html#que-es-git","title":"Qu\u00e8 \u00e9s Git","text":"<p>Git \u00e9s un sistema de control de versions distribu\u00eft, creat el 2005 per Linus Torvalds, el creador del nucli de Linux. Des de llavors, s'ha convertit en l'eina est\u00e0ndard per al control de versions a la majoria dels projectes de programari. La popularitat de Git es deu a la facilitat d'\u00fas, robustesa i capacitat per treballar de forma descentralitzada.</p>"},{"location":"Moduls/DWEC/git.html#control-de-versions","title":"Control de versions","text":"<p>El control de versions \u00e9s una t\u00e8cnica que permet portar un registre dels canvis realitzats en un conjunt de fitxers al llarg del temps. Amb Git, els desenvolupadors poden treballar en diferents branques d'un projecte, cadascuna amb les seves pr\u00f2pies modificacions i caracter\u00edstiques. Despr\u00e9s aquestes branques es poden combinar (mergeix) per unificar els canvis en una sola l\u00ednia de desenvolupament.</p> <p>Un dels principals avantatges de Git \u00e9s la seva arquitectura distribu\u00efda. A difer\u00e8ncia d'altres sistemes de control de versions centralitzats, cada desenvolupador t\u00e9 la seva pr\u00f2pia c\u00f2pia completa del repositori, incloent-hi tot l'historial de canvis. Aix\u00f2 permet que els desenvolupadors treballin de forma independent i sense connexi\u00f3 a internet, sincronitzant els canvis amb altres repositoris quan sigui necessari.</p> <p>Un repositori \u00e9s una carpeta on guardarem el nostre projecte: pot ser internet o qualsevol lloc del nostre equip.</p>"},{"location":"Moduls/DWEC/git.html#comencar-a-utilitzar-git","title":"Comen\u00e7ar a utilitzar Git","text":"<p>Per comen\u00e7ar a utilitzar Git, cal instal\u00b7lar el programari al vostre equip i configurar la vostra identitat. Despr\u00e9s, pots crear un nou repositori o clonar-ne un d'existent. El flux de treball b\u00e0sic de Git implica realitzar canvis als fitxers, afegir-los a l'\u00e0rea de preparaci\u00f3 (staging), confirmar (commit) els canvis i, finalment, enviar (push) els canvis al repositori remot.</p> <p>En el context del desenvolupament web en entorn client, Git \u00e9s especialment \u00fatil per gestionar els canvis al codi font de les aplicacions i col\u00b7laborar amb altres desenvolupadors. Per exemple, podeu utilitzar Git per mantenir un historial dels canvis als vostres fitxers HTML, CSS i JavaScript, i col\u00b7laborar amb altres membres de l'equip en la implementaci\u00f3 de noves caracter\u00edstiques o la correcci\u00f3 d'errors.</p> <p>A m\u00e9s, l'ecosistema de Git inclou plataformes com GitHub, GitLab i Bitbucket, que ofereixen serveis addicionals per gestionar i col\u00b7laborar en projectes de programari. Aquestes plataformes permeten crear repositoris en l\u00ednia, gestionar permisos d'acc\u00e9s, fer revisions de codi i m\u00e9s.</p>"},{"location":"Moduls/DWEC/git.html#installar-git","title":"Instal\u00b7lar git","text":"<p>Per instal\u00b7lar Git, tan sols has d'anar a aquest enlla\u00e7 https://git-scm.com/downloads i seguir els passos.</p>"},{"location":"Moduls/DWEC/git.html#inicialitzar-un-repositori-git","title":"Inicialitzar un repositori Git","text":"<p>Per comen\u00e7ar a utilitzar Git en un projecte, primer cal inicialitzar un repositori. Des de la terminal, navega fins a la carpeta del projecte i executa la seg\u00fcent ordre:</p> <p><code>git init</code></p> <p>Aix\u00f2 crear\u00e0 una carpeta oculta anomenada \u201c.git\u201d al directori del projecte, on s'emmagatzemar\u00e0 tota la informaci\u00f3 del repositori i ja estarem a punt per comen\u00e7ar a llan\u00e7ar ordres per gestionar el nostre repositori.</p>"},{"location":"Moduls/DWEC/git.html#ordres-mes-habituals-de-git","title":"Ordres m\u00e9s habituals de Git","text":"<p>Ara que ja coneixem els avantatges de Git, hem instal\u00b7lat el programari i tenim un repositori funcionant, \u00e9s hora d'aprendre com funciona i repassar les ordres m\u00e9s habituals amb exemples pr\u00e0ctics.</p>"},{"location":"Moduls/DWEC/git.html#afegeix-fitxers-a-larea-de-preparacio-staging","title":"Afegeix fitxers a l'\u00e0rea de preparaci\u00f3 (staging)","text":"<p>Per afegir fitxers a l'\u00e0rea de preparaci\u00f3, utilitzem l'ordre \u201cgit add\u201d. Per exemple, si volem afegir un fitxer anomenat \u201cindex.html\u201d, executem:</p> <p><code>git afegir index.html</code></p> <p>Tamb\u00e9 \u00e9s possible afegir tots els fitxers del projecte amb una sola ordre:</p> <p><code>git add.</code></p>"},{"location":"Moduls/DWEC/git.html#confirmar-canvis-commit","title":"Confirmar canvis (commit)","text":"<p>Un cop els fitxers estiguin a l'\u00e0rea de preparaci\u00f3, podem confirmar els canvis realitzats amb l'ordre \u201cgit commit\u201d. Sempre cal incloure un missatge descriptiu que expliqui els canvis realitzats:</p> <p><code>git commit -m \"Creaci\u00f3 del fitxer index.html\"</code></p>"},{"location":"Moduls/DWEC/git.html#consulteu-lhistorial-de-canvis-log","title":"Consulteu l'historial de canvis (log)","text":"<p>Podem veure l'historial de canvis del repositori utilitzant l'ordre \u201cgit log\u201d:</p> <p><code>git log</code></p> <p>Aix\u00f2 mostrar\u00e0 una llista dels commits realitzats juntament amb informaci\u00f3 detallada, com ara l'autor, la data i el missatge del commit.</p>"},{"location":"Moduls/DWEC/git.html#crear-i-canviar-a-una-nova-branca-branch","title":"Crear i canviar a una nova branca (branch)","text":"<p>Per crear una nova branca i canviar-la, utilitzem l'ordre \u201cgit checkout\u201d amb l'opci\u00f3 \u201c-b\u201d:</p> <p><code>git checkout -b nova-branca</code></p> <p>Aix\u00f2 ens permetr\u00e0 treballar a la nova branca sense afectar el codi de la branca principal (generalment anomenada \u201cmain\u201d o \u201cmaster\u201d).</p>"},{"location":"Moduls/DWEC/git.html#fusionar-branques-merge","title":"Fusionar branques (merge)","text":"<p>Quan h\u00e0gim acabat de treballar en una branca i volem unificar els canvis amb la branca principal, primer canviem a la branca principal:</p> <p><code>git checkout main</code></p> <p>Despr\u00e9s, fusionem la branca que cont\u00e9 els canvis:</p> <p><code>git merge nova-branca</code></p>"},{"location":"Moduls/DWEC/git.html#enviar-canvis-al-repositori-remot-push","title":"Enviar canvis al repositori remot (push)","text":"<p>Per enviar els canvis al repositori remot, primer hem de connectar el nostre repositori local amb el remot utilitzant l'ordre \u201cgit remote\u201d:</p> <p><code>git remote add origin URL_DEL_REPOSITORI_REMOT</code></p> <p>Despr\u00e9s, enviem els canvis amb l'ordre \u201cgit push\u201d:</p> <p><code>git push -u origin principal</code></p>"},{"location":"Moduls/DWEC/git.html#altres-ordres-utils","title":"Altres ordres \u00fatils","text":"<p>Coneixent tot aix\u00f2 ja podem treballar amb el b\u00e0sic del sistema de control de versions Git, per\u00f2, \u00e9s possible que vulguem realitzar algunes accions no descrites amb anterioritat. Vegem quines s\u00f3n algunes de les ordres que podries necessitar a partir d'aqu\u00ed.</p>"},{"location":"Moduls/DWEC/git.html#clonar-repositori","title":"Clonar repositori","text":"<p><code>git clone URL_DEL_REPOSITORI_REMOT</code></p>"},{"location":"Moduls/DWEC/git.html#coneixer-els-fitxers-modificats","title":"Con\u00e8ixer els fitxers modificats","text":"<p><code>git status</code> <code>git status -s</code></p>"},{"location":"Moduls/DWEC/git.html#baixar-canvis","title":"Baixar canvis","text":"<p><code>git pull</code></p>"},{"location":"Moduls/DWEC/git.html#visualitzacio-de-branques","title":"Visualitzaci\u00f3 de branques","text":"<p><code>git branch</code> <code>git branch --llist</code></p>"},{"location":"Moduls/DWEC/git.html#esborrar-una-branca","title":"Esborrar una branca","text":"<p><code>git branch -d NOM_DE_LA_BRANCA</code></p>"},{"location":"Moduls/DWEC/git.html#desfer-un-commit","title":"Desfer un commit","text":"<p><code>git revert CODI_DEL_COMMIT</code></p> <p>Aquestes s\u00f3n nom\u00e9s algunes de les ordres m\u00e9s b\u00e0siques i habituals a Git. Amb el temps, aprendr\u00e0s m\u00e9s ordres i t\u00e8cniques per aprofitar al m\u00e0xim aquesta poderosa eina. Recordeu sempre practicar i consultar la documentaci\u00f3 de Git si tens dubtes. Bona sort en els teus projectes!</p>"},{"location":"Moduls/DWEC/nodejs.html","title":"Nodejs","text":""},{"location":"Moduls/DWEC/nodejs.html#introduccio-a-nodejs","title":"Introducci\u00f3 a Node.js","text":"<p>En l'\u00e0mbit del desenvolupament web, l'entorn client es refereix a la interacci\u00f3 que passa al navegador web de l'usuari. Durant molts anys JavaScript ha estat el llenguatge de programaci\u00f3 principal per al desenvolupament en entorn client, permetent la creaci\u00f3 d'aplicacions web interactives i din\u00e0miques. Tot i aix\u00f2, l'ecosistema de JavaScript ha evolucionat considerablement, i una de les tecnologies m\u00e9s influents en aquesta transformaci\u00f3 ha estat Node.js.</p> <p>Node.js \u00e9s un entorn d'execuci\u00f3 de Javascript basat en el motor V8 de Google Chrome. Va ser creat per Ryan Dahl el 2009 i ha revolucionat la manera com els desenvolupadors utilitzen JavaScript, permetent el seu \u00fas m\u00e9s enll\u00e0 del navegador i estenent-lo al costat del servidor. Aix\u00f2 ha proporcionat als desenvolupadors una plataforma unificada per construir aplicacions web escalables i dalt rendiment utilitzant un sol llenguatge de programaci\u00f3.</p>"},{"location":"Moduls/DWEC/nodejs.html#lexit-de-nodejs","title":"L'\u00e8xit de Node.js","text":"<p>Una de les caracter\u00edstiques clau de Node.js \u00e9s el model d'entrada i sortida no bloquejant (I/O), basat en esdeveniments. Aix\u00f2 permet a les aplicacions manejar m\u00faltiples sol\u00b7licituds simult\u00e0niament sense bloquejar el flux d'execuci\u00f3, cosa que resulta en una major efici\u00e8ncia i menor lat\u00e8ncia en comparaci\u00f3 dels enfocaments tradicionals basats en fils. Aquesta caracter\u00edstica ha estat crucial per a l'\u00e8xit de Node.js en el desenvolupament d'aplicacions en temps real, com ara xats, jocs en l\u00ednia i plataformes de col\u00b7laboraci\u00f3.</p>"},{"location":"Moduls/DWEC/nodejs.html#gestio-de-paquets","title":"Gesti\u00f3 de paquets","text":"<p>L'ecosistema de Node.js \u00e9s un altre aspecte important que cal considerar en el desenvolupament web. Gr\u00e0cies al seu gestor de paquets, npm, els desenvolupadors tenen acc\u00e9s a una \u00e0mplia biblioteca de m\u00f2duls i eines de tercers que faciliten la creaci\u00f3 i el manteniment d'aplicacions web. Aix\u00f2 ha impulsat l'adopci\u00f3 d'enfocaments modulars i la reutilitzaci\u00f3 de codi a la comunitat de desenvolupament, millorant l'efici\u00e8ncia i la qualitat del programari produ\u00eft.</p>"},{"location":"Moduls/DWEC/nodejs.html#com-comencar-a-treballar-amb-nodejs","title":"Com comen\u00e7ar a treballar amb Node.js","text":"<p>Seguiu els passos que es descriuen a continuaci\u00f3 per comen\u00e7ar a explorar el m\u00f3n de Node.js.</p>"},{"location":"Moduls/DWEC/nodejs.html#1-installacio-de-nodejs","title":"1. Instal\u00b7laci\u00f3 de Node.js","text":"<p>Per comen\u00e7ar, hem d'instal\u00b7lar Node.js al nostre sistema. Visiteu el lloc web oficial de Node.js (https://nodejs.org/) i descarregueu la versi\u00f3 recomanada per al vostre sistema operatiu. Executeu l'instal\u00b7lador i seguiu les instruccions de la pantalla per completar la instal\u00b7laci\u00f3.</p>"},{"location":"Moduls/DWEC/nodejs.html#2-verificacio-de-la-installacio","title":"2. Verificaci\u00f3 de la instal\u00b7laci\u00f3","text":"<p>Quan h\u00e0giu instal\u00b7lat el Node.js, obriu una terminal o s\u00edmbol del sistema i executeu l'ordre seg\u00fcent per verificar que s'ha instal\u00b7lat correctament:</p> <pre><code>node -v\n</code></pre> <p>Si la instal\u00b7laci\u00f3 ha estat ser exitosa, haur\u00edeu de veure la versi\u00f3 de Node.js que heu instal\u00b7lat.</p>"},{"location":"Moduls/DWEC/nodejs.html#3-creacio-dun-fitxer-de-projecte","title":"3. Creaci\u00f3 d'un fitxer de projecte","text":"<p>Crea un nou directori per al teu projecte i navega a aquest directori a la terminal. A continuaci\u00f3, crea un fitxer anomenat \u201capp.js\u201d utilitzant un editor de text de la teva elecci\u00f3. Aquest fitxer contindr\u00e0 el nostre codi de Node.js.</p>"},{"location":"Moduls/DWEC/nodejs.html#4-escriure-el-teu-primer-programa-de-nodejs","title":"4. Escriure el teu primer programa de Node.js","text":"<p>Obre el fitxer \u201capp.js\u201d al teu editor de text i escriu el codi seg\u00fcent:</p> <p><code>console.log('Hola m\u00f3n des de Node.js!');</code></p> <p>Aquest codi \u00e9s un senzill\u00edssim programa de Node.js que imprimir\u00e0 'Hola m\u00f3n des de Node.js!' a la consola.</p>"},{"location":"Moduls/DWEC/nodejs.html#5-execucio-del-programa-de-nodejs","title":"5. Execuci\u00f3 del programa de Node.js","text":"<p>Torna a la terminal i assegura't que ets al directori del projecte. Executeu l'ordre seg\u00fcent per iniciar el programa de Node.js:</p> <p><code>node app.js</code></p> <p>Si tot funciona correctament, haur\u00edeu de veure el missatge 'Hola m\u00f3n des de Node.js!' impr\u00e8s a la consola.</p>"},{"location":"Moduls/DWEC/nodejs.html#6-installacio-de-paquets-amb-npm","title":"6. Instal\u00b7laci\u00f3 de paquets amb npm","text":"<p>Node.js utilitza un gestor de paquets anomenat npm per instal\u00b7lar m\u00f2duls addicionals. Provem aix\u00f2 instal\u00b7lant el popular paquet \u201cexpress\u201d per crear aplicacions web. Executa la seg\u00fcent comanda a la terminal:</p> <pre><code>npm install express\n</code></pre> <p>Aix\u00f2 instal\u00b7lar\u00e0 el paquet express i les seves depend\u00e8ncies en un directori anomenat \u201cnode_modules\u201d al vostre projecte.</p>"},{"location":"Moduls/DWEC/nodejs.html#7-creacio-dun-servidor-web-basic-amb-express","title":"7. Creaci\u00f3 d'un servidor web b\u00e0sic amb Express","text":"<p>Esborra la l\u00ednia de codi que hav\u00edem afegit al fitxer \u2018app.js\u2019 i afegeix les l\u00ednies seg\u00fcents a l'inici del teu fitxer per importar Express:</p> <pre><code>const express = require('express');\nconst app = express();\n</code></pre> <p>Crearem una ruta b\u00e0sica perqu\u00e8 el nostre servidor web respongui amb un \u201cHola M\u00f3n\u201d quan s'accedeixi a l'arrel del lloc. Afegeix el codi seg\u00fcent a app.js:</p> <pre><code>app.get('/', (req, res) =&gt; {\n res.send('Hola M\u00f3n!');\n});\n</code></pre> <p>Definirem el port on el nostre servidor web estar\u00e0 escoltant les sol\u00b7licituds. Afegeix el codi seg\u00fcent a app.js:</p> <p><code>const PORT = process.env.PORT || 3000;</code></p> <p>Aquesta l\u00ednia defineix un port per defecte (3000) si no hi ha cap port assignat a les variables d'entorn del sistema. Ara, anem a dir a la nostra aplicaci\u00f3 que comenci a escoltar al port que especifiquem. Afegeix el codi seg\u00fcent al final de app.js:</p> <p><code>app.listen(PORT, () =&gt; { console.log(`Servidor funcionant al port ${PORT}`); });</code></p> <p>Guarda els canvis a app.js i obre una terminal a la carpeta del projecte. Executa la seg\u00fcent ordre per iniciar el servidor: node app.js Hauries de veure el missatge \u201cServidor funcionant al port 3000\u201d a la terminal. Obre el teu navegador web i visita http://localhost:3000. Hauries de veure el missatge \u201cHola M\u00f3n!\u201d a la p\u00e0gina. Felicitats, has creat el teu primer servidor web utilitzant Express i Node.js.</p>"},{"location":"Moduls/DWEC/nodejs.html#8-creacio-dun-servidor-web-amb-rutes-i-parametres-dinamics","title":"8. Creaci\u00f3 d'un servidor web amb rutes i par\u00e0metres din\u00e0mics","text":"<p>Ara que ja tenim un servidor web b\u00e0sic funcionant al port 3000 amb un fitxer app.js, la nostra tasca \u00e9s ampliar el servidor perqu\u00e8 manegi rutes din\u00e0miques i par\u00e0metres. Volem aconseguir el seg\u00fcent:</p> <ul> <li>Crear una ruta /salutacio que accepti un par\u00e0metre nom i mostri una salutaci\u00f3 personalitzada.</li> <li>Crear una ruta /suma que accepti dos par\u00e0metres num\u00e8rics a i b i torneu el resultat de sumar-los.</li> </ul> <p>Vegem com ho podem fer.</p>"},{"location":"Moduls/DWEC/nodejs.html#pas-1-crear-la-ruta-salut","title":"Pas 1: Crear la ruta /salut.","text":"<p>Afegeix el codi seg\u00fcent al teu fitxer 'app.js' per crear la ruta /salut:</p> <pre><code>app.get('/salutacio/:nom', (req, res) =&gt; {\n    const nom = req.params.nom;\n    res.send(`Hola, ${nom}!`);\n});\n</code></pre> <p>Aquesta ruta accepta un par\u00e0metre anomenat nom i respon amb una salutaci\u00f3 personalitzada.</p>"},{"location":"Moduls/DWEC/nodejs.html#pas-2-crear-la-ruta-suma","title":"Pas 2: Crear la ruta /suma","text":"<p>Afegeix el codi seg\u00fcent al teu fitxer 'app.js' per crear la ruta /suma:</p> <pre><code>app.get('/suma/:a/:b', (req, res) =&gt; {\n    const a = parseFloat(req.params.a);\n    const b = parseFloat(req.params.b);\n    if (isNaN(a) || isNaN(b)) {\n        res.status(400).send('Els par\u00e0metres han de ser n\u00fameros v\u00e0lids.');\n    } else {\n        const resultat = a + b;\n        res.send(`La suma de ${a} i ${b} \u00e9s ${resultat}`);\n    }\n});\n</code></pre> <p>Aquesta ruta accepta dos par\u00e0metres num\u00e8rics, a i b, i torna el resultat de sumar-los. Tamb\u00e9 comprova si els par\u00e0metres s\u00f3n n\u00fameros v\u00e0lids i envia un missatge d'error en cas contrari.</p>"},{"location":"Moduls/DWEC/nodejs.html#pas-3-provar-les-rutes","title":"Pas 3: Provar les rutes","text":"<p>Guarda els canvis a app.js i reinicia el servidor si \u00e9s necessari. Despr\u00e9s, visita les seg\u00fcents adreces al teu navegador per provar les rutes:</p> <ol> <li>http://localhost:3000/saludo/Ana \u2013 Hauries de veure el missatge \u201cHola, Ana!\u201d.</li> <li>http://localhost:3000/suma/4/6 \u2013 Hauries de veure el missatge \u201cLa suma de 4 i 6 \u00e9s 10\u201d.</li> <li>http://localhost:3000/suma/a/6 \u2013 Hauries de veure el missatge \u201cEls par\u00e0metres han de ser n\u00fameros v\u00e0lids.\u201d</li> </ol> <p>Amb aquest exemple, heu aprofundit en l'\u00fas de JavaScript usant Node.js i Express en crear rutes din\u00e0miques i manejar par\u00e0metres en les sol\u00b7licituds. Aix\u00f2 us permetr\u00e0 crear aplicacions web m\u00e9s avan\u00e7ades i personalitzades.</p> <p>Com heu pogut veure, treballar amb Node.js desvincula la programaci\u00f3 amb JavaScript del navegador i ens permet resoldre tasques tremendament interessants amb molt poques l\u00ednies de codi. Evidentment aquest \u00e9s simplement un punt de partida des d'on iniciar el cam\u00ed amb la programaci\u00f3 JavaScript del costat servidor. Espero que t'hagi servit per iniciar-te en aquesta tecnologia i ho aprofitis per continuar aprofundint en el seu estudi.</p>"},{"location":"Moduls/DWEC/npm.html","title":"NPM","text":"<p>npm (Node Package Manager) es una herramienta esencial en el desarrollo web moderno, especialmente para la gesti\u00f3n de paquetes y m\u00f3dulos JavaScript. Comprender sus componentes y c\u00f3mo se integra en el flujo de trabajo del frontend es crucial.</p> <p>La p\u00e1gina web: El sitio oficial de npm (https://www.npmjs.com/) permite descubrir nuevos paquetes, colaborar y reportar errores. Es similar a c\u00f3mo funciona GitHub, proporcionando una plataforma centralizada para la comunidad de desarrolladores.</p> <p>El cliente por CLI: El cliente de l\u00ednea de comandos de npm permite instalar, actualizar y gestionar paquetes y programas JavaScript de manera eficiente, similar a c\u00f3mo <code>apt</code> gestiona paquetes en sistemas basados en Debian.</p> <p>El registro: npm mantiene un registro de paquetes que se pueden instalar y actualizar, facilitando la colaboraci\u00f3n y la gesti\u00f3n de dependencias.</p>"},{"location":"Moduls/DWEC/npm.html#instalacion-de-npm","title":"Instalaci\u00f3n de npm","text":"<p>Para comenzar a usar npm, es necesario tener Node.js instalado, ya que npm se incluye con Node.js. Aqu\u00ed hay dos formas comunes de instalar Node.js y npm.</p> <p>Desde los repositorios de Ubuntu:</p> <pre><code>node -v\nnpm -v\nsudo apt install nodejs\nsudo apt install npm\n</code></pre> <p>Desde el control de versiones de Node:</p> <pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash\nnvm list-remote\nnvm install v13.6.0\n</code></pre> <p>Mantener Node.js actualizado es importante para aprovechar las \u00faltimas caracter\u00edsticas y mejoras de seguridad. Para actualizar Node.js, puedes usar npm:</p> <pre><code>sudo npm install -g n\nsudo n stable\nsudo npm install -g npm\n</code></pre>"},{"location":"Moduls/DWEC/npm.html#administracion-de-paquetes-con-npm","title":"Administraci\u00f3n de Paquetes con npm","text":"<p>npm facilita la instalaci\u00f3n, actualizaci\u00f3n y gesti\u00f3n de paquetes en tus proyectos. Aqu\u00ed tienes algunos comandos b\u00e1sicos:</p> <ul> <li> <p>Inicializar un nuevo proyecto: <pre><code>npm init\n</code></pre></p> </li> <li> <p>Instalar un paquete: <pre><code>npm install &lt;nombre-paquete&gt; (o npm i &lt;nombre-paquete&gt;)\n</code></pre></p> </li> <li> <p>Instalar un paquete globalmente: <pre><code>npm install -g &lt;nombre-paquete&gt;\n</code></pre></p> </li> <li> <p>Desinstalar un paquete: <pre><code>npm uninstall &lt;nombre-paquete&gt;\n</code></pre></p> </li> <li> <p>Actualizar un paquete: <pre><code>npm update &lt;nombre-paquete&gt;\n</code></pre></p> </li> <li> <p>Listar paquetes instalados: <pre><code>npm list\n</code></pre></p> </li> </ul>"},{"location":"Moduls/DWEC/npm.html#el-archivo-packagejson","title":"El Archivo package.json","text":"<p>El <code>package.json</code> es el coraz\u00f3n de cualquier proyecto npm. Declara las bibliotecas instaladas y sus versiones, as\u00ed como scripts que se pueden ejecutar con <code>npm run</code>.</p> <p>Ejemplo de package.json:</p> <pre><code>{\n \"name\": \"webpackinicial\",\n \"version\": \"1.0.0\",\n \"description\": \"Projecte inicial npm\",\n \"main\": \"index.js\",\n \"scripts\": {\n   \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"\n },\n \"author\": \"\",\n \"license\": \"ISC\"\n}\n</code></pre>"},{"location":"Moduls/DWEC/npm.html#ejemplo-instalacion-de-jquery","title":"Ejemplo: Instalaci\u00f3n de jQuery","text":"<p>Para instalar y utilizar jQuery en un proyecto, sigue estos pasos:</p> <ol> <li> <p>Inicializa un nuevo proyecto npm:</p> <pre><code>npm init\n</code></pre> </li> <li> <p>Instala jQuery:</p> <pre><code>npm install jquery\n</code></pre> </li> <li> <p>Incluye jQuery en tu HTML:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n   &lt;meta charset=\"UTF-8\"&gt;\n   &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n   &lt;title&gt;Document&lt;/title&gt;\n   &lt;script src=\"./node_modules/jquery/dist/jquery.js\"&gt;&lt;/script&gt;\n   &lt;script&gt;\n     $(function() {\n       console.log($);\n     });\n   &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> </li> </ol>"},{"location":"Moduls/DWEC/npm.html#motivaciones-para-usar-npm","title":"Motivaciones para Usar npm","text":"<p>La programaci\u00f3n del frontend hoy en d\u00eda puede ser tan compleja como la del backend. Mantener todo el c\u00f3digo y las dependencias de terceros en archivos .html y .js puede ser complicado. Aqu\u00ed es donde npm resulta invaluable:</p> <ul> <li>Automatizaci\u00f3n de tareas:</li> <li>Recarga en vivo de los cambios.</li> <li>Minificaci\u00f3n y ofuscaci\u00f3n del c\u00f3digo.</li> <li>Incrementar la compatibilidad entre navegadores.</li> <li> <p>Compilaci\u00f3n de SASS, TypeScript, etc.</p> </li> <li> <p>Gesti\u00f3n de dependencias:</p> </li> <li>Mantener y actualizar bibliotecas de terceros</li> </ul>"},{"location":"Moduls/DWEC/npm.html#creacion-de-un-nuevo-proyecto-node","title":"Creaci\u00f3n de un Nuevo Proyecto Node","text":"<p>Para crear un nuevo proyecto Node, aseg\u00farate de tener versiones recientes de Node.js y npm:</p> <pre><code>node --version    # Debe ser superior a la 8\nnpm --version  # Debe ser superior a la 6\nnpm init \n</code></pre> <p>Esto crea un archivo <code>package.json</code> en tu proyecto.</p>"},{"location":"Moduls/DWEC/npm.html#integracion-con-git","title":"Integraci\u00f3n con Git","text":"<p>El directorio <code>node_modules</code> es muy grande y no debe subirse al repositorio. Aseg\u00farate de incluirlo en tu <code>.gitignore</code>:</p> <pre><code>echo \"node_modules\" &gt;&gt; .gitignore\n</code></pre> <p>Cuando otros clonen tu repositorio, solo necesitan ejecutar <code>npm install</code> para instalar las dependencias listadas en <code>package.json</code>.</p>"},{"location":"Moduls/DWEC/promesas.html","title":"Asincron\u00eda y Promesas","text":"<p>Antes de estudiar las promesas, vamos a repasar algunos conceptos sobre c\u00f3mo funciona internamente el motor de javascript. De esta manera ser\u00e1 m\u00e1s f\u00e1cil entender c\u00f3mo funcionan las promesas y c\u00f3mo usarlas. </p>"},{"location":"Moduls/DWEC/promesas.html#el-motor-de-javascript","title":"El Motor de JavaScript","text":"<p>El motor de JavaScript dentro del navegador es responsable de compilar y ejecutar el c\u00f3digo JavaScript, manejar la pila de funciones (call stack), gestionar el alojamiento de los objetos en memoria (heap) y recolectar la basura de los objetos que ya no se necesitan. Adem\u00e1s, proporciona una API con utilidades del navegador, red, funciones as\u00edncronas y m\u00e1s. En este cap\u00edtulo, exploraremos c\u00f3mo funciona el motor de JavaScript, incluyendo la ejecuci\u00f3n de c\u00f3digo s\u00edncrono y as\u00edncrono, y los conceptos de contexto de ejecuci\u00f3n y pila de llamadas.</p>"},{"location":"Moduls/DWEC/promesas.html#entorno-de-ejecucion","title":"Entorno de Ejecuci\u00f3n","text":"<p>JavaScript solo puede tener un hilo de ejecuci\u00f3n (en principio). Esto significa que si solicitamos algo al servidor de forma s\u00edncrona, toda la web se detendr\u00e1 hasta que llegue la respuesta. Sin embargo, los navegadores tienen un entorno de ejecuci\u00f3n que permite que JavaScript realice solicitudes de forma as\u00edncrona y contin\u00fae ejecutando otras tareas. Estas peticiones as\u00edncronas las proporciona las <code>web APIs</code> y sus respuestas pueden ser gestionadas mediante Callbacks, Promesas o Async/Await. Para entender c\u00f3mo funcionan las peticiones as\u00edncronas en JavaScript, es fundamental comprender los conceptos de Contexto de Ejecuci\u00f3n y Pila de Llamadas.</p>"},{"location":"Moduls/DWEC/promesas.html#contexto-de-ejecucion-y-pila-de-llamadas","title":"Contexto de Ejecuci\u00f3n y Pila de Llamadas","text":""},{"location":"Moduls/DWEC/promesas.html#contexto-de-ejecucion","title":"Contexto de Ejecuci\u00f3n","text":"<p>El contexto de ejecuci\u00f3n es el entorno en el cual JavaScript se eval\u00faa y ejecuta. Cada vez que se ejecuta un script o se llama a una funci\u00f3n, se crea un nuevo contexto de ejecuci\u00f3n. Existen dos tipos principales de contextos de ejecuci\u00f3n: el contexto global y el contexto de funci\u00f3n.</p>"},{"location":"Moduls/DWEC/promesas.html#contexto-de-ejecucion-global","title":"Contexto de Ejecuci\u00f3n Global","text":"<p>El contexto de ejecuci\u00f3n global se crea cuando se carga una p\u00e1gina web o un archivo JavaScript en un entorno de ejecuci\u00f3n, como un navegador o Node.js. Este contexto es el entorno predeterminado en el que se eval\u00faa y ejecuta el c\u00f3digo global, es decir, cualquier c\u00f3digo que no est\u00e9 dentro de una funci\u00f3n.</p> <pre><code>(()=&gt;{\nlet globalVar = \"I am global\";\n\nfunction showGlobalVar() {\n  console.log(globalVar); // Puede acceder a globalVar porque est\u00e1 en el contexto global\n}\n\nshowGlobalVar(); // I am global\n})()\n</code></pre> <pre><code>I am global\n</code></pre> <p>En este ejemplo, <code>globalVar</code> se define en el contexto global, y la funci\u00f3n <code>showGlobalVar</code> puede acceder a <code>globalVar</code> porque tambi\u00e9n se encuentra en el contexto global.</p>"},{"location":"Moduls/DWEC/promesas.html#contexto-de-ejecucion-de-funcion","title":"Contexto de Ejecuci\u00f3n de Funci\u00f3n","text":"<p>Cada vez que se llama a una funci\u00f3n, se crea un nuevo contexto de ejecuci\u00f3n para esa funci\u00f3n. Este contexto de ejecuci\u00f3n incluye el \u00e1mbito l\u00e9xico de la funci\u00f3n, el objeto <code>this</code>, y una referencia al contexto de ejecuci\u00f3n de su entorno exterior (si lo hay).</p> <pre><code>(()=&gt;{\nlet globalVar = \"I am global\";\n\nfunction outerFunction() {\n  let outerVar = \"I am outer\";\n\n  function innerFunction() {\n    let innerVar = \"I am inner\";\n    console.log(globalVar); // I am global\n    console.log(outerVar);  // I am outer\n    console.log(innerVar);  // I am inner\n  }\n\n  innerFunction();\n}\n\nouterFunction();\n})();\n</code></pre> <pre><code>I am global\nI am outer\nI am inner\n</code></pre> <p>En este ejemplo, <code>outerFunction</code> crea su propio contexto de ejecuci\u00f3n que incluye <code>outerVar</code>. Cuando <code>innerFunction</code> se llama, se crea un nuevo contexto de ejecuci\u00f3n que incluye <code>innerVar</code>. <code>innerFunction</code> tambi\u00e9n tiene acceso a <code>outerVar</code> y <code>globalVar</code> debido a la cadena de \u00e1mbito l\u00e9xico.</p>"},{"location":"Moduls/DWEC/promesas.html#pila-de-llamadas-call-stack","title":"Pila de Llamadas (Call Stack)","text":"<p>La pila de llamadas es una estructura de datos LIFO (Last In, First Out) que almacena los contextos de ejecuci\u00f3n en el orden en que deben ejecutarse. Cada vez que se llama a una funci\u00f3n, su contexto de ejecuci\u00f3n se agrega a la pila de llamadas. Cuando la funci\u00f3n termina, su contexto se elimina de la pila.</p> <pre><code>(()=&gt;{\n    function first() {\n      console.log(\"Entering first\");\n      second();\n      console.log(\"Exiting first\");\n    }\n\n    function second() {\n      console.log(\"Entering second\");\n      third();\n      console.log(\"Exiting second\");\n    }\n\n    function third() {\n      console.log(\"Entering third\");\n      // Realiza alguna tarea\n      console.log(\"Exiting third\");\n    }\n\n    first();\n    })();\n</code></pre> <pre><code>Entering first\nEntering second\nEntering third\nExiting third\nExiting second\nExiting first\n</code></pre> <p>An\u00e1lisis del Call Stack:</p> <ol> <li><code>first()</code> se agrega a la pila de llamadas.</li> <li><code>console.log(\"Entering first\")</code> se ejecuta dentro de <code>first()</code>.</li> <li><code>second()</code> se agrega a la pila de llamadas.</li> <li><code>console.log(\"Entering second\")</code> se ejecuta dentro de <code>second()</code>.</li> <li><code>third()</code> se agrega a la pila de llamadas.</li> <li><code>console.log(\"Entering third\")</code> se ejecuta dentro de <code>third()</code>.</li> <li><code>console.log(\"Exiting third\")</code> se ejecuta dentro de <code>third()</code>.</li> <li><code>third()</code> se elimina de la pila de llamadas.</li> <li><code>console.log(\"Exiting second\")</code> se ejecuta dentro de <code>second()</code>.</li> <li><code>second()</code> se elimina de la pila de llamadas.</li> <li><code>console.log(\"Exiting first\")</code> se ejecuta dentro de <code>first()</code>.</li> <li><code>first()</code> se elimina de la pila de llamadas.</li> </ol>"},{"location":"Moduls/DWEC/promesas.html#herramientas-para-analizar-el-call-stack","title":"Herramientas para Analizar el Call Stack","text":"<p>En Firefox:</p> <ol> <li>Presiona <code>F12</code> para abrir las herramientas de desarrollo.</li> <li>Ve al panel de Depurador.</li> <li>Coloca un punto de ruptura.</li> <li>Ejecuta y analiza la pila de llamadas y el entorno de ejecuci\u00f3n de las funciones.</li> </ol> <p>Tambi\u00e9n puedes usar <code>console.trace()</code> y <code>debugger;</code> en tu c\u00f3digo para depurar y analizar el flujo de ejecuci\u00f3n.</p>"},{"location":"Moduls/DWEC/promesas.html#tareas-y-microtareas","title":"Tareas y Microtareas","text":"<p>JavaScript gestiona las operaciones as\u00edncronas utilizando varias colas de tareas, cada una con una prioridad diferente. Estas colas incluyen la cola de macrotareas y la cola de microtareas.</p>"},{"location":"Moduls/DWEC/promesas.html#cola-de-macrotareas-y-microtareas","title":"Cola de Macrotareas y Microtareas","text":"<p>Las macrotareas incluyen operaciones como los eventos del DOM, <code>setTimeout</code>, <code>setInterval</code> y otras operaciones as\u00edncronas. Las macrotareas se gestionan en la \"cola de macrotareas\" y se procesan una por una.</p> <p>Las microtareas, por otro lado, incluyen las promesas (<code>Promises</code>) y las mutaciones del DOM (a trav\u00e9s de <code>MutationObserver</code>). Estas tareas se gestionan en la \"cola de microtareas\", que tiene una prioridad m\u00e1s alta que la de las macrotareas. Esto significa que despu\u00e9s de cada macrotarea, el motor de JavaScript procesar\u00e1 todas las microtareas antes de continuar con la siguiente macrotarea.</p> <p>Cuando se completa una macrotarea, el motor de JavaScript pasa a procesar todas las microtareas pendientes. Este ciclo de procesamiento asegura que las microtareas reciban atenci\u00f3n inmediata despu\u00e9s de cada macrotarea.</p> <pre><code>(()=&gt;{\nlet start = Date.now();\n\nfunction count() {\n  // Trabajo pesado\n  let i = 0;\n  for (let j = 0; j &lt; 1e9; j++) {\n    i++;\n  }\n  console.log(\"Done in \" + (Date.now() - start) + 'ms');\n}\n\n// count();   // Esto bloquea el navegador\nsetTimeout(count, 0);\n})();\n</code></pre> <ol> <li>La funci\u00f3n <code>count</code> ejecuta una operaci\u00f3n costosa (una larga iteraci\u00f3n de bucle).</li> <li>Si <code>count</code> se ejecuta directamente, bloquea el navegador porque el bucle es muy largo.</li> <li>Utilizando <code>setTimeout(count, 0)</code>, la funci\u00f3n <code>count</code> se coloca en la cola de macrotareas, permitiendo que el navegador procese otras tareas mientras tanto.</li> </ol> <p>Este ejemplo ilustra c\u00f3mo retrasar el bloqueo hasta que, por ejemplo, se ejecute todo el programa principal. Pero no soluciona el hecho de que, al final se va a quedar el navegador bloqueado, ya que se ejecutar\u00e1 en el \u00fanico hilo de ejecuci\u00f3n de Javascript. Si queremos tener m\u00e1s hilos, podemos usar <code>worker</code>. En el siguiente ejemplo se ve c\u00f3mo dividir el trabajo para que, en medio, d\u00e9 tiempo a renderizar o ejecutar otras tareas y microtareas como atender eventos:</p>"},{"location":"Moduls/DWEC/promesas.html#ejemplo-de-dividir-el-trabajo-con-settimeout","title":"Ejemplo de Dividir el Trabajo con <code>setTimeout</code>","text":"<pre><code>document.addEventListener(\"DOMContentLoaded\", () =&gt; {\n  let progress = document.querySelector(\"#progress\");\n  let i = 0;\n  function count() {\n    // Realiza una parte del trabajo pesado (*)\n    do {\n      i++;\n      progress.innerHTML = i;\n    } while (i % 1e3 != 0);\n\n    if (i &lt; 1e7) {\n      setTimeout(count);\n    }\n  }\n  count();\n});\n</code></pre> <ol> <li>En lugar de hacer todo el trabajo pesado en una \u00fanica ejecuci\u00f3n, el trabajo se divide en trozos m\u00e1s peque\u00f1os.</li> <li>La funci\u00f3n <code>count</code> realiza una peque\u00f1a parte del trabajo (incrementar <code>i</code> y actualizar el texto de <code>progress</code>) antes de ceder el control al navegador con <code>setTimeout(count)</code>.</li> <li>Esto permite que el navegador renderice el cambio en el DOM, evitando el bloqueo y ofreciendo una experiencia de usuario m\u00e1s fluida.</li> </ol>"},{"location":"Moduls/DWEC/promesas.html#codigo-de-ejemplo-con-promesas-microtareas","title":"C\u00f3digo de Ejemplo con Promesas (Microtareas)","text":"<pre><code>(()=&gt;{\n  const messages = [];\n  messages.push('Script start');\n  setTimeout(() =&gt; {\n    messages.push('SetTimeout');\n    printMessages();\n  }, 0);\n  Promise.resolve().then(() =&gt; {\n    messages.push('Promise 1');\n  }).then(() =&gt; {\n    messages.push('Promise 2');\n  });\n  messages.push('Script end');\n  function printMessages() {\n      console.log(messages.join('\\n'));\n  }\n})();\n</code></pre> <pre><code>Done in 735ms\nScript start\nScript end\nPromise 1\nPromise 2\nSetTimeout\n</code></pre> <ol> <li>El log 'Script start' se imprime primero porque es c\u00f3digo s\u00edncrono.</li> <li><code>setTimeout</code> coloca su funci\u00f3n de callback en la cola de macrotareas.</li> <li>La promesa se resuelve inmediatamente, colocando sus callbacks en la cola de microtareas.</li> <li>El log 'Script end' se imprime porque es c\u00f3digo s\u00edncrono.</li> <li>Las microtareas (las promesas) se ejecutan antes de la macrotarea (<code>setTimeout</code>), imprimiendo 'Promise 1' y 'Promise 2'.</li> <li>Finalmente, la funci\u00f3n de <code>setTimeout</code> se ejecuta, imprimiendo 'SetTimeout'.</li> </ol> <p>Este mecanismo de tareas y microtareas permite que JavaScript gestione de manera eficiente las operaciones as\u00edncronas, asegurando que el c\u00f3digo se ejecute de manera ordenada y que las tareas con mayor prioridad (microtareas) se completen antes de procesar tareas menos prioritarias (macrotareas).</p>"},{"location":"Moduls/DWEC/promesas.html#callbacks-en-javascript","title":"Callbacks en JavaScript","text":"<p>En JavaScript, un callback es una funci\u00f3n que se pasa como argumento a otra funci\u00f3n para que se ejecute despu\u00e9s de que se complete alguna operaci\u00f3n. Los callbacks son esenciales para manejar operaciones as\u00edncronas como la comunicaci\u00f3n con servidores, temporizadores, y eventos del DOM. El propio lenguaje Javascript cuenta con multitud de funciones que aceptan funciones de callback, com forEach, map, filter, addEventListener... </p> <pre><code>(()=&gt;{\nfunction fetchData(callback) {\n  setTimeout(() =&gt; {\n    const data = { name: \"John\", age: 30 };\n    callback(data);\n  }, 3000);\n}\n\n// Ejecutar la funci\u00f3n con un callback\nfetchData(function(data) {\n  console.log(data);\n});\n\nconsole.log(\"Data is being fetched...\");\n})();\n</code></pre> <pre><code>{ name: \"John\", age: 30 }\n</code></pre> <ol> <li>La funci\u00f3n <code>fetchData</code> toma un <code>callback</code> como argumento.</li> <li>Dentro de <code>fetchData</code>, se usa <code>setTimeout</code> para simular una operaci\u00f3n as\u00edncrona que dura 3 segundos.</li> <li>Despu\u00e9s de 3 segundos, <code>setTimeout</code> ejecuta el <code>callback</code> pasando un objeto <code>data</code> como argumento.</li> <li><code>fetchData</code> se llama con una funci\u00f3n an\u00f3nima como callback que imprime el <code>data</code>.</li> <li>Mientras <code>setTimeout</code> espera, el programa sigue ejecutando el c\u00f3digo siguiente y muestra \"Data is being fetched...\".</li> </ol>"},{"location":"Moduls/DWEC/promesas.html#callbacks-en-operaciones-asincronas","title":"Callbacks en Operaciones As\u00edncronas","text":"<p>Los callbacks son \u00fatiles cuando se trabaja con operaciones as\u00edncronas. En el siguiente ejemplo, la funci\u00f3n <code>second</code> tiene c\u00f3digo as\u00edncrono que usa un callback para garantizar que la funci\u00f3n <code>third</code> se ejecute despu\u00e9s de que <code>second</code> haya terminado su tarea.</p> <pre><code>(()=&gt;{\nfunction first() {\n  console.log(1);\n}\n\nfunction second(callback) {\n  setTimeout(() =&gt; {\n    console.log(2);\n    callback();\n  }, 0);\n}\n\nfunction third() {\n  console.log(3);\n}\n\nfirst();\nsecond(third);\n// Salida: 1 2 3\n})();\n</code></pre> <pre><code>\u001b[33m1\u001b[39m\n</code></pre> <ol> <li><code>first</code> imprime <code>1</code>.</li> <li><code>second</code> toma una funci\u00f3n <code>callback</code> como argumento y usa <code>setTimeout</code> con un retardo de 0 milisegundos para simular una operaci\u00f3n as\u00edncrona.</li> <li><code>second</code> imprime <code>2</code> y luego llama al <code>callback</code> pasado (en este caso, <code>third</code>).</li> <li><code>third</code> imprime <code>3</code>.</li> </ol> <p>En este ejemplo, <code>first</code> se ejecuta primero, seguido de <code>second</code> que llama a <code>third</code> despu\u00e9s de su operaci\u00f3n as\u00edncrona.</p>"},{"location":"Moduls/DWEC/promesas.html#callback-hell-infierno-de-callbacks","title":"Callback Hell (Infierno de Callbacks)","text":"<p>El uso excesivo de callbacks puede llevar a una situaci\u00f3n conocida como \"Callback Hell\" o \"Pyramid of Doom\", donde el c\u00f3digo se vuelve dif\u00edcil de leer y mantener debido a la anidaci\u00f3n profunda de funciones.</p> <pre><code>getData(function(a) {\n  getMoreData(a, function(b) {\n    getEvenMoreData(b, function(c) {\n      getEvenEvenMoreData(c, function(d) {\n        getFinalData(d, function(finalData) {\n          console.log(finalData);\n        });\n      });\n    });\n  });\n});\n</code></pre> <p>En este ejemplo, cada funci\u00f3n depende de los datos obtenidos por la funci\u00f3n anterior. Esta cadena de dependencias se anida cada vez m\u00e1s profundamente, resultando en un c\u00f3digo que es dif\u00edcil de mantener. </p> <p>Veamos un ejemplo de c\u00f3digo que puede suponer un Callback Hell:</p> <pre><code>document.addEventListener(\"DOMContentLoaded\", () =&gt; {\n\n    function hacerPeticion(url, callback) {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4 &amp;&amp; xhr.status === 200) {\n                const data = JSON.parse(xhr.responseText);\n                callback(null, data);\n            } else if (xhr.readyState === 4) {\n\n                callback(new Error(`Error al hacer la petici\u00f3n a ${url}`));\n            }\n        };\n        xhr.send();\n    }\n\n    // 2. Leer un archivo del input\n    function leerArchivo(callback) {\n        const inputArchivo = document.getElementById('archivoInput');\n        const archivo = inputArchivo.files[0];\n\n        if (!archivo) {\n            callback(new Error('No se ha seleccionado ning\u00fan archivo'));\n            return;\n        }\n        const lector = new FileReader();\n        lector.onload = function (evento) {\n            const contenido = evento.target.result;\n            callback(null, contenido);\n        };\n        lector.onerror = function () {\n            callback(new Error('Error al leer el archivo'));\n        };\n        lector.readAsText(archivo);\n    }\n\n    // 3. Guardar los datos en IndexedDB\n    function guardarEnIndexedDB(datos, callback) {\n        const solicitudDB = indexedDB.open('miBaseDeDatos', 1);\n\n        solicitudDB.onupgradeneeded = function (evento) {\n            const db = evento.target.result;\n            db.createObjectStore('archivos', { keyPath: 'id', autoIncrement: true });\n        };\n\n        solicitudDB.onsuccess = function (evento) {\n            const db = evento.target.result;\n            const transaccion = db.transaction('archivos', 'readwrite');\n            const almacen = transaccion.objectStore('archivos');\n\n            const solicitudInsertar = almacen.add({ contenido: datos });\n\n            solicitudInsertar.onsuccess = function () {\n                callback(null, 'Datos guardados correctamente en IndexedDB');\n            };\n\n            solicitudInsertar.onerror = function () {\n                callback(new Error('Error al guardar en IndexedDB'));\n            };\n        };\n\n        solicitudDB.onerror = function () {\n            callback(new Error('Error al abrir IndexedDB'));\n        };\n    }\n\n    // Iniciamos la cadena de callbacks (Callback Hell)\n\n    document.querySelector(\"#boton\").addEventListener(\"click\", (event) =&gt; {\n        event.preventDefault();\n\n        // 1. Petici\u00f3n al servidor\n        hacerPeticion('http://localhost:5500/datos.json', function (error, datosServidor) {\n            if (error) {\n                console.error(error);\n                return;\n            }\n            console.log('Datos recibidos del servidor:', datosServidor);\n\n            // 2. Leer archivo con retraso\n            setTimeout(() =&gt; {\n                leerArchivo(function (error, contenidoArchivo) {\n                    if (error) {\n                        console.error('Error al leer el archivo:', error);\n                        return;\n                    }\n                    console.log('Contenido del archivo le\u00eddo:', contenidoArchivo);\n\n                    // 3. Guardar los datos en IndexedDB\n                    guardarEnIndexedDB(contenidoArchivo + datosServidor, function (error, mensaje) {\n                        if (error) {\n                            console.error('Error al guardar en IndexedDB:', error);\n                            return;\n                        }\n                        console.log(mensaje);\n                        console.log('Todas las operaciones se completaron con \u00e9xito.');\n                    });\n                });\n            }, 1000);\n        });\n\n    });\n\n});\n</code></pre> <p>Podemos ver que las funciones as\u00edncronas aceptan una funci\u00f3n de <code>callback</code>. Tenemos la funci\u00f3n de tratamiento del evento del bot\u00f3n. La de hacer la petici\u00f3n al servidor, que hacemos con <code>XMLHttpRequest</code> para no usar promesas. Tenemos un setTimeOut que usamos para retrasar la funci\u00f3n que le pasamos, la cual lee un fichero que el usuario ha puesto en un input. Esta funci\u00f3n recibe como callback una en la que guardamos el resultado en una base de datos <code>indexedDB</code>. Todas son peticiones as\u00edncronas a la API del navegador y necesitan un callback. </p> <p>Como se puede ver, mantener este c\u00f3digo puede ser complicado. Despu\u00e9s lo volveremos a escribir con <code>fetch</code> y con promesas y la sintaxi <code>async/await</code>y se demostrar\u00e1 que el c\u00f3digo queda m\u00e1s l\u00edmpio.  </p>"},{"location":"Moduls/DWEC/promesas.html#promesas","title":"Promesas","text":"<p>Las promesas en JavaScript son objetos que representan la eventual finalizaci\u00f3n (o falla) de una operaci\u00f3n as\u00edncrona y su valor resultante. Proporcionan una forma de manejar operaciones as\u00edncronas de manera m\u00e1s manejable y predecible, evitando los problemas del \"callback hell\". A continuaci\u00f3n, exploraremos c\u00f3mo funcionan las promesas y c\u00f3mo pueden ser utilizadas en diferentes contextos.</p> <p>Una promesa se crea (manualmente) utilizando el constructor <code>Promise</code>, que acepta una funci\u00f3n ejecutora como argumento. Esta funci\u00f3n ejecutora recibe dos funciones como par\u00e1metros: <code>resolve</code> y <code>reject</code>.</p> <pre><code>(()=&gt;{\nconst promise = new Promise((resolve, reject) =&gt; { // Funci\u00f3n ejecutora\n  setTimeout(() =&gt; {\n    if (Math.random() &gt; 0.5) {\n      resolve(\"Resolving an asynchronous request!\");\n    } else {\n      reject(\"Rejecting an asynchronous request!\");\n    }\n  }, 2000);\n});\n\npromise.then((response) =&gt; { //.then si se resuelve\n  console.log(response);\n}).catch((response) =&gt; { // .catch si falla\n  console.log(response);\n});\n})();\n</code></pre> <pre><code>\u001b[33m2\u001b[39m\n\u001b[33m3\u001b[39m\n</code></pre>"},{"location":"Moduls/DWEC/promesas.html#estados-de-las-promesas","title":"Estados de las Promesas","text":"<p>Las promesas pueden estar en uno de los siguientes estados:</p> <ol> <li>Pendiente (Pending): Estado inicial, la promesa a\u00fan no se ha cumplido ni ha sido rechazada.</li> <li>Cumplida (Fulfilled): La operaci\u00f3n se complet\u00f3 con \u00e9xito y se resolvi\u00f3 la promesa.</li> <li>Rechazada (Rejected): La operaci\u00f3n fall\u00f3 y la promesa fue rechazada.</li> </ol> <p>En el ejemplo anterior, la promesa tiene un 50% de probabilidad de resolverse o rechazarse despu\u00e9s de 2 segundos. Dependiendo del resultado, se ejecuta la funci\u00f3n correspondiente en <code>then</code> o <code>catch</code>.</p>"},{"location":"Moduls/DWEC/promesas.html#uso-de-promesas","title":"Uso de Promesas","text":""},{"location":"Moduls/DWEC/promesas.html#promesas-sincronas-y-asincronas","title":"Promesas S\u00edncronas y As\u00edncronas","text":"<p>Las promesas permiten retornar un objeto de forma s\u00edncrona con el que se puede trabajar, representando un valor que puede estar disponible ahora, en el futuro o nunca. Esto permite lanzar peticiones as\u00edncronas sin bloquear la ejecuci\u00f3n del c\u00f3digo.</p> <pre><code>(()=&gt;{\nfunction fetchData() {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      const data = {name: \"John\", age: 30};\n      resolve(data);\n    }, 3000);\n  });\n}\n\nfetchData().then((data) =&gt; {\n  console.log(data);\n});\n\nconsole.log(\"Data is being fetched...\");\n})();\n</code></pre> <pre><code>Data is being fetched...\n</code></pre> <p>En este ejemplo, la funci\u00f3n <code>fetchData</code> retorna una promesa que se resuelve con datos despu\u00e9s de 3 segundos. Mientras se espera la resoluci\u00f3n de la promesa, el c\u00f3digo sigue ejecut\u00e1ndose y se imprime \"Data is being fetched...\".</p>"},{"location":"Moduls/DWEC/promesas.html#encadenar-promesas","title":"Encadenar Promesas","text":"<p>El m\u00e9todo <code>then</code> de las promesas permite encadenar varias operaciones as\u00edncronas de manera secuencial. Esto es \u00fatil cuando necesitamos ejecutar una serie de tareas as\u00edncronas una tras otra.</p> <pre><code>fetchData().then((data) =&gt; {\n  console.log(\"First then:\", data);\n  return data.name;\n}).then((name) =&gt; {\n  console.log(\"Second then:\", name);\n});\n</code></pre> <p>En este ejemplo, la segunda llamada a <code>then</code> solo se ejecuta despu\u00e9s de que la primera promesa se resuelva, garantizando un flujo secuencial de operaciones.</p>"},{"location":"Moduls/DWEC/promesas.html#manejo-de-errores","title":"Manejo de Errores","text":"<p>El m\u00e9todo <code>catch</code> se utiliza para manejar errores que ocurren durante la ejecuci\u00f3n de una promesa. Este se puede encadenar despu\u00e9s de uno o varios <code>then</code>.</p> <pre><code>fetchData().then((data) =&gt; {\n  console.log(data);\n  throw new Error(\"Something went wrong!\");\n}).catch((error) =&gt; {\n  console.log(\"Caught error:\", error.message);\n});\n</code></pre> <p>Aqu\u00ed, si ocurre alg\u00fan error en cualquiera de las funciones <code>then</code>, ser\u00e1 capturado por <code>catch</code>.</p>"},{"location":"Moduls/DWEC/promesas.html#promiseall","title":"Promise.all()","text":"<p>El m\u00e9todo <code>Promise.all</code> permite ejecutar m\u00faltiples promesas en paralelo y esperar a que todas se resuelvan antes de continuar. Si alguna de las promesas se rechaza, <code>Promise.all</code> tambi\u00e9n se rechazar\u00e1.</p> <pre><code>(()=&gt;{\nconst promise1 = Promise.resolve(3);\nconst promise2 = 42;\nconst promise3 = new Promise((resolve, reject) =&gt; {\n  setTimeout(resolve, 100, 'foo');\n});\n\nPromise.all([promise1, promise2, promise3]).then((values) =&gt; {\n  console.log(values); // [3, 42, \"foo\"]\n});\n\n})();\n</code></pre> <p>En este ejemplo, <code>Promise.all</code> espera a que todas las promesas se resuelvan y luego imprime los valores resueltos en un array.</p>"},{"location":"Moduls/DWEC/promesas.html#arrays-y-promesas","title":"Arrays y promesas","text":"<p>En ocasiones es necesario recorrer un array y generar una promesa con cada elemento del array. Las situaciones pueden ser distintas, por ejemplo:</p> <ul> <li>No importa el orden ni si se cumplen las promesas: Se puede ejecutar un <code>.forEach()</code> sobre el array y crear las promesas independientemente. </li> </ul> <pre><code>(()=&gt;{\nconst array = [1, 2, 3, 4, 5];\n\narray.forEach(item =&gt; {\n  someAsyncFunction(item)\n    .then(result =&gt; {\n      console.log(`Result for item ${item}:`, result);\n    })\n    .catch(error =&gt; {\n      console.error(`Error for item ${item}:`, error);\n    });\n});\n\nfunction someAsyncFunction(item) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve(`Processed ${item}`);\n    }, Math.random() * 1000);\n  });\n}\n})();\n</code></pre> <ul> <li>No importa el orden, pero queremos hacer algo si se cumplen todas: Podemos transformar el array en un array de promesas con <code>.map()</code> y pasarlo a un <code>Promise.all()</code>.</li> </ul> <pre><code>(()=&gt;{\nconst array = [1, 2, 3, 4, 5];\n\nconst promises = array.map(item =&gt; someAsyncFunction(item));\n\nPromise.all(promises)\n  .then(results =&gt; {\n    console.log('All promises resolved:', results);\n  })\n  .catch(error =&gt; {\n    console.error('One or more promises rejected:', error);\n  });\n\nfunction someAsyncFunction(item) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve(`Processed ${item}`);\n    }, Math.random() * 1000);\n  });\n}\n})();\n</code></pre> <pre><code>Result for item 3: Processed 3\n</code></pre> <ul> <li>Las promesas se deben ejecutar en un cierto orden: No se puede hacer con <code>.forEach()</code> ni <code>.map()</code>, ya que no trata las promesas correctamente ni async/await. Es mejor usar un <code>for-of</code> con <code>async/await</code>.    </li> </ul> <pre><code>(()=&gt;{\nconst array = [1, 2, 3, 4, 5];\n\nasync function processArrayInOrder() {\n  for (const item of array) {\n    try {\n      const result = await someAsyncFunction(item);\n      console.log(`Result for item ${item}:`, result);\n    } catch (error) {\n      console.error(`Error for item ${item}:`, error);\n    }\n  }\n}\n\nprocessArrayInOrder();\n\nfunction someAsyncFunction(item) {\n  return new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n      resolve(`Processed ${item}`);\n    }, Math.random() * 1000);\n  });\n}\n})();\n</code></pre> <pre><code>All promises resolved: [\n  \"Processed 1\",\n  \"Processed 2\",\n  \"Processed 3\",\n  \"Processed 4\",\n  \"Processed 5\"\n]\n</code></pre>"},{"location":"Moduls/DWEC/promesas.html#asyncawait-en-javascript","title":"Async/Await en JavaScript","text":"<p>El uso de <code>async</code> y <code>await</code> en JavaScript ofrece una forma m\u00e1s concisa y legible de trabajar con promesas. Introducida en ECMAScript 2017, esta sintaxis facilita la gesti\u00f3n de operaciones as\u00edncronas, permitiendo escribir c\u00f3digo que parece s\u00edncrono mientras maneja promesas en segundo plano. </p> <p>Una funci\u00f3n definida con la palabra clave <code>async</code> autom\u00e1ticamente retorna una promesa. Esto significa que incluso si la funci\u00f3n parece devolver un valor regular, en realidad estar\u00e1 devolviendo una promesa que se resuelve con ese valor.</p> <p>El uso de <code>async</code> y <code>await</code> en JavaScript simplifica la gesti\u00f3n de operaciones as\u00edncronas, proporcionando una sintaxis m\u00e1s limpia y manejable en comparaci\u00f3n con el uso tradicional de promesas con <code>.then()</code> y <code>.catch()</code>. Con la introducci\u00f3n del top-level <code>await</code>, ahora es posible manejar operaciones as\u00edncronas de manera a\u00fan m\u00e1s directa en el nivel superior de los m\u00f3dulos. </p> <pre><code>(()=&gt;{\nasync function getUser() {\n  const response = await fetch('https://api.github.com/users/octocat');\n  const data = await response.json();\n  console.log(data);\n}\n\n// Ejecutar funci\u00f3n as\u00edncrona\ngetUser();\n})();\n</code></pre> <ol> <li> <p>Definici\u00f3n de la funci\u00f3n <code>async</code>:    <pre><code>async function getUser() {\n</code></pre>    Aqu\u00ed, <code>async</code> antes de la funci\u00f3n indica que esta funci\u00f3n es as\u00edncrona y retornar\u00e1 una promesa.</p> </li> <li> <p>Uso de <code>await</code>:    <pre><code>const response = await fetch('https://api.github.com/users/octocat');\nconst data = await response.json();\n</code></pre>    Dentro de una funci\u00f3n <code>async</code>, se puede usar <code>await</code> antes de una promesa para esperar su resoluci\u00f3n. En este caso, <code>await fetch</code> espera a que la promesa devuelta por <code>fetch</code> se resuelva, es decir, que la solicitud HTTP se complete y se reciba una respuesta. Del mismo modo, <code>await response.json()</code> espera a que se procese la respuesta en formato JSON.</p> </li> <li> <p>Ejecutar la funci\u00f3n as\u00edncrona:    <pre><code>getUser();\n</code></pre>    Llamar a <code>getUser()</code> ejecuta la funci\u00f3n as\u00edncrona. Dado que <code>getUser</code> retorna una promesa, se podr\u00eda encadenar con <code>.then()</code> si fuera necesario.</p> </li> </ol>"},{"location":"Moduls/DWEC/promesas.html#top-level-await","title":"Top-Level Await","text":"<p>Introducido en 2024, el top-level <code>await</code> permite usar <code>await</code> directamente en el nivel superior de los m\u00f3dulos, sin necesidad de envolver el c\u00f3digo en una funci\u00f3n <code>async</code>. Esto simplifica el c\u00f3digo y mejora su legibilidad cuando se trabaja con operaciones as\u00edncronas en el contexto global del m\u00f3dulo.</p> <p><pre><code>const colors = fetch(\"../data/colors.json\").then((response) =&gt; response.json());\nexport default await colors;\n</code></pre> 1. Fetch con <code>await</code> a nivel superior:    <pre><code>const colors = fetch(\"../data/colors.json\").then((response) =&gt; response.json());\nexport default await colors;\n</code></pre>    En este ejemplo, se est\u00e1 utilizando <code>await</code> directamente en el nivel superior del m\u00f3dulo para esperar la resoluci\u00f3n de la promesa devuelta por <code>fetch</code>. Esto permite que <code>colors</code> contenga el resultado de la operaci\u00f3n as\u00edncrona sin necesidad de definir una funci\u00f3n <code>async</code>.</p>"},{"location":"Moduls/DWEC/promesas.html#ventajas-de-asyncawait","title":"Ventajas de <code>async</code>/<code>await</code>","text":"<ol> <li> <p>Sintaxis m\u00e1s limpia y legible:    El c\u00f3digo as\u00edncrono escrito con <code>async</code>/<code>await</code> es m\u00e1s f\u00e1cil de leer y entender, ya que se parece m\u00e1s a c\u00f3digo s\u00edncrono. Esto facilita la identificaci\u00f3n de la l\u00f3gica y el flujo del programa.</p> </li> <li> <p>Manejo de errores simplificado:    Se pueden usar bloques <code>try/catch</code> para manejar errores en funciones <code>async</code>, lo que proporciona una forma clara y estructurada de gestionar excepciones.</p> </li> </ol> <pre><code>(()=&gt;{\n   async function getUser() {\n     try {\n       const response = await fetch('https://api.github.com/users/octocat');\n       if (!response.ok) throw new Error('Network response was not ok');\n       const data = await response.json();\n       console.log(data);\n     } catch (error) {\n       console.error('Fetching user failed:', error);\n     }\n   }\n   getUser();\n\n  })();\n</code></pre> <p>En este ejemplo, cualquier error que ocurra dentro de la funci\u00f3n <code>getUser</code> ser\u00e1 capturado y manejado en el bloque <code>catch</code>.</p> <ol> <li>Ejecuci\u00f3n secuencial de operaciones as\u00edncronas:    Utilizando <code>await</code>, se puede asegurar que las operaciones as\u00edncronas se ejecuten de manera secuencial, lo cual es \u00fatil cuando una operaci\u00f3n depende de los resultados de otra.</li> </ol> <pre><code>(()=&gt;{\nasync function fetchData() {\n     const user = await fetch('https://api.github.com/users/octocat').then(res =&gt; res.json());\n     const repos = await fetch(user.repos_url).then(res =&gt; res.json());\n     console.log(repos);\n   }\n   fetchData();\n})();\n</code></pre> <p>Aqu\u00ed, la segunda solicitud <code>fetch</code> solo se ejecuta despu\u00e9s de que la primera solicitud se haya completado y se haya obtenido la URL de los repositorios del usuario.</p> <p>Veamos ahora el ejemplo largo del <code>callback Hell</code> escrito con <code>async/await</code>:</p> <pre><code>document.addEventListener(\"DOMContentLoaded\", () =&gt; {\n    // 1. Petici\u00f3n al servidor utilizando Fetch y Promesas\n    async function hacerPeticion(url) {\n        try {\n            const respuesta = await fetch(url);\n            if (!respuesta.ok) {\n                throw new Error(`Error al hacer la petici\u00f3n a ${url}. Status: ${respuesta.status}`);\n            }\n            const datos = await respuesta.json();\n            return datos;\n        } catch (error) {\n            throw error;\n        }\n    }\n    // 2. Leer un archivo del input utilizando Promesas\n    function leerArchivo() {\n        return new Promise((resolve, reject) =&gt; {\n            const inputArchivo = document.getElementById('archivoInput');\n            const archivo = inputArchivo.files[0];\n            if (!archivo) {\n                reject(new Error('No se ha seleccionado ning\u00fan archivo'));\n                return;\n            }\n            const lector = new FileReader();\n            lector.onload = function (evento) {\n                resolve(evento.target.result);\n            };\n            lector.onerror = function () {\n                reject(new Error('Error al leer el archivo'));\n            };\n            lector.readAsText(archivo);\n        });\n    }\n    // 3. Guardar los datos en IndexedDB utilizando Promesas\n    function guardarEnIndexedDB(datos) {\n        return new Promise((resolve, reject) =&gt; {\n            const solicitudDB = indexedDB.open('miBaseDeDatos', 1);\n            solicitudDB.onupgradeneeded = function (evento) {\n                const db = evento.target.result;\n                db.createObjectStore('archivos', { keyPath: 'id', autoIncrement: true });\n            };\n            solicitudDB.onsuccess = function (evento) {\n                const db = evento.target.result;\n                const transaccion = db.transaction('archivos', 'readwrite');\n                const almacen = transaccion.objectStore('archivos');\n                const solicitudInsertar = almacen.add({ contenido: datos });\n                solicitudInsertar.onsuccess = function () {\n                    resolve('Datos guardados correctamente en IndexedDB');\n                };\n                solicitudInsertar.onerror = function () {\n                    reject(new Error('Error al guardar en IndexedDB'));\n                };\n            };\n            solicitudDB.onerror = function () {\n                reject(new Error('Error al abrir IndexedDB'));\n            };\n        });\n    }\n\n    // Manejo del bot\u00f3n y ejecuci\u00f3n secuencial de las funciones\n    document.querySelector(\"#boton\").addEventListener(\"click\", async (event) =&gt; {\n        event.preventDefault();\n        try {\n            // 1. Petici\u00f3n al servidor\n            const datosServidor = await hacerPeticion('http://localhost:5500/datos.json');\n            console.log('Datos recibidos del servidor:', datosServidor);\n\n            // 2. Leer el archivo despu\u00e9s de un retraso simulado\n            await new Promise(resolve =&gt; setTimeout(resolve, 1000)); // Retraso de 1 segundo\n            const contenidoArchivo = await leerArchivo();\n            console.log('Contenido del archivo le\u00eddo:', contenidoArchivo);\n\n            // 3. Guardar los datos en IndexedDB\n            const mensaje = await guardarEnIndexedDB(contenidoArchivo + datosServidor);\n            console.log(mensaje);\n            console.log('Todas las operaciones se completaron con \u00e9xito.');\n        } catch (error) {\n            console.error(error.message);\n        }\n    });\n});\n</code></pre> <p>El c\u00f3digo de las funciones no se ha complicado demasiado. De hecho, el c\u00f3digo de la del fetch es mucho m\u00e1s sencillo. Estas funciones retornan una promesa a la que podemos esperar dentro de una funci\u00f3n <code>async</code> con un <code>await</code> y hemos reducido los callback a 1, el del evento del click. </p> <pre><code>\n</code></pre>"},{"location":"Moduls/DWEC/sobreprototypeJS.html","title":"Exemples de com utilitzar prototypes en JavaScript:","text":""},{"location":"Moduls/DWEC/sobreprototypeJS.html#exemple-1-afegeix-un-metode-a-un-objecte","title":"Exemple 1: Afegeix un m\u00e8tode a un objecte","text":"<pre><code>function Persona(nom, edat) {\n    this.nom = nom;\n    this.edat = edat;\n}\n\nPersona.prototype.saluda = function() {\n    console.log(`Hola, em dic ${this.nom} i tinc ${this.edat} anys.`);\n};\n\nconst persona1 = new Persona('Joan', 30);\npersona1.saluda(); // Hola, em dic Joan i tinc 30 anys.\n</code></pre>"},{"location":"Moduls/DWEC/sobreprototypeJS.html#exemple-2-herencia-amb-prototypes","title":"Exemple 2: Her\u00e8ncia amb prototypes","text":"<pre><code>function Animal(nom) {\n    this.nom = nom;\n}\n\nAnimal.prototype.sona = function() {\n    console.log(`${this.nom} fa un so.`);\n};\n\nfunction Gos(nom, ra\u00e7a) {\n    Animal.call(this, nom);\n    this.ra\u00e7a = ra\u00e7a;\n}\n\nGos.prototype = Object.create(Animal.prototype);\nGos.prototype.constructor = Gos;\n\nGos.prototype.lladra = function() {\n    console.log(`${this.nom} est\u00e0 lladrant.`);\n};\n\nconst gos1 = new Gos('Rex', 'Pastor Alemany');\ngos1.sona(); // Rex fa un so.\ngos1.lladra(); // Rex est\u00e0 lladrant.\n</code></pre> <p>En el primer exemple, afegim un m\u00e8tode <code>saluda</code> a l'objecte <code>Persona</code> mitjan\u00e7ant el seu prototype. En el segon exemple, creem una her\u00e8ncia entre <code>Animal</code> i <code>Gos</code>, permetent que <code>Gos</code> hereti els m\u00e8todes de <code>Animal</code> i afegeixi els seus propis m\u00e8todes.</p>"},{"location":"Moduls/DWEC/sobreprototypeJS.html#quan-utilitzar-prototype","title":"Quan utilitzar prototype?","text":"<p>La decisi\u00f3 de si utilitzar <code>prototype</code> o incloure la funci\u00f3 dins la definici\u00f3 d'un objecte dep\u00e8n de diversos factors.</p>"},{"location":"Moduls/DWEC/sobreprototypeJS.html#quan-utilitzar-prototype_1","title":"Quan utilitzar <code>prototype</code>:","text":"<ol> <li> <p>M\u00e8todes compartits: Si vols que tots els objectes creats a partir d'un constructor comparteixin el mateix m\u00e8tode, utilitza <code>prototype</code>. Aix\u00f2 estalvia mem\u00f2ria, ja que el m\u00e8tode es defineix una sola vegada i es comparteix entre totes les inst\u00e0ncies.     <pre><code>function Persona(nom) {\n    this.nom = nom;\n}\n\nPersona.prototype.saluda = function() {\n    console.log(`Hola, em dic ${this.nom}.`);\n};\n\nconst persona1 = new Persona('Joan');\nconst persona2 = new Persona('Maria');\npersona1.saluda(); // Hola, em dic Joan.\npersona2.saluda(); // Hola, em dic Maria.\n</code></pre></p> </li> <li> <p>Her\u00e8ncia: Quan necessites crear una jerarquia d'objectes amb her\u00e8ncia, <code>prototype</code> \u00e9s essencial per permetre que les subclasses heretin m\u00e8todes de les superclasses.     <pre><code>function Animal(nom) {\n    this.nom = nom;\n}\n\nAnimal.prototype.sona = function() {\n    console.log(`${this.nom} fa un so.`);\n};\n\nfunction Gos(nom) {\n    Animal.call(this, nom);\n}\n\nGos.prototype = Object.create(Animal.prototype);\nGos.prototype.constructor = Gos;\n\nGos.prototype.lladra = function() {\n    console.log(`${this.nom} est\u00e0 lladrant.`);\n};\n\nconst gos1 = new Gos('Rex');\ngos1.sona(); // Rex fa un so.\ngos1.lladra(); // Rex est\u00e0 lladrant.\n</code></pre></p> </li> </ol>"},{"location":"Moduls/DWEC/sobreprototypeJS.html#quan-incloure-la-funcio-dins-la-definicio-dun-objecte","title":"Quan incloure la funci\u00f3 dins la definici\u00f3 d'un objecte:","text":"<ol> <li> <p>M\u00e8todes espec\u00edfics per inst\u00e0ncia: Si el m\u00e8tode \u00e9s espec\u00edfic per a cada inst\u00e0ncia i no es compartir\u00e0 entre altres inst\u00e0ncies, pots definir-lo dins el constructor.     <pre><code>function Persona(nom) {\n    this.nom = nom;\n    this.saluda = function() {\n        console.log(`Hola, em dic ${this.nom}.`);\n    };\n}\n\nconst persona1 = new Persona('Joan');\nconst persona2 = new Persona('Maria');\npersona1.saluda(); // Hola, em dic Joan.\npersona2.saluda(); // Hola, em dic Maria.\n</code></pre></p> </li> <li> <p>Simplicitat: Per a objectes petits o quan no necessites her\u00e8ncia o m\u00e8todes compartits, definir els m\u00e8todes dins el constructor pot ser m\u00e9s senzill i directe.</p> </li> </ol> <p>En resum, utilitza <code>prototype</code> per a m\u00e8todes compartits i her\u00e8ncia, i defineix els m\u00e8todes dins el constructor per a m\u00e8todes espec\u00edfics per inst\u00e0ncia o per simplicitat. Si tens m\u00e9s dubtes o necessites m\u00e9s exemples, estic aqu\u00ed per ajudar-te!</p>"},{"location":"Moduls/DWEC/angular/index.html","title":"Index","text":"<p>Hola, correcte</p>"},{"location":"Moduls/DWEC/angular/Typescript.html","title":"Typescript","text":"<p>En sus inicios, JavaScript se utilizaba principalmente para la validaci\u00f3n de formularios y otras tareas sencillas en el navegador. Sin embargo, a medida que la complejidad de las aplicaciones web aument\u00f3, surgieron bibliotecas como jQuery y frameworks como Angular para facilitar el desarrollo de proyectos m\u00e1s grandes y complejos. Tambi\u00e9n aparecieron herramientas dise\u00f1adas para mejorar la disciplina de programaci\u00f3n en JavaScript, siendo TypeScript una de las m\u00e1s destacadas.</p> <p>TypeScript es un superconjunto tipado de JavaScript que compila a JavaScript plano. Introduce caracter\u00edsticas como el tipado est\u00e1tico, que permite detectar errores en tiempo de escritura, y ofrece autocompletado en funci\u00f3n del tipo de variable. Adem\u00e1s, permite utilizar m\u00e9todos est\u00e1ticos de programaci\u00f3n, clases y m\u00e9todos (antes de ES6).</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#problemas-de-javascript","title":"Problemas de JavaScript","text":"<p>JavaScript, en su forma nativa, presenta varios problemas que pueden dificultar el desarrollo de aplicaciones complejas:</p> <ol> <li>Errores por variables no definidas: No declarar una variable puede llevar a errores dif\u00edciles de depurar.</li> <li>Propiedades inexistentes en objetos: Acceder a propiedades que no existen puede causar fallos en tiempo de ejecuci\u00f3n.</li> <li>Funciones de terceros: No siempre se sabe c\u00f3mo funcionan las funciones importadas, lo que puede generar problemas.</li> <li>Sobrescritura de variables y funciones: La flexibilidad de JavaScript permite sobrescribir variables y funciones, lo que puede resultar en comportamientos inesperados.</li> </ol> <p>Con la llegada de ES6, muchos de estos problemas se mitigaron, pero TypeScript proporciona una capa adicional de seguridad y eficiencia.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#transpilacion-de-typescript","title":"Transpilaci\u00f3n de TypeScript","text":"<p>Los navegadores no entienden TypeScript directamente, por lo que es necesario transpilar el c\u00f3digo TypeScript a JavaScript. Este proceso se realiza mediante herramientas autom\u00e1ticas que aseguran que el c\u00f3digo resultante sea compatible con diferentes navegadores, incluidos los m\u00e1s antiguos.</p> <p>Consideremos el siguiente c\u00f3digo JavaScript:</p> <pre><code>function saludar(nombre) {\n  console.table('Hola ' + nombre); // Hola John\n}\nconst persona = {\n  nombre: 'John'\n};\nsaludar(persona.nombre);\n</code></pre> <p>El c\u00f3digo anterior funciona, pero no proporciona garant\u00edas de tipo. No se puede asegurar que la funci\u00f3n saludar siempre reciba un string como argumento.</p> <p>Ahora veamos c\u00f3mo ser\u00eda el mismo c\u00f3digo en TypeScript:</p> <pre><code>function saludar(nombre: string) {\n  console.table('Hola ' + nombre);\n}\nconst persona = {\n  nombre: 'John'\n};\nsaludar(persona.nombre);\n</code></pre> <p>Al cambiar la extensi\u00f3n de .js a .ts, Visual Studio y otros editores de texto pueden identificar y se\u00f1alar errores de tipo, proporcionando una experiencia de desarrollo m\u00e1s robusta.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#configuracion-de-typescript","title":"Configuraci\u00f3n de TypeScript","text":"<p>Para transpilar TypeScript a JavaScript, se utiliza el comando tsc app.ts. Sin embargo, podemos configurar TypeScript para que transpile autom\u00e1ticamente cada vez que guardamos un archivo:</p> <ol> <li>Inicializar TypeScript: Ejecutar <code>tsc --init</code> crea un archivo <code>tsconfig.json</code>, que puede ser utilizado tanto por tsc como por Visual Studio.</li> <li>Transpilaci\u00f3n Autom\u00e1tica: Ejecutar tsc -w mantiene el proceso en espera de cambios en los archivos <code>.ts</code> para transpilar autom\u00e1ticamente.</li> </ol> <p>Frameworks como Angular ya vienen configurados para manejar esta transpilaci\u00f3n de manera autom\u00e1tica, simplificando a\u00fan m\u00e1s el proceso de desarrollo.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#estandares-en-typescript","title":"Est\u00e1ndares en TypeScript","text":"<p>TypeScript, en su archivo <code>tsconfig.json</code>, transpila por defecto de TypeScript a JavaScript ES6. Aunque nosotros podemos programar en ES6, ES5 es m\u00e1s compatible con navegadores antiguos y puede realizar las mismas funciones que ES6. Las novedades de ES6, como las clases, let, const, y las funciones flecha, est\u00e1n dise\u00f1adas para mejorar la programaci\u00f3n y son m\u00e1s parecidas a las caracter\u00edsticas de TypeScript.</p> <p>Transpila este ejemplo sencillo para entender c\u00f3mo funciona la transpilaci\u00f3n de ES6 a ES5:</p> <pre><code>let nombre = 'Joaquin';\nif(true){\n    let nombre = 'Chimo';\n}\nconsole.log(nombre);\n</code></pre> <p>En este ejemplo, let declara variables con \u00e1mbito de bloque. Cuando se transpila a ES5, <code>let</code> se convierte en <code>var</code>, que no tiene \u00e1mbito de bloque, lo que puede cambiar el comportamiento del c\u00f3digo.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#tipos-de-datos","title":"Tipos de Datos","text":"<p>TypeScript asigna un tipo de datos est\u00e1tico en la primera asignaci\u00f3n no expl\u00edcita. Sin embargo, es m\u00e1s recomendable declarar expl\u00edcitamente los tipos de datos, como en otros lenguajes tipados. Si necesitamos tipado din\u00e1mico, podemos usar el tipo any, aunque no es recomendable.</p> <p>Ejemplos de declaraci\u00f3n de tipos en TypeScript: <pre><code>let nombre: string = 'Joaquin';\nlet numero: number = 123;  // (en min\u00fascula)\nlet cualquierDato: any;\nlet booleano: boolean;\nlet hoy: Date = new Date();  // Tipo clase\nlet persona = {\n    nombre: 'Pepe',\n    edad: 30\n};\nlet personajes: string[] = [];\nlet p: Array&lt;string&gt; = [];\n</code></pre></p> <p>Si intentamos asignar otros datos al objeto persona, TypeScript nos ayudar\u00e1 a detectar errores en tiempo de escritura.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#parametros-de-las-funciones-y-valores-de-retorno","title":"Par\u00e1metros de las Funciones y Valores de Retorno","text":"<p>TypeScript nos permite definir el tipo de los par\u00e1metros de las funciones y su valor de retorno. Esto ayuda a prevenir errores y a mejorar la autocompletaci\u00f3n en los editores de texto.</p> <pre><code>function sumar(a: number, b: number): number {\n    return a + b;\n}\n</code></pre> <p>En este ejemplo, los par\u00e1metros a y b son de tipo <code>number</code>, y la funci\u00f3n retorna un valor de tipo <code>number</code>.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#funciones-flecha-es6-a-es5","title":"Funciones Flecha: ES6 a ES5","text":"<p>Las funciones flecha de ES6 ofrecen una sintaxis m\u00e1s concisa para escribir funciones an\u00f3nimas y no tienen su propio contexto this, lo que puede ser beneficioso en muchos casos. Al transpilar a ES5, estas funciones se convierten en funciones normales.</p> <p>Ejemplo de una funci\u00f3n flecha: <pre><code>const saludar = (nombre: string): void =&gt; {\n    console.log('Hola ' + nombre);\n};\n</code></pre> Transpilado a ES5: <pre><code>var saludar = function (nombre) {\n    console.log('Hola ' + nombre);\n};\n</code></pre></p>"},{"location":"Moduls/DWEC/angular/Typescript.html#promesas-y-tipado-en-typescript","title":"Promesas y Tipado en TypeScript","text":"<p>A continuaci\u00f3n, se muestra un ejemplo de c\u00f3mo se pueden usar promesas en TypeScript: <pre><code>(() =&gt; {\n    const recogerEsencia = (cantidad: number): Promise&lt;number&gt; =&gt; {\n        let cantidadActual = 1000;\n        return new Promise((resolve, reject) =&gt; {\n            if (cantidad &gt; cantidadActual) {\n                reject('No queda');\n            } else {\n                cantidadActual -= cantidad;\n                resolve(cantidadActual);\n            }\n        });\n    }\n    recogerEsencia(500)\n        .then(cantidadActual =&gt; console.log(`Queda ${cantidadActual}`))\n        .catch(err =&gt; console.warn(err));\n})();\n</code></pre> En este ejemplo, la funci\u00f3n recogerEsencia retorna una promesa que resuelve con la cantidad actual de esencia si hay suficiente, o rechaza con un mensaje de error si no hay suficiente. La funci\u00f3n est\u00e1 tipada para retornar una Promise, lo que facilita la comprensi\u00f3n y el mantenimiento del c\u00f3digo."},{"location":"Moduls/DWEC/angular/Typescript.html#transpilacion-a-es6","title":"Transpilaci\u00f3n a ES6","text":"<p>ES5 no soporta promesas de manera nativa, por lo que TypeScript no puede transpilar promesas a ES5. Para solucionar esto, debemos cambiar el objetivo de la transpilaci\u00f3n a ES6 en el archivo tsconfig.json. Angular ya utiliza bibliotecas que permiten que las promesas funcionen incluso en ES5. <pre><code>{\n    \"compilerOptions\": {\n        \"target\": \"ES6\"\n    }\n}\n</code></pre></p>"},{"location":"Moduls/DWEC/angular/Typescript.html#interfaces","title":"Interfaces","text":"<p>Las interfaces en TypeScript nos permiten definir la forma de los objetos, lo que facilita la validaci\u00f3n y el autocompletado en tiempo de desarrollo. <pre><code>(() =&gt; {\n    function enviar(persona: { nombre: string }) { // Problem\u00e1tico\n        console.log(`Enviando a ${persona.nombre} a Arrakis`);\n    }\n\n    let persona = { nombre: 'Jessica', edad: 30 };\n    enviar(persona);\n\n    ///////////////////// Interfaces ///////////////////////\n    interface Caracter {\n        nombre: string,\n        edad: number,\n        familia?: string // opcional\n    }\n\n    let personaInterface: Caracter = { nombre: 'Hawat', edad: 80 };\n\n    function enviarInterface(persona: Caracter) { // M\u00e1s f\u00e1cil de mantener\n        console.log(`Enviando a ${persona.nombre} a Arrakis`);\n    }\n\n    enviarInterface(personaInterface);\n})();\n</code></pre> En este ejemplo, la interfaz Caracter define la estructura del objeto personaInterface. Usar interfaces hace que el c\u00f3digo sea m\u00e1s f\u00e1cil de mantener y refactorizar.</p>"},{"location":"Moduls/DWEC/angular/Typescript.html#clases","title":"Clases","text":"<p><pre><code>(() =&gt; {\n    class Recolector {\n        private piloto: string = 'fremen';\n        constructor(\n            public identificador: string, \n            public propietario: string, \n            public buenEstado: boolean = true, \n            private lugar?: string\n        ) {}\n    }\n\n    let rec = new Recolector('1234', 'cofradia', true, 'desierto');\n    console.log(rec.piloto);\n})();\n</code></pre> En este ejemplo, la clase Recolector tiene propiedades p\u00fablicas y privadas, y un constructor que inicializa estas propiedades. Adem\u00e1s, hay valores por defecto y par\u00e1metros opcionales.</p> <p>En TypeScript, puedes definir los par\u00e1metros del constructor directamente en la lista de par\u00e1metros del constructor y usar modificadores de acceso (public, private, protected, readonly). Esto autom\u00e1ticamente crea e inicializa esos atributos en la clase, lo que elimina la necesidad de declarar y asignar manualmente estos par\u00e1metros dentro del cuerpo del constructor usando this.</p> <p>Si lo transpilamos a ES5: <pre><code>var Recolector = /** @class */ (function () {\n    function Recolector(identificador, propietario, buenEstado, lugar) {\n        if (buenEstado === void 0) { buenEstado = true; }\n        this.identificador = identificador;\n        this.propietario = propietario;\n        this.buenEstado = buenEstado;\n        this.lugar = lugar;\n    }\n    return Recolector;\n}());\n\nvar recolector = new Recolector('1234', 'cofradia', true, 'desierto');\n</code></pre></p>"},{"location":"Moduls/DWEC/angular/Typescript.html#decoradores","title":"Decoradores","text":"<p>Los decoradores en TypeScript son una caracter\u00edstica experimental que se usa extensivamente en Angular para a\u00f1adir metadatos a clases y sus miembros. <pre><code>(() =&gt; {\n    function imprimirConsola(constructorClase: Function) {\n        console.log(constructorClase);\n    }\n\n    @imprimirConsola  // Necesita habilitar experimentalDecorators en tsconfig\n    class Recolector {\n        constructor(\n            public identificador: string, \n            public propietario: string, \n            public buenEstado: boolean = true, \n            private lugar?: string\n        ) {}\n    }\n\n    let rec = new Recolector('1234', 'cofradia', true, 'desierto');\n})();\n</code></pre> Para utilizar decoradores, debemos habilitar experimentalDecorators en tsconfig.json: <pre><code>{\n    \"compilerOptions\": {\n        \"experimentalDecorators\": true\n    }\n}\n</code></pre> Aunque nosotros no crearemos decoradores, Angular los utiliza ampliamente para definir componentes, servicios, y otros elementos.</p>"},{"location":"Moduls/DWEC/angular/angular.html","title":"Introducci\u00f3n a Angular","text":"<p>Angular es un framework de desarrollo web de c\u00f3digo abierto, mantenido por Google, para la creaci\u00f3n de aplicaciones web front-end din\u00e1micas. Se basa en TypeScript, una extensi\u00f3n de JavaScript que a\u00f1ade tipado est\u00e1tico, para mejorar la legibilidad, mantenibilidad y robustez del c\u00f3digo. </p> <p>Angular cambia totalmente la manera de programar. Reduce significativamente el c\u00f3digo que hay que escribir a cambio de ser muy r\u00edgido en la manera de tratar con los elementos de la aplicaci\u00f3n. Por tanto, tiene una curva de aprendizaje un poco alta al principio. </p> <p>Evoluci\u00f3n del nombre y versiones</p> <p>El framework ha experimentado cambios en su nombre y esquema de versiones a lo largo del tiempo:</p> <ul> <li>Hasta la versi\u00f3n 1.7: Angular.js</li> <li>Desde la versi\u00f3n 2: Angular 2, 4, 5, 6, 7, ..., 18 (actual)</li> </ul> <p>Cada 6 meses libera una nueva versi\u00f3n. Suelen ser bastante compatibles entre las que est\u00e1n pr\u00f3ximas y las \u00faltimas son retrocompatibles, excepto entre la 1 y la 2, donde cambi\u00f3 casi todo. </p> <p>Caracter\u00edsticas principales</p> <ul> <li>Expressivitad en las plantillas HTML: Permite crear interfaces de usuario din\u00e1micas y declarativas utilizando sintaxis HTML enriquecida.</li> <li>Dise\u00f1o modular y Lazy Loading: Promueve la organizaci\u00f3n del c\u00f3digo en m\u00f3dulos reutilizables y la carga en diferido de componentes para optimizar el rendimiento.</li> <li>Facilidad para reutlizar componentes: Fomenta la creaci\u00f3n de componentes reutilizables que encapsulan funcionalidad y l\u00f3gica de negocio, mejorando la modularidad y mantenibilidad del c\u00f3digo.</li> <li>Comunicaci\u00f3n fluida con el backend: Facilita la comunicaci\u00f3n entre la aplicaci\u00f3n Angular y el servidor backend, permitiendo diversas tecnolog\u00edas como RESTful APIs, WebSockets y Server-Side Rendering.</li> <li>Herramientas de desarrollo potentes: Ofrece una completa suite de herramientas de desarrollo, como Augury, Karma y Jasmine, para facilitar la creaci\u00f3n, prueba y depuraci\u00f3n de aplicaciones.</li> <li>Integraci\u00f3n con frameworks de dise\u00f1o: Se integra perfectamente con frameworks de dise\u00f1o populares como Bootstrap, Angular Material e Ionic, permitiendo crear interfaces de usuario atractivas y consistentes.</li> <li>Single Page Applications (SPAs): Permite la creaci\u00f3n de aplicaciones web de una sola p\u00e1gina (SPAs).</li> <li>Arquitectura extensible: Posee un sistema modular extensible que facilita la incorporaci\u00f3n de nuevas funcionalidades y bibliotecas de terceros.</li> <li>Reactividad simplificada: Simplifica la gesti\u00f3n de la reactividad en la interfaz de usuario, permitiendo que los cambios en los datos se reflejen autom\u00e1ticamente en la vista.</li> <li>DOM virtual: Implementa un DOM virtual que optimiza el rendimiento y reduce las manipulaciones directas del DOM real.</li> <li>Pensado para grandes aplicaciones: Est\u00e1 dise\u00f1ado para el desarrollo de aplicaciones web a gran escala, ofreciendo caracter\u00edsticas como el enrutado, la gesti\u00f3n de estado y la inyecci\u00f3n de dependencias.</li> </ul> <p>Tipos de aplicaciones web con Angular</p> <p>Angular se puede utilizar para desarrollar diferentes tipos de aplicaciones web:</p> <ul> <li>P\u00e1ginas web tradicionales: Permite generar p\u00e1ginas web din\u00e1micas con HTML generado en el servidor y Javascript para la interacci\u00f3n y las peticiones AJAX.</li> <li>Single Page Applications (SPAs): Facilita la creaci\u00f3n de SPAs que generan el HTML en el cliente a partir de datos JSON o XML enviados por el servidor. Puede que este tipo de APPs sean para las que est\u00e1 m\u00e1s preparado. </li> <li>Progressive Web Applications (PWAs): Brinda soporte para el desarrollo de PWAs, que ofrecen una experiencia similar a las aplicaciones nativas, con la posibilidad de funcionar sin conexi\u00f3n y acceso a las capacidades del dispositivo.</li> <li>Aplicaciones h\u00edbridas: Permite la creaci\u00f3n de aplicaciones h\u00edbridas que se ejecutan dentro de un navegador web m\u00ednimo embebido en la aplicaci\u00f3n nativa, utilizando tecnolog\u00edas como Cordova o Ionic.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#requisitos-previos-para-comenzar-con-angular","title":"Requisitos previos para comenzar con Angular","text":"<p>Instalaci\u00f3n de herramientas b\u00e1sicas</p> <p>Antes de adentrarnos en el mundo de Angular, es necesario contar con algunas herramientas esenciales para el desarrollo:</p> <p>1. Node.js:</p> <pre><code>sudo apt install nodejs\n</code></pre> <p>2. npm:</p> <pre><code>sudo apt install npm\n</code></pre> <p>3. TypeScript:</p> <pre><code>sudo npm install -g typescript\n</code></pre> <p>4. CLI de Angular:</p> <ul> <li>La interfaz de l\u00ednea de comandos de Angular (CLI) facilita la creaci\u00f3n, desarrollo y mantenimiento de proyectos Angular. </li> </ul> <pre><code>sudo npm install -g @angular/cli\n</code></pre> <p>5. Editor de texto:</p> <ul> <li>En Visual Studio<ul> <li>Angular 2 TypeScript Emmet</li> <li>Angular Language Service</li> <li>Angular Snippets</li> <li>Material icon Theme</li> </ul> </li> </ul> <p>6. Navegador web:</p> <p>https://angular.io/guide/devtools </p> <p>8. Actualizaci\u00f3n de Node.js:</p> <pre><code>sudo npm install -g n\nsudo n stable\nsudo npm install -g npm\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#el-contrato-del-framework","title":"El \"contrato\" del framework:","text":"<p>Es importante tener en cuenta que la adopci\u00f3n de un framework como Angular implica un compromiso por parte del desarrollador. Al utilizar un framework, se aceptan ciertas limitaciones y responsabilidades:</p> <ul> <li>Inversi\u00f3n de tiempo: Se requiere un tiempo de aprendizaje para comprender el funcionamiento del framework y sus mejores pr\u00e1cticas.</li> <li>Cambio de h\u00e1bitos: El uso de un framework implica un cambio en la forma de abordar el desarrollo web, lo que puede requerir la adaptaci\u00f3n de h\u00e1bitos y metodolog\u00edas de trabajo previas.</li> <li>Restricciones en el uso de librer\u00edas: Algunos frameworks pueden limitar el uso de ciertas librer\u00edas o herramientas externas, obligando a trabajar dentro del ecosistema propio del framework.</li> <li>Abstracci\u00f3n y potencial falta de comprensi\u00f3n: La abstracci\u00f3n que ofrece el framework puede, en ocasiones, dificultar la comprensi\u00f3n profunda del funcionamiento interno de las aplicaciones.</li> <li>Dependencia y actualizaciones: El desarrollo queda sujeto a las actualizaciones y evoluciones del framework, lo que puede requerir cambios constantes en el c\u00f3digo y la adaptaci\u00f3n a nuevas versiones.</li> <li>Compromiso a largo plazo: La adopci\u00f3n de un framework implica un compromiso a largo plazo con la tecnolog\u00eda elegida, lo que puede dificultar el cambio a otro framework en el futuro.</li> <li>Potencial p\u00e9rdida de habilidades b\u00e1sicas: El uso excesivo de un framework puede llevar a la p\u00e9rdida de pr\u00e1ctica y dominio de las habilidades de desarrollo web b\u00e1sicas.</li> </ul> <p>Silos y portabilidad del c\u00f3digo:</p> <p>Es importante recordar que el uso de un framework espec\u00edfico puede crear un \"silo\" en el desarrollo, dificultando la reutilizaci\u00f3n del c\u00f3digo en otros proyectos que no utilicen el mismo framework. </p> <p>Alternativas:</p> <p>Es importante destacar que el desarrollo web no se limita \u00fanicamente al uso de frameworks. La opci\u00f3n de trabajar con JavaScript puro (\"Vanilla JS\") junto con librer\u00edas puntuales como JQuery, Lodash, Ramda, Mocha o RxJS sigue siendo una alternativa viable para muchos proyectos.</p> <p>https://javarome.medium.com/design-noframework-bbc00a02d9b3 </p> <p>Antes de embarcarse en el desarrollo con Angular, es crucial evaluar cuidadosamente las necesidades del proyecto, las habilidades del equipo y las implicaciones a largo plazo de adoptar un framework. </p>"},{"location":"Moduls/DWEC/angular/angular.html#primeros-pasos-con-angular-hola-mundo","title":"Primeros pasos con Angular: \u00a1Hola Mundo!","text":"<p>En este cap\u00edtulo, daremos nuestros primeros pasos en el mundo de Angular creando una sencilla aplicaci\u00f3n que muestre el cl\u00e1sico mensaje \"Hola Mundo\". A lo largo del camino, conoceremos algunos conceptos b\u00e1sicos del framework y la estructura de un proyecto Angular.</p> <p>Preparaci\u00f3n del entorno</p> <ol> <li>Instalaci\u00f3n de herramientas previas:</li> </ol> <pre><code>sudo npm install -g @angular/cli [--force]\nng new my-app\ncd my-app \nng serve -o\n</code></pre> <ol> <li>Creaci\u00f3n de un nuevo proyecto:</li> </ol> <pre><code>ng new mi-aplicacion\n</code></pre> <p>Este comando crear\u00e1 la estructura b\u00e1sica del proyecto.</p> <p>Estructura del proyecto:</p> <p>La estructura de un proyecto Angular t\u00edpico se compone de las siguientes carpetas:</p> <ul> <li>src: Contiene el c\u00f3digo fuente de la aplicaci\u00f3n, incluyendo componentes, servicios, m\u00f3dulos y otros elementos.</li> <li>assets: Almacena recursos est\u00e1ticos como im\u00e1genes, fuentes y archivos CSS.</li> <li>environments: Define las variables de entorno para diferentes configuraciones (desarrollo, producci\u00f3n, etc.).</li> <li>node_modules: Contiene las dependencias de terceros instaladas mediante npm.</li> <li>package.json: El archivo de configuraci\u00f3n del proyecto, donde se especifican las dependencias, scripts y metadatos del proyecto.</li> <li>tsconfig.json: La configuraci\u00f3n de TypeScript para el proyecto.</li> </ul> <p>Creando el \"Hola Mundo\":</p> <ol> <li>Editando el componente principal:</li> </ol> <p>Modificar el contenido del archivo <code>app.component.ts</code> de la siguiente manera:</p> <pre><code>import { Component } from '@angular/core';  // Importaci\u00f3n del decorado\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet], // Los componentes standalone tienen imports\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {  // Un componente es una clase decorada\n  title = 'Mi primera aplicaci\u00f3n Angular';\n}\n</code></pre> <p>Este c\u00f3digo define un componente llamado <code>AppComponent</code> con un selector <code>app-root</code>. El selector indica c\u00f3mo se usar\u00e1 este componente en la plantilla HTML. El componente tiene un t\u00edtulo definido como <code>Mi primera aplicaci\u00f3n Angular</code>.</p> <ol> <li>Creando la plantilla HTML:</li> </ol> <p>El archivo <code>app.component.html</code>, dentro de las etiquetas <code>&lt;body&gt;</code>:</p> <pre><code>&lt;p&gt;\u00a1Hola Mundo!&lt;/p&gt;\n</code></pre> <ol> <li>Ejecutando la aplicaci\u00f3n:</li> </ol> <p>En la terminal, ejecutar el siguiente comando para iniciar el servidor de desarrollo local:</p> <pre><code>ng serve -o\n</code></pre> <p>Esto abrir\u00e1 un navegador web en la direcci\u00f3n <code>http://localhost:4200</code>.</p>"},{"location":"Moduls/DWEC/angular/angular.html#angular-cli","title":"Angular CLI","text":"<p>El Angular CLI (Command Line Interface) act\u00faa como un asistente que permite crear, generar, compilar, ejecutar y mantener un proyecto Javascript. Se podr\u00eda programar sin ella, pero sus comandos despliegan unas plantillas de elementos t\u00edpico de Angular en un instante y evitan el error humano en cosas rutinarias. </p>"},{"location":"Moduls/DWEC/angular/angular.html#generando-elementos-del-framework","title":"Generando elementos del framework:","text":"<p>El CLI facilita la generaci\u00f3n de los elementos b\u00e1sicos que componen una aplicaci\u00f3n Angular. Veamos algunos de los comandos m\u00e1s utilizados:</p> <ul> <li>ng generate component : Crea un nuevo componente con el nombre especificado. <li>ng generate directive : Genera una directiva para modificar el comportamiento del DOM. <li>ng generate pipe : Crea un pipe para transformar datos en la vista. <li>ng generate service : Genera un servicio para encapsular l\u00f3gica y compartir datos entre componentes. <li>ng generate class : Genera una clase simple de TypeScript. <li>ng generate interface : Crea una interfaz para definir contratos de tipos. <li>ng generate enum : Genera una enumeraci\u00f3n para definir un conjunto de valores constantes. <li>ng generate module : Crea un nuevo m\u00f3dulo para organizar el c\u00f3digo de la aplicaci\u00f3n. <li>ng generate guard : Genera un guard para controlar el acceso a rutas en la aplicaci\u00f3n. <p><code>generate</code>puede ser resumido con <code>g</code>, por ejemplo: ng g component"},{"location":"Moduls/DWEC/angular/angular.html#anadiendo-e-integrando-librerias","title":"A\u00f1adiendo e integrando librer\u00edas:","text":"<p>El CLI tambi\u00e9n permite incorporar librer\u00edas externas al proyecto de forma sencilla. Por ejemplo, para a\u00f1adir el popular <code>@angular/material</code> que ofrece componentes de dise\u00f1o predefinidos:</p> <pre><code>ng add @angular/material\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#actualizando-angular","title":"Actualizando Angular:","text":"<pre><code>ng update --all\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#compilando-la-aplicacion","title":"Compilando la aplicaci\u00f3n:","text":"<p>Para generar una versi\u00f3n optimizada de la aplicaci\u00f3n lista para producci\u00f3n, se utiliza el comando <code>ng build</code>. Puedes a\u00f1adir la opci\u00f3n <code>--prod</code> para habilitar optimizaciones adicionales:</p> <pre><code>ng build [--prod]\n</code></pre> <p>Creando un nuevo proyecto:</p> <p>Para iniciar un nuevo proyecto Angular, se utiliza el comando <code>ng new</code>:</p> <pre><code>ng new mi-proyecto-angular\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#componentes-en-angular","title":"Componentes en Angular","text":"<p>Cada componente encapsula una parte espec\u00edfica de la interfaz de usuario (UI) y su funcionalidad asociada, promoviendo la modularidad y la reutilizaci\u00f3n de c\u00f3digo. A modo de bloques de construcci\u00f3n, los componentes se ensamblan para crear aplicaciones web din\u00e1micas y escalables.</p> <p>Importando el decorador fundamental:</p> <p>Para declarar un componente, es necesario importar el decorador <code>Component</code> desde el paquete <code>@angular/core</code>. Este decorador proporciona metadatos esenciales sobre el componente, como su selector, plantilla y estilos.</p> <pre><code>import { Component } from '@angular/core';\n</code></pre> <p>Estructura de un componente:</p> <p>Un componente se define como una clase TypeScript decorada con <code>@Component</code>. La estructura b\u00e1sica de un componente incluye:</p> <ul> <li>Selector: Un identificador \u00fanico que define c\u00f3mo se utilizar\u00e1 el componente en el HTML. Se especifica mediante la propiedad <code>selector</code> del decorador.</li> <li>Plantilla: El c\u00f3digo HTML que define la estructura visual del componente. Se define mediante la propiedad <code>templateUrl</code> del decorador, que apunta a un archivo HTML externo.</li> <li>Estilos: Las reglas CSS que definen la apariencia del componente. Se definen mediante la propiedad <code>styleUrls</code> del decorador, que apunta a un archivo CSS externo.</li> <li>L\u00f3gica del componente: El c\u00f3digo TypeScript que define el comportamiento del componente, como propiedades, m\u00e9todos y eventos. Este c\u00f3digo se escribe dentro de la clase del componente.</li> </ul> <p>Componentes Standalone:</p> <p>En Angular, los componentes pueden existir de dos maneras: como parte de un m\u00f3dulo o como componentes Standalone. Los componentes Standalone no requieren de un m\u00f3dulo para funcionar y se definen de forma independiente. Para declarar un componente Standalone, se utiliza la propiedad <code>standalone</code> del decorador <code>@Component</code> y se establece en <code>true</code>.</p> <p>El los pr\u00f3ximos puntos, vamos a explorar c\u00f3mo hacer componentes din\u00e1micos y reactivos y c\u00f3mo comunicar componentes y los componentes con otros elementos del framework. </p>"},{"location":"Moduls/DWEC/angular/angular.html#reactividad","title":"Reactividad","text":"<p>La reactividad web permite simplificar la manera en la que se actualizan los datos entre la interfaz y el estado de la aplicaci\u00f3n. Esta gesti\u00f3n de la reactividad, en Angular est\u00e1 basada en <code>RxJS</code> y actualmente tambi\u00e9n en <code>Signals</code>. En ocasiones usaremos los elementos de RxJS de forma expl\u00edcita, pero en el caso de las plantillas de los componentes, se hace de forma mucho m\u00e1s simplificada mediante interpolaciones. </p>"},{"location":"Moduls/DWEC/angular/angular.html#interpolacion","title":"Interpolaci\u00f3n","text":"<p>La interpolaci\u00f3n en Angular es una herramienta fundamental para inyectar datos din\u00e1micos en las plantillas HTML, permitiendo que la interfaces de usuario sean reactivas y se actualicen autom\u00e1ticamente en funci\u00f3n de los cambios en los datos.</p> <p>La interpolaci\u00f3n permite incrustar expresiones JavaScript dentro de las plantillas HTML utilizando las llaves dobles <code>{{ }}</code>. El valor de la expresi\u00f3n se eval\u00faa y se inserta en el lugar correspondiente.</p> <p>La interpolaci\u00f3n hace que las plantillas sean din\u00e1micas, ya que el contenido se actualiza autom\u00e1ticamente cuando los valores de las variables o las expresiones cambian en el c\u00f3digo TypeScript. Esto permite crear interfaces de usuario que responden a eventos, interacciones del usuario o cambios en los datos.</p> <p>Casos de uso comunes:</p> <ul> <li>Mostrar valores de variables: Puedes mostrar el valor de cualquier variable o propiedad de un componente dentro de una plantilla. Por ejemplo:</li> </ul> <pre><code>&lt;p&gt;Nombre: {{ nombre }}&lt;/p&gt;\n&lt;img src=\"{{ imagenURL }}\"&gt;\n</code></pre> <ul> <li>Ejecutar m\u00e9todos de componentes: Puedes llamar a m\u00e9todos de tu componente dentro de la plantilla y mostrar el resultado. Por ejemplo:</li> </ul> <pre><code>&lt;p&gt;Resultado: {{ metodoComponente() }}&lt;/p&gt;\n</code></pre> <p>Limitaciones:</p> <ul> <li>Direcci\u00f3n \u00fanica: La interpolaci\u00f3n solo funciona en una direcci\u00f3n, desde JavaScript hacia HTML. No se pueden modificar variables o propiedades desde la plantilla.</li> <li>Expresiones simples: Las expresiones dentro de la interpolaci\u00f3n deben ser simples y no deben contener instrucciones de control de flujo como <code>if</code>, <code>for</code> o <code>while</code>.</li> </ul> <p>Contexto de las expresiones:</p> <p>Las expresiones dentro de la interpolaci\u00f3n se eval\u00faan en el contexto del componente actual. No tienen acceso directo a variables o funciones globales.</p> <p>Buenas pr\u00e1cticas:</p> <ul> <li>Mant\u00e9n la simplicidad: Utiliza expresiones simples y evita c\u00f3digo complejo dentro de la interpolaci\u00f3n.</li> <li>Usa <code>innerHTML</code> para contenido HTML: Si la variable contiene c\u00f3digo HTML, utiliza la directiva <code>[innerHTML]</code> para evitar problemas de seguridad.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#vincular-atributos","title":"Vincular atributos","text":"<p>Angular permite vincular atributos HTML a propiedades de componentes utilizando la sintaxis <code>[]</code>. Por ejemplo:</p> <pre><code>&lt;img [src]=\"product.imageUrl\" alt=\"\"&gt;\n&lt;div [style.height.px]=\"imageHeight\"&gt;&lt;/div&gt;\n</code></pre> <p>Directivas <code>ngStyle</code> y <code>ngClass</code>:</p> <p>Las directivas <code>ngStyle</code> y <code>ngClass</code> proporcionan mayor flexibilidad para manipular estilos y clases CSS a partir de variables o expresiones. Ambas requieren la importaci\u00f3n del m\u00f3dulo <code>CommonModule</code>.</p> <p><code>ngStyle</code>:</p> <ul> <li>Permite aplicar estilos din\u00e1micos a elementos HTML.</li> <li>Acepta un objeto literal o una variable que contenga pares clave-valor para los estilos.</li> </ul> <pre><code>&lt;p [ngStyle]=\"{'font-size': tamano+'px'}\"&gt;Hola Mundo&lt;/p&gt;\n&lt;div [ngStyle]=\"styleObject\"&gt;...&lt;/div&gt;\n</code></pre> <p><code>ngClass</code>:</p> <ul> <li>Permite aplicar clases CSS din\u00e1micamente a elementos HTML.</li> <li>Acepta un objeto literal, una variable o un array que contenga las clases que se aplicar\u00e1n.</li> </ul> <pre><code>&lt;p [ngClass]=\"clase\"&gt;Hola Mundo&lt;/p&gt;\n&lt;p [ngClass]=\"[clase, claseParrafo ]\"&gt;Hola Mundo&lt;/p&gt;\n&lt;p [ngClass]=\"{'text-danger': danger, 'text-info': !danger}\"&gt;Hola Mundo&lt;/p&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#vinculacion-bidireccional-ngmodel","title":"Vinculaci\u00f3n bidireccional <code>[(ngModel)]</code>","text":"<p>La vinculaci\u00f3n bidireccional permite sincronizar el valor de un elemento de entrada (como <code>input</code> o <code>textarea</code>) con una propiedad de un componente. Requiere la importaci\u00f3n del m\u00f3dulo <code>FormsModule</code>.</p> <pre><code>&lt;input type=\"text\" [(ngModel)]=\"filterSearch\" class=\"form-control\"\nname=\"filterDesc\" id=\"filterDesc\" placeholder=\"Filter...\"&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#vincular-eventos","title":"Vincular eventos","text":"<p>Los eventos de los elementos HTML se pueden vincular a m\u00e9todos de componentes utilizando la sintaxis <code>()</code>.</p> <pre><code>&lt;button class=\"btn btn-sm\"\n[ngClass]=\"{'btn-danger': showImage, 'btn-primary': !showImage}\"\n(click)=\"toggleImage()\"&gt;\n{{showImage?'Ocultar':'Mostrar'}} imagen\n&lt;/button&gt;\n&lt;img [src]=\"product.imageUrl\" *ngIf=\"showImage\" alt=\"\"\n[title]=\"product.desc\"&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#directivas-estructurales","title":"Directivas estructurales","text":"<p>Las directivas estructurales en Angular permiten controlar el flujo condicional de las plantillas HTML, mostrando o ocultando contenido en funci\u00f3n de diversos criterios. </p> <p>Directiva <code>@if</code>:</p> <p>La directiva <code>@if</code> funciona similar a la instrucci\u00f3n <code>if</code> en JavaScript, permitiendo mostrar o esconder contenido en base a una condici\u00f3n booleana. Su sintaxis es la siguiente:</p> <pre><code>@if (expresi\u00f3nBooleana) {\n  } else {\n  }\n</code></pre> <p>Ejemplo:</p> <pre><code>@if (names.length &gt; 0) {\n  &lt;ul&gt;\n    &lt;li *ngFor=\"let name of names\"&gt;{{ name }}&lt;/li&gt;\n  &lt;/ul&gt;\n} else {\n  &lt;p&gt;No hay nombres para mostrar&lt;/p&gt;\n}\n</code></pre> <p>Directiva <code>@for</code>:</p> <p>La directiva <code>@for</code> itera sobre una colecci\u00f3n de datos, mostrando un elemento HTML por cada elemento de la colecci\u00f3n. Su sintaxis es la siguiente:</p> <pre><code>@for (elemento of colecci\u00f3n; trackBy clave) {\n  &lt;p&gt;{{ elemento }}&lt;/p&gt;\n}\n</code></pre> <p>Ejemplo:</p> <pre><code>@for (let nombre of nombres) {\n  &lt;p&gt;{{ nombre }}&lt;/p&gt;\n}\n</code></pre> <p>Directiva <code>@switch</code>:</p> <p>La directiva <code>@switch</code> funciona como la instrucci\u00f3n <code>switch</code> en JavaScript, permitiendo mostrar o esconder contenido en funci\u00f3n de una expresi\u00f3n que puede tener varios valores. Su sintaxis es la siguiente:</p> <pre><code>@switch (expresi\u00f3n) {\n  case valor1:\n    break;\n  case valor2:\n    break;\n  default:\n    }\n</code></pre> <p>Ejemplo:</p> <pre><code>@switch (tipoUsuario) {\n  case 'admin':\n    &lt;button&gt;Administrar usuarios&lt;/button&gt;\n    break;\n  case 'user':\n    &lt;button&gt;Ver mis datos&lt;/button&gt;\n    break;\n  default:\n    &lt;p&gt;Usuario no reconocido&lt;/p&gt;\n}\n</code></pre> <p>Directivas <code>@empty</code> y <code>trackBy</code>:</p> <p>Las directivas <code>@empty</code> y <code>trackBy</code> son opcionales y proporcionan funcionalidades adicionales:</p> <ul> <li> <p><code>@empty</code>: Define el contenido a mostrar cuando la colecci\u00f3n de datos est\u00e1 vac\u00eda.</p> </li> <li> <p><code>trackBy</code>: Especifica un valor \u00fanico para cada elemento de la colecci\u00f3n, lo que optimiza la actualizaci\u00f3n del DOM al iterar sobre la colecci\u00f3n.</p> </li> </ul> <p>Modernizaci\u00f3n a partir de Angular 17:</p> <p>A partir de Angular 17, las directivas estructurales <code>@if</code>, <code>@for</code> y <code>@switch</code> se han simplificado y no requieren la importaci\u00f3n de ninguna librer\u00eda adicional. Adem\u00e1s, la sintaxis se ha hecho m\u00e1s intuitiva y f\u00e1cil de leer. Es muy probable que encontremos ejemplos con ngFor, ngIf... Estos todav\u00eda funcionan, pero no se recomienda usarlos ya. </p> <p>@let</p> <p>Con @let podemos crear variables en el entorno de las plantillas. Estas tambi\u00e9n tienen \u00e1mbito de bloque y no pueden ser reasignadas.  Veamos alg\u00fan ejemplo:</p> <pre><code>@let name = 'Frodo';\n&lt;h1&gt;Dashboard for {{name}}&lt;/h1&gt;\nHello, {{name}}\n\n&lt;!-- Use with a template variable referencing an element --&gt;\n&lt;input #name&gt;\n\n@let greeting = 'Hello ' + name.value;\n\n&lt;!-- Use with an async pipe --&gt;\n@let user = user$ | async;\n</code></pre> <p>https://blog.angular.dev/introducing-let-in-angular-686f9f383f0f </p>"},{"location":"Moduls/DWEC/angular/angular.html#interfaces","title":"Interfaces","text":"<p>Las interfaces en Angular son un mecanismo fundamental para definir la estructura de objetos de datos. Proporcionan un contrato que describe las propiedades que un objeto debe tener y sus respectivos tipos. Esto mejora la legibilidad, mantenibilidad y seguridad del c\u00f3digo, ya que Angular puede detectar errores en tiempo de compilaci\u00f3n si se intenta utilizar un objeto que no cumple con la interfaz definida. </p> <p>Typescript necesita saber el contenido de los objetos y el tipo de todo. Se puede usar <code>any</code> en ocasiones contadas, pero siempre es mejor crear la interfaz. </p> <p>\u00bfPor qu\u00e9 utilizar interfaces?</p> <ul> <li>Claridad y definici\u00f3n: Las interfaces documentan de forma expl\u00edcita la estructura de los objetos, mejorando la comprensi\u00f3n del c\u00f3digo.</li> <li>Detecci\u00f3n temprana de errores: Angular puede detectar en tiempo de compilaci\u00f3n si se intenta utilizar un objeto que no cumple con la interfaz, evitando errores en tiempo de ejecuci\u00f3n.</li> <li>Refactorizaci\u00f3n segura: Al modificar la estructura de una interfaz, Angular te avisar\u00e1 de los lugares donde se utilizan objetos afectados, facilitando la refactorizaci\u00f3n segura del c\u00f3digo.</li> <li>Autocompletado: Los editores de c\u00f3digo modernos utilizan las interfaces para ofrecer autocompletado y sugerencias de tipos, mejorando la productividad del desarrollador.</li> </ul> <p>Creando una interfaz:</p> <p>Para crear una interfaz, se utiliza la palabra clave <code>interface</code> seguida por el nombre de la interfaz y un bloque con llaves que define sus propiedades:</p> <pre><code>export interface IProduct {\n  id: number;\n  description: string;\n  price: number;\n  available: Date;\n  imageUrl: string;\n  rating: number;\n}\n</code></pre> <p>Cada propiedad de la interfaz se define con su nombre, seguido de dos puntos <code>:</code> y el tipo de dato esperado.</p> <p>Utilizando interfaces:</p> <p>Una vez definida la interfaz, puedes utilizarla para declarar variables o propiedades de componentes que deben contener objetos con esa estructura. Por ejemplo:</p> <pre><code>products: IProduct[] = [\n  {\n    id: 1,\n    description: 'SSD hard drive',\n    available: new Date('2016-10-03'),\n    price: 75,\n    imageUrl: 'assets/ssd.jpg',\n    rating: 5\n  },\n  // ... otros productos\n];\n</code></pre> <p>En este ejemplo, el array <code>products</code> est\u00e1 tipado como un array de objetos que cumplen con la interfaz <code>IProduct</code>. Esto garantiza que cada objeto del array tenga las propiedades esperadas y del tipo correcto.</p>"},{"location":"Moduls/DWEC/angular/angular.html#ciclo-de-vida-de-los-componentes","title":"Ciclo de vida de los componentes","text":"Estructura de una aplicaci\u00f3n web t\u00edpica# <p>Los componentes son elementos reutilizables por naturaleza. Se pueden importar y utilizar en otros componentes, promoviendo la modularidad y evitando la duplicaci\u00f3n de c\u00f3digo. Esto facilita la creaci\u00f3n de interfaces de usuario consistentes y escalables.</p> <p>Los componentes tienen un ciclo de vida definido por una serie de m\u00e9todos que se llaman en diferentes momentos de su existencia. Algunos de los m\u00e9todos m\u00e1s importantes son:</p> <ul> <li><code>constructor</code>: Se llama cuando se crea una instancia del componente. El constructor se utiliza para inyectar dependencias y configurar valores iniciales. No se recomienda colocar l\u00f3gica de inicializaci\u00f3n aqu\u00ed porque puede ejecutarse antes de que las propiedades de entrada est\u00e9n configuradas.</li> <li><code>ngOnInit</code>: Se llama una vez que el componente se ha inicializado y est\u00e1 listo para usarse.</li> <li><code>ngAfterContentInit</code>: Se llama despu\u00e9s de que se haya inicializado el contenido del componente.</li> <li><code>ngAfterViewInit</code>: Se llama despu\u00e9s de que se haya renderizado el componente completamente.</li> <li><code>ngOnChanges</code>: Se llama cada vez que cambia una propiedad de entrada del componente. Puede ejecutarse demasiadas veces.</li> <li><code>ngDoCheck</code>: Se llama en cada ciclo de detecci\u00f3n de cambios de Angular. Se usar raramente porque se ejecuta muchas veces, s\u00f3lo si los eventos o cambios no son suficientes.</li> <li><code>ngOnDestroy</code>: Se llama cuando el componente se destruye.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#ngoninit","title":"ngOnInit","text":"<p><code>OnInit</code> es una interfaz que obliga a implementar el m\u00e9todo <code>ngOnInit()</code>. Esta interfaz forma parte del ciclo de vida de un componente, y su uso es esencial para inicializar el componente una vez que Angular ha configurado sus propiedades de entrada.</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../products.service';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n})\nexport class ProductDetailComponent implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params =&gt; {\n      const productId = params['id'];\n      // Aqu\u00ed se puede usar el productId para obtener los detalles del producto\n      // desde el servicio de productos\n      this.productsService.getProductById(productId).subscribe(product =&gt; {\n        // Manejo de los datos del producto\n        console.log(product);\n      });\n    });\n  }\n}\n</code></pre> <p>El m\u00e9todo <code>ngOnInit</code> se llama una vez que la inicializaci\u00f3n del componente est\u00e1 completa. Es especialmente \u00fatil para cualquier tipo de inicializaci\u00f3n que deba ocurrir despu\u00e9s de que Angular haya configurado todas las propiedades de entrada del componente.</p> <p>Al ejecutar <code>ngOnInit</code>nos aseguramos que todas las dependencias de datos de entrada han sido configuradas y obtenidas. Es el momento de que el componente pida nuevos datos si los necesita. Casi todos los componentes que obtienen datos de un servicio lo implementan.</p>"},{"location":"Moduls/DWEC/angular/angular.html#comunicacion-entre-componentes","title":"Comunicaci\u00f3n entre componentes","text":"<p>Los componentes se pueden anidar en una estructura jer\u00e1rquica, lo que permite crear interfaces de usuario complejas y modulares. Un componente padre puede contener uno o m\u00e1s componentes hijos, y cada componente hijo puede contener a su vez otros componentes hijos. Todo esto se hace importando el componente y usando la etiqueta HTML definida en la propiedad <code>selector</code>. </p> <p>Los componentes pueden comunicarse entre s\u00ed mediante diferentes mecanismos, como:</p> <ul> <li>Entrada y salida de datos: Los componentes pueden intercambiar datos a trav\u00e9s de propiedades de entrada y salida @Input y @Output.</li> <li>Servicios: Los componentes pueden compartir l\u00f3gica y datos mediante servicios, que son clases que encapsulan funcionalidad reutilizable.</li> <li>Eventos: Los componentes pueden emitir eventos que otros componentes pueden escuchar y responder. </li> </ul> <p>A su vez, esa comunicaci\u00f3n suele ser internamente reactiva mediante <code>Observables</code> o <code>Signals</code>. Veremos c\u00f3mo funciona la comunicaci\u00f3n t\u00edpica entre componentes padres e hijos y m\u00e1s adelante veremos c\u00f3mo comunicarse a trav\u00e9s de un servicio.  </p>"},{"location":"Moduls/DWEC/angular/angular.html#input","title":"@Input","text":"Diagrama de comunicaci\u00f3n entre componentes padres e hijos.# <p>Los componentes padres pueden enviar datos a sus componentes hijos mediante propiedades de entrada, y los componentes hijos pueden emitir eventos que sus componentes padres pueden escuchar.</p> <p>HTML de la plantilla del componente padre. Observa <code>[p]=\"product\"</code>:</p> <pre><code>&lt;h1&gt;Catalogue&lt;/h1&gt;\n&lt;div class=\"row row-cols-1 row-cols-md-2 g-4\"&gt;\n  &lt;div class=\"col\"&gt;\n    @for (product of products; track $index;){\n    &lt;app-product-item [p]=\"product\"&gt;\n    &lt;/app-product-item&gt;\n    }\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <p>El componente hijo:</p> <p><pre><code>import { Component, Input } from '@angular/core';\n...\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n})\nexport class ProductItemComponent {\n  @Input() p!: Product;\n}\n</code></pre> - La propiedad <code>p</code> est\u00e1 decorada con <code>@Input</code>, lo que permite que este componente reciba un valor desde su componente padre. - <code>p!: Product</code> indica que <code>p</code> es una propiedad obligatoria de tipo <code>Product</code>. El <code>!</code> es una aserci\u00f3n de no nulo/no indefinido, lo que le dice a TypeScript que conf\u00ede en que <code>p</code> ser\u00e1 inicializada correctamente.</p> <p>El decorador <code>@Input</code> en Angular se utiliza para marcar una propiedad de un componente como p\u00fablica, permitiendo que este reciba datos desde un componente padre, lo cual es esencial para la comunicaci\u00f3n entre componentes en Angular y facilita el flujo de datos de padres a hijos. Este enfoque promueve la modularidad al facilitar la creaci\u00f3n de componentes reutilizables y modulares, mejora la claridad al hacer expl\u00edcito qu\u00e9 datos necesita un componente para funcionar y optimiza el mantenimiento al separar claramente la l\u00f3gica de la presentaci\u00f3n de datos, lo que resulta en un c\u00f3digo m\u00e1s limpio y f\u00e1cil de gestionar en aplicaciones complejas.</p> <p>Existen varias opciones y formas de usar <code>@Input</code>, cada una con sus caracter\u00edsticas y beneficios.</p> <p>Ejemplo 1: <code>@Input</code> Requerido</p> <pre><code>@Input({ required: true }) name: string;\n</code></pre> <p>En este ejemplo, la propiedad <code>name</code> est\u00e1 marcada como requerida. Si el componente padre no proporciona un valor para <code>name</code>, Angular generar\u00e1 un error. Esto asegura que todos los componentes hijos tengan los datos necesarios para funcionar correctamente.</p> <p>Ejemplo 2: <code>@Input</code> con Getters y Setters</p> <pre><code>private myCourses: Course[];\n\n@Input()\nget courses() {\n  return this.myCourses;\n}\nset courses(courses: Course[]) {\n  this.myCourses = courses;\n}\n</code></pre> <p>Aqu\u00ed se define una propiedad <code>courses</code> con <code>@Input</code>, pero se utiliza un enfoque m\u00e1s avanzado con getters y setters. Esto permite controlar la forma en que los datos se asignan y se acceden. En este caso, <code>myCourses</code> es una propiedad privada y <code>courses</code> es una propiedad p\u00fablica que expone <code>myCourses</code> de manera controlada. Cada vez que se asignan nuevos cursos, se puede agregar l\u00f3gica adicional en el setter para manejar la asignaci\u00f3n de los datos.</p> <p>Ejemplo 3: <code>@Input</code> con Alias</p> <pre><code>@Input('userName') name: string;\n</code></pre> <p>Este ejemplo muestra c\u00f3mo se puede usar un alias con <code>@Input</code>. La propiedad p\u00fablica del componente hijo ser\u00e1 <code>name</code>, pero el componente padre puede pasarle datos usando el nombre <code>userName</code>. Esto es \u00fatil cuando se quiere mantener una convenci\u00f3n de nombres espec\u00edfica en el componente hijo, pero se quiere proporcionar un nombre m\u00e1s descriptivo o claro para el componente padre.</p>"},{"location":"Moduls/DWEC/angular/angular.html#property-has-no-initializers","title":"Property has no initializers...","text":"<p>En TypeScript, el error \"Property has no initializers...\" se produce cuando se declara una propiedad sin asignarle un valor inicial. Esto es particularmente relevante cuando se utiliza el decorador <code>@Input()</code> en Angular, ya que indica que una propiedad ser\u00e1 inicializada por el componente padre, lo cual podr\u00eda no suceder siempre. Es importante manejar este caso adecuadamente para evitar errores en tiempo de ejecuci\u00f3n y asegurar que el c\u00f3digo sea robusto.</p> <p>Existen varias formas de solucionar este problema en TypeScript:</p> <ol> <li>Utilizar el operador <code>!</code>:</li> </ol> <p><pre><code>@Input() products!: IProduct[];\n</code></pre>    Esta opci\u00f3n no es recomendable porque el operador <code>!</code> le dice a TypeScript que conf\u00ede en que la propiedad ser\u00e1 inicializada eventualmente, lo que podr\u00eda no ser cierto. Esto puede ocultar errores potenciales y llevar a problemas dif\u00edciles de depurar.</p> <ol> <li>Utilizar <code>| undefined</code> o <code>?</code>:</li> </ol> <p><pre><code>@Input() products?: IProduct[];\n// o\n@Input() products: IProduct[] | undefined;\n</code></pre>    Esta es la soluci\u00f3n m\u00e1s recomendable. Indica expl\u00edcitamente que la propiedad <code>products</code> puede no ser inicializada, permitiendo a TypeScript manejar correctamente este caso. Esto obliga a tratar la propiedad como potencialmente <code>undefined</code>, lo cual ayuda a prevenir errores en tiempo de ejecuci\u00f3n.</p> <ol> <li>Desactivar <code>strictPropertyInitialization</code> en <code>tsconfig.json</code>:</li> </ol> <p><pre><code>{\n  \"compilerOptions\": {\n    \"strictPropertyInitialization\": false\n  }\n}\n</code></pre>    Esta opci\u00f3n no es recomendable porque desactiva la verificaci\u00f3n estricta de inicializaci\u00f3n de propiedades en todo el proyecto. Esto puede llevar a pasar por alto otros errores de inicializaci\u00f3n, reduciendo la seguridad y robustez del c\u00f3digo.</p> <p>Para manejar adecuadamente la inicializaci\u00f3n de propiedades en Angular y TypeScript, es importante usar t\u00e9cnicas que indiquen claramente las posibles opciones de inicializaci\u00f3n. Usar <code>| undefined</code> o <code>?</code> es la mejor pr\u00e1ctica, ya que proporciona una forma segura y expl\u00edcita de tratar con propiedades opcionales. Se deber\u00eda evitar el uso del operador <code>!</code>, a menos que sea una propiedad que, seguro que va a llegar. </p>"},{"location":"Moduls/DWEC/angular/angular.html#output","title":"@Output","text":"<p>En Angular, el decorador <code>@Output</code> se utiliza para permitir que un componente hijo emita eventos personalizados que puedan ser capturados por su componente padre. Esto es \u00fatil para la comunicaci\u00f3n de eventos y datos desde un componente hijo hacia su padre, facilitando la interacci\u00f3n entre componentes.</p> <p>El uso del decorador <code>@Output</code> en Angular permite una comunicaci\u00f3n eficaz entre componentes hijo y padre mediante eventos personalizados.  Al emitir eventos desde el hijo y capturarlos en el padre, se puede gestionar f\u00e1cilmente la l\u00f3gica de la aplicaci\u00f3n y mantener una separaci\u00f3n clara de responsabilidades entre los componentes.</p> <p>En este ejemplo, un componente hijo emite un evento personalizado cuando se produce un cambio en la puntuaci\u00f3n (<code>ratting</code>). El componente padre escucha este evento y act\u00faa en consecuencia.</p>"},{"location":"Moduls/DWEC/angular/angular.html#paso-1-configuracion-en-el-componente-hijo","title":"Paso 1: Configuraci\u00f3n en el Componente Hijo","text":"<p>Primero, definimos un <code>EventEmitter</code> en el componente hijo que emitir\u00e1 el evento cuando cambie la puntuaci\u00f3n:</p> <pre><code>import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n})\nexport class RatingComponent {\n  @Output() rattingChanged = new EventEmitter&lt;number&gt;();\n\n  auxRatting: number;\n\n  puntuar(i: number): void {\n    this.auxRatting = i;\n    this.rattingChanged.emit(this.auxRatting);\n  }\n}\n</code></pre> <ul> <li><code>@Output() rattingChanged = new EventEmitter&lt;number&gt;();</code>: Define un evento <code>rattingChanged</code> que emitir\u00e1 un n\u00famero.</li> <li><code>puntuar(i: number): void</code>: Esta funci\u00f3n se llama cuando se cambia la puntuaci\u00f3n y emite el nuevo valor usando <code>rattingChanged.emit(this.auxRatting)</code>.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#paso-2-captura-del-evento-en-el-componente-padre","title":"Paso 2: Captura del Evento en el Componente Padre","text":"<p>En el componente padre, se escucha el evento emitido por el hijo y se define una funci\u00f3n para manejar el cambio de puntuaci\u00f3n:</p> <pre><code>&lt;!-- product-list.component.html --&gt;\n&lt;app-rating (rattingChanged)=\"changeRatting($event, product)\"&gt;&lt;/app-rating&gt;\n</code></pre> <pre><code>import { Component } from '@angular/core';\nimport { Product } from './product.model';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent {\n\n  products: Product[];\n\n  changeRatting(stars: number, p: Product): void {\n    p.ratting = stars;\n  }\n}\n</code></pre> <ul> <li><code>(rattingChanged)=\"changeRatting($event, product)\"</code>: El componente padre escucha el evento <code>rattingChanged</code> del componente hijo y llama a la funci\u00f3n <code>changeRatting</code>, pasando el valor del evento <code>$event</code> y el producto correspondiente <code>product</code>.</li> <li><code>changeRatting(stars: number, p: Product): void</code>: Esta funci\u00f3n actualiza la puntuaci\u00f3n (<code>ratting</code>) del producto con el nuevo valor recibido desde el componente hijo.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#pipes","title":"Pipes","text":"<p>Los Pipes en Angular  permiten transformar los datos directamente en las plantillas antes de mostrarlos. Al igual que los filtros en Linux, los pipes toman una entrada, la procesan y devuelven una salida transformada. Angular proporciona varios pipes predefinidos, pero tambi\u00e9n es posible crear pipes personalizados para satisfacer necesidades espec\u00edficas.</p>"},{"location":"Moduls/DWEC/angular/angular.html#uso-de-pipes-predefinidos","title":"Uso de Pipes Predefinidos","text":"<p>En Angular, los pipes se utilizan en las plantillas despu\u00e9s de la variable, separados por el s\u00edmbolo <code>|</code>. Un punto importante es que los pipes no modifican la variable original, sino que retornan una versi\u00f3n transformada de la misma. Algunos pipes predefinidos en Angular incluyen:</p> <ul> <li><code>uppercase</code>: Convierte el texto a may\u00fasculas.</li> <li><code>currency</code>: Formatea un n\u00famero como una moneda.</li> <li><code>date</code>: Formatea una fecha seg\u00fan el formato especificado.</li> </ul> <p>Aqu\u00ed hay un ejemplo de c\u00f3mo usar algunos de estos pipes predefinidos en una tabla que muestra una lista de productos:</p> <pre><code>&lt;tr *ngFor=\"let product of products\"&gt;\n    &lt;td&gt;\n        &lt;img [src]=\"product.imageUrl\" \n             *ngIf=\"showImage\" alt=\"\"\n             [title]=\"product.desc | uppercase\"&gt;\n    &lt;/td&gt;\n    &lt;td&gt;{{ product.description }}&lt;/td&gt;\n    &lt;td&gt;{{ product.price | currency:'EUR':'symbol'}}&lt;/td&gt;\n    &lt;td&gt;{{ product.available | date:'dd/MM/y' }}&lt;/td&gt;\n&lt;/tr&gt;\n</code></pre> <p>En este ejemplo: - El pipe <code>uppercase</code> se usa para convertir la descripci\u00f3n del producto a may\u00fasculas. - El pipe <code>currency</code> formatea el precio del producto en euros. - El pipe <code>date</code> formatea la fecha de disponibilidad del producto en el formato <code>dd/MM/y</code>.</p>"},{"location":"Moduls/DWEC/angular/angular.html#creacion-de-pipes-personalizados","title":"Creaci\u00f3n de Pipes Personalizados","text":"<p>Si los pipes predefinidos no cumplen con todas las necesidades de transformaci\u00f3n de datos, Angular permite crear pipes personalizados. La creaci\u00f3n de un pipe personalizado implica los siguientes pasos:</p> <ol> <li> <p>Generar el Pipe: Utilizar el comando Angular CLI para generar el esqueleto del pipe.    <pre><code>ng g pipe pipes/nombreDelPipe\n</code></pre></p> </li> <li> <p>Implementar el Pipe: Definir la l\u00f3gica de transformaci\u00f3n en el pipe generado. Aqu\u00ed hay un ejemplo de un pipe personalizado que filtra productos bas\u00e1ndose en un criterio de b\u00fasqueda:    <pre><code>import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from '../product/product';\n\n@Pipe({\n    name: 'productFilter'\n})\nexport class ProductFilterPipe implements PipeTransform {\n    transform(products: Product[], filterBy: string): Product[] {\n        const filter = filterBy ? filterBy.toLocaleLowerCase() : null;\n        return filter ? \n            products.filter(p =&gt; p.name.toLocaleLowerCase().includes(filter)) \n            : products;\n    }\n}\n</code></pre></p> </li> </ol> <p>En este pipe personalizado:    - La funci\u00f3n <code>transform</code> toma dos argumentos: una lista de productos y un criterio de b\u00fasqueda.    - Convierte el criterio de b\u00fasqueda a min\u00fasculas para realizar una comparaci\u00f3n insensible a may\u00fasculas.    - Filtra los productos cuyo nombre incluye el criterio de b\u00fasqueda.</p> <ol> <li>Usar el Pipe Personalizado: Aplicar el pipe en la plantilla para filtrar los productos seg\u00fan el criterio de b\u00fasqueda.</li> </ol> <pre><code>&lt;tr *ngFor=\"let product of products | productFilter: filter\"&gt;\n    &lt;td&gt;{{ product.name }}&lt;/td&gt;\n    &lt;td&gt;{{ product.price | currency:'EUR':'symbol' }}&lt;/td&gt;\n    &lt;td&gt;{{ product.available | date:'dd/MM/y' }}&lt;/td&gt;\n&lt;/tr&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#directivas-en-angular","title":"Directivas en Angular","text":"<p>Las directivas en Angular son un mecanismo potente para manipular el DOM de manera declarativa. Pueden modificar elementos HTML y su comportamiento en funci\u00f3n de la l\u00f3gica de la aplicaci\u00f3n. Existen tres tipos principales de directivas en Angular:</p> <ol> <li>Directivas de componente: Se definen mediante el selector en el decorador <code>@Component</code> y son las que hemos creado hasta ahora.</li> <li>Directivas de atributo: Modifican el comportamiento de un elemento. Ejemplos comunes son <code>NgClass</code> y <code>NgStyle</code>.</li> <li>Directivas estructurales: Manipulan la estructura del DOM, como <code>ngIf</code>, <code>ngFor</code> y <code>ngSwitch</code>, controlando si un elemento se muestra o no.</li> </ol>"},{"location":"Moduls/DWEC/angular/angular.html#crear-directivas-de-atributo","title":"Crear directivas de atributo","text":"<p>Podemos crear nuestras propias directivas de atributo para a\u00f1adir comportamientos personalizados a los elementos HTML. Vamos a crear una directiva llamada <code>Resaltado</code> que cambiar\u00e1 el color de fondo de un elemento cuando el rat\u00f3n pase sobre \u00e9l.</p> <p>Primero, generamos la directiva con Angular CLI:</p> <pre><code>ng g directive directives/resaltado\n</code></pre> <p>Luego, implementamos la l\u00f3gica en el archivo <code>resaltado.directive.ts</code>:</p> <pre><code>import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appResaltado]'\n})\nexport class ResaltadoDirective {\n  @Input('appResaltado') nuevoColor: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('mouseenter') entrarMouse() {\n    this.el.nativeElement.style.backgroundColor = this.nuevoColor;\n  }\n\n  @HostListener('mouseleave') saleMouse() {\n    this.el.nativeElement.style.backgroundColor = null;\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>Resaltado</code>:</p> <pre><code>&lt;div class=\"col-md-4\" [appResaltado]=\"color\"&gt;\n  &lt;!-- Contenido del elemento --&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#elementref-vs-renderer2","title":"ElementRef vs Renderer2","text":"<p><code>ElementRef</code> nos da una referencia directa a un elemento del DOM una vez renderizado. Sin embargo, utilizar <code>ElementRef</code> puede exponer riesgos de seguridad y no es la mejor pr\u00e1ctica en aplicaciones que necesitan ser multiplataforma. En cambio, <code>Renderer2</code> proporciona una abstracci\u00f3n adicional, permitiendo manipular el DOM de manera segura y compatible con aplicaciones de servidor y Web Workers.</p> <p>Ejemplo con <code>Renderer2</code>:</p> <pre><code>import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appMostrar]'\n})\nexport class MostrarDirective {\n  @Input() elementMostrar!: any;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('mouseenter') entrarMouse() {\n    this.renderer.setStyle(this.elementMostrar, 'display', '');\n  }\n\n  @HostListener('mouseleave') saleMouse() {\n    this.renderer.setStyle(this.elementMostrar, 'display', 'none');\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>Mostrar</code>:</p> <pre><code>&lt;li appMostrar \n[elementMostrar]=\"ocultar\"&gt;\n  &lt;!-- Contenido del elemento --&gt;\n&lt;/li&gt;\n\n&lt;p #ocultar style=\"margin-bottom: 0; display:none;\"&gt;\n  Producci\u00f3n: &lt;span *appForDelay=\"100; let p of placa.production\"&gt;{{p}}W&lt;/span&gt;\n&lt;/p&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#crear-directivas-estructurales","title":"Crear directivas estructurales","text":"<p>Las directivas estructurales, como <code>ngIf</code>, <code>ngFor</code> y <code>ngSwitch</code>, utilizan el asterisco (*) para simplificar la manipulaci\u00f3n de etiquetas <code>&lt;ng-template&gt;</code> que rodean al elemento que est\u00e1n manipulando.</p> <p>Vamos a crear una directiva estructural llamada <code>ForDelay</code> que retrasa la visualizaci\u00f3n de elementos en un bucle.</p> <p>Primero, generamos la directiva:</p> <pre><code>ng g directive directives/for-delay\n</code></pre> <p>Implementamos la l\u00f3gica en el archivo <code>for-delay.directive.ts</code>:</p> <pre><code>import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appForDelay]'\n})\nexport class ForDelayDirective {\n  private items: Array&lt;number&gt; = [];\n  private delay = 0;\n\n  constructor(private templateRef: TemplateRef&lt;any&gt;, private viewContainer: ViewContainerRef) {}\n\n  @Input() set appForDelay(t: number) {\n    this.delay = t;\n  }\n\n  @Input() set appForDelayOf(array: number[]) {\n    this.items = array;\n    this.renderItems();\n  }\n\n  private async renderItems() {\n    for (let item of this.items) {\n      this.viewContainer.createEmbeddedView(this.templateRef, {\n        $implicit: item\n      });\n      await this.delayTime(this.delay);\n    }\n  }\n\n  private delayTime(ms: number) {\n    return new Promise(resolve =&gt; setTimeout(resolve, ms));\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>ForDelay</code>:</p> <pre><code>&lt;span *appForDelay=\"100; let p of placa.production\"&gt;{{p}}W&lt;/span&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#eventos","title":"Eventos","text":"<p>En Angular, la manera m\u00e1s simple de gestionar eventos es con la sintaxis <code>( )</code> en el elemento HTML correspondiente. Esto crea una suscripci\u00f3n externa. Para una suscripci\u00f3n interna, usamos <code>@HostListener</code>.</p> <p>Ejemplo de suscripci\u00f3n interna con <code>@HostListener</code>:</p> <pre><code>import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appScroll]'\n})\nexport class ScrollDirective {\n  imgY = 100;\n\n  @HostListener('window:scroll', ['$event'])\n  homeScroll($event: Event) {\n    let scrollOffset = window.scrollY;\n    this.imgY = 100 - scrollOffset / 2;\n    if (this.imgY &lt; 0) {\n      this.imgY = 20;\n    }\n  }\n}\n</code></pre> <p>En el archivo de plantilla HTML, utilizamos nuestra directiva <code>Scroll</code>:</p> <pre><code>&lt;div appScroll&gt;\n  &lt;!-- Contenido del elemento --&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#modulos-en-angular","title":"M\u00f3dulos en Angular","text":"<p>A medida que una aplicaci\u00f3n de Angular crece en tama\u00f1o y complejidad, no es sostenible mantener toda la funcionalidad en un solo m\u00f3dulo <code>AppModule</code> y organizar los componentes \u00fanicamente en directorios. En Angular, los m\u00f3dulos (<code>NgModules</code>) son la manera recomendada de organizar y estructurar aplicaciones grandes y complejas. Un m\u00f3dulo es una clase con el decorador <code>@NgModule</code> que define un contenedor para un conjunto coherente de componentes, directivas, pipes y servicios.</p> <p>Angular permite la carga diferida (lazy loading) de m\u00f3dulos, lo que ayuda a mejorar el rendimiento de la aplicaci\u00f3n cargando m\u00f3dulos solo cuando se necesitan. Esta t\u00e9cnica es especialmente \u00fatil para grandes aplicaciones con muchas rutas y funcionalidades diversas.</p>"},{"location":"Moduls/DWEC/angular/angular.html#arrays-del-decorador-ngmodule","title":"Arrays del Decorador @NgModule","text":"<p>El decorador <code>@NgModule</code> define varios arrays que especifican c\u00f3mo se organiza el m\u00f3dulo:</p> <ul> <li> <p>bootstrap: Solo se utiliza en el <code>AppModule</code>, define el componente inicial que se debe cargar al iniciar la aplicaci\u00f3n.</p> </li> <li> <p>declarations: Contiene los componentes, directivas y pipes que pertenecen a este m\u00f3dulo. Cada componente, directiva o pipe solo puede estar declarado en un \u00fanico m\u00f3dulo, pero puede ser exportado para ser utilizado en otros m\u00f3dulos. La declaraci\u00f3n es necesaria para que estos elementos sean compilados y utilizados en la aplicaci\u00f3n.</p> </li> <li> <p>exports: Permite compartir los componentes, directivas y pipes con otros m\u00f3dulos. Tambi\u00e9n se pueden exportar m\u00f3dulos completos para crear un meta-m\u00f3dulo que importe otros m\u00f3dulos. Sin embargo, no se pueden exportar servicios, ya que estos son inyectables a nivel global por defecto.</p> </li> <li> <p>imports: Contiene otros m\u00f3dulos (de terceros o propios) que el m\u00f3dulo necesita. Lo que se importa son los elementos que esos m\u00f3dulos exportan.</p> </li> <li> <p>providers: Define los servicios que deben estar disponibles en toda la aplicaci\u00f3n. Normalmente, solo se declara en el <code>AppModule</code> para evitar conflictos y asegurar que el servicio est\u00e9 disponible de manera global. Los servicios pueden ser autoinyectables con <code>providedIn: 'root'</code> en su decorador <code>@Injectable</code>.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#criterios-para-separar-la-aplicacion-en-modulos","title":"Criterios para Separar la Aplicaci\u00f3n en M\u00f3dulos","text":"<p>Separar una aplicaci\u00f3n en m\u00f3dulos bien definidos facilita la gesti\u00f3n, el mantenimiento y la escalabilidad del c\u00f3digo. A continuaci\u00f3n se detallan algunos criterios para organizar los m\u00f3dulos en una aplicaci\u00f3n Angular:</p> <ul> <li> <p>M\u00f3dulos de Dominio: Se utilizan para organizar el c\u00f3digo sin representar necesariamente una ruta. Por ejemplo, un m\u00f3dulo que contiene componentes relacionados con un men\u00fa de navegaci\u00f3n.</p> </li> <li> <p>M\u00f3dulos de Secci\u00f3n: Representan secciones, rutas o p\u00e1ginas espec\u00edficas de la aplicaci\u00f3n. Por ejemplo, m\u00f3dulos para gestionar productos, clientes o facturas.</p> </li> <li> <p>M\u00f3dulos de Servicios: Se utilizan para organizar servicios que ser\u00e1n utilizados en toda la aplicaci\u00f3n. Normalmente, estos m\u00f3dulos solo se importan en el <code>AppModule</code>. Un ejemplo t\u00edpico es <code>HttpClientModule</code>.</p> </li> <li> <p>M\u00f3dulos de Componentes: Contienen componentes que pueden ser reutilizados en diversos m\u00f3dulos de la aplicaci\u00f3n. Por ejemplo, un m\u00f3dulo que contiene una vista modal para mostrar im\u00e1genes en tama\u00f1o completo.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#ejemplo-de-un-modulo-en-angular","title":"Ejemplo de un M\u00f3dulo en Angular","text":"<p>A continuaci\u00f3n, se muestra un ejemplo de c\u00f3mo definir un m\u00f3dulo en Angular.</p>"},{"location":"Moduls/DWEC/angular/angular.html#definicion-del-modulo","title":"Definici\u00f3n del M\u00f3dulo","text":"<pre><code>import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    ProductListComponent,\n    ProductDetailComponent\n  ]\n})\nexport class ProductModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#descripcion-del-modulo","title":"Descripci\u00f3n del M\u00f3dulo","text":"<p>En este ejemplo, <code>ProductModule</code> es un m\u00f3dulo que encapsula toda la funcionalidad relacionada con los productos en la aplicaci\u00f3n. Los componentes <code>ProductListComponent</code> y <code>ProductDetailComponent</code> son declarados y exportados para que puedan ser utilizados en otros m\u00f3dulos si es necesario.</p> <ul> <li>declarations: Declara <code>ProductListComponent</code> y <code>ProductDetailComponent</code> para que puedan ser utilizados dentro del m\u00f3dulo.</li> <li>imports: Importa <code>CommonModule</code> para obtener acceso a las directivas comunes de Angular, como <code>ngIf</code> y <code>ngFor</code>, e <code>FormsModule</code> para trabajar con formularios basados en plantillas.</li> <li>exports: Exporta los componentes <code>ProductListComponent</code> y <code>ProductDetailComponent</code> para que puedan ser utilizados en otros m\u00f3dulos de la aplicaci\u00f3n.</li> </ul>"},{"location":"Moduls/DWEC/angular/angular.html#organizacion-de-modulos-en-una-aplicacion-grande","title":"Organizaci\u00f3n de M\u00f3dulos en una Aplicaci\u00f3n Grande","text":"<p>Para una aplicaci\u00f3n grande, es esencial seguir una estructura modular clara y bien definida. A continuaci\u00f3n, se describe una posible estructura de m\u00f3dulos para una aplicaci\u00f3n compleja:</p>"},{"location":"Moduls/DWEC/angular/angular.html#modulo-principal-appmodule","title":"M\u00f3dulo Principal (AppModule)","text":"<p>El <code>AppModule</code> es el m\u00f3dulo principal de la aplicaci\u00f3n y generalmente contiene la configuraci\u00f3n de los servicios globales, el enrutador principal y el componente ra\u00edz.</p> <pre><code>import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#modulo-de-core","title":"M\u00f3dulo de Core","text":"<p>El <code>CoreModule</code> puede contener servicios singleton que se utilizan en toda la aplicaci\u00f3n y otros elementos que deber\u00edan ser \u00fanicos y cargados una sola vez.</p> <pre><code>import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    // Servicios singleton\n  ],\n  exports: [\n    // Componentes y directivas compartidos\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only.');\n    }\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#modulo-de-caracteristica-feature-module","title":"M\u00f3dulo de Caracter\u00edstica (Feature Module)","text":"<p>Los m\u00f3dulos de caracter\u00edstica encapsulan funcionalidad espec\u00edfica de una secci\u00f3n de la aplicaci\u00f3n, como gesti\u00f3n de productos, clientes o facturas.</p> <pre><code>import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductRoutingModule } from './product-routing.module';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    ProductRoutingModule\n  ]\n})\nexport class ProductModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/angular.html#modulo-de-rutas-routing-module","title":"M\u00f3dulo de Rutas (Routing Module)","text":"<p>El m\u00f3dulo de rutas se encarga de definir las rutas para la navegaci\u00f3n de la aplicaci\u00f3n.</p> <pre><code>import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\nconst routes: Routes = [\n  { path: 'products', component: ProductListComponent },\n  { path: 'products/:id', component: ProductDetailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductRoutingModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html","title":"Consejos y Mejores Pr\u00e1cticas para Desarrollar en Angular","text":"<p>Angular es un framework potente y flexible para desarrollar aplicaciones web modernas. Sin embargo, su complejidad puede ser abrumadora, especialmente en proyectos grandes. A continuaci\u00f3n, se presentan una serie de consejos y mejores pr\u00e1cticas para organizar y estructurar tu c\u00f3digo de Angular de manera efectiva.</p>"},{"location":"Moduls/DWEC/angular/consejos.html#1-utilizacion-de-herramientas-y-funcionalidades-de-angular","title":"1. Utilizaci\u00f3n de Herramientas y Funcionalidades de Angular","text":"<ul> <li> <p>Componentes: Utiliza componentes para dividir tu HTML en partes m\u00e1s peque\u00f1as y con una entidad propia. Cada componente deber\u00eda tener una responsabilidad clara y espec\u00edfica.</p> </li> <li> <p>Rutas: Usa el enrutador de Angular para gestionar la navegaci\u00f3n dentro de tu aplicaci\u00f3n. Define rutas en tu m\u00f3dulo de enrutamiento y aseg\u00farate de que cada ruta apunte a un componente que se encargue de una secci\u00f3n espec\u00edfica de la aplicaci\u00f3n.</p> </li> <li> <p>Interpolaci\u00f3n: Muestra variables en el HTML usando <code>{{}}</code>. Esto enlaza las propiedades del componente con la vista de manera declarativa.</p> </li> <li> <p>Estilos Din\u00e1micos: Cambia estilos de forma din\u00e1mica usando <code>ngStyle</code>, <code>ngClass</code> o las propiedades <code>[style]</code> y <code>[class]</code>.</p> </li> <li> <p>Formularios: Usa el binding bidireccional <code>[()]</code> para formularios simples y formularios reactivos para formularios m\u00e1s complejos. Los formularios reactivos ofrecen un mayor control desde el c\u00f3digo del componente.</p> </li> <li> <p>Eventos: Maneja eventos individuales usando <code>()</code>. Esto enlaza eventos del DOM con m\u00e9todos del componente.</p> </li> <li> <p>Interfaces: Utiliza interfaces para definir datos que ser\u00e1n compartidos entre varios componentes o servicios. Esto ayuda a mantener el c\u00f3digo tipado y reduce errores.</p> </li> <li> <p>Directivas de Atributo: Usa directivas de atributo para manejar eventos recurrentes en varios componentes. Esto permite reutilizar l\u00f3gica de manera eficiente.</p> </li> <li> <p>Guards: Protege las rutas de tu aplicaci\u00f3n con guards. Los guards pueden controlar el acceso a las rutas bas\u00e1ndose en condiciones espec\u00edficas.</p> </li> <li> <p>Servicios y Resolvers: Usa servicios para guardar y servir datos tanto en el navegador como en el servidor. Los resolvers pueden precargar datos antes de activar una ruta, mejorando la experiencia del usuario.</p> </li> <li> <p>Variables Globales:</p> <ul> <li>Environment: Usa variables de entorno (<code>environment.ts</code>) para configurar valores globales que pueden ser consultados por cualquier componente.</li> <li>Servicios con Observable: Utiliza servicios que expongan Observables para reaccionar a cambios en tiempo real.</li> </ul> </li> <li> <p>M\u00f3dulos: Divide tu aplicaci\u00f3n en m\u00f3dulos. Los m\u00f3dulos permiten organizar tu c\u00f3digo en partes diferenciadas y reutilizables, facilitando la escalabilidad y el mantenimiento.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/consejos.html#2-arquitectura-y-estructura-de-la-aplicacion","title":"2. Arquitectura y Estructura de la Aplicaci\u00f3n","text":"<p>La arquitectura de tu aplicaci\u00f3n Angular debe facilitar la localizaci\u00f3n de elementos, reducir la complejidad y evitar la duplicaci\u00f3n de c\u00f3digo. Aqu\u00ed hay algunas pautas clave:</p> <ul> <li> <p>Claridad y Accesibilidad: Organiza tu c\u00f3digo de manera que cualquier desarrollador pueda encontrar f\u00e1cilmente los elementos de la aplicaci\u00f3n.</p> </li> <li> <p>Reducci\u00f3n de Complejidad: Divide la funcionalidad en m\u00f3dulos y componentes espec\u00edficos para mantener el c\u00f3digo manejable.</p> </li> <li> <p>Evitar Duplicaci\u00f3n de C\u00f3digo: Adopta el principio DRY (Don\u2019t Repeat Yourself). Reutiliza componentes y servicios siempre que sea posible.</p> </li> <li> <p>Gu\u00eda de Estilos: Sigue las recomendaciones de la gu\u00eda de estilos de Angular para mantener un c\u00f3digo limpio y coherente.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/consejos.html#3-principios-de-programacion","title":"3. Principios de Programaci\u00f3n","text":"<ul> <li> <p>Programaci\u00f3n Funcional y Reactiva: Prefiere la programaci\u00f3n funcional y reactiva sobre la orientaci\u00f3n a objetos o imperativa. Usa RxJS para manejar flujos de datos asincr\u00f3nicos.</p> </li> <li> <p>Composici\u00f3n sobre Herencia: En la programaci\u00f3n orientada a objetos, la composici\u00f3n es preferible a la herencia. Esto permite crear componentes m\u00e1s flexibles y reutilizables.</p> </li> <li> <p>Principio de Responsabilidad \u00danica (SRP): Mant\u00e9n tus archivos peque\u00f1os y enfocados en una \u00fanica responsabilidad. Cada clase, componente o interfaz deber\u00eda estar en su propio archivo.</p> </li> </ul>"},{"location":"Moduls/DWEC/angular/consejos.html#4-componentes","title":"4. Componentes","text":"<ul> <li> <p>Mant\u00e9n Componentes Peque\u00f1os: Los componentes deben ser peque\u00f1os y enfocados. Es mejor tener varios componentes hijos que un \u00fanico componente complejo.</p> </li> <li> <p>Componentes de Presentaci\u00f3n y Contenedores:</p> <ul> <li>Dumb Components: Estos componentes solo se encargan de la presentaci\u00f3n. Reciben datos a trav\u00e9s de <code>@Input</code> y emiten eventos mediante <code>@Output</code>.</li> <li>Smart Components: Estos componentes manejan la l\u00f3gica de la aplicaci\u00f3n. Se conectan a servicios para obtener o enviar datos. Las rutas generalmente apuntan a componentes inteligentes.</li> </ul> </li> </ul>"},{"location":"Moduls/DWEC/angular/consejos.html#5-estructura-de-directorios","title":"5. Estructura de Directorios","text":"<p>Organiza tu c\u00f3digo en directorios de manera que refleje la estructura de tu aplicaci\u00f3n:</p> <ul> <li>Core: Contiene servicios singleton, guardias, y cualquier otro c\u00f3digo que solo debe cargarse una vez.</li> <li>Shared: Contiene componentes, directivas y pipes reutilizables.</li> <li>Features: Cada funcionalidad principal de la aplicaci\u00f3n tiene su propio m\u00f3dulo y directorio.</li> <li>App: Contiene el m\u00f3dulo principal de la aplicaci\u00f3n, el m\u00f3dulo de enrutamiento principal y el componente ra\u00edz.</li> </ul> <p>Ejemplo de estructura de directorios:</p> <pre><code>/src\n  /app\n    /core\n      /services\n      /guards\n      core.module.ts\n    /shared\n      /components\n      /directives\n      /pipes\n      shared.module.ts\n    /features\n      /products\n        /components\n        /services\n        /models\n        products.module.ts\n      /customers\n        /components\n        /services\n        /models\n        customers.module.ts\n    /app-routing\n    app.module.ts\n    app.component.ts\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#integracion-de-bibliotecas-de-terceros","title":"Integraci\u00f3n de Bibliotecas de Terceros","text":"<p>Angular, al ser un framework altamente extensible, permite la integraci\u00f3n de diversas bibliotecas de terceros que facilitan el desarrollo y mejoran la funcionalidad de nuestras aplicaciones. A continuaci\u00f3n, se describen algunas de las bibliotecas m\u00e1s populares y c\u00f3mo integrarlas en tu proyecto Angular.</p>"},{"location":"Moduls/DWEC/angular/consejos.html#1-bootstrap","title":"1. Bootstrap","text":"<p>Bootstrap es un framework de CSS que facilita la creaci\u00f3n de interfaces web responsivas y modernas. Hay varias maneras de integrarlo en un proyecto Angular:</p>"},{"location":"Moduls/DWEC/angular/consejos.html#uso-del-cdn-de-bootstrap","title":"Uso del CDN de Bootstrap","text":"<p>Esta es la forma m\u00e1s simple y r\u00e1pida de agregar Bootstrap a tu proyecto.</p> <p>Ventajas: - Puede estar en la cach\u00e9 del navegador del cliente. - Siempre estar\u00e1 actualizado.</p> <p>Desventajas: - No siempre necesitas todos los componentes de Bootstrap. - Necesitas estar conectado a Internet.</p> <p>Para usar el CDN, simplemente agrega los siguientes enlaces en el archivo <code>index.html</code> de tu proyecto Angular:</p> <pre><code>&lt;link\n  rel=\"stylesheet\"\n  href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n/&gt;\n&lt;script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#descarga-manual","title":"Descarga Manual","text":"<p>Otra opci\u00f3n es descargar el archivo comprimido de Bootstrap y colocarlo en el directorio <code>assets</code> de tu proyecto.</p>"},{"location":"Moduls/DWEC/angular/consejos.html#instalacion-via-npm","title":"Instalaci\u00f3n v\u00eda npm","text":"<p>La forma m\u00e1s recomendada para proyectos Angular es instalar Bootstrap a trav\u00e9s de npm, ya que facilita la gesti\u00f3n de dependencias.</p> <pre><code>npm install bootstrap\nnpm install --save-dev @types/bootstrap\n</code></pre> <p>Luego, agrega las rutas a los archivos de Bootstrap en tu archivo <code>angular.json</code>:</p> <pre><code>\"styles\": [\n  \"node_modules/bootstrap/dist/css/bootstrap.min.css\",\n  \"src/styles.scss\"\n],\n\"scripts\": [\n  \"node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\"\n]\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#2-angular-material","title":"2. Angular Material","text":"<p>Angular Material es una biblioteca de componentes UI basada en Material Design, desarrollada espec\u00edficamente para Angular.</p> <p>Para instalar Angular Material, utiliza el siguiente comando:</p> <pre><code>ng add @angular/material\n</code></pre> <p>Este comando configurar\u00e1 Angular Material en tu proyecto, incluyendo los temas y animaciones necesarias. Tambi\u00e9n puedes seguir la gu\u00eda de inicio r\u00e1pido en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/DWEC/angular/consejos.html#uso","title":"Uso","text":"<p>Una vez instalado, puedes empezar a usar los componentes de Angular Material import\u00e1ndolos en tus m\u00f3dulos. Por ejemplo, para usar un bot\u00f3n de Angular Material:</p> <pre><code>import { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  imports: [\n    MatButtonModule\n  ]\n})\nexport class AppModule { }\n</code></pre> <p>Y en tu plantilla HTML:</p> <pre><code>&lt;button mat-button&gt;Click me!&lt;/button&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#3-ngx-charts","title":"3. Ngx Charts","text":"<p>Ngx Charts es una biblioteca para crear gr\u00e1ficos y visualizaciones interactivas en Angular.</p> <p>Para instalar Ngx Charts, ejecuta el siguiente comando:</p> <pre><code>npm install @swimlane/ngx-charts --save\n</code></pre> <p>Luego, importa el m\u00f3dulo en <code>app.module.ts</code>:</p> <pre><code>import { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@NgModule({\n  imports: [\n    NgxChartsModule\n  ]\n})\nexport class AppModule { }\n</code></pre>"},{"location":"Moduls/DWEC/angular/consejos.html#uso_1","title":"Uso","text":"<p>Puedes encontrar ejemplos y documentaci\u00f3n detallada en la web oficial de Ngx Charts. Aqu\u00ed tienes un ejemplo b\u00e1sico de c\u00f3mo usar un gr\u00e1fico de barras:</p> <pre><code>import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    &lt;ngx-charts-bar-vertical\n      [view]=\"[700, 400]\"\n      [scheme]=\"colorScheme\"\n      [results]=\"single\"\n      [gradient]=\"gradient\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [legend]=\"showLegend\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [showYAxisLabel]=\"showYAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\"\n      [yAxisLabel]=\"yAxisLabel\"&gt;\n    &lt;/ngx-charts-bar-vertical&gt;\n  `\n})\nexport class AppComponent {\n  single = [\n    {\n      \"name\": \"Germany\",\n      \"value\": 8940000\n    },\n    {\n      \"name\": \"USA\",\n      \"value\": 5000000\n    }\n  ];\n\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Country';\n  showYAxisLabel = true;\n  yAxisLabel = 'Population';\n  colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html","title":"Formularios en Angular","text":"<p>Los formularios son una parte fundamental de cualquier aplicaci\u00f3n web, y Angular ofrece dos enfoques principales para manejarlos: formularios reactivos y formularios basados en plantillas.</p> Caracter\u00edstica Formularios Reactivos Formularios Basados en Plantillas Configuraci\u00f3n del modelo de formulario Expl\u00edcita, creada en la clase del componente Impl\u00edcita, creada por directivas Modelo de datos Estructurado e inmutable No estructurado y mutable Flujo de datos Sincr\u00f3nico Asincr\u00f3nico Validaci\u00f3n del formulario Funciones Directivas"},{"location":"Moduls/DWEC/angular/formulariosangular.html#formularios-de-plantilla-en-angular","title":"Formularios de Plantilla en Angular","text":"<p>Usaremos los formularios de plantilla para aquellos que sean muy simples y no requieran una validaci\u00f3n o manejo de los datos sofisticados. </p>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#configuracion-de-formularios-basados-en-plantillas","title":"Configuraci\u00f3n de Formularios Basados en Plantillas","text":"<p>Para empezar a trabajar con formularios basados en plantillas, necesitamos importar el m\u00f3dulo <code>FormsModule</code> en nuestro componente:</p> <pre><code>import { FormsModule } from '@angular/forms';\n\n...\n  imports: [\n    FormsModule,\n    // otros m\u00f3dulos\n  ],\n...\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#uso-de-ngmodel-y-validadores-html5","title":"Uso de ngModel y Validadores HTML5","text":"<p>Los formularios basados en plantillas en Angular permiten utilizar validadores HTML5 directamente en los elementos <code>input</code>. Estos validadores aplican autom\u00e1ticamente clases de estilo dependiendo del estado del formulario.</p> <pre><code>&lt;input\n  type=\"text\"\n  class=\"form-control\"\n  [(ngModel)]=\"product.description\"\n  minlength=\"5\"\n  maxlength=\"600\"\n  required\n/&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#modificar-estilos-al-validar","title":"Modificar Estilos al Validar","text":"<p>Podemos cambiar los estilos de los elementos del formulario en funci\u00f3n de su estado de validaci\u00f3n utilizando clases CSS personalizadas y la referencia a <code>ngModel</code>.</p> <pre><code>&lt;input\n  type=\"text\"\n  name=\"description\"\n  class=\"form-control\"\n  [(ngModel)]=\"product.description\"\n  minlength=\"5\"\n  maxlength=\"600\"\n  required\n  #descriptionModel=\"ngModel\"\n  [ngClass]=\"{\n    'is-valid': descriptionModel.touched &amp;&amp; descriptionModel.valid,\n    'is-invalid': descriptionModel.touched &amp;&amp; !descriptionModel.valid\n  }\"\n/&gt;\n&lt;div&gt;\n  &lt;div&gt;{{ product | json }}&lt;/div&gt;\n  &lt;div&gt;Dirty: {{ descriptionModel.dirty }}&lt;/div&gt;\n  &lt;div&gt;Valid: {{ descriptionModel.valid }}&lt;/div&gt;\n  &lt;div&gt;Value: {{ descriptionModel.value }}&lt;/div&gt;\n  &lt;div&gt;Errors: {{ descriptionModel.errors | json }}&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#manipular-la-entrada-del-usuario-en-tiempo-real","title":"Manipular la Entrada del Usuario en Tiempo Real","text":"<p>Podemos separar la vinculaci\u00f3n del modelo y el evento <code>ngModelChange</code> para manipular la entrada del usuario en tiempo real.</p> <pre><code>&lt;input\n  type=\"text\"\n  class=\"form-control\"\n  [ngModel]=\"product.description\"\n  (ngModelChange)=\"product.description = $event.toUpperCase()\"\n/&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#ngform-y-directiva-novalidate","title":"ngForm y Directiva noValidate","text":"<p>Por defecto, todos los formularios en Angular tienen la directiva <code>ngForm</code>. Podemos hacer una referencia a esta directiva para observar las propiedades generales del formulario. Es recomendable usar la directiva <code>novalidate</code> para desactivar la validaci\u00f3n del navegador y permitir que Angular gestione la validaci\u00f3n.</p> <pre><code>&lt;form #productForm=\"ngForm\" novalidate&gt;\n  &lt;input type=\"text\" name=\"description\" ... /&gt;\n&lt;/form&gt;\n&lt;div&gt;\n  &lt;div&gt;Touched: {{ productForm.touched }}&lt;/div&gt;\n  &lt;div&gt;Valid: {{ productForm.valid }}&lt;/div&gt;\n  &lt;div&gt;Value: {{ productForm.value | json }}&lt;/div&gt;\n  &lt;div&gt;Descripci\u00f3n: {{productForm.control.get('description').value | json}}&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#mostrar-los-errores-de-validacion","title":"Mostrar los Errores de Validaci\u00f3n","text":"<p>Podemos combinar estilos de Bootstrap, validaci\u00f3n HTML5, <code>ngIf</code> y referencias a <code>ngModel</code> para mostrar mensajes de error de validaci\u00f3n.</p> <pre><code>&lt;form #productForm=\"ngForm\" novalidate&gt;\n  &lt;input\n    type=\"text\"\n    name=\"description\"\n    class=\"form-control\"\n    [(ngModel)]=\"product.description\"\n    minlength=\"5\"\n    maxlength=\"600\"\n    required\n    #descriptionModel=\"ngModel\"\n    [ngClass]=\"{\n      'is-valid': descriptionModel.touched &amp;&amp; descriptionModel.valid,\n      'is-invalid': descriptionModel.touched &amp;&amp; !descriptionModel.valid\n    }\"\n  /&gt;\n  &lt;div *ngIf=\"descriptionModel.touched &amp;&amp; descriptionModel.invalid\" class=\"alert alert-danger\"&gt;\n    Descripci\u00f3n requerida (entre 5 y 60 caracteres)\n  &lt;/div&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#creacion-de-validadores-personalizados","title":"Creaci\u00f3n de Validadores Personalizados","text":"<p>Angular permite la creaci\u00f3n de validadores personalizados mediante directivas. Estos validadores se registran como validadores de Angular utilizando el proveedor <code>NG_VALIDATORS</code>.</p> <pre><code>import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[appMinPrice]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: MinPriceDirective, multi: true }]\n})\nexport class MinPriceDirective implements Validator {\n  @Input('appMinPrice') minPrice: number;\n\n  constructor() { }\n\n  validate(c: AbstractControl): { [key: string]: any } | null {\n    if (this.minPrice &amp;&amp; c.value) {\n      if (this.minPrice &gt; c.value) {\n        return { minPrice: true };\n      }\n    }\n    return null;\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#enviar-el-formulario","title":"Enviar el Formulario","text":"<p>Podemos enviar el formulario y realizar validaciones adicionales antes de enviarlo. Adem\u00e1s, podemos desactivar el bot\u00f3n de env\u00edo hasta que el formulario sea v\u00e1lido.</p> <pre><code>&lt;form #productForm=\"ngForm\" (ngSubmit)=\"editar(productForm)\" novalidate&gt;\n  &lt;input type=\"text\" name=\"description\" ... /&gt;\n  &lt;button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productForm.invalid\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>En el componente, obtenemos el formulario utilizando <code>@ViewChild</code> y la variable de referencia:</p> <pre><code>@ViewChild('editForm', { static: true }) editForm: NgForm;\n\neditar(productForm: NgForm) {\n  if (this.editForm.valid) {\n    this.productService.editProduct(this.product).subscribe(\n      ok =&gt; this.router.navigate(['/product/', this.product.id])\n    );\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#formularios-reactivos","title":"Formularios Reactivos","text":"<p>En Angular, los formularios reactivos representan un conjunto de t\u00e9cnicas que permiten controlar mejor el comportamiento de los formularios desde el c\u00f3digo del componente en lugar de desde la plantilla. Aunque el uso de <code>[(ngModel)]</code> en formularios basados en plantillas ya proporciona cierto comportamiento reactivo, los formularios reactivos ofrecen una manera m\u00e1s estructurada y potente de manejar formularios complejos. Es recomendable usar formularios reactivos, especialmente en formularios m\u00e1s avanzados que van m\u00e1s all\u00e1 de simples b\u00fasquedas o inicios de sesi\u00f3n.</p> <p>Para trabajar con formularios reactivos, debemos importar el m\u00f3dulo <code>ReactiveFormsModule</code></p> <pre><code>import { ReactiveFormsModule } from '@angular/forms';\n\n...\n  imports: [\n    ReactiveFormsModule,\n    // otros m\u00f3dulos\n  ],\n...\n</code></pre> <p>En los formularios reactivos, declaramos directamente en el c\u00f3digo los objetos <code>FormControl</code>, <code>FormGroup</code> y <code>FormArray</code>. A continuaci\u00f3n, se muestra un ejemplo b\u00e1sico de c\u00f3mo configurar un formulario reactivo:</p> <ol> <li>Definir el Formulario en el Componente</li> </ol> <p>En el componente, necesitamos una variable de tipo <code>FormGroup</code> inicializada en el constructor. Utilizaremos un servicio inyectado llamado <code>FormBuilder</code> para construir el formulario.</p> <pre><code>import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html'\n})\nexport class ProductFormComponent {\n  formulario: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.crearFormulario();\n  }\n\n  crearFormulario() {\n    this.formulario = this.formBuilder.group({\n      name: [''],\n      price: [0],\n      description: [''],\n    });\n  }\n\n  crear() {\n    // L\u00f3gica para crear el producto\n  }\n}\n</code></pre> <ol> <li>HTML del Formulario</li> </ol> <p>En el HTML del formulario, solo necesitamos agregar <code>[formGroup]</code> y <code>formControlName</code> en cada <code>input</code>.</p> <pre><code>&lt;form [formGroup]=\"formulario\" (ngSubmit)=\"crear()\"&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;label for=\"inputName\"&gt;Name&lt;/label&gt;\n    &lt;input type=\"text\" class=\"form-control\" id=\"inputName\" formControlName=\"name\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;label for=\"inputPrice\"&gt;Price&lt;/label&gt;\n    &lt;input type=\"number\" class=\"form-control\" id=\"inputPrice\" formControlName=\"price\"&gt;\n  &lt;/div&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;label for=\"inputDescription\"&gt;Description&lt;/label&gt;\n    &lt;input type=\"text\" class=\"form-control\" id=\"inputDescription\" formControlName=\"description\"&gt;\n  &lt;/div&gt;\n  &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Submit&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#validaciones-sincronas","title":"Validaciones S\u00edncronas","text":"<p>En los formularios reactivos, las validaciones son m\u00e1s sencillas y se pueden declarar directamente en el c\u00f3digo del componente usando <code>Validators</code>.</p> <pre><code>import { Validators } from '@angular/forms';\n\ncrearFormulario() {\n  this.formulario = this.formBuilder.group({\n    name: ['', [Validators.required, Validators.minLength(5), Validators.pattern('.*[a-zA-Z].*')]],\n    price: [0, Validators.min(0.01)],\n    description: [''],\n  });\n}\n\nget nameNotValid() {\n  return this.formulario.get('name').invalid &amp;&amp; this.formulario.get('name').touched;\n}\n</code></pre> <p>Para aplicar las validaciones visualmente en el HTML, podemos utilizar getters:</p> <pre><code>&lt;input type=\"text\" class=\"form-control\" id=\"inputName\" formControlName=\"name\" \n  [ngClass]=\"nameNotValid ? 'is-invalid' : 'is-valid'\"&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#creacion-de-validadores-personalizados_1","title":"Creaci\u00f3n de Validadores Personalizados","text":"<p>Los validadores personalizados en formularios reactivos son funciones que devuelven una <code>ValidatorFn</code>. Aqu\u00ed mostramos c\u00f3mo crear un validador personalizado para fechas m\u00ednimas:</p> <pre><code>import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nfunction minDateValidator(minInputDate: string): ValidatorFn {\n  return (c: AbstractControl): { [key: string]: any } | null =&gt; {\n    if (c.value) {\n      const minDate = new Date(minInputDate);\n      const inputDate = new Date(c.value);\n      return minDate &lt;= inputDate ? null : { 'minDate': minDate.toLocaleDateString() };\n    }\n    return null;\n  };\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#validacion-de-campos-cruzados","title":"Validaci\u00f3n de Campos Cruzados","text":"<p>Podemos crear validadores personalizados para evaluar un campo en funci\u00f3n de otros campos en el formulario. Aqu\u00ed un ejemplo para validar que dos campos de contrase\u00f1a coincidan:</p> <pre><code>this.registerForm = this.formBuilder.group({\n  password: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10)]],\n  confirm_password: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10)]]\n}, {\n  validators: passwordValidator\n});\n\nconst passwordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null =&gt; {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirm_password');\n  return password &amp;&amp; confirmPassword &amp;&amp; password.value === confirmPassword.value ? null : { passwordValidator: true };\n};\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#agrupar-campos","title":"Agrupar Campos","text":"<p>Podemos agrupar campos en un <code>FormGroup</code> dentro de otro <code>FormGroup</code>:</p> <pre><code>this.formulario = this.formBuilder.group({\n  name: ['', [Validators.required, Validators.minLength(5), Validators.pattern('.*[a-zA-Z].*')]],\n  price: [0, Validators.min(0.01)],\n  description: [''],\n  address: this.formBuilder.group({\n    street: [''],\n    city: ['']\n  })\n});\n</code></pre> <p>Y en el HTML:</p> <pre><code>&lt;div class=\"form-group row mb-3\" formGroupName=\"address\"&gt;\n  &lt;label for=\"inputStreet\" class=\"col-sm-2 col-form-label\"&gt;Street&lt;/label&gt;\n  &lt;div class=\"form-row col\"&gt;\n    &lt;div class=\"col\"&gt;\n      &lt;input class=\"form-control\" id=\"inputStreet\" placeholder=\"Street\" formControlName=\"street\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"col\"&gt;\n      &lt;input class=\"form-control\" id=\"inputCity\" placeholder=\"City\" formControlName=\"city\"&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#cargar-datos-en-el-formulario","title":"Cargar Datos en el Formulario","text":"<p>Si estamos trabajando en un formulario de edici\u00f3n, podemos cargar los valores en los controles de formulario utilizando <code>setValue()</code>, <code>patchValue()</code> o <code>reset()</code>.</p> <pre><code>this.formulario.setValue(this.product);  // Necesita todos los campos\n\n// Para resetear con valores por defecto\nthis.formulario.reset({\n  name: 'Default Name',\n  price: 0,\n  description: 'Default Description'\n});\n\n// Para actualizar solo algunos campos\nthis.formulario.patchValue({\n  name: 'Updated Name'\n});\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#deteccion-de-cambios","title":"Detecci\u00f3n de Cambios","text":"<p>Los <code>FormGroup</code> y <code>FormControl</code> contienen un Observable llamado <code>valueChanges</code> que emite el valor actual del control cada vez que cambia. Podemos suscribirnos a este Observable para realizar acciones en respuesta a los cambios.</p> <pre><code>export class AppComponent implements OnInit {\n  formulario: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.formulario = this.formBuilder.group({\n      notifications: [false]\n    });\n\n    this.formulario.get('notifications').valueChanges\n      .subscribe(value =&gt; this.updateNotificationMethod(value));\n  }\n\n  updateNotificationMethod(value: boolean) {\n    // L\u00f3gica para manejar cambios en las notificaciones\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/formulariosangular.html#formularios-dinamicos","title":"Formularios Din\u00e1micos","text":"<p>Los <code>FormArray</code> permiten crear formularios din\u00e1micos donde los controles pueden a\u00f1adirse o eliminarse en tiempo de ejecuci\u00f3n.</p> <pre><code>this.formulario = this.formBuilder.group({\n  production: this.formBuilder.array([this.getProductionControl()])\n});\n\ngetProductionControl(): FormControl {\n  const control = this.formBuilder.control(0);\n  control.setValidators(Validators.min(100));\n  return control;\n}\n\nget productionArray(): FormArray {\n  return &lt;FormArray&gt;this.formulario.get('production');\n}\n\naddProduction() {\n  this.productionArray.push(this.getProductionControl());\n}\n\ndelProduction(index: number) {\n  this.productionArray.removeAt(index);\n}\n</code></pre> <p>Y en el HTML:</p> <pre><code>&lt;div class=\"row row-cols-6 g-3\" formArrayName=\"production\"&gt;\n  &lt;div class=\"col\" *ngFor=\"let prod of productionArray.controls; let i=index\"&gt;\n    &lt;input type=\"number\" class=\"form-control col\" [formControlName]=\"i\" placeholder=\"Production {{i}}\" \n      [ngClass]=\"{\n        'is-valid': productionArray.controls[i].valid &amp;&amp; productionArray.controls[i].touched,\n        'is-invalid': productionArray.controls[i].invalid &amp;&amp; productionArray.controls[i].touched\n      }\"&gt;\n    &lt;button type=\"button\" class=\"col btn btn-outline-danger\" (click)=\"delProduction(i)\"&gt;\ud83d\uddd1&lt;/button&gt;\n  &lt;/div&gt;\n  &lt;button type=\"button\" class=\"col btn btn-primary\" (click)=\"addProduction()\"&gt;Add Production&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html","title":"Comunicaci\u00f3n con el servidor en Angular","text":""},{"location":"Moduls/DWEC/angular/httpangular.html#servicios-en-angular","title":"Servicios en Angular","text":"<p>En Angular, los servicios son componentes fundamentales que proporcionan datos y funcionalidades reutilizables a lo largo de la aplicaci\u00f3n. Generalmente, los servicios manejan operaciones CRUD (Create, Read, Update, Delete) y permiten mantener la l\u00f3gica de negocio y la gesti\u00f3n de datos de forma centralizada y persistente.</p> <ul> <li>Provisi\u00f3n de Informaci\u00f3n: Los servicios proporcionan datos a los componentes que los soliciten.</li> <li>Operaciones CRUD: Realizan operaciones b\u00e1sicas de creaci\u00f3n, lectura, actualizaci\u00f3n y eliminaci\u00f3n.</li> <li>Persistencia de Datos: Mantienen los datos de manera persistente a trav\u00e9s de diferentes componentes.</li> <li>Reutilizables: Son reutilizables en toda la aplicaci\u00f3n, promoviendo un c\u00f3digo limpio y modular.</li> </ul>"},{"location":"Moduls/DWEC/angular/httpangular.html#decorador-injectable","title":"Decorador @Injectable","text":"<p>Las clases de servicio en Angular est\u00e1n decoradas con <code>@Injectable()</code>. Este decorador indica al inyector de dependencias de Angular que debe proporcionar una instancia de la clase cuando sea necesario. Aqu\u00ed hay un ejemplo de una clase de servicio:</p> <pre><code>import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'  // Inicia que no hace falta que est\u00e9 en providers\n})\nexport class ProductService {\n  // M\u00e9todos y l\u00f3gica del servicio\n}\n</code></pre> <p>El decorador <code>@Injectable</code> asegura que Angular gestione la instancia del servicio como un Singleton, lo que significa que se crea una \u00fanica instancia del servicio y se comparte entre todos los componentes que lo requieran.</p> <p>Si el servicio se declara con <code>providedIn: 'root'</code>, no es necesario agregarlo a <code>providers</code> porque Angular se encargar\u00e1 de su inyecci\u00f3n autom\u00e1ticamente en toda la aplicaci\u00f3n.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#inyeccion-de-dependencias","title":"Inyecci\u00f3n de Dependencias","text":"<p>En Angular, la inyecci\u00f3n de dependencias (DI) es una t\u00e9cnica poderosa que permite a los componentes solicitar servicios de manera eficiente. En lugar de crear instancias de servicios con <code>new</code>, Angular maneja la creaci\u00f3n y provisi\u00f3n de servicios mediante el constructor:</p> <pre><code>import { Component } from '@angular/core';\nimport { ProductService } from './product.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html'\n})\nexport class ProductComponent {\n  constructor(private productService: ProductService) { }\n}\n</code></pre> <p>Este enfoque hace que el c\u00f3digo sea m\u00e1s legible y f\u00e1cil de mantener. Adem\u00e1s, permite que Angular gestione la creaci\u00f3n de servicios como Singletons, asegurando que todos los componentes utilicen la misma instancia del servicio.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#httpclientmodule","title":"HttpClientModule","text":"<p>Los servicios en Angular a menudo obtienen datos de un servidor a trav\u00e9s de HTTP. Para hacer esto, se debe importar <code>HttpClientModule</code>:</p> <pre><code>import { HttpClient, HttpClientModule } from '@angular/common/http';\n....\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#servicios-como-clientes-http","title":"Servicios como Clientes HTTP","text":"<p>Los servicios pueden utilizar <code>HttpClient</code> para realizar solicitudes HTTP. Esto se logra mediante la inyecci\u00f3n de dependencias. Aqu\u00ed hay un ejemplo de un servicio que obtiene productos de un servidor:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Product } from './product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private productURL = 'https://api.example.com/products';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable&lt;Product[]&gt; {\n    return this.http.get&lt;{products: Product[]}&gt;(this.productURL).pipe(\n      map(response =&gt; response.products)\n    );\n  }\n}\n</code></pre> <p>En este ejemplo, <code>getProducts</code> realiza una solicitud HTTP GET para obtener una lista de productos. Utiliza <code>map</code> de RxJS para transformar la respuesta antes de devolverla como un <code>Observable</code>.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#envio-de-datos-con-post","title":"Env\u00edo de Datos con POST","text":"<p>Para enviar datos al servidor, se utiliza el m\u00e9todo <code>post</code> de <code>HttpClient</code>. Aqu\u00ed se muestra c\u00f3mo hacerlo:</p> <pre><code>import { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loginURL = 'https://api.example.com/login';\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials: {username: string, password: string}): Observable&lt;{token: string}&gt; {\n    return this.http.post&lt;{token: string}&gt;(this.loginURL, JSON.stringify(credentials), this.httpOptions);\n  }\n}\n</code></pre> <p>En este ejemplo, <code>login</code> env\u00eda credenciales de usuario al servidor utilizando una solicitud HTTP POST. Se configuran las cabeceras HTTP para especificar que el contenido es JSON.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#datos-asincronos","title":"Datos as\u00edncronos","text":"<p>En Angular, el manejo de datos as\u00edncronos es una habilidad crucial para desarrollar aplicaciones web modernas y eficientes. Angular utiliza la librer\u00eda RxJS para implementar una versi\u00f3n avanzada de manejo de datos as\u00edncronos conocida como Observables, que ofrece capacidades m\u00e1s robustas en comparaci\u00f3n con las Promesas tradicionales de JavaScript.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#promesas-vs-observables","title":"Promesas vs. Observables","text":"<p>Aunque se puede trabajar con promesas para obtener datos, Angular utiliza por defecto los Observables de RxJS debido a sus ventajas:</p> <ul> <li>Valores M\u00faltiples: Mientras que una promesa retorna un solo valor o un error, un Observable puede emitir m\u00faltiples valores a lo largo del tiempo.</li> <li>Lazy Loading: Una promesa comienza su ejecuci\u00f3n en el momento de su creaci\u00f3n, mientras que un Observable s\u00f3lo empieza a emitir valores cuando alguien se suscribe a \u00e9l.</li> <li>Cancelaci\u00f3n: Los observables pueden ser cancelados mediante la cancelaci\u00f3n de las suscripciones, lo que permite un control m\u00e1s fino sobre el flujo de datos.</li> <li>Operadores: RxJS proporciona una amplia gama de operadores como <code>map</code>, <code>filter</code> y <code>reduce</code> que permiten manipular f\u00e1cilmente los datos emitidos por los observables.</li> </ul>"},{"location":"Moduls/DWEC/angular/httpangular.html#uso-de-operadores-en-observables","title":"Uso de Operadores en Observables","text":"<p>Los operadores en RxJS son funciones que permiten transformar, filtrar y combinar flujos de datos de observables. Aqu\u00ed hay un ejemplo de c\u00f3mo se utilizan los operadores <code>map</code> y <code>filter</code>:</p> <ul> <li><code>map</code>: Manipula los datos y los retorna.</li> <li><code>filter</code>: Deja pasar s\u00f3lo los datos que cumplen con una condici\u00f3n espec\u00edfica.</li> </ul> <p>Estos operadores se aplican como par\u00e1metros del m\u00e9todo <code>pipe</code> de la clase <code>Observable</code>.</p> <pre><code>...\nexport class ProductService {\n  private productURL = 'https://api.example.com/products';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable&lt;Product[]&gt; {\n    return this.http.get&lt;{products: Product[]}&gt;(this.productURL).pipe(\n      map(response =&gt; response.products),\n      filter(product =&gt; product.price &gt; 20)\n    );\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#procesamiento-de-respuestas-de-observables","title":"Procesamiento de Respuestas de Observables","text":"<p>Un observable puede tener m\u00faltiples suscriptores y s\u00f3lo comienza a emitir datos cuando alguien se suscribe a \u00e9l. El m\u00e9todo <code>subscribe()</code> acepta tres funciones como par\u00e1metros:</p> <ol> <li>Funci\u00f3n de \u00e9xito: Se ejecuta cuando el observable emite un valor.</li> <li>Funci\u00f3n de error (opcional): Se ejecuta si el observable o alguno de sus operadores falla.</li> <li>Funci\u00f3n de finalizaci\u00f3n (opcional): Se ejecuta siempre al finalizar la emisi\u00f3n de datos.</li> </ol> <pre><code>products: Product[] = [];\n\nngOnInit(): void {\n  this.productsService.getProducts().subscribe(\n    prods =&gt; this.products = prods, // Funci\u00f3n de \u00e9xito\n    error =&gt; console.error(error),  // Funci\u00f3n de error (opcional)\n    () =&gt; console.log('Products loaded') // Funci\u00f3n de finalizaci\u00f3n (opcional)\n  );\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#mostrar-datos-asincronos","title":"Mostrar Datos As\u00edncronos","text":"<p>La carga de datos as\u00edncronos puede retrasarse, lo que puede causar errores si Angular intenta acceder a datos que a\u00fan no est\u00e1n disponibles. Para manejar esto, se pueden utilizar varias t\u00e9cnicas:</p> <ul> <li>Objetos Vac\u00edos: Crear un objeto con datos vac\u00edos para evitar errores.</li> <li>Directiva <code>@if</code>: Mostrar los datos s\u00f3lo cuando est\u00e9n completamente cargados.</li> <li>Operador <code>?</code>: Asegurar que los datos no se accedan hasta que tengan un valor v\u00e1lido.</li> </ul>"},{"location":"Moduls/DWEC/angular/httpangular.html#signals","title":"Signals","text":"<p>Las se\u00f1ales (<code>signals</code>) son una opci\u00f3n m\u00e1s simple y menos potente que los observables para tareas reactivas b\u00e1sicas. Desde Angular 17, se consideran una buena opci\u00f3n para tareas reactivas simples.</p> <pre><code>constructor(){\n  effect(()=&gt;{console.log(`Valor de num: ${this.num()}`); });\n}\nnum = signal(0);\nupdateNum(){ this.num.update((n: number) =&gt; n + 1); }\nngOnInit(): void { this.num.set(1); }\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#resolver","title":"Resolver","text":"<p>A veces es necesario obtener datos del servidor antes de acceder a una ruta espec\u00edfica. Para esto, se utiliza un tipo especial de servicio llamado Resolver. </p> <p>Un Resolver es un servicio que implementa el m\u00e9todo <code>resolve</code>, el cual obtiene los datos antes de que la ruta se cargue:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { ProductService } from './product.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Product } from './product.model';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductResolver implements Resolve&lt;Product&gt; {\n  constructor(private productsService: ProductService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Product | Observable&lt;Product&gt; | Promise&lt;Product&gt; {\n    return this.productsService.getProduct(route.params.id).pipe(\n      catchError(error =&gt; {\n        this.router.navigate(['/products']);\n        return of(null);\n      })\n    );\n  }\n}\n</code></pre> <p>Este resolver utiliza el servicio real para obtener los productos y maneja cualquier error redirigiendo al usuario a una ruta segura.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#configuracion-de-rutas-con-resolver","title":"Configuraci\u00f3n de Rutas con Resolver","text":"<p>Las rutas pueden configurarse para utilizar un resolver, asegurando que los datos necesarios est\u00e9n disponibles antes de cargar el componente:</p> <pre><code>const routes: Routes = [\n  { path: 'product/edit/:id',\n    canActivate: [ProductDetailGuard],\n    canDeactivate: [LeavePageGuard],\n    resolve: { product: ProductResolver },\n    component: ProductEditComponent\n  },\n  // Otras rutas\n];\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#autenticacion-con-angular","title":"Autenticaci\u00f3n con Angular","text":"<p>La autenticaci\u00f3n es un aspecto crucial de las aplicaciones web modernas. En Angular, la autenticaci\u00f3n puede ser manejada de varias formas, dependiendo de si la aplicaci\u00f3n est\u00e1 alojada en el mismo servidor que el backend o si se utiliza un servicio externo. En este cap\u00edtulo, exploraremos diferentes t\u00e9cnicas de autenticaci\u00f3n y autorizaci\u00f3n en Angular, incluyendo el uso de cookies, tokens, interceptores, y guards.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#cookies-y-tokens","title":"Cookies y Tokens","text":"<p>Si la aplicaci\u00f3n web y el servidor est\u00e1n alojados en el mismo dominio, se pueden utilizar cookies para la autenticaci\u00f3n. Sin embargo, cuando se utiliza un servicio externo, es com\u00fan utilizar tokens de autenticaci\u00f3n, como los JSON Web Tokens (JWT).</p> <p>Cookies: - Son enviadas autom\u00e1ticamente por el navegador en cada petici\u00f3n al servidor. - Simplifican la gesti\u00f3n de sesiones cuando el frontend y el backend comparten el mismo dominio.</p> <p>Tokens: - Deben ser enviados manualmente en cada petici\u00f3n. - Se almacenan en <code>localStorage</code> o <code>sessionStorage</code>. - Proporcionan una mayor flexibilidad, especialmente cuando el frontend y el backend est\u00e1n en dominios diferentes.</p>"},{"location":"Moduls/DWEC/angular/httpangular.html#interceptores","title":"Interceptores","text":"<p>Los interceptores en Angular permiten interceptar y manipular solicitudes HTTP antes de que se env\u00eden al servidor. Esto es \u00fatil para agregar tokens de autenticaci\u00f3n a cada petici\u00f3n autom\u00e1ticamente.</p> <p>Ejemplo de Interceptor de Autenticaci\u00f3n:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService {\n  intercept(req: HttpRequest&lt;any&gt;, next: HttpHandler): Observable&lt;HttpEvent&lt;any&gt;&gt; {\n    const token = localStorage.getItem('idToken'); // Token de localStorage\n    if (token) {\n      // Clonamos la petici\u00f3n y a\u00f1adimos el token\n      const authReq = req.clone({ url: req.url.concat(`?auth=${token}`) });\n      // Enviamos la petici\u00f3n con el token\n      return next.handle(authReq);\n    }\n    // Sin token, enviamos la petici\u00f3n original\n    return next.handle(req);\n  }\n}\n</code></pre> <p>Para utilizar este interceptor, se debe proporcionar en el m\u00f3dulo principal:</p> <pre><code>providers: [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptorService,\n    multi: true,\n  },\n],\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#guards","title":"Guards","text":"<p>Los guards son servicios que permiten o deniegan el acceso a ciertas rutas en una aplicaci\u00f3n Angular. El guard <code>CanActivate</code> se utiliza para proteger rutas y asegurar que solo usuarios autenticados puedan acceder a ellas.</p> <p>Ejemplo de Guard <code>CanActivate</code>:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductDetailGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable&lt;boolean | UrlTree&gt; | Promise&lt;boolean | UrlTree&gt; | boolean | UrlTree {\n    const id = route.params.id;\n    if (isNaN(id) || id &lt; 1) {\n      console.log('La ID no es v\u00e1lida');\n      return this.router.parseUrl('/catalog');\n    }\n    return true;\n  }\n}\n</code></pre> <p>Configuraci\u00f3n de la ruta con Guard:</p> <pre><code>{ path: 'product/:id', canActivate: [ProductDetailGuard], component: ProductDetailComponent },\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#variables-como-observables","title":"Variables como Observables","text":"<p>En una aplicaci\u00f3n autenticada, es importante que los componentes reaccionen a los cambios en el estado de autenticaci\u00f3n sin necesidad de recargar la p\u00e1gina. Esto se puede lograr usando <code>BehaviorSubject</code> o <code>Subject</code> para mantener y observar el estado de autenticaci\u00f3n.</p> <p>Ejemplo de Uso de <code>BehaviorSubject</code>:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loguedInfo: BehaviorSubject&lt;boolean&gt;;\n\n  constructor() {\n    this.loguedInfo = new BehaviorSubject&lt;boolean&gt;(false);\n  }\n\n  isLogued(): Observable&lt;boolean&gt; {\n    return this.loguedInfo.asObservable();\n  }\n\n  login() {\n    // L\u00f3gica de autenticaci\u00f3n\n    this.loguedInfo.next(true);\n  }\n\n  logout() {\n    // L\u00f3gica de cierre de sesi\u00f3n\n    this.loguedInfo.next(false);\n  }\n}\n</code></pre> <p>Suscripci\u00f3n al Estado de Autenticaci\u00f3n en un Componente:</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  template: `&lt;div *ngIf=\"logued\"&gt;Usuario autenticado&lt;/div&gt;`\n})\nexport class AppComponent implements OnInit {\n  logued = false;\n\n  constructor(private auth: AuthService) {}\n\n  ngOnInit(): void {\n    this.auth.isLogued().subscribe(logued =&gt; {\n      this.logued = logued;\n    });\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#integracion-de-angular-con-supabase","title":"Integraci\u00f3n de Angular con Supabase","text":"<p>Supabase es una plataforma de backend como servicio (BaaS) que ofrece una variedad de servicios para aplicaciones web y m\u00f3viles, como bases de datos en tiempo real, autenticaci\u00f3n y almacenamiento. Supabase es compatible con TypeScript, lo que facilita su integraci\u00f3n con aplicaciones Angular. En este cap\u00edtulo, veremos c\u00f3mo configurar y utilizar Supabase en una aplicaci\u00f3n Angular.</p> <p>Para comenzar, necesitamos instalar el SDK de Supabase utilizando npm:</p> <pre><code>npm install @supabase/supabase-js\n</code></pre> <p>Despu\u00e9s de instalar el SDK, configuramos nuestras credenciales de Supabase en el archivo <code>environment.ts</code>. Este archivo es utilizado por Angular para gestionar diferentes configuraciones de entorno, como las variables de entorno para desarrollo y producci\u00f3n.</p> <p>En <code>src/environments/environment.ts</code>, a\u00f1ade las siguientes l\u00edneas:</p> <pre><code>export const environment = {\n  production: false,\n  supabaseUrl: 'YOUR_SUPABASE_URL',\n  supabaseKey: 'YOUR_SUPABASE_KEY',\n};\n</code></pre> <p>Aseg\u00farate de reemplazar <code>'YOUR_SUPABASE_URL'</code> y <code>'YOUR_SUPABASE_KEY'</code> con tus credenciales de Supabase.</p> <p>A continuaci\u00f3n, creamos un servicio en Angular para inicializar y gestionar Supabase. Este servicio ser\u00e1 responsable de la configuraci\u00f3n inicial y de proporcionar m\u00e9todos para interactuar con la base de datos.</p> <p>Crea un nuevo servicio utilizando Angular CLI:</p> <pre><code>ng generate service supabase\n</code></pre> <p>En el archivo <code>supabase.service.ts</code>, inicializa Supabase de la siguiente manera:</p> <pre><code>import { Injectable } from '@angular/core';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n\n  // M\u00e9todos para interactuar con Supabase\n  async getData(table: string) {\n    const { data, error } = await this.supabase.from(table).select('*');\n    if (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n    return data;\n  }\n\n  async insertData(table: string, row: any) {\n    const { data, error } = await this.supabase.from(table).insert(row);\n    if (error) {\n      console.error('Error inserting data:', error);\n      throw error;\n    }\n    return data;\n  }\n\n  async updateData(table: string, row: any, id: number) {\n    const { data, error } = await this.supabase.from(table).update(row).eq('id', id);\n    if (error) {\n      console.error('Error updating data:', error);\n      throw error;\n    }\n    return data;\n  }\n\n  async deleteData(table: string, id: number) {\n    const { data, error } = await this.supabase.from(table).delete().eq('id', id);\n    if (error) {\n      console.error('Error deleting data:', error);\n      throw error;\n    }\n    return data;\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/httpangular.html#conversion-de-promesas-a-observables","title":"Conversi\u00f3n de Promesas a Observables","text":"<p>El SDK de Supabase funciona con promesas, pero en Angular es com\u00fan trabajar con Observables para aprovechar las capacidades de programaci\u00f3n reactiva de RxJS. Podemos convertir promesas a observables utilizando el operador <code>from</code> de RxJS.</p> <pre><code>import { from, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n\n  getDataObservable(table: string): Observable&lt;any&gt; {\n    return from(this.getData(table));\n  }\n\n  private async getData(table: string) {\n    const { data, error } = await this.supabase.from(table).select('*');\n    if (error) {\n      console.error('Error fetching data:', error);\n      throw error;\n    }\n    return data;\n  }\n}\n</code></pre> <p>En el componente, podemos suscribirnos al Observable para obtener los datos:</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { SupabaseService } from '../supabase.service';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.css'],\n})\nexport class DataComponent implements OnInit {\n  data: any[] = [];\n\n  constructor(private supabaseService: SupabaseService) {}\n\n  ngOnInit() {\n    this.supabaseService.getDataObservable('your_table_name').subscribe(\n      (data) =&gt; {\n        this.data = data;\n      },\n      (error) =&gt; {\n        console.error('Error loading data:', error);\n      }\n    );\n  }\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/rutasangular.html","title":"Rutasangular","text":""},{"location":"Moduls/DWEC/angular/rutasangular.html#rutas-en-angular","title":"Rutas en Angular","text":"<p>Angular es com\u00fanmente utilizado para desarrollar Single Page Applications (SPA). A pesar de ser una SPA, la aplicaci\u00f3n debe comportarse de manera similar a los sitios web tradicionales en t\u00e9rminos de URLs (Uniform Resource Identifiers). Esto implica que necesitamos poder referenciar externamente las diferentes partes de la aplicaci\u00f3n, tener la capacidad de navegar hacia atr\u00e1s y adelante en el historial del navegador y manejar rutas virtuales adecuadamente.</p> <p>Las rutas en Angular se definen en el archivo <code>app-routing.module.ts</code>. Las rutas son objetos que contienen el camino (<code>path</code>) y el componente al que hacen referencia. Las p\u00e1ginas en una SPA de Angular son representadas por componentes, y el enrutador carga las rutas dentro de un <code>&lt;router-outlet&gt;</code> en la plantilla principal de la aplicaci\u00f3n.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#ejemplo-basico-de-rutas","title":"Ejemplo B\u00e1sico de Rutas","text":"<p>El siguiente es un ejemplo de c\u00f3mo configurar rutas b\u00e1sicas en Angular:</p> <pre><code>import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { PlanetListComponent } from './planets/planet-list/planet-list.component';\nimport { SunComponent } from './sun/sun.component';\nimport { PlanetDetailComponent } from './planets/planet-detail/planet-detail.component';\nimport { PlanetEditComponent } from './planets/planet-edit/planet-edit.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PlanetResolveService } from './planets/planet-resolve.service';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'planets', canActivate: [AuthGuard], component: PlanetListComponent },\n  { path: 'suns', canActivate: [AuthGuard], component: SunComponent },\n  { path: 'planet/:id', canActivate: [AuthGuard], component: PlanetDetailComponent },\n  { path: 'planet/edit/:id', canActivate: [AuthGuard], resolve: { planet: PlanetResolveService }, component: PlanetEditComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n</code></pre> <ul> <li><code>path</code>: Define el URI para la ruta.</li> <li><code>component</code>: El componente que se carga cuando se navega a esa ruta.</li> <li><code>canActivate</code>: Define guardias que protegen las rutas.</li> <li><code>resolve</code>: Permite precargar datos antes de que el componente se cargue.</li> </ul>"},{"location":"Moduls/DWEC/angular/rutasangular.html#rutas-con-hash","title":"Rutas con Hash","text":"<p>Una manera de implementar SPA sin manipular el servidor es usar una almohadilla (<code>#</code>) al principio de la ruta:</p> <pre><code>http://localhost:4200/#/home\n</code></pre> <p>Esto es m\u00e1s antiguo, pero funciona en todos los navegadores, simplifica el env\u00edo de par\u00e1metros y evita la manipulaci\u00f3n del servidor. Para que funcione, se debe agregar <code>withHashLocation()</code> al los providers del bootstrap:</p> <pre><code>bootstrapApplication(AppComponent, {\n  providers: [\n    provideRouter(routes, withHashLocation()),\n  ],\n});\n</code></pre>"},{"location":"Moduls/DWEC/angular/rutasangular.html#creacion-de-rutas","title":"Creaci\u00f3n de Rutas","text":"<ul> <li>Ruta B\u00e1sica: Define un camino y el componente que se activa.</li> </ul> <pre><code>{ path: 'home', component: HomeComponent }\n</code></pre> <ul> <li>Ruta con Guard: Protege rutas usando guardias.</li> </ul> <pre><code>{ path: 'planets', canActivate: [AuthGuard], component: PlanetListComponent }\n</code></pre> <ul> <li>Ruta con Par\u00e1metros: Permite pasar par\u00e1metros en la URL.</li> </ul> <pre><code>{ path: 'planet/:id', canActivate: [AuthGuard], component: PlanetDetailComponent }\n</code></pre> <ul> <li>Ruta con Resolve: Precarga datos necesarios para el componente.</li> </ul> <pre><code>{ path: 'planet/edit/:id', canActivate: [AuthGuard], resolve: { planet: PlanetResolveService }, component: PlanetEditComponent }\n</code></pre> <ul> <li>Ruta por Defecto: Redirige a una ruta espec\u00edfica si la ruta no existe.</li> </ul> <pre><code>{ path: '**', pathMatch: 'full', redirectTo: 'home' }\n</code></pre>"},{"location":"Moduls/DWEC/angular/rutasangular.html#enlaces-de-navegacion","title":"Enlaces de Navegaci\u00f3n","text":"<p>Para crear enlaces de navegaci\u00f3n en Angular, se utiliza <code>[routerLink]</code> en lugar de <code>href</code>:</p> <pre><code>&lt;a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['home']\"&gt;Home&lt;/a&gt;\n</code></pre> <p>Si la ruta tiene m\u00e1s niveles, se usar\u00e1n elementos adicionales en el array.</p> <pre><code>&lt;a class=\"nav-link\" aria-current=\"page\" [routerLink]=\"['home']\" [routerLinkActive]=\"['active']\"&gt;Home&lt;/a&gt;\n</code></pre> <p>El atributo <code>routerLinkActive</code> puede estar sin corchetes y aplicarse al elemento padre del enlace si es necesario.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#navegacion-por-codigo","title":"Navegaci\u00f3n por C\u00f3digo","text":"<p>Para navegar por c\u00f3digo en Angular, se importa el <code>Router</code> y se inyecta en el constructor:</p> <pre><code>import { Router } from '@angular/router';\n\nconstructor(private router: Router) {}\n\ndetailsProduct(id: number): void {\n  this.router.navigate(['/product', id]);\n}\n</code></pre>"},{"location":"Moduls/DWEC/angular/rutasangular.html#obtener-parametros-de-las-rutas","title":"Obtener Par\u00e1metros de las Rutas","text":"<p>Las rutas pueden contener par\u00e1metros, como un <code>id</code>. Para obtener estos par\u00e1metros, se utiliza <code>ActivatedRoute</code>:</p> <pre><code>import { ActivatedRoute } from '@angular/router';\n\nconstructor(private activatedRoute: ActivatedRoute) { }\n\nngOnInit(): void {\n  this.activatedRoute.params.subscribe(params =&gt; {\n    console.log(params);\n  });\n}\n</code></pre> <p>Los par\u00e1metros (<code>params</code>) son un observable al que nos suscribimos para recibir los valores pasados en la URL.</p> <p>A partir de Angular 16, se pueden configurar los par\u00e1metros del router para aceptarlos mediante <code>@Input()</code> usando <code>withComponentInputBinding()</code>.</p> <p><pre><code>bootstrapApplication(App, {\n  providers: [\n    provideRouter(routes, \n        //... other features\n        withComponentInputBinding() // &lt;-- enable this feature\n    )\n  ],\n});\n</code></pre> En el componente:</p> <pre><code> @Input() query?: string; // Normal\n @Input('q') queryParam?: string; // Renombrar el par\u00e1metro\n</code></pre> <p>En el router:  <pre><code>{ path: 'planet/:query', canActivate: [AuthGuard], component: PlanetDetailComponent }\n</code></pre></p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#transiciones-en-angular-2024","title":"Transiciones en Angular (2024)","text":"<p>Las transiciones en Angular permiten crear animaciones fluidas entre diferentes estados de la aplicaci\u00f3n. En la actualidad, la funcionalidad completa de estas transiciones solo est\u00e1 totalmente disponible en Google Chrome. A continuaci\u00f3n, se detalla c\u00f3mo implementar y personalizar las transiciones en Angular.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#definicion-de-animaciones-en-css","title":"Definici\u00f3n de Animaciones en CSS","text":"<p>Primero, definimos las animaciones CSS utilizando <code>@keyframes</code>. Esto permite rotar los elementos durante las transiciones.</p> <pre><code>@keyframes rotate-out {\n  to {\n    transform: rotate(90deg);\n  }\n}\n\n@keyframes rotate-in {\n  from {\n    transform: rotate(-90deg);\n  }\n}\n\n::view-transition-old(count),\n::view-transition-new(count) {\n  animation-duration: 200ms;\n  animation-name: -ua-view-transition-fade-in, rotate-in;\n}\n\n::view-transition-old(count) {\n  animation-name: -ua-view-transition-fade-out, rotate-out;\n}\n</code></pre> <p>En este ejemplo: - <code>rotate-out</code>: rota un elemento 90 grados. - <code>rotate-in</code>: rota un elemento desde -90 grados hasta su posici\u00f3n original. - <code>::view-transition-old(count)</code> y <code>::view-transition-new(count)</code>: aplican las animaciones durante la transici\u00f3n.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#configuracion-de-rutas-en-angular","title":"Configuraci\u00f3n de Rutas en Angular","text":"<p>Para habilitar las transiciones, configuramos las rutas en <code>app-routing.module.ts</code> utilizando <code>provideRouter</code> y a\u00f1adiendo <code>withViewTransitions()</code>.</p> <pre><code>providers: [\n  provideRouter(\n    [\n      { path: '', pathMatch: 'full', redirectTo: '/0' },\n      { path: ':count', component: Counter },\n    ],\n    withViewTransitions(),\n    withComponentInputBinding()\n  ),\n],\n</code></pre> <ul> <li><code>provideRouter</code>: Define las rutas de la aplicaci\u00f3n.</li> <li><code>withViewTransitions()</code>: Habilita las transiciones de vista.</li> <li><code>withComponentInputBinding()</code>: Permite el enlace de entrada del componente.</li> </ul>"},{"location":"Moduls/DWEC/angular/rutasangular.html#personalizacion-de-transiciones","title":"Personalizaci\u00f3n de Transiciones","text":"<p>Es posible personalizar las transiciones en el archivo CSS.</p> <pre><code>::view-transition-old(count),\n::view-transition-new(count) {\n  animation-duration: 200ms;\n  animation-name: -ua-view-transition-fade-in, rotate-in;\n}\n\n::view-transition-old(count) {\n  animation-name: -ua-view-transition-fade-out, rotate-out;\n}\n</code></pre> <p>Aqu\u00ed, se definen las duraciones y los nombres de las animaciones para las transiciones de entrada y salida.</p>"},{"location":"Moduls/DWEC/angular/rutasangular.html#uso-de-onviewtransitioncreated","title":"Uso de <code>onViewTransitionCreated</code>","text":"<p><code>withViewTransitions</code> acepta un objeto con la funci\u00f3n <code>onViewTransitionCreated</code> para manejar eventos de transici\u00f3n.</p> <pre><code>withViewTransitions({\n  onViewTransitionCreated: ({ transition }) =&gt; {\n    const router = inject(Router);\n    const targetUrl = router.getCurrentNavigation()!.finalUrl!;\n\n    const config = { \n      paths: 'exact', \n      matrixParams: 'exact',\n      fragment: 'ignored',\n      queryParams: 'ignored',\n    };\n\n    if (router.isActive(targetUrl, config)) {\n      transition.skipTransition();\n    }\n  },\n}),\n</code></pre> <p>En este ejemplo: - <code>onViewTransitionCreated</code>: Se invoca cuando se crea una transici\u00f3n de vista. - <code>transition.skipTransition()</code>: Cancela la animaci\u00f3n si solo cambian el fragmento o los par\u00e1metros de consulta.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercici_UT03_funcio_reduce.html","title":"Exercici interpretaci\u00f3 codi","text":"<p>En el seg\u00fcent exercici es planteja un tro\u00e7 de codi per a la seva interpretaci\u00f3 i an\u00e0lisi. Concretament es demana fer el seg\u00fcent:</p> <ul> <li>Analitzar el codi sense executar-lo. Plantejar una hip\u00f2tesi d'all\u00f2 que creis que fa.</li> <li>Copia el codi i executa'l. Intentar, segons el resultat de l'execuci\u00f3, confirmar la hip\u00f2tesi anterior i en cas que no es confirmi, plantejar una suposici\u00f3 en base al resultat.</li> <li>Cerca per internet, incloent-hi motors de intel\u00b7lig\u00e8ncia artificial una explicaci\u00f3.</li> <li>Fes la teva explicaci\u00f3 definitiva sobre el funcionament del codi plantejat.</li> <li>A partir d'aqu\u00ed planteja tres possibles millores en termes d'estructura i rendiment.</li> </ul> <p>Aquest \u00e9s el codi:</p> <pre><code>function funcio_usuari(array) {\n    return array.reduce((acc, elem) =&gt; acc + elem, 0);\n}\n\nconst membres = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconsole.log(\"El resultat de la funci\u00f3 \u00e9s: \" + funcio_usuari(membres));\n</code></pre> <p>Comparteix les teves conclusions a trav\u00e9s del \"Teams\"</p>"},{"location":"Moduls/DWEC/exercicisisolucions/ExercicisCridesAsi%CC%81ncrones.html","title":"Exercicis crides as\u00edncrones","text":"<p>\u270f\ufe0f Exercici 1: Mostra un usuari aleatori</p> <p>La p\u00e0gina https://randomuser.me/ permet obtenir dades de persones aleat\u00f2ries per a fer proves de desenvolupament de programari.</p> <p>Les instruccions de l\u2019API d\u2019aquest servei gratu\u00eft es troben a l\u2019URL: https://randomuser.me/documentation</p> <p>En qualsevol cas, la idea \u00e9s fer sol\u00b7licituds a trav\u00e9s de l\u2019URL: https://randomuser.me/api/ Es poden passar par\u00e0metres per indicar quants usuaris volem, sexe, pol\u00edtica de contrasenya, p\u00e0gines, format de resposta, etc.</p> <p>A la p\u00e0gina de documentaci\u00f3 hi ha un exemple de l'estructura de les respostes. Com a resum, es pot dir que la resposta \u00e9s un objecte format per dues propietats: resultats i informaci\u00f3. </p> <p>Es demana fer una aplicaci\u00f3 amb Angular que mostri la foto, el nom, el cognom, el correu electr\u00f2nic, l\u2019adre\u00e7a i l\u2019estat que t\u00e9 un usuari. Cada vegada que pitjem un bot\u00f3 (que haurem d'implementar), se sol\u00b7licitar\u00e0 un altre usuari. Exemple de resultat:</p> <p>laerke sorensen Email: lserke.s0rensen@example.com 201 msllevaenget nykobing sj. (MIDTJYLLAND) Figura 10.4: Ejemplo de usuaria aleatoria</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html","title":"Tasca: Entorn de desenvolupament per a JavaScript","text":"<p>Informaci\u00f3 sobre la tasca</p> <p>El lliurament ser\u00e0 en format PDF.</p> <p>La tarea se calificar\u00e1 con una nota de correcte (10) o no correcte (0).</p> <p>Durada aproximada activitats: 2 hores.</p> <p>RA1. Selecciona les arquitectures i tecnologies de programaci\u00f3 sobre clients web, identificant i analitzant les capacitats i caracter\u00edstiques de cadascuna</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitats","title":"Activitats","text":"<p>\u00c9s molt important llegir els apunts i realitzar les activitats. Les activitats d'aquesta unitat s\u00f3n base per a la realitzaci\u00f3 d' activitats en les properes unitats.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-1-navegador","title":"Activitat 1: Navegador","text":"<p>Instal\u00b7la el navegador web Firefox Developer Edition i Brave.</p> <p>Accedeix a l'eina de desenvolupament de cada navegador (tecla F12) i executa a la consola les seg\u00fcents l\u00ednies de codi una a una:</p> <pre><code>console.log(\"S\u00f3c en &lt;tu usuari&gt; i &lt;m'agrada o no m'agrada&gt; les pilotes amb salsa\")\n</code></pre> <pre><code>alert(\"S\u00f3c en &lt;tu usuari&gt; i tipus de m\u00fasica que m\u00e9s m'agrada \u00e9s el &lt;tipus musica preferit&gt;\")\n</code></pre> <p> </p> <p>Recorda que has de substituir tot el que apareix entre \"&lt;\" i \"&gt;\"</p> <p>\ud83d\udcf8 Fes una o diverses captures per demostrar que has realitzat aquesta tasca. Recorda que les captures de pantalla han de cobrir tot l'escriptori perqu\u00e8 es vegi la data i hora de realitzaci\u00f3!</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-2-entorn-de-desenvolupament","title":"Activitat 2: Entorn de desenvolupament","text":"<p>Instal\u00b7la l'entorn de desenvolupament WebStorm de JetBrains.</p> <p>Una vegada instal\u00b7lat, crea un document <code>&lt;nom_llinatge&gt;.html</code>.</p> <p>En el nou document genera una estructura base per a un document HTML.</p> <p>Afegeix en el <code>body</code>:</p> <pre><code>&lt;h1&gt;S\u00f3c en &lt;nom_llinatge&gt; i m'agrada el cinema del tipus &lt;g\u00e8nere&gt;&lt;/h1&gt;\n</code></pre> <p>Intenta veure la previsualitzaci\u00f3 del que acabes de fer:</p> <p>\ud83d\udcf8 Fes una o diverses captures per demostrar que has realitzat aquesta tasca. Recorda que les captures de pantalla han de cobrir tot l'escriptori perqu\u00e8 es vegi la data i hora de realitzaci\u00f3!</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-3-integracio-de-codi-javascript","title":"Activitat 3: Integraci\u00f3 de codi JavaScript","text":"<p>Afegeix les dues l\u00ednies de codi de la primera activitat utilitzant l'element <code>script</code>.</p> <p>Pregunta</p> <p>Es veu el resultat del 'console.log()' i de l''alert()' a la previsualitzaci\u00f3? Si no \u00e9s aix\u00ed, com puc comprovar que el meu 'console.log()' i el meu 'alert()' realment funciona?</p> <p>\ud83d\udcf8 Fes una o diverses captures per demostrar que has realitzat aquesta tasca. Recorda que les captures de pantalla han de cobrir tot l'escriptori perqu\u00e8 es vegi la data i hora de realitzaci\u00f3!</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-4-script-extern","title":"Activitat 4: Script extern","text":"<p>Crea el fitxer 'script.js' i mou les dues l\u00ednies de codi de l'activitat anterior a aquest nou fitxer fent que s'executi de la mateixa manera.</p> <p>Pregunta</p> <p>Es veu el resultat del 'console.log()' i de l''alert()'? Si no \u00e9s aix\u00ed, \u00bfcom puc comprovar que el meu 'console.log()' i el meu 'alert()' realment funciona?</p> <p>Pregunta</p> <p>En qu\u00e8 part del document HTML haur\u00edem d'afegir l'element 'script'? \u00bfI si utilitz\u00e9ssim els atributs 'async' o 'defer'?</p> <p>\ud83d\udcf8 Fes una o diverses captures per demostrar que has realitzat aquesta tasca.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#activitat-5-github","title":"Activitat 5: GitHub","text":"<p>Crea un compte a GitHub si no la tens.</p> <p>Crea un repositori per a aquest m\u00f2dul professional, anomenat DWECCIFPBMOLL2526_llinatgenom</p> <p>Puja els fitxers que has utilitzat per aquesta pr\u00e0ctica al repositori.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT01.html#bibliografia","title":"Bibliograf\u00eda","text":"<ul> <li>Ministerio de Educaci\u00f3n y Formaci\u00f3n Profesional</li> <li>https://github.com/sergarb1/ApuntesDWEC/blob/master/UD01/Gu%C3%ADa%20de%20estudio%20DWEC%20-%20UD%2001%20-%20Navegadores%20y%20entorno%20de%20trabajo.pdf</li> <li>Lloc web de Marcos Ruiz</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT02.html","title":"Exercicis UT02","text":"<p>\u270f\ufe0f   EXERCICI 1. Segons la forma en qu\u00e8 s'executa JavaScript es pot dir que es tracta d'un llenguatge de programaci\u00f3:</p> <ul> <li> a) Compilat.</li> <li> b) Interpretat.</li> <li> c) Distribu\u00eft.</li> <li> d) Combinat.</li> </ul> <p>\u270f\ufe0f   EXERCICI 2. Que utilitzaries per incorporar un fitxer JavaScript a una p\u00e0gina web?</p> <ul> <li> a) head.</li> <li> b) body.</li> <li> c) script.</li> <li> d) code.</li> </ul> <p>\u270f\ufe0f EXERCICI 3. A qu\u00e8 denomines prompt?</p> <ul> <li> a) Al s\u00edmbol de la consola des del qual pots llan\u00e7ar instruccions perqu\u00e8 les executi el navegador.</li> <li> b) A la ruta des de la qual es poden incorporar fitxers JavaScript a un HTML.</li> <li> c) A un atribut de l'etiqueta que et permet incloure fitxers JavaScript externs.</li> <li> d) Als missatges de sortida de la consola d'un navegador.</li> </ul> <p>\u270f\ufe0f EXERCICI 4. Selecciona l'afirmaci\u00f3 falsa en relaci\u00f3 amb les regles que has de tenir en quarantena per definir identificadors:</p> <ul> <li> a) Pots usar qualsevol car\u00e0cter recollit en UNICODE.</li> <li> b) No distingeix entre maj\u00fascules i min\u00fascules.</li> <li> c) El primer car\u00e0cter ha de ser una lletra, _ o $.</li> <li> d) No pot coincidir amb una paraula reservada del llenguatge.</li> </ul> <p>\u270f\ufe0f EXERCICI 5. Si necessites crear una variable que no pot canviar al llarg de tot el programa, quin tipus de variable seria la m\u00e9s adequada?</p> <ul> <li> a) let.</li> <li> b) var.</li> <li> c) const.</li> <li> d) Si no pot canviar al llarg del programa, no \u00e9s una variable. El seu propi nom ho indica.</li> </ul> <p>\u270f\ufe0f EXERCICI 6. Quin operador faries servir per calcular la pot\u00e8ncia d'un n\u00famero?</p> <ul> <li> a) *.</li> <li> b) **.</li> <li> c) ***.</li> <li> d) ****.</li> </ul> <p>\u270f\ufe0f EXERCICI 7. Assenyala la resposta correcta en relaci\u00f3 amb l'estructura de control if:</p> <ul> <li> a) Pots treure les claus {} si contenen una sola instrucci\u00f3.</li> <li> b) No admet l'encadenament de m\u00e9s de 3 if elseif elseif else.</li> <li> c) \u00c9s una estructura de control, de salt.</li> <li> d) Forma bucles que sense prendre precaucions podrien esdevenir infinits.</li> </ul> <p>\u270f\ufe0f EXERCICI 8. Qu\u00e8 \u00e9s el m\u00e9s important en dissenyar un bucle del tipus que sigui?</p> <ul> <li> a) Assegurar-se que es pot assolir la condici\u00f3 d'acabament.</li> <li> b) No abusar de la seva mida ja que t\u00e9 costos computacionals.</li> <li> c) No anidar-los per no augmentar-ne la complexitat.</li> <li> d) No oblidar col\u00b7locar un default.</li> </ul> <p>\u270f\ufe0f EXERCICI 9. Quina difer\u00e8ncia hi ha entre while i do while?</p> <ul> <li> a) Cap, fan exactament el mateix en tots els casos.</li> <li> b) While s'executa sempre almenys una vegada, mentre que do while no t\u00e9 per qu\u00e8.</li> <li> c) Do while s'executa sempre almenys una vegada, while no.</li> <li> d) While \u00e9s una estructura repetitiva i do while de salt.</li> </ul> <p>\u270f\ufe0f EXERCICI 10. Assenyala l'afirmaci\u00f3 correcta en relaci\u00f3 amb les instruccions de salt:</p> <ul> <li> a) \u00c9s molt bona idea usar-les amb freq\u00fc\u00e8ncia per la seva agilitat saltant d'un punt a un altre del programa.</li> <li> b) S\u00f3n molt \u00fatils en situacions molt concretes, per\u00f2 no n'has d'abusar.</li> <li> c) Tot i ser de salt, no permeten saltar a altres punts del programa.</li> <li> d) S\u00f3n \u00fatils, per\u00f2 la seva complexitat fa que hagin caigut en des\u00fas.</li> </ul> <p>\u270f\ufe0f EXERCICI 11. Escriu un fragment de codi on s'apreci\u00ef la difer\u00e8ncia d'usar els tipus de variables let, var i const.</p> <p>\u270f\ufe0f EXERCICI 12. Recordes la f\u00f3rmula per calcular les solucions d'una equaci\u00f3 de segon grau? Crea un programa que les calculi.</p> <p>\u270f\ufe0f EXERCICI 13. Elabora una calculadora. El programa li ha de demanar a l'usuari un n\u00famero, despr\u00e9s un s\u00edmbol (+, , /, , %) i despr\u00e9s un altre n\u00famero. El programa ha de mostrar per consola el resultat de l'operaci\u00f3.</p> <p>\u270f\ufe0f EXERCICI 14. Crea un programa a JavaScript per calcular la lletra d'un DNI que ha d'introduir l'usuari per teclat (a internet trobar\u00e0s la f\u00f3rmula que ho calcula).</p> <p>\u270f\ufe0f EXERCICI 15. Escriu un programa que li demani a l'usuari un n\u00famero, i mostri en consola la seva factorial.</p> <p>\u270f\ufe0f EXERCICI 16. Desenvolupa un programa amb la l\u00f2gica que desitges on expliquis les difer\u00e8ncies d'usar els operadors a++, a--, ++a i --a. Utilitza els comentaris d'una i diverses l\u00ednies en la teva explicaci\u00f3.</p> <p>\u270f\ufe0f EXERCICI 17. Escriu un conversor de temps. El programa li ha de demanar a l'usuari una quantitat de dies, hores i minuts, i el programa retornar\u00e0 la quantitat de segons que s\u00f3n.</p> <p>\u270f\ufe0f EXERCICI 18. Idea un programa en el qual usar un bucle do while sigui millor idea que usar un bucle while.</p> <p>\u270f\ufe0f EXERCICI 19. Crea un programa que mostri els n\u00fameros senars que no siguin m\u00faltiples de 3 ni de 7 que n'hi ha del 100 a l'-Realitza versions del programa usando bucles while, do while y for.</p> <p>\u270f\ufe0f EXERCICI 20. Escriu un programa que posi en pr\u00e0ctica la seg\u00fcent l\u00f2gica: Mostrar\u00e0 el seg\u00fcent men\u00fa i l'usuari haur\u00e0 de triar una de les opcions:</p> <p>a) \u00c0rea del triangle (b*h/2).</p> <p>b) \u00c0rea del rectangle (b*h).</p> <p>c) \u00c0rea del cercle (Trr*2).</p> <p>d) Sortir. * En funci\u00f3 de l'opci\u00f3 que tri\u00ef l'usuari, se li demanaran les dades necess\u00e0ries en cada cas. * El programa calcular\u00e0 el resultat i el mostrar\u00e0 a la consola. * La l\u00f2gica anterior es repetir\u00e0 indefinidament fins que l'usuari pose la tecla de sortir.</p> <p>\u270f\ufe0f EXERCICI 21. Hi ha molta desinformaci\u00f3 sobre l'origen del nom JavaScript. Busca una font fiable i descobreix la controv\u00e8rsia que envolta el propi nom del llenguatge.</p> <p>\u270f\ufe0f EXERCICI 22. Hem vist de passada que ECMAScript \u00e9s l'especificaci\u00f3 de refer\u00e8ncia que controla l'evoluci\u00f3 del llenguatge JavaScript. Investiga sobre l'especificaci\u00f3 i revisa l'historial de canvis m\u00e9s importants que s'han produ\u00eft en el llenguatge en els darrers anys.</p> <p>\u270f\ufe0f EXERCICI 23. Una bona forma de no caure en els t\u00edpics errors de programaci\u00f3 quan som principiants \u00e9s con\u00e8ixer-los. Busca a internet algun article que en parli i aprofita per con\u00e8ixer-los.</p> <p>\u270f\ufe0f EXERCICI 24. Quan s'avan\u00e7a en el disseny d'algoritmes sempre ens hem de plantejar com optimitzar el codi, ja que estalviar temps d'execuci\u00f3 \u00e9s fonamental, especialment quan el navegador est\u00e0 carregant una p\u00e0gina web. Retrocedeix als programes que has elaborat i pensa com podries reduir les l\u00ednies de codi. Et sorprendr\u00e0 l'estalvi.</p> <p>\u270f\ufe0f EXERCICI 25. En ocasions dissenyem bucles sense pensar en el cost computacional que tenen. Sense embargo, quan escrivim programes de milers de l\u00ednies de codi, aix\u00f2 representa un greu problema de rendiment. Revisa els programes on has utilitzat bucles i investiga com pots estalviar temps d'execuci\u00f3. (Amb les instruccions time de consol que hem vist pots calcular el temps d'execuci\u00f3 dels teus bucles).</p> <p>\u270f\ufe0f EXERCICI 26. Creus que pots dissenyar un algoritme que resolgui qualsevol problema? Hi ha nombrosos casos on el temps de c\u00e0lcul \u00e9s tan gran que resulta in\u00fatil abordar la soluci\u00f3 al problema de forma algor\u00edtmica. Reflexiona sobre aquests extrems i tracta de trobar alguns problemes que no es podrien resoldre amb un algoritme. Despr\u00e9s acudeix a internet i busca informaci\u00f3 al respecte.</p>"},{"location":"Moduls/DWEC/exercicisisolucions/Exercicis_UT03.html","title":"Exercicis UT03","text":"<p>\u270f\ufe0f   EXERCICI 1. Realitza un programa que cada 20 segons (mitjan\u00e7ant setInterval) sol\u00b7liciti un DNI fins que alg\u00fa li escrigui la cadena \"-1\". En aquell moment, el programa ha de mostrar seguides les lletres de tots els DNIs introdu\u00efts. Aqu\u00ed un enlla\u00e7 per saber com calcular la lletra de DNI.</p> Possible soluci\u00f3 <pre><code>// Utilitzam mode estrice\n\"use strict\";\n\n\n// Calcular lletraDNI\nfunction lletraDNI(numeroDni) {\n    let lletres = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E', 'T'];\nreturn lletres[numeroDni % 23];\n}\n\nfunction funcioPrincipal() {\n    let lletra;\n    let cad = prompt(\"Posa el DNI o -1 per aturar\", \"12345678\");\n    if (cad === \"-1\") {\n        // Utilitzam la variable global interval, aturam el setInterval\n        clearInterval(interval);\n        // Mostram la matriu\n        alert(matriuDNIS.join(\" ; \"))\n    }\n    else {\n        lletra = lletraDNI(cad);\n        matriuDNIS.push(lletra);\n    }\n}\n\n\nlet interval = setInterval(\"funcioPrincipal();\", 20000);\n// [] Equivalente a new Array();\nlet matriuDNIS = [];\nfuncioPrincipal();\n</code></pre>"},{"location":"Moduls/DWEC/exercicisisolucions/prova.html","title":"Prova","text":"<ul> <li> dsf</li> <li> asdf</li> </ul>"},{"location":"Moduls/DWEC/exercicisisolucions/prova.html#exercicis-ut02","title":"EXERCICIS UT02","text":"<ol> <li>Segons la forma en qu\u00e8 s'executa JavaScript es pot dir que es tracta d'un llenguatge de programaci\u00f3:</li> </ol> <ul> <li> a) Compilat.</li> <li> b) Interpretat.</li> <li> c) Distribu\u00eft.</li> <li> d) Combinat.</li> </ul> <ol> <li>sdfasdf</li> <li>sdfgsdf</li> <li></li> <li>asdfasd 3.</li> </ol>"},{"location":"Moduls/DWES/index.html","title":"DWES - P\u00e0gina resum","text":""},{"location":"Moduls/DWES/index.html#ras-treballats-des-2024","title":"RAs treballats (Des 2024)","text":"RA Descripci\u00f3 Ja treballats? RA1 Selecciona les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant les seves capacitats i caracter\u00edstiques pr\u00f2pies. Criteris d'avaluaci\u00f3 : 1.1.Caracteritza i diferencia els models d\u2019execuci\u00f3 de codi al servidor i al client web. 1.2.Reconeix els avantatges que proporciona la generaci\u00f3 din\u00e0mica de p\u00e0gines web i les seves difer\u00e8ncies ambla inclusi\u00f3 de sent\u00e8ncies de guions a l\u2019interior de les p\u00e0gines web. 1 3.Identifica els mecanismes d\u2019execuci\u00f3 de codi en els servidors web. 1 4.Reconeix les funcionalitats que aporten els servidors d\u2019aplicacions i la seva integraci\u00f3 amb els servidorsweb. 1 5.Identifica i caracteritza els principals llenguatges i tecnologies relacionats amb la programaci\u00f3 web en entorn servidor. 1 6.Verifica els mecanismes d\u2019integraci\u00f3 dels llenguatges de marques amb els llenguatges de programaci\u00f3 enentorn servidor. 1 7.Reconeix i avalua les eines de programaci\u00f3 en entorn servidor. RA2 Escriu sent\u00e8ncies executables per un servidor web reconeixent i aplicant procediments d\u2019integraci\u00f3 del codi en llenguatges de marques. Criteris d'avaluaci\u00f3 : 2.1. Identifica els mecanismes de generaci\u00f3 de p\u00e0gines web a partir de llenguatges de marques amb codi encastat.2 2. Identifica les principals tecnologies associades.2 3. Utilitza etiquetes per a la inclusi\u00f3 de codi en el llenguatge de marques.  2 4. Identifica la sintaxi del llenguatge de programaci\u00f3 que s\u2019ha d\u2019utilitzar.  2 5. Escriu sent\u00e8ncies simples i en comprova els efectes en el document resultant.2 6. Utilitza directives per modificar el comportament predeterminat.2 7. Utilitza els diferents tipus de variables i operadors disponibles en el llenguatge.2 8. Identifica els \u00e0mbits d\u2019utilitzaci\u00f3 de les variables. RA3 Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques, seleccionant i utilitzant les estructures de programaci\u00f3. Criteris d'avaluaci\u00f3 : 3.1. Utilitza mecanismes de decisi\u00f3 en la creaci\u00f3 de blocs de sent\u00e8ncies.3. 2. Utilitza bucles i verifica el seu funcionament.3. 3. Utilitza arrays per emmagatzemar i recuperar conjunts de dades.3. 4. Crea i utilitza funcions.3. 5. Utilitza formularis web per a interactuar amb l\u2019usuari del navegador web.3. 6. Empra m\u00e8todes per recuperar la informaci\u00f3 introdu\u00efda en el formulari.3. 7. Afegeix comentaris al codi. RA4 Desenvolupa aplicacions web embegudes en llenguatges de marques analitzant i incorporant funcionalitats segons especificacions. Criteris d'avaluaci\u00f3 : 4.1. Identifica els mecanismes disponibles per al manteniment de la informaci\u00f3 que fa a un client web concret in\u2019assenyala els avantatges.4. 2. Utilitza sessions per mantenir l\u2019estat de les aplicacions web.4. 3. Utilitza galetes (cookies) per emmagatzemar informaci\u00f3 en el client web i per recuperar el seu contingut.4. 4. Identifica i caracteritza els mecanismes disponibles per a l\u2019autenticaci\u00f3 d\u2019usuaris.4. 5. Escriu aplicacions que integrin mecanismes d\u2019autenticaci\u00f3 d\u2019usuaris.4. 6. Fa adaptacions a aplicacions web existents com a gestors de continguts o altres.4. 7. Utilitza eines i entorns per a facilitar la programaci\u00f3, prova i depuraci\u00f3 del codi. RA5 Desenvolupa aplicacions web identificant i aplicant mecanismes per separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci. Criteris d'avaluaci\u00f3 : 5.1. Identifica els avantatges de separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 de l\u2019aplicaci\u00f3.5. 2. Analitza tecnologies i mecanismes que permeten realitzar aquesta separaci\u00f3 i les seves caracter\u00edstiquesprincipals.5. 3. Utilitza objectes i controls en el servidor per generar l\u2019aspecte visual de l\u2019aplicaci\u00f3 web en el client.5. 4. Utilitza formularis generats de manera din\u00e0mica per respondre als esdeveniments de l\u2019aplicaci\u00f3 web.5. 5. Identifica i aplica els par\u00e0metres relatius a la configuraci\u00f3 de l\u2019aplicaci\u00f3 web.5. 6. Escriu aplicacions web amb manteniment d\u2019estat i separaci\u00f3 de la l\u00f2gica de negoci.5. 7. Aplica els principis de la programaci\u00f3 orientada a objectes.5. 8. Prova i documenta el codi. RA6 Desenvolupa aplicacions web d\u2019acc\u00e9s a magatzems de dades, aplicant mesures per mantenir la seguretat i la integritat de la informaci\u00f3. Criteris d'avaluaci\u00f3 : 6.1. Analitza les tecnologies que permeten l\u2019acc\u00e9s mitjan\u00e7ant programaci\u00f3 a la informaci\u00f3 disponible enmagatzems de dades.6. 2. Crea aplicacions que estableixin connexions amb bases de dades.6. 3. Recupera informaci\u00f3 emmagatzemada en bases de dades.6. 4. Publica en aplicacions web la informaci\u00f3 recuperada.6. 5. Utilitza conjunts de dades per emmagatzemar la informaci\u00f3.6. 6. Crea aplicacions web que permetin l\u2019actualitzaci\u00f3 i l\u2019eliminaci\u00f3 d\u2019informaci\u00f3 disponible en una base dedades.6. 7. Utilitza transaccions per mantenir la consist\u00e8ncia de la informaci\u00f3.6. 8. Prova i documenta les aplicacions. RA7 Desenvolupa serveis web analitzant el seu funcionament i implantant l\u2019estructura dels seus components. Criteris d'avaluaci\u00f3 : 7.1. Identifica les caracter\u00edstiques pr\u00f2pies i l\u2019\u00e0mbit d\u2019aplicaci\u00f3 dels serveis web.7. 2. Identifica els avantatges d\u2019utilitzar serveis web per a proporcionar acc\u00e9s a funcionalitats incorporades a la l\u00f2gica de negoci d\u2019una aplicaci\u00f3.7. 3. Identifica les tecnologies i els protocols implicats en la publicaci\u00f3 i en la utilitzaci\u00f3 de serveis web.7. 4. Programa un servei web.7. 5. Crea el document de descripci\u00f3 del servei web.7. 6. Verifica el funcionament del servei web.7. 7. Consumeix el servei web. RA8 Genera p\u00e0gines web din\u00e0miques analitzant i utilitzant tecnologies del servidor web que afegeixin codi al llenguatge de marques. Criteris d'avaluaci\u00f3 : 8.1. Identifica les difer\u00e8ncies entre l\u2019execuci\u00f3 de codi al servidor i al client web.8. 2. Reconeix els avantatges d\u2019unir les dues tecnologies en el proc\u00e9s de desenvolupament de programes.8. 3. Identifica les llibreries i les tecnologies relacionades amb la generaci\u00f3 per part del servidor de p\u00e0gines web amb guions embeguts.8. 4. Utilitza aquestes tecnologies per a generar p\u00e0gines web que incloguin interacci\u00f3 amb l\u2019usuari en forma d\u2019advert\u00e8ncies i de peticions de confirmaci\u00f3.8. 5. Utilitza aquestes tecnologies, per a generar p\u00e0gines web que incloguin verificaci\u00f3 de formularis.8. 6. Utilitza aquestes tecnologies per a generar p\u00e0gines web que incloguin modificaci\u00f3 din\u00e0mica del seu contingut i la seva estructura.8. 7. Aplica aquestes tecnologies en la programaci\u00f3 d\u2019aplicacions web. RA9 Desenvolupa aplicacions web h\u00edbrids seleccionant i utilitzant llibreries de codi i dip\u00f2sits heterogenis d\u2019informaci\u00f3. Criteris d'avaluaci\u00f3 : 9.1. Reconeix els avantatges que proporciona la reutilitzaci\u00f3 de codi i l\u2019aprofitament d\u2019informaci\u00f3 ja existent.9. 2. Identifica llibreries de codi i tecnologies aplicables en la creaci\u00f3 d\u2019aplicacions web h\u00edbrides.9. 3. Crea una aplicaci\u00f3 web que recuperi i processi dip\u00f2sits d\u2019informaci\u00f3 ja existents.9. 4. Crea dip\u00f2sits espec\u00edfics a partir d\u2019informaci\u00f3 existent a internet i en magatzems d\u2019informaci\u00f3.9. 5. Utilitza llibreries de codi per incorporar funcionalitats espec\u00edfiques a una aplicaci\u00f3 web.9. 6. Programa serveis i aplicacions web utilitzant com a base informaci\u00f3 i codi generats per tercers.9. 7. Prova, depura i documenta les aplicacions generades."},{"location":"Moduls/DWES/index.html#unitats-de-treball","title":"Unitats de treballAutoevaluaci\u00f3n","text":"<p>UNIDAD DE TRABAJO 1: Arquitecturas web UNIDAD DE TRABAJO 2:  Caracter\u00edsticas del lenguaje PHP. UNIDAD DE TRABAJO 3 : PHP  orientado a objetos UNIDAD DE TRABAJO 4: Programaci\u00f3n Web y herramientas Web UNIDAD DE TRABAJO 5: Acceso a datos. UNIDAD DE TRABAJO 6: Frameworks PHP \u2013 Laravel. UNIDAD DE TRABAJO 7: Servicios Web. UNIDAD DE TRABAJO 8: Aplicaciones web h\u00edbridas. </p> <p></p> <pre><code>graph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;</code></pre> <pre><code>gantt\ntitle Temporitzaci\u00f3 DWES 24-25\ndateFormat DD-MM-YYYY\nsection Section\nUT01        :a1, 23-09-2024, 10d\nUT02        :a2, after a1, 20d\nPrimera avaluaci\u00f3 : milestone, m1, 09-12-2024, 5d\nsection Another\nUT03        :after a2, 12d\nanother task    :24d</code></pre> Pregunta En lugar de programar un m\u00e9todo <code>set</code> para modificar el valor de los atributos privados en que sea necesario, puedo utilizar el m\u00e9todo m\u00e1gico <code>__set</code>. Respuestas <p> Opci\u00f3n 1 </p>  Verdadero.   <p> Opci\u00f3n 2 </p>  Falso.   Retroalimentaci\u00f3n  S\u00ed, pero tendr\u00edas que comprobar el nombre del atributo usado y asignar el valor al adecuado.    Si el atributo es privado, no es accesible; por tanto, cuando se le intente asignar un valor, se llamar\u00e1 al m\u00e9todo m\u00e1gico <code>__set</code> si existe.   Soluci\u00f3n <ol> <li>Incorrecto (Retroalimentaci\u00f3n)</li> <li>Opci\u00f3n correcta (Retroalimentaci\u00f3n)</li> </ol>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html","title":"Programaci\u00f3n orientada a objetos en PHP.","text":""},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#1-orientacion-a-objetos-en-php","title":"1.- Orientaci\u00f3n a objetos en PHP.","text":"<p>La programaci\u00f3n orientada a objetos (POO, o OOP en lenguaje ingl\u00e9s), es una metodolog\u00eda de programaci\u00f3n basada en objetos. Un objeto es una estructura que contiene datos y el c\u00f3digo que los maneja.</p> <p>La estructura de los objetos se define en las clases. En ellas se escribe el c\u00f3digo que define el comportamiento de los objetos y se indican los miembros que formar\u00e1n parte de los objetos de dicha clase. Entre los miembros de una clase puede haber:</p> <ul> <li>M\u00e9todos. Son los miembros de la clase que contienen el c\u00f3digo de la misma. Un m\u00e9todo es como una funci\u00f3n. Puede recibir par\u00e1metros y devolver valores.</li> <li>Atributos o propiedades. Almacenan informaci\u00f3n acerca del estado del objeto al que pertenecen (y por tanto, su valor puede ser distinto para cada uno de los objetos de la misma clase).</li> </ul> <p>A la creaci\u00f3n de un objeto basado en una clase se le llama instanciar una clase y al objeto obtenido tambi\u00e9n se le conoce como instancia de esa clase.</p> <p>Los pilares fundamentales de la POO son:</p> <ul> <li>Herencia. Es el proceso de crear una clase a partir de otra, heredando su comportamiento y caracter\u00edsticas y pudiendo redefinirlos.</li> <li>Abstracci\u00f3n. Hace referencia a que cada clase oculta en su interior las peculiaridades de su implementaci\u00f3n, y presenta al exterior una serie de m\u00e9todos (interface) cuyo comportamiento est\u00e1 bien definido. Visto desde el exterior, cada objeto es un ente abstracto que realiza un trabajo.</li> <li>Polimorfismo. Un mismo m\u00e9todo puede tener comportamientos distintos en funci\u00f3n del objeto con que se utilice.</li> <li>Encapsulaci\u00f3n. En la POO se juntan en un mismo lugar los datos y el c\u00f3digo que los manipula.</li> </ul> <p>Las ventajas m\u00e1s importantes que aporta la programaci\u00f3n orientada a objetos son:</p> <ul> <li>Modularidad. La POO permite dividir los programas en partes o m\u00f3dulos m\u00e1s peque\u00f1os, que son independientes unos de otros pero pueden comunicarse entre ellos.</li> <li>Extensibilidad. Si se desean a\u00f1adir nuevas caracter\u00edsticas a una aplicaci\u00f3n, la POO facilita esta tarea de dos formas: a\u00f1adiendo nuevos m\u00e9todos al c\u00f3digo, o creando nuevos objetos que extiendan el comportamiento de los ya existentes.</li> <li>Mantenimiento. Los programas desarrollados utilizando POO son m\u00e1s sencillos de mantener, debido a la modularidad antes comentada. Tambi\u00e9n ayuda seguir ciertas convenciones al escribirlos, por ejemplo, escribir cada clase en un fichero propio. No debe haber dos clases en un mismo fichero, ni otro c\u00f3digo aparte del propio de la clase.</li> </ul> <p>Para saber m\u00e1s</p> <p>En este m\u00f3dulo no se pretende realizar un estudio profundo de las ventajas y caracter\u00edsticas de la POO, sino simplemente recordar conceptos que ya deber\u00edas haber asimilado con anterioridad. Si tienes dudas sobre algo de lo que acabamos de repasar, puedes consultar este tutorial de la web desarrolloweb.com.</p> <p>Tutorial de la web desarrolloweb.com.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#11-caracteristicas-de-orientacion-a-objetos-en-php","title":"1.1.- Caracter\u00edsticas de orientaci\u00f3n a objetos en PHP.","text":"<p>Everaldo Coelho (GNU/GPL)</p> <p>Seguramente todo, o la mayor\u00eda de lo que acabas de ver, ya lo conoc\u00edas, y es incluso probable que sepas utilizar alg\u00fan lenguaje de programaci\u00f3n orientado a objetos, as\u00ed que vamos a ver directamente las peculiaridades propias de PHP en lo que hace referencia a la POO.</p> <p>Como ya has visto en las unidades anteriores, especialmente con las extensiones para utilizar bases de datos, con PHP puedes utilizar dos estilos de programaci\u00f3n: estructurada y orientada a objetos. <pre><code>// utilizando programaci\u00f3n estructurada`  \n$conProyecto = mysqli_connect('localhost', 'gestor', 'secreto', 'proyecto');`  \n// utilizando POO`  \n$conProyecto = new mysqli();`\n\n$conProyecto-&gt;connect('localhost', 'gestor', 'secreto', 'proyecto');`\n</code></pre></p> <p>Sin embargo, el lenguaje PHP original no se dise\u00f1\u00f3 con caracter\u00edsticas de orientaci\u00f3n a objetos. S\u00f3lo a partir de la versi\u00f3n 3, se empezaron a introducir algunos rasgos de POO en el lenguaje. Esto se potenci\u00f3 en la versi\u00f3n 4, aunque todav\u00eda de forma muy rudimentaria. Por ejemplo, en PHP4:</p> <ul> <li>Los objetos se pasan siempre por valor, no por referencia.</li> <li>No se puede definir el nivel de acceso para los miembros de la clase. Todos son p\u00fablicos.</li> <li>No existen los interfaces.</li> <li>No existen m\u00e9todos destructores.</li> </ul> <p>A partir de la versi\u00f3n de, PHP5, se reescribi\u00f3 el soporte de orientaci\u00f3n a objetos del lenguaje, ampliando sus caracter\u00edsticas y mejorando su rendimiento y su funcionamiento general. Aunque iremos detallando y explicando cada una posteriormente con detenimiento, las caracter\u00edsticas de POO que soporta PHP incluyen:</p> <ul> <li>M\u00e9todos est\u00e1ticos.</li> <li>M\u00e9todos constructores y destructores.</li> <li>Herencia.</li> <li>Interfaces.</li> <li>Clases abstractas.</li> <li>Traits (A partir de la versi\u00f3n 5.4.0).</li> </ul> <p>Entre las caracter\u00edsticas que no incluye PHP, y que puedes conocer de otros lenguajes de programaci\u00f3n, est\u00e1n:</p> <ul> <li>Herencia m\u00faltiple.</li> <li>Sobrecarga de m\u00e9todos.(incluidos los m\u00e9todos constructores).</li> <li>Sobrecarga de operadores.</li> </ul> <p>'''' Autoevaluaci\u00f3n</p> <p>Antes de PHP5, el comportamiento cuando se pasaba una variable a una funci\u00f3n era siempre el mismo, independientemente de si la variable fuera un objeto o de cualquier otro tipo: siempre se creaba una nueva variable copiando los valores de la original.</p> <p>Verdadero.</p> <p>Falso.</p> Mostrar objecte: <p>Aquest \u00e9s l'objecte ocult!</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#12-creacion-de-clases","title":"1.2.- Creaci\u00f3n de clases.","text":"<p>Everaldo Coelho and YellowIcon (GNU/GPL)</p> <p>La declaraci\u00f3n de una clase en PHP se hace utilizando la palabra <code>class</code>. A continuaci\u00f3n y entre llaves, deben figurar los miembros de la clase. Conviene hacerlo de forma ordenada, primero las propiedades o atributos, y despu\u00e9s los m\u00e9todos, cada uno con su c\u00f3digo respectivo.</p> <p><code>class Producto {</code> <code>private $codigo;</code> <code>public $nombre;</code> <code>public $pvp;</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Como coment\u00e1bamos antes, es preferible que cada clase figure en su propio fichero (<code>producto.php</code>). Adem\u00e1s, muchos programadores prefieren utilizar para las clases nombres que comiencen por letra may\u00fascula, para, de esta forma, distinguirlos de los objetos y otras variables.</p> <p>Una vez definida la clase, podemos usar la palabra <code>new</code> para instanciar objetos de la siguiente forma:</p> <p><code>$p = new Producto();</code></p> <p>Para que la l\u00ednea anterior se ejecute sin error, previamente debemos haber declarado la clase. Para ello, en ese mismo fichero tendr\u00e1s que incluir la clase poniendo algo como:</p> <p><code>require_once('producto.php');</code></p> <p>Los atributos de una clase son similares a las variables de PHP. Es posible indicar un valor en la declaraci\u00f3n de la clase. En este caso, todos los objetos que se instancien a partir de esa clase, partir\u00e1n con ese valor por defecto en el atributo.</p> <p>Para acceder desde un objeto a sus atributos o a los m\u00e9todos de la clase, debes utilizar el operador flecha (f\u00edjate que s\u00f3lo se pone el s\u00edmbolo <code>$</code> delante del nombre del objeto):</p> <p><code>$p-&gt;nombre = 'Samsung Galaxy A6';</code></p> <p><code>$p-&gt;muestra();</code></p> <p>Cuando se declara un atributo, se debe indicar su nivel de acceso. Los principales niveles son:</p> <ul> <li><code>public</code>. Los atributos declarados como <code>public</code> pueden utilizarse directamente por los objetos de la clase. Es el caso del atributo <code>$nombre</code> anterior.</li> <li><code>private</code>. Los atributos declarados como <code>private</code> s\u00f3lo pueden ser accedidos y modificados por los m\u00e9todos definidos en la clase, no directamente por los objetos de la misma. Es el caso del atributo <code>$codigo</code>.</li> </ul>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#121-creacion-de-clases-i","title":"1.2.1.- Creaci\u00f3n de clases (I).","text":"<p>Everaldo Coelho (YellowIcon) (GNU/GPL)</p> <p>Uno de los motivos para crear atributos privados es que su valor forma parte de la informaci\u00f3n interna del objeto y no debe formar parte de su interface. Otro motivo es mantener cierto control sobre sus posibles valores.</p> <p>Por ejemplo, no quieres que se pueda cambiar libremente el valor del c\u00f3digo de un producto. O necesitas conocer cu\u00e1l ser\u00e1 el nuevo valor antes de asignarlo. En estos casos, se suelen definir esos atributos como privados y adem\u00e1s se crean dentro de la clase m\u00e9todos para permitirnos obtener y/o modificar los valores de esos atributos. Por ejemplo:</p> <p><code>private $codigo;</code> <code>public function setCodigo($nuevo_codigo) {</code> <code>if (noExisteCodigo($nuevo_codigo)) {</code> <code>$this-&gt;codigo = $nuevo_codigo;</code> <code>return true;</code> <code>}</code> <code>return false;</code> <code>}</code></p> <p><code>public function getCodigo() { return $this-&gt;codigo; }</code></p> <p>Aunque no es obligatorio, el nombre del m\u00e9todo que nos permite obtener el valor de un atributo suele empezar por <code>get</code>, y el que nos permite modificarlo por <code>set</code>, y a continuaci\u00f3n el nombre del atributo con la primera letra en may\u00fasculas.</p> <p>Debes conocer</p> <p>En PHP5 se introdujeron los llamados m\u00e9todos m\u00e1gicos, entre ellos <code>__set</code> y <code>__get</code>. Si se declaran estos dos m\u00e9todos en una clase, PHP los invoca autom\u00e1ticamente cuando desde un objeto se intenta usar un atributo no existente o no accesible. Por ejemplo, el c\u00f3digo siguiente simula que la clase Producto tiene cualquier atributo que queramos usar.</p> <p><code>class Producto {</code> <code>private $atributos = array();</code> <code>public function __get($atributo) {</code> <code>return $this-&gt;atributos[$atributo];</code> <code>}</code> <code>public function __set($atributo, $valor) {</code> <code>$this-&gt;atributos[$atributo] = $valor;</code> <code>}</code></p> <p><code>}</code></p> <p>En la documentaci\u00f3n de PHP tienes m\u00e1s informaci\u00f3n sobre los m\u00e9todos m\u00e1gicos.</p> <p>M\u00e9todos m\u00e1gicos.</p> <p>Autoevaluaci\u00f3n</p> <p>En lugar de programar un m\u00e9todo <code>set</code> para modificar el valor de los atributos privados en que sea necesario, puedo utilizar el m\u00e9todo m\u00e1gico <code>__set</code>.</p> <p>Verdadero.</p> <p>Falso.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#122-creacion-de-clases-ii","title":"1.2.2.- Creaci\u00f3n de clases (II).","text":"<p>David Vignoni (GNU/GPL)</p> <p>Cuando desde un objeto se invoca un m\u00e9todo de la clase, a \u00e9ste se le pasa siempre una referencia al objeto que hizo la llamada. Esta referencia se almacena en la variable <code>$this</code>. Se utiliza, por ejemplo, en el c\u00f3digo anterior para tener acceso a los atributos privados del objeto (que s\u00f3lo son accesibles desde los m\u00e9todos de la clase).</p> <p><code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code></p> <p>Dentro de la clase para acceder a sus m\u00e9todos o atributos propios usaremos  <code>$this-&gt;nombre,</code>(salvo que el atributo o el m\u00e9todo sea est\u00e1tico) F\u00edjate que al atributo se le quita \"<code>$</code>\". Veamos un ejemplo:</p> <p><code>class Persona{</code> <code>private $nombre;</code> <code>private $perfil;</code> <code>public function getNombre(){</code> <code>return $this-&gt;nombre;</code> <code>}</code> <code>public function setNombre($n){</code> <code>$this-&gt;nombre=$n;</code> <code>}</code> <code>public function saludo(){</code> <code>//Fijate como hacemos referencia al m\u00e9todo getNombre</code> <code>echo \"Hola {$this-&gt;getNombre()}, Buenos dias\";</code> <code>}</code> <code>}</code> <code>$persona1=new Persona();</code> <code>$persona1-&gt;setNombre(\"Luis\");</code> <code>$persona1-&gt;saludo();</code></p> <p>Debes conocer</p> <p>Una referencia es una forma de utilizar distintos nombres de variables para acceder al mismo contenido. En los puntos siguientes aprender\u00e1s a crearlas y a utilizarlas.</p> <p>Referencia.</p> <p>Adem\u00e1s de m\u00e9todos y propiedades, en una clase tambi\u00e9n se pueden definir constantes, utilizando la palabra <code>const</code>. Es importante que no confundas los atributos con las constantes. Son conceptos distintos: las constantes no pueden cambiar su valor (obviamente, de ah\u00ed su nombre), no usan el car\u00e1cter <code>$</code> y, adem\u00e1s, su valor va siempre entre comillas y est\u00e1 asociado a la clase, es decir, no existe una copia del mismo en cada objeto. Por tanto, para acceder a las constantes de una clase, se debe utilizar el nombre de la clase y el operador <code>::</code>, llamado operador de resoluci\u00f3n de \u00e1mbito (que se utiliza para acceder a los elementos de una clase).</p> <p><code>class DB {</code> <code>const USUARIO = 'gestor';</code> <code>\u2026</code> <code>}</code></p> <p><code>echo DB::USUARIO;</code></p> <p>Es importante resaltar que no es necesario que exista ning\u00fan objeto de una clase para poder acceder al valor de las constantes que defina. Adem\u00e1s, sus nombres suelen escribirse en may\u00fasculas.</p> <p>Tampoco se deben confundir las constantes con los miembros est\u00e1ticos de una clase. En PHP, una clase puede tener atributos o m\u00e9todos est\u00e1ticos, tambi\u00e9n llamados a veces atributos o m\u00e9todos de clase. Se definen utilizando la palabra clave <code>static</code>.</p> <p><code>class Producto {</code> <code>private static $num_productos = 0;</code> <code>public static function nuevoProducto() {</code> <code>self::$num_productos++;</code> <code>}</code> <code>\u2026</code></p> <p><code>}</code></p> <p>Los atributos y m\u00e9todos est\u00e1ticos no pueden ser llamados desde un objeto de la clase utilizando el operador \"<code>-&gt;\"</code>. Si el m\u00e9todo o atributo es p\u00fablico, deber\u00e1 accederse utilizando el nombre de la clase y el operador de resoluci\u00f3n de \u00e1mbito.</p> <p><code>Producto::nuevoProducto();</code></p> <p>Si es privado, como el atributo <code>$num_productos</code> en el ejemplo anterior, s\u00f3lo se podr\u00e1 acceder a \u00e9l desde los m\u00e9todos de la propia clase, utilizando la palabra <code>self</code>. De la misma forma que <code>$this</code> hace referencia al objeto actual, <code>self</code> hace referencia a la clase actual.</p> <p><code>self::$num_productos ++;</code></p> <p>Los atributos est\u00e1ticos de una clase se utilizan para guardar informaci\u00f3n general sobre la misma, como puede ser el n\u00famero de objetos que se han instanciado. S\u00f3lo existe un valor del atributo, que se almacena a nivel de clase.</p> <p>Los m\u00e9todos est\u00e1ticos suelen realizar alguna tarea espec\u00edfica o devolver un objeto concreto. Por ejemplo, las clases matem\u00e1ticas suelen tener m\u00e9todos est\u00e1ticos para realizar logaritmos o ra\u00edces cuadradas. No tiene sentido crear un objeto si lo \u00fanico que queremos es realizar una operaci\u00f3n matem\u00e1tica.</p> <p>Los m\u00e9todos est\u00e1ticos se llaman desde la clase. No es posible llamarlos desde un objeto y por tanto, no podemos usar <code>$this</code> dentro de un m\u00e9todo est\u00e1tico.</p> <p>Para saber m\u00e1s</p> <p>El operador <code>\"::\"</code>, tiene un nombre curioso en programaci\u00f3n : Paamayim Nekudotayim, Significa \"doble dos puntos\" en Hebreo.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#123-creacion-de-clases-iii","title":"1.2.3.- Creaci\u00f3n de clases (III).","text":"<p>David Vignoni (GNU/GPL)</p> <p>PHP permite a los desarrolladores declarar m\u00e9todos constructores para las clases. Aquellas que tengan un m\u00e9todo constructor lo invocar\u00e1n en cada nuevo objeto creado, lo que nos permite la inicializaci\u00f3n que el objeto pueda necesitar antes de ser usado. Como PHP no admite sobrecarga de m\u00e9todos s\u00f3lo podremos crear un constructor por clase.</p> <p>Por motivos de retrocompatibilidad con PHP3 y PHP4, si PHP no puede encontrar una funci\u00f3n <code>__construct()</code> de una clase dada, se buscar\u00e1 la funci\u00f3n constructora del estilo antiguo, por el nombre de la clase.</p> <p>Veamos unos ejemplos de uso del constructor:</p> <p><code>class Persona{</code> <code>public static $id;</code> <code>private $nombre;</code> <code>private $perfil;</code> <code>public function __construct(){</code> <code>$perfil=\"P\u00fablico\";</code> <code>}</code> <code>}</code> <code>//creamos persona1 que tiene inicializado su atributo $perfil a P\u00fablico.</code> <code>$persona1=new Persona();</code> <code>// Podemos comprobarlo</code></p> <p><code>var_dump($persona1);</code></p> <p><code>class Persona{</code> <code>public static $id;</code> <code>private $nombre;</code> <code>private $perfil;</code> <code>public function __construct($n, $p){</code> <code>$this-&gt;nombre=$n;</code> <code>$this-&gt;perfil=$p;</code> <code>}</code> <code>}</code> <code>// Creamos un objeto de la clase Persona e inicializamos sus atributos;</code> <code>// F\u00edjate que ya NO podremos usar: $persona1=new Persona(); ya que el constructor espera dos par\u00e1metros.</code> <code>$persona1=new Persona(\"Juan\", \"Privado\");</code> <code>//Podemos comprobarlo</code> <code>var_dump($persona1);</code></p> <p>Con el uso de las funciones <code>\"func_get_args()\"</code>, <code>\"fun_get_arg()\"</code> y <code>\"func_num_arg()\"</code>. podemos pasar distinto n\u00famero de par\u00e1metros a un constructor \"simulando\" la sobrecarga del mismo, en el Anexo 1 de este tema se ve un ejemplo de como hacerlo. Ir a Anexo 1. Otra posibilidad es usar el m\u00e9todo m\u00e1gico  <code>\"__call\"</code> para capturar llamadas a m\u00e9todos que no est\u00e9n implementados.</p> <p>Los constructores del estilo antiguo (llamados como el nombre de la clase) est\u00e1n OBSOLETOS desde PHP 7.0, por lo que ser\u00e1n eliminados en futuras versiones. Se deber\u00eda utilizar siempre <code>\"__construct()\"</code> en c\u00f3digo nuevo.</p> <p>Tambi\u00e9n es posible definir un m\u00e9todo destructor, que debe llamarse <code>\"__destruct\"</code> y permite definir acciones que se ejecutar\u00e1n cuando se elimine el objeto.</p> <p><code>class Producto {</code> <code>private static $num_productos = 0;</code> <code>private $codigo;</code> <code>public function __construct($codigo) {</code> <code>$this-&gt;$codigo = $codigo;</code> <code>self::$num_productos++;</code> <code>}</code> <code>public function __destruct() {</code> <code>self::$num_productos--;</code> <code>}</code> <code>\u2026</code> <code>}</code></p> <p><code>$p = new Producto('GALAXYS');</code></p> <p>Los m\u00e9todos destructores aparecen en PHP5; no exist\u00edan en versiones anteriores del lenguaje.</p> <p>Autoevaluaci\u00f3n</p> <p>\u00bfCu\u00e1l es la utilidad del operador de resoluci\u00f3n de \u00e1mbito <code>::</code>?</p> <p>Nos permite hacer referencia a la clase del objeto actual.</p> <p>Se utiliza para acceder a los elementos de una clase, como constantes y miembros est\u00e1ticos.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#13-utilizacion-de-objetos","title":"1.3.- Utilizaci\u00f3n de objetos.","text":"<p>Pixabay (Dominio p\u00fablico)</p> <p>Ya sabes c\u00f3mo instanciar un objeto utilizando <code>new</code>, y c\u00f3mo acceder a sus m\u00e9todos y atributos p\u00fablicos con el operador flecha:</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code></p> <p><code>$p-&gt;muestra();</code></p> <p>Una vez creado un objeto, puedes utilizar el operador <code>instanceof</code> para comprobar si es o no una instancia de una clase determinada.</p> <p><code>if ($p instanceof Producto) {</code></p> <pre><code>`. . .}`\n</code></pre> <p>Adem\u00e1s, a partir de  PHP5 se incluyen una serie de funciones \u00fatiles para el desarrollo de aplicaciones utilizando POO.</p> Funci\u00f3n Ejemplo Significado <code>get_class()</code> <code>echo \"La clase es: \" . get_class($p);</code> Devuelve el nombre de la clase del objeto. <code>class_exists</code> <code>if (class_exists('Producto') {     $p = new Producto();     . . .  }</code> Devuelve <code>true</code> si la clase est\u00e1 definida o <code>false</code> en caso contrario. <code>get_declared_classes()</code> <code>print_r(get_declared_classes());</code> Devuelve un array con los nombres de las clases definidas. <code>class_alias()</code> <code>class_alias('Producto', 'Articulo'); $p = new Articulo();</code> Crea un alias para una clase. <code>get_class_methods()</code> <code>print_r(get_class_methods('Producto'));</code> Devuelve un array con los nombres de los m\u00e9todos de una clase que son accesibles desde d\u00f3nde se hace la llamada. <code>method_exists()</code> <code>if (method_exists('Producto', 'vende') {     \u2026 }</code> Devuelve <code>true</code> si existe el m\u00e9todo en el objeto o la clase que se indica, o <code>false</code> en caso contrario, independientemente de si es accesible o no. <code>get_class_vars()</code> <code>print_r(get_class_vars('Producto'));</code> Devuelve un array con los nombres de los atributos de una clase que son accesibles desde d\u00f3nde se hace la llamada. <code>get_object_vars()</code> <code>print_r(get_object_vars($p));</code> Devuelve un array con los nombres de los m\u00e9todos de un objeto que son accesibles desde d\u00f3nde se hace la llamada. <code>property_exists()</code> <code>if (property_exists('Producto', 'codigo') {     . . . }</code> Devuelve <code>true</code> si existe el atributo en el objeto o la clase que se indica, o <code>false</code> en caso contrario, independientemente de si es accesible o no. <p>Desde PHP5, puedes indicar en las funciones y m\u00e9todos de qu\u00e9 clase deben ser los objetos que se pasen como par\u00e1metros as\u00ed como el tipo del dato devuelto (caso que lo haya). Para ello, debes especificar el tipo antes del par\u00e1metro. Para el dato devuelto poner  \"<code>:tipoDato\",</code> despues de la declaraci\u00f3n de la funci\u00f3n o el m\u00e9todo y antes de las llaves.</p> <p><code>public function precioProducto(Producto $p) :float {</code> <code>. . .</code> <code>return $precio;</code></p> <p><code>}</code></p> <p>Si cuando se realiza la llamada, el par\u00e1metro no es del tipo adecuado, se produce un error que podr\u00edas capturar.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#131-utilizacion-de-objetos-i","title":"1.3.1.- Utilizaci\u00f3n de objetos (I).","text":"<p>Imagen de un ordenador portatil abierto, en la pantalla difuminado se pueder ver c\u00f3digo escritoNegative Space (Dominio p\u00fablico)</p> <p>Una caracter\u00edstica de la POO que debes tener muy en cuenta es qu\u00e9 sucede con los objetos cuando los pasas a una funci\u00f3n, o simplemente cuando ejecutas un c\u00f3digo como el siguiente:</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy S';</code></p> <p><code>$a = $p;</code></p> <p>En PHP4, la \u00faltima l\u00ednea del c\u00f3digo anterior crea un nuevo objeto con los mismos valores del original, de la misma forma que se copia cualquier otro tipo de variable. Si despu\u00e9s de hacer la copia se modifica, por ejemplo, el atributo 'nombre' de uno de los objetos, el otro objeto no se ver\u00eda modificado.</p> <p>Sin embargo, a partir de PHP5 este comportamiento var\u00eda. El c\u00f3digo anterior simplemente crear\u00eda un nuevo identificador del mismo objeto. Esto es, en cuanto se utilice uno cualquiera de los identificadores para cambiar el valor de alg\u00fan atributo, este cambio se ver\u00eda tambi\u00e9n reflejado al acceder utilizando el otro identificador. Recuerda que, aunque haya dos o m\u00e1s identificadores del mismo objeto, en realidad todos se refieren a la \u00fanica copia que se almacena del mismo.</p> <p>Debes conocer</p> <p>Para crear nuevos identificadores en PHP a un objeto ya existente, se utiliza el operador <code>\"=\"</code>. Sin embargo, como ya sabes, este operador aplicado a variables de otros tipos, crea una copia de la misma. En PHP puedes crear referencias a variables (como n\u00fameros enteros o cadenas de texto), utilizando el operador <code>&amp;</code> , que ya vimos en el paso de par\u00e1metros por referencia:</p> <p><code>$a = 'Samsung Galaxy A6';</code></p> <p><code>$b = &amp; $a;</code></p> <p>En el ejemplo anterior, <code>$b</code> es una referencia a la variable <code>$a</code>. Cuando se cambia el valor de una de ellas, este cambio se refleja en la otra.</p> <p>Las referencias se pueden utilizar para pasarlas como par\u00e1metros a las funciones. Si utilizamos el operador &amp; junto al par\u00e1metro, en lugar de pasar una copia de la variable, se pasa una referencia a la misma.</p> <p><code>function suma(&amp;$v) {</code> <code>$v ++;</code> <code>}</code> <code>$a = 3;</code> <code>suma ($a);</code></p> <p><code>echo $a;   // Muestra 4</code></p> <p>De esta forma, dentro de la funci\u00f3n se puede modificar el contenido de la variable que se pasa, no el de una copia.</p> <p>Referencias en PHP.</p> <p>Por tanto, a partir de PHP5 no puedes copiar un objeto utilizando el operador \"<code>=\"</code>. Si necesitas copiar un objeto, debes utilizar <code>clone</code>. Al utilizar <code>clone</code> sobre un objeto existente, se crea una copia de todos los atributos del mismo en un nuevo objeto.</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code></p> <p><code>$a = clone($p);</code></p> <p>Adem\u00e1s, existe una forma sencilla de personalizar la copia para cada clase particular. Por ejemplo, puede suceder que quieras copiar todos los atributos menos alguno. En nuestro ejemplo, al menos el c\u00f3digo de cada producto debe ser distinto y, por tanto, quiz\u00e1s no tenga sentido copiarlo al crear un nuevo objeto. Si \u00e9ste fuera el caso, puedes crear un m\u00e9todo de nombre <code>__clone</code> en la clase. Este m\u00e9todo se llamar\u00e1 autom\u00e1ticamente despu\u00e9s de copiar todos los atributos en el nuevo objeto.</p> <p><code>class Producto {</code> <code>\u2026</code> <code>public function __clone($atributo) {</code> <code>$this-&gt;codigo = nuevo_codigo();</code> <code>}</code> <code>\u2026</code></p> <p><code>}</code></p> <p>Autoevaluaci\u00f3n</p> <p>\u00bfCu\u00e1l es el nombre de la funci\u00f3n que se utiliza para hacer una copia de un objeto?</p> <p><code>clone</code>.</p> <p><code>__clone</code>.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#132-utilizacion-de-objetos-ii","title":"1.3.2.- Utilizaci\u00f3n de objetos (II).","text":"<p>Soumil Kumar (Dominio p\u00fablico)</p> <p>A veces tienes dos objetos y quieres saber su relaci\u00f3n exacta. Para eso, en PHP puedes utilizar los operadores <code>\"==\"</code> y <code>\"===\"</code>.</p> <p>Si utilizas el operador de comparaci\u00f3n <code>\"==\"</code>, comparas los valores de los atributos de los objetos. Por tanto dos objetos ser\u00e1n iguales si son instancias de la misma clase y, adem\u00e1s, sus atributos tienen los mismos valores.</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code> <code>$a = clone($p);</code> <code>// El resultado de comparar $a == $p da verdadero</code></p> <p><code>//  pues $a y $p son dos copias id\u00e9nticas</code></p> <p>Sin embargo, si utilizas el operador <code>\"===\"</code>, el resultado de la comparaci\u00f3n ser\u00e1 <code>true</code> s\u00f3lo cuando las dos variables sean referencias al mismo objeto.</p> <p><code>$p = new Producto();</code> <code>$p-&gt;nombre = 'Samsung Galaxy A6';</code> <code>$a = clone($p);</code> <code>// El resultado de comparar $a === $p da falso</code> <code>//  pues $a y $p no hacen referencia al mismo objeto</code> <code>$a = &amp; $p;</code> <code>// Ahora el resultado de comparar $a === $p da verdadero</code></p> <p><code>//  pues $a y $p son referencias al mismo objeto.</code></p> <p>A veces puede ser \u00fatil mostrar el contenido de un objeto sin tener que usar <code>var_dump()</code> para ello podemos usar el m\u00e9todo m\u00e1gico <code>__toString()</code>. Este m\u00e9todo siempre debe devolver un <code>String.</code></p> <p><code>class Persona{</code> <code>public $nombre;</code> <code>public $apellidos;</code> <code>public $perfil;</code> <code>public function __toString() :String{</code> <code>return \"{$this-&gt;apellidos}, {$this-&gt;nombre}, Tu p\u00e9rfil es: {$this-&gt;perfil}\";</code> <code>}</code> <code>}</code></p> <p><code>$persona = new Persona();</code> <code>$persona-&gt;nombre=\"Manuel\";</code> <code>$persona-&gt;apellidos=\"Gil Gil\";</code> <code>$persona-&gt;perfil=\"P\u00fablico\";</code></p> <p><code>echo $persona; //muestra: Gil Gil, Manuel, Tu p\u00e9rfil es: P\u00fablico</code></p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#14-mecanismos-de-mantenimiento-del-estado","title":"1.4.- Mecanismos de mantenimiento del estado.","text":"<p>Negative Space (Dominio p\u00fablico)</p> <p>En la unidad anterior aprendiste a usar la sesi\u00f3n del usuario para almacenar el estado de las variables, y poder recuperarlo cuando sea necesario. El proceso es muy sencillo; se utiliza el array superglobal <code>$_SESSION</code>, a\u00f1adiendo nuevos elementos para ir guardando la informaci\u00f3n en la sesi\u00f3n.</p> <p>El procedimiento para almacenar objetos es similar, pero hay una diferencia importante. Todas las variables almacenan su informaci\u00f3n en memoria de una forma u otra seg\u00fan su tipo. Los objetos, sin embargo, no tienen un \u00fanico tipo. Cada objeto tendr\u00e1 unos atributos u otros en funci\u00f3n de su clase. Por tanto, para almacenar los objetos en la sesi\u00f3n del usuario, hace falta convertirlos a un formato est\u00e1ndar. Este proceso se llama serializaci\u00f3n.</p> <p>En PHP, para serializar un objeto se utiliza la funci\u00f3n <code>serialize()</code>. El resultado obtenido es un <code>string</code> que contiene un flujo de <code>bytes</code>, en el que se encuentran definidos todos los valores del objeto.</p> <p><code>$p = new Producto();</code></p> <p><code>$a = serialize($p);</code></p> <p>Esta cadena se puede almacenar en cualquier parte, como puede ser la sesi\u00f3n del usuario, o una base de datos. A partir de ella, es posible reconstruir el objeto original utilizando la funci\u00f3n <code>unserialize()</code>.</p> <p><code>$p = unserialize($a);</code></p> <p>Debes conocer</p> <p>Las funciones <code>serialize</code> y <code>unserialize</code> se utilizan mucho con objetos, pero sirven para convertir en una cadena cualquier tipo de dato, excepto el tipo <code>resource</code>. Cuando se aplican a un objeto, convierten y recuperan toda la informaci\u00f3n del mismo, incluyendo sus atributos privados. La \u00fanica informaci\u00f3n que no se puede mantener utilizando estas funciones es la que contienen los atributos est\u00e1ticos de las clases.</p> <p>Si simplemente queremos almacenar un objeto en la sesi\u00f3n del usuario, deber\u00edamos hacer por tanto:</p> <p><code>session_start();</code></p> <p><code>$_SESSION['producto'] = serialize($p);</code></p> <p>Pero en PHP esto a\u00fan es m\u00e1s f\u00e1cil. Los objetos que se a\u00f1adan a la sesi\u00f3n del usuario son serializados autom\u00e1ticamente. Por tanto, no es necesario usar <code>serialize()</code> ni <code>unserialize()</code>.</p> <p><code>session_start();</code></p> <p><code>$_SESSION['producto'] = $p;</code></p> <p>Para poder deserializar un objeto, debe estar definida su clase. Al igual que antes, si lo recuperamos de la informaci\u00f3n almacenada en la sesi\u00f3n del usuario, no ser\u00e1 necesario utilizar la funci\u00f3n <code>unserialize</code>.</p> <p><code>session_start();</code></p> <p><code>$p = $_SESSION['producto'];</code></p> <p>Debes conocer</p> <p>Como ya viste en el tema anterior, el mantenimiento de los datos en la sesi\u00f3n del usuario no es perfecta; tiene sus limitaciones. Si fuera necesario, es posible almacenar esta informaci\u00f3n en una base de datos. Para ello tendr\u00e1s que usar las funciones <code>serialize</code>() y <code>unserialize()</code>, pues en este caso PHP ya no realiza la serializaci\u00f3n autom\u00e1tica.</p> <p>En PHP adem\u00e1s tienes la opci\u00f3n de personalizar el proceso de serializaci\u00f3n y deserializaci\u00f3n de un objeto, utilizando los m\u00e9todos m\u00e1gicos <code>\"__sleep()\"</code> y \"<code>__wakeup()\"</code>. Si en la clase est\u00e1 definido un m\u00e9todo con nombre <code>\"__sleep()\"</code>, se ejecuta antes de serializar un objeto. Igualmente, si existe un m\u00e9todo \"<code>__wakeup()\"</code>, se ejecuta con cualquier llamada a la funci\u00f3n <code>unserialize()</code>.</p> <p>M\u00e9todos m\u00e1gicos <code>__sleep()</code> y <code>__wakeup()</code>.</p> <p>Para saber m\u00e1s</p> <p>A partir de PHP7 se han implementado filtros para <code>unserialize()</code>: Esta caracter\u00edstica busca el proporcionar una mejor seguridad al deserializar objetos en datos no fiables. Previene de posibles inyecciones de c\u00f3digo al capacitar al desarrollador a crear listas blancas de clases que deben ser deserializadas.</p> <p><code>// convertir todos los objetos a un objeto __PHP_Incomplete_Class</code> <code>$data = unserialize($foo, [\u201callowed_classes\u201d =&gt; false]);</code> <code>// convertir todos los objetos a un objeto __PHP_Incomplete_Class excepto a los de MiClase y MiClase2</code> <code>$data = unserialize($foo, [\u201callowed_classes\u201d =&gt; [\u201cMiClase\u201d, \u201cMiClase2\u201d]]);</code> <code>// comportamiento predeterminado (lo mismo que omitir el segundo argumento) que acepta todas las clases</code></p> <p><code>$data = unserialize($foo, [\u201callowed_classes\u201d =&gt; true]);</code></p> <p>Autoevaluaci\u00f3n</p> <p>Si serializas un objeto utilizando <code>serialize</code>, \u00bfpuedes almacenarlo en una base de datos MySQL?</p> <p>Verdadero.</p> <p>Falso.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#15-herencia","title":"1.5.- Herencia.","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n Propia)</p> <p>La herencia es un mecanismo de la POO que nos permite definir nuevas clases en base a otra ya existente. Las nuevas clases que heredan tambi\u00e9n se conocen con el nombre de subclases. La clase de la que heredan se llama clase base o superclase.</p> <p>Por ejemplo, en nuestra tienda web vamos a tener productos de distintos tipos. En principio hemos creado para manejarlos una clase llamada <code>Producto</code>, con algunos atributos y un m\u00e9todo que genera una salida personalizada en formato HTML del c\u00f3digo.</p> <p><code>class Producto {</code> <code>public $codigo;</code> <code>public $nombre;</code> <code>public $nombre_corto;</code> <code>public $pvp;</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Esta clase es muy \u00fatil si la \u00fanica informaci\u00f3n que tenemos de los distintos productos es la que se muestra arriba. Pero, si quieres personalizar la informaci\u00f3n que vas a tratar de cada tipo de producto (y almacenar, por ejemplo para los televisores, las pulgadas que tienen o su tecnolog\u00eda de fabricaci\u00f3n), puedes crear nuevas clases que hereden de <code>Producto</code>. Por ejemplo, <code>TV</code>, <code>PC</code>, <code>Movil</code>.</p> <p><code>class TV extends Producto {</code> <code>public $pulgadas;</code> <code>public $tecnologia;</code></p> <p><code>}</code></p> <p>Como puedes ver, para definir una clase que herede de otra, simplemente tienes que utilizar la palabra <code>extends</code> indicando la superclase. Los nuevos objetos que se instancien a partir de la subclase son tambi\u00e9n objetos de la clase base; se puede comprobar utilizando el operador <code>instanceof()</code>.</p> <p><code>$t = new TV();</code> <code>if ($t instanceof Producto) {</code> <code>// Este c\u00f3digo se ejecuta pues la condici\u00f3n es cierta.</code> <code>. . .</code></p> <p><code>}</code></p> <p>Antes viste algunas funciones \u00fatiles para programar utilizando objetos y clases. Las de la siguiente tabla est\u00e1n adem\u00e1s relacionadas con la herencia.</p> Funci\u00f3n Ejemplo Significado <code>get_parent_class</code>() <code>echo get_parent_class($t);</code> Devuelve el nombre de la clase padre del objeto o la clase que se indica. <code>is_subclass_of</code>() <code>if(is_subclass_of($t,'Producto')</code> Devuelve <code>true</code> si el objeto o la clase del primer par\u00e1metro, tiene como clase base a la que se indica en el segundo par\u00e1metro, o <code>false</code> en caso contrario."},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#151-herencia-i","title":"1.5.1.- Herencia (I).","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n propia.)</p> <p>La nueva clase hereda todos los atributos y m\u00e9todos p\u00fablicos de la clase base, pero no los privados. Si quieres crear en la clase base un m\u00e9todo no visible al exterior (como los privados) que se herede a las subclases, debes utilizar la palabra <code>protected</code> en lugar de <code>private</code>. Adem\u00e1s, puedes redefinir el comportamiento de los m\u00e9todos existentes en la clase base, simplemente creando en la subclase un nuevo m\u00e9todo con el mismo nombre.</p> <p><code>class TV extends Producto {</code> <code>public $pulgadas;</code> <code>public $tecnologia;</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;pulgadas . \" pulgadas&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Existe una forma de evitar que las clases heredadas puedan redefinir el comportamiento de los m\u00e9todos existentes en la superclase: utilizar la palabra <code>final</code>. Si en nuestro ejemplo hubi\u00e9ramos hecho:</p> <p><code>class Producto {</code> <code>public $codigo;</code> <code>public $nombre;</code> <code>public $nombre_corto;</code> <code>public $pvp;</code> <code>public final function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>En este caso el m\u00e9todo <code>muestra</code> no podr\u00eda redefinirse en la clase <code>TV</code>.</p> <p>Incluso se puede declarar una clase utilizando <code>final</code>. En este caso no se podr\u00edan crear clases heredadas utiliz\u00e1ndola como base.</p> <p><code>final class Producto {</code> <code>. . .</code></p> <p><code>}</code></p> <p>Opuestamente al modificador <code>final</code>, existe tambi\u00e9n <code>abstract</code>. Se utiliza de la misma forma, tanto con m\u00e9todos como con clases completas, pero en lugar de prohibir la herencia, obliga a que se herede. Es decir, una clase con el modificador <code>abstract</code> no puede tener objetos que la instancien, pero s\u00ed podr\u00e1 utilizarse de clase base y sus subclases s\u00ed podr\u00e1n utilizarse para instanciar objetos.</p> <p><code>abstract class Producto {</code> <code>. . .</code></p> <p><code>}</code></p> <p>Y un m\u00e9todo en el que se indique <code>abstract</code>, debe ser redefinido obligatoriamente por las subclases, y no podr\u00e1 contener c\u00f3digo.</p> <p><code>class Producto {</code> <code>. . .</code> <code>abstract public function muestra();</code></p> <p><code>}</code></p> <p>Obviamente, no se puede declarar una clase como <code>abstract</code> y <code>final</code> simult\u00e1neamente. <code>abstract</code> obliga a que se herede para que se pueda utilizar, mientras que <code>final</code> indica que no se podr\u00e1 heredar.</p> <p>Autoevaluaci\u00f3n</p> <p>La funci\u00f3n <code>is_subclass_of</code> recibe como primer par\u00e1metro:</p> <p>Un objeto.</p> <p>Un objeto o una clase.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#152-herencia-ii","title":"1.5.2.- Herencia (II).","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n Propia)</p> <p>Vamos a hacer una peque\u00f1a modificaci\u00f3n en nuestra clase <code>Producto</code>. Para facilitar la creaci\u00f3n de nuevos objetos, crearemos un constructor al que se le pasar\u00e1 un array con los valores de los atributos del nuevo producto.</p> <p><code>class Producto {</code> <code>public $codigo;</code> <code>public $nombre;</code> <code>public $nombre_corto;</code> <code>public $pvp;</code> <code>public function __construct($row) {</code> <code>$this-&gt;codigo = $row['cod'];</code> <code>$this-&gt;nombre = $row['nombre'];</code> <code>$this-&gt;nombre_corto = $row['nombre_corto'];</code> <code>$this-&gt;PVP = $row['pvp'];</code> <code>}</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;codigo . \"&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>\u00bfQu\u00e9 pasa ahora con la clase <code>TV</code>, qu\u00e9 hereda de <code>Producto</code>? Cuando crees un nuevo objeto de esa clase, \u00bfse llamar\u00e1 al constructor de <code>Producto</code>? \u00bfPuedes crear un nuevo constructor espec\u00edfico para <code>TV</code> que redefina el comportamiento de la clase base?</p> <p>Empezando por esta \u00faltima pregunta, obviamente puedes definir un nuevo constructor para las clases heredadas que redefinan el comportamiento del que existe en la clase base, tal y como har\u00edas con cualquier otro m\u00e9todo. Y dependiendo de si programas o no el constructor en la clase heredada, se llamar\u00e1 o no autom\u00e1ticamente al constructor de la clase base.</p> <p>En PHP, si la clase heredada no tiene constructor propio, se llamar\u00e1 autom\u00e1ticamente al constructor de la clase base (si existe). Sin embargo, si la clase heredada define su propio constructor, deber\u00e1s ser t\u00fa el que realice la llamada al constructor de la clase base si lo consideras necesario, utilizando para ello la palabra <code>parent</code> y el operador de resoluci\u00f3n de \u00e1mbito.</p> <p><code>class TV extends Producto {</code> <code>public $pulgadas;</code> <code>public $tecnologia;</code> <code>public function __construct($row) {</code> <code>parent::__construct($row); //llama al constructor de la clase padre</code> <code>$this-&gt;pulgadas = $row['pulgadas'];</code> <code>$this-&gt;tecnologia = $row['tecnologia'];</code> <code>}</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;pulgadas . \" pulgadas&lt;/p&gt;\";</code> <code>}</code></p> <p><code>}</code></p> <p>Ya viste con anterioridad c\u00f3mo se utilizaba la palabra clave <code>self</code> para tener acceso a la clase actual. La palabra <code>parent</code> es similar. Al utilizar <code>parent</code> haces referencia a la clase base de la actual, tal y como aparece tras <code>extends</code>.</p> <p>Autoevaluaci\u00f3n</p> <p>Si una subclase no tiene m\u00e9todo constructor, y su clase base s\u00ed lo tiene, cuando se instancie un nuevo objeto de la subclase:</p> <p>Se llamar\u00e1 autom\u00e1ticamente al constructor de la clase base.</p> <p>No se llamar\u00e1 autom\u00e1ticamente al constructor de la clase base.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#16-interfaces","title":"1.6.- Interfaces.","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n propia.)</p> <p>Un interface es como una clase vac\u00eda que solamente contiene declaraciones de m\u00e9todos. Se definen utilizando la palabra <code>interface</code>.</p> <p>Por ejemplo, antes viste que pod\u00edas crear nuevas clases heredadas de <code>Producto</code>, como <code>TV</code> o <code>Ordenador</code>. Tambi\u00e9n viste que en las subclases pod\u00edas redefinir el comportamiento del m\u00e9todo <code>muestra</code> para que generara una salida en HTML diferente para cada tipo de producto.</p> <p>Si quieres asegurarte de que todos los tipos de productos tengan un m\u00e9todo <code>muestra</code>, puedes crear un interface como el siguiente.</p> <p><code>interface iMuestra {</code> <code>public function muestra();</code></p> <p><code>}</code></p> <p>Y cuando crees las subclases deber\u00e1s indicar con la palabra <code>implements</code> que tienen que implementar los m\u00e9todos declarados en este interface.</p> <p><code>class TV extends Producto implements iMuestra {</code> <code>. . .</code> <code>public function muestra() {</code> <code>echo \"&lt;p&gt;\" . $this-&gt;pulgadas . \" pulgadas&lt;/p&gt;\";</code> <code>}</code> <code>. . .</code></p> <p><code>}</code></p> <p>Todos los m\u00e9todos que se declaren en un interface deben ser p\u00fablicos. Adem\u00e1s de m\u00e9todos, los interfaces podr\u00e1n contener constantes pero no atributos.</p> <p>Un interface es como un contrato que la clase debe cumplir. Al implementar todos los m\u00e9todos declarados en el interface se asegura la interoperabilidad entre clases. Si sabes que una clase implementa un interface determinado, sabes qu\u00e9 nombre tienen sus m\u00e9todos, qu\u00e9 par\u00e1metros les debes pasar y, probablemente, podr\u00e1s averiguar f\u00e1cilmente con qu\u00e9 objetivo han sido escritos.</p> <p>Por ejemplo, en la librer\u00eda de PHP est\u00e1 definido el interface <code>\"Countable\"</code>.</p> <p><code>Countable {</code> <code>abstract public int count ( void )</code></p> <p><code>}</code></p> <p>Si creas una clase para la cesta de la compra en la tienda web, podr\u00edas implementar este interface para contar los productos que figuran en la misma.</p> <p>Antes aprendiste que en PHP una clase s\u00f3lo puede heredar de otra, que no existe la herencia m\u00faltiple. Sin embargo, s\u00ed es posible crear clases que implementen varios interfaces, simplemente separando la lista de interfaces por comas despu\u00e9s de la palabra <code>\"implements\"</code>.</p> <p><code>class TV extends Producto implements iMuestra, Countable {</code> <code>. . .</code></p> <p><code>}</code></p> <p>La \u00fanica restricci\u00f3n es que los nombres de los m\u00e9todos que se deban implementar en los distintos interfaces no coincidan. Es decir, en nuestro ejemplo, el interface <code>iMuestra</code> no podr\u00eda contener un m\u00e9todo <code>count</code>, pues \u00e9ste ya est\u00e1 declarado en <code>Countable</code>.</p> <p>Debes conocer</p> <p>En PHP tambi\u00e9n se pueden crear nuevos interfaces heredando de otros ya existentes. Se hace de la misma forma que con las clases, utilizando la palabra <code>\"extends\"</code>.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#161-interfaces-i","title":"1.6.1.- Interfaces (I).","text":"<p>Captura de pantalla BlueJ (Elaboraci\u00f3n propia.)</p> <p>Una de las dudas m\u00e1s comunes en POO, es qu\u00e9 soluci\u00f3n adoptar en algunas situaciones: interfaces o clases abstractas. Ambas permiten definir reglas para las clases que los implementen o hereden respectivamente. Y ninguna permite instanciar objetos. Las diferencias principales entre ambas opciones son:</p> <ul> <li>En las clases abstractas, los m\u00e9todos pueden contener c\u00f3digo. Si van a existir varias subclases con un comportamiento com\u00fan, se podr\u00eda programar en los m\u00e9todos de la clase abstracta. Si se opta por un interface, habr\u00eda que repetir el c\u00f3digo en todas las clases que lo implemente.</li> <li>Las clases abstractas pueden contener atributos, y los interfaces no.</li> <li>No se puede crear una clase que herede de dos clases abstractas, pero s\u00ed se puede crear una clase que implemente varios interfaces.</li> </ul> <p>Por ejemplo, en la tienda online va a haber dos tipos de usuarios: clientes y empleados. Si necesitas crear en tu aplicaci\u00f3n objetos de tipo <code>Usuario</code> (por ejemplo, para manejar de forma conjunta a los clientes y a los empleados), tendr\u00edas que crear una clase no abstracta con ese nombre, de la que heredar\u00edan <code>Cliente</code> y <code>Empleado</code>.</p> <p><code>class Usuario {</code> <code>. . .</code> <code>}</code> <code>class Cliente extends Usuario {</code> <code>. . .</code> <code>}</code> <code>class Empleado extends Usuario {</code> <code>. . .</code></p> <p><code>}</code></p> <p>Pero si no fuera as\u00ed, tendr\u00edas que decidir si crear\u00edas o no <code>Usuario</code>, y si lo har\u00edas como una clase abstracta o como un interface.</p> <p>Si por ejemplo, quisieras definir en un \u00fanico sitio los atributos comunes a <code>Cliente</code> y a <code>Empleado</code>, deber\u00edas crear una clase abstracta <code>Usuario</code> de la que hereden.</p> <p><code>abstract class Usuario {</code> <code>public $dni;</code> <code>protected $nombre;</code> <code>. . .</code></p> <p><code>}</code></p> <p>Pero esto no podr\u00edas hacerlo si ya tienes planificada alguna relaci\u00f3n de herencia para una de estas dos clases.</p> <p>Para finalizar con los interfaces, a la lista de funciones de PHP relacionadas con la POO puedes a\u00f1adir las siguientes.</p> Funci\u00f3n Ejemplo Significado <code>get_declared_interfaces</code>() print_r(get_declared_interfaces()); Devuelve un array con los nombres de los interfaces declarados. <code>interface_exists</code>() <code>if(interface_exists('iMuestra')</code> Devuelve <code>true</code> si existe el interface que se indica, o <code>false</code> en caso contrario. <p>Autoevaluaci\u00f3n</p> <p>Si en tu c\u00f3digo utilizas un interface, y quieres crear uno nuevo bas\u00e1ndote en \u00e9l:</p> <p>Puedes utilizar la herencia para crear el nuevo constructor extendiendo al primero.</p> <p>No puedes hacerlo, pues no se puede utilizar herencia con los interfaces; solo con las clases.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#17-ejemplo-de-poo-en-php","title":"1.7.- Ejemplo de POO en PHP.","text":"<p>Soumil Kumar (Dominio p\u00fablico)</p> <p>Es hora de llevar a la pr\u00e1ctica lo que has aprendido. Vamos a aplicar los principios de la POO para realizar un \"CRUD\" a la tabla \"productos\" de la base de datos \"proyecto\" usada en unidades anteriores. Recuerda que las credenciales para acceder a la base de datos eran \"gestor::secreto\" y en la tabla usuarios hab\u00edamos creado los usuarios \"admin::secreto\" y \"gestor::pass\". En los enlaces siguientes puedes ver un v\u00eddeo en \"youtube\" de la aplicaci\u00f3n ya terminada y un resumen textual del v\u00eddeo.</p> <ul> <li>Enlace al V\u00eddeo.</li> <li>Resumen textual.</li> </ul> <p>B\u00e1sicamente si accedemos como invitado podremos ver el listado de productos y el detalle de cada uno de ellos, y si nos validamos podremos tambi\u00e9n crear, borrar y actualizar productos.</p> <p>Vamos a utilizar una estructura para esta pr\u00e1ctica muy com\u00fan, en el directorio donde guardemos los archivos de la pr\u00e1ctica crearemos una carpeta <code>\"class\"</code> donde guardaremos todas las clases y un carpeta <code>\"public\"</code> donde guardaremos todas las p\u00e1ginas \"<code>php, html...\"</code>, que vayamos a necesitar visualizar en el navegador.</p> <p>Captura de pantalla terminal Ubuntu (Elaboraci\u00f3n propia)</p> <p>Crearemos una clase <code>\"Conexion\"</code> y una clase para todas las tablas que vayamos a usar. El convenio es poner el nombre del archivo exactamente igual al nombre de la clase que implementa, es decir, el archivo <code>\"Usuario.php\"</code> implementar\u00e1 la clase <code>\"Usuario\".</code></p> <p>Para no tener que estar haciendo el <code>\"require\"</code> de cada uno de los archivos de clase que vayamos a necesitar,  vamos a utilizar la \"autocarga de las clases\", que es b\u00e1sicamente un mecanismo por el que cada vez que instanciamos un objeto de una clase hace el <code>\"require\"</code> del archivo donde se encuentra implementada. Por eso es muy importante que respete las convenciones de nombres. El c\u00f3digo para ello ser\u00eda el siguiente:</p> <p><code>spl_autoload_register(function ($class) {</code> <code>require \"../class/\" . $class . \".php\";</code></p> <p><code>});</code></p> <p>Utiliza una funci\u00f3n an\u00f3nima en la llamada, no te preocupes por eso ahora, el funcionamiento es, que cuando en cualquier archivo del directorio <code>\"public\"</code> hacemos una declaraci\u00f3n del tipo <code>\"$objeto=new Objeto()\"</code> autom\u00e1ticamente busca un archivo en el directorio <code>\"class\"</code> (un nivel por abajo, de ah\u00ed el <code>\"..\"</code>) llamado <code>\"Objeto.php\"</code> para hacer el <code>\"require\"</code>, si no existe me dar\u00e1 un error.</p> <p>Veamos el contenido de los archivos:</p> <ul> <li><code>Conexion.php</code>:Descargar <code>conexion.php</code>. (pdf - 28,44 KB) Implementa la clase \"Conexion\" que contendr\u00e1 b\u00e1sicamente los par\u00e1metros para conectarnos, as\u00ed como un m\u00e9todo <code>\"getConexion()\"</code>, que nos devolver\u00e1 la conexi\u00f3n. Todas las dem\u00e1s clases heredar\u00e1n de esta, todo sus atributos ser\u00e1n <code>\"private\"</code> menos el de la conexi\u00f3n que lo hacemos <code>\"protected\"</code>.</li> <li><code>Usuario.php</code>:Descargar <code>usuario.php</code>. (pdf - 28,02 KB) Implementa la clase \"Usuario\" que contendr\u00e1 los atributos de la tabla usuario. Tiene el m\u00e9todo \"<code>isValido($usu, $pass)\"</code> que devolver\u00e1 <code>true</code> si encuentra a un usuario con esa contrase\u00f1a y <code>false</code> en otro caso.</li> <li><code>Familia.php</code>:Descargar <code>familia.php</code>. (pdf - 25,50 KB) Implementa la clase \"Famila\" que contendr\u00e1 los atributos de la tabla usuario. Tiene el m\u00e9todo <code>\"recuperarFamilias()\"</code> que usaremos para rellenar los \"<code>options\"</code> para la lista desplegable del campo familia en crear y actualizar productos, este m\u00e9todo devuelve el <code>\"$stmt\"</code>.</li> </ul> <p><code>Producto.php</code>:Descargar <code>producto.php</code>. (pdf - 38,89 KB) Implementa la clase \"Producto\" que contendr\u00e1 los atributos de la tabla producto. Tiene a parte del constructor los <code>\"setter\"</code> para cada uno de los atributos, un m\u00e9todo para cada una de las operaciones de CRUD, el m\u00e9todo \"<code>existeNombreCorto($n)\"</code> que devolver\u00e1 <code>true</code> si el nombre corto pasado por par\u00e1metro existe y <code>false</code> en otro caso y el m\u00e9todo \"<code>recuperarProductos()\"</code> que devuelve el \"<code>$stmt\"</code> de la consulta para recuperar los productos ordenados alfab\u00e9ticamente, este m\u00e9todo me servir\u00e1 para mostrar los productos en \"<code>listado.php\".</code> <code>function existeNombreCorto($nc){</code> <code>if ($this-&gt;id == null) {</code> <code>$consulta = \"select * from productos where nombre_corto=:nc\";</code> <code>} else {</code> <code>$consulta = \"select * from productos where nombre_corto = :nc AND id != :i\";</code> <code>}</code> <code>$nc = func_get_arg(0);</code> <code>$stmt = $this-&gt;conexion-&gt;prepare($consulta); //podemos acceder a conexion al ser \"protected\"</code> <code>try {</code> <code>if ($this-&gt;id == null)</code> <code>$stmt-&gt;execute([':nc' =&gt; $nc]);</code> <code>else</code> <code>$stmt-&gt;execute([':nc' =&gt; $nc, ':i' =&gt; $this-&gt;id]);</code> <code>} catch (PDOException $ex) {</code> <code>die(\"Error al comprobar el nombre corto: \" . $ex-&gt;getMessage());</code> <code>}</code> <code>if ($stmt-&gt;rowCount() == 0) return false; //No existe</code> <code>return true; //existe</code></p> <ul> <li><code>}</code>   F\u00edjate que en este m\u00e9todo tenemos que controlar si estemos en crear (compruebo que no existe ese nombre_corto en toda la base de datos) o actualizar (no comprobaremos el nombre_corto del c\u00f3digo del producto a actualizar ya que ese nombre_corto ya existe).</li> </ul> <p>Para todas las clases que heredan de la clase Conexi\u00f3n el constructor ser\u00e1:</p> <p><code>public function __construct(){</code> <code>parent::__construct();</code></p> <p><code>}</code></p> <p>Recomendaci\u00f3n</p> <p>Podemos instalar en <code>Visual Studio Code</code>, multitud de extensiones que nos ayudar\u00e1n en nuestro desarrollo, una de ellas es \"<code>PHP Getters &amp; Setters</code>\" que nos crea autom\u00e1ticamente los \"<code>getters</code>\" y los \"<code>setters</code>\" del atributo que deseemos. Una vez instalada s\u00f3lo tenemos que hacer click derecho sobre el atributo que queramos y nos aparecer\u00e1 en el men\u00fa contextual la opci\u00f3n de crear el \"<code>get</code>\", el \"<code>set</code>\" o ambos.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#171-ejemplo-de-poo-en-php-i","title":"1.7.1.- Ejemplo de POO en PHP (I).","text":"<p>Captura de pantalla de Firefox (Elaboraci\u00f3n propia)</p> <p>El resto de ficheros que componen el CRUD tendremos que reescribirlos para que utilicen las clases que acabas de definir. En general, el resultado obtenido es mucho m\u00e1s claro y conciso. Veamos algunos ejemplos:</p> <p>El <code>action</code> de <code>\"login.php\"</code> para autentificar quedar\u00eda: <code>$nombre = trim($_POST['usuario']);</code> <code>$pass = trim($_POST['pass']);</code> <code>if (strlen($nombre) == 0 || strlen($pass) == 0) {</code> <code>error(\"Error, El nombre o la contrase\u00f1a no pueden contener solo espacios en blancos.\");</code> <code>}</code> <code>$usuario = new Usuario();</code> <code>if (!$usuario-&gt;isValido($nombre, $pass)) {</code> <code>$usuario = null;</code> <code>error(\"Credenciales Inv\u00e1lidas\");</code> <code>}</code> <code>$usuario = null;</code> <code>$_SESSION['nombre'] = $nombre;</code></p> <ol> <li><code>header('Location:listado.php');</code></li> </ol> <p>En <code>\"listado.php\"</code>, el c\u00f3digo recuperar todos los productos quedar\u00eda: <code>//Hacemos el autoload de las clases</code> <code>spl_autoload_register(function ($class) {</code> <code>require \"../class/\" . $class . \".php\";</code> <code>});</code> <code>// recuperamos los productos</code> <code>$productos = new Producto();</code> <code>$stmt = $productos-&gt;recuperarProductos();</code> <code>// Cerramos todo</code></p> <ol> <li><code>$producto = null;</code></li> </ol> <p>En <code>\"detalle.php\"</code> el c\u00f3digo para recuperar los detalles del producto seleccionado quedar\u00eda: <code>$producto = new Producto();</code> <code>$producto-&gt;setId($id);</code> <code>$datos = $producto-&gt;read();</code></p> <ol> <li><code>$producto = null;</code></li> </ol> <p>En \"<code>borrar.php\"</code> el c\u00f3digo para borrar el producto de c\u00f3digo <code>$cod</code>: <code>$producto = new Producto();</code> <code>$producto-&gt;setId($cod);</code> <code>$producto-&gt;delete();</code> <code>$producto = null;</code> <code>$_SESSION['mensaje'] = \"Art\u00edculo Borrado Correctamente\";</code></p> <ol> <li><code>header('Location:listado.php');</code></li> </ol> <p>En <code>\"crear.php\"</code> por una parte para comprobamos que no existe el nombre corto: <code>if ($producto-&gt;existeNombreCorto($nc)) {</code> <code>error(\"Error ya existe un nombre corto con ese valor.\");</code> <code>}</code> Y el c\u00f3digo para guardar el producto nuevo <code>//recogemos los datos del formulario, trimamos las cadenas</code> <code>$nombre = trim($_POST['nombre']);</code> <code>$nomCorto = trim($_POST['nombrec']);</code> <code>$pvp = $_POST['pvp'];</code> <code>$des = trim($_POST['descripcion']);</code> <code>$familia = $_POST['familia'];</code> <code>comprobar($nombre, $nomCorto);</code> <code>// si hemos llegado aqui todo ha ido bien vamos a crear el registro</code> <code>$producto-&gt;setNombre($nombre);</code> <code>$producto-&gt;setNombre_corto($nomCorto);</code> <code>$producto-&gt;setPvp($pvp);</code> <code>$producto-&gt;setFamilia($familia);</code> <code>$producto-&gt;setDescripcion($des);</code> <code>$producto-&gt;create();</code> <code>$_SESSION['mensaje'] = 'Producto creado Correctamente';</code> <code>$producto = null;</code></p> <ol> <li><code>header('Location: listado.php');</code></li> </ol> <p>Unas \u00faltimas consideraciones, obviamente todo el c\u00f3digo es mejorable, algunas partes de este c\u00f3digo tienen car\u00e1cter meramente did\u00e1ctico y obviamente se pueden conseguir mejores implementaciones del mismo. Se podr\u00eda haber hecho uso de <code>includes</code> y funciones para evitar repetir algunas partes de c\u00f3digo. Para completar los productos en el <code>\"create\"</code> y el \"<code>update\"</code> se podr\u00eda haber hecho con el constructor inicializando los atributos con los nuevos datos y no usando los <code>setters</code>. Piensa que mejoras podr\u00edas hacer al c\u00f3digo propuesto y comp\u00e1rtelas con tus compa\u00f1eros, es una forma muy \u00fatil de aprender.</p> <p>Prueba a instalar y ejecutar la aplicaci\u00f3n resultante. Revisa el c\u00f3digo y comprueba que entiendes su funcionamiento.</p> <p>Aplicaci\u00f3n de Ejemplo (zip - 15,83 KB)</p> <p>Autoevaluaci\u00f3n</p> <p>La clase DB tiene todos sus m\u00e9todos est\u00e1ticos. No tiene sentido por tanto crear ning\u00fan objeto de esa clase, y podr\u00eda haberse implementado igualmente como un interface.</p> <p>Verdadero.</p> <p>Falso.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#2-programacion-en-capas","title":"2.- Programaci\u00f3n en capas.","text":"<p>En el ejemplo anterior, hemos programado una aplicaci\u00f3n web sencilla utilizando programaci\u00f3n orientada a objetos. Sin embargo, si observaste el resultado obtenido, habr\u00e1s visto como en muchas ocasiones se mezcla el c\u00f3digo propio de la l\u00f3gica de la aplicaci\u00f3n, con el c\u00f3digo necesario para crear el interface web que se presenta a los usuarios.</p> <p>De igual manera el encabezado de las p\u00e1ginas era repetido una y otra vez (importar <code>Bootstrap</code>, <code>FontAwesome</code>...). Ademas existe un problema a\u00f1adido: si el proyecto es extenso y en distintos archivos tenemos clases de igual nombre podremos tener colisi\u00f3n entre ellas.</p> <p>Existen varios m\u00e9todos que permiten separar la l\u00f3gica de presentaci\u00f3n (en nuestro caso, la que genera las etiquetas HTML) de la l\u00f3gica de negocio, donde se implementa la l\u00f3gica propia de cada aplicaci\u00f3n. El m\u00e1s extendido es el patr\u00f3n de dise\u00f1o Modelo \u2013 Vista \u2013 Controlador (MVC). Este patr\u00f3n pretende dividir el c\u00f3digo en tres partes, dedicando cada una a una funci\u00f3n definida y diferenciada de las otras.</p> <ul> <li>Modelo. Es el encargado de manejar los datos propios de la aplicaci\u00f3n. Debe proveer mecanismos para obtener y modificar la informaci\u00f3n del mismo. Si la aplicaci\u00f3n utiliza alg\u00fan tipo de almacenamiento para su informaci\u00f3n (como un SGBD), tendr\u00e1 que encargarse de almacenarla y recuperarla.</li> <li>Vista. Es la parte del modelo que se encarga de la interacci\u00f3n con el usuario. En esta parte se encuentra el c\u00f3digo necesario para generar el interface de usuario (en nuestro caso en HTML), seg\u00fan la informaci\u00f3n obtenida del modelo.</li> <li>Controlador. En este m\u00f3dulo se decide qu\u00e9 se ha de hacer, en funci\u00f3n de las acciones del usuario con su interface. Con esta informaci\u00f3n, interact\u00faa con el modelo para indicarle las acciones a realizar y, seg\u00fan el resultado obtenido, env\u00eda a la vista las instrucciones necesarias para generar el nuevo interface.</li> </ul> <p>La gran ventaja de este patr\u00f3n de programaci\u00f3n es que genera c\u00f3digo muy estructurado, f\u00e1cil de comprender y de mantener. En la web puedes encontrar muchos ejemplos de implementaci\u00f3n del modelo MVC en PHP.</p> <p>Aunque puedes programar utilizando MVC por tu cuenta, es m\u00e1s habitual utilizar el patr\u00f3n MVC en conjunci\u00f3n con un framework o marco de desarrollo. Existen numerosos frameworks disponibles en PHP, muchos de los cuales incluyen soporte para MVC como Laravel y Symfony.  En esta unidad no profundizaremos en la utilizaci\u00f3n de un framework espec\u00edfico, pero utilizaremos Blade que es el sistema de plantillas de Laravel, el cual nos permite generar HTML din\u00e1mico con una sintaxis mucho m\u00e1s limpia que si us\u00e1ramos PHP plano.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#21-namespaces-en-php","title":"2.1.- Namespaces en PHP.","text":"<p>Open Clipart (CC0)</p> <p>Los <code>namespaces</code> o espacios de nombres permiten crear proyectos complejas con mayor flexibilidad evitando problemas de colisi\u00f3n entre clases, m\u00e9todos, funciones y mejorando la legibilidad del c\u00f3digo. aparecen a partir de PHP5.3</p> <p>Los <code>namespace</code> son un contenedor que nos permitir\u00e1 agrupar nuestro c\u00f3digo para darle un uso posterior de esta manera evitamos conflictos de nombre. Por ejemplo, tenemos 2 funciones con el mismo nombre esto generar\u00eda un conflicto de nombre pero mediante el uso de <code>namespace</code> se da soluci\u00f3n a este problema. En definitiva los <code>namespace</code> nos ayudaran para organizar y reestructurar mejor nuestro c\u00f3digo y proporcionan una manera para agrupar clases, interfaces, funciones y constantes relacionadas.</p> <p>Podemos comprarlo con el sistema de archivos, los archivos est\u00e1n dentro de carpetas y dentro de \u00e9stas hay a su vez otras carpetas con otros archivos. Una carpeta se comporta como si fuera un <code>namespace</code>, por ejemplo, no puede haber dos archivos con el mismo nombre en la misma carpeta, pero s\u00ed puede haber dos archivos con el mismo en distintas.</p> <p>Veamos como funcionan. Hay que declararlo en la primeara l\u00ednea de c\u00f3digo</p> <p><code>&lt;?php</code> <code>namespace Proyecto;</code></p> <p><code>//la declaraci\u00f3n del namespace debe ser la primera l\u00ednea si no obtendremos un error</code></p> <p>En un espacio de nombres se engloban:</p> <ul> <li>Constantes.</li> <li>Funciones.</li> <li>Clases, interfaces, traits, clases abstractas.</li> </ul> <p>Vemos un ejemplo m\u00e1s completo. Creemos el archivo \"<code>ejemploNamespace.php</code>\"</p> <p><code>&lt;?php</code> <code>namespace Proyecto;</code> <code>const E = 2.7182;</code> <code>function saludo(){</code> <code>echo \"Buenos dias\";</code> <code>}</code> <code>class Prueba{</code> <code>private $nombre;</code> <code>public function probando(){</code> <code>echo \"Esto es el m\u00e9todo probando de la clase Prueba\";</code> <code>}</code></p> <p><code>}</code></p> <p>Para pode usar este archivo en otra parte podemos hacerlo de varias formas:</p> <p><code>&lt;?php</code> <code>include \"ejemploNamespace.php\";</code> <code>echo Proyecto\\E; // accedemos a la constante</code> <code>Proyecto\\saludo(); // accedemos a la funci\u00f3n</code> <code>$prueba=new Proyecto\\Prueba();</code> <code>$prueba-&gt;probando();</code></p> <p>O bien :</p> <p><code>&lt;?php</code> <code>include \"ejemploNamespace.php\";</code> <code>use const Proyecto\\E;</code> <code>use function Proyecto\\saludo;</code> <code>use Proyecto\\Prueba;</code> <code>// ahora ya podemos usarlos</code> <code>echo E;</code> <code>saludo();</code> <code>$prueba = new Prueba();</code></p> <p><code>$prueba-&gt;probando();</code></p> <p>Es una buena pr\u00e1ctica de programaci\u00f3n colocar los archivos del espacio de nombres en carpetas que tienen los mismos nombres que el <code>namespace</code> declarado.</p> <p>La posibilidad de declarar el uso de una funci\u00f3n o constante de un <code>namespace</code> est\u00e1 disponible solo a partir de PHP 5.6.</p> <p>Autoevaluaci\u00f3n</p> <p>En un <code>namespace</code> solo guardaremos las clases para evitar colisiones entre ellas.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#sugerencia","title":"Sugerencia","text":"<p>Verdadero  Falso</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#22-gestionar-dependencias","title":"2.2.- Gestionar Dependencias.","text":"<p>WizardCat (MIT)</p> <p>A la hora de empezar el desarrollo de un proyecto en PHP, es necesario conocer todas las librer\u00edas que necesitaremos. La instalaci\u00f3n de estas librer\u00edas puede ser una tarea trabajosa si lo hacemos a mano, pero existen gestores de dependencias que se encargan de realizarla de forma autom\u00e1tica, gestionando esas librer\u00edas de forma sencilla y eficaz.</p> <p>Composer es un gestor de dependencias en proyectos, para programaci\u00f3n en PHP. Eso quiere decir que nos permite gestionar (declarar, descargar y mantener actualizados) los paquetes de software en los que se basa nuestro proyecto PHP. Entre sus principales virtudes destacan:</p> <ul> <li>Es simple de utilizar</li> <li>Cuenta con un repositorio propio donde podemos encontrar casi de todo (Packagist)</li> <li>Disminuye significativamente problemas de cambio de entorno de ejecuci\u00f3n (Mediante su funcionalidad de congelar dependencias)</li> <li>Actualiza las librer\u00edas a nuevas versiones f\u00e1cilmente si queremos mediante \"<code>composer update</code>\".</li> </ul> <p>Vemos a empezar a trabajar con <code>Composer</code>, para ello veremos la instalaci\u00f3n y los primeros pasos:</p> <p>Instalaci\u00f3n Nos descargamos el archivo desde la p\u00e1gina oficial (acceder a Composer), desde esa p\u00e1gina nos recomiendan ejecutar las siguientes instrucciones: <code>php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"</code> <code>php -r \"if (hash_file('sha384', 'composer-setup.php') === 'e0012edf3e80b6978849f5eff0d4b4e4c79ff1609dd1e613307e16318854d24ae64f26d17af3ef0bf7cfb710ca74755a') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"</code> <code>php composer-setup.php</code></p> <ul> <li><code>php -r \"unlink('composer-setup.php');\"</code>   Debes bajarte los comandos actualizados en el enlace siguiente: Descargar Composer.   Una vez hecho esto y si no ha habido problemas tendremos el archivo \"<code>composer.phar</code>\" en el directorio donde estemos, para hacer una instalaci\u00f3n para todos los usuarios del sistema, es decir global (se recomienda hacerlo as\u00ed), desde la terminal escribiremos lo siguiente: <code>sudo mv composer.phar /usr/local/bin/composer</code>   Para comprobar que todo funciona teclea desde la terminal el comando \"<code>composer\"</code> te debe aparecer algo como lo siguiente: Captura de pantalla Ubuntu (Elaboraci\u00f3n propia)</li> <li>Primeros pasos   Veamos su uso, en la ra\u00edz del directorio donde vaya a estar nuestro proyecto y desde la terminal tecleamos \"<code>composer init</code>\" a continuaci\u00f3n se nos hacen unas preguntas y vamos contestando:<ul> <li><code>Package name (&lt;vendor&gt;/&lt;name&gt;)</code> : aqu\u00ed nos pregunta organizaci\u00f3n y nombre podemos poner \"<code>usuario/usuario\"</code> por ejemplo</li> <li><code>Description []</code> : Ponemos una descripci\u00f3n del proyecto</li> <li><code>Author</code> : ponemos autor y correo en el formato siguiente: autor \\&lt;correo&gt;, por ejemplo: \"<code>usuario &lt;usuario@correo.es&gt;\"</code></li> <li><code>Minimum Stability []</code> : Lo podemos dejar en blanco.</li> <li><code>Package Type []</code> : Aqu\u00ed elegiremos <code>project</code>.</li> <li><code>License []</code> : Ponemos la licencia por ejemplo GPL</li> <li>A las siguientes preguntas sobre definir nuestras dependencias, ahora decimos que no.</li> </ul> </li> </ul> <p>Al final nos muestra un archivo JSON , se nos pregunta que si queremos generarlo, contestamos que si y nos genera el archivo \"<code>composer.json</code>\". Una vez generado el archivo tecleando \"<code>composer install</code>\" nos instalar\u00e1 las dependencias.</p> <p>Una de las cosas que hace <code>composer</code> es gestionarnos el tema tema de la autocarga de clases/librer\u00edas (acu\u00e9rdate que en apartados anteriores ya hab\u00edamos visto una forma de hacerlo). Para ello debemos crearnos, en el ra\u00edz del proyecto que vayamos a usar, un directorio de nombre por ejemplo \"src\" y modificar el archivo \"<code>composer.json</code>\". Para el \"autoload\" de clases y librer\u00edas se hace uso de los <code>namespaces.</code></p> <p><code>\"name\": \"usuario/usuario\",</code> <code>\"description\": \"Ejemplo Blade\",</code> <code>\"type\": \"project\",</code> <code>\"config\": {</code> <code>\"optimize-autoloader\": true</code> <code>},</code> <code>\"autoload\": {</code> <code>\"psr-4\": {</code> <code>\"Clases\\\\\": \"src\"</code> <code>}</code> <code>},</code> <code>\"license\": \"GNU/GPL\",</code> <code>\"authors\": [</code> <code>{</code> <code>\"name\": \"usuario\",</code> <code>\"email\": \"usuario@correo.es\"</code> <code>}</code> <code>]</code></p> <p><code>}</code></p> <p>F\u00edjate de la l\u00ednea 7 a la 10 lo que estamos indicando es que vamos a tener un <code>namespace</code> de nombre Clases y que su directorio real va a ser \"<code>src</code>\". En este directorio meteremos todas las clases y comenzaremos el archivo como ya vimos \"<code>namespace Clases</code>\". Las tres lineas anteriores es para que se optimize la autocarga de las clases, no es necesario pero si recomendable. El nombre que se le suele dar al directorio de clases de un proyecto es \"<code>src</code>\" de \"source\".</p> <p>Cada vez que modifiquemos el fichero \"<code>composer.json</code>\" hay que hacer un \"<code>composer install</code>\" para instalar las nuevas dependencias que hayamos puesto.</p> <p>Si deseamos a\u00f1adir dependencias a posteriori podemos escribir el comando: <code>\"composer require vendor/libreria\"</code>, por ejemplo <code>\"composer require fzaninotto/faker\"</code>, para instalar la librer\u00eda que nos permite generar datos aleatorios de prueba.</p> <p>Para saber m\u00e1s</p> <p>En Packagist hay paquetes para casi todo lo que se ocurra en PHP, tenemos Carbon para gestionar fechas, PHPMailer para gestionar mails, extensiones para crear c\u00f3digos de barra, motores de plantillas como Blade usado en Laravel y que veremos a continuaci\u00f3n y mucho mucho m\u00e1s. Antes de intentar programar una aplicaci\u00f3n/librer\u00eda mira si ya existe en Packagist, con Composer ser\u00e1 muy sencillo instalarla.</p> <p>Si te fijas para el <code>autoload</code> en el archivo \"<code>composer.json\"</code> utilizamos \"<code>psr4\"</code>. Esto es un est\u00e1ndar de programaci\u00f3n en PHP propuestos por el php-fig (Grupo de interoperatibilidad para Frameworks PHP). En el enlace siguiente podr\u00e1s obtener m\u00e1s informaci\u00f3n de estos est\u00e1ndares: Informaci\u00f3n sobre est\u00e1ndares \"psr\".</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#23-separacion-de-la-logica-de-negocio","title":"2.3.- Separaci\u00f3n de la l\u00f3gica de negocio.","text":"<p>Captura de pantalla de Visual Studio Code (Elaboraci\u00f3n propia.)</p> <p>Otros mecanismos disponibles en PHP, menos complejos que la utilizaci\u00f3n del patr\u00f3n MVC, y que tambi\u00e9n permiten la separaci\u00f3n de la l\u00f3gica de presentaci\u00f3n y la l\u00f3gica de negocio, son los llamados motores de plantillas (template engines).</p> <p>Un motor de plantillas web es una aplicaci\u00f3n que genera una p\u00e1gina web a partir de un fichero con la informaci\u00f3n de presentaci\u00f3n (denominado plantilla o template, que viene a ser similar a la vista en el patr\u00f3n MVC) y otro con la l\u00f3gica interna de la aplicaci\u00f3n (similar al modelo de MVC). De esta forma, es sencillo dividir el trabajo de programaci\u00f3n de una aplicaci\u00f3n web en dos perfiles: un programador, que debe conocer el lenguaje de programaci\u00f3n en el que se implementar\u00e1 la l\u00f3gica de la aplicaci\u00f3n (en nuestro caso PHP), y un dise\u00f1ador, que se encargar\u00e1 de elaborar las plantillas, (en el caso de la web b\u00e1sicamente en HTML, aunque como veremos la l\u00f3gica de presentaci\u00f3n que se incorpore utilizar\u00e1 un lenguaje propio).</p> <p>En PHP existen varios motores de plantillas con diferentes caracter\u00edsticas. Nosotros trabajaremos con Blade que es el motor de plantillas que viene con Laravel.</p> <p>Blade es un sistema de plantillas que nos permite generar HTML din\u00e1mico con una sintaxis mucho m\u00e1s limpia que si us\u00e1ramos PHP plano. Veamos como instalarlo, configurarlo y unos primeros pasos</p> <p>Blade necesita una carpeta \"<code>cache</code>\" (donde se guardara una cache de las vistas  para su carga) y una carpeta \"<code>views</code>\" que ser\u00e1 la carpeta donde guardaremos los archivos de plantilla que creeemos. Todas las vistas Blade tienen que tener la extensi\u00f3n \"<code>.blade.php</code>\". Para configurar un proyecto donde vayamos a utilizar Blade, haremos lo siguiente:</p> <p>En la carpeta del proyecto creamos las carpetas \"<code>public</code>\" (ser\u00e1 la parte accesible desde el servidor web), \"<code>src</code>\" (guardaremos las clases que vayamos a crear si es el caso), \"<code>caches</code>\" y \"<code>views</code>\". En la carpeta \"<code>cache</code>\" el servidor web (Apache) necesita permiso de escritura, si estamos en Windows no hay problema, si estamos en Linux y sabes como hacerlo lo m\u00e1s seguro es que pongas como grupo de estaa carpetas a Apache y des los permisos apropiados. Para no complicarnos desde la terminal y en la carpeta de nuestro proyecto una vez creadas las carpetas tecleamos: \"<code>chmod 777 cache</code>\" .</p> <p>Una vez creada la estructura de nuestro proyecto iniciamos <code>composer</code> acu\u00e9rdate que esto lo hac\u00edamos con \"<code>composer init</code>\" contestamos a las preguntas iniciales como ya vimos y  las siguientes as\u00ed:</p> <ul> <li>\"<code>Would you like to define your dependencies (require) interactively [yes]?</code>\" en vez escribir no, le damos a <code>intro</code> (\"yes\" es la opci\u00f3n por defecto)</li> <li>\"<code>Search for a package:\"</code> ponemos \"<code>laravel-blade</code>\" y elegimos la opci\u00f3n: \"<code>philo/laravel-blade</code>\". A veces el paquete puede no aparecer (puede haber cambiado el nombre, el desarrollador...), no pasa nada, vete a Packagist , desde su buscador localiza el paquete y sigue las instrucciones, que b\u00e1sicamente son poner unas l\u00edneas en tu archivo \"<code>composer.json</code>\" y hacer \"<code>composer install</code>\". O generar el archivo y hacer el \"<code>composer require</code>\" despu\u00e9s como ya vimos.</li> <li>Para las dependencias de desarrollo (<code>dev</code>) contestamos que no.</li> <li>\"<code>Do you confirm generation [yes]?</code>\" le damos a <code>intro</code> (\"yes\" es la opci\u00f3n por defecto)</li> <li>\"<code>Would you like to install dependencies now [yes]?</code>\" le damos a <code>intro</code> (\"yes\" es la opci\u00f3n por defecto) . En este paso se descargan las librer\u00edas seleccionadas, en este caso: \"<code>philo/laravel-blade</code>\" en la carpeta \"<code>vendor</code>\" que si no existe se crear\u00e1.</li> </ul> <p>Captura de pantalla Ubuntu (Elaboraci\u00f3n propia) Una vez hecho esto podemos implementar la \"autocarga\" y el \"optimizador\" de la misma como ya vimos. Al final el archivo \"<code>composer.json</code>\" nos deber\u00eda quedar m\u00e1s o manos as\u00ed:</p> <p><code>{</code> <code>\"name\": \"usuario/usuario\",</code> <code>\"description\": \"Ejemplo Blade\",</code> <code>\"type\": \"project\",</code> <code>\"require\": {</code> <code>\"philo/laravel-blade\": \"^3.1\"</code> <code>},</code> <code>\"config\": {</code> <code>\"optimize-autoloader\": true</code> <code>},</code> <code>\"autoload\": {</code> <code>\"psr-4\": {</code> <code>\"Clases\\\\\": \"src\"</code> <code>}</code> <code>},</code> <code>\"license\": \"GNU/GPL\",</code> <code>\"authors\": [</code> <code>{</code> <code>\"name\": \"usuario\",</code> <code>\"email\": \"usuario@ejemplo.es\"</code> <code>}</code> <code>]</code></p> <p><code>}</code></p> <p>Hacemos \"<code>composer install</code>\" y ya estemos en condiciones de empezar a usar Blade en nuestro proyecto.</p> <p>Autoevaluaci\u00f3n</p> <p>\u00bf Necesitamos usar el Framework Laravel pasar sacar ventajas del gestor de plantillas Blade ?</p> <p>Verdadero</p> <p>Falso.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#231-separacion-de-la-logica-de-negocio-ii","title":"2.3.1.- Separaci\u00f3n de la l\u00f3gica de negocio (II).","text":"<p>OpenClipart-Vectors (Dominio p\u00fablico)</p> <p>Para utilizar Blade, y suponiendo que estamos trabajando con la estructura de directorios que se propuso en el apartado anterior, simplemente tienes que a\u00f1adir a tus p\u00e1ginas del directorio \"<code>public</code>\" lo siguiente:</p> <p><code>&lt;?php</code> <code>require 'vendor/autoload.php';</code> <code>use Philo\\Blade\\Blade;</code> <code>$views = '../views';</code> <code>$cache = '../cache';</code> <code>$blade = new Blade($views, $cache);</code></p> <p><code>echo $blade-&gt;view()-&gt;make('vista')-&gt;render();</code></p> <p>Esto me cargar\u00eda la vista \"<code>vista.blade.php</code>\" de la carpeta \"<code>views</code>\". F\u00edjate que solo hace falta poner el nombre de la vista y no la extensi\u00f3n \"<code>.blade.php</code>\".</p> <p>Para entender esto mejor desarrollaremos un proyecto con dos p\u00e1ginas, una para ver el listado de productos de la base de datos proyecto y otra para ver el listado de familias.</p> <p>A las clases Conexion, Productos y Familias que ya la hemos visto a lo largo del tema, vamos a modificarlas para usar <code>namespaces</code> en todo el proyecto. La estructura de nuestro proyecto de ejemplo podr\u00eda ser la siguiente:</p> <p>Captura de pantalla Visual Studio Code (Elaboraci\u00f3n propia)</p> <ul> <li>En \"<code>src</code>\" tendremos las clases para conectarnos a la base de dato y recuperar los datos de familias y productos.</li> <li>En \"<code>public</code>\" Las dos p\u00e1ginas que realmente mostraremos</li> <li>En \"<code>views</code>\" crearemos una carpeta \"<code>plantillas</code>\" (pondremos las plantillas que reusaremos las veces que queramos) y las dos vistas, la que me generar\u00e1 el listado de productos y la que me generar\u00e1 el listado de familias.</li> </ul> <p>Vamos a ello:</p> <p>Las clases ya sabemos como hacerlas simplemente vamos a poner en el encabezado de las mismas, lo siguiente. Ten en cuenta que el nombre del namespace viene dado por lo que pusimos en el <code>\"autoload</code>\" del <code>composer</code> y la carpeta de las mismas tambi\u00e9n. Si los has cambiado debes reflejarlo en \"<code>composer.json</code>\"</p> <p><code>&lt;?php</code> <code>namespace Clases;</code> <code>use PDO;</code></p> <p><code>use PDOException;</code></p> <p>Al usar namespace es necesario poner \"<code>use</code>\" a los m\u00e9todos y la clase <code>PDO.</code> Si no lo hacemos para no tener errores tendr\u00edamos que andar poniendo \"<code>$conexion = new \\PDO(. . . )</code>, <code>catch(\\PDOException)</code> . . .\"</p> <p>Las p\u00e1ginas que vamos a ver (familias y productos) comporten una estructura como el esqueleto html,  la carga de bootstrap  o las hojas de estilos, todo esto lo podemos meter en la plantilla y as\u00ed nos evitamos tener que repetir el mismo c\u00f3digo una y otra vez. Veamos la plantilla</p> <p><code>&lt;!doctype html&gt;</code> <code>&lt;html lang=\"es\"&gt;</code> <code>&lt;head&gt;</code> <code>&lt;meta charset=\"UTF-8\"&gt;</code> <code>&lt;meta name=\"viewport\"</code> <code>content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"&gt;</code> <code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;</code> <code>&lt;!-- css para usar Bootstrap --&gt;</code> <code>&lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\"&gt;</code> <code>&lt;title&gt;@yield('titulo')&lt;/title&gt;</code> <code>&lt;/head&gt;</code> <code>&lt;body style=\"background:#0277bd\"&gt;</code> <code>&lt;div class=\"container mt-3\"&gt;</code> <code>&lt;h3 class=\"text-center mt-3 mb-3\"&gt;@yield('encabezado')&lt;/h3&gt;</code> <code>@yield('contenido')</code> <code>&lt;/div&gt;</code> <code>&lt;/body&gt;</code></p> <p><code>&lt;/html&gt;</code></p> <p>cada instrucci\u00f3n de Blade viene precedida de \"<code>@</code>\". En las l\u00edneas 10, 14 y 15 ver\u00e1s \"<code>@yield('. . .')</code>\"  se usa para mostrar el contenido de una secci\u00f3n determinada. Para cada p\u00e1gina cambiaremos: contenido, t\u00edtulo y cabecera.</p> <p>Veamos como hacemos uso de esta plantilla en las vistas:</p> <p>Vista: \"<code>vistaProductos.blade.php</code>\"</p> <p><code>@extends('plantillas.plantilla1')</code> <code>@section('titulo')</code> <code>{{$titulo}}</code> <code>@endsection</code> <code>@section('encabezado')</code> <code>{{$encabezado}}</code> <code>@endsection</code> <code>@section('contenido')</code> <code>&lt;table class=\"table table-striped\"&gt;</code> <code>&lt;thead&gt;</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"col\"&gt;C\u00f3digo&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Nombre&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Nombre Corto&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Precio&lt;/th&gt;</code> <code>&lt;/tr&gt;</code> <code>&lt;/thead&gt;</code> <code>&lt;tbody&gt;</code> <code>@foreach($productos as $item)</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"row\"&gt;{{$item-&gt;id}}&lt;/th&gt;</code> <code>&lt;td&gt;{{$item-&gt;nombre}}&lt;/td&gt;</code> <code>&lt;td&gt;{{$item-&gt;nombre_corto}}&lt;/td&gt;</code> <code>@if($item-&gt;pvp&gt;100)</code> <code>&lt;td class='text-danger'&gt;{{$item-&gt;pvp}}&lt;/td&gt;</code> <code>@else</code> <code>&lt;td class='text-success'&gt;{{$item-&gt;pvp}}&lt;/td&gt;</code> <code>@endif</code> <code>&lt;/tr&gt;</code> <code>@endforeach</code> <code>&lt;/tbody&gt;</code> <code>&lt;/table&gt;</code></p> <p><code>@endsection</code></p> <p>Vista \"<code>vistaFamilias.blade.php</code>\"</p> <p><code>@extends('plantillas.plantilla1')</code> <code>@section('titulo')</code> <code>{{$titulo}}</code> <code>@endsection</code> <code>@section('encabezado')</code> <code>{{$encabezado}}</code> <code>@endsection</code></p> <p><code>@section('contenido')</code> <code>&lt;table class=\"table table-striped\"&gt;</code> <code>&lt;thead&gt;</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"col\"&gt;C\u00f3digo&lt;/th&gt;</code> <code>&lt;th scope=\"col\"&gt;Nombre&lt;/th&gt;</code> <code>&lt;/tr&gt;</code> <code>&lt;/thead&gt;</code> <code>&lt;tbody&gt;</code> <code>@foreach($familias as $item)</code> <code>&lt;tr class=\"text-center\"&gt;</code> <code>&lt;th scope=\"row\"&gt;{{$item-&gt;cod}}&lt;/th&gt;</code> <code>&lt;td&gt;{{$item-&gt;nombre}}&lt;/td&gt;</code></p> <pre><code>        `&lt;/tr&gt;`  \n    `@endforeach`  \n    `&lt;/tbody&gt;`  \n`&lt;/table&gt;`\n</code></pre> <p><code>@endsection</code></p> <p>Lo primero que hacemos con \"<code>@extends('...')</code>\" es llamar a la plantilla, para ello indicamos la ruta (f\u00edjate que la extensi\u00f3n \"<code>.blade.php</code>\" no hace falta ponerla). Acu\u00e9rdate que creamos tres \"<code>yields</code>\" uno llamado t\u00edtulo, otro encabezado y otro contenido, para rellenarlos ponemos el bloque \"<code>@section('...'),  @endsection</code>\" con el nombre que pusimos en los \"<code>yields</code>\".</p> <p>A las vistas mandamos unas variables (en el apartado siguiente veremos como). A la vista \"<code>vistaProductos.blade.php</code>\" mandamos las variables \"<code>$titulo, $encabezado y $productos</code>\", <code>$producto</code> trae los productos de las base de datos (los mandamos con un \"<code>fetchAll()</code>\" de una consulta a la tabla productos). Cuando usamos Blade no hace falta poner \"<code>&lt;?php echo $titulo; ?&gt;</code>\"  que es como lo hemos hecho hasta ahora, nos basta con poner \"<code>{{...}}</code>\"</p> <p>Puedes observar ademas que tambi\u00e9n podemos poner un bucle para recorrer, en este caso, los productos \"<code>@foreach(...), endforeach</code>\".</p> <p>De igual manera con un bloque \"<code>@if, @else, @endif</code>\" pintamos los precios de mas de 100\u20ac de rojo y el resto de verde.</p> <p>El c\u00f3digo HTML lo ponemos tal cual, si necesit\u00e1semos poner c\u00f3digo PHP en una pagina Blade lo pondr\u00edamos entre las directivas \"<code>@php, @endphp</code>\"</p> <p>En el enlace siguiente tenemos un manual muy completo de Blade en \"styde.net\"</p> <p>Manual Blade</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#24-generacion-del-interface-de-usuario","title":"2.4.- Generaci\u00f3n del interface de usuario.","text":"<p>kreatikar (Pixabay License)</p> <p>En el apartado anterior configuramos las vistas y una plantilla para ahorrarnos repetir c\u00f3digo, a las vistas las pasamos unas variables como titulo encabezado, las listas de datos que queramos mostrar . . . Veamos como podemos llamar a estas vistas y pasar variables a las mismas.</p> <p>En la carpeta \"<code>public</code>\" (la \u00fanica carpeta que realmente necesita ser accesible para el navegador) vamos a tener dos archivos: \"<code>familias.php</code>\" que se encargar\u00e1 de llamar a la vista \"<code>vistaFamilias.blade.php</code>\" y pasar las variables necesarias, y \"<code>productos.php</code>\" que har\u00e1 lo mismo con la vista \"<code>vistaProductos.blade.php</code>\". F\u00edjate en el c\u00f3digo.</p> <p>P\u00e1gina: \"<code>productos.php</code>\"</p> <p><code>&lt;?php</code></p> <p><code>require '../vendor/autoload.php';</code></p> <p><code>use Philo\\Blade\\Blade;</code> <code>use Clases\\Producto;</code></p> <p><code>$views = '../views';</code> <code>$cache = '../cache';</code></p> <p><code>$blade = new Blade($views, $cache);</code> <code>$titulo='Productos';</code> <code>$encabezado='Listado de Productos';</code> <code>$productos=(new Producto())-&gt;recuperarProductos();</code></p> <p><code>echo $blade-&gt;view()-&gt;make('vistaProductos', compact('titulo', 'encabezado', 'productos'))-&gt;render();</code></p> <p>El funcionamiento es muy sencillo:</p> <ol> <li>Con el \"<code>require</code>\" llamamos al archivo \"<code>autoload.php</code>\" de la carpeta \"<code>vendor</code>\" (esta carpeta la crea autom\u00e1ticamente \"composer\" con las librer\u00edas y clases necesarias. En este proyecto lo necesario para que funcione Blade y el autoload)</li> <li>Las l\u00edneas del \"<code>use</code>\" son para poder usar nuestras Clases y las de \"<code>Philo\\Blade</code>\" (acu\u00e9rdate del <code>namespace</code> de las mismas que era Clase).</li> <li>Las siguientes son para indicar la ruta relativa de las carpetas \"<code>views</code>\" y \"<code>cache</code>\" y guardarla en sendas variables.</li> </ol> <p>En la siguiente nos creamos un objeto de la clase \"<code>Blade\"</code>, le pasamos las rutas de las carpetas \"<code>views</code>\" y \"<code>cache</code>\" e inicializamos las variables que pasaremos a la vista: <code>$titulo, $encabezado y $productos</code>. Esta \u00faltima l\u00ednea la hemos simplificado, en realidad pod\u00edamos haber puesto: <code>$productos = new Productos();</code></p> <ol> <li><code>$productos-&gt;recuperarProductos();</code></li> <li>En la \u00faltima l\u00ednea lamamos a la vista: '<code>vistaProductos'</code>de la carpeta \"<code>views</code>\" y le pasamos usando \"<code>compact()</code>\" las tres variables: <code>$titulo, $encabezado y $productos</code>. En realidad a la vista hay que pasarle un array asociativo \"<code>nombre de la variable=&gt;valor</code>\" que es lo que hace precisamente el m\u00e9todo \"<code>compact()</code>\".</li> </ol> <p>P\u00e1gina: \"<code>familias.php</code>\"</p> <p><code>&lt;?php</code></p> <p><code>require '../vendor/autoload.php';</code></p> <p><code>use Philo\\Blade\\Blade;</code> <code>use Clases\\Familia;</code></p> <p><code>$views = '../views';</code> <code>$cache = '../cache';</code></p> <p><code>$blade = new Blade($views, $cache);</code> <code>$titulo='Familias';</code> <code>$encabezado='Listado de Familias';</code> <code>$familias=(new Familia())-&gt;recuperarFamilias();</code></p> <p><code>echo $blade-&gt;view()-&gt;make('vistaFamilias', compact('titulo', 'encabezado', 'familias'))-&gt;render();</code></p> <p>Si te fijas es igual a lo que hicimos en \"<code>productos.php</code>\".</p> <p>A continuaci\u00f3n se deja un enlace con los archivos del proyecto. Para poder ver el mismo funcionando tendr\u00e9is que tener Composer instalado hacer \"<code>composer init</code>\" instalar la librer\u00eda de Blade y  autoload y hacer  \"<code>composer install\"</code>. Descargar archivos. (zip - 5,71 KB)</p> <p>Para saber m\u00e1s</p> <p>En el enlace siguiente hay documentaci\u00f3n sobre la  funci\u00f3n \"<code>compact()</code>\"  : Enlace a la documentaci\u00f3n oficial.</p> <p>Ejercicio resuelto</p> <p>A partir de la p\u00e1gina de \"login\" que ya vimos en el ejemplo 1.7.1 modifica el ejemplo que acabamos de ver para poder acceder a listar \"productos\" y \"familias\" solo si estamos validados.</p> <p>Usa Blade para crear la vista que cargue la p\u00e1gina de \"login\" y modifica listar usuarios y productos para que muestren el usuario con el que estamos logeados y el bot\u00f3n cerrar sesi\u00f3n.</p> <p>Cuando nos validemos accederemos a una p\u00e1gina con dos \"botones/enlaces\" uno para ir a \"<code>familias.php</code>\" y otro a \"<code>productos.php</code>\".</p> <p>Se recomienda abordar este ejercicio desde cero para repasar todos los conceptos.</p> <p>Autoevaluaci\u00f3n</p> <p>Las plantillas que crees en Blade es preferible alojarlas:</p> <p>En un lugar no accesible por el servidor web.</p> <p>En un lugar accesible por el servidor web.</p>"},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#anexo-1","title":"Anexo 1","text":""},{"location":"Moduls/DWES/Programacio%CC%81orientadaaobjectesPHP.html#ejemplo-de-como-podemos-pasar-distintos-numeros-de-parametros-a-un-constructor-simulando-la-sobrecarga","title":"Ejemplo de como podemos pasar distintos n\u00fameros de par\u00e1metros a un constructor, simulando la sobrecarga.","text":"<p><code>&lt;?php</code></p> <p><code>class Persona</code> <code>{</code> <code>private $nombre;</code> <code>private $perfil;</code></p> <pre><code>`public function __construct()`  \n`{`  \n    `$num = func_num_args(); //guardamos el n\u00famero de argumentos`  \n    `switch ($num) {`  \n        `case 0:`  \n            `break;`  \n        `case 1:`  \n            `//recuperamos el argumento pasado`  \n            `$this-&gt;nombre = func_get_arg(0); // los argumentos empiezan a contar por 0`  \n            `break;`  \n        `case 2:`  \n            `$this-&gt;nombre = func_get_arg(0);`  \n            `$this-&gt;perfil = func_get_arg(1);`  \n    `}`\n\n`}`\n</code></pre> <p><code>}</code></p> <p><code>//Ahora ser\u00e1 v\u00e1lido el siguiente c\u00f3digo.</code> <code>$persona1 = new Persona();</code> <code>$persona2 = new Persona(\"Alicia\");</code> <code>$persona3 = new Persona(\"Alicia\", \"P\u00fablico\");</code> <code>var_dump($persona1);</code> <code>echo \"&lt;break&gt;\";</code> <code>var_dump($persona2);</code> <code>echo \"&lt;break&gt;\";</code></p> <p><code>var_dump($persona3);</code></p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html","title":"Material te\u00f2ric","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#arquitectures-web","title":"Arquitectures Web","text":"Durada i criteris d'avaluaci\u00f3 <p>Durada estimada: 4 sessions</p> <p>Resultat d'aprenentatge:</p> <ol> <li>Selecciona les arquitectures i tecnologies de programaci\u00f3 Web en entorn servidor, analitzant les seves capacitats i caracter\u00edstiques pr\u00f2pies.</li> </ol> <p>Criteris d'avaluaci\u00f3:</p> <ol> <li>S'han caracteritzat i diferenciat els models d'execuci\u00f3 de codi en el servidor i en el client Web.</li> <li>S'han reconegut els avantatges que proporciona la generaci\u00f3 din\u00e0mica de p\u00e0gines Web i les seves difer\u00e8ncies amb la inclusi\u00f3 de sent\u00e8ncies de guions a l'interior de les p\u00e0gines Web.</li> <li>S'han identificat els mecanismes d'execuci\u00f3 de codi en els servidors Web.</li> <li>S'han reconegut les funcionalitats que aporten els servidors d'aplicacions i la seva integraci\u00f3 amb els servidors Web.</li> <li>S'han identificat i caracteritzat els principals llenguatges i tecnologies relacionats amb la programaci\u00f3 Web en entorn servidor.</li> <li>S'han verificat els mecanismes d'integraci\u00f3 dels llenguatges de marques amb els llenguatges de programaci\u00f3 en entorn servidor.</li> <li>S'han reconegut i avaluat les eines de programaci\u00f3 en entorn servidor.</li> </ol> <p>Les arquitectures web defineixen la forma en qu\u00e8 les p\u00e0gines d'un lloc web estan estructurades i enlla\u00e7ades entre si. Les aplicacions web es basen en en model client-servidor.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#client-servidor","title":"Client / Servidor","text":"Arquitectura Client Servidor <p>Un o diversos client accedeixen a un servidor. La noves arquitectures substitueixen el servidor per un balanceador de c\u00e0rrega de manera que N servidors donen resposta a M clients.</p> <p>En les aplicacions web, el client \u00e9s el navegador web.</p> <p>El client fa la petici\u00f3 (request normalment mitjan\u00e7ant el protocol GET mitjan\u00e7ant el port 80/443) i el servidor respon (response).</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#pagina-web-dinamica","title":"P\u00e0gina web din\u00e0mica","text":"<p>Si la p\u00e0gina web \u00fanicament cont\u00e9 HTML + CSS es considera una p\u00e0gina est\u00e0tica. Per a generar una p\u00e0gina din\u00e0mica, on el contingut canvia, avui dia tenim dues alternatives:</p> <ul> <li>Utilitzar un llenguatge de servidor que generi el contingut, ja sigui mitjan\u00e7ant l'acc\u00e9s a una BD o serveis externs.</li> <li>Utilitzar serveis REST de tercers invocats des de JS.</li> </ul> P\u00e0gina web din\u00e0mica <p>Les tecnologies empleadadas (i els perfils de desenvolupament associats) per a la generaci\u00f3 de p\u00e0gines din\u00e0miques s\u00f3n:</p> Perfil Eina Tecnologia Front-end / client Navegador Web HTML + CSS + Javascript Back-end / servidor Servidor Web + BBDD PHP, Python, Ruby, Java / JSP, .Net / .asp <p>Perfil Full-stack</p> <p>En les ofertes de treball quan fan refer\u00e8ncia a un Full-stack developer, estan buscant un perfil que domina tant el front-end com el back-end.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#single-page-application","title":"Single Page Application","text":"<p>Avui dia, gran part del desenvolupament web est\u00e0 transicionando d'una arquitectura web client-servidor cl\u00e0ssica on el client realitza una anomenada al backend, per una arquitectura SPA on el client guanya molt major pes i segueix una programaci\u00f3 reactiva que accedeix a serveis remots REST que realitzen les operacions (comunicandose mitjan\u00e7ant JSON).</p> Arquitectura tradicional vs SPA"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#arquitectura-de-3-capes","title":"Arquitectura de 3 capes","text":"<p>Cal distingir entre capes f\u00edsiques (tier) i capes l\u00f2giques (layer).</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#tier","title":"Tier","text":"<p>Capa f\u00edsica d'una arquitectura. Suposa un nou element maquinari separat f\u00edsicament. Les capes f\u00edsiques m\u00e9s allunyades del client estan m\u00e9s protegides, tant per firewalls com per VPN.</p> <p>Exemple d'arquitectura en tres capes f\u00edsiques (3 tier):</p> <ul> <li>Servidor Web</li> <li>Servidor d'Aplicacions</li> <li>Servidor de base de dades</li> </ul> Arquitectura de tres capes f\u00edsiques <p>Cl\u00faster en tiers</p> <p>No confondre les capes amb la quantitat de servidors. Actualment es treballa amb arquitectures amb m\u00faltiples servidors en una mateixa capa f\u00edsica mitjan\u00e7ant un cl\u00faster, per a oferir toler\u00e0ncia a errors i escalabilitat horitzontal.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#layer","title":"Layer","text":"<p>En canvi, les capes l\u00f2giques (layers) organitzen el codi respecte a la seva funcionalitat:</p> <ul> <li>Presentaci\u00f3</li> <li>Negoci / Aplicaci\u00f3 / Proc\u00e9s</li> <li>Dades / Persist\u00e8ncia</li> </ul> <p>Com s'observa, cadascuna de les capes es pot implementar amb diferents llenguatges de programaci\u00f3 i/o eines.</p> Arquitectura de tres capes f\u00edsiques en tres l\u00f2giques"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#mvc","title":"MVC","text":"<p>Model-View-Controller o Model-Vista-Controlador \u00e9s un model d'arquitectura que separa les dades i la l\u00f2gica de negoci respecte a la interf\u00edcie d'usuari i el component encarregat de gestionar els esdeveniments i les comunicacions.</p> <p>En separar els components en elements conceptuals permet reutilitzar el codi i millorar la seva organitzaci\u00f3 i manteniment. Els seus elements s\u00f3n:</p> <ul> <li>Model: representa la informaci\u00f3 i gestiona tots els accessos a aquesta, tant consultes com actualitzacions provinents, normalment, d'una base de dades. S'accedeix via el controlador.</li> <li>Controlador: Respon a les accions de l'usuari, i realitza peticions al model per a sol\u00b7licitar informaci\u00f3. Despr\u00e9s de rebre la resposta del model, li envia les dades a la vista.</li> <li>Vista: Presenta a l'usuari de manera visual el model i les dades preparades pel controlador. L'usuari interactura amb la vista i realitza noves peticions al controlador.</li> </ul> <p>Ho estudiarem en m\u00e9s detall en aprofundir en l'\u00fas dels frameworks PHP.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#decisions-de-disseny","title":"Decisions de disseny","text":"<ul> <li>Quina grand\u00e0ria t\u00e9 el projecte?</li> <li>Quins llenguatges de programaci\u00f3 conec? Val la pena l'esfor\u00e7 d'aprendre un nou?</li> <li>Usar\u00e9 eines de codi obert o eines propiet\u00e0ries? Quin \u00e9s el cost d'utilitzar solucions comercials?</li> <li>Programar\u00e9 l'aplicaci\u00f3 jo nom\u00e9s o formar\u00e9 part d'un grup de programadors?</li> <li>Conte amb algun servidor web o gestor de base de dades disponible o puc decidir lliurement utilitzar el que cregui necessari?</li> <li>Quin tipus de llic\u00e8ncia aplicar\u00e9 a l'aplicaci\u00f3 que desenvolupi?</li> </ul>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#eines","title":"Eines","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#servidor-web","title":"Servidor Web","text":"<p>Programari que rep peticions HTTP (GET, POST, DELETE, ...). Retorna el recurs sol\u00b7licitat (HTML, CSS, JS, JSON, imatges, etc...)</p> <p>El producte m\u00e9s implantant \u00e9s Apache Web Server (https://httpd.apache.org/), creat en 1995.</p> <ul> <li>Programari lliure i multiplataforma</li> <li>Sistema de m\u00f2duls din\u00e0mics \u2192 PHP, Python, Perl</li> <li>Utilitza l'arxiu <code>.htaccess</code> per a la seva configuraci\u00f3</li> </ul> <p>En l'actualitat, Apache est\u00e0 perdent mercat respecte a Nginx (https://www.nginx.com). Es tracta d'un producte m\u00e9s modern (2004) i que en determinats escenaris t\u00e9 millor rendiment que Apache.</p> <ul> <li>Comparativa servidors web: https://w3techs.com/technologies/history_overview/web_server/ms/q</li> </ul>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#servidor-daplicacions","title":"Servidor d'Aplicacions","text":"<ul> <li>Programari que ofereix serveis addicionals als d'un servidor web:<ul> <li>Clustering</li> <li>Balanceig de c\u00e0rrega</li> <li>Toler\u00e0ncia a fallades</li> </ul> </li> <li>Tomcat (http://tomcat.apache.org/) \u00e9s el servidor d'aplicacions open source i multiplataforma de refer\u00e8ncia per a una arquitectura Java.<ul> <li>Cont\u00e9n un contenidor Web Java que interpreta Servlets i JSP.</li> </ul> </li> </ul> <p>Info</p> <p>Tant els servidors web com els servidors d'aplicacions els estudiarem en profunditat en el m\u00f2dul de \"Desplegament d'Aplicacions Web\".</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#llenguatges-en-el-servidor","title":"Llenguatges en el servidor","text":"<p>Les aplicacions que generen les p\u00e0gines web es programen en algun dels seg\u00fcents llenguatges:</p> <ul> <li>PHP</li> <li>JavaEE: Servlets / JSP</li> <li>Python</li> <li>ASP.NET \u2192 Visual Basic .NET / C#</li> <li>Ruby</li> <li>...</li> </ul>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#javaee","title":"JavaEE","text":"<p>Java Enterprise Edition \u00e9s la soluci\u00f3 Java per al desenvolupament d'aplicacions enterprise. Ofereix una arquitectura molt completa i complexa, escalable i tolerant a fallades. Plantejada per a aplicacions per a grans sistemes.</p> <p></p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#php","title":"PHP","text":"<ul> <li>Llenguatge de prop\u00f2sit general dissenyat per al desenvolupament de p\u00e0gines web din\u00e0miques</li> <li>Al principi, llenguatge no tipado.</li> <li>Actualment en la versi\u00f3 8. Es recomana almenys utilitzar una versi\u00f3 superior a la 7.0.</li> <li>Codi embegut en el HTML</li> <li>Instruccions entre etiquetes <code>&lt;?php</code> y <code>?&gt;</code><ul> <li>Per a generar codigo dins de PHP, podem usar la instrucci\u00f3 <code>tiro</code></li> </ul> </li> <li>Multitud de llibreries i frameworks:<ul> <li>Laravel, Symfony, Codeigniter, Zend</li> </ul> </li> </ul> <p>La seva documentaci\u00f3 \u00e9s bastant completa: https://www.php.net/manual/es/index.php</p> <p>El seg\u00fcent mapa mental mostra un resum dels seus elements:</p> Elements del llenguatge PHP <p>Durant les seg\u00fcents unitats estudiarem PHP en profunditat.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#posada-en-marxa","title":"Posada en marxa","text":"<p>Per a poder treballar amb un entorn de desenvolupament local, hem de preparar el nostre entorn de desenvolupament amb les eines comentades. Al llarg del curs utilitzarem la versi\u00f3 8 de PHP.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#xampp","title":"XAMPP","text":"<p>XAMPP (https://www.apachefriends.org/es/index.html) \u00e9s una distribuci\u00f3 composta amb el programari necessari per a desenvolupar en entorn servidor. Es compon de les seg\u00fcents eines sobre la base de les seves sigles:</p> <ul> <li>X per al sistema operatiu (per aquest motiu es conegui tamnbi\u00e9n com LAMP o WAMP).</li> <li>A per a Apache.</li> <li>M per a MySQL / MariaDB. Tamb\u00e9 inclou phpMyAdmin per a l'administraci\u00f3 de la base de dades des d'una interf\u00edcie web.</li> <li>P per a PHP.</li> <li>l'\u00faltima P per a Perl.</li> </ul> <p>Des de la pr\u00f2pia p\u00e0gina es pot descarregar l'arxiu executable per al sistema operatiu del nostre ordinador. Es recomana llegir la FAQ de cada sistema operatiu amb instruccions per a la seva posada en marxa.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#docker","title":"Docker","text":"<p>Docker (https://www.docker.com) \u00e9s un gestor de contenidors, considerant un contenidor com un m\u00e8tode de virtualitzaci\u00f3 del sistema operatiu.</p> <p>L'\u00fas de contenidors requereix menys recursos que una m\u00e0quina virtual, per tant, el seu llan\u00e7ament i detenci\u00f3 s\u00f3n m\u00e9s r\u00e0pids que les m\u00e0quines virtuals.</p> <p>Aix\u00ed doncs, Docker permet crear, provar i implementar aplicacions r\u00e0pidament, a partir d'una s\u00e8rie de plantilles que es coneixen com a imatges de Docker.</p> <p>Per a aix\u00f2 \u00e9s necessari tenir instal\u00b7lat Docker Desktop (https://www.docker.com/products/docker-desktop) en els nostres entorns de desenvolupament (el qual ja inclou en nucleo de Docker i l'eina docker compose). En els ordinadors de l'aula ja est\u00e0 instal\u00b7lat. Per a instal\u00b7lar-ho a casa, en el cas de Windows, \u00e9s necessari instal\u00b7lar pr\u00e8viament WSL 2, el qual \u00e9s un subsistema de Linux dins de Windows.</p> <p>Al llarg del curs anirem creant diferents contenidors amb els serveis necessaris, de manera que cada vegada nom\u00e9s treballem amb el programari m\u00ednim.</p> <p>Versions</p> <p>Al llarg del curs usarem PHP <code>8.0</code>. Respecte a Docker, per a escriure les anotacions hem utilitzat la version <code>20.10</code> i la version <code>2.19</code> de docker compose. Finalment, la versi\u00f3 de Docker Desktop que hem utilitzat \u00e9s la <code>4.0</code>.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#plantilla-servidor-web-php","title":"Plantilla Servidor Web + PHP","text":"<p>Docker es basa en l'\u00fas d'imatges per a crear contenidors. Docker Compose simplifica el treball amb m\u00faltiples contenidors, i per aix\u00f2, per a facilitar el arraque, ens centrarem en Docker Compose utilitzant una plantilla que \u00fanicament contindr\u00e0 com a serveis Apache/Nginx i PHP.</p> <p>Per a aix\u00f2, emplenarem l'arxiu <code>docker-compose.yaml</code> amb:</p> Apache i PHPNginx i PHP <pre><code># Services\nservices:\n  # Apache + PHP\n  Apache_php:\n    image: php:8-Apache\n    # Preparem un volum per a emmagatzemar el nostre codi\n    volumes:\n      - ./src/:/var/www/html\n    expose:\n      - 80\n    ports:\n      - 80:80\n</code></pre> <pre><code># Services\nservices:\n\n  nginx:\n    image: nginx:1.19\n    ports:\n      - 80:80\n    volumes:\n      - ./src:/var/www/php\n      - ./.docker/nginx/conf.d:/etc/nginx/conf.d # carreguem la configuraci\u00f3 d'un fitxer extern\n    depends_on:\n      - php   # enllacem nginx amb php\n\n  php:\n    image: php:8.0-fpm\n    working_dir: /var/www/php\n    volumes:\n      - ./src:/var/www/php\n</code></pre> <p>Dins de la carpeta que contingui aquest arxiu, hem de crear una carpeta <code>src</code> on col\u00b7locarem el nostre codi font. Per a facilitar la posada en marxa, teniu la plantilla de Apache/PHP (versi\u00f3 2 amb <code>a2enmod rewrite</code>) o Nginx/PHP disponible per a la seva desc\u00e0rrega.</p> <p>Quan estiguem llestos, llan\u00e7arem el servei mitjan\u00e7ant:</p> <pre><code>docker-compose up -d\n</code></pre> <p>Si volem veure el contingut dels arxius de log del servei utilitzarem:</p> <pre><code>docker-compose logs -f\n</code></pre> <p>Per a copiar un arxiu des del nostre sistema a l'interior del contenidor:</p> <pre><code>docker cp ./miFichero idContenedor:/tmp\n</code></pre> <p>I a l'inrev\u00e9s, si volem consultar un arxiu contingut dins d'un contenidor, el copiarem al nostre sistema:</p> <pre><code>docker cp idContenedor:/tmp/archivoAConsultar.txt ./\n</code></pre> <p>Finalment, si volem accedir a un terminal interactiu dins del contenidor:</p> <pre><code>docker exec -it nombreContenedor bash\n</code></pre> <p>Altres comandos que podem arribar a utilitzar s\u00f3n:</p> <ul> <li><code>docker ps</code>: Veure els contenidors que es estan executant</li> <li><code>docker ps -a</code>: Veure tots els contenidors</li> <li><code>docker start nombreContenedor</code>: Arrencar un contenidor</li> <li><code>docker images</code>: Veure les imatges que tenim descarregades</li> </ul> <p>Una altra forma m\u00e9s senzilla per a llan\u00e7ar de nou els contenidors i gestionar-los una vegada creats \u00e9s utilitzar la interf\u00edcie gr\u00e0fica que ofereix Docker Desktop:</p> Arrencada de contenidor mitjan\u00e7ant Docker Desktop <p>Docker stack</p> <p>Existeixen diverses opcions mitjan\u00e7ant Docker que ofereixen solucions completes i empaquetes per a tot el stack de desenvolupament. En posteriors sessions utilitzarem tant Devilbox (http://devilbox.org) com Laradock (https://laradock.io)</p> <p>Per\u00f2 vull saber com funciona...</p> <p>En el m\u00f2dul de Desplegament d'aplicacions estudiareu en profunditat, a m\u00e9s de Docker, Apache i altres serveis que ens serviran d'ajuda per al desenvolupament en entorn servidor.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#entorn-de-desenvolupament","title":"Entorn de desenvolupament","text":"<p>En aquest curs utilitzarem PhpStorm i IntelliJ (https://www.jetbrains.com/) at\u00e8s que podem fer servir llic\u00e8ncies d'Education, encara que tamb\u00e9 es podria utilitzar Visual Studio Code (https://code.visualstudio.com) com a entorn de desenvolupament (IDE). Una altra possibilitat \u00e9s utilitzar Eclipse, encara que \u00e9s un entorn bastant pesat.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#hola-mon","title":"Hola M\u00f3n","text":"<p>I com no, el nostre primer exemple ser\u00e0 un Hola M\u00f3n en PHP.</p> <p>Si nomenem l'arxiu com <code>index.php</code>, en accedir a <code>http://localhost</code> autom\u00e0ticament carregar\u00e0 el resultat:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Hola M\u00f3n&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;?php\n        echo \"Hola M\u00f3n\";\n    ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT01ArquitecturesWeb.html#referencies","title":"Referencies","text":"<ul> <li>Curs d'introducci\u00f3 a Docker, per Sergi Garc\u00eda Barea* : https://sergarb1.github.io/CursoIntroduccionADocker/</li> <li>Article Arquitectures Web i la seva evoluci\u00f3</li> <li>Lloc web d'Aitor Medrano https://aitor-medrano.github.io/</li> </ul>"},{"location":"Moduls/DWES/UT01ArquitecturesWebActivitats.html","title":"Activitats","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWebActivitats.html#arquitectures-web","title":"Arquitectures Web","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWebActivitats.html#activitats","title":"Activitats","text":"<p>UT101. Instal\u00b7la i configura un entorn complet de desenvolupament que inclogui PHP, Apache i MySQL.</p> <p>UT102. Cerca en internet quins s\u00f3n els tres frameworks PHP m\u00e9s utilitzats, i indica:</p> <pre><code>* Nom i URL\n* Any de creaci\u00f3\n* \u00daltima versi\u00f3\n</code></pre> <p>UT103. Cerca tres ofertes de treball de desenvolupament de programari a Infojobs o LinkedIn que citin PHP i anota:</p> <pre><code>* Empresa + lloc de feina + frameworks PHP + requ\u00edsitos + sou + enllaci a l'oferta.\n</code></pre> <p>UT104. Una vegada arrencat el servei PHP, crea l'arxiu <code>info.php</code> i afegeix el seg\u00fcent fragment de codi:</p> <pre><code>    &lt;?php phpinfo() ?&gt;\n</code></pre> <p>Anota els valors de:</p> <ul> <li>Versi\u00f3 de PHP</li> <li>Loaded Configuration File</li> <li><code>memory_limit</code></li> <li><code>DOCUMENT_ROOT</code></li> </ul> <p>UT105. (Opcional. Necessitau Docker) Obre l'arxiu <code>php.ini-production</code> que est\u00e0 dins del contenidor (pots esbrinar la ruta a partir de la propietat Configuration File (php.ini) Path) i indica per a qu\u00e8 serveixen les seg\u00fcents propietats i quins valors contenen:</p> <ul> <li><code>file_uploads</code></li> <li><code>max_execution_estafi</code></li> <li><code>short_open_tag</code></li> </ul> <p>php.ini</p> <p>\u00c9s l'arxiu de configuraci\u00f3 de PHP, i en tota instal\u00b7laci\u00f3 v\u00e9nen dues plantilles (<code>php.ini-development</code> i <code>php.ini-production</code>) perqu\u00e8 triem els valors m\u00e9s concordes al nostre projecte i creiem el nostre arxiu propi de <code>php.ini</code>.</p>"},{"location":"Moduls/DWES/UT01ArquitecturesWebVideo.html","title":"V\u00eddeo resum de la unitat","text":""},{"location":"Moduls/DWES/UT01ArquitecturesWebVideo.html#arquitectures-web","title":"Arquitectures Web","text":""},{"location":"Moduls/DWES/UT02PHP.html","title":"El lenguaje PHP","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 26 sesiones</p> <p>Resultado de aprendizaje y criterios de evaluaci\u00f3n:</p> <ol> <li> <p>Escribe sentencias ejecutables por un servidor Web reconociendo y aplicando procedimientos de integraci\u00f3n del c\u00f3digo en lenguajes de marcas.</p> <ol> <li>Se han reconocido los mecanismos de generaci\u00f3n de p\u00e1ginas Web a partir de lenguajes de marcas con c\u00f3digo embebido.</li> <li>Se han identificado las principales tecnolog\u00edas asociadas.</li> <li>Se han utilizado etiquetas para la inclusi\u00f3n de c\u00f3digo en el lenguaje de marcas.</li> <li>Se ha reconocido la sintaxis del lenguaje de programaci\u00f3n que se ha de utilizar.</li> <li>Se han escrito sentencias simples y se han comprobado sus efectos en el documento resultante.</li> <li>Se han utilizado directivas para modificar el comportamiento predeterminado.</li> <li>Se han utilizado los distintos tipos de variables y operadores disponibles en el lenguaje.</li> <li>Se han identificado los \u00e1mbitos de utilizaci\u00f3n de las variables.</li> </ol> </li> </ol> <p>Resultado de aprendizaje:</p> <ol> <li>Escribe bloques de sentencias embebidos en lenguajes de marcas, seleccionando y utilizando las estructuras de programaci\u00f3n.</li> </ol> <p>Criterios de evaluaci\u00f3n:</p> <ol> <li>Se han utilizado mecanismos de decisi\u00f3n en la creaci\u00f3n de bloques de sentencias.</li> <li>Se han utilizado bucles y se ha verificado su funcionamiento.</li> <li>Se han utilizado \u201carrays\u201d para almacenar y recuperar conjuntos de datos.</li> <li>Se han creado y utilizado funciones.</li> <li>Se han utilizado formularios web para interactuar con el usuario del navegador Web.</li> <li>Se han empleado m\u00e9todos para recuperar la informaci\u00f3n introducida en el formulario.</li> <li>Se han a\u00f1adido comentarios al c\u00f3digo.</li> </ol>"},{"location":"Moduls/DWES/UT02PHP.html#php","title":"PHP","text":"<ul> <li>Acr\u00f3nimo deAcr\u00f2nim de Personal Home Page</li> <li>Llenguatge de prop\u00f2sit general, tot i que el seu fort \u00e9s el desenraonament web.</li> <li>Sintaxis similar aC / Java</li> <li>El codi s' executa en el servidor (en Apache mitjan\u00e7ant mod_php)</li> <li>El client rep el resultat generat despr\u00e9s d'interpretar el codi en el servidor.</li> <li>El codi s' emmagatzema en arxiu amb extensi\u00f3 <code>.php</code>.</li> </ul> <p>La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/.</p>"},{"location":"Moduls/DWES/UT02PHP.html#codi-incrustat","title":"Codi incrustat","text":"<p>Els blocs de codi s' escriuen entre <code>&lt;?php</code> y <code>?&gt;</code>, mentre que les sent\u00e8ncies se separen mitjan\u00e7ant <code>;</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;title&gt;PHP f\u00e0cil&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;!-- Mostra una frase amb HTML --&gt;\nHola m\u00f3n&lt;br&gt;\n&lt;!-- Mostra una frase amb PHP --&gt;\n&lt;?php echo \"\u00c9s molt f\u00e0cil programar amb PHP.\"; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Nom\u00e9s etiquetes d' obertura</p> <p>Si el nostre codi nom\u00e9s ha de contenir codi PHP i res d'html, com per exemple, quan codifiquem classes o interf\u00edcies, nom\u00e9s posarem l'etiqueta d'obertura, per aix\u00ed indicar que \u00e9s un arxiu de php pur.</p>"},{"location":"Moduls/DWES/UT02PHP.html#generant-contingut","title":"Generant contingut","text":"<p>Tenim tres possibilitats a l'hora de generar contingut en els nostres documents PHP:</p> <ul> <li><code>echo expresio;</code></li> <li><code>print (expresio);</code></li> <li><code>&lt;?= expresio ?&gt;</code></li> </ul> <p>Les que utilitzarem s\u00f3n <code>echo</code> quan ho facem dins d' un bloc d' instruccions i <code>&lt;?=</code> quan nom\u00e9s h\u00e0gim de mostrar el valor d'una variable dins d'un fragment HTML.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;Echo i print&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;&lt;?php echo \"Aquest text es mostrar\u00e0 a la p\u00e0gina web.\" ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?= \"Aquest text es mostrar\u00e0 a la p\u00e0gina web.\" ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?php print(\"Aquest text es mostrar\u00e0 a la p\u00e0gina web.\") ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#comentaris","title":"Comentaris","text":"<p>Podem utilitzar comentaris d'una l\u00ednia o de bloc:</p> <pre><code>&lt;?php\n// Aquest \u00e9s un comentari d'una sola l\u00ednia\n/*\n  Aquest \u00e9s\n  un comentari\n  que ocupa\n  diverses l\u00ednies\n*/ \n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#errors","title":"Errors","text":"<p>Si hi ha un error d' execuci\u00f3, es produeix un Fatal Error.</p> <pre><code>Fatal error: Uncaught Error: Call to undefined function plint() in ...echo.php:11\n Stack trace:\n #0 {main}\n    thrown in ...echo.php on line 11\n</code></pre> <p>Des de PHP 5 es llancen com una excepci\u00f3. M\u00e9s endavant veurem l'\u00fas de <code>try</code> / <code>catch</code>.</p>"},{"location":"Moduls/DWES/UT02PHP.html#variables","title":"Variables","text":"<ul> <li>No cal declarar-les pr\u00e8viament.</li> <li>Comencen per '\\(', per exemple '\\)nombre'. Despr\u00e9s del '$', el seg\u00fcent car\u00e0cter ha de ser una lletra en min\u00fascula (recomanaci\u00f3) o gui\u00f3 baix '_'. Despr\u00e9s ja es poden posar n\u00fameros.</li> <li>S\u00f3n case sensitive: <code>$var != $vAR</code></li> <li>No se declara el seu tipus, el tipat \u00e9s din\u00e0mic. S' assigna en temps d' execuci\u00f3 depenent del valor assignat.</li> <li>Convenient inicialitzar-les, sin\u00f3 donen error.</li> </ul> <pre><code>&lt;?php\n$nom = \"Tofol\";\n$nomComplet = \"Tofol Verdera\";\n$numero = 123;\n$numero2 = 456;\n$pi = 3.14;\n$sort = true;\n$senseValor;\n\necho $senseValor;\n?&gt;\n</code></pre> <p>Tipus</p> <p>Tot i que a priori no hi ha tipus de dades, internament PHP treballa amb quatre tipus escalars: boolean, integer, float i string i quatre tipus compostos: array, object, callable i iterable. Existeix un tipus especial per a null (m\u00e9s informaci\u00f3 en http://php.net/manual/es/language.types.null.php).</p>"},{"location":"Moduls/DWES/UT02PHP.html#constants","title":"Constants","text":"<p>S\u00f3n variables el valor de les quals no varien. Hi ha dues possibilitats:</p> <ul> <li><code>define(NOM, valor);</code></li> <li><code>const NOM; // PHP &gt; 5.3</code></li> </ul> <pre><code>&lt;?php\ndefine(\"PI\", 3.1416);\nconst IVA = 0.21;\n\necho PI, \" \", IVA; // No es posa el s\u00edmbol dolar\n?&gt;\n</code></pre> <ul> <li>Se declaran siempre en MAY\u00daSCULAS</li> <li>Hay un conjunto de constantes ya predefinidas, tambi\u00e9n conocidas como magic constants: https://www.php.net/manual/es/language.constants.predefined.php</li> </ul>"},{"location":"Moduls/DWES/UT02PHP.html#operadores","title":"Operadores","text":""},{"location":"Moduls/DWES/UT02PHP.html#arimeticos","title":"Arim\u00e9ticos","text":"Ejemplo Nombre Resultado <code>-$a</code> Negaci\u00f3n Opuesto de <code>$a</code>. <code>$a + $b</code> Suma Suma de <code>$a</code> y <code>$b</code>. <code>$a - $b</code> Resta Diferencia de <code>$a</code> y <code>$b</code>. <code>$a * $b</code> Multiplicaci\u00f3n Producto de <code>$a</code> y <code>$b</code>. <code>$a / $b</code> Divisi\u00f3n Cociente de <code>$a</code> y <code>$b</code>. <code>$a % $b</code> M\u00f3dulo / Resto Resto de <code>$a</code> dividido por <code>$b</code>. <code>$a ** $b</code> Potencia Resultado de <code>$a</code> elevado a <code>$b</code>. PHP &gt;= 5.6. <p>En el caso de cadenas, si queremos concatenarlas, se utiliza el operador <code>.</code>:</p> <pre><code>&lt;?php\n$x = 33;\n$y = 11;\n$z = $x + $y;\necho \"La suma de 33 y 11 es \".44.\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" y \".$y.\" es \".(33 + 11).\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" y \".$y.\" es \".$z.\"&lt;br /&gt;\";\n?&gt;\n</code></pre> <p>Realmente, en vez de concatenar cadenas con variables, podemos imprimirlas directamente ya que se expanden autom\u00e1ticamente: <pre><code>&lt;?php\necho \"La suma de $x y $y es $z &lt;br /&gt;\";\n?&gt;\n</code></pre></p> <p>En ocasiones, necesitamos rodear el nombre de la variable entre llaves para poder unir m\u00e1s texto al resultado:</p> <pre><code>&lt;?php\n$color = \"rojo\";\necho \"El plural de $color el ${color}s\";\n?&gt;\n</code></pre> <p>M\u00e1s adelante estudiaremos algunas funciones para el tratamiento de cadenas.</p>"},{"location":"Moduls/DWES/UT02PHP.html#comparacion","title":"Comparaci\u00f3n","text":"Ejemplo Nombre Resultado <code>$a == $b</code> Igual <code>true</code> si <code>$a</code> es igual a <code>$b</code> tras de la conversi\u00f3n de tipos. <code>$a === $b</code> Id\u00e9ntico, Comparaci\u00f3n estricta <code>true</code> si <code>$a</code> es igual a <code>$b</code>, y son del mismo tipo de dato. <code>$a != $b</code>, <code>$a &lt;&gt; $b</code> Diferente <code>true</code> si <code>$a</code> no es igual a <code>$b</code> despu\u00e9s de la conversi\u00f3n de tipos. <code>$a !== $b</code> No id\u00e9ntico <code>true</code> si <code>$a</code> no es igual a <code>$b</code>, o si no son del mismo tipo. <code>$a &lt; $b</code> Menor que <code>true</code> si <code>$a</code> es estrictamente menor que <code>$b</code>. <code>$a &gt; $b</code> Mayor que <code>true</code> si <code>$a</code> es estrictamente mayor que <code>$b</code>. <code>$a &lt;= $b</code> Menor o igual que <code>true</code> si <code>$a</code> es menor o igual que <code>$b</code>. <code>$a &gt;= $b</code> Mayor o igual que <code>true</code> si <code>$a</code> es mayor o igual que <code>$b</code>. <code>$a &lt;=&gt; $b</code> Nave espacial Devuelve <code>-1</code>, <code>0</code> o <code>1</code> cuando <code>$a</code> es respectivamente menor, igual, o mayor que <code>$b</code>. PHP &gt;= 7. <code>$a ?? $b ?? $c</code> Fusi\u00f3n de null El primer operando de izquierda a derecha que exista y no sea <code>null</code>. <code>null</code> si no hay valores definidos y no son <code>null</code>. PHP &gt;= 7."},{"location":"Moduls/DWES/UT02PHP.html#logicos","title":"L\u00f3gicos","text":"Ejemplo Nombre Resultado <code>$a and $b</code>, <code>$a &amp;&amp; $b</code> And (y) <code>true</code> si tanto <code>$a</code> como <code>$b</code> son <code>true</code>. <code>$a or $b</code>, <code>$a         |                     | $b</code> Or (o inclusivo) <code>true</code> si cualquiera de <code>$a</code> o <code>$b</code> es <code>true</code>. <code>$a xor $b</code> Xor (o exclusivo) <code>true</code> si <code>$a</code> o <code>$b</code> es <code>true</code>, pero no ambos. <code>!$a</code> Not (no) <code>true</code> si <code>$a</code> no es <code>true</code>."},{"location":"Moduls/DWES/UT02PHP.html#asignacion","title":"Asignaci\u00f3n","text":"Ejemplo Nombre Resultado <code>$a = $b</code> Asignaci\u00f3n Asigna a <code>$a</code> el valor de <code>$b</code> <code>$a += $b</code> Asignaci\u00f3n de la suma Le suma a <code>$a</code> el valor de <code>$b</code>. Equivalente a <code>$a = $a + $b</code> <code>$a -= $b</code> Asignaci\u00f3n de la resta Le resta a <code>$a</code> el valor de <code>$b</code>. Equivalente a <code>$a = $a - $b</code> <code>$a *= $b</code> Asignaci\u00f3n del producto Asigna a <code>$a</code> el producto de <code>$a</code> por <code>$b</code>. Equivalente a <code>$a = $a * $b</code> <code>$a /= $b</code> Asignaci\u00f3n de la divisi\u00f3n Asigna a <code>$a</code> el conciente de <code>$a</code> entre <code>$b</code>. Equivalente a <code>$a = $a / $b</code> <code>$a %= $b</code> Asignaci\u00f3n del resto Asigna a <code>$a</code> el resto de dividir <code>$a</code> entre <code>$b</code>. Equivalente a <code>$a = $a % $b</code> <code>$a .= $b</code> Concatenaci\u00f3n Concatena a <code>$a</code> la cadena <code>$b</code>. Equivalente a <code>$a = $a . $b</code> <code>$a++</code> Incremento Incrementa <code>$a</code> en una unidad. Equivalente a <code>$a = $a + 1</code> <code>$a--</code> Decremento Decrementa <code>$a</code> en una unidad. Equivalente a <code>$a = $a - 1</code> <p>Prioridad de los operadores</p> <p>Recuerda la prioridad. Primero los par\u00e9ntesis, luego la negaci\u00f3n (<code>!</code>), productos/divisiones, sumas/restas, comparaciones, l\u00f3gicos y por \u00faltimo se realiza la asignaci\u00f3n. M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/language.operators.precedence.php</p> <p>Autoevaluaci\u00f3n</p> <p>Si <code>$a=5</code> y <code>$b=4</code>, averigua el valor de <code>$c</code> si <code>$c = $a*2 &gt; $b+5 &amp;&amp; !($b&lt;&gt;4)</code></p>"},{"location":"Moduls/DWES/UT02PHP.html#trabajando-con-formularios","title":"Trabajando con formularios","text":"<p>Los datos se env\u00edan via URL con el formato <code>var1=valor1&amp;var2=valor2\u2026</code>. Por ejemplo: <code>ejemplo.php?nombre=Bruce+apellido1=Wayne</code></p> <p>Se divide en dos pasos:</p> <ol> <li>Generar un formulario con <code>action='archivo.php' method='GET'</code></li> <li>En el archivo <code>.php</code> leer los datos con <code>$_GET['nombreVar']</code></li> </ol> <p>Vamos a separar siempre que podamos el c\u00f3digo HTML del de PHP.</p> <p>Por ejemplo, el formulario lo colocamos en <code>saluda.html</code>:</p> <pre><code>&lt;form action=\"saluda.php\" method=\"get\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre: &lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;label for=\"apellido1\"&gt;Primer apellido:&lt;/label&gt; \n    &lt;input type=\"text\" name=\"apellido1\" id=\"apellido1\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;input type=\"submit\" value=\"enviar\"&gt;&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> <p>Y recogemos los datos en <code>saluda.php</code>:</p> <pre><code>&lt;?php\n$nombre = $_GET[\"nombre\"];\n$apellido1 = $_GET[\"apellido1\"];\n\necho \"Hola $nombre $apellido1\";\n?&gt;\n</code></pre> <p>Si lo quisi\u00e9ramos realizar todo en un \u00fanico archivo (lo cual no es recomendable), podemos hacerlo as\u00ed:</p> <pre><code>&lt;form action=\"\" method=\"get\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre: &lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;label for=\"apellido1\"&gt;Primer apellido:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"apellido1\" id=\"apellido1\"&gt;&lt;/p&gt;\n    &lt;input type=\"submit\" value=\"enviar\"&gt;\n&lt;/form&gt;\n&lt;p&gt;\n    &lt;?php\n    if(isset($_GET['nombre'])) {\n        $nombre = $_GET[\"nombre\"];\n        $apellido1 = $_GET[\"apellido1\"];\n\n        echo \"Hola $nombre $apellido1\";\n    }\n    ?&gt;\n&lt;/p&gt;\n</code></pre> <p>El trabajo con formularios lo estudiaremos en profundidad en la unidad 4, y veremos que adem\u00e1s de <code>GET</code>, podemos enviar los datos con <code>POST</code>.</p>"},{"location":"Moduls/DWES/UT02PHP.html#condiciones","title":"Condiciones","text":"<p>La condici\u00f3n simple se realiza mediante la instrucci\u00f3n <code>if</code>. Entre par\u00e9ntesis se pone la condici\u00f3n que se evalua a <code>true</code> o <code>false</code>. Si no se ponen llaves, en vez de abrir un bloque, se ejecutar\u00e1 s\u00f3lo la siguiente instrucci\u00f3n.</p> <p>Siempre llaves</p> <p>Es recomendable poner llaves siempre aunque en el momento de codificar s\u00f3lo haya una \u00fanica instrucci\u00f3n. De este modo, se queda preparado para a\u00f1adir m\u00e1s contenido en el futuro sin provocar bugs.</p> <pre><code>&lt;?php\n$hora = 8; // La hora en formato de 24 horas\nif ($hora === 8) {\n    echo \"Suena el despertador.\";\n}\necho \"&lt;br&gt;\";\nif ($hora === 8)\n    echo \"Suena el despertador.\";\n?&gt;\n</code></pre> <p>Las condiciones compuesta mediante <code>if-else</code>:</p> <pre><code>&lt;?php\n$hora = 17; // La hora en formato de 24 horas\nif ($hora &lt;= 12) {\n    echo \"Son las \" . $hora . \" de la ma\u00f1ana\";\n} else {\n    echo \"Son las \" . ($hora - 12) . \" de la tarde\";\n}\n?&gt;\n</code></pre> <p>Las condiciones anidadas mediante <code>if-else if-else</code>:</p> <pre><code>&lt;?php\n$hora = 14; // La hora en formato de 24 horas\nif ($hora === 8) {\n    echo \"Es la hora de desayunar.\";\n} else if ($hora === 14) {\n    echo \"Es la hora de la comida.\";\n} else if ($hora === 21) {\n    echo \"Es la hora de la cena.\";\n} else {\n    echo \"Ahora no toca comer.\";\n}\n?&gt;\n</code></pre> <p>La sentencia <code>switch</code> tambi\u00e9n permite trabajar con condiciones m\u00faltiples:</p> <pre><code>&lt;?php\n$hora = 14; // La hora en formato de 24 horas\nswitch ($hora) {\n    case 9:\n        echo \"Es la hora de desayunar.\";\n        break;\n    case 14:\n        echo \"Es la hora de la comida.\";\n        break;\n    case 21:\n        echo \"Es la hora de la cena.\";\n        break;\n    default:\n        echo \"Ahora no toca comer\";\n}\n?&gt;\n</code></pre> <p>No olvides el <code>break</code></p> <p>Un error muy com\u00fan es olvidar la instrucci\u00f3n <code>break</code> tras cada caso. Si no lo ponemos, ejecutar\u00e1 el siguiente caso autom\u00e1ticamente.</p> <p>Finalmente, tambi\u00e9n tenemos el operador ternario <code>condici\u00f3n ? valorTrue : valorFalse</code>:</p> <pre><code>&lt;?php\n$hora = 14;\n$formato = ($hora &gt; 12) ? 24 : 12;\necho \"El formato es de $formato horas\"\n?&gt;\n</code></pre> <p>Si queremos comprobar si una variable tiene valor y si no darle un valor determinado, usaremos el operador <code>?:</code> (se conoce como el operador Elvis - https://en.wikipedia.org/wiki/Elvis_operator) con la sint\u00e1xis <code>expresi\u00f3n ?: valorSiVacio</code>:</p> <pre><code>&lt;?php\n$nombre = $_GET['nombre'] ?: \"desconocido\"\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#bucles","title":"Bucles","text":"<p>Mediante la instrucci\u00f3n <code>while</code>:</p> <pre><code>&lt;?php\n$i = 1;\nwhile ($i &lt;= 10) {\n    echo \"L\u00ednea \" . $i;\n    echo \"&lt;br&gt;\";\n    $i++;\n}\n?&gt;\n</code></pre> <p>Mediante la instrucci\u00f3n <code>do-while</code>:</p> <pre><code>&lt;?php\ndo {\n    $dado = rand(1, 6);\n    // rand() devuelve un valor aleatorio \n    echo \"Tirando el dado... \";\n    echo \"ha salido un \" . $dado . \".\";\n    echo \"&lt;br&gt;\";\n} while ($dado != 5);\necho \"\u00a1Bien! Saco una ficha de casa.\";\n?&gt;\n</code></pre> <p>Mediante la instrucci\u00f3n <code>for</code>:</p> <pre><code>&lt;?php\n// Bucle ascendente\nfor ($i = 1; $i &lt;= 10; $i++) {\n    echo \"L\u00ednea \" . $i;\n    echo \"&lt;br&gt;\";\n}\n\n// Bucle descendente\nfor ($i = 10; $i &gt;= 0; $i--) {\n    echo \"L\u00ednea \" . $i;\n    echo \"&lt;br&gt;\";\n}\n?&gt;\n</code></pre> <p>M\u00e1s adelante estudiaremos el bucle <code>foreach</code> para recorrer arrays.</p> <p>PHP, del mismo modo que Java y C, permite romper los bucles mediante la instrucci\u00f3n <code>break</code>. A su vez, <code>continue</code> permite saltar a la siguiente iteraci\u00f3n.</p> <p>Si puedes, evita <code>break</code> y <code>continue</code></p> <p>Personalmente, no me gusta su uso. Prefiero el uso de variables flag para controlar la salida de los bucles. Por ejemplo:</p> <pre><code>&lt;?php\n$salir = false;\nfor ($i = 1; $i &lt;= 10 &amp;&amp; !$salir; $i++) {\n  if ($i === 5) {\n    echo \"Salgo cuando i=5\";\n    $salir = true;\n  }\n}\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#arrays","title":"Arrays","text":"<p>Para almacenar datos compuestos, podemos utilizar tanto arrays sencillos como arrays asociativos (similares a un mapa). En realidad todos los arrays son mapas ordenados compuestos de pares clave-valor.</p> <p>Cuidado con mezclar tipos</p> <p>Como el tipado es din\u00e1mico, nuestros arrays pueden contenedor datos de diferentes tipos. No se recomienda mezclar los tipos.</p> <p>Del mismo modo que Java, se definen mediante corchetes, son 0-index, y se puede asignar un valor a un posici\u00f3n determinada:</p> <pre><code>&lt;?php\n$frutas = array(\"naranja\", \"pera\", \"manzana\");\n\n$frutas2 = [\"naranja\", \"pera\", \"manzana\"];\n\n$frutas3 = [];\n$frutas3[0] = \"naranja\";\n$frutas3[1] = \"pera\";\n$frutas3[] = \"manzana\"; // lo a\u00f1ade al final\n</code></pre> <p>Podemos obtener el tama\u00f1o del array mediante la funci\u00f3n <code>count(array)</code>. Para recorrer el array haremos uso de un bucle <code>for</code>:</p> <pre><code>&lt;?php\n$tam = count($frutas); // tama\u00f1o del array\n\nfor ($i=0; $i&lt;count($frutas); $i++) {\n    echo \"Elemento $i: $frutas[$i] &lt;br /&gt;\";\n}\n</code></pre> <p>Otra forma de recorrer los arrays, incluso m\u00e1s elegante, es hacer uso de <code>foreach</code>. Su sintaxis es <code>foreach (array as elemento)</code>:</p> <pre><code>&lt;?php\n// Mediante foreach no necesitamos saber el tama\u00f1o del array\nforeach ($frutas as $fruta) {\n    echo \"$fruta &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#arrays-asociativos","title":"Arrays asociativos","text":"<p>Cada elemento es un par clave-valor. En vez de acceder por la posici\u00f3n, lo hacemos mediante una clave. As\u00ed pues, para cada clave se almacena un valor.</p> <p>A la hora de recorrer este tipo de arrays, mediante <code>foreach</code> separamos cada elemento en una pareja <code>clave =&gt; valor</code>:</p> <pre><code>&lt;?php\n$capitales = [\"Italia\" =&gt; \"Roma\",\n    \"Francia\" =&gt; \"Paris\",\n    \"Portugal\" =&gt; \"Lisboa\"];\n$capitalFrancia = $capitales[\"Francia\"]; // se accede al elemento por la clave, no la posici\u00f3n\n\n$capitales[\"Alemania\"] = \"Berl\u00edn\"; // a\u00f1adimos un elemento\n\necho \"La capital de Francia es $capitalFrancia &lt;br /&gt;\";\necho \"La capital de Francia es {$capitales[\"Francia\"]} &lt;br /&gt;\";\n\n$capitales[] = \"Madrid\"; // se a\u00f1ade con la clave 0 !!! \u00a1\u00a1\u00a1No asignar valores sin clave!!!\n\nforeach ($capitales as $valor) { // si recorremos un array asociativo, mostraremos los valores\n    echo \"$valor &lt;br /&gt;\";\n}\n\nforeach ($capitales as $pais =&gt; $ciudad) { // separamos cada elemento en clave =&gt; valor\n    echo \"$pais : $ciudad &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#operaciones","title":"Operaciones","text":"<p>Las operaciones m\u00e1s importantes que podemos realizar con arrays son:</p> <ul> <li><code>print_r($array)</code>: muestra el contenido de todo el <code>$array</code>. Si queremos mostrar el contenido con un formato determinado, hemos de recorrer el array con <code>foreach</code>.</li> <li><code>var_dump($mixed)</code>: muestra el contenido del elemento recibido. Muestra m\u00e1s informaci\u00f3n que <code>print_r</code>.</li> <li><code>$elem = array_pop($array)</code>: elimina el \u00faltimo <code>$elemento</code></li> <li><code>array_push($array, $elem)</code>: a\u00f1ade un <code>$elemento</code> al final</li> <li><code>$booleano = in_array($elem, $array)</code>: averigua si <code>$elem</code> est\u00e1 en el <code>$array</code></li> </ul> PHPConsola <pre><code>&lt;?php\n$frutas = [\"naranja\", \"pera\", \"manzana\"];\n\narray_push($frutas, \"pi\u00f1a\");\nprint_r($frutas);\n\n$ultFruta = array_pop($frutas);\nif (in_array(\"pi\u00f1a\", $frutas)) {\n    echo \"&lt;p&gt;Queda pi\u00f1a&lt;/p&gt;\";\n} else {\n    echo \"&lt;p&gt;No queda pi\u00f1a&lt;/p&gt;\";\n}\nprint_r($frutas);\n</code></pre> <pre><code>Array\n(\n  [0] =&gt; naranja\n  [1] =&gt; pera\n  [2] =&gt; manzana\n  [3] =&gt; pi\u00f1a\n)\n&lt;p&gt;No queda pi\u00f1a&lt;/p&gt;\nArray\n(\n  [0] =&gt; naranja\n  [1] =&gt; pera\n  [2] =&gt; manzana\n)\n</code></pre> <ul> <li><code>$claves = array_keys($array)</code>: devuelve las claves del <code>$array</code> asociativo</li> <li><code>$tam = count($array)</code>: devuelve el tama\u00f1o de <code>$array</code></li> <li><code>sort($array)</code>: ordena los elementos del <code>$array</code></li> <li><code>isset($array[elemento])</code>: indica si existe/tiene valor elemento dentro del array</li> <li><code>unset($array[elemento])</code>: elimina el elemento del array (deja un hueco)</li> </ul> PHPConsola <pre><code>&lt;?php\n$capitales = array(\"Italia\" =&gt; \"Roma\",\n\"Francia\" =&gt; \"Paris\",\n\"Portugal\" =&gt; \"Lisboa\");\n\n$paises = array_keys($capitales);\nprint_r($paises);\nsort($paises);\nprint_r($paises);\n\nunset($capitales[\"Francia\"]);\nprint_r($capitales);\n</code></pre> <pre><code>Array\n(\n  [0] =&gt; Italia\n  [1] =&gt; Francia\n  [2] =&gt; Portugal\n)\nArray\n(\n  [0] =&gt; Francia\n  [1] =&gt; Italia\n  [2] =&gt; Portugal\n)\nArray\n(\n  [Italia] =&gt; Roma\n  [Portugal] =&gt; Lisboa\n)\n</code></pre> <p>Al asignar un array a otro se realiza una copia. Cuidado con esta operaci\u00f3n que puede consumir muchos recursos.</p> PHPConsola <pre><code>&lt;?php\n$nombres = [\"Juan\", \"Ana\", \"Pedro\", \"Laura\"];\n$copia = $nombres;\nsort($nombres);\nprint_r($nombres);\nprint_r($copia);\n</code></pre> <pre><code>Array\n(\n    [0] =&gt; Ana\n    [1] =&gt; Juan\n    [2] =&gt; Laura\n    [3] =&gt; Pedro\n)\nArray\n(\n    [0] =&gt; Juan\n    [1] =&gt; Ana\n    [2] =&gt; Pedro\n    [3] =&gt; Laura\n)\n</code></pre> <p>Existen much\u00edsimas m\u00e1s funciones para trabajar con arrays. Puedes consultar roda la informaci\u00f3n en la documentaci\u00f3n oficial.</p> <p>Art\u00edculos para profundizar en las operaciones con arrays</p> <ul> <li>Un art\u00edculo muy completo (en ingl\u00e9s) de C\u00f3mo trabajar con arrays en PHP de la manera correcta.  </li> <li>Otro art\u00edculo recomendable (en ingl\u00e9s) es C\u00f3mo ordenar arrays en PHP.</li> </ul>"},{"location":"Moduls/DWES/UT02PHP.html#arrays-bidimensionales","title":"Arrays bidimensionales","text":"<p>Consiste en un array de arrays, ya sean arrays secuenciales o asociativos. Puede haber N dimensiones.</p> <pre><code>&lt;?php\n$persona[\"nombre\"] = \"Bruce Wayne\";\n$persona[\"telefonos\"] = [\"966 123 456\", \"636 636 636\"]; // array de arrays ordinarios\n$persona[\"profesion\"] = [\"dia\" =&gt; \"fil\u00e1ntropo\", \"noche\" =&gt; \"caballero oscuro\"]; // array de arrays asociativos\n\necho $persona['nombre'].\" por la noche trabaja de \".$persona['profesion']['noche'];\n</code></pre> <p>Combinando los arrays asociativos en varias dimensiones podemos almacenar la informaci\u00f3n como si fuera una tabla:</p> <pre><code>&lt;?php\n$menu1 = [\"Plato1\" =&gt; \"Macarrones con queso\", \"Plato2\" =&gt; \"Pescado asado\", \"Bebida\" =&gt; \"Coca-Cola\", \"Postre\" =&gt; \"Helado de vainilla\"];\n$menu2 = [\"Plato1\" =&gt; \"Sopa\", \"Plato2\" =&gt; \"Lomo con patatas\", \"Bebida\" =&gt; \"Agua\", \"Postre\" =&gt; \"Arroz con leche\"];\n$menus = [$menu1, $menu2]; // creamos un array a partir de arrays asociativos\n\nforeach ($menus as $menudeldia) {\n  echo \"Men\u00fa del d\u00eda&lt;br/&gt;\";\n\n  foreach ($menudeldia as $platos =&gt; $comida) {\n    echo \"$platos: $comida &lt;br/&gt;\";\n  }\n}\n\n// Para acceder a un elemento concreto se anidan los corchetes\n$postre0 = $menus[0][\"Postre\"];\n</code></pre> <p>Aunque pueda parecer una buena idea crear este tipo de estructuras, es mejor utilizar objetos conjuntamente con arrays (posiblemente arrays de otros objetos) para crear estructuras complejas que permitan modelar mejor los problemas.</p>"},{"location":"Moduls/DWES/UT02PHP.html#funciones","title":"Funciones","text":"<p>Al no declararse los tipos de datos, los par\u00e1metros de las funciones no tienen tipo ni se indica el tipo de dato que devuelven. El paso de par\u00e1metros se realiza por valor, es decir, se realiza una copia de la variable.</p> <pre><code>&lt;?php\nfunction nombreFuncion($par1, $par2, ...) {\n  // c\u00f3digo\n  return $valor;\n}\n\n$resultado = nombreFuncion($arg1, $arg2, \u2026);\n?&gt;\n</code></pre> <p>Por ejemplo:</p> <pre><code>&lt;?php\nfunction diaSemana() {\n    $semana = [ \"lunes\", \"martes\", \"mi\u00e9rcoles\",\n        \"jueves\", \"viernes\", \"s\u00e1bado\", \"domingo\" ];\n    $dia = $semana[rand(0, 6)];\n    return $dia;\n}\n\n$diaCine = diaSemana();\necho \"El pr\u00f3ximo $diaCine voy al cine.\";\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#parametros-por-referencia","title":"Par\u00e1metros por referencia","text":"<p>Si queremos pasar un par\u00e1metro por referencia, en la declaraci\u00f3n de la funci\u00f3n, indicaremos los par\u00e1metros mediante el operador <code>&amp;</code> para indicar la direcci\u00f3n de memoria de la variable.</p> <pre><code>&lt;?php\nfunction duplicarPorValor($argumento) {\n    $argumento = $argumento * 2;\n    echo \"Dentro de la funci\u00f3n: $argumento.&lt;br&gt;\";\n}\nfunction duplicarPorReferencia(&amp;$argumento) {\n    $argumento = $argumento * 2;\n    echo \"Dentro de la funci\u00f3n: $argumento.&lt;br&gt;\";\n}\n\n$numero1 = 5;\necho \"Antes de llamar: $numero1.&lt;br&gt;\";\nduplicarPorValor($numero1);\necho \"Despu\u00e9s de llamar: $numero1.&lt;br&gt;\";\necho \"&lt;br&gt;\";\n\n$numero2 = 7;\necho \"Antes de llamar: $numero2.&lt;br&gt;\";\nduplicarPorReferencia($numero2);\necho \"Despu\u00e9s de llamar: $numero2.&lt;br&gt;\";\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#parametros-por-defecto-opcionales","title":"Par\u00e1metros por defecto / opcionales","text":"<p>Permiten asignar valores en la declaraci\u00f3n, y posteriormente, dejar el argumento en blanco.</p> <pre><code>&lt;?php\nfunction obtenerCapital($pais = \"todos\") {\n    $capitales = array(\"Italia\" =&gt; \"Roma\",\n    \"Francia\" =&gt; \"Paris\",\n    \"Portugal\" =&gt; \"Lisboa\");\n\n    if ($pais == \"todos\") {\n        return array_values($capitales);\n    } else {\n        return $capitales[$pais];\n    }\n}\n\nprint_r(obtenerCapital());\necho \"&lt;br/&gt;\";\necho obtenerCapital(\"Francia\");\n</code></pre> <p>En el caso de convivir con otro tipo de par\u00e1metros, los par\u00e1metros que tienen el valor asignado por defecto siempre se colocan al final.</p> <pre><code>&lt;?php\nfunction saluda($nombre, $prefijo = \"Sr\") {\n    echo \"Hola \".$prefijo.\" \".$nombre;\n}\n\nsaluda(\"Aitor\", \"Mr\");\nsaluda(\"Aitor\");\nsaluda(\"Marina\", \"Srta\");\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#parametros-variables","title":"Par\u00e1metros variables","text":"<p>Podemos tener funciones donde en la declaraci\u00f3n no indiquemos la cantidad de datos de entrada.</p> <ul> <li><code>$arrayArgs = func_get_args();</code> \u2192 Obtiene un array con los par\u00e1metros</li> <li><code>$cantidad = func_num_args();</code> \u2192 Obtiene la cantidad de par\u00e1metros recibidos</li> <li><code>$valor = func_get_arg(numArgumento);</code> \u2192 Obtiene el par\u00e1metro que ocupa la posici\u00f3n <code>numArgumento</code>.</li> </ul> <p>Estas funciones no se pueden pasar como par\u00e1metro a otra funci\u00f3n (como funciones variable, que veremos m\u00e1s adelante). Para ello, debemos guardar previamente la funci\u00f3n en una variable.</p> <pre><code>&lt;?php\nfunction sumaParametros() {\n    if (func_num_args() == 0) {\n        return false;\n    } else {\n        $suma = 0;\n\n        for ($i = 0; $i &lt; func_num_args(); $i++) {\n            $suma += func_get_arg($i);\n        }\n\n        return $suma;\n    }\n}\n\necho sumaParametros(1, 5, 9); // 15\n?&gt;\n</code></pre> <p>Desde PHP 5.6, se puede utilizar el operador <code>...</code> (variadics) el cual \"disfraza\" los par\u00e1metros como un array:</p> <pre><code>&lt;?php\nfunction sumaParametrosMejor(...$numeros) {\n    if (count($numeros) == 0) {\n        return false;\n    } else {\n        $suma = 0;\n\n        foreach ($numeros as $num) {\n            $suma += $num;\n        }\n\n        return $suma;\n    }\n}\n\necho sumaParametrosMejor(1, 5, 9); // 15\n?&gt;\n</code></pre> <p>M\u00e1s usos de <code>...</code></p> <p>Tambi\u00e9n se puede utilizar para dividir un array en variables separadas para proporcionar argumentos</p> <pre><code>&lt;?php\nfunction suma($a, $b) {\n    return $a + $b;\n}\n\necho suma(...[1, 5]).\"&lt;br /&gt;\";\n\n$a = [1, 5];\necho suma(...$a);\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#argumentos-con-nombre","title":"Argumentos con nombre","text":"<p>Desde PHP 8.0 podemos pasar los argumentos con el nombre (adem\u00e1s de por posici\u00f3n, como hemos hecho hasta ahora). Los argumentos con nombre se pasan poniendo el nombre como prefijo del par\u00e1metros separado por dos puntos: <code>$resultado = funcion( arg1 : valor1, arg2 : valor2);</code></p> <p>Esta caracter\u00edstica complementa los parametros opcionales permitiendonos saltar su valor:</p> <pre><code>&lt;?php\nfunction funcionArgumentosNombre($a, $b = 2, $c = 4) {\n  echo \"$a $b $c\";\n}\nfuncionArgumentosNombre(c: 3, a: 1); // \"1 2 3\"\n</code></pre> <p>Tanto los par\u00e1metros opcionales como los obligatorios pueden tener nombre, pero lo argumentos con nombre se tienen que poner despu\u00e9s de los que no lo tienen.</p> <pre><code>&lt;?php\nfuncionArgumentosNombre(1, c: 3); // \"1 2 3\"\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#funciones-tipadas","title":"Funciones tipadas","text":"<p>Desde PHP7 en las funciones, tanto los par\u00e1metro como su devoluci\u00f3n, permiten la definici\u00f3n de tipos. Esto se conoce como strict_types (tipificaci\u00f3n estricta) y hay que definirlo en la primera l\u00ednea de cada archivo <code>.php</code> para que el propio interprete PHP compruebe los tipos y lance errores si los tipos son incorrectos, mediante la sentencia</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n</code></pre> <p>As\u00ed pues, vamos a  definir los tipos de los par\u00e1metros y de los valores devueltos mediante los tipos: <code>int</code>, <code>float</code>, <code>string</code>, <code>bool</code>, <code>object</code> y <code>array</code>.</p> <p>Si una funci\u00f3n no devuelve nada se indica mediante el tipo <code>void</code>.</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n\nfunction suma(int $a, int $b) : int {\n    return $a + $b;\n}\n\n$num = 33;\necho suma(10, 30);\necho suma(10, $num);\necho suma(\"10\", 30); // error por tipificaci\u00f3n estricta, sino dar\u00eda 40\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#alcance","title":"Alcance","text":"<p>Las variables definidas fuera de las funciones tienen alcance global: accesibles desde cualquier funci\u00f3n. Los par\u00e1metros de una funci\u00f3n y las variables declaradas dentro de una funci\u00f3n (se conocen como variables locales) s\u00f3lo son accesibles desde dentro de la misma funci\u00f3n \u2192 alcance de funci\u00f3n.</p> <p>En caso de conflicto, tienen prioridad las variables locales. Para evitar el conflicto, dentro de la funci\u00f3n, podemos declarar la variable como <code>global</code>.</p> Alcance localAlcance global <pre><code>&lt;?php\nfunction miCiudad() {\n    $ciudad = \"Elche\";\n    echo \"Dentro de la funci\u00f3n: $ciudad.&lt;br&gt;\";\n}\n\n$ciudad = \"Alicante\";\necho \"Antes de la funci\u00f3n: $ciudad.&lt;br&gt;\";\nmiCiudad();\necho \"Despu\u00e9s de la funci\u00f3n: $ciudad.&lt;br&gt;\"\n?&gt;\n</code></pre> <pre><code>&lt;?php\nfunction miCiudad() {\n    global $ciudad;\n    $ciudad = \"Elche\";\n    echo \"Dentro de la funci\u00f3n: $ciudad.&lt;br&gt;\";\n}\n\n$ciudad = \"Alicante\";\necho \"Antes de llamar: $ciudad.&lt;br&gt;\";\nmiCiudad();\necho \"Despu\u00e9s de llamar: $ciudad.&lt;br&gt;\"\n?&gt;\n</code></pre> <p>No globales</p> <p>Por favor, hay que evitar el uso de variables globales dentro de las funciones.</p> <p>En el caso de necesitarlas, es mejor pasarlas como par\u00e1metro a las funciones.</p>"},{"location":"Moduls/DWES/UT02PHP.html#funciones-variable","title":"Funciones variable","text":"<ul> <li>Permite asignar una funci\u00f3n a una variable.</li> <li>Nombre de la funci\u00f3n entre comillas.</li> <li>Si una variable va seguida de par\u00e9ntesis, PHP buscar\u00e1 una funci\u00f3n con su valor.</li> </ul> <pre><code>&lt;?php\n$miFuncionSuma = \"suma\";\necho $miFuncionSuma(3,4); // invoca a la funci\u00f3n suma\n?&gt;\n</code></pre> <p>Funciones an\u00f3nimas</p> <p>PHP permite la definici\u00f3n y uso de funciones an\u00f3nimas, es decir, funciones que no tienen nombre, y se utilizan principalmente para gestionar los callbacks. Este tipo de funciones se utiliza mucho en Javascript para gestionar los eventos y promesas.</p> <pre><code>&lt;?php\n$anonima = function() {\n    echo \"Hola\";\n};\n$anonima();\n\n$anonimaConParametro = function($nombre) {\n    echo \"Hola \".$nombre;\n};\n$anonimaConParametro(\"Aitor\");\n\n// Uso de variables externas a la funci\u00f3n an\u00f3nima --&gt; `use`\n$mensaje = \"Hola\";\n$miClosure = function() use ($mensaje) {\n    echo $mensaje;\n};\n$miClosure();\n\n// Uso de par\u00e1metros\n$holaPHP = function($arg) use ($mensaje) {\n    echo $mensaje.\" \".$arg;\n};\n$holaPHP(\"PHP\");\n?&gt;\n</code></pre> <p>Desde PHP 7.4 se han introducido las funciones flecha (arrow functions) para simplificar su definici\u00f3n y uso.</p> <p>Ten\u00e9is m\u00e1s informaci\u00f3n sobre funciones an\u00f3nimas y flecha en el siguiente art\u00edculo (en ingl\u00e9s): Funciones an\u00f3nimas y flecha en PHP</p>"},{"location":"Moduls/DWES/UT02PHP.html#biblioteca-de-funciones","title":"Biblioteca de funciones","text":"<p>Podemos agrupar un conjunto de funciones en un archivo, para permitir su reutilizaci\u00f3n. Posteriormente, se incluye con:</p> <ul> <li><code>include(archivo);</code> / <code>include_once(archivo);</code></li> <li><code>require(archivo);</code> / <code>require_once(archivo);</code></li> </ul> <p>Si no encuentra el archivo, <code>require</code> lanza un error fatal, <code>include</code> lo ignora Las funciones <code>_once</code> s\u00f3lo se cargan una vez, si ya ha sido incluida previamente, no lo vuelve a hacer, evitando bucles.</p> <p>Por ejemplo, colocamos las funciones en el archivo <code>biblioteca.php</code>:</p> <pre><code>&lt;?php\nfunction suma(int $a, int $b) : int {\n    return $a + $b;\n}\n\nfunction resta(int $a, int $b) : int {\n    return $a - $b;\n}\n?&gt;\n</code></pre> <p>Y posteriormente en otro archivo:</p> <pre><code>&lt;?php \ninclude_once(\"biblioteca.php\");\necho suma(10,20);\necho resta(40,20);\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#plantillas-mediante-include","title":"Plantillas mediante <code>include</code>","text":"<p>Mediante el uso de la instrucci\u00f3n <code>include</code> tambi\u00e9n podemos separar fragmentos de c\u00f3digo PHP/HTML que queramos reutilizar en nuestros sitios web y crear un sistema muy sencillo de plantillas. Por ejemplo, vamos a separar una p\u00e1gina en tres partes, primero la parte superior en <code>encabezado.php</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;&lt;?= $titulo ?&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n</code></pre> <p>La parte de abajo, por ejemplo, solo va a contener HTML y la colocamos en <code>pie.html</code>: <pre><code>&lt;footer&gt;Aitor Medrano&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Y luego nos centramos \u00fanicamente en el contenido que cambia en <code>pagina.php</code>:</p> <pre><code>&lt;?php\n$titulo = \"P\u00e1gina con includes\";\ninclude(\"encabezado.php\");\n?&gt;\n&lt;h1&gt;&lt;?= $titulo ?&gt;&lt;/h1&gt;\n&lt;?php\ninclude(\"pie.html\");\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#funciones-predefinidas","title":"Funciones predefinidas","text":"<p>El lenguaje ofrece un abanico de funciones ya definidas, agrupadas por su funcionalidad: https://www.php.net/manual/es/funcref.php</p>"},{"location":"Moduls/DWES/UT02PHP.html#cadenas","title":"Cadenas","text":"<p>Ya hemos visto que se pueden crear con comillas simples (<code>''</code>, sin interpretaci\u00f3n) o comillas dobles (<code>\"\"</code>, interpretan el contenido y las secuencias de escape <code>\\n</code>, <code>\\t</code>, <code>\\$</code>, <code>{</code>, \u2026 - magic quotes)</p> <pre><code>&lt;?php\n\"Me llamo $nombre\"\n\"Son 30 {$moneda}s\"\n?&gt;\n</code></pre> <p>Se acceden a los caracteres como si fuera un array.</p> <pre><code>&lt;?php\n$cadena = \u201cYo soy Batman\u201d;\n$ygriega = $cadena[0];\n?&gt;\n</code></pre> <p>Adem\u00e1s de <code>echo</code>, podemos mostrar las cadenas mediante la funci\u00f3n <code>printf</code>. Esta funci\u00f3n viene heredada del lenguaje C, y en la cadena se indica el tipo de dato a formatear y genera una salida formateada. Si quiero guardar el resultado en una variable, podemos utilizar <code>sprintf</code>.</p> <pre><code>&lt;?php\n$num = 33;\n$nombre = \"Larry Bird\";\nprintf(\"%s llevaba el n\u00famero %d\", $nombre, $num); // %d -&gt; n\u00famero decimal, %s -&gt; string\n$frase = sprintf(\"%s llevaba el n\u00famero %d\", $nombre, $num);\necho $frase\n?&gt;\n</code></pre> <p>Ten\u00e9is muchos m\u00e1s ejemplos en https://www.w3schools.com/php/func_string_printf.asp</p>"},{"location":"Moduls/DWES/UT02PHP.html#operaciones-basicas","title":"Operaciones b\u00e1sicas","text":"<p>Todas las funciones se pueden consultar en https://www.php.net/manual/es/ref.strings.php</p> <p>Las m\u00e1s importantes son:</p> <ul> <li><code>strlen</code>: obtiene la longitud de una cadena y devuelve un n\u00famero entero</li> <li><code>substr</code>: devuelve una subcadena de la cadena original</li> <li><code>str_replace</code>: reemplaza caracteres en una cadena</li> <li><code>strtolower</code> y <code>strtoupper</code>: Transforman una cadena de caracteres en la misma cadena en min\u00fasculas o may\u00fasculas respectivamente.</li> </ul> <pre><code>&lt;?php\n$cadena = \"El caballero oscuro\";\n$tam = strlen($cadena);\necho \"La longitud de '$cadena' es: $tam &lt;br /&gt;\";\n\n$oscuro = substr($cadena, 13); // desde 13 al final\n$caba = substr($cadena, 3, 4); // desde 3, 4 letras\n$katman = str_replace(\"c\", \"k\", $cadena);\necho \"$oscuro $caba ahora es $katman\";\n\necho \"Grande \".strtoupper($cadena);\n?&gt;\n</code></pre> <p>Si queremos trabajar con caracteres ASCII de forma individual, son \u00fatiles las funciones:</p> <ul> <li><code>chr</code>: obtiene el car\u00e1cter a partir de un ASCII</li> <li><code>ord</code>: obtiene el ASCII de un car\u00e1cter</li> </ul> <pre><code>&lt;?php\nfunction despues(string $letra): string {\n    $asciiLetra = ord($letra);\n    return chr($asciiLetra + 1);\n}\n\necho despues(\"B\");\n?&gt;\n</code></pre> <p>Si queremos limpiar cadenas, tenemos las funciones:</p> <ul> <li><code>trim</code>: elimina los espacios al principio y al final</li> <li><code>ltrim</code> / <code>rtrim</code> o <code>chop</code>: Elimina los espacios iniciales / finales de una cadena.</li> <li><code>str_pad</code>: rellena la cadenas hasta una longitud especificada y con el car\u00e1cter o caracteres especificados.</li> </ul> <pre><code>&lt;?php\n$cadena = \" Programando en PHP \";\n$limpia = trim($cadena); // \"Programando en PHP\"\n\n$sucia = str_pad($limpia, 23, \".\"); // \"Programando en PHP.....\"\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#comparando-y-buscando","title":"Comparando y buscando","text":"<p>La comparaci\u00f3n de cadenas puede ser con conversi\u00f3n de tipos mediante <code>==</code> o estricta con <code>===</code>. Tambi\u00e9n funcionan los operadores <code>&lt;</code> y <code>&gt;</code> si ambas son cadenas. Al comparar cadenas con valores numericos podemos utilizar:</p> <ul> <li><code>strcmp</code>: 0 iguales, &lt;0 si <code>a&lt;b</code> o &gt;0 si <code>a&gt;b</code></li> <li><code>strcasecmp</code>: las pasa a min\u00fasculas y compara</li> <li><code>strncmp</code> / <code>strncasecmp</code>: compara los N primeros caracteres</li> <li><code>strnatcmp</code>: comparaciones naturales</li> </ul> <pre><code>&lt;?php\n$frase1 = \"Alfa\";\n$frase2 = \"Alfa\";\n$frase3 = \"Beta\";\n$frase4 = \"Alfa5\";\n$frase5 = \"Alfa10\";\n\nvar_dump( $frase1 == $frase2 ); // true\nvar_dump( $frase1 === $frase2 ); // true\nvar_dump( strcmp($frase1, $frase2) ); // 0\nvar_dump( strncmp($frase1, $frase5, 3) ); // 0\nvar_dump( $frase2 &lt; $frase3 ); // true\nvar_dump( strcmp($frase2, $frase3) ); // -1\nvar_dump( $frase4 &lt; $frase5 ); // false\nvar_dump( strcmp($frase4, $frase5) ); // 4 \u2192 f4 &gt; f5\nvar_dump( strnatcmp($frase4, $frase5) ); // -1 \u2192 f4 &lt; f5\n?&gt;\n</code></pre> <p>Si lo que queremos es buscar dentro de una cadena, tenemos:</p> <ul> <li><code>strpos</code> / <code>strrpos</code>: busca en una cadena y devuelve la posici\u00f3n de la primera/\u00faltima ocurrencia.</li> <li><code>strstr</code> / <code>strchr (alias)</code>: busca una cadena y devuelve la subcadena a partir de donde la ha encontrado</li> <li><code>stristr</code>: ignora las may\u00fasculas</li> </ul> <pre><code>&lt;?php\n$frase = \"Quien busca encuentra, eso dicen, a veces\";\n$pos1 = strpos($frase, \",\"); // encuentra la primera coma\n$pos2 = strrpos($frase, \",\"); // encuentra la \u00faltima coma\n$trasComa = strstr($frase, \",\"); // \", eso dicen, a veces\"\n?&gt;\n</code></pre> <p>Si queremos averiguar que contiene las cadenas, tenemos un conojunto de funciones de comprobaciones de tipo, se conocen como las funciones ctype que devuelven un booleano:</p> <ul> <li><code>ctype_alpha</code> \u2192 letras</li> <li><code>ctype_alnum</code> \u2192 alfanum\u00e9ricos</li> <li><code>ctype_digit</code> \u2192 d\u00edgitos</li> <li><code>ctype_punct</code> \u2192 caracteres de puntuaci\u00f3n, sin espacios</li> <li><code>ctype_space</code> \u2192 son espacios, tabulador, salto de l\u00ednea</li> </ul> <pre><code>&lt;?php\n$prueba1 = \"hola\";\n$prueba2 = \"hola33\";\n$prueba3 = \"33\";\n$prueba4 = \",.()[]\";\n$prueba5 = \" ,.()[]\";\n\necho ctype_alpha($prueba1).\"&lt;br&gt;\"; // true\necho ctype_alnum($prueba2).\"&lt;br&gt;\"; // true\necho ctype_digit($prueba3).\"&lt;br&gt;\"; // true\necho ctype_punct($prueba4).\"&lt;br&gt;\"; // true\necho ctype_space($prueba5).\"&lt;br&gt;\"; // false\necho ctype_space($prueba5[0]).\"&lt;br&gt;\"; // true\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#trabajando-con-subcadenas","title":"Trabajando con subcadenas","text":"<p>Si queremos romper las cadenas en trozos, tenemos:</p> <ul> <li><code>explode</code>: convierte en array la cadena mediante un separador.</li> <li><code>implode</code> / <code>join</code>: pasa un array a cadena con un separador</li> <li><code>str_split</code> / <code>chunk_split</code>: pasa una cadena a una array/cadena cada X caracteres</li> </ul> <pre><code>&lt;?php\n$frase = \"Quien busca encuentra, eso dicen, a veces\";\n$partes = explode(\",\", $frase);\n\n$ciudades = [\"Elche\", \"Aspe\", \"Alicante\"];\n$cadenaCiudades = implode(\"&gt;\", $ciudades);\n\n$partes3cadena = chunk_split($frase, 3);\n// Qui \n// en \n// bus \n// ca \n// ...\n$partes3array = str_split($frase, 3);\n// [\"Qui\", \"en \", \"bus\", \"ca \", \"enc\", \u2026] \n?&gt;\n</code></pre> <p>Si queremos trabajar con tokens:</p> <ul> <li><code>strtok(cadena, separador)</code></li> <li>y dentro del bucle: <code>strtok(separador)</code></li> </ul> <p>Finalmente, para separarla en base al formato:</p> <ul> <li><code>sscanf</code>: al rev\u00e9s que <code>sprintf</code>, crea un array a partir de la cadena y el patr\u00f3n.</li> </ul> <p>Finalmente, otras operaciones que podemos realizar para trabajar con subcadenas son:</p> <ul> <li><code>substr_count</code>: n\u00famero de veces que aparece la subcadena dentro de la cadena</li> <li><code>substr_replace</code>: reemplaza parte de la cadena a partir de su posici\u00f3n, y opcionalmente, longitud</li> </ul> <pre><code>&lt;?php\n$batman = \"Bruce Wayne es Batman\";\n$empresa = substr($batman, 6, 5); // Wayne\n$bes = substr_count($batman, \"B\"); // 2\n// Bruce Wayne es camarero\n$camarero1 = substr_replace($batman, \"camarero\", 15);\n$camarero2 = substr_replace($batman, \"camarero\", -6); // quita 6 desde el final\n// Bruno es Batman\n$bruno = substr_replace($batman, \"Bruno\", 0, 11);\n?&gt;\n</code></pre> <p>Tambi\u00e9n disponemos de una serie de funciones que facilitan las codificaciones desde y hacia HTML:</p> <ul> <li><code>htmlentities</code>: convierte a entidades HTML, por ejemplo, <code>\u00e1</code> por <code>&amp;aacute;</code>,  <code>\u00f1</code> por <code>&amp;ntilde;</code>, <code>&lt;</code> por <code>&amp;lt;</code>, etc..</li> <li><code>htmlspecialchars</code>: idem pero solo con los caracteres especiales (<code>&amp;</code>, <code>\"</code>, <code>'</code>, <code>&lt;</code>, <code>&gt;</code>, ...)</li> <li><code>striptags</code>: elimina etiquetas HTML.</li> <li><code>nl2br</code>: cambia saltos de l\u00ednea por <code>&lt;br /&gt;</code>.</li> <li><code>rawurlencode</code> / <code>rawurldecode</code>: codifica/decodifica una URL (espacios, ...).</li> </ul> <p>Estas funciones las utilizaremos en la unidad 4.- Programaci\u00f3n Web.</p>"},{"location":"Moduls/DWES/UT02PHP.html#matematicas","title":"Matem\u00e1ticas","text":"<p>Disponemos tanto de constantes como funciones ya definidas para trabajar con operaciones matem\u00e1ticas: https://www.php.net/manual/es/ref.math.php</p> <ul> <li>Constantes ya definidas<ul> <li><code>M_PI</code>, <code>M_E</code>, <code>M_EULER</code>, <code>M_LN2</code>, <code>M_LOG2E</code></li> <li><code>PHP_INT_MAX</code>, <code>PHP_FLOAT_MAX</code></li> </ul> </li> <li>Funciones de c\u00e1lculo<ul> <li><code>pow</code>, <code>sqrt</code>, <code>log</code>, <code>decbin</code>, <code>bindec</code>, <code>decoct</code>, <code>dechex</code>, <code>base_convert</code>, <code>max</code>, <code>min</code></li> </ul> </li> <li>Funciones trigonom\u00e9tricas<ul> <li><code>sin</code>, <code>cos</code>, <code>tan</code>, <code>deg2rad</code>, <code>rad2deg</code></li> </ul> </li> <li>Funciones para trabajar con n\u00fameros aleatorios<ul> <li><code>rand</code>, <code>mt_rand</code> (m\u00e1s r\u00e1pida)</li> </ul> </li> </ul> <p>Aunque la mayor\u00eda de ellas son muy espec\u00edficas de problemas matem\u00e1ticos / estad\u00edsticos, es muy com\u00fan que tengamos que redondear y/o formatear los c\u00e1lculos antes de mostrarlos al usuario.</p> <p>Mediante la funci\u00f3n <code>number_format(numero, cantidadDecimales, separadorDecimales, separadorMiles)</code> podermos pasar n\u00fameros a cadena con decimales y/o separadores de decimales y/o de miles.</p> <pre><code>&lt;?php\n$nf = 1234.5678;\necho number_format($nf, 2); // 1,234.57\necho number_format($nf, 2, \"M\", \"#\"); // 1#234M57\n?&gt;\n</code></pre> <p>Para redondear, tenemos <code>abs</code> para el valor absoluto y <code>round</code> para redondear, <code>ceil</code> para aproximaci\u00f3n por exceso y <code>floor</code> por defecto.</p> <pre><code>&lt;?php\n$num = 7.7;\n$siete = floor($num);\n$ocho = ceil($num);\n\n$otro = 4.49;\n$cuatro = round($otro);\n$cuatrocinco = round($otro, 1);\n$cinco = round($cuatrocinco);\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#tipos-de-datos","title":"Tipos de datos","text":"<p>Finalmente, para realizar conversiones de datos o si queremos trabajar con tipos de datos, tenemos las siguientes funciones:</p> <ul> <li><code>floatval</code>, <code>intval</code>, <code>strval</code>: devuelve una variable del tipo de la funci\u00f3n indicada</li> <li><code>settype</code>: fuerza la conversi\u00f3n</li> <li><code>gettype</code>: obtiene el tipo</li> <li><code>is_int</code>, <code>is_float</code>, <code>is_string</code>, <code>is_array</code>, <code>is_object</code>: devuelve un booleano a partir del tipo recibido</li> </ul> <pre><code>&lt;?php\n$uno = 1;\nvar_dump(is_int($uno)); // true\n$unofloat = floatval($uno);\nsettype($uno, \"string\");\nvar_dump(is_int($uno)); // false\nvar_dump(is_string($uno)); // true\nsettype($uno, \"float\");\nvar_dump(is_int($uno)); // false\nvar_dump(is_float($uno)); // true\nvar_dump(is_int(intval($uno))); // true\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT02PHP.html#referencias","title":"Referencias","text":"<ul> <li>Manual de PHP</li> <li>PHP en 2020, por Jes\u00fas Amieiro</li> <li>Apuntes de PHP de Bartolom\u00e9 Sintes, profesor del IES Abastos de Valencia</li> <li>Gu\u00eda de Estilo - PSR</li> <li>PHP - La manera correcta</li> </ul>"},{"location":"Moduls/DWES/UT03PHPPOO.html","title":"PHP Orientado a Objetos","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 18 sesiones</p> <p>Resultado de aprendizaje:</p> <ol> <li>Desarrolla aplicaciones Web identificando y aplicando mecanismos para separar el c\u00f3digo de presentaci\u00f3n de la l\u00f3gica de negocio.</li> </ol> <p>Criterios de evaluaci\u00f3n:</p> <ol> <li>Se han identificado las ventajas de separar la l\u00f3gica de negocio de los aspectos de presentaci\u00f3n de la aplicaci\u00f3n. </li> <li>Se han analizado tecnolog\u00edas y mecanismos que permiten realizar esta separaci\u00f3n y sus caracter\u00edsticas principales. </li> <li>Se han utilizado objetos y controles en el servidor para generar el aspecto visual de la aplicaci\u00f3n web en el cliente. </li> <li>Se han utilizado formularios generados de forma din\u00e1mica para responder a los eventos de la aplicaci\u00f3n Web. </li> <li>Se han escrito aplicaciones Web con mantenimiento de estado y separaci\u00f3n de la l\u00f3gica de negocio. </li> <li>Se han aplicado los principios de la programaci\u00f3n orientada a objetos. </li> <li>Se ha probado y documentado el c\u00f3digo.</li> </ol>"},{"location":"Moduls/DWES/UT03PHPPOO.html#clases-y-objetos","title":"Clases y Objetos","text":"<p>PHP sigue un paradigma de programaci\u00f3n orientada a objetos (POO) basada en clases.</p> <p>Un clase es un plantilla que define las propiedades y m\u00e9todos para poder crear objetos. De este manera, un objeto es una instancia de una clase.</p> <p>Tanto las propiedades como los m\u00e9todos se definen con una visibilidad (quien puede acceder)</p> <ul> <li>Privado - <code>private</code>:  S\u00f3lo puede acceder la propia clase.</li> <li>Protegido - <code>protected</code>: S\u00f3lo puede acceder la propia clase o sus descendientes.</li> <li>P\u00fablico - <code>public</code>: Puede acceder cualquier otra clase.</li> </ul> <p>Para declarar una clase, se utiliza la palabra clave <code>class</code> seguido del nombre de la clase. Para instanciar un objeto a partir de la clase, se utiliza <code>new</code>:</p> <pre><code>&lt;?php\nclass NombreClase {\n// propiedades\n// y m\u00e9todos\n}\n\n$ob = new NombreClase();\n</code></pre> <p>Clases con may\u00fascula</p> <p>Todas las clases empiezan por letra may\u00fascula.</p> <p>Cuando un proyecto crece, es normal modelar las clases mediante UML (\u00bfrecord\u00e1is Entornos de Desarrollo?). La clases se representan mediante un cuadrado, separando el nombre, de las propiedades y los m\u00e9todos:</p> <p></p> <p>Una vez que hemos creado un objeto, se utiliza el operador <code>-&gt;</code> para acceder a una propiedad o un m\u00e9todo:</p> <pre><code>$objeto-&gt;propiedad;\n$objeto-&gt;m\u00e9todo(par\u00e1metros);\n</code></pre> <p>Si desde dentro de la clase, queremos acceder a una propiedad o m\u00e9todo de la misma clase, utilizaremos la referencia <code>$this</code>;</p> <pre><code>$this-&gt;propiedad;\n$this-&gt;m\u00e9todo(par\u00e1metros);  \n</code></pre> <p>As\u00ed pues, como ejemplo, codificar\u00edamos una persona en el fichero <code>Persona.php</code> como:</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0setNombre(string $nom)\u00a0{\n        $this-&gt;nombre=$nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n        echo\u00a0$this-&gt;nombre;\n        echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(); // creamos un objeto\n$bruno-&gt;setNombre(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre> <p>Aunque se pueden declarar varias clases en el mismo archivo, es una mala pr\u00e1ctica. As\u00ed pues, cada fichero contedr\u00e1 una sola clase, y se nombrar\u00e1 con el nombre de la clase.</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#encapsulacion","title":"Encapsulaci\u00f3n","text":"<p>Las propiedades se definen privadas o protegidas (si queremos que las clases heredadas puedan acceder).</p> <p>Para cada propiedad, se a\u00f1aden m\u00e9todos p\u00fablicos (getter/setter):</p> <pre><code>public setPropiedad(tipo $param)\npublic getPropiedad() : tipo\n</code></pre> <p>Las constantes se definen p\u00fablicas para que sean accesibles por todos los recursos.</p> <pre><code>&lt;?php\nclass\u00a0MayorMenor\u00a0{\n    private\u00a0int $mayor;\n    private\u00a0int $menor;\n\n    public\u00a0function\u00a0setMayor(int\u00a0$may)\u00a0{\n        $this-&gt;mayor\u00a0=\u00a0$may;\n    }\n\n    public\u00a0function\u00a0setMenor(int\u00a0$men)\u00a0{\n        $this-&gt;menor\u00a0=\u00a0$men;\n    }\n\n    public\u00a0function\u00a0getMayor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;mayor;\n    }\n\n    public\u00a0function\u00a0getMenor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;menor;\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#recibiendo-y-enviando-objetos","title":"Recibiendo y enviando objetos","text":"<p>Es recomendable indicarlo en el tipo de par\u00e1metros. Si el objeto puede devolver nulos se pone <code>?</code> delante del nombre de la clase.</p> <p>Objetos por referencia</p> <p>Los objetos que se env\u00edan y reciben como par\u00e1metros siempre se pasan por referencia.</p> <pre><code>&lt;?php\nfunction\u00a0maymen(array\u00a0$numeros)\u00a0:\u00a0?MayorMenor\u00a0{\n    $a\u00a0=\u00a0max($numeros);\n    $b\u00a0=\u00a0min($numeros);\n\n    $result\u00a0=\u00a0new\u00a0MayorMenor();\n    $result-&gt;setMayor($a);\n    $result-&gt;setMenor($b);\n\n    return\u00a0$result;\n}\n\n$resultado\u00a0=\u00a0\u00a0maymen([1,76,9,388,41,39,25,97,22]);\necho\u00a0\"&lt;br&gt;Mayor:\u00a0\".$resultado-&gt;getMayor();\necho\u00a0\"&lt;br&gt;Menor:\u00a0\".$resultado-&gt;getMenor();\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#constructor","title":"Constructor","text":"<p>El constructor de los objetos se define mediante el m\u00e9todo m\u00e1gico <code>__construct</code>. Puede o no tener par\u00e1metros, pero s\u00f3lo puede haber un \u00fanico constructor.</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0__construct(string $nom)\u00a0{\n        $this-&gt;nombre = $nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n    \u00a0\u00a0echo\u00a0$this-&gt;nombre;\n    \u00a0\u00a0echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#constructores-en-php-8","title":"Constructores en PHP 8","text":"<p>Una de las grandes novedades que ofrece PHP 8 es la simplificaci\u00f3n de los constructores con par\u00e1metros, lo que se conoce como promoci\u00f3n de las propiedades del constructor.</p> <p>Para ello, en vez de tener que declarar las propiedades como privadas o protegidas, y luego dentro del constructor tener que asignar los par\u00e1metros a est\u00e1s propiedades, el propio constructor promociona las propiedades.</p> <p>Ve\u00e1moslo mejor con un ejemplo. Imaginemos una clase <code>Punto</code> donde queramos almacenar sus coordenadas:</p> <pre><code>&lt;?php\nclass Punto {\n    protected float $x;\n    protected float $y;\n    protected float $z;\n\n    public function __construct(\n        float $x = 0.0,\n        float $y = 0.0,\n        float $z = 0.0\n    ) {\n        $this-&gt;x = $x;\n        $this-&gt;y = $y;\n        $this-&gt;z = $z;\n    }\n}\n</code></pre> <p>En PHP 8, quedar\u00eda del siguiente modo (mucho m\u00e1s corto, lo que facilita su legibilidad):</p> <pre><code>&lt;?php\nclass Punto {\n    public function __construct(\n        protected float $x = 0.0,\n        protected float $y = 0.0,\n        protected float $z = 0.0,\n    ) {}\n}\n</code></pre> <p>El orden importa</p> <p>A la hora de codificar el orden de los elementos debe ser:</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n\nclass NombreClase {\n    // propiedades\n\n    // constructor\n\n    // getters - setters\n\n    // resto de m\u00e9todos\n}\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#clases-estaticas","title":"Clases est\u00e1ticas","text":"<p>Son aquellas que tienen propiedades y/o m\u00e9todos est\u00e1ticos (tambi\u00e9n se conocen como de clase, por que su valor se comparte entre todas las instancias de la misma clase).</p> <p>Se declaran con <code>static</code> y se referencian con <code>::</code>.</p> <ul> <li>Si queremos acceder a un m\u00e9todo est\u00e1tico, se antepone el nombre de la clase: <code>Producto::nuevoProducto()</code>.</li> <li>Si desde un m\u00e9todo queremos acceder a una propiedad est\u00e1tica de la misma clase, se utiliza la referencia <code>self</code>: <code>self::$numProductos</code></li> </ul> <pre><code>&lt;?php\nclass Producto {\n    const IVA = 0.23;\n    private static $numProductos = 0; \n\n    public static function nuevoProducto() {\n        self::$numProductos++;\n    }\n}\n\nProducto::nuevoProducto();\n$impuesto = Producto::IVA;\n</code></pre> <p>Tambi\u00e9n podemos tener clases normales que tengan alguna propiedad est\u00e1tica:</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    const\u00a0IVA\u00a0=\u00a00.23;\n    private\u00a0static\u00a0$numProductos\u00a0=\u00a00;\u00a0\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0__construct(string\u00a0$cod)\u00a0{\n        self::$numProductos++;\n        $this-&gt;codigo\u00a0=\u00a0$cod;\n    }\n\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"El\u00a0producto\u00a0\".$this-&gt;codigo.\" es\u00a0el\u00a0n\u00famero\u00a0\".self::$numProductos;\n    }\n}\n\n$prod1\u00a0=\u00a0new\u00a0Producto(\"PS5\");\n$prod2\u00a0=\u00a0new\u00a0Producto(\"XBOX\u00a0Series\u00a0X\");\n$prod3\u00a0=\u00a0new\u00a0Producto(\"Nintendo\u00a0Switch\");\necho\u00a0$prod3-&gt;mostrarResumen();\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#introspeccion","title":"Introspecci\u00f3n","text":"<p>Al trabajar con clases y objetos, existen un conjunto de funciones ya definidas por el lenguaje que permiten obtener informaci\u00f3n sobre los objetos:</p> <ul> <li><code>instanceof</code>: permite comprobar si un objeto es de una determinada clase</li> <li><code>get_class</code>: devuelve el nombre de la clase</li> <li><code>get_declared_class</code>: devuelve un array con los nombres de las clases definidas</li> <li><code>class_alias</code>: crea un alias</li> <li><code>class_exists</code> / <code>method_exists</code> / <code>property_exists</code>: <code>true</code> si la clase / m\u00e9todo / propiedad est\u00e1 definida</li> <li><code>get_class_methods</code> / <code>get_class_vars</code> / <code>get_object_vars</code>: Devuelve un array con los nombres de los m\u00e9todos / propiedades de una clase / propiedades de un objeto que son accesibles desde d\u00f3nde se hace la llamada.</li> </ul> <p>Un ejemplo de estas funciones puede ser el siguiente:</p> <pre><code>&lt;?php\n$p\u00a0=\u00a0new\u00a0Producto(\"PS5\");\nif\u00a0($p\u00a0instanceof\u00a0Producto)\u00a0{\n    echo\u00a0\"Es\u00a0un\u00a0producto\";\n    echo\u00a0\"La\u00a0clase\u00a0es\u00a0\".get_class($p);\n\n    class_alias(\"Producto\",\u00a0\"Articulo\");\n    $c\u00a0=\u00a0new\u00a0Articulo(\"Nintendo\u00a0Switch\");\n    echo\u00a0\"Un\u00a0articulo\u00a0es\u00a0un\u00a0\".get_class($c);\n\n    print_r(get_class_methods(\"Producto\"));\n    print_r(get_class_vars(\"Producto\"));\n    print_r(get_object_vars($p));\n\n    if\u00a0(method_exists($p,\u00a0\"mostrarResumen\"))\u00a0{\n        $p-&gt;mostrarResumen();\n    }\n}\n</code></pre> <p>Clonado</p> <p>Al asignar dos objetos no se copian, se crea una nueva referencia. Si queremos una copia, hay que clonarlo mediante el m\u00e9todo <code>clone(object) : object</code></p> <p>Si queremos modificar el clonado por defecto, hay que definir el m\u00e9todo m\u00e1gico <code>__clone()</code> que se llamar\u00e1 despu\u00e9s de copiar todas las propiedades.</p> <p>M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/language.oop5.cloning.php</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#herencia","title":"Herencia","text":"<p>PHP soporta herencia simple, de manera que una clase solo puede heredar de otra, no de dos clases a la vez. Para ello se utiliza la palabra clave <code>extends</code>. Si queremos que la clase A hereda de la clase B haremos:</p> <pre><code>class A extends B\n</code></pre> <p>El hijo hereda los atributos y m\u00e9todos p\u00fablicos y protegidos.</p> <p>Cada clase en un archivo</p> <p>Como ya hemos comentado, deber\u00edamos colocar cada clase en un archivo diferente para posteriormente utilizarlo mediante <code>include</code>. En los siguiente ejemplo los hemos colocado junto para facilitar su legibilidad.</p> <p>Por ejemplo, tenemos una clase <code>Producto</code> y una <code>Tv</code> que hereda de <code>Producto</code>:</p> <pre><code>&lt;?php\nclass Producto {\n    public $codigo;\n    public $nombre;\n    public $nombreCorto;\n    public $PVP;\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n}\n</code></pre> <p>Podemos utilizar las siguientes funciones para averiguar si hay relaci\u00f3n entre dos clases:</p> <ul> <li><code>get_parent_class(object): string</code></li> <li><code>is_subclass_of(object, string): bool</code></li> </ul> <pre><code>&lt;?php\n$t = new Tv();\n$t-&gt;codigo = 33;\nif ($t instanceof Producto) {\n    echo $t-&gt;mostrarResumen();\n}\n\n$padre = get_parent_class($t);\necho \"&lt;br&gt;La clase padre es: \" . $padre;\n$objetoPadre = new $padre;\necho $objetoPadre-&gt;mostrarResumen();\n\nif (is_subclass_of($t, 'Producto')) {\n    echo \"&lt;br&gt;Soy un hijo de Producto\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#sobreescribir-metodos","title":"Sobreescribir m\u00e9todos","text":"<p>Podemos crear m\u00e9todos en los hijos con el mismo nombre que el padre, cambiando su comportamiento. Para invocar a los m\u00e9todos del padre -&gt; <code>parent::nombreMetodo()</code></p> <pre><code>&lt;?php\nclass Tv extends Producto {\n   public $pulgadas;\n   public $tecnologia;\n\n   public function mostrarResumen() {\n      parent::mostrarResumen();\n      echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n   }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#constructor-en-hijos","title":"Constructor en hijos","text":"<p>En los hijos no se crea ning\u00fan constructor de manera autom\u00e1tica. Por lo que si no lo hay, se invoca autom\u00e1ticamente al del padre. En cambio, si lo definimos en el hijo, hemos de invocar al del padre de manera expl\u00edcita.</p> PHP7PHP8 <pre><code>&lt;?php\nclass Producto {\n    public string $codigo;\n\n    public\u00a0function\u00a0__construct(string $codigo) {\n        $this-&gt;codigo =\u00a0$codigo;\n    }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public\u00a0function\u00a0__construct(string\u00a0$codigo,\u00a0int\u00a0$pulgadas,\u00a0string\u00a0$tecnologia)\u00a0{\n        parent::__construct($codigo);\n        $this-&gt;pulgadas\u00a0=\u00a0$pulgadas;\n        $this-&gt;tecnologia\u00a0=\u00a0$tecnologia;\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre> <pre><code>&lt;?php\nclass Producto {\n    public\u00a0function\u00a0__construct(private string $codigo) { }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }        \n}\n\nclass Tv extends Producto {\n\n    public\u00a0function\u00a0__construct(\n        string\u00a0$codigo,\n        private int\u00a0$pulgadas,\n        private string\u00a0$tecnologia)\n    {\n        parent::__construct($codigo);\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#clases-abstractas","title":"Clases abstractas","text":"<p>Las clases abstractas obligan a heredar de una clase, ya que no se permite su instanciaci\u00f3n. Se define mediante <code>abstract class NombreClase {</code>. Una clase abstracta puede contener propiedades y m\u00e9todos no-abstractos, y/o m\u00e9todos abstractos.</p> <pre><code>&lt;?php\n//\u00a0Clase\u00a0abstracta\nabstract\u00a0class\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n    //\u00a0M\u00e9todo\u00a0abstracto\n    abstract\u00a0public\u00a0function\u00a0mostrarResumen();\n}\n</code></pre> <p>Cuando una clase hereda de una clase abstracta, obligatoriamente debe implementar los m\u00e9todos que tiene el padre marcados como abstractos.</p> <pre><code>&lt;?php\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public function mostrarResumen() { //obligado a implementarlo\n        echo \"&lt;p&gt;C\u00f3digo \".$this-&gt;getCodigo().\"&lt;/p&gt;\";\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n\n$t = new Tv();\necho $t-&gt;getCodigo();\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#clases-finales","title":"Clases finales","text":"<p>Son clases opuestas a abstractas, ya que evitan que se pueda heredar una clase o m\u00e9todo para sobreescribirlo.</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n\n    final\u00a0public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"Producto\u00a0\".$this-&gt;codigo;\n    }\n}\n\n// No podremos heredar de Microondas\nfinal\u00a0class\u00a0Microondas\u00a0extends\u00a0Producto\u00a0{\n    private\u00a0$potencia;\n\n    public\u00a0function\u00a0getPotencia()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;potencia;\n    }\n\n    // No podemos implementar mostrarResumen()\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#interfaces","title":"Interfaces","text":"<p>Permite definir un contrato con las firmas de los m\u00e9todos a cumplir. As\u00ed pues, s\u00f3lo contiene declaraciones de funciones y todas deben ser p\u00fablicas.</p> <p>Se declaran con la palabra clave <code>interface</code> y luego las clases que cumplan el contrato lo realizan mediante la palabra clave <code>implements</code>.</p> <pre><code>&lt;?php\ninterface Nombreable {\n// declaraci\u00f3n de funciones\n}\nclass NombreClase implements NombreInterfaz {\n// c\u00f3digo de la clase\n</code></pre> <p>Se permite la herencia de interfaces. Adem\u00e1s, una clase puede implementar varios interfaces (en este caso, s\u00ed soporta la herecia m\u00faltiple, pero s\u00f3lo de interfaces).</p> <pre><code>&lt;?php\ninterface\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string;\n}\n\ninterface\u00a0MostrableTodo\u00a0extends\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarTodo()\u00a0:\u00a0string;\n}\n\ninterface\u00a0Facturable\u00a0{\n    public\u00a0function\u00a0generarFactura()\u00a0:\u00a0string;\n}\n\nclass\u00a0Producto\u00a0implements\u00a0MostrableTodo,\u00a0Facturable\u00a0{\n    //\u00a0Implementaciones\u00a0de\u00a0los\u00a0m\u00e9todos\n    // Obligatoriamente deber\u00e1 implementar public\u00a0function\u00a0mostrarResumen, mostrarTodo y generarFactura\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#metodos-encadenados","title":"M\u00e9todos encadenados","text":"<p>Sigue el planteamiento de la programaci\u00f3n funcional, y tambi\u00e9n se conoce como method chaining. Plantea que sobre un objeto se realizan varias llamadas.</p> <pre><code>&lt;?php\n$p1\u00a0=\u00a0new\u00a0Libro();\n$p1-&gt;setNombre(\"Harry\u00a0Potter\");\n$p1-&gt;setAutor(\"JK\u00a0Rowling\");\necho\u00a0$p1;\n\n// Method chaining\n$p2\u00a0=\u00a0new\u00a0Libro();\n$p2-&gt;setNombre(\"Patria\")-&gt;setAutor(\"Aramburu\");\necho\u00a0$p2;\n</code></pre> <p>Para facilitarlo, vamos a modificar todos sus m\u00e9todos mutadores (que modifican datos, setters, ...) para que devuelvan una referencia a <code>$this</code>:</p> <pre><code>&lt;?php\nclass\u00a0Libro\u00a0{\n    private\u00a0string\u00a0$nombre;\n    private\u00a0string\u00a0$autor;\n\n    public\u00a0function\u00a0getNombre()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre;\n    }\n    public\u00a0function\u00a0setNombre(string\u00a0$nombre)\u00a0:\u00a0Libro\u00a0{\u00a0\n        $this-&gt;nombre\u00a0=\u00a0$nombre;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0getAutor()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;autor;\n    }\n    public\u00a0function\u00a0setAutor(string\u00a0$autor)\u00a0:\u00a0Libro\u00a0{\n        $this-&gt;autor\u00a0=\u00a0$autor;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0__toString()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre.\"\u00a0de\u00a0\".$this-&gt;autor;\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#metodos-magicos","title":"M\u00e9todos m\u00e1gicos","text":"<p>Todas las clases PHP ofrecen un conjunto de m\u00e9todos, tambi\u00e9n conocidos como magic methods que se pueden sobreescribir para sustituir su comportamiento. Algunos de ellos ya los hemos utilizado.</p> <p>Ante cualquier duda, es conveniente consultar la documentaci\u00f3n oficial.</p> <p>Los m\u00e1s destacables son:</p> <ul> <li><code>__construct()</code></li> <li><code>__destruct()</code> \u2192 se invoca al perder la referencia. Se utiliza para cerrar una conexi\u00f3n a la BD, cerrar un fichero, ...</li> <li><code>__toString()</code> \u2192 representaci\u00f3n del objeto como cadena. Es decir, cuando hacemos <code>echo $objeto</code> se ejecuta autom\u00e1ticamente este m\u00e9todo.</li> <li><code>__get(propiedad)</code>, <code>__set(propiedad, valor)</code> \u2192 Permitir\u00eda acceder a las propiedad privadas, aunque siempre es m\u00e1s legible/mantenible codificar los getter/setter.</li> <li><code>__isset(propiedad)</code>, <code>__unset(propiedad)</code> \u2192 Permite averiguar o quitar el valor a una propiedad.</li> <li><code>__sleep()</code>, <code>__wakeup()</code> \u2192 Se ejecutan al recuperar (unserialize^) o almacenar un objeto que se serializa (serialize), y se utilizan para permite definir qu\u00e9 propiedades se serializan.</li> <li><code>__call()</code>, <code>__callStatic()</code> \u2192 Se ejecutan al llamar a un m\u00e9todo que no es p\u00fablico. Permiten sobrecargan m\u00e9todos.</li> </ul>"},{"location":"Moduls/DWES/UT03PHPPOO.html#espacio-de-nombres","title":"Espacio de nombres","text":"<p>Desde PHP 5.3 y tambi\u00e9n conocidos como Namespaces, permiten organizar las clases/interfaces, funciones y/o constantes de forma similar a los paquetes en Java.</p> <p>Recomendaci\u00f3n</p> <p>Un s\u00f3lo namespace por archivo y crear una estructura de carpetas respectando los niveles/subniveles (igual que se hace en Java)</p> <p>Se declaran en la primera l\u00ednea mediante la palabra clave <code>namespace</code> seguida del nombre del espacio de nombres asignado (cada subnivel se separa con la barra invertida <code>\\</code>):</p> <p>Por ejemplo, para colocar la clase <code>Producto</code> dentro del namespace <code>Dwes\\Ejemplos</code> lo har\u00edamos as\u00ed:</p> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Ejemplos;\n\nconst\u00a0IVA\u00a0=\u00a00.21;\n\nclass\u00a0Producto\u00a0{\n    public\u00a0$nombre;\n    \u00a0\u00a0\n    public\u00a0function\u00a0muestra()\u00a0:\u00a0void\u00a0{\n        echo\"&lt;p&gt;Prod:\"\u00a0.\u00a0$this-&gt;nombre\u00a0.\u00a0\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#acceso","title":"Acceso","text":"<p>Para referenciar a un recurso que contiene un namespace, primero hemos de tenerlo disponible haciendo uso de <code>include</code> o <code>require</code>. Si el recurso est\u00e1 en el mismo namespace, se realiza un acceso directo (se conoce como acceso sin cualificar).</p> <p>Realmente hay tres tipos de acceso:</p> <ul> <li>sin cualificar: <code>recurso</code></li> <li>cualificado: <code>rutaRelativa\\recurso</code> \u2192 no hace falta poner el namespace completo</li> <li>totalmente cualificado: <code>\\rutaAbsoluta\\recurso</code></li> </ul> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Ejemplos;\n\ninclude_once(\"Producto.php\");\n\necho\u00a0IVA;\u00a0//\u00a0sin\u00a0cualificar\necho\u00a0Utilidades\\IVA;\u00a0// acceso cualificado. Dar\u00eda error, no existe \\Dwes\\Ejemplos\\Utilidades\\IVA\necho\u00a0\\Dwes\\Ejemplos\\IVA;\u00a0//\u00a0totalmente\u00a0cualificado\n\n$p1\u00a0=\u00a0new\u00a0Producto();\u00a0//\u00a0lo busca en el mismo namespace y encuentra \\Dwes\\Ejemplos\\Producto\n$p2\u00a0=\u00a0new\u00a0Model\\Producto(); // dar\u00eda error, no existe el namespace Model. Est\u00e1 buscando \\Dwes\\Ejemplos\\Model\\Producto\n$p3\u00a0=\u00a0new\u00a0\\Dwes\\Ejemplos\\Producto(); //\u00a0\\Dwes\\Ejemplos\\Producto\n</code></pre> <p>Para evitar la referencia cualificada podemos declarar el uso mediante <code>use</code> (similar a hacer <code>import</code> en Java). Se hace en la cabecera, tras el <code>namespace</code>:</p> <p>Los tipos posibles son:</p> <ul> <li><code>use const nombreCualificadoConstante</code></li> <li><code>use function nombreCualificadoFuncion</code></li> <li><code>use nombreCualificadoClase</code></li> <li><code>use nombreCualificadoClase as NuevoNombre</code> // para renombrar elementos</li> </ul> <p>Por ejemplo, si queremos utilizar la clase <code>\\Dwes\\Ejemplos\\Producto</code> desde un recurso que se encuentra en la ra\u00edz, por ejemplo en <code>inicio.php</code>, har\u00edamos:</p> <pre><code>&lt;?php\ninclude_once(\"Dwes\\Ejemplo\\Producto.php\");\n\nuse\u00a0const\u00a0Dwes\\Ejemplos\\IVA;\nuse\u00a0\\Dwes\\Ejemplos\\Producto;\n\necho\u00a0IVA;\n$p1\u00a0=\u00a0new\u00a0Producto();\n</code></pre> <p>To <code>use</code> or not to <code>use</code></p> <p>En resumen, <code>use</code> permite acceder sin cualificar a recursos que est\u00e1n en otro namespace. Si estamos en el mismo espacio de nombre, no necesitamos <code>use</code>.</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#organizacion","title":"Organizaci\u00f3n","text":"<p>Todo proyecto, conforme crece, necesita organizar su c\u00f3digo fuente. Se plantea una organizaci\u00f3n en la que los archivos que interactuan con el navegador se colocan en el ra\u00edz, y las clases que definamos van dentro de un namespace (y dentro de su propia carpeta <code>src</code> o <code>app</code>).</p> Organizaci\u00f3n del c\u00f3digo fuente <p>Organizaci\u00f3n, includes y usos</p> <ul> <li>Colocaremos cada recurso en un fichero aparte.</li> <li>En la primera l\u00ednea indicaremos su namespace (si no est\u00e1 en el ra\u00edz).</li> <li>Si utilizamos otros recursos, haremos un <code>include_once</code> de esos recursos (clases, interfaces, etc...).</li> <li>Cada recurso debe incluir todos los otros recursos que referencie: la clase de la que hereda, interfaces que implementa, clases utilizadas/recibidas como par\u00e1metros, etc...</li> <li>Si los recursos est\u00e1n en un espacio de nombres diferente al que estamos, emplearemos <code>use</code> con la ruta completa para luego utilizar referencias sin cualificar.</li> </ul>"},{"location":"Moduls/DWES/UT03PHPPOO.html#autoload","title":"Autoload","text":"<p>\u00bfNo es tedioso tener que hacer el <code>include</code> de las clases? El autoload viene al rescate.</p> <p>As\u00ed pues, permite cargar las clases (no las constantes ni las funciones) que se van a utilizar y evitar tener que hacer el <code>include_once</code> de cada una de ellas. Para ello, se utiliza la funci\u00f3n <code>spl_autoload_register</code></p> <pre><code>&lt;?php\nspl_autoload_register(\u00a0function(\u00a0$nombreClase\u00a0)\u00a0{\n    include_once\u00a0$nombreClase.'.php';\n}\u00a0);\n?&gt;\n</code></pre> <p>\u00bfPor qu\u00e9 se llaman autoload?</p> <p>Porque antes se realizaba mediante el m\u00e9todo m\u00e1gico <code>__autoload()</code>, el cual est\u00e1 deprecated desde PHP 7.2</p> <p>Y \u00bfc\u00f3mo organizamos ahora nuestro c\u00f3digo aprovechando el autoload?</p> Organizaci\u00f3n con autoload <p>Para facilitar la b\u00fasqueda de los recursos a incluir, es recomendable colocar todas las clases dentro de una misma carpeta. Nosotros la vamos a colocar dentro de <code>app</code> (m\u00e1s adelante, cuando estudiemos Laravel veremos el motivo de esta decisi\u00f3n). Otras carpetas que podemos crear son <code>test</code> para colocar las pruebas PhpUnit que luego realizaremos, o la carpeta <code>vendor</code> donde se almacenar\u00e1n las librer\u00edas del proyecto (esta carpeta es un est\u00e1ndard dentro de PHP, ya que Composer la crea autom\u00e1ticamente).</p> <p>Como hemos colocado todos nuestros recursos dentro de <code>app</code>, ahora nuestro <code>autoload.php</code> (el cual colocamos en la carpeta ra\u00edz) s\u00f3lo va a buscar dentro de esa carpeta:</p> <pre><code>&lt;?php\nspl_autoload_register(\u00a0function(\u00a0$nombreClase\u00a0)\u00a0{\n    include_once\u00a0\"app/\".$nombreClase.'.php';\n}\u00a0);\n?&gt;\n</code></pre> <p>Autoload y rutas err\u00f3neas</p> <p>En Ubuntu al hacer el include de la clase que recibe como par\u00e1metro, las barras de los namespace (<code>\\</code>) son diferentes a las de las rutas (<code>/</code>). Por ello, es mejor que utilicemos el fichero autoload:</p> <pre><code>&lt;?php\nspl_autoload_register(\u00a0function(\u00a0$nombreClase\u00a0)\u00a0{\n    $ruta = \"app\\\\\".$nombreClase.'.php';\n    $ruta = str_replace(\"\\\\\", \"/\", $ruta); // Sustituimos las barras\n    include_once\u00a0$ruta';\n}\u00a0);\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#gestion-de-errores","title":"Gesti\u00f3n de Errores","text":"<p>PHP clasifica los errores que ocurren en diferentes niveles. Cada nivel se identifica con una constante. Por ejemplo:</p> <ul> <li><code>E_ERROR</code>: errores fatales, no recuperables. Se interrumpe el script.</li> <li><code>E_WARNING</code>: advertencias en tiempo de ejecuci\u00f3n. El script no se interrumpe.</li> <li><code>E_NOTICE</code>: avisos en tiempo de ejecuci\u00f3n.</li> </ul> <p>Pod\u00e9is comprobar el listado completo de constantes de https://www.php.net/manual/es/errorfunc.constants.php</p> <p>Para la configuraci\u00f3n de los errores podemos hacerlo de dos formas:</p> <ul> <li>A nivel de <code>php.ini</code>:<ul> <li><code>error_reporting</code>: indica los niveles de errores a notificar<ul> <li><code>error_reporting = E_ALL &amp; ~E_NOTICE</code> -&gt; Todos los errores menos los avisos en tiempo de ejecuci\u00f3n.</li> </ul> </li> <li><code>display_errors</code>: indica si mostrar o no los errores por pantalla. En entornos de producci\u00f3n es com\u00fan ponerlo a <code>off</code></li> </ul> </li> <li>mediante c\u00f3digo con las siguientes funciones:<ul> <li><code>error_reporting(codigo)</code> -&gt; Controla qu\u00e9 errores notificar</li> <li><code>set_error_handler(nombreManejador)</code> -&gt; Indica que funci\u00f3n se invocar\u00e1 cada vez que se encuentre un error. El manejador recibe como par\u00e1metros el nivel del error y el mensaje</li> </ul> </li> </ul> <p>A continuaci\u00f3n tenemos un ejemplo mediante c\u00f3digo:</p> Funciones para la gesti\u00f3n de erroresConsola <pre><code>&lt;?php\nerror_reporting(E_ALL\u00a0&amp;\u00a0~E_NOTICE\u00a0&amp;\u00a0~E_WARNING);\n$resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\n\nerror_reporting(E_ALL\u00a0&amp;\u00a0~E_NOTICE);\nset_error_handler(\"miManejadorErrores\");\n$resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\nrestore_error_handler();\u00a0//\u00a0vuelve\u00a0al\u00a0anterior\n\nfunction\u00a0miManejadorErrores($nivel,\u00a0$mensaje)\u00a0{\n    switch($nivel)\u00a0{\n        case\u00a0E_WARNING:\n            echo\u00a0\"&lt;strong&gt;Warning&lt;/strong&gt;:\u00a0$mensaje.&lt;br/&gt;\";\n            break;\n        default:\n            echo\u00a0\"Error\u00a0de\u00a0tipo\u00a0no\u00a0especificado:\u00a0$mensaje.&lt;br/&gt;\";\n    }\n}\n</code></pre> <pre><code>Error de tipo no especificado: Undefined variable: dividendo.\nError de tipo no especificado: Undefined variable: divisor.\nError de tipo Warning: Division by zero.\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#excepciones","title":"Excepciones","text":"<p>La gesti\u00f3n de excepciones forma parte desde PHP 5. Su funcionamiento es similar a Java, haciendo uso de un bloque <code>try / catch / finally</code>. Si detectamos una situaci\u00f3n an\u00f3mala y queremos lanzar una excepci\u00f3n, deberemos realizar <code>throw new Exception</code> (adjuntando el mensaje que lo ha provocado).</p> <pre><code>&lt;?php\ntry\u00a0{\n    if\u00a0($divisor\u00a0==\u00a00) {\n        throw\u00a0new\u00a0Exception(\"Divisi\u00f3n\u00a0por\u00a0cero.\");\n    }\n    $resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n    echo\u00a0\"Se\u00a0ha\u00a0producido\u00a0el\u00a0siguiente\u00a0error:\u00a0\".$e-&gt;getMessage();\n}\n</code></pre> <p>La clase <code>Exception</code> es la clase padre de todas las excepciones. Su constructor recibe <code>mensaje[,codigoError][,excepcionPrevia]</code>.</p> <p>A partir de un objeto <code>Exception</code>, podemos acceder a los m\u00e9todos <code>getMessage()</code>y <code>getCode()</code> para obtener el mensaje y el c\u00f3digo de error de la excepci\u00f3n capturada.</p> <p>El propio lenguaje ofrece un conjunto de excepciones ya definidas, las cuales podemos capturar (y lanzar desde PHP 7). Se recomienda su consulta en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#creando-excepciones","title":"Creando excepciones","text":"<p>Para crear una excepci\u00f3n, la forma m\u00e1s corta es crear una clase que \u00fanicamente herede de <code>Exception</code>.</p> <pre><code>&lt;?php\nclass\u00a0HolaExcepcion\u00a0extends\u00a0Exception\u00a0{}\n</code></pre> <p>Si queremos, y es recomendable dependiendo de los requisitos, podemos sobrecargar los m\u00e9todos m\u00e1gicos, por ejemplo, sobrecargando el constructor y llamando al constructor del padre, o rescribir el m\u00e9todo <code>__toString</code> para cambiar su mensaje:</p> <pre><code>&lt;?php\nclass\u00a0MiExcepcion\u00a0extends\u00a0Exception\u00a0{\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__construct($msj,\u00a0$codigo\u00a0=\u00a00,\u00a0Exception\u00a0$previa\u00a0=\u00a0null)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0c\u00f3digo\u00a0propio\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parent::__construct($msj,\u00a0$codigo,\u00a0$previa);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__toString()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0__CLASS__\u00a0.\u00a0\":\u00a0[{$this-&gt;code}]:\u00a0{$this-&gt;message}\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0miFuncion()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Una\u00a0funci\u00f3n\u00a0personalizada\u00a0para\u00a0este\u00a0tipo\u00a0de\u00a0excepci\u00f3n\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n}\n</code></pre> <p>Si definimos una excepci\u00f3n de aplicaci\u00f3n dentro de un namespace, cuando referenciemos a <code>Exception</code>, deberemos referenciarla mediante su nombre totalmente cualificado (<code>\\Exception</code>), o utilizando <code>use</code>:</p> Mediante nombre totalmente cualificado <pre><code>&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\n    class\u00a0AppExcepcion\u00a0extends\u00a0\\Exception\u00a0{}\n    ```\n=== \"Mediante `use`\"\n``` php\n&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\n    use Exception;\n\n    class\u00a0AppExcepcion\u00a0extends\u00a0Exception\u00a0{}\n    ```\n\n### Excepciones m\u00faltiples\n\nSe pueden usar excepciones m\u00faltiples para comprobar diferentes condiciones. A la hora de capturarlas, se hace de m\u00e1s espec\u00edfica a m\u00e1s general.\n\n``` php\n&lt;?php\n$email\u00a0=\u00a0\"ejemplo@ejemplo.com\";\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0si\u00a0el\u00a0email\u00a0es\u00a0v\u00e1lido\n\u00a0\u00a0\u00a0\u00a0if(filter_var($email,\u00a0FILTER_VALIDATE_EMAIL)\u00a0===\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0MiExcepcion($email);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0la\u00a0palabra\u00a0ejemplo\u00a0en\u00a0la\u00a0direcci\u00f3n\u00a0email\n\u00a0\u00a0\u00a0\u00a0if(strpos($email,\u00a0\"ejemplo\")\u00a0!==\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0Exception(\"$email\u00a0es\u00a0un\u00a0email\u00a0de\u00a0ejemplo no v\u00e1lido\");\n\u00a0\u00a0\u00a0\u00a0}\n}\u00a0catch\u00a0(MiExcepcion\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;miFuncion();\n}\u00a0catch(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Autoevaluaci\u00f3n</p> <p>\u00bfQu\u00e9 pasar\u00eda al ejectuar el siguiente c\u00f3digo?</p> <pre><code>&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\n    try\u00a0{\n    \u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n    }\u00a0catch\u00a0(MainException\u00a0$e)\u00a0{\n    \u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0MainException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n    }\u00a0catch\u00a0(SubException\u00a0$e)\u00a0{\n    \u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0SubException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n    }\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n    \u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n    }\n    ```\n\nSi en el mismo `catch` queremos capturar varias excepciones, hemos de utilizar el operador `|`:\n\n``` php\n&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n}\u00a0catch\u00a0(MainException\u00a0|\u00a0SubException\u00a0$e\u00a0)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Desde PHP 7, existe el tipo <code>Throwable</code>, el cual es un interfaz que implementan tanto los errores como las excepciones, y nos permite capturar los dos tipos a la vez:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0tu\u00a0codigo\n}\u00a0catch\u00a0(Throwable\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0'Forma\u00a0de\u00a0capturar\u00a0errores\u00a0y\u00a0excepciones\u00a0a\u00a0la\u00a0vez';\n}\n</code></pre> <p>Si s\u00f3lo queremos capturar los errores fatales, podemos hacer uso de la clase <code>Error</code>:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Genera\u00a0una\u00a0notificaci\u00f3n\u00a0que\u00a0no\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$variableNoAsignada;\n\u00a0\u00a0\u00a0\u00a0//\u00a0Error\u00a0fatal\u00a0que\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0funcionQueNoExiste();\n}\u00a0catch\u00a0(Error\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Error\u00a0capturado:\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#relanzar-excepciones","title":"Relanzar excepciones","text":"<p>En las aplicaciones reales, es muy com\u00fan capturar una excepci\u00f3n de sistema y lanzar una de aplicaci\u00f3n que hemos definido nostros. Tambi\u00e9n podemos lanzar las excepciones sin necesidad de estar dentro de un <code>try/catch</code>.</p> <pre><code>&lt;?php\nclass\u00a0AppException\u00a0extends\u00a0Exception\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0C\u00f3digo\u00a0de\u00a0negocio\u00a0que\u00a0falla\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0AppException(\"AppException:\u00a0\".$e-&gt;getMessage(), $e-&gt;getCode(),\u00a0$e);\n}\n</code></pre>"},{"location":"Moduls/DWES/UT03PHPPOO.html#spl","title":"SPL","text":"<p>Standard PHP Library es el conjunto de funciones y utilidades que ofrece PHP, como:</p> <ul> <li>Estructuras de datos<ul> <li>Pila, cola, cola de prioridad, lista doblemente enlazada, etc...</li> </ul> </li> <li>Conjunto de iteradores dise\u00f1ados para recorrer estructuras agregadas<ul> <li>arrays, resultados de bases de datos, \u00e1rboles XML, listados de directorios, etc.</li> </ul> </li> </ul> <p>Pod\u00e9is consultar la documentaci\u00f3n en https://www.php.net/manual/es/book.spl.php o ver algunos ejemplos en https://diego.com.es/tutorial-de-la-libreria-spl-de-php</p> <p>Tambi\u00e9n define un conjunto de excepciones que podemos utilizar para que las lancen nuestras aplicaciones:</p> <ul> <li><code>LogicException</code> (<code>extends Exception</code>)<ul> <li><code>BadFunctionCallException</code></li> <li><code>BadMethodCallException</code></li> <li><code>DomainException</code></li> <li><code>InvalidArgumentException</code></li> <li><code>LengthException</code></li> <li><code>OutOfRangeException</code></li> </ul> </li> <li><code>RuntimeException</code> (<code>extends Exception</code>)<ul> <li><code>OutOfBoundsException</code></li> <li><code>OverflowException</code></li> <li><code>RangeException</code></li> <li><code>UnderflowException</code></li> <li><code>UnexpectedValueException</code></li> </ul> </li> </ul> <p>Tambi\u00e9n pod\u00e9is consultar la documentaci\u00f3n de estas excepciones en https://www.php.net/manual/es/spl.exceptions.php.</p>"},{"location":"Moduls/DWES/UT03PHPPOO.html#referencias","title":"Referencias","text":"<ul> <li>Manual de PHP</li> <li>Manual de OO en PHP - www.desarrolloweb.com</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html","title":"Programaci\u00f3n Web","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 12 sesiones</p> Resultado de aprendizaje Criterios de evaluaci\u00f3n 4. Desarrolla aplicaciones Web embebidas en lenguajes de marcas analizando e incorporando funcionalidades seg\u00fan especificaciones. a) Se han identificado los mecanismos disponibles para el mantenimiento de la informaci\u00f3n que concierne a un cliente web concreto y se han se\u00f1alado sus ventajas. b) Se han utilizado sesiones para mantener el estado de las aplicaciones Web.  c) Se han utilizado cookies para almacenar informaci\u00f3n en el cliente Web y para recuperar su contenido.  d) Se han identificado y caracterizado los mecanismos disponibles para la autentificaci\u00f3n de usuarios.  e) Se han escrito aplicaciones que integren mecanismos de autentificaci\u00f3n de usuarios.  f) Se han realizado adaptaciones a aplicaciones Web existentes como gestores de contenidos u otras.  g) Se han utilizado herramientas y entornos para facilitar la programaci\u00f3n, prueba y depuraci\u00f3n del c\u00f3digo."},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#variables-de-servidor","title":"Variables de servidor","text":"<p>PHP almacena la informaci\u00f3n del servidor y de las peticiones HTTP en seis arrays globales:</p> <ul> <li><code>$_ENV</code>: informaci\u00f3n sobre las variables de entorno</li> <li><code>$_GET</code>: par\u00e1metros enviados en la petici\u00f3n GET</li> <li><code>$_POST</code>: par\u00e1metros enviados en el envio POST</li> <li><code>$_COOKIE</code>: contiene las cookies de la petici\u00f3n, las claves del array son los nombres de las cookies</li> <li><code>$_SERVER</code>: informaci\u00f3n sobre el servidor</li> <li><code>$_FILES</code>: informaci\u00f3n sobre los ficheros cargados via upload</li> </ul> <p>Si nos centramos en el array <code>$_SERVER</code> podemos consultar las siguientes propiedades:</p> <ul> <li><code>PHP_SELF</code>: nombre del script ejecutado, relativo al document root (p.ej: <code>/tienda/carrito.php</code>)</li> <li><code>SERVER_SOFTWARE</code>: (p.ej: Apache)</li> <li><code>SERVER_NAME</code>: dominio, alias DNS (p.ej: <code>www.elche.es</code>)</li> <li><code>REQUEST_METHOD</code>: GET</li> <li><code>REQUEST_URI</code>: URI, sin el dominio</li> <li><code>QUERY_STRING</code>: todo lo que va despu\u00e9s de <code>?</code> en la URL (p.ej: <code>heroe=Batman&amp;nombre=Bruce</code>)</li> </ul> <p>M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/reserved.variables.server.php</p> <pre><code>&lt;?php\necho $_SERVER[\"PHP_SELF\"].\"&lt;br&gt;\"; // /u4/401server.php\necho $_SERVER[\"SERVER_SOFTWARE\"].\"&lt;br&gt;\"; // Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.4.9\necho $_SERVER[\"SERVER_NAME\"].\"&lt;br&gt;\"; // localhost\n\necho $_SERVER[\"REQUEST_METHOD\"].\"&lt;br&gt;\"; // GET\necho $_SERVER[\"REQUEST_URI\"].\"&lt;br&gt;\"; // /u4/401server.php?heroe=Batman\necho $_SERVER[\"QUERY_STRING\"].\"&lt;br&gt;\"; // heroe=Batman\n</code></pre> <p>Otras propiedades relacionadas:</p> <ul> <li><code>PATH_INFO</code>: ruta extra tras la petici\u00f3n. Si la URL es <code>http://www.php.com/php/pathInfo.php/algo/cosa?foo=bar</code>, entonces <code>$_SERVER['PATH_INFO']</code> ser\u00e1 <code>/algo/cosa</code>.</li> <li><code>REMOTE_HOST</code>: hostname que hizo la petici\u00f3n</li> <li><code>REMOTE_ADDR</code>: IP del cliente</li> <li><code>AUTH_TYPE</code>: tipo de autenticaci\u00f3n (p.ej: Basic)</li> <li><code>REMOTE_USER</code>: nombre del usuario autenticado</li> </ul> <p>Apache crea una clave para cada cabecera HTTP, en may\u00fasculas y sustituyendo los guiones por subrayados:</p> <ul> <li><code>HTTP_USER_AGENT</code>: agente (navegador)</li> <li><code>HTTP_REFERER</code>: p\u00e1gina desde la que se hizo la petici\u00f3n</li> </ul> <pre><code>&lt;?php\necho $_SERVER[\"HTTP_USER_AGENT\"].\"&lt;br&gt;\"; // Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#formularios","title":"Formularios","text":"<p>A la hora de enviar un formulario, debemos tener claro cuando usar GET o POST</p> <ul> <li> <p>GET: los par\u00e1metros se pasan en la URL</p> <ul> <li>&lt;2048 caracteres, s\u00f3lo ASCII</li> <li>Permite almacenar la direcci\u00f3n completa (marcador  / historial)</li> <li>Idempotente: dos llamadas con los mismos datos siempre debe dar el mismo resultado</li> <li>El navegador puede cachear las llamadas</li> </ul> </li> <li> <p>POST: par\u00e1metros ocultos (no encriptados)</p> <ul> <li>Sin l\u00edmite de datos, permite datos binarios.</li> <li>No se pueden cachear</li> <li>No idempotente \u2192 actualizar la BBDD</li> </ul> </li> </ul> <p>As\u00ed pues, para recoger los datos accederemos al array dependiendo del m\u00e9todo del formulario que nos ha invocado:</p> <pre><code>&lt;?php\n$par = $_GET[\"parametro\"]\n$par = $_POST[\"parametro\"]\n</code></pre> <p>Para los siguientes apartados nos vamos a basar en el siguiente ejemplo:</p> <pre><code>&lt;form action=\"formulario.php\" method=\"GET\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"\" /&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\" /&gt;\n        &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\" /&gt;\n        &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\" /&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#validacion","title":"Validaci\u00f3n","text":"<p>Respecto a la validaci\u00f3n, es conveniente siempre hacer validaci\u00f3n doble:</p> <ul> <li>En el cliente mediante JS</li> <li>En servidor, antes de llamar a negocio, es conveniente volver a validar los datos.</li> </ul> <pre><code>&lt;?php\nif (isset($_GET[\"parametro\"])) {\n    $par = $_GET[\"parametro\"];\n    // comprobar si $par tiene el formato adecuado, su valor, etc...\n}\n</code></pre> <p>Librer\u00edas de validaci\u00f3n</p> <p>Existen diversas librer\u00edas que facilitan la validaci\u00f3n de los formularios, como son respect/validation o particle/validator. Cuando estudiemos Laravel profundizaremos en la validaci\u00f3n de forma declarativa.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#parametro-multivalor","title":"Par\u00e1metro multivalor","text":"<p>Existen elementos HTML que env\u00edan varios valores:</p> <ul> <li><code>select multiple</code></li> <li><code>checkbox</code></li> </ul> <p>Para recoger los datos, el nombre del elemento debe ser un array.</p> <pre><code>&lt;select name=\"lenguajes[]\" multiple=\"true\"&gt;\n    &lt;option value=\"c\"&gt;C&lt;/option&gt;\n    &lt;option value=\"java\"&gt;Java&lt;/option&gt;\n    &lt;option value=\"php\"&gt;PHP&lt;/option&gt;\n    &lt;option value=\"python\"&gt;Python&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"c\" /&gt; C&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"java\" /&gt; Java&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"php\" /&gt; Php&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"python\" /&gt; Python&lt;br /&gt;\n</code></pre> <p>De manera que luego al recoger los datos:</p> <pre><code>&lt;?php\n$lenguajes = $_GET[\"lenguajes\"];\n\nforeach ($lenguajes as $lenguaje) {\n    echo \"$lenguaje &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#volviendo-a-rellenar-un-formulario","title":"Volviendo a rellenar un formulario","text":"<p>Un sticky form es un formulario que recuerda sus valores. Para ello, hemos de rellenar los atributos <code>value</code> de los elementos HTML con la informaci\u00f3n que conten\u00edan:</p> <pre><code>&lt;?php\nif (!empty($_POST['modulos']) &amp;&amp; !empty($_POST['nombre'])) {\n  // Aqu\u00ed se incluye el c\u00f3digo a ejecutar cuando los datos son correctos\n} else {\n  // Generamos el formulario\n  $nombre = $_POST['nombre'] ?? \"\";\n  $modulos = $_POST['modulos'] ?? [];\n  ?&gt;\n  &lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n   &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"&lt;?= $nombre ?&gt;\" /&gt; \n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\"\n    &lt;?php if(in_array(\"DWES\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\"\n    &lt;?php if(in_array(\"DWEC\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\"/&gt;\n  &lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#subiendo-archivos","title":"Subiendo archivos","text":"<p>Se almacenan en el servidor en el array <code>$_FILES</code> con el nombre del campo del tipo <code>file</code> del formulario.</p> <pre><code>&lt;form enctype=\"multipart/form-data\" action=\"&lt;?php echo $_SERVER['PHP_SELF']; ?&gt;\"  method=\"POST\"&gt;\n    Archivo: &lt;input name=\"archivoEnviado\" type=\"file\" /&gt;\n    &lt;br /&gt;\n    &lt;input type=\"submit\" name=\"btnSubir\" value=\"Subir\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Configuraci\u00f3n en <code>php.ini</code></p> <ul> <li><code>file_uploads</code>: on / off</li> <li><code>upload_max_filesize</code>: 2M</li> <li><code>upload_tmp_dir</code>: directorio temporal. No es necesario configurarlo, coger\u00e1 el predeterminado del sistema</li> <li><code>post_max_size</code>: tama\u00f1o m\u00e1ximo de los datos POST. Debe ser mayor a upload_max_filesize.</li> <li><code>max_file_uploads</code>: n\u00famero m\u00e1ximo de archivos que se pueden cargar a la vez.</li> <li><code>max_input_time</code>: tiempo m\u00e1ximo empleado en la carga (GET/POST y upload \u2192 normalmente se configura en 60)</li> <li><code>memory_limit</code>: 128M</li> <li><code>max_execution_time</code>: tiempo de ejecuci\u00f3n de un script (no tiene en cuenta el upload)</li> </ul> <p>Para cargar los archivos, accedemos al array <code>$_FILES</code>:</p> <pre><code>&lt;?php\nif (isset($_POST['btnSubir']) &amp;&amp; $_POST['btnSubir'] == 'Subir') {\n    if (is_uploaded_file($_FILES['archivoEnviado']['tmp_name'])) {\n        // subido con \u00e9xito\n        $nombre = $_FILES['archivoEnviado']['name'];\n        move_uploaded_file($_FILES['archivoEnviado']['tmp_name'], \"./uploads/{$nombre}\");\n\n        echo \"&lt;p&gt;Archivo $nombre subido con \u00e9xito&lt;/p&gt;\";\n    }\n}\n</code></pre> <p>Cada archivo cargado en <code>$_FILES</code> tiene:</p> <ul> <li><code>name</code>: nombre</li> <li><code>tmp_name</code>: ruta temporal</li> <li><code>size</code>: tama\u00f1o en bytes</li> <li><code>type</code>: tipo MIME</li> <li><code>error</code>: si hay error, contiene un mensaje. Si ok \u2192 0.</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#cabeceras-de-respuesta","title":"Cabeceras de respuesta","text":"<p>Debe ser lo primero a devolver. Se devuelven mediante la funci\u00f3n <code>header(cadena)</code>. Mediante las cabeceras podemos configurar el tipo de contenido, tiempo de expiraci\u00f3n, redireccionar el navegador, especificar errores HTTP, etc.</p> <pre><code>&lt;?php header(\"Content-Type: text/plain\"); ?&gt;\n&lt;?php header(\"Location: http://www.ejemplo.com/inicio.html\");\nexit(); \n</code></pre> <p>Se puede comprobar en las herramientas del desarrollador de los navegadores web mediante Developer Tools \u2192 Network \u2192 Headers.</p> <p>Es muy com\u00fan configurar las cabeceras para evitar consultas a la cach\u00e9 o provocar su renovaci\u00f3n:</p> <pre><code>&lt;?php\nheader(\"Expires: Sun, 31 Jan 2021 23:59:59 GMT\");\n// tres horas\n$now = time();\n$horas3 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 60 * 60 * 3);\nheader(\"Expires: {$horas3}\");\n// un a\u00f1o\n$now = time();\n$anyo1 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 365 * 86440);\nheader(\"Expires: {$anyo1}\");\n// se marca como expirado (fecha en el pasado)\n$pasado = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\");\nheader(\"Expires: {$pasado}\");\n// evitamos cache de navegador y/o proxy\nheader(\"Expires: Mon, 26 Jul 1997 05:00:00 GMT\");\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\nheader(\"Cache-Control: no-store, no-cache, must-revalidate\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#gestion-del-estado","title":"Gesti\u00f3n del estado","text":"<p>HTTP es un protocolo stateless, sin estado. Por ello, se simula el estado mediante el uso de cookies, tokens o la sesi\u00f3n. El estado es necesario para procesos tales como el carrito de la compra, operaciones asociadas a un usuario, etc... El mecanismo de PHP para gestionar la sesi\u00f3n emplea cookies de forma interna. Las cookies se almacenan en el navegador, y la sesi\u00f3n en el servidor web.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#cookies","title":"Cookies","text":"<p>Las cookies se almacenan en el array global <code>$_COOKIE</code>. Lo que coloquemos dentro del array, se guardar\u00e1 en el cliente. Hay que tener presente que el cliente puede no querer almacenarlas.</p> <p>Existe una limitaci\u00f3 de 20 cookies por dominio y 300 en total en el navegador.</p> <p>En PHP, para crear una cookie se utiliza la funci\u00f3n <code>setcookie</code>:</p> <pre><code>&lt;?php\nsetcookie(nombre [, valor [, expira [, ruta [, dominio [, seguro [, httponly ]]]]]]);\nsetcookie(nombre [, valor = \"\" [, opciones = [] ]] )\n?&gt;\n</code></pre> <p>Destacar que el nombre no puede contener espacios ni el caracter <code>;</code>. Respecto al contenido de la cookie, no puede superar los 4 KB.</p> <p>Por ejemplo, mediante cookies podemos comprobar la cantidad de visitas diferentes que realiza un usuario:</p> <pre><code>&lt;?php\n$accesosPagina = 0;\nif (isset($_COOKIE['accesos'])) { \n    $accesosPagina = $_COOKIE['accesos']; // recuperamos una cookie\n    setcookie('accesos', ++$accesosPagina); // le asignamos un valor\n}\n?&gt;\n</code></pre> <p>Inspeccionando las cookies</p> <p>Si queremos ver que contienen las cookies que tenemos almacenadas en el navegador, se puede comprobar su valor en Dev Tools \u2192 Application \u2192 Storage</p> <p>El tiempo de vida de las cookies puede ser tan largo como el sitio web en el que residen. Ellas seguir\u00e1n ah\u00ed, incluso si el navegador est\u00e1 cerrado o abierto.</p> <p>Para borrar una cookie se puede poner que expiren en el pasado:</p> <pre><code>&lt;?php\nsetcookie(nombre, \"\", 1) // pasado\n</code></pre> <p>O que caduquen dentro de un periodo de tiempo deteminado:</p> <pre><code>&lt;?php\nsetcookie(nombre, valor, time() + 3600) // Caducan dentro de una hora\n</code></pre> Comunicaci\u00f3n con cookies <p>Se utilizan para:</p> <ul> <li>Recordar los inicios de sesi\u00f3n</li> <li>Almacenar valores temporales de usuario</li> <li>Si un usuario est\u00e1 navegando por una lista paginada de art\u00edculos, ordenados de cierta manera, podemos almacenar el ajuste de la clasificaci\u00f3n.</li> </ul> <p>La alternativa en el cliente para almacenar informaci\u00f3n en el navegador es el objeto LocalStorage.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#sesion","title":"Sesi\u00f3n","text":"<p>La sesi\u00f3n a\u00f1ade la gesti\u00f3n del estado a HTTP, almacenando en este caso la informaci\u00f3n en el servidor. Cada visitante tiene un ID de sesi\u00f3n \u00fanico, el cual por defecto se almacena en una cookie denominada <code>PHPSESSID</code>. Si el cliente no tiene las cookies activas, el ID se propaga en cada URL dentro del mismo dominio. Cada sesi\u00f3n tiene asociado un almac\u00e9n de datos mediante el array global <code>$_SESSION</code>, en el cual podemos almacenar y recuperar informaci\u00f3n.</p> <p>La sesi\u00f3n comienza al ejecutar un script PHP. Se genera un nuevo ID y se cargan los datos del almac\u00e9n:</p> Comunicaci\u00f3n con sesi\u00f3n <p>Las operaciones que podemos realizar con la sesi\u00f3n son:</p> <pre><code>&lt;?php\nsession_start(); // carga la sesi\u00f3n\nsession_id() // devuelve el id\n$_SESSION[clave] = valor; // inserci\u00f3n\nsession_destroy(); // destruye la sesi\u00f3n\nunset($_SESSION[clave]; // borrado\n</code></pre> <p>Vamos a ver mediante un ejemplo como podemos insertar en un p\u00e1gina datos en la sesi\u00f3n para posteriormente en otra p\u00e1gina acceder a esos datos. Por ejemplo, en <code>sesion1.php</code> tendr\u00edamos</p> <pre><code>&lt;?php\nsession_start(); // inicializamos\n$_SESSION[\"ies\"] = \"IES Severo Ochoa\"; // asignaci\u00f3n\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Estamos en el $instituto \";\n?&gt;\n&lt;br /&gt;\n&lt;a href=\"sesion2.php\"&gt;Y luego&lt;/a&gt;\n</code></pre> <p>Y posteriormente podemos acceder a la sesi\u00f3n en <code>sesion2.php</code>:</p> <pre><code>&lt;?php\nsession_start();\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Otra vez, en el $instituto \";\n?&gt;\n</code></pre> <p>Configurando la sesi\u00f3n en <code>php.ini</code></p> <p>Las siguiente propiedades de <code>php.ini</code> permiten configurar algunos aspectos de la sesi\u00f3n:</p> <ul> <li><code>session.save_handler</code>: controlador que gestiona c\u00f3mo se almacena (<code>files</code>)</li> <li><code>session.save_path</code>: ruta donde se almacenan los archivos con los datos (si tenemos un cluster, podr\u00edamos usar <code>/mnt/sessions</code> en todos los servidor de manera que apuntan a una carpeta compartida)</li> <li><code>session.name</code>: nombre de la sesi\u00f3n (<code>PHSESSID</code>)</li> <li><code>session.auto_start</code>: Se puede hacer que se autocargue con cada script. Por defecto est\u00e1 deshabilitado</li> <li><code>session.cookie_lifetime</code>: tiempo de vida por defecto</li> </ul> <p>M\u00e1s informaci\u00f3n en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#autentificacion-de-usuarios","title":"Autentificaci\u00f3n de usuarios","text":"<p>Una sesi\u00f3n establece una relaci\u00f3n an\u00f3nima con un usuario particular, de manera que podemos saber si es el mismo usuario entre dos peticiones distintas. Si preparamos un sistema de login, podremos saber quien utiliza nuestra aplicaci\u00f3n.</p> <p>Para ello, preparemos un sencillo sistema de autenticaci\u00f3n:</p> <ul> <li>Mostrar el formulario login/password</li> <li>Comprobar los datos enviados</li> <li>A\u00f1adir el login a la sesi\u00f3n</li> <li>Comprobar el login en la sesi\u00f3n para realizar tareas espec\u00edficas del usuario</li> <li>Eliminar el login de la sesi\u00f3n cuando el usuario la cierra.</li> </ul> <p>Vamos a ver en c\u00f3digo cada paso del proceso. Comenzamos con el archivo <code>index.php</code>:</p> <pre><code>&lt;form action='login.php' method='post'&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Login&lt;/legend&gt;\n    &lt;div&gt;&lt;span class='error'&gt;&lt;?php echo $error; ?&gt;&lt;/span&gt;&lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='usuario'&gt;Usuario:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='text' name='inputUsuario' id='usuario' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='password'&gt;Contrase\u00f1a:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='password' name='inputPassword' id='password' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;input type='submit' name='enviar' value='Enviar' /&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n  &lt;/form&gt;\n</code></pre> <p>Al hacer submit nos lleva a <code>login.php</code>, el cual hace de controlador:</p> <pre><code>&lt;?php\n// Comprobamos si ya se ha enviado el formulario\nif (isset($_POST['enviar'])) {\n    $usuario = $_POST['inputUsuario'];\n    $password = $_POST['inputPassword'];\n\n    // validamos que recibimos ambos par\u00e1metros\n    if (empty($usuario) || empty($password)) {\n        $error = \"Debes introducir un usuario y contrase\u00f1a\";\n        include \"index.php\";\n    } else {\n        if ($usuario == \"admin\" &amp;&amp; $password == \"admin\") {\n            // almacenamos el usuario en la sesi\u00f3n\n            session_start();\n            $_SESSION['usuario'] = $usuario;\n            // cargamos la p\u00e1gina principal\n            include \"main.php\";\n        } else {\n            // Si las credenciales no son v\u00e1lidas, se vuelven a pedir\n            $error = \"Usuario o contrase\u00f1a no v\u00e1lidos!\";\n            include \"index.php\";\n        }\n    }\n}\n</code></pre> <p>Dependiendo del usuario que se haya logueado, vamos a ir a una vista o a otra. Por ejemplo, en <code>main.php</code> tendr\u00edamos:</p> <pre><code>&lt;?php\n    // Recuperamos la informaci\u00f3n de la sesi\u00f3n\n    if(!isset($_SESSION)) {\n        session_start();\n    }\n\n    // Y comprobamos que el usuario se haya autentificado\n    if (!isset($_SESSION['usuario'])) {\n       die(\"Error - debe &lt;a href='index.php'&gt;identificarse&lt;/a&gt;.&lt;br /&gt;\");\n    }\n?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Listado de productos&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Bienvenido &lt;?= $_SESSION['usuario'] ?&gt;&lt;/h1&gt;\n    &lt;p&gt;Pulse &lt;a href=\"logout.php\"&gt;aqu\u00ed&lt;/a&gt; para salir&lt;/p&gt;\n    &lt;p&gt;Volver al &lt;a href=\"main.php\"&gt;inicio&lt;/a&gt;&lt;/p&gt;\n    &lt;h2&gt;Listado de productos&lt;/h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Producto 1&lt;/li&gt;\n        &lt;li&gt;Producto 2&lt;/li&gt;\n        &lt;li&gt;Producto 3&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Finalmente, necesitamos la opci\u00f3n de cerrar la sesi\u00f3n que colocamos en <code>logout.php</code>:</p> <pre><code>&lt;?php\n// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n\n// Y la destruimos\nsession_destroy();\nheader(\"Location: index.php\");\n?&gt;\n</code></pre> <p>Autenticaci\u00f3n en producci\u00f3n</p> <p>En la actualidad la autenticaci\u00f3n de usuario no se realiza gestionando la sesi\u00f3n direcamente, sino que se realiza mediante alg\u00fan framekwork que abstrae todo el proceso o la integraci\u00f3n de mecanismos de autenticaci\u00f3n tipo OAuth, como  estudiaremos en la \u00faltima unidad mediante Laravel.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb.html#referencias","title":"Referencias","text":"<ul> <li>Cookies en PHP</li> <li>Manejo de sesiones en PHP</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html","title":"Programaci\u00f3n Web","text":"Duraci\u00f3n y criterios de evaluaci\u00f3n <p>Duraci\u00f3n estimada: 12 sesiones</p> Resultado de aprendizaje Criterios de evaluaci\u00f3n 4. Desarrolla aplicaciones Web embebidas en lenguajes de marcas analizando e incorporando funcionalidades seg\u00fan especificaciones. a) Se han identificado los mecanismos disponibles para el mantenimiento de la informaci\u00f3n que concierne a un cliente web concreto y se han se\u00f1alado sus ventajas. b) Se han utilizado sesiones para mantener el estado de las aplicaciones Web.  c) Se han utilizado cookies para almacenar informaci\u00f3n en el cliente Web y para recuperar su contenido.  d) Se han identificado y caracterizado los mecanismos disponibles para la autentificaci\u00f3n de usuarios.  e) Se han escrito aplicaciones que integren mecanismos de autentificaci\u00f3n de usuarios.  f) Se han realizado adaptaciones a aplicaciones Web existentes como gestores de contenidos u otras.  g) Se han utilizado herramientas y entornos para facilitar la programaci\u00f3n, prueba y depuraci\u00f3n del c\u00f3digo."},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#variables-de-servidor","title":"Variables de servidor","text":"<p>PHP almacena la informaci\u00f3n del servidor y de las peticiones HTTP en seis arrays globales:</p> <ul> <li><code>$_ENV</code>: informaci\u00f3n sobre las variables de entorno</li> <li><code>$_GET</code>: par\u00e1metros enviados en la petici\u00f3n GET</li> <li><code>$_POST</code>: par\u00e1metros enviados en el envio POST</li> <li><code>$_COOKIE</code>: contiene las cookies de la petici\u00f3n, las claves del array son los nombres de las cookies</li> <li><code>$_SERVER</code>: informaci\u00f3n sobre el servidor</li> <li><code>$_FILES</code>: informaci\u00f3n sobre los ficheros cargados via upload</li> </ul> <p>Si nos centramos en el array <code>$_SERVER</code> podemos consultar las siguientes propiedades:</p> <ul> <li><code>PHP_SELF</code>: nombre del script ejecutado, relativo al document root (p.ej: <code>/tienda/carrito.php</code>)</li> <li><code>SERVER_SOFTWARE</code>: (p.ej: Apache)</li> <li><code>SERVER_NAME</code>: dominio, alias DNS (p.ej: <code>www.elche.es</code>)</li> <li><code>REQUEST_METHOD</code>: GET</li> <li><code>REQUEST_URI</code>: URI, sin el dominio</li> <li><code>QUERY_STRING</code>: todo lo que va despu\u00e9s de <code>?</code> en la URL (p.ej: <code>heroe=Batman&amp;nombre=Bruce</code>)</li> </ul> <p>M\u00e1s informaci\u00f3n en https://www.php.net/manual/es/reserved.variables.server.php</p> <pre><code>&lt;?php\necho $_SERVER[\"PHP_SELF\"].\"&lt;br&gt;\"; // /u4/401server.php\necho $_SERVER[\"SERVER_SOFTWARE\"].\"&lt;br&gt;\"; // Apache/2.4.46 (Win64) OpenSSL/1.1.1g PHP/7.4.9\necho $_SERVER[\"SERVER_NAME\"].\"&lt;br&gt;\"; // localhost\n\necho $_SERVER[\"REQUEST_METHOD\"].\"&lt;br&gt;\"; // GET\necho $_SERVER[\"REQUEST_URI\"].\"&lt;br&gt;\"; // /u4/401server.php?heroe=Batman\necho $_SERVER[\"QUERY_STRING\"].\"&lt;br&gt;\"; // heroe=Batman\n</code></pre> <p>Otras propiedades relacionadas:</p> <ul> <li><code>PATH_INFO</code>: ruta extra tras la petici\u00f3n. Si la URL es <code>http://www.php.com/php/pathInfo.php/algo/cosa?foo=bar</code>, entonces <code>$_SERVER['PATH_INFO']</code> ser\u00e1 <code>/algo/cosa</code>.</li> <li><code>REMOTE_HOST</code>: hostname que hizo la petici\u00f3n</li> <li><code>REMOTE_ADDR</code>: IP del cliente</li> <li><code>AUTH_TYPE</code>: tipo de autenticaci\u00f3n (p.ej: Basic)</li> <li><code>REMOTE_USER</code>: nombre del usuario autenticado</li> </ul> <p>Apache crea una clave para cada cabecera HTTP, en may\u00fasculas y sustituyendo los guiones por subrayados:</p> <ul> <li><code>HTTP_USER_AGENT</code>: agente (navegador)</li> <li><code>HTTP_REFERER</code>: p\u00e1gina desde la que se hizo la petici\u00f3n</li> </ul> <pre><code>&lt;?php\necho $_SERVER[\"HTTP_USER_AGENT\"].\"&lt;br&gt;\"; // Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#formularios","title":"Formularios","text":"<p>A la hora de enviar un formulario, debemos tener claro cuando usar GET o POST</p> <ul> <li> <p>GET: los par\u00e1metros se pasan en la URL</p> <ul> <li>&lt;2048 caracteres, s\u00f3lo ASCII</li> <li>Permite almacenar la direcci\u00f3n completa (marcador  / historial)</li> <li>Idempotente: dos llamadas con los mismos datos siempre debe dar el mismo resultado</li> <li>El navegador puede cachear las llamadas</li> </ul> </li> <li> <p>POST: par\u00e1metros ocultos (no encriptados)</p> <ul> <li>Sin l\u00edmite de datos, permite datos binarios.</li> <li>No se pueden cachear</li> <li>No idempotente \u2192 actualizar la BBDD</li> </ul> </li> </ul> <p>As\u00ed pues, para recoger los datos accederemos al array dependiendo del m\u00e9todo del formulario que nos ha invocado:</p> <pre><code>&lt;?php\n$par = $_GET[\"parametro\"]\n$par = $_POST[\"parametro\"]\n</code></pre> <p>Para los siguientes apartados nos vamos a basar en el siguiente ejemplo:</p> <pre><code>&lt;form action=\"formulario.php\" method=\"GET\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"\" /&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\" /&gt;\n        &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\" /&gt;\n        &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n    &lt;/p&gt;\n\n    &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\" /&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#validacion","title":"Validaci\u00f3n","text":"<p>Respecto a la validaci\u00f3n, es conveniente siempre hacer validaci\u00f3n doble:</p> <ul> <li>En el cliente mediante JS</li> <li>En servidor, antes de llamar a negocio, es conveniente volver a validar los datos.</li> </ul> <pre><code>&lt;?php\nif (isset($_GET[\"parametro\"])) {\n    $par = $_GET[\"parametro\"];\n    // comprobar si $par tiene el formato adecuado, su valor, etc...\n}\n</code></pre> <p>Librer\u00edas de validaci\u00f3n</p> <p>Existen diversas librer\u00edas que facilitan la validaci\u00f3n de los formularios, como son respect/validation o particle/validator. Cuando estudiemos Laravel profundizaremos en la validaci\u00f3n de forma declarativa.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#parametro-multivalor","title":"Par\u00e1metro multivalor","text":"<p>Existen elementos HTML que env\u00edan varios valores:</p> <ul> <li><code>select multiple</code></li> <li><code>checkbox</code></li> </ul> <p>Para recoger los datos, el nombre del elemento debe ser un array.</p> <pre><code>&lt;select name=\"lenguajes[]\" multiple=\"true\"&gt;\n    &lt;option value=\"c\"&gt;C&lt;/option&gt;\n    &lt;option value=\"java\"&gt;Java&lt;/option&gt;\n    &lt;option value=\"php\"&gt;PHP&lt;/option&gt;\n    &lt;option value=\"python\"&gt;Python&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"c\" /&gt; C&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"java\" /&gt; Java&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"php\" /&gt; Php&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"python\" /&gt; Python&lt;br /&gt;\n</code></pre> <p>De manera que luego al recoger los datos:</p> <pre><code>&lt;?php\n$lenguajes = $_GET[\"lenguajes\"];\n\nforeach ($lenguajes as $lenguaje) {\n    echo \"$lenguaje &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#volviendo-a-rellenar-un-formulario","title":"Volviendo a rellenar un formulario","text":"<p>Un sticky form es un formulario que recuerda sus valores. Para ello, hemos de rellenar los atributos <code>value</code> de los elementos HTML con la informaci\u00f3n que conten\u00edan:</p> <pre><code>&lt;?php\nif (!empty($_POST['modulos']) &amp;&amp; !empty($_POST['nombre'])) {\n  // Aqu\u00ed se incluye el c\u00f3digo a ejecutar cuando los datos son correctos\n} else {\n  // Generamos el formulario\n  $nombre = $_POST['nombre'] ?? \"\";\n  $modulos = $_POST['modulos'] ?? [];\n  ?&gt;\n  &lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n   &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"&lt;?= $nombre ?&gt;\" /&gt; \n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\"\n    &lt;?php if(in_array(\"DWES\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\"\n    &lt;?php if(in_array(\"DWEC\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\"/&gt;\n  &lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#subiendo-archivos","title":"Subiendo archivos","text":"<p>Se almacenan en el servidor en el array <code>$_FILES</code> con el nombre del campo del tipo <code>file</code> del formulario.</p> <pre><code>&lt;form enctype=\"multipart/form-data\" action=\"&lt;?php echo $_SERVER['PHP_SELF']; ?&gt;\"  method=\"POST\"&gt;\n    Archivo: &lt;input name=\"archivoEnviado\" type=\"file\" /&gt;\n    &lt;br /&gt;\n    &lt;input type=\"submit\" name=\"btnSubir\" value=\"Subir\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Configuraci\u00f3n en <code>php.ini</code></p> <ul> <li><code>file_uploads</code>: on / off</li> <li><code>upload_max_filesize</code>: 2M</li> <li><code>upload_tmp_dir</code>: directorio temporal. No es necesario configurarlo, coger\u00e1 el predeterminado del sistema</li> <li><code>post_max_size</code>: tama\u00f1o m\u00e1ximo de los datos POST. Debe ser mayor a upload_max_filesize.</li> <li><code>max_file_uploads</code>: n\u00famero m\u00e1ximo de archivos que se pueden cargar a la vez.</li> <li><code>max_input_time</code>: tiempo m\u00e1ximo empleado en la carga (GET/POST y upload \u2192 normalmente se configura en 60)</li> <li><code>memory_limit</code>: 128M</li> <li><code>max_execution_time</code>: tiempo de ejecuci\u00f3n de un script (no tiene en cuenta el upload)</li> </ul> <p>Para cargar los archivos, accedemos al array <code>$_FILES</code>:</p> <pre><code>&lt;?php\nif (isset($_POST['btnSubir']) &amp;&amp; $_POST['btnSubir'] == 'Subir') {\n    if (is_uploaded_file($_FILES['archivoEnviado']['tmp_name'])) {\n        // subido con \u00e9xito\n        $nombre = $_FILES['archivoEnviado']['name'];\n        move_uploaded_file($_FILES['archivoEnviado']['tmp_name'], \"./uploads/{$nombre}\");\n\n        echo \"&lt;p&gt;Archivo $nombre subido con \u00e9xito&lt;/p&gt;\";\n    }\n}\n</code></pre> <p>Cada archivo cargado en <code>$_FILES</code> tiene:</p> <ul> <li><code>name</code>: nombre</li> <li><code>tmp_name</code>: ruta temporal</li> <li><code>size</code>: tama\u00f1o en bytes</li> <li><code>type</code>: tipo MIME</li> <li><code>error</code>: si hay error, contiene un mensaje. Si ok \u2192 0.</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#cabeceras-de-respuesta","title":"Cabeceras de respuesta","text":"<p>Debe ser lo primero a devolver. Se devuelven mediante la funci\u00f3n <code>header(cadena)</code>. Mediante las cabeceras podemos configurar el tipo de contenido, tiempo de expiraci\u00f3n, redireccionar el navegador, especificar errores HTTP, etc.</p> <pre><code>&lt;?php header(\"Content-Type: text/plain\"); ?&gt;\n&lt;?php header(\"Location: http://www.ejemplo.com/inicio.html\");\nexit(); \n</code></pre> <p>Se puede comprobar en las herramientas del desarrollador de los navegadores web mediante Developer Tools \u2192 Network \u2192 Headers.</p> <p>Es muy com\u00fan configurar las cabeceras para evitar consultas a la cach\u00e9 o provocar su renovaci\u00f3n:</p> <pre><code>&lt;?php\nheader(\"Expires: Sun, 31 Jan 2021 23:59:59 GMT\");\n// tres horas\n$now = time();\n$horas3 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 60 * 60 * 3);\nheader(\"Expires: {$horas3}\");\n// un a\u00f1o\n$now = time();\n$anyo1 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 365 * 86440);\nheader(\"Expires: {$anyo1}\");\n// se marca como expirado (fecha en el pasado)\n$pasado = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\");\nheader(\"Expires: {$pasado}\");\n// evitamos cache de navegador y/o proxy\nheader(\"Expires: Mon, 26 Jul 1997 05:00:00 GMT\");\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\nheader(\"Cache-Control: no-store, no-cache, must-revalidate\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#gestion-del-estado","title":"Gesti\u00f3n del estado","text":"<p>HTTP es un protocolo stateless, sin estado. Por ello, se simula el estado mediante el uso de cookies, tokens o la sesi\u00f3n. El estado es necesario para procesos tales como el carrito de la compra, operaciones asociadas a un usuario, etc... El mecanismo de PHP para gestionar la sesi\u00f3n emplea cookies de forma interna. Las cookies se almacenan en el navegador, y la sesi\u00f3n en el servidor web.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#cookies","title":"Cookies","text":"<p>Las cookies se almacenan en el array global <code>$_COOKIE</code>. Lo que coloquemos dentro del array, se guardar\u00e1 en el cliente. Hay que tener presente que el cliente puede no querer almacenarlas.</p> <p>Existe una limitaci\u00f3 de 20 cookies por dominio y 300 en total en el navegador.</p> <p>En PHP, para crear una cookie se utiliza la funci\u00f3n <code>setcookie</code>:</p> <pre><code>&lt;?php\nsetcookie(nombre [, valor [, expira [, ruta [, dominio [, seguro [, httponly ]]]]]]);\nsetcookie(nombre [, valor = \"\" [, opciones = [] ]] )\n?&gt;\n</code></pre> <p>Destacar que el nombre no puede contener espacios ni el caracter <code>;</code>. Respecto al contenido de la cookie, no puede superar los 4 KB.</p> <p>Por ejemplo, mediante cookies podemos comprobar la cantidad de visitas diferentes que realiza un usuario:</p> <pre><code>&lt;?php\n$accesosPagina = 0;\nif (isset($_COOKIE['accesos'])) { \n    $accesosPagina = $_COOKIE['accesos']; // recuperamos una cookie\n    setcookie('accesos', ++$accesosPagina); // le asignamos un valor\n}\n?&gt;\n</code></pre> <p>Inspeccionando las cookies</p> <p>Si queremos ver que contienen las cookies que tenemos almacenadas en el navegador, se puede comprobar su valor en Dev Tools \u2192 Application \u2192 Storage</p> <p>El tiempo de vida de las cookies puede ser tan largo como el sitio web en el que residen. Ellas seguir\u00e1n ah\u00ed, incluso si el navegador est\u00e1 cerrado o abierto.</p> <p>Para borrar una cookie se puede poner que expiren en el pasado:</p> <pre><code>&lt;?php\nsetcookie(nombre, \"\", 1) // pasado\n</code></pre> <p>O que caduquen dentro de un periodo de tiempo deteminado:</p> <pre><code>&lt;?php\nsetcookie(nombre, valor, time() + 3600) // Caducan dentro de una hora\n</code></pre> Comunicaci\u00f3n con cookies <p>Se utilizan para:</p> <ul> <li>Recordar los inicios de sesi\u00f3n</li> <li>Almacenar valores temporales de usuario</li> <li>Si un usuario est\u00e1 navegando por una lista paginada de art\u00edculos, ordenados de cierta manera, podemos almacenar el ajuste de la clasificaci\u00f3n.</li> </ul> <p>La alternativa en el cliente para almacenar informaci\u00f3n en el navegador es el objeto LocalStorage.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#sesion","title":"Sesi\u00f3n","text":"<p>La sesi\u00f3n a\u00f1ade la gesti\u00f3n del estado a HTTP, almacenando en este caso la informaci\u00f3n en el servidor. Cada visitante tiene un ID de sesi\u00f3n \u00fanico, el cual por defecto se almacena en una cookie denominada <code>PHPSESSID</code>. Si el cliente no tiene las cookies activas, el ID se propaga en cada URL dentro del mismo dominio. Cada sesi\u00f3n tiene asociado un almac\u00e9n de datos mediante el array global <code>$_SESSION</code>, en el cual podemos almacenar y recuperar informaci\u00f3n.</p> <p>La sesi\u00f3n comienza al ejecutar un script PHP. Se genera un nuevo ID y se cargan los datos del almac\u00e9n:</p> Comunicaci\u00f3n con sesi\u00f3n <p>Las operaciones que podemos realizar con la sesi\u00f3n son:</p> <pre><code>&lt;?php\nsession_start(); // carga la sesi\u00f3n\nsession_id() // devuelve el id\n$_SESSION[clave] = valor; // inserci\u00f3n\nsession_destroy(); // destruye la sesi\u00f3n\nunset($_SESSION[clave]; // borrado\n</code></pre> <p>Vamos a ver mediante un ejemplo como podemos insertar en un p\u00e1gina datos en la sesi\u00f3n para posteriormente en otra p\u00e1gina acceder a esos datos. Por ejemplo, en <code>sesion1.php</code> tendr\u00edamos</p> <pre><code>&lt;?php\nsession_start(); // inicializamos\n$_SESSION[\"ies\"] = \"IES Severo Ochoa\"; // asignaci\u00f3n\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Estamos en el $instituto \";\n?&gt;\n&lt;br /&gt;\n&lt;a href=\"sesion2.php\"&gt;Y luego&lt;/a&gt;\n</code></pre> <p>Y posteriormente podemos acceder a la sesi\u00f3n en <code>sesion2.php</code>:</p> <pre><code>&lt;?php\nsession_start();\n$instituto = $_SESSION[\"ies\"]; // recuperaci\u00f3n\necho \"Otra vez, en el $instituto \";\n?&gt;\n</code></pre> <p>Configurando la sesi\u00f3n en <code>php.ini</code></p> <p>Las siguiente propiedades de <code>php.ini</code> permiten configurar algunos aspectos de la sesi\u00f3n:</p> <pre><code>* `session.save_handler`: controlador que gestiona c\u00f3mo se almacena (`files`)\n* `session.save_path`: ruta donde se almacenan los archivos con los datos (si tenemos un cluster, podr\u00edamos usar `/mnt/sessions` en todos los servidor de manera que apuntan a una carpeta compartida)\n* `session.name`: nombre de la sesi\u00f3n (`PHSESSID`)\n* `session.auto_start`: Se puede hacer que se autocargue con cada script. Por defecto est\u00e1 deshabilitado\n* `session.cookie_lifetime`: tiempo de vida por defecto\n\nM\u00e1s informaci\u00f3n en la [documentaci\u00f3n oficial](https://www.php.net/manual/es/session.configuration.php).\n</code></pre>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#autentificacion-de-usuarios","title":"Autentificaci\u00f3n de usuarios","text":"<p>Una sesi\u00f3n establece una relaci\u00f3n an\u00f3nima con un usuario particular, de manera que podemos saber si es el mismo usuario entre dos peticiones distintas. Si preparamos un sistema de login, podremos saber quien utiliza nuestra aplicaci\u00f3n.</p> <p>Para ello, preparemos un sencillo sistema de autenticaci\u00f3n:</p> <ul> <li>Mostrar el formulario login/password</li> <li>Comprobar los datos enviados</li> <li>A\u00f1adir el login a la sesi\u00f3n</li> <li>Comprobar el login en la sesi\u00f3n para realizar tareas espec\u00edficas del usuario</li> <li>Eliminar el login de la sesi\u00f3n cuando el usuario la cierra.</li> </ul> <p>Vamos a ver en c\u00f3digo cada paso del proceso. Comenzamos con el archivo <code>index.php</code>:</p> <pre><code>&lt;form action='login.php' method='post'&gt;\n  &lt;fieldset&gt;\n    &lt;legend&gt;Login&lt;/legend&gt;\n    &lt;div&gt;&lt;span class='error'&gt;&lt;?php echo $error; ?&gt;&lt;/span&gt;&lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='usuario'&gt;Usuario:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='text' name='inputUsuario' id='usuario' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;label for='password'&gt;Contrase\u00f1a:&lt;/label&gt;&lt;br /&gt;\n        &lt;input type='password' name='inputPassword' id='password' maxlength=\"50\" /&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;div class='fila'&gt;\n        &lt;input type='submit' name='enviar' value='Enviar' /&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n  &lt;/form&gt;\n</code></pre> <p>Al hacer submit nos lleva a <code>login.php</code>, el cual hace de controlador:</p> <pre><code>&lt;?php\n// Comprobamos si ya se ha enviado el formulario\nif (isset($_POST['enviar'])) {\n    $usuario = $_POST['inputUsuario'];\n    $password = $_POST['inputPassword'];\n\n    // validamos que recibimos ambos par\u00e1metros\n    if (empty($usuario) || empty($password)) {\n        $error = \"Debes introducir un usuario y contrase\u00f1a\";\n        include \"index.php\";\n    } else {\n        if ($usuario == \"admin\" &amp;&amp; $password == \"admin\") {\n            // almacenamos el usuario en la sesi\u00f3n\n            session_start();\n            $_SESSION['usuario'] = $usuario;\n            // cargamos la p\u00e1gina principal\n            include \"main.php\";\n        } else {\n            // Si las credenciales no son v\u00e1lidas, se vuelven a pedir\n            $error = \"Usuario o contrase\u00f1a no v\u00e1lidos!\";\n            include \"index.php\";\n        }\n    }\n}\n</code></pre> <p>Dependiendo del usuario que se haya logueado, vamos a ir a una vista o a otra. Por ejemplo, en <code>main.php</code> tendr\u00edamos:</p> <pre><code>&lt;?php\n    // Recuperamos la informaci\u00f3n de la sesi\u00f3n\n    if(!isset($_SESSION)) {\n        session_start();\n    }\n\n    // Y comprobamos que el usuario se haya autentificado\n    if (!isset($_SESSION['usuario'])) {\n       die(\"Error - debe &lt;a href='index.php'&gt;identificarse&lt;/a&gt;.&lt;br /&gt;\");\n    }\n?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Listado de productos&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Bienvenido &lt;?= $_SESSION['usuario'] ?&gt;&lt;/h1&gt;\n    &lt;p&gt;Pulse &lt;a href=\"logout.php\"&gt;aqu\u00ed&lt;/a&gt; para salir&lt;/p&gt;\n    &lt;p&gt;Volver al &lt;a href=\"main.php\"&gt;inicio&lt;/a&gt;&lt;/p&gt;\n    &lt;h2&gt;Listado de productos&lt;/h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Producto 1&lt;/li&gt;\n        &lt;li&gt;Producto 2&lt;/li&gt;\n        &lt;li&gt;Producto 3&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Finalmente, necesitamos la opci\u00f3n de cerrar la sesi\u00f3n que colocamos en <code>logout.php</code>:</p> <pre><code>&lt;?php\n// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n\n// Y la destruimos\nsession_destroy();\nheader(\"Location: index.php\");\n?&gt;\n</code></pre> <p>Autenticaci\u00f3n en producci\u00f3n</p> <p>En la actualidad la autenticaci\u00f3n de usuario no se realiza gestionando la sesi\u00f3n direcamente, sino que se realiza mediante alg\u00fan framekwork que abstrae todo el proceso o la integraci\u00f3n de mecanismos de autenticaci\u00f3n tipo OAuth, como  estudiaremos en la \u00faltima unidad mediante Laravel.</p>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#referencias","title":"Referencias","text":"<ul> <li>Cookies en PHP</li> <li>Manejo de sesiones en PHP</li> </ul>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#actividades","title":"Actividades","text":"<ol> <li><code>401server.php</code>: igual que el ejemplo visto en los apuntes, muestra los valores de <code>$_SERVER</code> al ejecutar un script en tu ordenador.      Prueba a pasarle par\u00e1metros por GET (y a no pasarle ninguno).      Prepara un formulario (<code>401post.html</code>) que haga un env\u00edo por POST y compru\u00e9balo de nuevo.      Crea una p\u00e1gina (<code>401enlace.html</code>) que tenga un enlace a <code>401server.php</code> y comprueba el valor de <code>HTTP_REFERER</code>.</li> </ol>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#formularios_1","title":"Formularios","text":"<ol> <li> <p><code>402formulario.html</code> y <code>402formulario.php</code>: Crea un formulario que solicite:</p> <ul> <li>Nombre y apellidos.</li> <li>Email.</li> <li>URL p\u00e1gina personal.</li> <li>Sexo (radio).</li> <li>N\u00famero de convivientes en el domicilio.</li> <li>Aficiones (checkboxes) \u2013 poner m\u00ednimo 4 valores.</li> <li>Men\u00fa favorito (lista selecci\u00f3n m\u00faltiple) \u2013 poner m\u00ednimo 4 valores.</li> </ul> <p>Muestra los valores cargados en una tabla-resumen.</p> </li> <li> <p><code>403validacion.php</code>: A partir del formulario anterior, introduce validaciones en HTML mediante el atributo <code>required</code> de los campos (uso los tipos adecuados para cada campo), y en comprueba los tipos de los datos y que cumplen los valores esperados (por ejemplo, en los checkboxes que los valores recogidos forman parte de todos los posibles). Puedes probar a pasarle datos erroneos via URL y comprobar su comportamiento.      Tip: Investiga el uso de la funci\u00f3n <code>filter_var</code>.</p> </li> <li> <p><code>404subida.html</code> y <code>404subida.php</code>: Crea un formulario que permita subir un archivo al servidor.      Adem\u00e1s del fichero, debe pedir en el mismo formulario dos campos num\u00e9ricos que soliciten la anchura y la altura. Comprueba que tanto el fichero como los datos llegan correctamente.</p> </li> <li> <p><code>405subidaImagen.php</code>: Modifica el ejercicio anterior para que \u00fanicamente permita subir im\u00e1genes (comprueba la propiedad <code>type</code> del archivo subido). Si el usuario selecciona otro tipo de archivos, se le debe informar del error y permitir que suba un nuevo archivo.      En el caso de subir el tipo correcto, visualizar la imagen con el tama\u00f1o de anchura y altura recibido como par\u00e1metro.</p> </li> </ol>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#cookies-y-sesion","title":"Cookies y Sesi\u00f3n","text":"<ol> <li> <p><code>406contadorVisitas.php</code>: Mediante el uso de cookies, informa al usuario de si es su primera visita, o si no lo es, muestre su valor (valor de un contador).      Adem\u00e1s, debes permitir que el usuario reinicialice su contador de visitas.</p> </li> <li> <p><code>407fondo.php</code>: Mediante el uso de cookies, crea una p\u00e1gina con un desplegable con varios colores, de manera que el usuario pueda cambiar el color de fondo de la p\u00e1gina (atributo <code>bgcolor</code>).      Al cerrar la p\u00e1gina, \u00e9sta debe recordar, al menos durante 24h, el color elegido y la pr\u00f3xima vez que se cargue la pagina, lo haga con el \u00faltimo color seleccionado.</p> </li> <li> <p><code>408fondoSesion1.php</code>: Modifica el ejercicio anterior para almacenar el color de fondo en la sesi\u00f3n y no emplear cookies. Adem\u00e1s, debe contener un enlace al siguiente archivo.      <code>408fondoSesion2.php</code>: Debe mostrar el color y dar la posibilidad de:</p> <ul> <li>volver a la p\u00e1gina anterior mediante un enlace</li> <li>y mediante otro enlace, vaciar la sesi\u00f3n y volver a la p\u00e1gina anterior.</li> </ul> </li> <li> <p>Haciendo uso de la sesi\u00f3n, vamos a dividir el formulario del ejercicio <code>402formulario.php</code> en 2 subformularios:</p> <ul> <li><code>409formulario1.php</code> env\u00eda los datos (nombre y apellidos, email, url y sexo) a <code>409formulario2.php</code>.</li> <li><code>409formulario2.php</code> lee los datos y los mete en la sesi\u00f3n. A continuaci\u00f3n, muestra el resto de campos del formulario a rellenar (convivientes, aficiones y men\u00fa). Env\u00eda estos datos a <code>409formulario3.php</code>.</li> <li><code>409formulario3.php</code> recoge los datos enviados en el paso anterior y junto a los que ya estaban en la sesi\u00f3n, se muestran todos los datos en una tabla/lista desordenada.</li> </ul> </li> </ol>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#autenticacion","title":"Autenticaci\u00f3n","text":"<p>En los siguientes ejercicios vamos a montar una estructura de inicio de sesi\u00f3n similar a la vista en los apuntes.</p> <ol> <li><code>410index.php</code>: formulario de inicio de sesi\u00f3n</li> <li><code>411login.php</code>: hace de controlador, por lo que debe comprobar los datos recibidos (solo permite la entrada de <code>usuario/usuario</code> y si todo es correcto, ceder el control a la vista del siguiente ejercicio. No contiene c\u00f3digo HTML.</li> <li><code>412peliculas.php</code>: vista que muestra como t\u00edtulo \"Listado de Pel\u00edculas\", y una lista desordenada con tres pel\u00edculas.</li> <li><code>413logout.php</code>: vac\u00eda la sesi\u00f3n y nos lleva de nuevo al formulario de inicio de sesi\u00f3n. No contiene c\u00f3digo HTML</li> <li><code>414series.php</code>: A\u00f1ade un nueva vista similar a <code>412peliculas.php</code> que muestra un \"Listado de Series\" con una lista desordenada con tres series. Tanto <code>412pelicuas.php</code> como la vista recien creadas, deben tener un peque\u00f1o men\u00fa (sencillo, mediante enlaces) que permita pasar de un listado a otro.      Comprueba que si se accede directamente a cualquiera de las vistas sin tener un usuario logueado via URL del navegador, no se muestra el listado.</li> <li>Modifica tanto el controlador como las vistas para que:<ul> <li>los datos los obtenga el controlador (almacena en la sesi\u00f3n un array de pel\u00edculas y otro de series)</li> <li>coloque los datos en la sesi\u00f3n</li> <li>En las vistas, los datos se recuperan de la sesi\u00f3n y se pintan en la lista desordenada recorriendo el array correspondiente.</li> </ul> </li> </ol>"},{"location":"Moduls/DWES/UT04ProgramacioWeb__.html#proyecto-videoclub-30","title":"Proyecto Videoclub 3.0","text":"<ol> <li> <p>Para el Videoclub, vamos a crear una p\u00e1gina <code>index.php</code> con un formulario que contenga un formulario de login/password.      Se comprobar\u00e1n los datos en <code>login.php</code>. Los posibles usuarios son admin/admin o usuario/usuario</p> <ul> <li>Si el usuario es correcto, en <code>main.php</code> mostrar un mensaje de bienvenida con el nombre del usuario, junto a un enlace para cerrar la sesi\u00f3n, que lo llevar\u00eda de nuevo al login.</li> <li>Si el usuario es incorrecto, debe volver a cargar el formulario dando informaci\u00f3n al usuario de acceso incorrecto.</li> </ul> </li> <li> <p>Si el usuario es administrador, se cargar\u00e1n en la sesi\u00f3n los datos de soportes y clientes del videoclub que ten\u00edamos en nuestras pruebas (no mediante <code>include</code> sino copiando los datos e insert\u00e1ndolos en un array asociativo, el cual colocaremos posteriormente en la sesi\u00f3n).</p> <p>En la siguiente unidad los obtendremos de la base de datos. En <code>mainAdmin.php</code>, adem\u00e1s de la bienvenida, debe mostrar:     * Listado de clientes     * Listado de soportes</p> <p> Esquema navegaci\u00f3n ejercicio 423 </p> </li> <li> <p>Vamos a modificar la clase <code>Cliente</code> para almacenar el <code>user</code> y la <code>password</code> de cada cliente.      Tras codificar los cambios, modificar el listado de clientes de <code>mainAdmin.php</code> para a\u00f1adir al listado el usuario.</p> </li> <li> <p>Si el usuario que accede no es administrador y coincide con alguno de los clientes que tenemos cargados tras el login, debe cargar <code>mainCliente.php</code> donde se mostrar\u00e1 un listado de los alquileres del cliente. Para ello, modificaremos la clase <code>Cliente</code> para ofrecer el m\u00e9todo <code>getAlquileres() : array</code>, el cual llamaremos y luego recorreremos para mostrar el listado solicitado.</p> </li> </ol> <p>Ahora volvemos a la parte de administraci\u00f3n</p> <ol> <li> <p>Adem\u00e1s de mostrar el listado de clientes, vamos a ofrecer la opci\u00f3n de dar de alta a un nuevo cliente en <code>formCreateCliente.php</code>.      Los datos se enviar\u00e1n mediante POST a <code>createCliente.php</code> que los introducir\u00e1 en la sesi\u00f3n.      Una vez creado el cliente, debe volver a cargar <code>mainAdmin.php</code> donde se podr\u00e1 ver el cliente insertado.      Si hay alg\u00fan dato incorrecto, debe volver a cargar el formulario de alta.</p> </li> <li> <p>Crea en <code>formUpdateCliente.php</code> un formulario que permita editar los datos de un cliente.      Debes recoger los datos en <code>updateCliente.php</code>      Los datos de cliente se deben poder modificar desde la propia p\u00e1gina de un cliente, as\u00ed como desde el listado del administrador.</p> </li> <li> <p>Desde el listado de clientes del administrador debes ofrecer la posibilidad de borrar un cliente.      En el navegador, antes de redirigir al servidor, el usuario debe confirmar mediante JS que realmente desea eliminar al cliente.      Finalmente, en <code>removeCliente.php</code> elimina al cliente de la sesi\u00f3n.      Una vez eliminado, debe volver al listado de clientes.</p> </li> </ol> Esquema navegaci\u00f3n Videoclub 3.0"},{"location":"Moduls/DWES/UT05AccesADades.html","title":"UT05AccesADades","text":""},{"location":"Moduls/DWES/UT05AccesADades.html#acceso-a-datos","title":"Acceso a datos","text":"<p>En esta unidad vamos a aprender a acceder a datos que se encuentran en un servidor; recuperando, editando y creando dichos datos a trav\u00e9s de una base de datos.</p> <p>A trav\u00e9s de las distintas capas o niveles, de las cuales 2 de ellas ya conocemos (Apache, PHP) y MySQL la que vamos a estudiar en este tema.</p> Foto de Tima Miroshnichenko"},{"location":"Moduls/DWES/UT05AccesADades.html#estructura-de-una-base-de-datos","title":"Estructura de una base de datos","text":"<p>Sabemos que una base de datos tiene muchos campos con sus nombres y valores, pero adem\u00e1s sabemos que la base de datos debe tener un nombre. por tanto tendr\u00edamos la siguiente estructura para una base de datos:</p> <pre><code>NombreBaseDeDatos\n    |__Tabla-#1\n    |       |__DatosTabla-#1\n    |\n    |__Tabla-#2\n    |       |__DatosTabla-#2\n    |\n    |__Tabla-#3\n    |       |__DatosTabla-#3\n    [...]\n</code></pre> <p>Ve\u00e1moslo en un ejemplo real</p> <pre><code>Ryanair\n    |__pasajero\n    |    |__id[*]\n    |    |__nombre\n    |    |__apellidos\n    |    |__edad\n    |    |__id_vuelo[^]\n    |\n    |__vuelo\n    |    |__id[*]\n    |    |__n_plazas\n    |    |__disponible\n    |    |__id_pais[^]\n    |\n    |__pais\n         |__id[*]\n         |__nombre\n</code></pre>      [*] Clave primaria [^] Clave For\u00e1nea"},{"location":"Moduls/DWES/UT05AccesADades.html#chollosevero","title":"CholloSevero","text":"<p>Como muy bien hab\u00e9is elegido, a lo largo de esta unidad vamos a trabajar con una base de datos que iremos confeccionando conforme avancemos, donde almacenaremos la informaci\u00f3n relacionada con ofertas que publiquen los usuarios y los listaremos en funci\u00f3n de varios filtros; nuevos, m\u00e1s votados, m\u00e1s vistos, m\u00e1s comentados entre otros, al m\u00e1s puro estilo Chollometro.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#sql","title":"SQL","text":"<p>Este lenguaje de consulta estructurada (Structured Query Language) es el que vamos a utilizar para realizar las consultas a nuestras bases de datos para mostrar el contenido en las distintas interfaces web que creemos a lo largo de la unidad. Si quieres saber m\u00e1s detalles visita Wiki SQL</p> <p>Ejemplo de una sentencia SQL donde seleccionamos todas las filas y columnas de nuestra tabla llamada 'pais'</p> <pre><code>SELECT * FROM pais\n</code></pre> <p>Estas sentencias pueden invocarse desde la consola de comandos mediante el int\u00e9rprete mysql (previamente instalado en el sistema) o a trav\u00e9s de la herramienta phpMyAdmin.</p> <p>Las sentencias SQL tambi\u00e9n las podemos usar dentro de nuestro c\u00f3digo php, de tal manera que cuando se cargue nuestra interfaz web, lance una sentecia SQL para mostrar los datos que queramos.</p> <pre><code>&lt;?php\n    // Listado de clientes, ordenados por DNI de manera ASCendente\n    $clientesOrdenadosPorDNI = \"SELECT * FROM `pasajero` ORDER BY `dni`\" ASC;\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#mysqli","title":"MySQLi","text":"<p>PHP hace uso de esta extensi\u00f3n mejorada para poder comunicarse con las bases de datos, ya sean MySQL (4.1 o superior) o MariaDB.</p> <p>Cualquier consulta que queramos hacer a una base de datos necesitaremos hacer uso de la extensi\u00f3n mysqli()</p> <p>Veamos como conectarnos con una base de datos a trav\u00e9s del c\u00f3digo PHP</p> <pre><code>&lt;?php\n    // \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 pruebas.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    // \"SERVIDOR\", \"USUARIO\", \"CONTRASE\u00d1A\", \"BASE DE DATOS\"\n    $conexion = mysqli_connect(\"d939ebf6a741\",\"tuUsuario\",\"1234\",\"pruebas\");\n\n    // COMPROBAMOS LA CONEXI\u00d3N\n    if(mysqli_connect_errno()) {\n        echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n        exit();\n    }\n\n    echo \"&lt;h1&gt;Bienvenid@ a MySQL !!&lt;/h1&gt;\";\n?&gt;\n</code></pre> <ul> <li><code>servidor</code>: El servidor donde se encuentra la base de datos que queremos usar suele ser localhost, pero en nuestro caso, al utilizar Docker ser\u00e1 el nombre de la imagen mysql:8.0 que aparece al dejar el rat\u00f3n encima en el Visual Studio Code</li> </ul> <ul> <li><code>usuarioDB</code>: El usuario de la base de datos</li> <li><code>passwordDB</code>: La contrase\u00f1a para ese usuario de la base de datos</li> <li><code>baseDeDatos</code>: Nombre de la base de datos que queramos usar</li> </ul> <p>Si todo ha salido bien habr\u00e9is visto un mensaje diciendo Bienvenid@ a MySQL !!</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#recuperando-datos-de-una-bd","title":"Recuperando datos de una BD","text":"<p>Ahora que ya sabemos c\u00f3mo conectarnos a una base de datos alojada en nuestro servidor, lo que necesitamos saber es c\u00f3mo recuperar datos almacenados en la base de datos.</p> <p>Durante la instalaci\u00f3n de la imagen de Docker, se ha creado una tabla llamada Pruebas que contiene varios registros de distintas personas.</p> <p>Vamos a recuperar esos datos para ver de qu\u00e9 forma se hace con PHP.</p> <pre><code>&lt;?php\n    // \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 pruebas.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $conexion = mysqli_connect(\"d939ebf6a741\", \"lupa\", \"1234\", \"pruebas\");\n\n    // COMPROBAMOS LA CONEXI\u00d3N\n    if (mysqli_connect_errno()) {\n        echo \"Failed to connect to MySQL: \" . mysqli_connect_error();\n        exit();\n    }\n\n    // CONSULTA A LA BASE DE DATOS\n    $consulta = \"SELECT * FROM `Person`\";\n    $listaUsuarios = mysqli_query($conexion, $consulta);\n\n    // COMPROBAMOS SI EL SERVIDOR NOS HA DEVUELTO RESULTADOS\n    if($listaUsuarios) {\n\n        // RECORREMOS CADA RESULTADO QUE NOS DEVUELVE EL SERVIDOR\n        foreach ($listaUsuarios as $usuario) {\n            echo \"\n                $usuario[id]\n                $usuario[name]\n                &lt;br&gt;\n            \";\n        }\n    }\n?&gt;\n</code></pre> <p>Si todo ha salido bien, por pantalla ver\u00e1s el siguiente listado</p> <pre><code>\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 http://localhost/pruebas.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n1 William\n2 Marc\n3 John\n4 Antonio Moreno\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#php-data-objects-pdo","title":"PHP Data Objects :: PDO","text":"<p>De la misma manera que hemos visto con mysqli, PHP Data Objects (o PDO) es un driver de PHP que se utiliza para trabajar bajo una interfaz de objetos con la base de datos. A d\u00eda de hoy es lo que m\u00e1s se utiliza para manejar informaci\u00f3n desde una base de datos, ya sea relacional o no relacional.</p> <p>De igual manera que pasaba con los objetos en PHP nativos, en la interfaz de MySQL la cosa cambia la hora de conectarnos con una base de datos.</p> <pre><code>&lt;?php\n    $conexion = new PDO('mysql:host=localhost; dbname=dwes', 'dwes', 'abc123');\n</code></pre> <p>Adem\u00e1s, con PDO podemos usar las excepciones con try catch para gestionar los errores que se produzcan en nuestra aplicaci\u00f3n, para ello, como hac\u00edamos antes, debemos encapsular el c\u00f3digo entre bloques try / catch.</p> <p><pre><code>&lt;?php\n\n    $dsn = 'mysql:dbname=prueba;host=127.0.0.1';\n    $usuario = 'usuario';\n    $contrase\u00f1a = 'contrase\u00f1a';\n\n    try {\n        $mbd = new PDO($dsn, $usuario, $contrase\u00f1a);\n        $mbd-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n    } catch (PDOException $e) {\n        echo 'Fall\u00f3 la conexi\u00f3n: ' . $e-&gt;getMessage();\n    }\n</code></pre> En primer lugar, creamos la conexi\u00f3n con la base de datos a trav\u00e9s del constructor PDO pas\u00e1ndole la informaci\u00f3n de la base de datos.</p> <p>En segundo lugar, establecemos los par\u00e1metros para manejar las excepciones, en este caso hemos utilizado:</p> <ul> <li><code>PDO::ATTR_ERRMODE</code> indic\u00e1ndole a PHP que queremos un reporte de errores.</li> <li><code>PDO::ERRMODE_EXCEPTION</code> con este atributo obligamos a que lance excepciones, adem\u00e1s de ser la opci\u00f3n m\u00e1s humana y legible que hay a la hora de controlar errores.</li> </ul> <p>Cualquier error que se lance a trav\u00e9s de PDO, el sistema lanzar\u00e1 una PDOException.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#fichero-de-configuracion-de-la-bd","title":"Fichero de configuraci\u00f3n de la BD","text":"<p>De la misma manera que creamos nuestro archivo de funciones <code>funciones-php</code> y albergamos todas las funciones que se usan de manera global en la aplicaci\u00f3n, podemos establecer un archivo de constantes donde definamos los par\u00e1metros de conexi\u00f3n con la base de datos.</p> <pre><code>&lt;?php\n\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 conexion.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    constDSN = \"mysql:host=localhost;dbname=dwes\";\n    constUSUARIO = \"dwes\";\n    constPASSWORD = \"abc123\";\n\n    /*  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 NO SUBAS ESTE ARCHIVO A git \u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 */\n</code></pre> <p>Este archivo contiene informaci\u00f3n muy sensible as\u00ed que no es recomendable que subas este archivo a git.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#sentencias-preparadas","title":"Sentencias preparadas","text":"<p>Se trata de sentencias que se establecen como si fueran plantillas de la SQL que vamos a lanzar, aceptando par\u00e1metros que son establecidos a posteriori de la declaraci\u00f3n de la sentencia preparada.</p> <p>Las sentencias preparadas evitan la injecci\u00f3n de SQL (SQL Injection) y mejoran el rendimiento de nuestras aplicaci\u00f3nes o p\u00e1ginas web.</p> <pre><code>&lt;?php\n    $sql = \"INSERT INTO Clientes VALUES (?, ?, ?, ?)\";\n</code></pre> <p>Cada interrogante es un par\u00e1metro que estableceremos despu\u00e9s, unas cuantas l\u00edneas m\u00e1s abajo.</p> <p>Una vez tenemos la plantilla de nuestra consulta, debemos seguir con la preparaci\u00f3n junto con 3 m\u00e9todos m\u00e1s de PHP para su completa ejecuci\u00f3n:</p> <ul> <li><code>prepare:</code> prepara la sentenci\u00e1n antes de ser ejecutada</li> <li><code>bind</code>: el tipo de uni\u00f3n (bind) de dato que puede ser mediante ' ? ' o ' :parametro '</li> <li><code>execute</code> se ejecuta la consulta uniendo la plantilla con las bariables o par\u00e1metros que hemos establecido.</li> </ul>"},{"location":"Moduls/DWES/UT05AccesADades.html#ejemplo-parametros","title":"Ejemplo par\u00e1metros","text":"<pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Borrando con par\u00e1metros \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try { \n        $cantidad = $_GET[\"cantidad\"];\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = ?\";\n        $sentencia = $conexion -&gt; prepare($sql);\n\n        $isOk = $sentencia -&gt; execute([$cantidad]);\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#ejemplo-bindparam","title":"Ejemplo bindParam","text":"<p>Muy parecido a utilizar par\u00e1metros pero esta vez la variable est\u00e1 dentro de la sentencia SQL, en este caso la hemos llamado <code>:cant</code></p> <pre><code>&lt;?php\n    include \"config/database.inc.php\";\n\n    $conexion=null;\n\n    try {\n        $cantidad = $_GET[\"cantidad\"] ?? 0;\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; bindParam(\":cant\", $cantidad);\n\n        $isOk = $sentencia -&gt; execute();\n\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#bindparam-vs-bindvalue","title":"bindParam VS bindValue","text":"<p>Utilizaremos <code>bindValue()</code> cuando tengamos que insertar datos s\u00f3lo una vez, en cambio, deberemos usar <code>bindParam()</code> cuando tengamos que pasar datos m\u00faltiples, como por ejemplo, un array.</p> <pre><code>&lt;?php\n    // se asignan nombre a los par\u00e1metros\n    $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // bindParam enlaza por referencia\n    $cantidad = 0;\n\n    $sentencia -&gt; bindParam(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 1\n    $isOk = $sentencia -&gt; execute();\n\n    // bindValue enlaza por valor\n    $cantidad = 0;\n\n    $sentencia -&gt; bindValue(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 0\n    $isOk = $sentencia-&gt;execute();\n</code></pre> <p>Para m\u00e1s informaci\u00f3n y uso de las variables PDO consulta el manual de PHP.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#insertando-registros","title":"Insertando registros","text":"<p>A la hora de insertar registros en una base de datos, debemos tener en cuenta que en la tabla puede haber valores autoincrementados. Para salvaguardar \u00e9sto, lo que debemos hacer es dejar ese cambpo autoincrementado vac\u00edo, pero a la hora de hacer la conexi\u00f3n, debemos recuperarlo con el m\u00e9todo <code>lastInsertId()</code>.</p> <pre><code>&lt;?php\n    $nombre = $_GET[\"nombre\"] ?? \"SUCURSAL X\";\n    $telefono = $_GET[\"telefono\"] ?? \"636123456\";\n\n    $sql=\"INSERT INTO tienda(nombre, tlf) VALUES (:nombre, :telefono)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; bindParam(\":nombre\", $nombre);\n    $sentencia -&gt; bindParam(\":telefono\", $telefono);\n\n    $isOk = $sentencia -&gt; execute();\n    $idGenerado = $conexion -&gt; lastInsertId();\n\n    echo $idGenerado;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#consultando-registros","title":"Consultando registros","text":"<p>A la hora de recuperar los resultados de una consulta, bastar\u00e1 con invocar al m\u00e9todo <code>PDOStatement::fetch</code> para listar las filas generadas por la consulta.</p> <p>Pero debemos elegir el tipo de dato que queremos recibir entre los 3 que hay disponibles:</p> <ul> <li><code>PDO::FETCH_ASSOC:</code> array indexado cuyos keys son el nombre de las columnas.</li> <li><code>PDO::FETCH_NUM:</code> array indexado cuyos keys son n\u00fameros.</li> <li><code>PDO::FETCH_BOTH:</code> valor por defecto. Devuelve un array indexado cuyos keys son tanto el nombre de las columnas como n\u00fameros.</li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try{\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"select * from tienda\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n        $sentencia -&gt; execute();\n\n        while($fila = $sentencia -&gt; fetch()){\n            echo \"Codigo:\" . $fila[\"cod\"] . \"&lt;br /&gt;\";\n            echo \"Nombre:\" . $fila[\"nombre\"] . \"&lt;br /&gt;\";\n            echo \"Tel\u00e9fono:\" . $fila[\"tlf\"] . \"&lt;br /&gt;\";\n        }\n\n    }catch(PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre> <p>Recuperando datos con una matriz como resultado de nuestra consulta</p> <p><pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n\n    foreach($tiendasas$tienda) {\n        echo\"Codigo:\" . $tienda[\"cod\"] . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $tienda[\"nombre\"] . \"&lt;br /&gt;\";\n    }\n</code></pre> Pero si lo que queremos es leer datos con forma de objeto utilizando <code>PDO::FETCH_OBJ</code>, debemos crear un objeto con propiedades p\u00fablicas con el mismo nombre que las columnas de la tabla que vayamos a consultar.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con formato de objeto \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_OBJ);\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo\"Codigo:\" . $t -&gt; cod . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $t -&gt; nombre . \"&lt;br /&gt;\";\n        echo\"Tel\u00e9fono:\" . $t -&gt; tlf . \"&lt;br /&gt;\";\n    }\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#consultas-con-modelos","title":"Consultas con modelos","text":"<p>Llevamos tiempo creando clases en PHP y las consultas tambi\u00e9n admiten este tipo de datos mediante el uso de <code>PDO::FETCH_CLASS</code></p> <p>Si usamos este m\u00e9todo, debemos tener en cuenta que los nombres de los atributos privados deben coincidir con los nombres de las columnas de la tabla que vayamos a manejar.</p> <p>As\u00ed pues, si por lo que sea cambiamos la estructura de la tabla DEBEMOS CAMBIAR nuestra clase para que todo siga funcionando.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    classTienda {\n        private int $cod;\n        private string $nombre;\n        private ? string $tlf;\n\n        public function getCodigo() : int {\n            return $this -&gt; cod;\n        }\n\n        public function getNombre() : string {\n            return $this -&gt; nombre;\n        }\n\n        public function getTelefono() : ?string {\n            return $this -&gt; tlf;\n        }\n    }\n</code></pre> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consultando a trav\u00e9s de la clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // Aqu\u00ed 'Tienda' es el nombre de nuestra clase\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS, \"Tienda\");\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo \"Codigo: \" . $t -&gt; getCodigo() . \"&lt;br /&gt;\";\n        echo \"Nombre: \" . $t -&gt; getNombre() . \"&lt;br /&gt;\";\n        echo \"Tel\u00e9fono: \" . $t -&gt; getTelefono() . \"&lt;br /&gt;\";\n\n        var_dump($t);\n    }\n</code></pre> <p>Pero \u00bfqu\u00e9 pasa si nuestras clases tienen constructor? pues que debemos indicarle, al m\u00e9todo FECTH, que rellene las propiedades despu\u00e9s de llamar al constructor y para ello hacemos uso de <code>PDO::FETCH_PROPS_LATE</code>.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consulta para una clase con constructor \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#consultas-con-like","title":"Consultas con LIKE","text":"<p>Para utilizar el comod\u00edn LIKE u otros comodines, debemos asociarlo al dato y NUNCA en la propia consulta.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Utilizando comodines :: LIKE \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda where nombre like :nombre or tlf like :tlf\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n\n    $cadBuscar = \"%\" . $busqueda . \"%\";\n\n    $sentencia -&gt; execute([\"nombre\" =&gt; $cadBuscar,\"tlf\" =&gt; $cadBuscar]);\n\n    $result = $sentencia -&gt; fetchAll();\n</code></pre> <p>Ten\u00e9is una lista de ejemplos muy completa en la documentaci\u00f3n oficial.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#login-password","title":"Login &amp; Password","text":"<p>Para manejar un sistema completo de login y password con contrase\u00f1as cifradas, necesitamos un m\u00e9todo que cifre esos strings que el usuario introduce como contrase\u00f1a; tanto en el formulario de registro como en el del login, ya que al codificar una contrase\u00f1a, despu\u00e9s tenemos que decodificarla para comprobar que ambas contras\u00f1eas (la que instroduce el usuario en el login y la que tenemos en la base de datos) coincidan.</p> <p>Necesitamos pues:</p> <ul> <li> <p><code>password_hash()</code> para almacenar la contrase\u00f1a en la base de datos a la hora de hacer el INSERT</p> <ul> <li> <p><code>PASSWORD_DEFAULT</code> almacenamos la contrase\u00f1a usando el m\u00e9todo de encriptaci\u00f3n bcrypt</p> </li> <li> <p><code>PASSWORD_BCRYPT</code> almacenamos la contrase\u00f1a usando el algoritmo CRYPT_BLOWFISH compatible con crypt()</p> </li> </ul> </li> <li> <p><code>password_verify()</code> para verificar el usuario y la contrase\u00f1a</p> </li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Almacenando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"usuario\"];\n    $pas = $_POST[\"password\"];\n\n    $sql = \"INSERT INTO usuarios(usuario, password) VALUES (:usuario, :password)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    $isOk = $sentencia -&gt; execute([\n        \"usuario\" =&gt; $usu,\n        \"password\" =&gt; password_hash($pas,PASSWORD_DEFAULT)\n    ]);\n</code></pre> <p>Ahora que tenemos el usuario codificado y guardado en la base de datos, vamos a recuperarlo para poder loguearlo correctamente.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Recuperando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"login\"] ?? \"\";\n\n    $sql = \"select * from usuarios where usuario = ?\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; execute([$usu]);\n\n    $usuario = $sentencia -&gt; fetch();\n\n    if($usuario &amp;&amp; password_verify($_POST['pass'], $usuario['password'])) {\n        echo\"OK!\";\n    } else {\n        echo\"KO\";\n    }\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#acceso-a-ficheros","title":"Acceso a ficheros","text":"<p>Gracias a la funcion fopen() desde PHP podemos abrir archivos que se encuentren en nuestros servidor o una URL.</p> <p>A esta funci\u00f3n hay que pasarle 2 par\u00e1metros; el nombre del archivo que queremos abrir y el modo en el que se abrir\u00e1</p> <pre><code>$fp = fopen(\"miarchivo.txt\", \"r\");\n</code></pre> <p>Muchas veces no podemos abrir el archivo porque \u00e9ste no se encuentra o no tenemos acceso a \u00e9l, por eso es recomendable comprobar que podemos hacerlo</p> <pre><code>if (!$fp = fopen(\"miarchivo.txt\", \"r\")){\n    echo \"No se ha podido abrir el archivo\";\n}\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#modos-de-apertura-de-ficheros","title":"Modos de apertura de ficheros","text":"<ul> <li><code>r</code>:  Modo lectura. Puntero al principio del archivo.</li> <li><code>r+</code>: Apertura para lectura y escritura. Puntero al principio del archivo</li> <li><code>w</code>: Apertura para escritura. Puntero al principio del archivo y lo sobreescribe. Si no existe se intenta crear.</li> <li><code>w+</code>: Apertura para lectura y escritura. Puntero al principio del archivo y lo sobreescribe. Si no existe se intenta crear.</li> <li><code>a</code>: Apertura para escritura. Puntero al final del archivo. Si no existe se intenta crear.</li> <li><code>a+</code>: Apertura para lectura y escritura. Puntero al final del archivo. Si no existe se intenta crear.</li> <li><code>x</code>: Creaci\u00f3n y apertura para s\u00f3lo escritura. Puntero al principio del archivo. Si el archivo ya existe dar\u00e1 error E_WARNING. Si no existe se intenta crear.</li> <li><code>x+</code>: Creaci\u00f3n y apertura para lectura y escritura. Mismo comportamiento que x.</li> <li><code>c</code>: Apertura para escritura. Si no existe se crea. Si existe no se sobreescribe ni da ning\u00fan error. Puntero al principio del archivo.</li> <li><code>c+</code>: Apertura para lectura y escritura. Mismo comportamiento que C.</li> <li><code>b</code>: Cuando se trabaja con archivos binarios como jpg, pdf, png y dem\u00e1s. Se suele colocar al final del modo, es decir rb, r+b, x+b, wb...</li> </ul>"},{"location":"Moduls/DWES/UT05AccesADades.html#operaciones-con-archivos","title":"Operaciones con archivos","text":"<p>Para poder leer un archivo necesitamos usar la funci\u00f3n fread() de PHP</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Abriendo un archivo y leyendo su contenido \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$fp = fopen($file, \"r\");\n\n// filesize() nos devuelve el tama\u00f1o del archivo en cuesti\u00f3n\n$contents = fread($fp, filesize($file));\n\n// Cerramos la conexi\u00f3n con el archivo\nfclose();\n</code></pre> <p>Si lo que queremos es escribir en un archivo, deberemos hacer uso de la funci\u00f3n fwrite()</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Escribiendo en un archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Hola que tal\";\n\n$fp = fopen($file, \"w\");\n\nfwrite($fp, $texto);\nfclose($fp);\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADades.html#informacion-de-un-fichero","title":"Informaci\u00f3n de un fichero","text":"<p>Con PHP y su m\u00e9todo stat() podemos obtener informaci\u00f3n sobre los archivos que le indiquemos. Este m\u00e9todo devuelve hasta un total de 12 elementos con ifnormaci\u00f3n acerca de nuestro archivo.</p> <pre><code>0   dev         n\u00famero de dispositivo\n1   ino         n\u00famero de i-nodo\n2   mode        modo de protecci\u00f3n del i-nodo\n3   nlink       n\u00famero de enlaces\n4   uid         ID de usuario del propietario\n5   gid         ID de grupo del propietario\n6   rdev        tipo de dispositivo, si es un dispositivo i-nodo\n7   size        tama\u00f1o en bytes\n8   atime       momento del \u00faltimo acceso (tiempo Unix)\n9   mtime       momento de la \u00faltima modificaci\u00f3n (tiempo Unix)\n10  ctime       momento de la \u00faltima modificaci\u00f3n del i-nodo (tiempo Unix)\n11  blksize     tama\u00f1o del bloque E/S del sistema de ficheros\n12  blocks      n\u00famero de bloques de 512 bytes asignados\n</code></pre> <p>Unos ejemplos...</p> <pre><code>&lt;?php\n\n//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Informaci\u00f3n del archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Todos somos muy ignorantes, lo que ocurre es que no todos ignoramos las mismas cosas.\";\n\n$fp = fopen($file, \"w\");\nfwrite($fp, $texto);\n\n$datos = stat($file);\n\necho $datos[3] . \"&lt;br&gt;\"; // N\u00famero de enlaces, 1\necho $datos[7] . \"&lt;br&gt;\"; // Tama\u00f1o en bytes, 85\necho $datos[8] . \"&lt;br&gt;\"; // Momento de \u00faltimo acceso, 1444138104\necho $datos[9] . \"&lt;br&gt;\"; // Momento de \u00faltima modificaci\u00f3n, 1444138251\n\n?&gt;\n</code></pre> <p>Echa un vistazo a las funciones de directorios que tiene PHP, es muy interesante.</p>"},{"location":"Moduls/DWES/UT05AccesADades.html#archivos-pdf","title":"Archivos PDF","text":"<p>Con PHP podemos manejar todo tipo de archivos como ya hemos visto pero, \u00bfqu\u00e9 pasa si queremos generar ficheros PDF con datos sacados de una base de datos?</p> <p>Gracias a una clase escrita en PHP, podemos generar archivos PDF sin necesidad de instalar librer\u00edas adicionales en nuestro servidor.</p> <p>Para ello, como tenemos composer dentro de nuestra imagen de Docker, usaremos composer para instalar esta dependencia.</p> <p>Acu\u00e9rdate que debemes haber hecho <code>composer init</code> para empezar un proyecto con composer, de lo contrario no podr\u00e1s a\u00f1adir ning\u00fan paquete.</p> <p>Veamos un ejemplo de Hello World convertido a PDF</p> <p><pre><code>&lt;?php\n\nob_end_clean();\nrequire('fpdf/fpdf.php');\n\n// Instanciamos la clase\n// P = Portrait | mm = unidades en mil\u00edmetros | A4 = formato\n$pdf = new FPDF('P','mm','A4');\n\n// A\u00f1adimos una p\u00e1gina\n$pdf-&gt;AddPage();\n\n// Establecemos la fuente y el tama\u00f1o de letra\n$pdf-&gt;SetFont('Arial', 'B', 18);\n\n// Imprimimos una celda con el texto que nosotros queramos\n$pdf-&gt;Cell(60,20,'Hello World!');\n\n// Terminamos el PDF\n$pdf-&gt;Output();\n\n?&gt;\n</code></pre> Hay muchos ejemplos y tutoriales, as\u00ed como documentaci\u00f3n de la clase FPDF en la p\u00e1gina oficial.</p> <p>Visita la secci\u00f3n de tutoriales y el manual para sacar mayor partido a esta clase.</p> <pre><code>&lt;?php\n\nrequire('fpdf/fpdf.php');\n\nclass PDF extends FPDF {\n\n    // Cabecera\n    function Header() {\n\n        // A\u00f1adimos un logotipo\n        $this-&gt;Image('logo.png',10,8,33);\n\n        // establecemos la fuente y el tama\u00f1o\n        $this-&gt;SetFont('Arial','B',20);\n\n        // Movemos el contenido un poco a la derecha\n        $this-&gt;Cell(80);\n\n        // Pintamos la celda\n        $this-&gt;Cell(50,10,'Cabecera',1,0,'C');\n\n        // Pasamos a la siguiente l\u00ednea\n        $this-&gt;Ln(20);\n    }\n\n    // Pie de p\u00e1gina\n    function Footer() {\n\n        // Nos posicionamos a 1.5 cm  desde abajo del todo de la p\u00e1gina\n        $this-&gt;SetY(-15);\n\n        // Arial italic 8\n        $this-&gt;SetFont('Arial','I',8);\n\n        // N\u00famero de p\u00e1gina\n        $this-&gt;Cell(0,10,'P\u00e1gina ' . \n            $this-&gt;PageNo() . '/{nb}',0,0,'C');\n    }\n}\n\n// Instanciamos la clase\n$pdf = new PDF();\n\n// Definimos un alias para la numeraci\u00f3n de p\u00e1ginas\n$pdf-&gt;AliasNbPages();\n\n$pdf-&gt;AddPage();\n$pdf-&gt;SetFont('Times','',14);\n\nfor($i = 1; $i &lt;= 30; $i++)\n    $pdf-&gt;Cell(0, 10, 'N\u00famero de l\u00ednea ' \n            . $i, 0, 1);\n$pdf-&gt;Output();\n\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html","title":"Acc\u00e9s a bases de dades amb MySQL","text":"<p>Introducci\u00f3</p> <p>1.Estats en l\u2019execuci\u00f3 de sent\u00e8ncies SQL</p> <ul> <li>1.1.Transaccions</li> </ul> <p>2.Par\u00e0metres de configuraci\u00f3 de la connexi\u00f3</p> <p>3.Realitzaci\u00f3 i comprovaci\u00f3 de la connexi\u00f3</p> <p>4.Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades</p> <p>5.Consulta de dades</p> <ul> <li> <p>5.1.Realitzaci\u00f3 de la consulta</p> </li> <li> <p>5.2.Acc\u00e9s i gesti\u00f3 de les dades retornades per una consulta</p> </li> <li> <p>5.3.Finalitzaci\u00f3 de la consulta</p> </li> </ul> <p>6.Desconnexi\u00f3 de la base de dades</p> <p>7.Gesti\u00f3 i control d\u2019errors i obtenci\u00f3 d\u2019informaci\u00f3</p> <p>8.Consideracions generals i bones pr\u00e0ctiques</p> <ul> <li> <p>8.1.Restricci\u00f3 d\u2019identitat (claus prim\u00e0ries)</p> </li> <li> <p>8.2.Restricci\u00f3 d\u2019integritat referencial (claus foranes)</p> </li> </ul> <p>9.Annex: codi emprat als exemples</p> <p>10.Manuals i fonts d\u2019informaci\u00f3 addicionals</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#introduccio","title":"Introducci\u00f3","text":"<p>L\u2019acc\u00e9s a una base de dades des d\u2019un llenguatge de programaci\u00f3 \u00e9s la base de gaireb\u00e9 tots els sistemes de gesti\u00f3 de l\u2019actualitat. En aquests casos, la gesti\u00f3 de la informaci\u00f3 es fa a trav\u00e9s d\u2019un programa que accedeix a la base de dades per a poder executar les funcionalitats requerides.</p> <p>En aquest m\u00f2dul veurem com accedir a una base de dades MySQL des d\u2019un programa PHP. En particular, farem la connexi\u00f3 via PDO MySQL.</p> <p>Per a realitzar la gesti\u00f3 de la base de dades emmagatzemada en un servidor MySQL a trav\u00e9s de codi escrit en PHP, es far\u00e0 servir l\u2019extensi\u00f3 mysqli de PHP. Aquesta extensi\u00f3 del llenguatge PHP consta d\u2019una s\u00e8rie de funcionalitats extres que milloren les extensions mysql que es feien servir en versions de MySQL anteriors a la 4.1.3. Aquesta extensi\u00f3 ja ve inclosa a les versions de PHP5 i posteriors. Entre les millores m\u00e9s importants destaquen la interf\u00edcie orientada a objectes o el suport per a transaccions.</p> <p>Connectors de programes amb bases de dades</p> <p>Existeixen diversos sistemes per a interconnectar el codi dels programes amb les bases de dades, coneguts com a connectors. Aquests s\u00f3n alguns:</p> <p>PDO (PHP Data Objects) per a connectar PHP amb diferents SGBDs</p> <p>ADO: (ActiveX Data Objects) de Microsoft</p> <p>JDBC (Java DataBase Connectivity) per interconnexi\u00f3 del llenguatge Java amb bases de dades.</p> <p>PDO MySQL</p> <p>El connector PDO MySQL s\u2019instal\u00b7la amb WAMP i \u00e9s totalment transparent a l\u2019usuari.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#1estats-en-lexecucio-de-sentencies-sql","title":"1.Estats en l\u2019execuci\u00f3 de sent\u00e8ncies SQL","text":"<p>A l\u2019hora d\u2019accedir i manipular les dades d\u2019una base de dades des de qualsevol programa, a part d\u2019executar la sent\u00e8ncia d\u2019acc\u00e9s o manipulaci\u00f3 de dades, caldr\u00e0 passar per una s\u00e8rie d\u2019estats, independentment del llenguatge de programaci\u00f3 i del SGBD que es faci servir. Aquests estats s\u00f3n necessaris per tal d\u2019accedir a la base de dades (el que s\u2019anomena connectar-se a la base de dades), analitzar com ha anat l\u2019operaci\u00f3 SQL i tancar la connexi\u00f3 amb la base de dades.</p> <p>Aquests estats es poden veure en el seg\u00fcent diagrama pel cas d\u2019exemple d\u2019una operaci\u00f3 de SELECT:</p> <p></p> <p>El primer que cal fer per a poder accedir a una base de dades emmagatzemada a un servidor de bases de dades, \u00e9s configurar els par\u00e0metres de connexi\u00f3, amb dades com el nom de la base de dades, la seva ubicaci\u00f3 i les credencials d\u2019acc\u00e9s de l\u2019usuari que vol connectar.</p> <p>Una vegada configurada la connexi\u00f3, cal executar una instrucci\u00f3, connectar, per a fer efectiva aquesta connexi\u00f3. Si els par\u00e0metres proporcionats s\u00f3n correctes i el servidor de bases de dades est\u00e0 disponible, s\u2019establir\u00e0 la connexi\u00f3 entre el programa i la base de dades. Cal tenir en compte que la connexi\u00f3 pot no establir-se per diferents motius. Per tant, ser\u00e0 important assegurar-se que tot ha anat b\u00e9 despr\u00e9s d\u2019executar la instrucci\u00f3 de connectar.</p> <p>La connexi\u00f3 a la base de dades estar\u00e0 oberta fins que el programa finalitzi la seva execuci\u00f3. Per tal d\u2019assegurar-se que els recursos utilitzats s\u00f3n alliberats, \u00e9s important tancar la connexi\u00f3 un cop ja no s\u2019hagin de fer m\u00e9s accessos a la base de dades. Per a fer-ho existeix una acci\u00f3 de desconnectar.</p> <p>Quan la connexi\u00f3 est\u00e0 establerta, es poden realitzar diferents accions sobre la base de dades. Tres d\u2019aquestes accions tenen un efecte immediat; s\u2019executa l\u2019acci\u00f3 sobre la base de dades i es genera un resultat. Aquestes accions s\u00f3n:</p> <ul> <li>Donar d\u2019alta noves dades: es poden inserir noves dades a les taules de la base de dades. Si la sent\u00e8ncia SQL d\u2019inserci\u00f3 s\u2019executa correctament (sense errors), la inserci\u00f3 es fa efectiva immediatament.</li> <li>Donar de baixa dades: es poden eliminar dades de la base de dades mitjan\u00e7ant una sent\u00e8ncia SQL. Aquesta acci\u00f3 comporta una eliminaci\u00f3 d\u2019informaci\u00f3, amb el que cal assegurar-se que s\u2019elimina la informaci\u00f3 que realment es vol eliminar. En els sistemes transaccionals, existeix el concepte de transacci\u00f3, on un conjunt d\u2019instruccions s\u2019executen com si fossin una sola instrucci\u00f3. Si es fan servir les transaccions, es pot desfer una eliminaci\u00f3 de dades (amb la instrucci\u00f3 rollback), per\u00f2 nom\u00e9s en el cas que la transacci\u00f3 no s\u2019hagi donat per finalitzada amb \u00e8xit. D\u2019altra banda, \u00e9s important realitzar c\u00f2pies de seguretat per a poder recuperar, en cas d\u2019eliminacions err\u00f2nies, les dades anteriors de la darrera c\u00f2pia de seguretat.</li> <li>Modificar les dades de la base de dades: una modificaci\u00f3 \u00e9s el fet de canviar una dada que ja est\u00e0 inserida a la base de dades per tal d\u2019actualitzar-la o corregir-la. La modificaci\u00f3 tamb\u00e9 elimina informaci\u00f3, ja que en modificar una dada, el valor anterior al que s\u2019ha modificat, es perd. S\u2019ha d\u2019assegurar que la dada que es vol modificar ser\u00e0 l\u2019\u00fanica que es modificar\u00e0, i que la instrucci\u00f3 no afectar\u00e0 altres dades. Com en el cas anterior, en fer servir transaccions, hi ha la possibilitat de revertir la instrucci\u00f3 de modificaci\u00f3 (sempre que es faci rollback abans d\u2019acabar la transacci\u00f3).</li> </ul> <p>La quarta de les accions que es pot fer una vegada establerta la connexi\u00f3 \u00e9s la consulta de dades. Aquesta acci\u00f3 \u00e9s una mica diferent, ja que els resultats d\u2019una consulta poden contenir molts elements que s\u2019han de tractar per blocs (es pot pensar en una llista de productes d\u2019una botiga que es presenten de 20 en 20, per exemple). Per aquest motiu, la consulta no \u00e9s una acci\u00f3 immediata com les anteriors, sin\u00f3 que la seva execuci\u00f3 genera una connexi\u00f3 amb la base de dades, que t\u00e9 un estat i que permet anar consultant les dades de mica en mica. M\u00e9s concretament, el que passa en fer una consulta \u00e9s el seg\u00fcent:</p> <ul> <li>Obrir la consulta: s\u2019executa una sent\u00e8ncia SQL de consulta sobre la base de dades. Si no hi ha cap error s\u2019obtenen les dades de la base de dades. Llavors, ja es poden obtenir les dades pel seu tractament.</li> <li>Acc\u00e9s a dades de la consulta: es consulten les dades resultants de la consulta. Mentre s\u2019est\u00e0 realitzant una consulta (fins que no es tanqui la consulta), l\u2019\u00fanica acci\u00f3 que pot fer el programa amb la connexi\u00f3 a la base de dades \u00e9s obtenir m\u00e9s dades de la consulta realitzada. No es pot ni inserir, ni modificar, ni eliminar dades.</li> <li>Tancar la consulta: una vegada el programa (o l\u2019usuari) han acabat el tractament de les dades o s\u2019han obtingut totes les dades, cal donar per finalitzada la consulta. Aix\u00f2 permetr\u00e0 tornar a l\u2019estat de \u201cconnexi\u00f3 establerta\u201d i poder executar noves operacions SQL sobre la base de dades. A aquesta acci\u00f3 tamb\u00e9 se l\u2019anomena Tancar la consulta.</li> </ul> <p>Exemple de modificaci\u00f3 de dades</p> <p>Es pot imaginar el cas de voler modificar el preu d\u2019un producte de 2 \u20ac a 1 \u20ac, fer-ho malament i acabant modificant TOTS els preus de la botiga a 1 \u20ac. Com es recuperen els anteriors preus de tots els productes afectats? Si s\u2019ha fet servir el sistema de transaccions, es pot fer un rollback. Si no, amb una c\u00f2pia de seguretat anterior.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#11transaccions","title":"1.1.Transaccions","text":"<p>El concepte de transacci\u00f3 es fa servir quan es vol executar un conjunt d\u2019instruccions SQL amb la caracter\u00edstica que s\u2019han d\u2019executar totes les instruccions del conjunt, i si no es pot, no se n\u2019ha d\u2019executar cap.</p> <p>Una transacci\u00f3 comen\u00e7a amb una instrucci\u00f3 (<code>Begin</code>, <code>Begin transaction</code> o <code>Start transaction</code>, depenent del sistema gestor de bases de dades que es faci servir), continua amb totes les instruccions que s\u2019han d\u2019executar, i pot acabar de dues maneres:</p> <ul> <li>Confirmada: si totes les instruccions de la transacci\u00f3 s\u2019han executat correctament i la transacci\u00f3 es d\u00f3na per bona, es confirma amb la instrucci\u00f3 <code>commit</code>.</li> <li>Avortada: si s\u2019ha produ\u00eft algun error en l\u2019execuci\u00f3 de les instruccions de la transacci\u00f3, cal deixar la base de dades en el mateix estat que hi era ABANS del comen\u00e7ament de la transacci\u00f3. Una transacci\u00f3 s\u2019avorta amb la instrucci\u00f3 <code>rollback.</code></li> </ul> <p>En els sistemes transaccionals hi ha un mode anomenat autocommit, que fa un <code>commit</code> (confirmaci\u00f3) autom\u00e0tic al final de cada instrucci\u00f3 SQL que s\u2019executa. Fer servir aquest mode autocommit pot esdevenir problem\u00e0tic en haver de desfer un conjunt d\u2019operacions.</p> <p>Exemple de transacci\u00f3</p> <p>Qualsevol transfer\u00e8ncia banc\u00e0ria \u00e9s una transacci\u00f3. Suposem que es vol realitzar una transfer\u00e8ncia banc\u00e0ria de 1.000 euros d\u2019un compte X a un compte Y. Fer una transfer\u00e8ncia implica, com a m\u00ednim, fer dues modificacions a la base de dades: 1) Restar 1.000 euros del saldo del compte X i 2) Afegir 1.000 euros del saldo del compte Y. Si ambdues operacions acaben correctament, la transfer\u00e8ncia \u00e9s acceptada i acaba correctament. Per\u00f2 suposem que l\u2019operaci\u00f3 d\u2019afegir 1000 euros al compte Y acaba amb error. Si no fem servir transaccions i no podem anul\u00b7lar la transacci\u00f3 sencera es perdran 1.000 euros, ja que s\u2019haur\u00e0 restat 1.000 euros del compte X (definitiu) per\u00f2 aquests no han anat a parar enlloc, ja que no s\u2019han afegit al compte Y. Si anul\u00b7lem la transacci\u00f3 mitjan\u00e7ant un rollback, es desfaran les operacions que componen la transacci\u00f3 i els saldos dels comptes X i Y quedaran com si mai s\u2019haguessin transferit al compte.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#2parametres-de-configuracio-de-la-connexio","title":"2.Par\u00e0metres de configuraci\u00f3 de la connexi\u00f3","text":"<p>Com s\u2019ha indicat pr\u00e8viament, el primer que cal fer \u00e9s connectar-se a la base de dades. Els par\u00e0metres de connexi\u00f3 necessaris per a fer-ho s\u00f3n, en la majoria dels casos:</p> <ul> <li>Servidor: \u00e9s el nom del servidor (o l\u2019adre\u00e7a IP) on est\u00e0 ubicat el SGBD que allotja la base de dades a la que es vol connectar. Si el servidor est\u00e0 a la mateixa m\u00e0quina, llavors ser\u00e0 localhost.</li> <li>Usuari: la connexi\u00f3 sempre s\u2019ha de fer mitjan\u00e7ant les credencials d\u2019un determinat usuari de la base de dades. Aix\u00f2 permetr\u00e0 controlar a quines dades t\u00e9 acc\u00e9s i amb quins permisos. S\u2019ha de proveir doncs el nom de l\u2019usuari amb que ens volem connectar a la base de dades.</li> <li>Paraula de pas: \u00e9s necess\u00e0ria per a autentificar a l\u2019usuari de la base de dades.</li> <li>Base de dades: nom de la base de dades ubicada al servidor, a la que es vol connectar per a fer la gesti\u00f3 de les dades.</li> </ul> <p>Despr\u00e9s d\u2019introduir tota aquesta informaci\u00f3, el programa estar\u00e0 preparat per a intentar establir la connexi\u00f3 amb la base de dades.</p> <p>PHP: exemple de par\u00e0metres de configuraci\u00f3. S\u00f3n les variables que despr\u00e9s es passaran a la instrucci\u00f3 de connexi\u00f3:</p> <p></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#3realitzacio-i-comprovacio-de-la-connexio","title":"3.Realitzaci\u00f3 i comprovaci\u00f3 de la connexi\u00f3","text":"<p>La connexi\u00f3 amb la base de dades es fa sempre a trav\u00e9s d\u2019una variable del programa, que \u00e9s l\u2019encarregada de realitzar la comunicaci\u00f3 bidireccional amb el connector de MySQL.</p> <p>La instrucci\u00f3 necess\u00e0ria per realitzar la connexi\u00f3 retorna aquesta variable, una vegada executada amb els par\u00e0metres de connexi\u00f3 especificats en l\u2019apartat anterior.</p> <p>PHP: retorna una variable amb la connexi\u00f3 establerta, que despr\u00e9s s\u2019haur\u00e0 de fer servir per a la resta de tasques amb la base de dades. Si la variable ($con en aquest cas) \u00e9s FALS despr\u00e9s d\u2019haver realitzat la instrucci\u00f3, \u00e9s que no s\u2019ha pogut establir la connexi\u00f3.</p> <p> Figura 1: Codi de connexi\u00f3 amb la base de dades</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#4insercio-modificacio-i-eliminacio-de-dades","title":"4.Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades","text":"<p>La instrucci\u00f3 per a realitzar aquestes tasques, sol ser la mateixa. El que canvia \u00e9s la comanda SQL que es passa a la instrucci\u00f3. Com que aquesta comanda SQL \u00e9s puntual (un <code>INSERT</code>, un <code>DELETE</code> o un <code>UPDATE</code>) es fan sense que calgui cap m\u00e9s intervenci\u00f3 per part de l\u2019usuari. Aix\u00f2 \u00e9s diferent en la comanda <code>SELECT</code>, on normalment es demanaran dades de diferents files, i caldr\u00e0 que l\u2019usuari vagi demanant les dades retornades per la comanda SQL a mesura que les vagi necessitant.</p> <p>PHP: retorna una variable amb el resultat d\u2019haver realitzat una comanda SQL. Si aquest resultat \u00e9s CERT, la comanda s\u2019ha realitzat correctament. Se li ha de passar com a par\u00e0metres la connexi\u00f3 establerta anteriorment i la instrucci\u00f3 a realitzar.</p> <p>Figura 2: codi d\u2019inserci\u00f3 d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>Figura 3: codi de modificaci\u00f3 d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>Figura 4: codi d\u2019eliminaci\u00f3 d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>Com es pot veure, l\u2019\u00fanica difer\u00e8ncia entre una inserci\u00f3, una modificaci\u00f3 i un esborrat \u00e9s el codi de la instrucci\u00f3 que s\u2019executa. Es munta primer la cadena de car\u00e0cters amb la instrucci\u00f3 de SQL que es vol executar, despr\u00e9s se li passa com a par\u00e0metre, junt amb la variable de la connexi\u00f3 pr\u00e8viament establerta, a la instrucci\u00f3 <code>mysql_query</code> i aquesta retorna un resultat. Si el resultat \u00e9s CERT, la instrucci\u00f3 s\u2019ha realitzat correctament.</p> <p>Aquestes tres instruccions modifiquen el contingut de la base de dades, ja sigui inserint, modificant o eliminant dades. Als exemples mostrats, si es produeix algun error en l\u2019execuci\u00f3 de la instrucci\u00f3 (que la instrucci\u00f3 SQL sigui sint\u00e0cticament incorrecta, per exemple) es genera un error i la instrucci\u00f3 no s\u2019executa. Per\u00f2 en el cas que tot estigui correcte, el contingut de la base de dades ser\u00e0 modificat, i no es podr\u00e0 desfer aquesta modificaci\u00f3, a menys que es faci servir el sistema de transaccions, d\u2019aquesta manera:</p> <p>Figura 5: codi d\u2019eliminaci\u00f3 d\u2019una dada amb transaccions. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1.</p> <p></p> <p>El resultat de l\u2019execuci\u00f3 d\u2019aquest codi \u00e9s el seg\u00fcent:</p> <p></p> <p>Com es pot veure, es fa la connexi\u00f3 a la base de dades, es fa l\u2019eliminaci\u00f3 de l\u2019estudiant amb DNI 52666666F (el resultat mostra que hi ha 0 estudiants amb aquest DNI), es fa rollback, i es torna a fer una consulta del mateix estudiant. El resultat \u00e9s 1, perqu\u00e8 el rollback desf\u00e0 els canvis realitzats dintre de la transacci\u00f3.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#5consulta-de-dades","title":"5.Consulta de dades","text":"<p>En aquest apartat aprendrem a fer una consulta a la base de dades.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#51realitzacio-de-la-consulta","title":"5.1.Realitzaci\u00f3 de la consulta","text":"<pre><code>La instrucci\u00f3 per a fer una consulta a la base de dades, o sigui, executar una comanda `SELECT` de SQL, pot variar respecte a la comanda per a fer `INSERT`, `UPDATE` o `DELETE` depenent del llenguatge. En el cas de PHP, la instrucci\u00f3 \u00e9s la mateixa en ambd\u00f3s casos.\n</code></pre> <p>Una vegada executada la comanda <code>SELECT</code>, la informaci\u00f3 demanada ja est\u00e0 disponible, per\u00f2 encara cal que el programa carregi la informaci\u00f3 obtinguda en variables, per a realitzar el tractament corresponent (que pot ser mostrar aquestes dades a l\u2019usuari, per exemple). Per aix\u00f2, una vegada realitzada la instrucci\u00f3 de consultar, encara queda la feina d\u2019obtenir les dades consultades i emmagatzemar-les dintre de variables del programa en PHP per tal de ser tractades.</p> <p>La unitat m\u00ednima de tractament de les dades d\u2019una consulta \u00e9s la fila o registre. Quan es realitza una consulta, aquesta pot retornar una gran quantitat de files, amb un cert nombre de camps o atributs per a cada fila. Per\u00f2 si hi accedim des d\u2019un programa les dades s\u2019hauran de tractar fila a fila.</p> <p>PHP: en aquest cas, la instrucci\u00f3 que ha realitzat la consulta (<code>mysqli_query</code>) retorna un enlla\u00e7 a les dades consultades. Si la consulta no s\u2019ha pogut realitzar (per un error a la comanda <code>SELECT</code>, per exemple) la variable <code>$res</code> ser\u00e0 NULL.</p> <p>Figura 6: codi de consulta d\u2019una dada. Per a executar aquest codi, primer cal realitzar la connexi\u00f3 amb la base de dades amb el codi de la figura 1</p> <p></p> <p>En aquest cas, el comportament de la variable <code>$res</code> \u00e9s diferent del cas d\u2019inserci\u00f3, modificaci\u00f3 o esborrat, ja que si la consulta s\u2019ha pogut realitzar amb \u00e8xit, la variable <code>$res</code> cont\u00e9 un apuntador a la zona de mem\u00f2ria que s\u2019haur\u00e0 de consultar per a obtenir la informaci\u00f3.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#52acces-i-gestio-de-les-dades-retornades-per-una-consulta","title":"5.2.Acc\u00e9s i gesti\u00f3 de les dades retornades per una consulta","text":"<p>Una instrucci\u00f3 de consulta de dades pot retornar una gran quantitat d\u2019informaci\u00f3. Per a accedir a aquesta informaci\u00f3, cal fer-lo de forma ordenada.</p> <p>Per a poder realitzar aquestes funcionalitats, es fa servir el concepte de cursor de dades. Conceptualment podem definir un cursor de dades com una variable que apunta a la zona de mem\u00f2ria que cont\u00e9 el resultat d\u2019una consulta SQL (de tipus <code>SELECT</code>) i permet iterar per les diferents files els resultats d\u2019aquesta consulta, una per una. En cada iteraci\u00f3 s\u2019obt\u00e9 les dades de la fila i es passa a la seg\u00fcent fila. Aquesta acci\u00f3 \u00e9s el que s\u2019anomena fer un fetch del cursor.</p> <p></p> <p>Just despr\u00e9s d\u2019executar la instrucci\u00f3 de consulta, si no s\u2019ha produ\u00eft cap error, la variable que retorna la instrucci\u00f3 de consulta <code>($res</code> en aquest cas) juga el rol d\u2019un cursor i apunta a la primera fila de dades retornada.</p> <p>PHP: per a accedir a una fila de dades retornada per una instrucci\u00f3 <code>mysqli_query</code> (la primera o qualsevol altre fila), es fa servir la instrucci\u00f3 <code>mysqli_fetch_assoc</code>, que, a partir d\u2019un conjunt de dades retornat per la instrucci\u00f3 de consulta, retorna la fila actual de dades en forma d\u2019array associatiu. En aquest cas, es retorna un vector <code>($fila</code>) amb tantes posicions com columnes hi hagi al resultat de la consulta, i per a accedir a un d\u2019aquests resultats, nom\u00e9s cal referenciar la posici\u00f3 del vector amb el nom del camp.</p> <p></p> <p>Cada vegada que es fa un <code>mysqli_fetch_assoc</code>, a m\u00e9s de retornar una fila de dades, s\u2019avan\u00e7a una posici\u00f3 en els resultats del <code>SELECT</code> perqu\u00e8 a la seg\u00fcent crida a <code>mysqli_fetch_assoc</code>, es pugui retornar la fila adient.</p> <p>Si la crida a la instrucci\u00f3 <code>mysqli_fetch_assoc</code> retorna un valor NULL, vol dir que ja no hi ha m\u00e9s files de dades.</p> <p>Quan la consulta realitzada retorna m\u00e9s d\u2019una fila de dades, cal fer el tractament de la informaci\u00f3 fila a fila, seguint l\u2019estructura d\u2019un cursor de dades. Per a poder fer-ho cal programar un bucle per a anar accedint una per una a cada fila, fent a cada pas el tractament corresponent a aquella fila. Aquest bucle s\u2019ha d\u2019anar repetint mentre hi hagi files de dades a tractar. \u00c9s molt important recon\u00e8ixer aquest fet per a no programar bucles infinits, o amb errors.</p> <p>PHP: per a poder fer el tractament de totes les files de dades retornades per una consulta, s\u2019ha de programar un bucle que a cada iteraci\u00f3, comprovi si la fila obtinguda \u00e9s o no un valor NULL. En cas que NO sigui NULL, s\u2019accedeix als resultats, es fa el tractament corresponent (en aquest cas, el tractament consisteix a mostrar la informaci\u00f3 per pantalla) i s\u2019accedeix a la seg\u00fcent fila. Si la fila accedida resulta que \u00e9s NULL, ja pot acabar el bucle, ja que no hi ha m\u00e9s dades retornades a la consulta.</p> <p></p> <p>El seg\u00fcent diagrama mostra de forma gr\u00e0fica com actuen les tres instruccions necess\u00e0ries per a accedir, a partir d\u2019una sent\u00e8ncia <code>SELECT</code>, a un valor individual d\u2019una fila de dades.</p> <p>Primer s\u2019obt\u00e9 el resultat de la consulta <code>SELECT</code> amb <code>mysqli_query</code>, despr\u00e9s s\u2019obt\u00e9 la fila de dades actual amb <code>mysqli_fetch_assoc</code>, que tamb\u00e9 avan\u00e7a la fila actual, i finalment s\u2019obt\u00e9 la dada individual accedint a l\u2019array associatiu mitjan\u00e7ant el nom del camp: $nom = $fila[\u2018nom\u2019];</p> <p></p> <p>Array associatiu</p> <p>Un array associatiu \u00e9s un vector (Array) on l\u2019acc\u00e9s als seus elements NO es fa per posici\u00f3, com en els arrays comuns, sin\u00f3 que es fa mitjan\u00e7ant un \u00edndex de text:</p> <p>Array com\u00fa: vc[4] = 32;</p> <p>Array Associatiu: va[\u2018edat\u2019] = 32;</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#53finalitzacio-de-la-consulta","title":"5.3.Finalitzaci\u00f3 de la consulta","text":"<p>Quan s\u2019ha acabat de treballar amb les dades d\u2019una consulta, cal tancar-la per a alliberar els recursos que s\u2019han fet servir, com per exemple, la mem\u00f2ria RAM per a emmagatzemar les dades.</p> <p>PHP: quan finalitza un script, autom\u00e0ticament es tanquen les consultes obertes i s\u2019allibera mem\u00f2ria. De totes maneres, hi ha una instrucci\u00f3 per a tancar expl\u00edcitament les consultes obertes, a la que se li ha de passar el conjunt de resultats obtinguts de fer un <code>mysqli_query</code>:</p> <p></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#6desconnexio-de-la-base-de-dades","title":"6.Desconnexi\u00f3 de la base de dades","text":"<p>Una vegada acabada la feina de gesti\u00f3 de les dades, cal desconnectar el programa de la base de dades.</p> <p>PHP: Quan finalitza un script, autom\u00e0ticament es tanquen les connexions establertes amb la base de dades. No obstant aix\u00f2, hi ha una instrucci\u00f3 per a tancar expl\u00edcitament les connexions establertes:</p> <p></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#7gestio-i-control-derrors-i-obtencio-dinformacio","title":"7.Gesti\u00f3 i control d\u2019errors i obtenci\u00f3 d\u2019informaci\u00f3","text":"<p>PHP disposa de dues instruccions per a controlar els errors que es poden produir durant la transfer\u00e8ncia de dades des de i cap a la base de dades amb el sistema mysqli. Aquestes dues instruccions s\u00f3n les seg\u00fcents:</p> <p></p> <p>Retorna el codi d\u2019error si n\u2019hi ha algun. Retorna 0 si no s\u2019ha produ\u00eft cap error a l\u2019execuci\u00f3 de la darrera instrucci\u00f3 <code>mysqli_query</code>.</p> <p></p> <p>Retorna el text d\u2019error de la darrera instrucci\u00f3 SQL executada amb <code>mysqli_query</code>, si \u00e9s que s\u2019ha produ\u00eft un error. Per exemple:</p> <p></p> <p>A banda, hi ha tamb\u00e9 una instrucci\u00f3 molt \u00fatil a l\u2019hora de no tenir problemes amb els car\u00e0cters especials, com els accents, di\u00e8resis, etc. Aquesta instrucci\u00f3 \u00e9s:</p> <p></p> <p>Estableix el conjunt de car\u00e0cters especials per a fer servir a la connexi\u00f3. Per exemple:</p> <p></p> <p>Finalment, hi ha una instrucci\u00f3 que retorna el nombre de files o registres afectats per la darrera instrucci\u00f3 <code>mysql_query</code>. Aquestes files poden ser, per exemple, el nombre de files seleccionades per un <code>SELECT</code>, o eliminades per un <code>DELETE</code>:</p> <p></p> <p>Per exemple:</p> <p></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#8consideracions-generals-i-bones-practiques","title":"8.Consideracions generals i bones pr\u00e0ctiques","text":"<p>Quan s\u2019aborda el problema de programar una gesti\u00f3 de dades, cal tenir en compte algunes consideracions, que tenen a veure amb la consist\u00e8ncia de les dades. En aquest apartat indicarem com tenir en compte les restriccions d\u2019identitat i d\u2019integritat referencial. Si es tenen en consideraci\u00f3, s\u2019evitar\u00e0 cometre errors, que en alguns casos poden ser molt greus, deixant la base de dades en un estat inconsistent o eliminant dades rellevants per error.</p> <pre><code>Les restriccions d\u2019integritat s\u00f3n condicions que han de complir els valors de la base de dades per a garantir que les dades representades a la base de dades componen una inst\u00e0ncia v\u00e0lida del model representat.\n</code></pre> <p>Exemples de restriccions d\u2019integritat serien: l\u2019edat d\u2019una persona no pot ser negativa o una persona tan sols pot tenir una mare biol\u00f2gica.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#81restriccio-didentitat-claus-primaries","title":"8.1.Restricci\u00f3 d\u2019identitat (claus prim\u00e0ries)","text":"<pre><code>La restricci\u00f3 d\u2019identitat de clau prim\u00e0ria fa refer\u00e8ncia als valors que es poden assignar a un atribut declarat com a clau prim\u00e0ria. Aquests valors no poden ser valor NULL, i han de ser tots diferents, o sigui, no hi pot haver repetits.\n</code></pre> <p>Aquestes caracter\u00edstiques de les claus prim\u00e0ries comporten que cal tenir en compte una s\u00e8rie de consideracions a l\u2019hora de realitzar diferents operacions on estiguin implicades.</p> <p>1) Inserci\u00f3. La consideraci\u00f3 fonamental a l\u2019hora de fer una inserci\u00f3 de dades a una base de dades \u00e9s comprovar que les dades no existeixen a la base de dades. Aqu\u00ed, suposant que volem inserir dades que ja es troben a la base de dades, ens podem trobar amb dos casos, en funci\u00f3 de si proporcionem nosaltres les claus prim\u00e0ries o fem que la clau prim\u00e0ria sigui un camp autoincremental:</p> <ul> <li>Si proporcionem nosaltres la clau prim\u00e0ria: en cas que ja hi hagi una clau prim\u00e0ria amb el valor introdu\u00eft, l\u2019operaci\u00f3 d\u2019inserci\u00f3 acabar\u00e0 amb error i no es produir\u00e0.</li> <li>Clau prim\u00e0ria autoincremental: aquest cas \u00e9s m\u00e9s greu, perqu\u00e8 com el sistema gestor de bases de dades no sap que les dades que inserim ja existeixen a la base de dades, les torna a crear amb una nova clau. El resultat \u00e9s que introduirem una inconsist\u00e8ncia en les dades, ja que tindrem el mateix objecte representat dues vegades.</li> </ul> <p>Abans de fer una inserci\u00f3 podem comprovar que la dada no estigui ja a la base de dades. Aquesta comprovaci\u00f3 es pot fer executant una consulta pr\u00e8via, que retorni el nombre de files que hi ha amb la mateixa clau prim\u00e0ria (o consultant els camps que calgui) que la fila a inserir. Si aquesta consulta retorna 0 (zero), ja es pot inserir sense por de tenir un error de clau prim\u00e0ria.</p> <p>2) Eliminaci\u00f3. En el cas de l\u2019eliminaci\u00f3 d\u2019una o m\u00e9s dades, no es genera cap error que tingui a veure amb la restricci\u00f3 d\u2019integritat de clau prim\u00e0ria.</p> <p>3) Modificaci\u00f3. En realitzar una instrucci\u00f3 de modificaci\u00f3, si les dades a modificar no inclouen atributs que formin part de la clau prim\u00e0ria, no hi ha cap problema.</p> <p>En cas que es vulgui modificar el valor de la clau prim\u00e0ria total o parcialment (en casos on les claus prim\u00e0ries estiguin compostes per diversos atributs) cal tenir en compte que el nou valor a modificar, no coincideixi amb el valor de la clau prim\u00e0ria de cap altra fila de dades. Cal tenir en compte que una modificaci\u00f3 de la clau prim\u00e0ria es pot veure com una eliminaci\u00f3 de la dada antiga i una inserci\u00f3 de la dada nova, aix\u00ed que s\u2019aplica tot el que s\u2019aplicava a inserci\u00f3.</p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#82restriccio-dintegritat-referencial-claus-foranes","title":"8.2.Restricci\u00f3 d\u2019integritat referencial (claus foranes)","text":"<pre><code>La restricci\u00f3 d\u2019integritat referencial limita els valors que pot agafar un camp sobre el qual hi ha definida una clau forana. Aquests valors poden ser, o b\u00e9 valor NULL (quan no est\u00e0 relacionada amb cap altra fila o no sabem amb quina fila est\u00e0 relacionada), o b\u00e9 el valor de la clau prim\u00e0ria referenciada.\n</code></pre> <p>Per exemple, en el cas que tinguem dues taules a la base de dades, una d\u2019estudiants i l\u2019altra de cursos, podr\u00edem definir una clau forana a la taula estudiant que ens indiqu\u00e9s quin curs est\u00e0 realitzant l\u2019estudiant (aix\u00f2 implicaria que un estudiant no pot fer m\u00e9s d\u2019un curs a l\u2019hora, per\u00f2 a efectes d\u2019aquest exemple aix\u00f2 no importa).</p> <p>Hi ha molts conflictes que poden apareixen en fer modificacions a la base de dades amb les claus foranes. Aqu\u00ed en veurem els m\u00e9s importants. Alguns d\u2019aquests conflictes poden solucionar-se de diferents formes. Per exemple, suposem que tenim un estudiant, en Joan Pere Pau, que est\u00e0 matriculat del 3r Grau d\u2019inform\u00e0tica (per tant, t\u00e9 una clau forana a la fila de cursos que representa el 3r Grau d\u2019inform\u00e0tica). Suposem que arran d\u2019una modificaci\u00f3 a la taula de cursos es vol eliminar el 3r Grau d\u2019inform\u00e0tica. Fer aquesta eliminaci\u00f3 sense m\u00e9s provocaria que la base de dades caigu\u00e9s en un estat inconsistent, ja que es violaria la restricci\u00f3 d\u2019integritat referencial (els estudiants del 3r Grau d\u2019inform\u00e0tica tindrien un valor de clau forana inexistent a la taula de cursos). Per tal de solucionar aquesta inconsist\u00e8ncia, el sistema gestor de base de dades t\u00e9 diferents opcions:</p> <ul> <li>No deixar fer l\u2019eliminaci\u00f3. En aquest cas no es permetria eliminar el 3r Grau d\u2019Inform\u00e0tica de la taula de cursos.</li> <li>Deixar fer l\u2019eliminaci\u00f3 i posar els valors de clau forana que hi apunten a NULL. En aquest cas s\u2019eliminaria el 3r Grau d\u2019Inform\u00e0tica de la taula de cursos i es modificaria a NULL la clau forana dels estudiants que l\u2019estaven cursant. Per tant, es perdr\u00e0 informaci\u00f3 ja que tindrem estudiants per\u00f2 no tindrem const\u00e0ncia sobre el curs que estan o estaven fent.</li> <li>Fer l\u2019eliminaci\u00f3 en cascada. En aquest cas, s\u2019eliminaria el 3r Grau d\u2019Inform\u00e0tica de la taula de cursos. A m\u00e9s a m\u00e9s, s\u2019eliminarien de la taula d\u2019estudiants totes aquelles persones que estiguessin fent el curs de 3r Grau d\u2019Inform\u00e0tica. Aix\u00ed, com no hi ha ning\u00fa que apunti al curs eliminat, es garanteix que no es viola la restricci\u00f3 d\u2019integritat.</li> </ul> <p>Fer que el sistema gestor de base de dades utilitzi una o una altra estrat\u00e8gia \u00e9s una decisi\u00f3 de disseny que el dissenyador de la base de dades haur\u00e0 d\u2019avaluar. A continuaci\u00f3 mostrarem algunes de les violacions de les restriccions d\u2019integritat referencial pels casos d\u2019insercions, modificacions i esborrats a la base de dades i com poden tractar-se. Tamb\u00e9 mostrarem com definir a MySQL les tres estrat\u00e8gies abans esmentades.</p> <p>1) Inserci\u00f3. A l\u2019hora d\u2019inserir una dada, a banda de controlar la restricci\u00f3 d\u2019identitat, cal tenir en compte tamb\u00e9 si hi ha dades relacionades a la taula on es vol inserir la dada mitjan\u00e7ant claus foranes.</p> <p>Si a la inserci\u00f3 hi ha un camp de la taula que \u00e9s clau forana cap a la clau prim\u00e0ria d\u2019una altra taula, el que s\u2019ha de fer \u00e9s comprovar que aquest valor ja existeix a l\u2019altre taula. Altrament el sistema gestor de base de dades no permetr\u00e0 fer la inserci\u00f3. Per exemple, si a la base de dades hi ha aquestes dues taules:</p> <p></p> <p>Es podria inserir \u201cIrene Riaza Dot\u201d, perqu\u00e8 el curs que fa, 3GInf, est\u00e0 a la clau prim\u00e0ria de la taula de cursos. En canvi, no es podria inserir \u201cVictor Serra Piquer\u201d perqu\u00e8 vol fer un curs, 1GFis que no est\u00e0 a clau prim\u00e0ria de la taula de cursos. Abans de fer la inserci\u00f3, caldria comprovar aquesta situaci\u00f3.</p> <p>2) Eliminaci\u00f3. En el cas de l\u2019eliminaci\u00f3 de dades, cal comprovar que no hi hagi cap clau forana apuntant a la fila o files que es volen eliminar. Que passa si es vol eliminar el curs 1GInf de la taula CURS? Que es fa amb els alumnes que fan aquest curs, Mariano Fad\u00f3 Gim\u00e9nez i S\u00edlvia Mart\u00ednez Espa\u00f1ol?</p> <p>Hi ha tres possibles solucions:</p> <p>a) Restricci\u00f3: no es pot eliminar la informaci\u00f3 apuntada per una clau forana. Cal eliminar primer la informaci\u00f3 relacionada. Si es vol eliminar el curs \u201c1GInf\u201d, es generaria un error dient que hi ha alumnes al curs i no es podr\u00e0 eliminar.</p> <p></p> <p>MySQL: per a indicar que una clau forana ha d\u2019actuar de forma restrictiva quan es produeix una eliminaci\u00f3 de dades, no cal afegir res a la instrucci\u00f3, ja que \u00e9s el comportament per defecte de les claus foranes a MySQL. De totes maneres, la instrucci\u00f3 seria:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete restrict;</code></p> <p>b) Posar a NULL: abans d\u2019eliminar el curs, es modifica el curs dels dos alumnes afectats i es posa a NULL. D\u2019aquesta manera, a la taula ESTUDIANT ja no hi \u00e9s el curs \u201c1Ginf\u201d a eliminar. Despr\u00e9s, s\u2019elimina aquest curs de la taula CURS. Les dues taules de l\u2019exemple quedarien aix\u00ed:</p> <p></p> <p>MySQL: per a indicar que una clau forana es comporti de forma \u201cposar a NULL\u201d quan es produeix una eliminaci\u00f3 de dades, es fa de la seg\u00fcent manera:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete set null;</code></p> <p>c) Cascada: l\u2019eliminaci\u00f3 en cascada s\u2019ha de definir per a cada relaci\u00f3 entre taules que volem que s\u2019apliqui. \u00c9s perillosa, ja que elimina m\u00e9s dades de les que en un principi es veurien afectades per la instrucci\u00f3 que s\u2019executa. Aquest sistema consisteix a eliminar primer de la taula relacionada (ESTUDIANT en aquest cas), tots els registres que poden donar un problema d\u2019integritat referencial (el segon i el quart, en aquest cas), i despr\u00e9s fer l\u2019eliminaci\u00f3 demanada a la primera taula (CURS en aquest cas). Les dues taules quedarien aix\u00ed:</p> <p></p> <p>MySQL: per a indicar que una clau forana elimini dades en cascada en fer una eliminaci\u00f3 de dades, es fa de la seg\u00fcent manera:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete cascade;</code></p> <p>3) Modificaci\u00f3: com ja s\u2019ha vist amb anterioritat, una modificaci\u00f3 es pot equiparar a una eliminaci\u00f3 de les dades velles, i una inserci\u00f3 de les dades noves. Llavors, cal tenir en compte aquests dos fets, pel que fa a evitat errors d\u2019integritat referencial.</p> <p>El valor que es vol modificar, si est\u00e0 referenciat per una clau forana, se li apliquen les mateixes regles que en el cas de l\u2019eliminaci\u00f3, o sigui: restricci\u00f3, posar a NULL o cascada. Aix\u00f2 \u00e9s aix\u00ed perqu\u00e8 a tots els efectes, el valor a modificar es perdr\u00e0, sobreescrit pel nou valor, i aix\u00f2 pot afectar els valors referenciats.</p> <p>A l\u2019exemple anterior, si a la taula CURS es vol canviar el nom del curs \u201c3GM\u201d per \u201c3GMul\u201d, afectar\u00e0 l\u2019estudiant Claudina Marinas Salvanya, que est\u00e0 fent un curs anomenat 3GM.</p> <p>De la mateixa manera, si es vol modificar el valor d\u2019un atribut que \u00e9s clau forana cap a una altra taula, es pot fer, sempre que es continu\u00efn complint les regles d\u2019integritat, referencial, o sigui, que el nou valor sigui NULL, o b\u00e9 un altre valor de la clau prim\u00e0ria referenciada. Per exemple, Jaume Serra Lessner vol canviar-se de curs. T\u00e9 clar que no vol fer \u201c1GM\u201d. Hi ha tres possibilitats:</p> <ul> <li>No t\u00e9 clar quin nou curs vol fer. S\u2019ho pensa. Per ara, el valor del curs que fa \u00e9s NULL, que \u00e9s un valor v\u00e0lid per a una clau forana.</li> <li>T\u00e9 clar qu\u00e8 vol fer \u201c1GInf\u201d. Es pot canviar el valor sense cap problema, perqu\u00e8 \u00e9s un dels valors de la clau prim\u00e0ria de CURS.</li> <li>T\u00e9 clar qu\u00e8 vol fer \u201cAstrof\u00edsica Aplicada\u201d. Doncs no ho pot fer, perqu\u00e8 no \u00e9s un dels valors de la clau prim\u00e0ria de CURS. Si es fes una modificaci\u00f3 amb aquest valor, es generaria un error d\u2019integritat referencial.</li> </ul> <p>MySQL. Per a indicar com es vol que reaccioni la taula en modificar un valor d\u2019una clau forana, la sintaxi \u00e9s molt similar al cas de l\u2019eliminaci\u00f3 de dades:</p> <ul> <li>Restrictiu: <code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on update restrict;</code></li> <li>Posar a NULL: <code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on update set null;</code></li> <li>Cascada: <code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on update cascade;</code></li> </ul> <p>A una mateixa clau forana es poden combinar les accions pel cas de l\u2019eliminaci\u00f3 i pel cas de la modificaci\u00f3. No cal fer dues instruccions, nom\u00e9s cal concatenar:</p> <p><code>Alter table ESTUDIANT add foreign key curs references CURS(nom) on delete set null on update cascade;</code></p>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#9annex-codi-emprat-als-exemples","title":"9.Annex: codi emprat als exemples","text":"<p>1) Codi de connexi\u00f3, inserci\u00f3, modificaci\u00f3, eliminaci\u00f3, consulta d\u2019una dada i consulta de diverses dades amb un cursor.</p> <pre><code>&lt;?php\n   //par\u00e0metres de connexi\u00f3\n   $servidor = \"localhost\";\n   $usuari = \"root\";\n   $contrasenya = \"\";\n   $bd = \"bdprova\";\n\n   //realitzaci\u00f3 de la connexi\u00f3\n   $con = mysqli_connect ($servidor, $usuari, $contrasenya, $bd);\n   if (!$con)\n   {\n      die(\"No s'ha pogut realitzar la connexi\u00f3. ERROR:\" .\n      mysqli_connect_error() . \"&lt;br&gt;\");\n   }\n\n   //inserci\u00f3 d'una dada\n   $instruccio = \"insert into estudiant \n                  values ('52666666F','Toni Blanco Serra',23,'2GM')\";\n   $res = mysqli_query($con, $instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut inserir la dada&lt;br&gt;\");\n   }\n   echo \"Dada inserida&lt;br&gt;\";\n\n   //modificaci\u00f3 d'una dada\n   $instruccio = \"update estudiant set edat = 25 \n   where DNI = '52666666F'\";\n   $res = mysqli_query($con, $instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut modificar la dada&lt;br&gt;\");\n   }\n   echo \"Dada modificada&lt;br&gt;\";\n\n   //eliminaci\u00f3 d'una dada\n   $instruccio = \"delete from estudiant where DNI = '52666666F'\";\n   $res = mysqli_query($con, $instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut eliminar la dada&lt;br&gt;\");\n   }\n   echo \"Dada eliminada&lt;br&gt;\";\n\n\n   //consulta d'una dada simple\n   $instruccio = \"select nom from estudiant where dni = '52222222B'\";\n   $res = mysqli_query($con,$instruccio);\n   if (mysqli_errno($con) != 0) //si error es finalitza\n   {\n      die(\"No s'ha pogut consultar la dada&lt;br&gt;\");\n   }\n   echo \"Dada consultada&lt;br&gt;\";\n   $fila = mysqli_fetch_assoc($res);\n   $camp = 'nom';\n   $dada = $fila['nom'];\n   echo $dada . \"&lt;br&gt;\";\n\n   //consulta de varies files de dades\n   $instruccio = \"select nom, edat from estudiant\";\n   $res = mysqli_query($con,$instruccio);\n   if ($res != null)\n   {\n      $fila = mysqli_fetch_assoc($res);\n      while ($fila != null)\n      {   \n         $nom = $fila['nom'];\n         $edat = $fila['edat'];\n         echo \"Nom: \" . $nom . \" | edat: \" . $edat . \"&lt;br&gt;\";\n         $fila = mysqli_fetch_assoc($res);\n      }\n   }\n   mysqli_free_result($res);\n   mysqli_close ($con);\n\n?&gt;\n</code></pre> <p>Codi d\u2019eliminaci\u00f3 d\u2019una dada dintre d\u2019una transacci\u00f3, i posterior rollback per a desfer la transacci\u00f3.</p> <pre><code>&lt;?php\n   //par\u00e0metres de connexi\u00f3\n   $servidor = \"localhost\";\n   $usuari = \"root\";\n   $contrasenya = \"\";\n   $bd = \"bdprova\";\n\n   //realitzaci\u00f3 de la connexi\u00f3\n   $con = mysqli_connect ($servidor, $usuari, $contrasenya, $bd);\n   if (!$con)\n   {\n      die(\"No s'ha pogut realitzar la connexi\u00f3. ERROR:\" .\n      mysqli_connect_error() . \"&lt;br&gt;\");\n   }\n   else\n   {\n      echo \"S'ha connectat a la base de dades&lt;br&gt;\";\n      //eliminaci\u00f3 d'una dada\n      mysqli_query($con, \"begin\");\n      $instruccio = \"delete from estudiant where \n                     DNI = '52666666F'\";\n      $res = mysqli_query($con, $instruccio);\n      if (mysqli_errno($con) != 0) //si error es finalitza\n      {\n         die(\"No s'ha pogut eliminar la dada\");\n      }\n      else\n      {\n         //Despr\u00e9s de l'eliminaci\u00f3, comprovem que no hi ha cap \n         //estudiant amb aquest DNI\n         $res = mysqli_query($con,\"select count(*) as quants \n            from estudiant where DNI = '52666666F'\");\n         $fila = mysqli_fetch_assoc($res);\n         $num = $fila['quants'];\n         echo \"Estudiants amb DNI = 52666666F: \" . $num . \"&lt;br&gt;\";\n      }\n      mysqli_query($con,\"rollback\");\n      //Despr\u00e9s de l'eliminaci\u00f3, i de desfer la transacci\u00f3 amb un \n      //\"rollback\",comprovem que l'estudiant no ha estat eliminat \n      //de la base de dades\n      $res = mysqli_query($con,\"select count(*) as quants from \n         estudiant where DNI = '52666666F'\");\n      $fila = mysqli_fetch_assoc($res);\n      $num = $fila['quants'];\n      echo \"Estudiants amb DNI = 52666666F: \" . $num . \"&lt;br&gt;\";\n   }\n?&gt;\n</code></pre>"},{"location":"Moduls/DWES/UT05AccesADadesAmbMySQL.html#10manuals-i-fonts-dinformacio-addicionals","title":"10.Manuals i fonts d\u2019informaci\u00f3 addicionals","text":"<p>1) MySQL:</p> <ul> <li>https://dev.mysql.com/doc/refman/8.0/en/sql-syntax.html</li> <li>https://downloads.mysql.com/docs/refman-5.0-es.pdf</li> </ul> <p>2) PHP i MySQL:</p> <ul> <li>https://downloads.mysql.com/docs/apis-php-en.pdf</li> <li>https://php.net/manual/es/book.mysqli.php</li> </ul>"},{"location":"Moduls/DWES/_DWES24245.html","title":"Desenvolupament web en entorn servidor - DAW","text":"<ul> <li> <p> DAW DWES Desenvolupament Web Entorn Servidor</p> </li> </ul> <p> Continguts UT02</p> <p> Continguts UT03</p> <p> Exercicis</p>"},{"location":"Moduls/DWES/spring.html","title":"Spring","text":"<ul> <li>Spring Framework</li> <li>Spring Boot</li> <li>M\u00f3dulos principales de Spring</li> <li>Beans</li> <li>Inversi\u00f3n de Control e Inyecci\u00f3n de Dependencias</li> <li>Pr\u00e1ctica de clase: Spring Boot</li> </ul>"},{"location":"Moduls/DWES/spring.html#spring-framework","title":"Spring Framework","text":"<p>Spring \u00e9s un marc de treball (framework) de codi obert per al desenvolupament d'aplicacions a la plataforma JVM. Va ser creat per abordar la complexitat del desenvolupament empresarial i \u00e9s \u00e0mpliament adoptat a causa de les seves caracter\u00edstiques, com ara:</p> <ol> <li> <p>Inversi\u00f3 de Control (IoC): Spring maneja la creaci\u00f3 i gesti\u00f3 d'objectes, la qual cosa redueix la depend\u00e8ncia entre els components del programari.</p> </li> <li> <p>Programaci\u00f3 Orientada a Aspectes (AOP): Spring proporciona un suport potent per a la programaci\u00f3 orientada a aspectes, la qual cosa permet als desenvolupadors aplicar funcionalitats transversals de manera declarativa, com registre, seguretat, transaccions, etc.</p> </li> <li> <p>Integraci\u00f3 de la base de dades: Spring proporciona una abstracci\u00f3 de la base de dades a trav\u00e9s del seu m\u00f2dul JDBC i ORM, la qual cosa facilita la integraci\u00f3 amb diferents bases de dades.</p> </li> <li> <p>Suport per a transaccions: Spring proporciona un mecanisme de gesti\u00f3 de transaccions que es pot integrar amb una varietat de tecnologies de persist\u00e8ncia.</p> </li> <li> <p>Integraci\u00f3 amb tecnologies de middleware: Spring s'integra b\u00e9 amb tecnologies de middleware com JMS, EJB, etc.</p> </li> <li> <p>Suport per a proves: Spring proporciona suport per a proves unit\u00e0ries i d'integraci\u00f3, la qual cosa ajuda els desenvolupadors a verificar el seu codi de manera m\u00e9s eficient.</p> </li> </ol>"},{"location":"Moduls/DWES/spring.html#spring-boot","title":"Spring Boot","text":"<p>Spring Boot es un proyecto que se basa en el Spring Framework y simplifica el proceso de configuraci\u00f3n y ejecuci\u00f3n de aplicaciones Spring. Las caracter\u00edsticas clave de Spring Boot incluyen:</p> <ol> <li> <p>Autoconfiguraci\u00f3n: Spring Boot puede configurar autom\u00e1ticamente una aplicaci\u00f3n basada en las dependencias que se han agregado al proyecto.</p> </li> <li> <p>Standalone: Spring Boot permite crear aplicaciones independientes con un servidor embebido, lo que significa que no necesitas un servidor web o de aplicaciones separado.</p> </li> <li> <p>Opini\u00f3n predefinida: Spring Boot tiene una opini\u00f3n predefinida para configurar proyectos Spring, aunque permite a los desarrolladores modificar la configuraci\u00f3n para satisfacer sus necesidades.</p> </li> <li> <p>Dependencias de inicio: Proporciona starters que son un conjunto de dependencias convenientes que simplifican la configuraci\u00f3n de la aplicaci\u00f3n.</p> </li> <li> <p>Actuator: Proporciona funcionalidades de producci\u00f3n listas para usar, como la monitorizaci\u00f3n y la gesti\u00f3n de la aplicaci\u00f3n.</p> </li> <li> <p>Pruebas: Spring Boot proporciona soporte para pruebas con Spring Boot Test Starter, lo que facilita la escritura de pruebas para las aplicaciones Spring Boot.</p> </li> </ol>"},{"location":"Moduls/DWES/spring.html#modulos-principales-de-spring","title":"M\u00f3dulos principales de Spring","text":"<p>Spring Framework est\u00e1 dise\u00f1ado de manera modular, lo que significa que puedes elegir usar solo los m\u00f3dulos que necesitas para tu aplicaci\u00f3n. Aqu\u00ed te describo algunos de los m\u00f3dulos m\u00e1s comunes:</p> <p></p> <ol> <li> <p>Spring Core: Este es el m\u00f3dulo central del framework Spring que proporciona la implementaci\u00f3n fundamental de la Inversi\u00f3n de Control (IoC) y la Inyecci\u00f3n de Dependencias (DI).</p> </li> <li> <p>Spring AOP: Este m\u00f3dulo proporciona soporte para la Programaci\u00f3n Orientada a Aspectos (AOP), que permite a los desarrolladores definir m\u00e9todos que se ejecutan antes, despu\u00e9s o alrededor de los m\u00e9todos de negocio.</p> </li> <li> <p>Spring DAO / Spring JDBC: Estos m\u00f3dulos proporcionan una capa de abstracci\u00f3n sobre las operaciones de bajo nivel de JDBC, lo que facilita el manejo de las operaciones de la base de datos.</p> </li> <li> <p>Spring ORM: Este m\u00f3dulo proporciona integraci\u00f3n con tecnolog\u00edas de mapeo objeto-relacional como Hibernate, JPA, JDO, etc.</p> </li> <li> <p>Spring Web MVC: Este m\u00f3dulo proporciona un marco para el desarrollo de aplicaciones web y RESTful utilizando el patr\u00f3n Modelo-Vista-Controlador.</p> </li> <li> <p>Spring WebFlux: Este m\u00f3dulo es la respuesta de Spring al desarrollo de aplicaciones reactivas y permite la construcci\u00f3n de aplicaciones no bloqueantes.</p> </li> </ol> <p>Adem\u00e1s de estos m\u00f3dulos, Spring tiene varios proyectos que extienden su funcionalidad:</p> <ol> <li> <p>Spring Boot: Facilita la creaci\u00f3n de aplicaciones Spring aut\u00f3nomas y basadas en la producci\u00f3n, simplificando la configuraci\u00f3n y el despliegue.</p> </li> <li> <p>Spring Security: Es un marco de seguridad altamente personalizable que proporciona autenticaci\u00f3n y autorizaci\u00f3n, protecci\u00f3n contra ataques, etc.</p> </li> <li> <p>Spring Data: Simplifica la persistencia de datos y proporciona soporte para diferentes tecnolog\u00edas de base de datos, incluyendo JPA, Hibernate, JDBC, MongoDB, Redis, etc.</p> </li> <li> <p>Spring Cloud: Proporciona herramientas para el desarrollo de aplicaciones en la nube, incluyendo la configuraci\u00f3n centralizada, el descubrimiento de servicios, el enrutamiento, etc.</p> </li> <li> <p>Spring Integration: Proporciona una implementaci\u00f3n del patr\u00f3n de integraci\u00f3n de sistemas empresariales (EIP) para facilitar la integraci\u00f3n con otros sistemas mediante la mensajer\u00eda.</p> </li> <li> <p>Spring Batch: Proporciona funciones robustas para el procesamiento por lotes, incluyendo servicios de transacci\u00f3n, tareas programadas, etc.</p> </li> </ol> <p>Cada uno de estos m\u00f3dulos y proyectos proporciona funcionalidad espec\u00edfica, lo que permite a los desarrolladores elegir y usar solo lo que necesitan para sus aplicaciones.</p>"},{"location":"Moduls/DWES/spring.html#beans","title":"Beans","text":"<p>En Spring y Spring Boot, los Beans son los objetos fundamentales que forman la columna vertebral de tus aplicaciones. Son objetos que son instanciados, ensamblados y administrados por el contenedor Spring.</p> <p>Los Beans son creados a partir de las clases de tu aplicaci\u00f3n. Puedes configurar c\u00f3mo se crean los beans, c\u00f3mo se inyectan las dependencias y c\u00f3mo se gestionan en el tiempo de vida de la aplicaci\u00f3n.</p> <p>La creaci\u00f3n de beans se puede configurar de varias maneras en Spring:</p> <ol> <li>Anotaciones: Puedes usar anotaciones como <code>@Component</code>, <code>@Service</code>, <code>@Repository</code> y <code>@Controller</code> para marcar una clase como bean. Spring entonces autom\u00e1ticamente detectar\u00e1 estas clases y las registrar\u00e1 como beans en el contenedor.</li> </ol> <p></p> <pre><code>@Service\npublic class MyService {\n    //...\n}\n</code></pre> <ol> <li>Archivos de configuraci\u00f3n XML: En aplicaciones Spring m\u00e1s antiguas, puedes definir beans en archivos de configuraci\u00f3n XML. Sin embargo, este enfoque se utiliza con menos frecuencia en aplicaciones modernas.</li> </ol> <pre><code>&lt;bean id=\"myService\" class=\"com.example.MyService\"/&gt;\n</code></pre> <ol> <li>Clases de configuraci\u00f3n de Java: Tambi\u00e9n puedes definir beans en clases de configuraci\u00f3n de Java usando la anotaci\u00f3n <code>@Configuration</code> y el m\u00e9todo <code>@Bean</code>.</li> </ol> <pre><code>@Configuration\npublic class MyConfiguration {\n\n    @Bean\n    public MyService myService() {\n        return new MyService();\n    }\n}\n</code></pre> <p>Una vez que los beans est\u00e1n en el contenedor Spring, puedes inyectarlos en otras partes de tu aplicaci\u00f3n usando la anotaci\u00f3n <code>@Autowired</code>. Spring se encargar\u00e1 de buscar el bean correcto y de inyectarlo en tu clase.</p> <pre><code>public class MyController {\n\n    private final MyService myService;\n\n    @Autowired\n    public MyController(MyService myService) {\n        this.myService = myService;\n    }\n\n    //...\n}\n</code></pre> <p>En este ejemplo, Spring inyectar\u00e1 autom\u00e1ticamente el bean <code>MyService</code> en <code>MyController</code> cuando este \u00faltimo sea creado.</p> <p>Los beans son \u00fatiles porque te permiten abstraer la creaci\u00f3n y gesti\u00f3n de objetos. Esto hace que tu c\u00f3digo sea m\u00e1s limpio, m\u00e1s f\u00e1cil de probar y m\u00e1s modular. Adem\u00e1s, los beans de Spring pueden tener \u00e1mbitos (como singleton, prototype, request, session, etc.) que te permiten controlar cu\u00e1ndo y c\u00f3mo se crean y destruyen los beans.</p>"},{"location":"Moduls/DWES/spring.html#inversion-de-control-e-inyeccion-de-dependencias","title":"Inversi\u00f3n de Control e Inyecci\u00f3n de Dependencias","text":"<p>Inversi\u00f3n de Control (IoC) y Inyecci\u00f3n de Dependencias (DI) son dos conceptos fundamentales en Spring y Spring Boot que facilitan la creaci\u00f3n de aplicaciones modulares y flexibles.</p> <p>Inversi\u00f3n de Control (IoC): IoC es un principio de dise\u00f1o de software que invierte el control del flujo de la aplicaci\u00f3n. En un programa tradicional, el flujo de control est\u00e1 dictado por el propio programa, lo que significa que el programa controla la creaci\u00f3n y gesti\u00f3n de los objetos. Sin embargo, en un programa que utiliza IoC, este control se invierte, es decir, el framework (en este caso, Spring) se encarga de la creaci\u00f3n y gesti\u00f3n de los objetos. Esto reduce el acoplamiento entre las clases y permite una mayor flexibilidad y modularidad.</p> <p>Inyecci\u00f3n de Dependencias (DI): DI es una t\u00e9cnica que implementa el principio de IoC para la gesti\u00f3n de dependencias entre objetos. En lugar de que los objetos creen o busquen sus dependencias, estas se \"inyectan\" en ellos por el framework. En Spring, esto se puede hacer a trav\u00e9s de constructores, m\u00e9todos setter o campos directamente. La DI facilita la prueba unitaria, ya que las dependencias pueden ser f\u00e1cilmente sustituidas por mockups.</p> <p>En Spring y Spring Boot, estos conceptos se implementan a trav\u00e9s del contenedor Spring. El contenedor Spring crea y gestiona los objetos de la aplicaci\u00f3n, que se conocen como beans. Los beans y sus dependencias se configuran en archivos de configuraci\u00f3n XML o mediante anotaciones en el c\u00f3digo.</p> <p>Por ejemplo, si tienes una clase <code>A</code> que depende de una clase <code>B</code>, en lugar de crear un objeto <code>B</code> dentro de <code>A</code> con <code>new B()</code>, declaras esta dependencia y Spring se encarga de inyectarla. Esto se puede hacer mediante anotaciones como <code>@Autowired</code>.</p> <pre><code>public class A {\n    private B b;\n\n    @Autowired\n    public A(B b) {\n        this.b = b;\n    }\n\n    // resto de la clase\n}\n</code></pre> <p>En este ejemplo, Spring crear\u00e1 un bean de <code>B</code> y lo inyectar\u00e1 en <code>A</code> cuando cree un bean de <code>A</code>. Esto significa que no tienes que preocuparte por la creaci\u00f3n y gesti\u00f3n de <code>B</code> - eso es manejado por Spring, lo que es IoC y DI en acci\u00f3n.</p>"},{"location":"Moduls/DWES/spring.html#practica-de-clase-spring-boot","title":"Pr\u00e1ctica de clase: Spring Boot","text":"<p>Investiga sobre proyectos servicios que conozcas que usen Spring Boot. \u00bfEn qu\u00e9 parten lo usan? \u00bfQu\u00e9 m\u00f3dulos de Spring usan? \u00bfQu\u00e9 ventajas les da Spring Boot?</p>"},{"location":"Moduls/DWES/exercicisisolucions/DWESUT0501_PracticaInicialPHPBD.html","title":"Enunciat de la Pr\u00e0ctica","text":"<p>Gestor de tasques</p> <p>Crear una aplicaci\u00f3 web b\u00e0sica per gestionar una llista de tasques.</p> <p>Requisits:</p> <p>Base de Dades MySQL:</p> <p>Crea una base de dades anomenada todolist. Crea una taula anomenada tasks amb les seg\u00fcents columnes:</p> <p><pre><code>id (INT, AUTO_INCREMENT, PRIMARY KEY)\ntask (VARCHAR(255))\nstatus (ENUM(\u2018pending\u2019, \u2018completed\u2019))\n</code></pre> Interf\u00edcie HTML:</p> <p>Crea una p\u00e0gina HTML amb un formulari per afegir noves tasques. El formulari ha de tenir un camp de text per a la tasca i un bot\u00f3 per enviar. Mostra la llista de tasques existents en una taula. Cada fila ha de tenir la tasca i el seu estat (pendent o completada).</p> <p>PHP:</p> <p>Crea un fitxer PHP per gestionar la connexi\u00f3 a la base de dades. Crea un fitxer PHP per processar el formulari d\u2019afegir tasques. Aquest fitxer ha d\u2019inserir la nova tasca a la base de dades. Crea un fitxer PHP per mostrar la llista de tasques des de la base de dades.</p> <p>Com entregar-ho</p> <p>Heu de crear un fitxer anomenat DWESUT0501_PracticaInicialPHPBD_.html i pujar-lo al hosting que teniu creat."},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html","title":"Exercici Gesti\u00f3 Botiga","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#gestio-duna-botiga-en-linia-amb-productes-i-categories","title":"Gesti\u00f3 d'una botiga en l\u00ednia amb productes i categories","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#enunciat","title":"Enunciat:","text":"<p>Crea una aplicaci\u00f3 PHP que simuli una botiga en l\u00ednia. L'aplicaci\u00f3 ha de permetre:</p> <ul> <li>Crear productes Cada producte tindr\u00e0 un nom, una descripci\u00f3, un preu i una categoria.</li> <li>Crear categories: Cada categoria tindr\u00e0 un nom i una descripci\u00f3.</li> <li>Assignar productes a categories: Un producte pot pert\u00e0nyer a una o m\u00e9s categories.</li> <li>Mostrar una llista de productes: El llistat ha de permetre filtrar per categoria.</li> <li>Mostrar el detall d'un producte: En seleccionar un producte, es mostrar\u00e0 tota la informaci\u00f3, incloent-hi les categories a qu\u00e8 pertany.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#estructura-del-projecte","title":"Estructura del projecte:","text":"<ul> <li>index.php:<ul> <li>Cont\u00e9 el codi principal del programa.</li> <li>Inclou les dades inicials (productes, categories).</li> <li>Truca a les funcions definides al fitxer <code>funcions.php</code> per fer les operacions.</li> </ul> </li> <li>funcions.php:<ul> <li>Cont\u00e9 totes les funcions necess\u00e0ries per gestionar els productes i les categories.</li> </ul> </li> </ul> <p>index.php (exemple):</p> <pre><code>&lt;?php\n\nrequire_once 'funcions.php';\n\n// Dades inicials (exemple)\n\n$producte1 = crearProducte('Samarreta', 'Samarreta de cot\u00f3', 19.99);\n\n$producte2 = crearProducte('Pantalons', 'Pantalons vaquer', 39.99);\n\n$categoria1 = crearCategoria('Roba', 'Secci\u00f3 de roba');\n\n$categoria2 = crearCategoria('Home', 'Productes per a home');\n\nagregarCategoriaAProducte($producte1, $categoria1);\n\nagregarCategoriaAProducte($producte1, $categoria2);\n\nagregarCategoriaAProducte($producte2, $categoria1);\n\n// Mostrar productes de la categoria \"Roba\"\n\n$productesRoba = obtenirProductesPorCategoria($categoria1);\n\nmostrarProductes($productesRoba);\n</code></pre> <p>funcions.php (exemple):</p> <pre><code>&lt;?php\n\nclass Producte {\n\n    //... \n\n}\n\nclasse Categoria {\n\n    //... \n\n}\n\nfunction crearProducte($nom, $descripcio, $preu) {\n\n    //...\n\n}\n\nfunction crearCategoria($nom, $descripcio) {\n\n    //...\n\n}\n\nfunction agregarCategoriaAProducte(Producte $producte, Categoria $categoria) {\n\n    //...\n\n}\n\nfunction obtenirProductsPorCategoria(Categoria $categoria) {\n\n    //...\n\n}\n\nfunction mostrarProductes(array $productes) {\n\n    //...\n\n}\n</code></pre>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#instruccions","title":"Instruccions:","text":"<ol> <li>Crear els fitxers: Crea dos fitxers: <code>index.php</code> i <code>funcions.php</code>.</li> <li>Implementar les funcions: Completa les funcions a <code>funcions.php</code> segons la descripci\u00f3 de lexercici.</li> <li>Utilitzar les funcions: A <code>index.php</code>, crea els productes i categories necessaris i utilitza les funcions per realitzar les operacions sol\u00b7licitades.</li> <li>Mostra resultats: La funci\u00f3 <code>mostrarProductes</code> ha d'imprimir a la pantalla la informaci\u00f3 dels productes.</li> </ol>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#aspectes-que-savaluaran","title":"Aspectes que s\u2019avaluaran:","text":"<ul> <li>Correcci\u00f3 del codi: Les funcions han de fer les tasques correctament.</li> <li>Modularitat: El codi ha d'estar ben organitzat en funcions.</li> <li>Reutilitzaci\u00f3 de codi: Cal evitar duplicacions de codi.</li> <li>Documentaci\u00f3: Es recomana afegir comentaris a les funcions per explicar-ne el prop\u00f2sit.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#ampliacions","title":"Ampliacions:","text":"<ul> <li>Validaci\u00f3 de dades: Afegir validacions per assegurar que les dades ingressades siguin correctes.</li> <li>Maneig d'errors: Implementar un maneig d'errors adequat per evitar que el programa s'aturi inesperadament.</li> <li>Persist\u00e8ncia de dades: Desar les dades en un fitxer o base de dades.</li> <li>Interf\u00edcie d'usuari: Crear una interf\u00edcie web simple utilitzant HTML i formularis per interactuar amb l'aplicaci\u00f3.</li> <li>Sortida HTML: Un cop funcioni el teu codi, prepara\u2019l per presentar les dades de sortida en format HTML. Concretament utilitzant taules.</li> <li>Sortida HTML utilitzant imatges dels productes</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#comentaris-i-observacions","title":"Comentaris i observacions:","text":"<p>En separar la l\u00f2gica en funcions i fitxers separats el codi \u00e9s m\u00e9s net, eficient i reutilitzable, preparant-los per a projectes m\u00e9s complexos.</p> <ul> <li>Major organitzaci\u00f3: El codi est\u00e0 m\u00e9s estructurat i \u00e9s m\u00e9s f\u00e0cil entendre i mantenir.</li> <li>Reutilitzaci\u00f3 de codi: Les funcions poden ser utilitzades a diferents parts del programa.</li> <li>Facilitat de prova: \u00c9s m\u00e9s f\u00e0cil provar les funcions de manera individual.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#exemple-dexecucio-sortida-esperada-del-vostre-codi","title":"Exemple d'execuci\u00f3 (sortida esperada del vostre codi)","text":"<p>Dades d'entrada:</p> <ul> <li>Productes:<ul> <li>Samarreta: Samarreta de cot\u00f3, 19.99\u20ac</li> <li>Pantalons: Pantalons texans, 39.99\u20ac</li> </ul> </li> <li>Categories:<ul> <li>Roba</li> <li>Home</li> </ul> </li> </ul> <p>Codi executat: S'ha cridat a la funci\u00f3 <code>mostrarProductesPerCategoria</code> amb la categoria \"Roba\".</p> <p>Sortida per pantalla:</p> <p>Productes de la categoria \"Roba\":</p> <p>Nom: Samarreta</p> <p>Preu: 19.99\u20ac</p> <p>Categories: Roba Home</p> <p>Nom: Pantalons</p> <p>Preu: 39.99\u20ac</p> <p>Categories: Roba</p> <p>Explicaci\u00f3 de la sortida:</p> <ul> <li>Es mostren tots els productes que pertanyen a la categoria \u201cRoba\u201d.</li> <li>Per a cada producte es mostra el nom, el preu i les categories a qu\u00e8 pertany.</li> <li>En aquest cas, tots dos productes (Samarreta i Pantalons) pertanyen a la categoria \"Roba\", per la qual cosa tots dos es mostren a la sortida.</li> </ul> <p>Un altre exemple:</p> <p>Dades d'entrada:</p> <ul> <li>Es busca el producte \"Samarreta\".</li> </ul> <p>Sortida per pantalla:</p> <p>Detall del producte:</p> <p>Nom: Samarreta</p> <p>Preu: 19.99\u20ac</p> <p>Categories: Roba Home</p> <p>Explicaci\u00f3 de la sortida:</p> <ul> <li>Es mostra la informaci\u00f3 detallada del producte \"Samarreta\", incloent-hi el nom, el preu i les categories a qu\u00e8 pertany.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#rubrica-davaluacio","title":"R\u00fabrica d'avaluaci\u00f3","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExerciciGestioBotiga.html#llista-de-verifiacio","title":"Llista de verifiaci\u00f3","text":"<p>Enlla\u00e7 a la llista de verificaci\u00f3</p>"},{"location":"Moduls/DWES/exercicisisolucions/Exercicis.html","title":"Exercicis","text":""},{"location":"Moduls/DWES/exercicisisolucions/Exercicis.html#1-conceptes-basics-integracio-de-php-en-html-variables-operadors","title":"1. Conceptes b\u00e0sics: Integraci\u00f3 de PHP en HTML. Variables. Operadors","text":"<p>\u270f\ufe0f   EXERCICI 01 Escriu un programa que mostri el teu nom per pantalla. Utilitza codi PHP.</p> <p>\u270f\ufe0f   EXERCICI 02 Modifica el programa anterior perqu\u00e8 mostri la teva adre\u00e7a i el teu n\u00famero de tel\u00e8fon. Cada dada s'ha de mostrar en una l\u00ednia diferent. Barreja d'alguna manera les sortides per pantalla, utilitzant tant HTML com PHP.</p> <p>\u270f\ufe0f   EXERCICI 03 Escriu un programa que mostri per pantalla 10 paraules en angl\u00e8s al costat de la seva corresponent traducci\u00f3 al castell\u00e0. Les paraules han d'estar distribu\u00efdes en dues columnes. Utilitza l'etiqueta  d'HTML. <p>\u270f\ufe0f   EXERCICI 04 Escriu un programa que mostri el teu horari de classe mitjan\u00e7ant una taula. Tot i que es pot fer \u00edntegrament a HTML (igual que els exercicis anteriors), veu intercalant codi HTML i PHP per familiaritzar-te amb aquest \u00faltim.</p> <p>\u270f\ufe0f   EXERCICI 05 Escriu un programa que utilitzi les variables $x i $y. Assignals els valors 144 i 999 respectivament. A continuaci\u00f3, mostra per pantalla el valor de cada variable, la suma, la resta, la divisi\u00f3 i la multiplicaci\u00f3.</p> <p>\u270f\ufe0f   EXERCICI 06 Crea la variable $nombre i aix\u00ed el teu nom complet. Mostra el seu valor per pantalla de tal forma que el resultat sigui el mateix que el de l'exercici 1.</p> <p>\u270f\ufe0f   EXERCICI 07 Crea les variables $nombre, $direccion i $telefono i aix\u00ed els valors adequats. Mostra els valors per pantalla de tal forma que el resultat sigui el mateix que el de l'exercici 2.</p> <p>\u270f\ufe0f   EXERCICI 08 Realitza un conversor d'euros a pessetes. La quantitat en euros que es vol convertir haur\u00e0 d'estar emmagatzemada en una variable.</p> <p>\u270f\ufe0f   EXERCICI 09 Realitza un conversor de pessetes a euros. La quantitat en pessetes que es vol convertir haur\u00e0 d'estar emmagatzemada en una variable.</p> <p>\u270f\ufe0f   EXERCICI 10 Escriu un programa que pinti per pantalla una pir\u00e0mide farcida a base de bifocades. La base de la pir\u00e0mide ha d'estar formada per 9 bifocades.</p> <p>\u270f\ufe0f   EXERCICI 11 Igual que el programa anterior, per\u00f2 aquesta vegada la pir\u00e0mide estar\u00e0 hui (s'ha de veure \u00fanicament el contorn fet amb bifoca).</p> <p>\u270f\ufe0f   EXERCICI 12 Igual que el programa anterior, per\u00f2 aquesta vegada la pir\u00e0mide ha d'apar\u00e8ixer invertida, amb el v\u00e8rtex cap avall.</p>"},{"location":"Moduls/DWES/exercicisisolucions/Exercicis.html#2-recollida-de-dades-per-teclat-mitjancant-formularis","title":"2. Recollida de dades per teclat mitjan\u00e7ant formularis","text":"<p>\u270f\ufe0f   EXERCICI 13 Realitza un programa que demani dos n\u00fameros i despr\u00e9s mostri el resultat de la seva multiplicaci\u00f3.</p> <p>\u270f\ufe0f   EXERCICI 14 Realitza un conversor d'euros a pessetes. Ara la quantitat en euros que es vol convertir s'haur\u00e0 d'introduir per teclat.</p> <p>\u270f\ufe0f   EXERCICI 15 Realitza un conversor de pessetes a euros. La quantitat en pessetes que es vol convertir s'haur\u00e0 d'introduir per teclat.</p> <p>\u270f\ufe0f   EXERCICI 16 Escriu un programa que sumi, resti, multipliqui i divideixi dos n\u00fameros introdu\u00efts per teclat.</p> <p>\u270f\ufe0f   EXERCICI 17 Escriu un programa que calculi l'\u00e0rea d'un rectangle.</p> <p>\u270f\ufe0f   EXERCICI 18 Escriu un programa que calculi l'\u00e0rea d'un triangle.</p> <p>\u270f\ufe0f   EXERCICI 19 Escriu un programa que calculi el total d'una factura a partir de la base imposable.</p> <p>\u270f\ufe0f   EXERCICI 20 Escriu un programa que calculi el salari setmanal d'un treballador en base a les hores treballades. Es pagaran 12 euros per hora.</p> <p>\u270f\ufe0f   EXERCICI 21 Escriu un programa que calculi el volum d'un con mitjan\u00e7ant la f\u00f3rmula</p> <p>\u270f\ufe0f   EXERCICI 22 Realitza un conversor de Mb a Kb.</p> <p>\u270f\ufe0f   EXERCICI 23 Realitza un conversor de Kb a Mb.</p>"},{"location":"Moduls/DWES/exercicisisolucions/Exercicis.html#3-sentencia-condicional-if-i-switch","title":"3. Sent\u00e8ncia condicional (if i switch)","text":"<p>\u270f\ufe0f   EXERCICI 24 Escriu un programa que demani per teclat un dia de la setmana i que digui quina assignatura toca a primera hora aquell dia.</p> <p>\u270f\ufe0f   EXERCICI 25 Realitza un programa que demani una hora per teclat i que mostri despr\u00e9s bons dies, bones tardes o bones nits segons l'hora. S'utilitzaran els trams de 6 a 12, de 13 a 20 i de 21 a 5. respectivament. Nom\u00e9s es tenen en compte les hores, els minuts no s'han d'introduir per teclat.</p> <p>\u270f\ufe0f   EXERCICI 26 Escriu un programa en qu\u00e8 donat un n\u00famero de l'1 a 7 escrigui el corresponent nom del dia de la setmana.</p> <p>\u270f\ufe0f   EXERCICI 27 Vam ampliar un dels exercicis de la relaci\u00f3 anterior per considerar les hores extres. Escriu un programa que calculi el salari setmanal d'un treballador tenint en compte que les hores ordin\u00e0ries (40 primeres hores de treball) es paguen a 12 euros l'hora. A partir de l'hora 41, es paguen a 16 euros l'hora.</p> <p>\u270f\ufe0f   EXERCICI 28 Realitza un programa que resolgui una equaci\u00f3 de primer grau (del tipus ax + b =0).</p> <p>\u270f\ufe0f   EXERCICI 29 Realitza un programa que calculi el temps que trigar\u00e0 a caure un objecte des d'una al\u00e7ada h. Aplica la f\u00f3rmula  sent g = 9.81m/s2</p> <p>\u270f\ufe0f   EXERCICI 30 Realitza un programa que calculi la mitjana de tres notes.</p> <p>\u270f\ufe0f   EXERCICI 31 Amplia el programa anterior perqu\u00e8 digui la nota del butllet\u00ed (insuficient, suficient, b\u00e9, notable o sobresortint).</p> <p>\u270f\ufe0f   EXERCICI 32 Realitza un programa que resolgui una equaci\u00f3 de segon grau (del tipus ax2+ bx + c =0).</p> <p>\u270f\ufe0f   EXERCICI 33 Escriu un programa que ens digui l'hor\u00f2scop a partir del dia i el mes de naixement.</p> <p>\u270f\ufe0f   EXERCICI 34 Escriu un programa que donada una hora determinada (hores i minuts), calculi els segons que falten per arribar a la mitjanit.</p> <p>\u270f\ufe0f   EXERCICI 35 Realitza un miniq\u00fcestionari amb 10 preguntes tipus test sobre les assignatures que s'imparteixen en el curs. Cada pregunta encertada sumar\u00e0 un punt. El programa mostrar\u00e0 al final la qualificaci\u00f3 obtinguda. P\u00e1sale el miniq\u00fcestionari als teus companys i p\u00eddeles que ho facin per veure qu\u00e8 tal anessin de coneixements en les diferents assignatures del curs.</p> <p>\u270f\ufe0f   EXERCICI 36 Escriu un programa que ordeni tres nombres enters introdu\u00efts per teclat.</p> <p>\u270f\ufe0f   EXERCICI 37 Realitza un programa que digui si un nombre introdu\u00eft per teclat \u00e9s parell i/o divisible entre 5.</p> <p>\u270f\ufe0f   EXERCICI 38 Escriu un programa que digui quina \u00e9s l'\u00faltima xifra d'un n\u00famero sencer introdu\u00eft per teclat.</p> <p>\u270f\ufe0f   EXERCICI 39 Escriu un programa que digui quina \u00e9s la primera xifra d'un n\u00famero sencer introdu\u00eft per teclat. Es permeten n\u00fameros de fins a 5 xifres.</p> <p>\u270f\ufe0f   EXERCICI 40 Realitza un programa que ens digui quants d\u00edgits t\u00e9 un nombre sencer que pot ser positiu o negatiu. Es permeten n\u00fameros de fins a 5 d\u00edgits.</p> <p>\u270f\ufe0f   EXERCICI 41 Realitza un programa que digui si un nombre sencer positiu introdu\u00eft per teclat \u00e9s capic\u00faa. Es permeten n\u00fameros de fins a 5 xifres.</p>"},{"location":"Moduls/DWES/exercicisisolucions/Exercicis.html#4-bucles","title":"4. Bucles","text":"<p>\u270f\ufe0f   EXERCICI 42 Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle for.</p> <p>\u270f\ufe0f   EXERCICI 43 Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle while.</p> <p>\u270f\ufe0f   EXERCICI 44 Mostra els n\u00fameros m\u00faltiples de 5 de 0 a 100 utilitzant un bucle do-while.</p> <p>\u270f\ufe0f   EXERCICI 45 Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle for.</p> <p>\u270f\ufe0f   EXERCICI 46 Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle while.</p> <p>\u270f\ufe0f   EXERCICI 47 Mostra els n\u00fameros del 320 al 160, comptant de 20 en 20 utilitzant un bucle do-while.</p> <p>\u270f\ufe0f   EXERCICI 48 Realitza el control d'acc\u00e9s a una caixa forta. La combinaci\u00f3 ser\u00e0 un nombre de 4 xifres. El programa ens demanar\u00e0 la combinaci\u00f3 per obrir-la. Si no encertem, se'ns mostrar\u00e0 el missatge \"Ho sento, aquesta no \u00e9s la combinaci\u00f3\" i si encertem se'ns dir\u00e0 \"La caixa forta s'ha obert satisfact\u00f2riament\". Tindrem quatre oportunitats per obrir la caixa forta.</p> <p>\u270f\ufe0f   EXERCICI 49 Mostra la taula de multiplicar d'un nombre introdu\u00eft per teclat. El resultat s'ha de mostrar en una taula (&lt;table&gt; en HTML).</p> <p>\u270f\ufe0f   EXERCICI 50 Realitza un programa que ens digui quants d\u00edgits t\u00e9 un n\u00famero introdu\u00eft per teclat.</p> <p>\u270f\ufe0f   EXERCICI 51 Escriu un programa que calculi la mitjana d'un conjunt de nombres positius introdu\u00efts per teclat. A priori, el programa no sap quants n\u00fameros s'introduiran. L'usuari indicar\u00e0 que ha acabat d'introduir les dades quan meta un n\u00famero negatiu.</p> <p>\u270f\ufe0f   EXERCICI 52 Escriu un programa que mostri en tres columnes, el quadrat i el cubell dels 5 primers nombres sencers a partir d'un que s'introdueix per teclat.</p> <p>\u270f\ufe0f   EXERCICI 53 Escriu un programa que mostri els n primers termes de la s\u00e8rie de Fibonacci. El primer terme de la s\u00e8rie de Fibonacci \u00e9s 0, el segon \u00e9s 1 i la resta es calcula sumant els dos anteriors, per la qual cosa haur\u00edem de ser 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144... El n\u00famero n s'ha d'introduir per teclat.</p> <p>\u270f\ufe0f   EXERCICI 54 Escriu un programa que llegeixi una llista de deu n\u00fameros i determini quants s\u00f3n positius, i quants s\u00f3n negatius.</p> <p>\u270f\ufe0f   EXERCICI 55 Escriu un programa que demani una base i un exponent (sencer positiu) i que calculi la pot\u00e8ncia.</p> <p>\u270f\ufe0f   EXERCICI 56 Escriu un programa que donats dos n\u00fameros, un de real (base) i un sencer positiu (exponent), tregui per pantalla totes les pot\u00e8ncies amb base el n\u00famero donat i exponents entre un i l'exponent introdu\u00eft. No s'han d'utilitzar funcions d'exponenciaci\u00f3. Per exemple, si introdu\u00efm el 2 i el 5, s'hauran de mostrar 2\u00b9, 2 \u00b2, 2 \u00b3, 2\u2074, 2\u2075.</p> <p>\u270f\ufe0f   EXERCICI 57 Escriu un programa que digui si un n\u00famero introdu\u00eft per teclat \u00e9s o no cos\u00ed. Un n\u00famero cos\u00ed \u00e9s aquell que nom\u00e9s \u00e9s divisible entre ell mateix i la unitat.</p> <p>\u270f\ufe0f   EXERCICI 58 Realitza un programa que sumi els 100 n\u00fameros seg\u00fcents a un nombre sencer i positiu introdu\u00eft per teclat. S'ha de comprovar que la dada introdu\u00efda \u00e9s correcta (que \u00e9s un nombre positiu).</p> <p>\u270f\ufe0f   EXERCICI 59 Escriu un programa que obtingui els nombres enters compresos entre dos nombres introdu\u00efts per teclat i validats com a diferents, el programa ha de comen\u00e7ar pel menor dels enters introdu\u00efts i anar incrementant de 7 en 7.</p> <p>\u270f\ufe0f   EXERCICI 60 Realitza un programa que pinti una pir\u00e0mide per pantalla. L'al\u00e7ada s'ha de demanar per teclat mitjan\u00e7ant un formulari. La pir\u00e0mide estar\u00e0 feta de boletes, maons o qualsevol altra imatge de les 5 que s'han de donar a elegir mitjan\u00e7ant un formulari.</p> <p>\u270f\ufe0f   EXERCICI 61 Igual que l'exercici anterior per\u00f2 aquesta vegada s'ha de pintar una pir\u00e0mide fuita.</p> <p>\u270f\ufe0f   EXERCICI 62 Realitza un programa que vagi demanant n\u00fameros fins que s'introdueixi un nombre negatiu i ens digui quants n\u00fameros s'han introdu\u00eft, la mitjana dels senars i el m\u00e9s gran dels parells . El nombre negatiu nom\u00e9s s'utilitza per indicar el final de la introducci\u00f3 de dades per\u00f2 no s'inclou en el c\u00f2mput.</p> <p>\u270f\ufe0f   EXERCICI 63 Mostra per pantalla tots els n\u00fameros cosins entre 2 i 100, ambd\u00f3s inclosos.</p> <p>\u270f\ufe0f   EXERCICI 64 Escriu un programa que permeti anar introduint una s\u00e8rie indeterminada de n\u00fameros fins que la suma d'ells superi el valor 10000. Quan aix\u00f2 \u00faltim passi, s'ha de mostrar el total acumulat, el comptador dels n\u00fameros introdu\u00efts i la mitjana.</p> <p>\u270f\ufe0f   EXERCICI 65 Escriu un programa que llegeixi un n\u00famero N i imprimeixi una pir\u00e0mide de n\u00fameros amb N files com en la seg\u00fcent figura. Recorda utilitzar un tipus de lletra d'ample fix com per exemple Courier perqu\u00e8 els espais tinguin la mateixa amplada que els n\u00fameros. 1</p> <p>\u270f\ufe0f   EXERCICI 66 Realitza un programa que demani un n\u00famero per teclat i que despr\u00e9s mostri aquest n\u00famero al rev\u00e9s.</p> <p>\u270f\ufe0f   EXERCICI 67 Realitza un programa que demani primer un n\u00famero i a continuaci\u00f3 un d\u00edgit. El programa ens ha de donar la posici\u00f3 (o posicions) comptant d'esquerra a dreta que ocupa aquest d\u00edgit en el n\u00famero introdu\u00eft.</p> <p>\u270f\ufe0f   EXERCICI 68 Escriu un programa que mostri, compti i sumi els m\u00faltiples de 3 que hi ha entre 1 i un n\u00famero llegit per teclat.</p> <p>\u270f\ufe0f   EXERCICI 69 Escriu un programa que calculi el factorial d'un n\u00famero sencer llegit per teclat.</p> <p>\u270f\ufe0f   EXERCICI 70 Escriu un programa que mostri per pantalla tots els n\u00fameros enters positius menors a un llegit per teclat que no siguin divisibles entre un altre tamb\u00e9 llegit de la mateixa manera.</p>"},{"location":"Moduls/DWES/exercicisisolucions/Exercicis.html#5-matrius","title":"5. Matrius","text":"<p>\u270f\ufe0f   EXERCICI 71    Defineix tres arrays de 20 n\u00fameros sencers cadascuna, amb noms \"numero\", \"quadrat\" i \"cub\". Carrega la matriu \"numero\" amb valors aleatoris entre 0 i 100. En la matriu \"quadrat\" s'han d'emmagatzemar els quadrats dels valors que hi ha a la matriu \"numero\". En la matriu \"cub\" s'han d'emmagatzemar les pot\u00e8ncies de tres dels valors que hi ha en \"numero\". A continuaci\u00f3, mostra el contingut de les tres matrius disposades en tres columnes.</p> <p>\u270f\ufe0f   EXERCICI 72    Escriu un programa que demani 10 n\u00fameros per teclat i que despr\u00e9s mostri els n\u00fameros introdu\u00efts juntament amb les paraules \"m\u00e0xim\" i \"m\u00ednim\" al costat del m\u00e0xim i del m\u00ednim respectivament.</p> <p>\u270f\ufe0f   EXERCICI 73    Escriu un programa que llegeixi 15 n\u00fameros per teclat i que els emmagatzemi en una matriu. Rota els elements d'aquesta matriu, \u00e9s a dir, l' element de la posici\u00f3 0 ha de passar a la posici\u00f3 1, el de la 1 a la 2, etc. El nombre que es troba en l'\u00faltima posici\u00f3 ha de passar a la posici\u00f3 0. Finalment, mostra el contingut de la matriu.</p> <p>\u270f\ufe0f   EXERCICI 74    Escriu un programa que generi 100 n\u00fameros aleatoris del 0 al 20 i que els mostri per pantalla separats per espais. El programa demanar\u00e0 llavors per teclat dos valors i a continuaci\u00f3 canviar\u00e0 totes les ocurr\u00e8ncies del primer valor pel segon en la llista generada anteriorment. Els n\u00fameros que s' han canviat han d' apar\u00e8ixer ressaltats d' un color diferent.</p> <p>\u270f\ufe0f   EXERCICI 75    Realitza un programa que demani la temperatura mitjana que ha fet en cada mes d'un determinat any i que mostri a continuaci\u00f3 un diagrama de barres horitzontals amb aquestes dades. Les barres del diagrama es poden dibuixar a base de la concatenaci\u00f3 d' una imatge.</p> <p>\u270f\ufe0f   EXERCICI 76    Realitza un programa que demani 8 n\u00fameros enters i que despr\u00e9s mostri aquests n\u00fameros de colors, els parells d'un color i els senars d'un altre.</p> <p>\u270f\ufe0f   EXERCICI 77    Escriu un programa que generi 20 n\u00fameros sencers aleatoris entre 0 i 100 i que els emmagatzemo en una matriu. El programa ha de ser capa\u00e7 de passar tots els n\u00fameros parells a les primeres posicions de la matriu (del 0 en endavant) i tots els n\u00fameros senars a les cel\u00b7les restants. Utilitza arrays auxiliars si \u00e9s necessari.</p> <p>\u270f\ufe0f   EXERCICI 78    Realitza un programa que demani 10 n\u00fameros per teclat i que els emmagatzemi en una matriu. A continuaci\u00f3 es mostrar\u00e0 el contingut d'aquesta array al costat de l'\u00edndex (0 \u2013 9) utilitzant per a aix\u00f2 una taula. Seguidament el programa passar\u00e0 els nombres primers a les primeres posicions, despla\u00e7ant la resta de n\u00fameros (els que no s\u00f3n primers) de tal manera que no se'n perdi cap. Al final s' ha de mostrar la matriu resultant. Per exemple:</p> <p></p> <p>\u270f\ufe0f   EXERCICI 79    Realitza un programa que demani 10 n\u00fameros per teclat i que els emmagatzemi en una matriu. A continuaci\u00f3 es mostrar\u00e0 el contingut d'aquest array al costat de l'\u00edndex (0 \u2013 9). Seguidament el programa demanar\u00e0 dues posicions a les quals anomenarem \"inicial\" i \"final\". S'ha de comprovar que inicial \u00e9s menor que final i que ambd\u00f3s n\u00fameros estan entre 0 i 9. El programa haur\u00e0 de col\u00b7locar el n\u00famero de la posici\u00f3 inicial en la posici\u00f3 final, rotant la resta de n\u00fameros perqu\u00e8 no se'n perdi cap. Al final s'ha de mostrar la matriu resultant.</p> <p></p> <p></p> <p>\u270f\ufe0f   EXERCICI 80    Realitza un programa que esculli a l'atzar 10 cartes de la baralla espanyola i que digui quants punts sumen segons el joc de la brisca. Empra una matriu associativa per obtenir els punts a partir del nom de la figura de la carta. Assegura't que no es repeteix cap carta, igual que si les hagu\u00e9ssim agafat d'una baralla de veritat.</p> <p>\u270f\ufe0f   EXERCICI 81    Crea un mini-diccionari espanyol-angl\u00e8s que contingui, almenys, 20 paraules (amb la seva traducci\u00f3). Utilitza una matriu associativa per emmagatzemar les parelles de paraules. El programa demanar\u00e0 una paraula en espanyol i donar\u00e0 la corresponent traducci\u00f3 en angl\u00e8s.</p> <p>\u270f\ufe0f   EXERCICI 82    Realitza un programa que esculli a l'atzar 5 paraules en espanyol del mini-diccionari de l'exercici anterior. El programa demanar\u00e0 que l'usuari teclegi la traducci\u00f3 a l'angl\u00e8s de cadascuna de les paraules i comprovar\u00e0 si s\u00f3n correctes. Al final, el programa haur\u00e0 de mostrar quantes respostes s\u00f3n v\u00e0lides i quantes err\u00f2nies.</p> <p>\u270f\ufe0f   EXERCICI 83    Omple una matriu bidimensional de 6 files per 9 columnes amb nombres enters positius compresos entre 100 i 999 (ambd\u00f3s inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no se'n pot repetir cap. Mostra a continuaci\u00f3 per pantalla el contingut de la matriu de tal forma que es compleixin els requisits seg\u00fcents:</p> <ul> <li>Els n\u00fameros de les dues diagonals on hi ha el m\u00ednim han d'apar\u00e8ixer en color verd.</li> <li>El m\u00ednim ha d'apar\u00e8ixer en color blau.</li> <li>La resta de n\u00fameros ha d'apar\u00e8ixer en color negre.</li> </ul> <p>\u270f\ufe0f   EXERCICI 84    Escriu un programa que, atesa una posici\u00f3 en un tauler d'escacs, ens digui a quines caselles podria saltar un alfil que es troba en aquesta posici\u00f3. Indica\u2019l de forma gr\u00e0fica sobre el tauler amb un color diferent per a aquestes caselles on pot saltar la figura. L'alfil es mou sempre en diagonal. El tauler compta amb 64 caselles. Les columnes s'indiquen amb les lletres de la \"a\" a la \"h\" i les files s'indiquen de l'1 al 8.</p> <p>\u270f\ufe0f   EXERCICI 85    Realitza un programa que sigui capa\u00e7 de rotar tots els elements d\u2019una matriu quadrada una posici\u00f3 en el sentit de les agulles del rellotge. La matriu ha de tenir 12 files per 12 columnes i ha de contenir n\u00fameros generats a l' atzar entre 0 i 100. S' ha de mostrar tant la matriu original com la matriu resultat, ambdues amb els n\u00fameros convenientment alineats.</p> <p>\u270f\ufe0f   EXERCICI 86    Omple una matriu amb 50 n\u00fameros aleatoris compresos entre el 0 i el 99, i despr\u00e9s mostra-la en una llista desordenada. Per crear un n\u00famero aleatori, utilitza la funci\u00f3 'rand(inici, fi)'. Per exemple:</p> <pre><code>$num = rand(0, 99)\n</code></pre> <p>\u270f\ufe0f   EXERCICI 87    Prepara un formulari (html) amb un textbox que realitzi una pregunta a l'usuari.  A partir del formulari anterior, crea un programa que mostri la pregunta rebuda i generi una resposta de manera aleat\u00f2ria entre un conjunt de respostes predefinides, emmagatzemades en una matriu: Si, no, potser, clar que s\u00ed, per suposat que no, no ho tinc clar, segur, jo diria que s\u00ed, ni de conya, etc... Aquest exercici es basa en el joc de la Bolla 8 m\u00e0gica</p> <p>\u270f\ufe0f   EXERCICI 88    A partir de l'exercici 86, genera una matriu aleat\u00f2ria de 33 elements amb nombres compresos entre el 0 i 100 i calcula:</p> <ul> <li>El major</li> <li>El menor</li> <li>La mitjana</li> </ul> <p>\u270f\ufe0f   EXERCICI 89    Omple una matriu de 100 elements de manera aleat\u00f2ria amb valors 'M' o 'F' (per exemple '[\"M\", \"M\", \"F\", \"M\", ...]`). Una vegada completat, torna a rec\u00f3rrer-la i calcula quants elements hi ha de cadascun dels valors emmagatzemant el resultat en una matriu '['M' =&gt; 44, 'F' =&gt; 66]' (no utilitzis variables per comptar les 'M' o les 'F'). Finalment, mostra el resultat per pantalla.</p> <p>\u270f\ufe0f   EXERCICI 90    Mitjan\u00e7ant una matriu associativa, emmagatzema el nom i l'al\u00e7ada de 5 persones ('nom =&gt;'al\u00e7ada'). Posteriorment, recorre l' arrelament i mostra\u2019l en una taula HTML. Finalment afegeix una \u00faltima fila a la taula amb l'al\u00e7ada mitjana.</p> <p>\u270f\ufe0f   EXERCICI 91    Mitjan\u00e7ant una matriu bidimensional, emmagatzema el nom, al\u00e7ada i email de 5 persones. Per a aix\u00f2, crea una matriu de persones, sent cada persona una matriu associativa: '[ ['nom'=&gt;'Tofol', 'altura'=&gt;182, 'email'=&gt;'tofol@correu.com'],[...],... ]' Posteriorment, recorre la matriu i mostra-la en una taula HTML.</p> <p>\u270f\ufe0f   EXERCICI 92    Omple una matriu bidimensional de 6 files per 9 columnes amb n\u00fameros aleatoris compresos entre 100 i 999 (ambd\u00f3s inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no se'n pot repetir cap.  Mostra a continuaci\u00f3 per pantalla el contingut de la matriu de tal forma que:</p> <ul> <li>La columna del m\u00e0xim ha d'apar\u00e8ixer en blau.</li> <li>La fila del m\u00ednim ha d'apar\u00e8ixer en verd</li> <li>La resta de n\u00fameros han d'apar\u00e8ixer en negre.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/Exercicis.html#6-funcions","title":"6. Funcions","text":"<p>\u270f\ufe0f   EXERCICI 93    Crea les seg\u00fcents funcions:</p> <ul> <li>Una funci\u00f3 que esbrini si un n\u00famero \u00e9s parell: 'esParell(int $num): bool' </li> <li>Una funci\u00f3 que retorni una matriu de mida '\\(tam' amb n\u00fameros aleatoris compr\u00e8s entre '\\)min' i '$max' : 'arrayAleatori(int $tam, int $min, int $max) : array' </li> <li>Una funci\u00f3 que rebi un '\\(array' per refer\u00e8ncia i retorni la quantitat de n\u00fameros parells que hi ha emmagatzemats:  'arrayParells(array &amp;\\)array): int'</li> </ul> <p>\u270f\ufe0f   EXERCICI 94    Crea les funcions seg\u00fcents:</p> <ul> <li>Una funci\u00f3 que retorni el m\u00e9s gran de tots els n\u00fameros rebuts com a par\u00e0metres: 'function major(): int'. Utilitza les funcions 'func_get_args()', etc... No pots fer servir la funci\u00f3 'max()'.    </li> <li>Una funci\u00f3 que concateni tots els par\u00e0metres rebuts separant-los amb un espai: 'function concatenar(...$paraules) : string'. Utilitza l'operador '...'.</li> </ul> <p>\u270f\ufe0f   EXERCICI 95    Afegeix les seg\u00fcents funcions:</p> <ul> <li>'digits(int $num): int' \u2192 retorna la quantitat de d\u00edgits d'un n\u00famero.    </li> <li>'digitN(int $num, int \\(pos): int' \u2192 retorna el d\u00edgit que ocupa, comen\u00e7ant per l'esquerra, la posici\u00f3 '\\)pos'.    </li> <li>'llevaPerDarrera(int $num, int \\(quant): int' \u2192 li treu per darrere (dreta) '\\)quant' d\u00edgits.    </li> <li> <p>'llevaPerDavant(int $num, int \\(quant): int' \u2192 li treu per davant (esquerra) '\\)quant' d\u00edgits.</p> <p>Per provar les funcions, fes \u00fas tant de pas d'arguments posicionals com arguments amb nom.</p> </li> </ul> <p>\u270f\ufe0f   EXERCICI 96    Crea un arxiu amb funcions per sumar, restar, multiplicar i dividir dos n\u00fameros.</p> <p>\u270f\ufe0f   EXERCICI 97    Fent \u00fas d'una matriu que emmagatzemi el nom de les funcions de l'arxiu anterior, a partir de dos n\u00fameros rebuts per URL, recorre la matriu i invoca les funcions de manera din\u00e0mica fent \u00fas de funcions variable.</p> <p>\u270f\ufe0f   EXERCICI 98    Crea una biblioteca amb dues funcions:</p> <ul> <li>pessetes2euros: passa de pessetes a euros </li> <li>euros2pesetes: passa d'euros a pessetes </li> </ul> <p>Cada funci\u00f3 ha de rebre dos par\u00e0metres:</p> <ul> <li>La quantitat a transformar </li> <li>La cotitzaci\u00f3, amb un par\u00e0metre per defecte amb el factor de transformaci\u00f3.</li> </ul> <p>\u270f\ufe0f   EXERCICI 99    Utilitza l\u2019exercici98 i prova les funcions passant tant les quantitats amb la cotitzaci\u00f3 per defecte, com amb noves cotitzacions. Recorda que 1 euro s\u00f3n/eren 166.360 pessetes.</p> <p>\u270f\ufe0f   EXERCICI 100   Despr\u00e9s de llegir les dades del tiquet de compra, enumera en una taula els productes, amb el seu preu en euros i pessetes, i finalment, en una \u00faltima fila, totalitzar en ambdues monedes.</p>"},{"location":"Moduls/DWES/exercicisisolucions/Exercicis.html#6-funcions-predefinides","title":"6. Funcions predefinides","text":"<p>Tots els exercicis s'han de realitzar creant noves funcions per encapsular el codi. A m\u00e9s de la pr\u00f2pia funci\u00f3, l'exercici ha de contenir codi per poder provar-ho.</p> <p>\u270f\ufe0f   EXERCICI 101   Llegeix una frase i en retorna una de nova amb nom\u00e9s els car\u00e0cters de les posicions senars. (exercici101frasesenars.php)</p> <p>\u270f\ufe0f   EXERCICI 102   A partir d'una frase, retorna la quantitat de cadascuna de les vocals, i el total d' elles. (exercici102vocals.php)</p> <p>\u270f\ufe0f   EXERCICI 103   A partir d'una frase amb paraules nom\u00e9s separades per espais, retornar: *   Lletres totals i quantitat de paraules  *   Una l\u00ednia per cada paraula indicant la seva mida (exercici103analitzador.php)</p> <ul> <li>Nota: no es pot fer servir <code>str_word_count</code></li> </ul> <p>\u270f\ufe0f   EXERCICI 104   Investiga que fa la funci\u00f3 <code>str_word_count</code>, i torna a fer l'exercici 103.(exercici104analitzadorwc.php):</p> <p>\u270f\ufe0f   EXERCICI 105   EsCrIu UnA fUnCi\u00d3 qUe TrAnSfOrMi UnA cAdEnA eN cAnI (exercici105cani.php) {millor no utilitzar les funmcions str_replace i str_split)</p> <p>\u270f\ufe0f   EXERCICI 106   Escriu una funci\u00f3 que retorni un boole\u00e0 indicant si una paraula \u00e9s pal\u00edndroma (es llegeix igual d'esquerra a dreta que de dreta a esquerra, per exemple, \" A la galera far\u00e8 la gala\" o \u201cL\u00facid, ir\u00f2nic, i no ridicul\u201d, en espanyol podr\u00edem tenir \u201cA Luci le pasa la pel\u00edcula\u201d i en angl\u00e8s \u201cA dog! A panic in a pagoda!\u201d). (exercici106palindrom.php)</p> <p>\u270f\ufe0f   EXERCICI 107   Utilitzant les funcions per treballar amb car\u00e0cters, a partir d'una cadena i un despla\u00e7ament (exercici107codificar.php) :</p> <ul> <li>Si el despla\u00e7ament \u00e9s 1, substitueix la A per B, la B per C, etc.</li> <li>El despla\u00e7ament no pot ser negatiu</li> <li>Si se surt de l'abecedari, ha de tornar a comen\u00e7ar</li> <li>Cal respectar els espais, punts i comes.</li> </ul> <p>\u270f\ufe0f   EXERCICI 108   Crea un programa que permeti a l'usuari llegir un conjunt de n\u00fameros separats per espais. (exercici108filtrat.html) El programa filtrar\u00e0 els n\u00fameros llegits per tornar a mostrar \u00fanicament els n\u00fameros parells i indicar\u00e0 quant de n\u00fameros parells hi ha. (exercici108filtrat.php) <pre><code>Dona\u2019m n\u00fameros:     1   4   7   9   23  10  8\nEls 3 num parells s\u00f3n:  4   10  8\n</code></pre> \u270f\ufe0f   EXERCICI 109   Investiga les seg\u00fcents funcions de cadena (explica per a qu\u00e8 serveixen mitjan\u00e7ant comentaris, i programa un petit exemple de cadascuna d'elles): <code>ucwords</code>, <code>strrev</code>, <code>str_repeat</code> y <code>md5</code>. (exercici109investiga.php)</p> <p>Note</p> <p>Els seg\u00fcents exercicis es basen en la generaci\u00f3 de nombres aleatoris.</p> <p>\u270f\ufe0f   EXERCICI 110   Crea una funci\u00f3 que permeti generar una lletra aleat\u00f2ria, maj\u00fascula o min\u00fascula. (exercici110generador.php)</p> <p>\u270f\ufe0f   EXERCICI 111   Crea una funci\u00f3 que a partir d'una mida, generi una contrasenya aleat\u00f2ria composta de lletres i d\u00edgits de manera aleat\u00f2ria. (exercici111generaContrasenya.php)</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisCookieSession.html","title":"ExercicisCookieSession","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExercicisCookieSession.html#exercicis-php-cookies-i-session","title":"Exercicis PHP Cookies i Session","text":"<p>\u270f\ufe0f   EXERCICI 123   (<code>exercici123comptadorVisites.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, informa l'usuari de si \u00e9s la seva primera visita, o si no ho \u00e9s, mostri el seu valor (valor d'un comptador).      A m\u00e9s, has de permetre que l'usuari reinicialitzi el seu comptador de visites.</p> <p>\u270f\ufe0f   EXERCICI 124   (<code>exercici124fons.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, crea una p\u00e0gina amb un desplegable amb diversos colors, de manera que l'usuari pugui canviar el color de fons de la p\u00e0gina (atribut <code>bgcolor</code>).      En tancar la p\u00e0gina, aquesta ha de recordar, almenys durant 24h, el color triat i la propera vegada que es carregui la pagina, ho faci amb l'\u00faltim color seleccionat.</p> <p>\u270f\ufe0f   EXERCICI 125   (<code>exercici125fonsSessio1.php</code>): Modifica l'exercici anterior per emmagatzemar el color de fons en la sessi\u00f3 i no emprar cookies. A m\u00e9s, ha de contenir un enlla\u00e7 al seg\u00fcent arxiu.</p> <p>\u270f\ufe0f   EXERCICI 126   (<code>exercici126fonsSessio2.php</code>): Ha de mostrar el color i donar la possibilitat de:</p> <ul> <li>tornar a la p\u00e0gina anterior mitjan\u00e7ant un enlla\u00e7</li> <li>i mitjan\u00e7ant un altre enlla\u00e7, buidar la sessi\u00f3 i tornar a la p\u00e0gina anterior.</li> </ul> <p>\u270f\ufe0f   EXERCICI 127   Fent \u00fas de la sessi\u00f3, crearem 2 formularios:</p> <ul> <li><code>exercici127formulari1.php</code> envia les dades (nom i cognoms, email, url i sexe) a 'exercici127formulari2.php`.</li> <li><code>exercici127formulari2.php</code> llegeix les dades i les fica a la sessi\u00f3. A continuaci\u00f3, mostra la resta de camps del formulari a omplir (convivents, aficions i men\u00fa). Envia aquestes dades a <code>exercici127formulari3.php</code>.</li> <li><code>exercici127formulari3.php</code> recull les dades enviades en el pas anterior i al costat dels que ja estaven en la sessi\u00f3, es mostren totes les dades en una taula/llista desordenada.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisPOO.html","title":"ExercicisPOO","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExercicisPOO.html#exercicis-php-orientat-a-objectes","title":"Exercicis PHP Orientat a objectes","text":"<p>\u270f\ufe0f   EXERCICI 112   (<code>exercici112Empleat.php</code>): Crea una classe Empleat amb el seu nom, llinatges i sou. Encapsula les propietats mitjan\u00e7ant <code>getters/setters</code> i afegeix m\u00e8todes per a:</p> <ul> <li> <p>Obtenir el seu nom complet \u2192 getNomComplet(): string</p> </li> <li> <p>Que retorni un boole\u00e0 indicant si ha de pagar o no impostos (es paguen quan el sou \u00e9s superior a3333\u20ac) \u2192 hadePagarImpostos(): bool</p> </li> </ul> <p>\u270f\ufe0f   EXERCICI 113 (<code>exercici113EmpleatTelefons.php</code>): C\u00f2pia la classe de l'exercici 112 i modifica-la. Afegeix una propietat privada que emmagatzemi una matriu de n\u00fameros de tel\u00e8fons. Afegeix els m\u00e8todes seg\u00fcents:</p> <ul> <li><code>public function afegirTelefon(int $telefono) : void</code> \u2192 Afegeix un tel\u00e8fon a la matriu</li> <li><code>public function llistarTelefons(): string</code> \u2192 Mostra els tel\u00e8fons separats per comes</li> <li><code>public function buidarTelefons(): void</code> \u2192 Elimina tots els tel\u00e8fons</li> </ul> <p>\u270f\ufe0f   EXERCICI 114 (<code>exercici114EmpleatConstructor.php</code>): Copia la classe de l'exercici 113 i modifica-la. Elimina els setters de <code>nom</code> y <code>llinatges</code>, de manera que aquestes dades s'assignin mitjan\u00e7ant el constructor (utilitza la sintaxi de PHP7). Si el constructor rep un tercer par\u00e0metre, ser\u00e0 el sou del <code>Empleat</code>. Si no, se li assignaran 1000\u20ac com a sou inicial.</p> <p><code>exercici114EmpleatConstructor8.php</code>: Modifica la classe i utilitza la sintaxi del PHP 8 de promoci\u00f3 de les propietats del constructor.</p> <p>\u270f\ufe0f   EXERCICI 115 (<code>exercici115EmpleatConstant.php</code>): Copia la classe de l'exercici 114 i modifica-la. Afegeix una constant <code>SOU_MAXIM</code> amb el valor del sou que ha de pagar impostos, i modifica el codi per utilitzar la constant.</p> <p>\u270f\ufe0f   EXERCICI 116 (<code>exercici116EmpleatSou.php</code>):Copia la classe de l'exercici 115 i modifica-la. Canvia la constant per una variable est\u00e0tica <code>souMaxim</code>, de manera que mitjan\u00e7ant <code>getter/setter</code> puguis modificar el seu valor.</p> <p>\u270f\ufe0f   EXERCICI 117 (<code>exercici117EmpleatStatic.php</code>: Copia la classe de l'exercici 116 i modifica-la.      Completa el m\u00e8tode seg\u00fcent amb una cadena HTML que mostri les dades d'un empleat dins d'un par\u00e0graf i tots els tel\u00e8fons mitjan\u00e7ant una llista ordenada (per a aix\u00f2, haur\u00e0s de crear un getter per als tel\u00e8fons):</p> <ul> <li><code>public static function toHtml(Empleat $emp): string</code></li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html","title":"ExercicisUT04","text":"<p>\u270f\ufe0f Exercici 123: (<code>123server.php</code>): Mostra els valors de <code>$_SERVER</code> en executar un script al teu ordinador. Prova a passar-li par\u00e0metres per GET (i a no passar-li cap). Prepara un formulari ('123post.html') que faci un enviament per POST i comprovam de nou. Crea una p\u00e0gina ('123enlace.html') que tingui un enlla\u00e7 a <code>123server.php</code> i comprova el valor de `HTTP_REFERER'.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html#formularis","title":"Formularis","text":"<p>\u270f\ufe0f Exercici 124: (<code>124formulari.html</code> <code>124formulari.php</code>): Creeu un formulari que sol\u00b7liciti:</p> <ul> <li>Nom i cognoms.</li> <li>Email.</li> <li>URL p\u00e0gina personal.</li> <li>Sexe (r\u00e0dio).</li> <li>Nombre de convivents al domicili.</li> <li>Aficions (checkboxes) \u2013 posar m\u00ednim 4 valors.</li> <li>Men\u00fa favorit (llista selecci\u00f3 m\u00faltiple) \u2013 posar m\u00ednim 4 valors.</li> </ul> <p>Mostra els valors carregats en una taula-resum.</p> <p>\u270f\ufe0f Exercici 125: (<code>125validacio.php</code>): A partir del formulari anterior, introdueix validacions en HTML mitjan\u00e7ant l'atribut <code>required</code> dels camps (usa els tipus adequats per a cada camp), i comprova els tipus de les dades i que compleixen els valors esperats (per exemple, en els checkboxes que els valors recollits formen part de tots els possibles). Pots provar de passar-li dades err\u00f2nies via URL i comprovar el seu comportament.  Tip: Investiga l'\u00fas de la funci\u00f3 <code>filter_var</code>.</p> <p>\u270f\ufe0f Exercici 126: (<code>126pujada.html</code> y <code>126pujada.php</code>): Crea un formulari que permeti pujar un arxiu al servidor. A m\u00e9s del fitxer, ha de demanar en el mateix formulari dos camps num\u00e8rics que demanin l'amplada i l'al\u00e7ada. Comprova que tant el fitxer com les dades arriben correctament.</p> <p>\u270f\ufe0f Exercici 127: (<code>127pujadaImatge.php</code>): Modifica l'exercici anterior perqu\u00e8 \u00fanicament permeti pujar imatges (comprova la propietat <code>type</code> de l'arxiu pujat). Si l'usuari selecciona un altre tipus d'arxius, se l'ha d'informar de l'error i permetre que pugi un nou arxiu. En el cas de pujar el tipus correcte, visualitzar la imatge amb la mida d'amplada i al\u00e7ada rebut com a par\u00e0metre.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html#cookies-i-sessio","title":"Cookies i Sessi\u00f3","text":"<p>\u270f\ufe0f Exercici 128: (<code>128comptadorVisites.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, informa l'usuari de si \u00e9s la seva primera visita, o si no ho \u00e9s, mostri el seu valor (valor d'un comptador). A m\u00e9s, has de permetre que l'usuari reinicialitzi el seu comptador de visites.</p> <p>\u270f\ufe0f Exercici 129: (<code>129fons.php</code>): Mitjan\u00e7ant l'\u00fas de cookies, crea una p\u00e0gina amb un desplegable amb diversos colors, de manera que l'usuari pugui canviar el color de fons de la p\u00e0gina (atribut `bgcolor'). En tancar la p\u00e0gina, aquesta ha de recordar, almenys durant 24h, el color triat i la pr\u00f2xima vegada que es carregui la p\u00e0gina, ho faci amb l'\u00faltim color seleccionat.</p> <p>\u270f\ufe0f Exercici 130: (<code>130fonsSessio1.php</code>): Modifica l'exercici anterior per emmagatzemar el color de fons en la sessi\u00f3 i no emprar cookies. A m\u00e9s, ha de contenir un enlla\u00e7 al seg\u00fcent arxiu. <code>130fonsSessio2.php</code>: Ha de mostrar el color i donar la possibilitat de:</p> <ul> <li>tornar a la p\u00e0gina anterior mitjan\u00e7ant un enlla\u00e7</li> <li>i mitjan\u00e7ant un altre enlla\u00e7, buidar la sessi\u00f3 i tornar a la p\u00e0gina anterior.</li> </ul> <p>\u270f\ufe0f Exercici 131: (Fent \u00fas de la sessi\u00f3, anam a dividir el formulari de l'exercici <code>124formulari.php</code> en 2 subformularis:</p> <ul> <li><code>131formulari.php</code> envia les dades (nom i cognoms, email, url i sexe) a <code>131formulari2.php</code>.</li> <li><code>131formulari2.php</code> llegeix les dades i les fica a la sessi\u00f3. A continuaci\u00f3, mostra la resta de camps del formulari a omplir (convivents, aficions i men\u00fa). Envia aquestes dades a <code>131formulari3.php</code>.</li> <li><code>131formulari3.php</code> recull les dades enviades en el pas anterior i al costat dels que ja estaven en la sessi\u00f3, es mostren totes les dades en una taula/llista desordenada.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html#autenticacio","title":"Autenticaci\u00f3","text":"<p>En els seg\u00fcents exercicis anam a muntar una estructura d'inici de sessi\u00f3 similar a la vista a classe.</p> <p>\u270f\ufe0f Exercici 132: (<code>132index.php</code>): formulari d'inici de sessi\u00f3</p> <p>\u270f\ufe0f Exercici 133: (<code>133login.php</code>): fa de controlador, per la qual cosa ha de comprovar les dades rebudes (nom\u00e9s permet l'entrada de <code>usuari/usuari</code> i si tot \u00e9s correcte, cedir el control a la vista del seg\u00fcent exercici. No cont\u00e9 codi HTML.</p> <p>\u270f\ufe0f Exercici 134: (<code>134pelicules.php</code>): vista que mostra com a t\u00edtol \"Llistat de Pel\u00b7l\u00edcules\", i una llista desordenada amb tres pel\u00b7l\u00edcules.</p> <p>\u270f\ufe0f Exercici 135: (<code>135logout.php</code>): buida la sessi\u00f3 i ens porta de nou al formulari d'inici de sessi\u00f3. No cont\u00e9 codi HTML.</p> <p>\u270f\ufe0f Exercici 136: (<code>136series.php</code>): Afegeix una nova vista similar a <code>134pelicules.php</code> que mostra un \"Llistat de S\u00e8ries\" amb una llista desordenada amb tres s\u00e8ries. Tant <code>134pelicules.php</code> com la vista acabada de crear, han de tenir un petit men\u00fa (senzill, mitjan\u00e7ant enlla\u00e7os) que permeti passar d'un llistat a un altre. Comprova que si s'accedeix directament a qualsevol de les vistes sense tenir un usuari amb sessi\u00f3 iniciada, via URL del navegador, no es mostra el llistat.</p> <p>\u270f\ufe0f Exercici 137: Modifica tant el controlador com les vistes perqu\u00e8:</p> <ul> <li>les dades les obtingui el controlador (emmagatzema en la sessi\u00f3 un array de pel\u00b7l\u00edcules i un altre de s\u00e8ries)</li> <li>col\u00b7loqueu les dades en la sessi\u00f3</li> <li>En les vistes, les dades es recuperen de la sessi\u00f3 i es pinten en la llista desordenada recorrent l'vector corresponent.</li> </ul>"},{"location":"Moduls/DWES/exercicisisolucions/ExercicisUT04.html#projecte-videoclub-30","title":"Projecte Videoclub 3.0","text":"<p>\u270f\ufe0f Exercici 138: Per al Videoclub, anam a crear una p\u00e0gina <code>index.php</code> amb un formulari que contingui un formulari de login/password. Es comprovaran les dades en <code>login.php</code>. Els possibles usuaris s\u00f3n admin/admin o usuari/usuari.</p> <ul> <li>Si l'usuari \u00e9s correcte, en <code>main.php</code> mostrar un missatge de benvinguda amb el nom de l'usuari, al costat d'un enlla\u00e7 per tancar la sessi\u00f3, que el portaria de nou al login.</li> <li>Si l'usuari \u00e9s incorrecte, ha de tornar a carregar el formulari donant informaci\u00f3 a l'usuari d'acc\u00e9s incorrecte.</li> </ul> <p>\u270f\ufe0f Exercici 139: Si l'usuari \u00e9s administrador, es carregaran en la sessi\u00f3 les dades de suports i clients del videoclub que ten\u00edem en les nostres proves (no mitjan\u00e7ant <code>include</code> sin\u00f3 copiant les dades i inserint-les en un vector associatiu, el qual col\u00b7locarem posteriorment en la sessi\u00f3).</p> <p>En la seg\u00fcent unitat els obtindrem de la base de dades. En <code>mainAdmin.php</code>, a m\u00e9s de la benvinguda, ha de mostrar:</p> <ul> <li>Llistat de clients</li> <li>Llistat de suports</li> </ul> Esquema navegaci\u00f3 exercici 141 <p>\u270f\ufe0f Exercici 140: Anam a modificar la classe <code>Client</code> per emmagatzemar l'<code>user</code> i la <code>password</code> de cada client. Despr\u00e9s de codificar els canvis, modificar el llistat de clients de <code>mainAdmin.php</code> per afegir al llistat l'usuari.</p> <p>\u270f\ufe0f Exercici 141: Si l'usuari que accedeix no \u00e9s administrador i coincideix amb algun dels clients que tenim carregats despr\u00e9s del login, ha de carregar <code>mainCliente.php</code> on es mostrar\u00e0 un llistat dels lloguers del client. Per a aix\u00f2, modificarem la classe <code>Client</code> per oferir el m\u00e8tode <code>getLloguers() : array</code>, el qual invocarem i despr\u00e9s recorrerem per mostrar el llistat sol\u00b7licitat.</p> <p>Ara tornem a la part d'administraci\u00f3</p> <p>\u270f\ufe0f Exercici 142: A m\u00e9s de mostrar el llistat de clients, vam oferir l'opci\u00f3 de donar d'alta un nou client a <code>formCreateCliente.php'. Les dades s'enviaran mitjan\u00e7ant POST a</code>createCliente.php<code>que les introduir\u00e0 en la sessi\u00f3. Un cop creat el client, ha de tornar a carregar</code>mainAdmin.php` on es podr\u00e0 veure el client inserit. Si hi ha alguna dada incorrecta, ha de tornar a carregar el formulari d'alta.</p> <p>\u270f\ufe0f Exercici 143: Crea en <code>formUpdateCliente.php</code> un formulari que permeti editar les dades d'un client. Has de recollir les dades a <code>updateCliente.php</code>. Les dades de client s'han de poder modificar des de la pr\u00f2pia p\u00e0gina d'un client, aix\u00ed com des del llistat de l'administrador.</p> <p>\u270f\ufe0f Exercici 144: Des del llistat de clients de l'administrador has d'oferir la possibilitat d'esborrar un client. Al navegador, abans de redirigir el servidor, l'usuari ha de confirmar mitjan\u00e7ant JS que realment desitja eliminar el client. Finalment, a <code>removeCliente.php</code> elimina el client de la sessi\u00f3. Un cop eliminat, ha de tornar al llistat de clients.</p> Esquema navegaci\u00f3 Videoclub 3.0"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html","title":"Exercicis expressions regulars en PHP:","text":""},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-118-validacio-de-correu-electronic","title":"\u270f\ufe0f   Exercici 118: Validaci\u00f3 de Correu Electr\u00f2nic","text":"<p>Crea una funci\u00f3 que validi si una cadena \u00e9s un correu electr\u00f2nic v\u00e0lid. La funci\u00f3 ha de retornar <code>true</code> si la cadena \u00e9s un correu electr\u00f2nic v\u00e0lid i <code>false</code> en cas contrari.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui el patr\u00f3 d'un correu electr\u00f2nic, com ara <code>'/^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,6}$/'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-119-extraccio-de-numeros-de-telefon","title":"\u270f\ufe0f   Exercici 119: Extracci\u00f3 de N\u00fameros de Tel\u00e8fon","text":"<p>Escriu una funci\u00f3 que extregui tots els n\u00fameros de tel\u00e8fon d'una cadena de text. Els n\u00fameros de tel\u00e8fon poden estar en diferents formats, com ara <code>(123) 456-7890</code>, <code>123-456-7890</code>, o <code>123.456.7890</code>.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui patrons de n\u00fameros de tel\u00e8fon, com ara <code>'/\\(?\\d{3}\\)?[-.\\s]?\\d{3}[-.\\s]?\\d{4}/'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-120-validacio-de-contrasenyes","title":"\u270f\ufe0f   Exercici 120: Validaci\u00f3 de Contrasenyes","text":"<p>Crea una funci\u00f3 que validi si una contrasenya compleix amb els seg\u00fcents requisits: - Almenys 8 car\u00e0cters de llargada. - Cont\u00e9 almenys una lletra maj\u00fascula. - Cont\u00e9 almenys una lletra min\u00fascula. - Cont\u00e9 almenys un n\u00famero. - Cont\u00e9 almenys un car\u00e0cter especial (com ara <code>!@#$%^&amp;*</code>).</p> Pista <p>Utilitza una expressi\u00f3 regular que combini aquests requisits, com ara <code>'/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&amp;*]).{8,}$/'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-121-extraccio-de-urls","title":"\u270f\ufe0f   Exercici 121: Extracci\u00f3 de URLs","text":"<p>Escriu una funci\u00f3 que extregui totes les URLs d'una cadena de text. Les URLs poden comen\u00e7ar amb <code>http://</code>, <code>https://</code>, o <code>www.</code>.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui patrons de URLs, com ara <code>'/\\b(?:https?:\\/\\/|www\\.)\\S+\\b/'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/ExpressionsRegularsPHP.html#exercici-122-substitucio-de-paraules-prohibides","title":"\u270f\ufe0f   Exercici 122: Substituci\u00f3 de Paraules Prohibides","text":"<p>Crea una funci\u00f3 que substitueixi totes les paraules prohibides d'una cadena de text per una s\u00e8rie d'asteriscs (<code>*</code>). La llista de paraules prohibides ha de ser un array passat com a par\u00e0metre a la funci\u00f3.</p> Pista <p>Utilitza una expressi\u00f3 regular que busqui les paraules prohibides dins de la cadena, com ara <code>'/\\b(' . implode('|', $paraules_prohibides) . ')\\b/i'</code>.</p>"},{"location":"Moduls/DWES/exercicisisolucions/solucionsExpressionsRegularsPHP.html","title":"Solucions exercicis expressions regulars","text":"<p>Aqu\u00ed tens possibles solucions per als cinc exercicis amb expressions regulars en PHP:</p> Soluci\u00f3 exercici 1: Validaci\u00f3 de Correu Electr\u00f2nic <pre><code>function validarEmail($email) {\n    return preg_match('/^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,6}$/', $email);\n}\n\n// Exemple d'\u00fas\n$email = \"exemple@domini.com\";\nif (validarEmail($email)) {\n    echo \"El correu electr\u00f2nic \u00e9s v\u00e0lid.\";\n} else {\n    echo \"El correu electr\u00f2nic no \u00e9s v\u00e0lid.\";\n}\n</code></pre> Soluci\u00f3 exercici 2: Extracci\u00f3 de N\u00fameros de Tel\u00e8fon <pre><code>function extreureNumerosTelefon($text) {\n    preg_match_all('/\\(?\\d{3}\\)?[-.\\s]?\\d{3}[-.\\s]?\\d{4}/', $text, $matches);\n    return $matches[0];\n}\n\n// Exemple d'\u00fas\n$text = \"Contacta'ns al (123) 456-7890 o 123-456-7890.\";\n$numeros = extreureNumerosTelefon($text);\nprint_r($numeros);\n</code></pre> Soluci\u00f3 exercici 3: Validaci\u00f3 de Contrasenyes <pre><code>function validarContrasenya($contrasenya) {\n    return preg_match('/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&amp;*]).{8,}$/', $contrasenya);\n}\n\n// Exemple d'\u00fas\n$contrasenya = \"Exemple1!\";\nif (validarContrasenya($contrasenya)) {\n    echo \"La contrasenya \u00e9s v\u00e0lida.\";\n} else {\n    echo \"La contrasenya no \u00e9s v\u00e0lida.\";\n}\n</code></pre> Soluci\u00f3 exercici 4: Extracci\u00f3 de URLs <pre><code>function extreureURLs($text) {\n    preg_match_all('/\\b(?:https?:\\/\\/|www\\.)\\S+\\b/', $text, $matches);\n    return $matches[0];\n}\n\n// Exemple d'\u00fas\n$text = \"Visita https://www.exemple.com o www.exemple.org per m\u00e9s informaci\u00f3.\";\n$urls = extreureURLs($text);\nprint_r($urls);\n</code></pre> Soluci\u00f3 exercici 5: Substituci\u00f3 de Paraules Prohibides <pre><code>function substituirParaulesProhibides($text, $paraules_prohibides) {\n    $pattern = '/\\b(' . implode('|', $paraules_prohibides) . ')\\b/i';\n    return preg_replace($pattern, '****', $text);\n}\n\n// Exemple d'\u00fas\n$text = \"Aquest text cont\u00e9 paraules prohibides com exemple i prova.\";\n$paraules_prohibides = ['exemple', 'prova'];\n$text_nou = substituirParaulesProhibides($text, $paraules_prohibides);\necho $text_nou;\n</code></pre>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html","title":"Estructura exemple gen\u00e8ric d'un document formal per una comparativa","text":"<p>Un document formal que resumeixi els resultats d'una comparativa hauria de tenir una estructura clara i ben organitzada per garantir que la informaci\u00f3 sigui f\u00e0cil de comprendre i d'analitzar. Les parts essencials s\u00f3n les seg\u00fcents:</p> <p></p>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#1-titol","title":"1. T\u00edtol","text":"<ul> <li>Ha de ser clar i conc\u00eds, indicant el contingut del document. Exemple: \"Comparativa de rendiment entre serveis d'emmagatzematge al n\u00favol\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#2-introduccio","title":"2. Introducci\u00f3","text":"<ul> <li>Breu descripci\u00f3 de l'objectiu del document i el context de la comparativa.</li> <li>Explicaci\u00f3 de per qu\u00e8 s'ha realitzat la comparaci\u00f3 i quina \u00e9s la seva import\u00e0ncia. Exemple: \"Aquest document analitza les caracter\u00edstiques principals de tres serveis d'emmagatzematge al n\u00favol per identificar quina opci\u00f3 s'adapta millor a les necessitats d'una empresa mitjana\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#3-metodologia","title":"3. Metodologia","text":"<ul> <li>Descripci\u00f3 del criteri o factors utilitzats per a la comparativa (ex.: preu, velocitat, facilitat d'\u00fas).</li> <li>Fonts d'informaci\u00f3 i eines utilitzades (ex.: proves pr\u00e0ctiques, dades publicades).</li> <li>Declaraci\u00f3 de l\u00edmits o condicions que poden afectar els resultats. Exemple: \"S'han avaluat tres plataformes basant-se en preus mensuals, l\u00edmits d'emmagatzematge, i funcionalitats col\u00b7laboratives\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#4-resultats-de-la-comparativa","title":"4. Resultats de la comparativa","text":"<ul> <li>Taules o gr\u00e0fics: Presentar dades visuals per facilitar la comprensi\u00f3. Exemple: Una taula comparativa que inclogui caracter\u00edstiques clau, com preus, capacitat, seguretat, etc.</li> <li>An\u00e0lisi textual: Descripci\u00f3 dels punts forts i febles de cada opci\u00f3. Exemple: \"El servei A destaca per la seva interf\u00edcie intu\u00eftiva, mentre que el servei B \u00e9s m\u00e9s assequible a llarg termini\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#5-discussio-i-analisi","title":"5. Discussi\u00f3 i an\u00e0lisi","text":"<ul> <li>Interpretaci\u00f3 dels resultats: Qu\u00e8 significa la informaci\u00f3 presentada?</li> <li>Comparaci\u00f3 entre els elements: Quin \u00e9s el guanyador o millor opci\u00f3, i per qu\u00e8?</li> <li>Consideracions addicionals o situacions en qu\u00e8 una altra opci\u00f3 podria ser m\u00e9s adequada.</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#6-conclusio","title":"6. Conclusi\u00f3","text":"<ul> <li>Resum breu dels punts m\u00e9s rellevants de la comparativa.</li> <li>Recomanaci\u00f3 basada en els resultats obtinguts. Exemple: \"Recomanem el servei A per empreses amb necessitats b\u00e0siques, mentre que el servei B \u00e9s m\u00e9s adient per a usos intensius\".</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#7-referencies","title":"7. Refer\u00e8ncies","text":"<ul> <li>Citar fonts d'informaci\u00f3 utilitzades per a la comparaci\u00f3 (articles, estudis, p\u00e0gines web, etc.).</li> <li>Assegurar-se que segueixen un format de citaci\u00f3 formal (ex.: APA, MLA).</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalComparativa.html#8-annexos-opcional","title":"8. Annexos (opcional)","text":"<ul> <li>Incloure dades addicionals, gr\u00e0fics o explicacions t\u00e8cniques que donin suport a l'an\u00e0lisi, per\u00f2 que no s\u00f3n essencials per al cos principal del document.</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html","title":"Estructura exemple gen\u00e8ric d'un document formal per una comparativa","text":"<p>Una presentaci\u00f3 formal que pretengui resumir el resultat d'una comparativa ha de ser clara, concisa i estructurada. Les diapositives han de presentar la informaci\u00f3 de manera visual i atractiva, tot destacant els punts clau de l'an\u00e0lisi. A continuaci\u00f3 es descriuen les diapositives recomanades, a mode d'exemple:</p> <p></p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#1-portada","title":"1. Portada","text":"<ul> <li>T\u00edtol de la presentaci\u00f3.</li> <li>Subt\u00edtol o breu descripci\u00f3 de la comparativa (opcional).</li> <li>Nom del presentador, data i entitat/organitzaci\u00f3 (si escau).</li> </ul> <p>Exemple: - T\u00edtol: \"Comparativa de serveis d'emmagatzematge al n\u00favol\". - Subt\u00edtol: \"An\u00e0lisi de preu, capacitat i funcionalitats\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#2-introduccio","title":"2. Introducci\u00f3","text":"<ul> <li>Context i objectiu de la comparativa.</li> <li>Breu explicaci\u00f3 de per qu\u00e8 s'ha realitzat i quina \u00e9s la seva rellev\u00e0ncia.</li> </ul> <p>Exemple: \"Aquesta an\u00e0lisi t\u00e9 com a objectiu identificar el millor servei d'emmagatzematge al n\u00favol per a una empresa mitjana\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#3-metodologia","title":"3. Metodologia","text":"<ul> <li>Factors avaluats en la comparativa (ex.: cost, seguretat, velocitat).</li> <li>Fonts d'informaci\u00f3 o eines utilitzades.</li> <li>Condicions o l\u00edmits que cal tenir en compte.</li> </ul> <p>Exemple: \"Els criteris d'an\u00e0lisi inclouen preu mensual, capacitat m\u00e0xima i caracter\u00edstiques col\u00b7laboratives\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#4-presentacio-de-les-opcions-comparades","title":"4. Presentaci\u00f3 de les opcions comparades","text":"<ul> <li>Breu descripci\u00f3 de les alternatives o opcions analitzades.</li> <li>Si \u00e9s possible, incloure una taula o llista amb els noms i les caracter\u00edstiques generals.</li> </ul> <p>Exemple: - Opci\u00f3 A: Google Drive. - Opci\u00f3 B: Dropbox. - Opci\u00f3 C: OneDrive.</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#5-resultats-visuals","title":"5. Resultats (visuals)","text":"<ul> <li>Taules, gr\u00e0fics o altres elements visuals que mostrin els resultats de manera clara.</li> <li>Comparacions clau en funci\u00f3 dels factors analitzats.</li> </ul> <p>Exemple: - Un gr\u00e0fic de barres que compari els costos anuals. - Una taula amb puntuacions per categoria (ex.: seguretat, facilitat d'\u00fas, preu).</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#6-analisi-dels-resultats","title":"6. An\u00e0lisi dels resultats","text":"<ul> <li>Punts forts i febles de cada opci\u00f3.</li> <li>Interpretaci\u00f3 dels resultats obtinguts i relaci\u00f3 amb els objectius inicials.</li> </ul> <p>Exemple: - \"Google Drive destaca per la seva integraci\u00f3 amb altres eines, mentre que Dropbox ofereix m\u00e9s flexibilitat per equips col\u00b7laboratius\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#7-conclusio","title":"7. Conclusi\u00f3","text":"<ul> <li>Resum de les troballes principals.</li> <li>Reconeixement de l'opci\u00f3 m\u00e9s adequada segons els criteris establerts.</li> </ul> <p>Exemple: \"Segons l'an\u00e0lisi, Google Drive \u00e9s la millor opci\u00f3 per relaci\u00f3 qualitat-preu, especialment per usuaris que utilitzen l'ecosistema de Google\".</p>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#8-recomanacions-opcional","title":"8. Recomanacions (opcional)","text":"<ul> <li>Passos o suggeriments per aplicar la decisi\u00f3 final.</li> <li>Consideracions a tenir en compte per a altres contextos o necessitats.</li> </ul>"},{"location":"Moduls/GENERAL/EstructuraFormalPresentacioComparativa.html#9-preguntes-i-agraiments","title":"9. Preguntes i agra\u00efments","text":"<ul> <li>Una diapositiva amb un fons net, un t\u00edtol de \"Preguntes?\" o \"Dubtes?\" i espai visual per promoure la interacci\u00f3.</li> <li>Acompanyar amb un missatge d'agra\u00efment pel temps i l'atenci\u00f3 del p\u00fablic.</li> </ul> <p>Exemple: \"Gr\u00e0cies! Alguna pregunta?\"</p>"},{"location":"Moduls/GENERAL/audios.html","title":"Recull \u00e0udios interessants","text":"<p>Advert\u00e8ncia</p> <p>No tots els \u00e0udios tenen una vessant estrictament relacionada amb la doc\u00e8ncia.</p> <p></p> <ul> <li> <p> El futur del catal\u00e0 \u00e9s a les nostres mans</p> <p>\u00c0udio extret del programa \"La primera pedra\" de RAC1 on Abel Espinosa en la secci\u00f3 \"Treu la ll\u00e8ngua\" parla sobre l'empitjorament de la situaci\u00f3 ling\u00fc\u00edstica del catal\u00e0, per\u00f2 des d'una vessant optimista i no victimista.   </p> <p>    El teu navegador no suporta l'element d'\u00e0udio. </p>  Font original completa sense editar de RAC1 <p></p> </li> <li> <p> \u00c9s es colmo!!</p> <p>Pere Sampol, indignat, en una m\u00edtica i extraordin\u00e0ria intervenci\u00f3 durant una comissi\u00f3 parlament\u00e0ria al Parlament de les Illes en l'\u00e0mbit del \"cas Rasput\u00edn\" (Un dels m\u00faltiples esc\u00e0ndols del PP en aquest cas en l'\u00e8poca de'n Jaume Matas.)</p> <p>    El teu navegador no suporta l'element d'\u00e0udio. </p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul>"},{"location":"Moduls/PFC/comPFC.html","title":"Com fer el Projecte Final del Cicle Superior de DAM/DAW? (PFC)","text":""},{"location":"Moduls/PFC/comPFC.html#passes-a-seguir","title":"Passes a seguir","text":"<ol> <li>Escull el tema del projecte. \u00c9s essencial triar el tema del projecte. El m\u00e9s important per triar el tema sobre el qual vols fer el teu projecte \u00e9s que et motivi. Pensa que seran 11/12 setmanes ben intenses de feina. Per tant, molt millor si fas feina sobre aix\u00f2 que t'agradi. El teu tutor haur\u00e0 de valorar i acceptar la tem\u00e0tica que proposis.</li> </ol> <p>Bibliografia</p> <p>Al document del teu projecte haur\u00e0s d'afegir totes les refer\u00e8ncies de la informaci\u00f3 que utilitzis i que no sigui d'elaboraci\u00f3 pr\u00f2pia. Les normes APA s\u00f3n les m\u00e9s utilitzades per fer refer\u00e8ncia a la bibliografia emprada.</p> <ol> <li>Recopila i cerca informaci\u00f3. Recopila tota la informaci\u00f3 que puguis del cicle formatiu i que guardi relaci\u00f3 amb el teu tema de projecte. A partir d'aqu\u00ed cerca informaci\u00f3 i documents que puguin ser \u00fatils pel teu projecte. No t'oblidis apuntar d'on has obtingut la informaci\u00f3. Ho necessites per crear una bona bibliografia en la mem\u00f2ria.</li> <li>Estructura i d\u00f3na-li forma \"sobre paper\". Abans de comen\u00e7ar a escriure el teu document de projecte \u00e9s fonamental que tinguis clara l'estructura que ha de tenir. Per aix\u00f2 el m\u00e9s recomanable \u00e9s fer un o diversos esbossos del teu projecte. Et recomano que ho facis fent servir \"paper i llapis\". M\u00e9s abaix en aquesta p\u00e0gina trobar\u00e0s un apartat que et pot ajudar a tenir una refer\u00e8ncia.</li> <li>Comen\u00e7ar a escriure la mem\u00f2ria del projecte. Despr\u00e9s, has de comen\u00e7ar a redactar la mem\u00f2ria del projecte. I, per aix\u00f2, \u00e9s fonamental que facis un esquema que inclogui els punts rellevants del projecte. D'aquesta manera, et resultar\u00e0 molt m\u00e9s senzill. Aquest esquema \u00e9s per organitzar millor la teva feina aix\u00ed que no et preocupis per la forma ni \"color\", simplement procura que et sigui \u00fatil a tu.</li> <li>Corregir les faltes d'ortografia. Finalment, \u00e9s imprescindible que corregeixis les possibles faltes d'ortografia que pugui tenir el text. Pensa que es tracta d'un treball seri\u00f3s que podries presentar el dia de dem\u00e0 en una empresa per aconseguir una bona feina.</li> </ol>"},{"location":"Moduls/PFC/comPFC.html#quina-estructura-ha-de-seguir-el-projecte","title":"Quina estructura ha de seguir el Projecte?","text":"<p>L'estructura del Projecte Final pot variar depenent del contingut i tema del treball. Tanmateix, aquests s\u00f3n els apartats principals que se solen incloure:</p> <ol> <li>An\u00e0lisi de requisits: Identificaci\u00f3 i comprensi\u00f3 dels requisits funcionals i no funcionals.</li> <li> <p>Disseny de la soluci\u00f3: Creaci\u00f3 dels diagrames i models necessaris per representar l'arquitectura de la soluci\u00f3 plantejada, la seva interf\u00edcie d'usuari i la seva base de dades (si correspon).</p> <p>2.1.  Descripci\u00f3 arquitectura</p> <p>2.2.  Justificaci\u00f3 t\u00e8cnica</p> <p>2.3.  Eines de desenvolupament</p> </li> <li> <p>Planificaci\u00f3: Defineix les etapes del teu projecte i ub\u00edcales en el temps en l'ordre en qu\u00e8 s'hagin d'executar. Aix\u00ed mateix, defineix la durada, de forma realista, de les diferents etapes que hagis definit.</p> </li> <li> <p>Desenvolupament de la soluci\u00f3: Planteja el desenvolupament de la soluci\u00f3 utilitzant tot l'apr\u00e8s durant el cicle.</p> <p>4.1.  Metodologia de treball</p> <p>4.2.  Esb\u00f3s o prototip de la soluci\u00f3</p> <p>4.3.  Documentaci\u00f3: Elaboraci\u00f3 de documentaci\u00f3 t\u00e8cnica que descrigui la soluci\u00f3, el seu funcionament i les decisions preses durant el desenvolupament.</p> </li> </ol> <p>Trucs per redactar el teu Projecte de Final del Cicle</p> <p>Si arribats a aquest punt, encara tens dubtes sobre com redactar el Projecte Final, presta atenci\u00f3 als seg\u00fcents trucs:</p> <ul> <li>Defineix clarament els objectius i requisits del projecte.</li> <li>Utilitza un llenguatge clar i conc\u00eds, evitant l'\u00fas excessiu de tecnicismes.</li> <li>Estructura el document de manera organitzada, dividint-lo en seccions i subseccions.</li> <li>Inclou exemples i captures de pantalla per il\u00b7lustrar el teu treball.</li> <li>Revisa i edita acuradament per assegurar la coher\u00e8ncia i la correcci\u00f3 gramatical.</li> <li>Tota aquella informaci\u00f3 excessivament t\u00e8cnica o detallada, simplement refer\u00e9nciala en la mem\u00f2ria i l'aportes de forma \u00edntegra com un annex.</li> <li>Utilitza el m\u00e0xim de recursos que has vist durant el cicle formatiu. </li> </ul> Recomanaci\u00f3 per gestionar la teva bibliografia: Zotero <p>Zotero \u00e9s una eina gratu\u00efta i f\u00e0cil d'utilitzar per a la gesti\u00f3 de refer\u00e8ncies bibliogr\u00e0fiques. Permet als usuaris recopilar, organitzar, citar i compartir fonts de recerca. Amb Zotero, pots:</p> <ul> <li>Recopilar refer\u00e8ncies autom\u00e0ticament mentre navegues per la web.</li> <li>Organitzar les teves fonts en col\u00b7leccions i etiquetar-les amb paraules clau.</li> <li>Citar en diversos estils directament en editors de text com Word, LibreOffice i Google Docs.</li> <li>Sincronitzar les dades entre dispositius per mantenir la informaci\u00f3 actualitzada.</li> <li>Col\u00b7laborar amb altres persones en projectes de recerca123.</li> <li>\u00c9s una eina molt \u00fatil per a investigadors i estudiants que necessiten gestionar grans quantitats d'informaci\u00f3 bibliogr\u00e0fica.</li> </ul>"},{"location":"Moduls/PFC/indexPFC.html","title":"Projecte de desenvolupament de DAM/DAW (PFC)","text":"<ul> <li> <p> PFC Projecte Final Cicle</p> <p> Com fer el PFC (Guia pr\u00e0ctica)</p> <p> Ordres que regulen el PFC</p> <p> Exemple mem\u00f2ria del PFC</p> <p> Planificaci\u00f3 de les tasques del PFC</p> </li> </ul>"},{"location":"Moduls/PFC/indexPFC.html#exemple-memoria-de-pfc","title":"Exemple Mem\u00f2ria de PFC","text":"<p>Enlla\u00e7 al document</p>"},{"location":"Moduls/PFC/indexPFC.html#planificacio-del-pfc","title":"Planificaci\u00f3 del PFC","text":"--- config:   theme: forest --- gantt     title Planificaci\u00f3 del PFC     dateFormat  YYYY-MM-DD     section Introducci\u00f3         Introducci\u00f3 al PFC  : 2025-03-14, 1d     section Tutories         1a Tutoria          :done, t1, 2025-03-14, 1d         2a Tutoria          :done, t2, 2025-03-24, 1d         3a Tutoria          :done, t3, 2025-04-14, 1d         4a Tutoria          :done, t4, 2025-04-28, 1d         5a Tutoria          :t5, 2025-05-12, 1d         6a Tutoria          :t6, 2025-05-26, 1d         7a Tutoria          :t7, 2025-06-09, 1d     section Desenv. PFC         Presentaci\u00f3 idea i tema del PFC :done, d1, 2025-03-17, 1d         Recopilaci\u00f3 material i redacci\u00f3 esborranys dels apartats :active d2, after d1, 2025-05-25         Creaci\u00f3 esquelet mem\u00f2ria    :done, d3, 2025-03-24, 2025-04-14         Redacci\u00f3 esborrany mem\u00f2ria :active, d4, 2025-03-28,2025-05-12         Entrega esborrany   :milestone, m3, 2025-05-12,1d         Redacci\u00f3 mem\u00f2ria definitiva:    : d5, 2025-05-07, 2025-06-09     section Tasques finals         Entrega document: milestone, m1, 2025-06-10,1d         Preparaci\u00f3 presentaci\u00f3 defensa  :tf1, 2025-06-03,2025-06-13     DEFENSA PFC :milestone, m2, 2025-06-16, 1d"},{"location":"Moduls/PFC/marclegalPFC.html","title":"Marc legal - M\u00f2dul projecte de desenvolupament d'aplicacions web / multiplataforma","text":"<p>Orden EDU/2887/2010 (DAW) Orden EDU/2000/2010 (DAM)</p> <p>Article 5. M\u00f2dul professional de projecte.</p> <ol> <li> <p>El m\u00f2dul professional de projecte t\u00e9 un car\u00e0cter interdisciplinari i incorpora les variables tecnol\u00f2giques i organitzatives relacionades amb els aspectes essencials de la compet\u00e8ncia professional del t\u00edtol de T\u00e8cnic Superior en Desenvolupament d'Aplicacions Multiplataforma.</p> </li> <li> <p>Amb car\u00e0cter general aquest m\u00f2dul ser\u00e0 impartit pel professorat que exerceix la tutoria de formaci\u00f3 en centres de treball.</p> </li> <li> <p>El m\u00f2dul professional de projecte es desenvolupar\u00e0 durant el mateix per\u00edode que el m\u00f2dul professional de formaci\u00f3 en centres de treball. El professorat responsable del seu desenvolupament haur\u00e0 d'anticipar les activitats d'ensenyament i aprenentatge que facilitin el desenvolupament posterior del m\u00f2dul.</p> </li> <li> <p>El desenvolupament i seguiment del m\u00f2dul professional de projecte haur\u00e0 de compaginar la tutoria individual i col\u00b7lectiva. En qualsevol cas, almenys el 50 % de la durada total es dur\u00e0 a terme de forma presencial, completant-se amb la tutoria a dist\u00e0ncia emprant les tecnologies de la informaci\u00f3 i la comunicaci\u00f3.</p> </li> <li> <p>L'avaluaci\u00f3 d'aquest m\u00f2dul professional quedar\u00e0 condicionada a l'avaluaci\u00f3 positiva de la resta dels m\u00f2duls professionals del cicle formatiu, incl\u00f2s el de formaci\u00f3 en centres de treball.</p> </li> </ol> <p>Codis del m\u00f2dul:  0616 (DAW) / 0491 (DAM)</p>"},{"location":"Moduls/PFC/marclegalPFC.html#resultats-daprenentatge","title":"Resultats d'aprenentatge","text":"RA1RA2RA3RA4"},{"location":"Moduls/PFC/marclegalPFC.html#1-identifica-necessitats-del-sector-productiu-i-de-lorganitzacio-de-lempresa","title":"1. Identifica necessitats del sector productiu i de l'organitzaci\u00f3 de l'empresa.","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>1.1 Identificaci\u00f3 de les funcions dels llocs de treball.</p> <p>1.2 Estructura i organitzaci\u00f3 empresarial del sector.</p> <p>1.3 Activitat de l' empresa i la seva ubicaci\u00f3 en el sector.</p> <p>1.4 Organigrama de la empresa. Relaci\u00f3 funcional entre departaments.</p> <p>1.5 Tend\u00e8ncies del sector: productives, econ\u00f2miques, organitzatives, d' ocupaci\u00f3 i altres.</p> <p>1.6 Procediments de treball en l' \u00e0mbit de l' empresa. Sistemes i m\u00e8todes de treball.</p> <p>1.7 Determinaci\u00f3 de les relacions laborals excloses i relacions laborals especials.</p> <p>1.8 Conveni col.lectiu aplicable a l' \u00e0mbit professional.</p> <p>1.9 La cultura de l' empresa: imatge corporativa.</p> <p>1.10 Sistemes de qualitat i seguretat aplicables en el sector.</p>"},{"location":"Moduls/PFC/marclegalPFC.html#2-disseny-de-projectes-relacionats-amb-el-sector","title":"2. Disseny de projectes relacionats amb el sector.","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>2.1 An\u00e0lisi de la realitat local, de l' oferta empresarial del sector a la zona i del context en el qual es desenvolupar\u00e0 el m\u00f2dul professional de formaci\u00f3 en centres de treball.</p> <p>2.2 Recopilaci\u00f3 d' informaci\u00f3.</p> <p>2.3 Estructura general d' un projecte.</p> <p>2.4 Elaboraci\u00f3 d' un gui\u00f3 de treball.</p> <p>2.5 Planificaci\u00f3 de l' execuci\u00f3 del projecte: objectius, continguts, recursos, metodologia, activitats, temporalitzaci\u00f3 i avaluaci\u00f3.</p> <p>2.6 Viabilitat i oportunitat del projecte.</p> <p>2.7 Revisi\u00f3 de la normativa aplicable.</p>"},{"location":"Moduls/PFC/marclegalPFC.html#3-planificacio-de-lexecucio-del-projecte","title":"3. Planificaci\u00f3 de l'execuci\u00f3 del projecte","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>3.1 Seq\u00fcenciaci\u00f3 d'activitats.</p> <p>3.2 Elaboraci\u00f3 d' instruccions de treball.</p> <p>Elaboraci\u00f3 d' un pla de prevenci\u00f3 de riscos.</p> <p>Documentaci\u00f3 necess\u00e0ria per a la planificaci\u00f3 de l' execuci\u00f3 del projecte.</p> <p>Compliment de normes de seguretat i ambientals.</p> <p>Indicadors de garantia de la qualitat de projectes.</p>"},{"location":"Moduls/PFC/marclegalPFC.html#4-definicio-de-procediments-de-control-i-avaluacio-de-l-execucio-del-projecte","title":"4. Definici\u00f3 de procediments de control i avaluaci\u00f3 de l' execuci\u00f3 del projecte","text":"<p>Criteris d\u2019avaluaci\u00f3</p> <p>4.1 Propuesta de soluciones a los objetivos planteados en el proyecto y justificaci\u00f3n de las seleccionadas.</p> <p>4.2 Definici\u00f3 del procediment d' avaluaci\u00f3 del projecte.</p> <p>4.3 Determinaci\u00f3 de les variables susceptibles d' avaluaci\u00f3.</p> <p>4.4 Documentaci\u00f3 necess\u00e0ria per a l' avaluaci\u00f3 del projecte.</p> <p>4.5 Control de qualitat de proc\u00e9s i producte final.</p> <p>4.6 Registre de resultats.</p>"},{"location":"blog/index.html","title":"Bloc","text":"<p>Foto de Suzy Hazelwood (una mica retallada)</p>"},{"location":"blog/2024/11/18/simulaci%C3%B3-aparcament-amb-java.html","title":"Simulaci\u00f3 aparcament amb Java","text":""},{"location":"blog/2024/11/18/simulaci%C3%B3-aparcament-amb-java.html#enunciat","title":"Enunciat","text":"<p>Heu de crear una classe parking que anomenareu PRU04E05Parking_nom_llinatge.java</p> <p>Aquesta classe ha de simular el funcionament d\u2019un programa de gesti\u00f3 de parking, tal i com se va explicar a classe.</p> <p>Com a m\u00ednim ha de tenir un constructor tal i com es veu a la imatge.</p> <p>M\u00e8todes p\u00fablics que ha de tenir la vostra classe parking (han de ser literalment aquests per qu\u00e8 despr\u00e9s se puguin intercanviar les classes):</p> <p></p> <p>Si considereu necessari crear altres m\u00e8todes, aquests han de ser privats.</p> <p>La classe haur\u00e0 \u201cd\u2019avisar\u201d quan detecti ocupacions de m\u00e9s del 85% a cada tipus de parking.</p> <p>Igualment haur\u00e0 d\u2019avisar quan les places s'exhaureixin i no podran entrar m\u00e9s cotxes, excepte en el cas de que les places exhaurides siguin de discapacitats. Aleshores el cotxe de discapacitat ocupar\u00e0 una pla\u00e7a de parking per no discapacitats i a partir d\u2019aqu\u00ed ser\u00e0 considerat com a no discapacitat.</p> <p>Per comprovar el seu funcionament haureu de crear una classe de prova anomenada PRU04E05ParkingTest_nom_llinatge.java</p> <p>Aquesta segona classe ha de poder rebre un par\u00e0metre que sigui el path complet d\u2019un fitxer. Si \u00e9s el cas, el primer que haur\u00e0 de fer ser\u00e0 omplir el parking amb les matr\u00edcules contingudes al fitxer*. S\u2019ha d\u2019implementar men\u00fa amb les seg\u00fcents opcions:</p> <ul> <li>Omplir parking a partir de fitxer*</li> <li>Entrar Cotxe</li> <li>Entrar Cotxe Discapacitat</li> <li>Surtir Cotxe</li> <li>Surtir Cotxe Discapacitat</li> <li>Guardar llistat de matricules en fitxer*</li> <li>Sortir</li> </ul> <p>* El fitxer es guardar\u00e0 / llegir\u00e0 com a fitxer de text pla i tindr\u00e0 una sola matr\u00edcula per l\u00ednia. Si el fitxer quan es va a llegir no t\u00e9 format correcte, el programa donar\u00e0 advert\u00e8ncia i no continuar\u00e0 amb l\u2019operaci\u00f3 de lectura.</p> <p>CONSIDERACIONS FINALS Si un discapacitat troba tots els llocs espec\u00edfics per ell ocupats, ocupar\u00e0 pla\u00e7a de no discapacitats i ser\u00e0 tractat com a no discapacitat.</p> <p>Heu de comprovar que les matr\u00edcules segueixen el patr\u00f3 [0-9]{4}[A-Z]{3} Si no el compleix haur\u00e0 de donar una excepci\u00f3.</p> <p>En cap cas el programa de prova ha d\u2019acabar, excepte si l\u2019opci\u00f3 escollida \u00e9s acabar.</p> <p>TipusPlacesParking ha de ser un enum amb valors Discapacitat i No_Discapacitat.</p> <p>Missatges d\u2019excepci\u00f3 que han de botar quan pertoqui (els textos han de ser literalment aquests):</p> El cotxe ja est\u00e0 al parking. No pot entrar. ALERTA =====&gt; Garrulo detected!!! Ha aparcat a la pla\u00e7a: \\&lt;num_pla\u00e7a&gt; ALERTA =====&gt; Parking per discapacitats ple. Ha ocupat pla\u00e7a normal num: \\&lt;num_pla\u00e7a&gt; ALERTA =====&gt; Parking per no discapacitats ple. ALERTA =====&gt; Ocupaci\u00f3 de places per no discapacitats supera el 85%. ALERTA =====&gt; Parking per discapacitats ple. ALERTA =====&gt; Ocupaci\u00f3 de places per discapacitats supera el 85%. El cotxe no \u00e9s al parking. ALERTA =====&gt; Matr\u00edcula incorrecte. ALERTA =====&gt; Fitxer incorrecte o inexistent. <p>Per simular els llocs ocupats al parking pels cotxes, heu de fer servir necess\u00e0riament HashMap. Reviseu la documentaci\u00f3 a https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html i exemples a: https://beginnersbook.com/2013/12/hashmap-in-java-with-example/</p>"},{"location":"blog/2024/11/18/exemple-formulari-htmljsphppoo.html","title":"Exemple formulari HTML+JS+PHP+POO","text":"Foto de Markus Spiske"},{"location":"blog/2024/11/18/exemple-formulari-htmljsphppoo.html#codi","title":"Codi","text":"<p>A continuaci\u00f3 teniu el codi que hem vist avui a classe , separat amb tres arxiux:</p> <ul> <li>script.js</li> <li>formulari.html</li> <li>formulari.php</li> </ul> HTML - formulari.htmlJavascript - script.jsPHP - formulari.php <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"cat\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Formulari Persona&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Formulario de Persona&lt;/h1&gt;\n&lt;form id=\"personaForm\" action=\"formulari.php\" method=\"get\"&gt;\n    &lt;label for=\"nom\"&gt;Nombre:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"nom\" name=\"nom\" required&gt;&lt;br&gt;&lt;br&gt;\n\n    &lt;label for=\"edad\"&gt;Edad:&lt;/label&gt;\n    &lt;input type=\"number\" id=\"edat\" name=\"edat\" required&gt;&lt;br&gt;&lt;br&gt;\n\n    &lt;label for=\"dni\"&gt;DNI:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"dni\" name=\"dni\" required&gt;&lt;br&gt;&lt;br&gt;\n\n    &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;script src=\"./script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>document.getElementById('personaForm').addEventListener('submit', function(event) {\nevent.preventDefault(); // Evita enviament per defecte\n\n    // Crear la classe Persona\n    class Persona {\n        constructor(nom, edat, dni) {\n            this.nom = nom;\n            this.edat = edat;\n            this.dni = dni;\n        }\n    }\n\n    // Obtenir els valors del formulari\n    const nom = document.getElementById('nom').value;\n    const edat = document.getElementById('edat').value;\n    const dni = document.getElementById('dni').value;\n\n    // Crear una instancia de Persona\n    const persona = new Persona(nom, edat, dni);\n\n    // Construir la URL amb els parametres\n    debugger;\n    const url = new URL('formulari.php', window.location.href);\n    url.searchParams.append('nom', persona.nom);\n    url.searchParams.append('edat', persona.edat);\n    url.searchParams.append('dni', persona.dni);\n\n    // Redirigir a la URL amb els par\u00e0metres\n    window.location.href = url;\n});\n</code></pre> <pre><code>&lt;?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"GET\") {\n    $nom = $_GET['nom'];\n    $edat = $_GET['edat'];\n    $dni = $_GET['dni'];\n\n    // Aqu\u00ed puedes procesar los datos como desees\n    echo \"Nom: $nom, Edat: $edat, DNI: $dni\";\n}\n?&gt;\n</code></pre> <p>Podeu comprovar el funcionament aqu\u00ed:</p> <p>Example</p> <p></p>"},{"location":"blog/2025/09/25/introducci%C3%B3-a-docker.html","title":"Introducci\u00f3 a Docker","text":"<p>Simplement aquesta entrada per adjuntar-vos un enlla\u00e7 molt interessant per introdu\u00efr-vos al Docker</p> <p>https://sergarb1.github.io/CursoIntroduccionADocker/</p>"},{"location":"blog/2024/11/10/una-o-m%C3%BAltiples-coes.html","title":"Una o m\u00faltiples coes?","text":""},{"location":"blog/2024/11/10/una-o-m%C3%BAltiples-coes.html#unica-cua","title":"\u00danica cua","text":"<p>Avantatges:</p> <ul> <li> <p>Equitat: Els clients s\u00f3n atesos en l'ordre d'arribada, evitant la frustraci\u00f3 de veure com altres cues avancen m\u00e9s r\u00e0pidament.</p> </li> <li> <p>Efici\u00e8ncia: Pot ser m\u00e9s f\u00e0cil per als clients triar una cua, ja que no han de decidir quina caixa sembla m\u00e9s r\u00e0pida.</p> </li> </ul> <p>Inconvenients:</p> <ul> <li> <p>Espai: Pot requerir m\u00e9s espai per acomodar una cua \u00fanica, especialment en hores punta.</p> </li> <li> <p>Gesti\u00f3: Pot ser m\u00e9s complicat gestionar una cua \u00fanica si hi ha molts clients.</p> </li> </ul>"},{"location":"blog/2024/11/10/una-o-m%C3%BAltiples-coes.html#multiples-cues","title":"M\u00faltiples cues","text":"<p>Avantatges:</p> <ul> <li> <p>Flexibilitat: Els clients poden triar la cua que sembla m\u00e9s r\u00e0pida, i les cues poden ser m\u00e9s curtes en espais redu\u00efts.</p> </li> <li> <p>Especialitzaci\u00f3: Algunes caixes poden ser designades per a clients amb poques compres o per a pagaments r\u00e0pids.</p> </li> </ul> <p>Inconvenients:</p> <ul> <li> <p>Inequitat: Els clients poden sentir-se frustrats si una cua avan\u00e7a m\u00e9s r\u00e0pidament que una altra.</p> </li> <li> <p>Decisi\u00f3: Els clients han de decidir quina cua triar, cosa que pot causar estr\u00e8s o indecisi\u00f3.</p> </li> </ul> <p>En general, la millor opci\u00f3 pot dependre de la mida del supermercat, el nombre de clients i l'espai disponible. Alguns supermercats opten per una combinaci\u00f3 de les dues opcions, amb una cua \u00fanica per a caixes r\u00e0pides i m\u00faltiples cues per a caixes normals. Qu\u00e8 en penses? Quina opci\u00f3 creus que funcionaria millor en el teu supermercat? Resposta d'un sistema d'IA. Ara te toca a t\u00fa, formular una nova hip\u00f2tesi o mantenir la que ja tenies una vegada fetes les simulacions proposades als exercicis.</p>"},{"location":"blog/2024/11/06/dist%C3%A0ncia-euclidiana.html","title":"Dist\u00e0ncia Euclidiana?","text":"<p>Qu\u00e8 \u00e9s la dist\u00e0ncia euclidiana?</p> <p>Arran de l'enunciat del seg\u00fcent exercici: \"Implementa una funci\u00f3 que calculi la dist\u00e0ncia euclidiana (comunment anomenada dist\u00e0ncia) entre dos punts en un pla 2D utilitzant l'objecte Math.\", explic, molt breument, qu\u00e8 \u00e9s la dist\u00e0ncia euclidiana i com es calcula.</p> <p>Qu\u00e8 \u00e9s la dist\u00e0ncia euclidiana?</p> <p>La dist\u00e0ncia euclidiana \u00e9s una mesura de la dist\u00e0ncia directa entre dos punts en un espai euclidi\u00e0 (un espai de geometria plana). \u00c9s la forma m\u00e9s comuna de calcular la dist\u00e0ncia entre dos punts en un pla o en un espai tridimensional. En un pla 2D, la dist\u00e0ncia euclidiana entre dos punts (A(x1, y1)) i (B(x2, y2)) es calcula utilitzant la f\u00f3rmula:</p> \\[ \\sqrt{(x_{2}-x_{1})^{2}+(y_{2}-y_{1})^{2}} \\] <p>https://ca.wikipedia.org/wiki/Dist%C3%A0ncia_euclidiana</p>"},{"location":"blog/2024/10/28/crear-una-esfera-3d.html","title":"Crear una esfera 3d","text":"Captura de pantalla de l'execuci\u00f3 de l'exemple. <p>A partir d'all\u00f2 que hem vist a classe se va demanar  fer modificacions per fer, utilitzant llibreries externes una esfera 3D proporcional al radi inserit per l'usuari.</p> <p>Aqu\u00ed teniu un exemple utilitzant la llibreria threeJS. Feu click a l'enlla\u00e7 anterior per accedir a una introducci\u00f3 a la llibreria ThreeJS</p> <p>Aquest \u00e9s el codi de radi_circumferencia3.js <pre><code>// Configuraci\u00f3 b\u00e0sica de Three.js\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\n// Carregar la textura\nconst textureLoader = new THREE.TextureLoader();\nconst texture = textureLoader.load('https://threejsfundamentals.org/threejs/resources/images/wall.jpg'); // URL de la textura\n\n// Crear una esfera\nlet sphere;\nfunction createSphere(radius) {\n    if (sphere) {\n        scene.remove(sphere);\n    }\n    const geometry = new THREE.SphereGeometry(radius, 32, 32);\n    const material = new THREE.MeshBasicMaterial({ map: texture });\n    sphere = new THREE.Mesh(geometry, material);\n    scene.add(sphere);\n}\n\n// Posicionar la c\u00e0mera\ncamera.position.z = 5;\n\n// Funci\u00f3 d'animaci\u00f3\nfunction animate() {\n    requestAnimationFrame(animate);\n    if (sphere) {\n        sphere.rotation.y += 0.01; // Rotaci\u00f3 sobre l'eix Y\n    }\n    renderer.render(scene, camera);\n}\nanimate();\n\n// Ajustar la mida del renderer quan la finestra canvia de mida\nwindow.addEventListener('resize', () =&gt; {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n});\n\n// Gestionar el formulari\ndocument.getElementById('radiusForm').addEventListener('submit', function(event) {\n    event.preventDefault();\n    const radius = parseFloat(document.getElementById('radius').value);\n    if (isNaN(radius) || radius &lt;= 0) {\n        alert('Si us plau, introdueix un radi v\u00e0lid.');\n        return;\n    }\n    createSphere(radius/100);\n});\n</code></pre></p> <p>I aqu\u00ed teniu el codi html radi_circumferencia3.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;Esfera 3D amb Three.js&lt;/title&gt;\n  &lt;style&gt;\n    body { margin: 0; font-family: Arial, sans-serif; text-align: center; }\n    canvas { display: block; margin: 0 auto; }\n    form { margin: 20px; }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Esfera 3D amb Three.js&lt;/h1&gt;\n&lt;form id=\"radiusForm\"&gt;\n  &lt;label for=\"radius\"&gt;Radi:&lt;/label&gt;\n  &lt;input type=\"number\" id=\"radius\" name=\"radius\" required&gt;\n  &lt;button type=\"submit\"&gt;Calcula&lt;/button&gt;\n&lt;/form&gt;\n&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"radi_circumferencia3.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"blog/2024/10/28/crear-una-esfera-3d.html#vista-captura-ampliada","title":"Vista captura ampliada","text":"Captura de pantalla de l'execuci\u00f3 de l'exemple. <p>Accediu a l'execuci\u00f3 de l'exemple</p>"},{"location":"blog/2024/10/23/let-o-var.html","title":"Let o Var?","text":"Foto de Markus Spiske (una mica retallada) <p>Quines s\u00f3n les difer\u00e8ncies entre <code>let</code> i <code>var</code> en JavaScript?</p> <p>La tria entre <code>let</code> i <code>var</code> en JavaScript pot semblar trivial al principi, per\u00f2 t\u00e9 implicacions importants en el comportament del teu codi. Vegem les principals difer\u00e8ncies:</p>"},{"location":"blog/2024/10/23/let-o-var.html#abast-scope","title":"Abast (Scope)","text":"<ul> <li>var: T\u00e9 un abast funcional. Aix\u00f2 significa que una variable declarada amb <code>var</code> dins d'una funci\u00f3 \u00e9s accessible des de qualsevol part d'aquella funci\u00f3, fins i tot si es declara dins d'un bloc (com un <code>if</code> o un <code>for</code>).</li> <li>let: T\u00e9 un abast de bloc. Una variable declarada amb <code>let</code> nom\u00e9s \u00e9s accessible dins del bloc en qu\u00e8 es declara. Si es declara dins d'un bloc, no estar\u00e0 disponible fora d'ell.</li> </ul>"},{"location":"blog/2024/10/23/let-o-var.html#redeclaracio","title":"Redeclaraci\u00f3","text":"<ul> <li>var: Pots redeclarar una variable <code>var</code> dins del mateix \u00e0mbit. La nova declaraci\u00f3 simplement sobreescriur\u00e0 l'anterior.</li> <li>let: No pots redeclarar una variable <code>let</code> dins del mateix \u00e0mbit. Aix\u00f2 evitar\u00e0 errors comuns i far\u00e0 el teu codi m\u00e9s predictible.</li> </ul>"},{"location":"blog/2024/10/23/let-o-var.html#hoisting","title":"Hoisting ?","text":"<ul> <li>var: Les variables declarades amb <code>var</code> s\u00f3n \"hoistejades\", el que significa que la declaraci\u00f3 es mou al principi de l'\u00e0mbit, fins i tot si la declaraci\u00f3 real apareix m\u00e9s avall. No obstant aix\u00f2, el seu valor segueix sent <code>undefined</code> fins que se li assigna un valor.</li> <li>let: Les variables declarades amb <code>let</code> tamb\u00e9 s\u00f3n hoistejades, per\u00f2 no s'inicialitzen amb <code>undefined</code>. Si intentes utilitzar una variable <code>let</code> abans de declarar-la, obtindr\u00e0s un error de refer\u00e8ncia.</li> </ul>"},{"location":"blog/2024/10/23/let-o-var.html#resum-de-les-diferencies","title":"Resum de les difer\u00e8ncies:","text":"Caracter\u00edstica var let Abast Funcional De bloc Redeclaraci\u00f3 Permesa No permesa Hoisting S\u00ed, amb valor inicial undefined S\u00ed, per\u00f2 no s'inicialitza"},{"location":"blog/2024/10/23/let-o-var.html#quan-utilitzar-que","title":"Quan utilitzar qu\u00e8?","text":"<ul> <li>var: Generalment s'evita utilitzar <code>var</code> en el JavaScript modern a causa del seu comportament menys predictible. No obstant aix\u00f2, pot ser \u00fatil en alguns casos espec\u00edfics, com quan es treballa amb codi heretat.</li> <li>let: \u00c9s l'opci\u00f3 preferida per a la majoria dels casos, ja que proporciona un abast m\u00e9s controlat i evita errors comuns.</li> <li>const: Si el valor d'una variable no va a canviar, \u00e9s recomanable utilitzar <code>const</code> per garantir que no es modifiqui accidentalment.</li> </ul>"},{"location":"blog/2024/10/23/let-o-var.html#exemple","title":"Exemple:","text":"<pre><code>if (true) {\n  var x = 10;\n  let y = 20;\n  const z = 30;\n}\n\nconsole.log(x); // Imprimeix 10 (x \u00e9s accessible fora del bloc)\nconsole.log(y); // Error: y is not defined (y nom\u00e9s \u00e9s accessible dins del bloc)\nconsole.log(z); // Error: z is not defined (z nom\u00e9s \u00e9s accessible dins del bloc)\n</code></pre> <p>En resum, <code>let</code> ofereix un major control sobre l'abast de les variables i ajuda a evitar errors comuns. Per tant, \u00e9s l'opci\u00f3 recomanada en la majoria dels casos.</p>"},{"location":"blog/2024/10/30/informaci%C3%B3-sobre-amazon-sdk-php.html","title":"Informaci\u00f3 sobre Amazon SDK PHP","text":"<p>Enlla\u00e7 a exemples al Github </p> <p>https://github.com/awsdocs/aws-doc-sdk-examples/tree/main/php/example_code/dynamodb#code-examples</p> <p>Qu\u00e8 \u00e9s dynamoDB?</p> <p>https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html</p>"},{"location":"blog/2024/10/23/el-bloc.html","title":"El bloc!","text":"<p>Foto de Miguel \u00c1. Padri\u00f1\u00e1n</p> <p>Doncs en aquest lloc web que estic fent aquest curs, notava a faltar qualcuna manera de publicar documentaci\u00f3 que realment no t\u00e9 una estructura clara per\u00f2 que vos pot resultar interessant. Aleshores he revisat si amb el mkdocs - material es podia crear qualcuna cosa semblant a un bloc  i efectivament. I a m\u00e9s a m\u00e9s, amb la mateixa facilitat que la resta de coses.</p> <p>Aix\u00ed doncs, a partir d'ara, tamb\u00e9 tindrem \"entrades\" al bloc per documentar coses que no entren dins l'estructura dels cursos.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html","title":"Spring Boot Qu\u00e8 \u00e9s i com funciona?","text":"<p>Spring Boot \u00e9s una de les tecnologies dins del m\u00f3n de Spring de les que m\u00e9s es fa servir actualment .\u00bfQu\u00e8 \u00e9s i com funciona Spring Boot? . Per entendre el concepte primer hem de reflexionar sobre com constru\u00efm aplicacions amb Spring Framework antigament.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#primeres-passes-sense-spring-boot","title":"Primeres passes sense Spring Boot","text":"<p>Fonamentalment existien tres passes a realitzar. El primer \u00e9s crear un projecte Maven/Gradle i descarregar les depend\u00e8ncies necess\u00e0ries. En segon lloc hi ha el proc\u00e9s de crear l'aplicaci\u00f3, per\u00f2 per aix\u00f2 ens agradi o no hem d'abordar un proc\u00e9s ampli de configuraci\u00f3 de l'aplicaci\u00f3, amb fitxers XML o anotacions i configuracions molt especifiques que moltes vegades nom\u00e9s un expert era capa\u00e7 d'abordar amb garanties. Finalment haur\u00edem de desplegar-la en un servidor.</p> <p>Problemes</p> <p>Si ens posem a pensar una mica a detall en el tema, \u00fanicament la passa n\u00famero dos \u00e9s una tasca de desenvolupament i dins d'aquesta tasca 2 fins i tot la part de configuraci\u00f3 no est\u00e0 clar que sigui desenvolupament en si. S\u00f3n coses que estan m\u00e9s orientats a infraestructura que al desenvolupament en si mateix.</p> <p>No haur\u00edem d'estar triant cont\u00ednuament les depend\u00e8ncies i el servidor de desplegament aix\u00ed com realitzar una configuraci\u00f3 inicial. Aix\u00f2 \u00e9s un tema nom\u00e9s per a experts i que aporta realment poc hauria de ser automatic.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#spring-boot","title":"Spring Boot","text":"<p>SpringBoot neix amb la intenci\u00f3 de simplificar els passos 1 i 3. Simplificar la configuraci\u00f3, que ens puguem centrar en el desenvolupament de la nostra aplicaci\u00f3. Com funciona?. L'enfocament \u00e9s senzill i ho entendrem realitzant un exemple. Per aix\u00f2 anem a connectar-nos a l'assistent de Boot que es denomina Spring Initializer.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#string-boot-starter-y-simplificaciones","title":"String Boot Starter y simplificaciones","text":"<p>L'assistent \u00e9s intu\u00eftiu, elegim el package al qual volem que les nostres classes pertanyin, elegim el nom del projecte i per \u00faltim les depend\u00e8ncies. Aix\u00f2 s\u00ed que ja no es tracta de triar JAR per JAR sin\u00f3 per tipus d'aplicaci\u00f3 que necessitem a aquest concepte se l'anomena Spring Starter. Per tant en comptes d'haver de triar 10 o 20 depend\u00e8ncies \u00e9s molt m\u00e9s c\u00f2mode triar 2 starters i Spring Boot s'encarrega de la resta.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#starters-i-avantatges","title":"Starters i avantatges","text":"<p>L'avantatge \u00e9s abismal ja que no nom\u00e9s redueixo les depend\u00e8ncies sin\u00f3 tamb\u00e9 els temes a configurar ja que els starter poden encarregar-se d'afegir carpetes etc.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#construint-laplicacio","title":"Construint l'aplicaci\u00f3","text":"<p>En aquest cas vaig a construir una aplicaci\u00f3 Spring MVC i trio la depend\u00e8ncia web o Starter Web. Posem generar projecte i ens descarregar\u00e0 un projecte Maven en format zip. Descomprimim el projecte i aquest \u00e9s el seu contingut.</p> <p>Una aplicaci\u00f3 de Spring amb estructura Maven totalment configurada i carpetes addicionals per cobrir les nostres necessitats. El seg\u00fcent pas importar aquesta aplicaci\u00f3 al nostre IDE (IntelliJ al nostre cas). Anam a veure el contingut de la classe DemoApplication.</p> <pre><code>package edu.xaviersastre.demo;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n    public static void main(String[] args) {\n    SpringApplication.run(DemoApplication.class, args);\n}\n</code></pre> <p>Aquesta classe \u00e9s l'encarregada d'arrencar la nostra aplicaci\u00f3 de Spring a difer\u00e8ncia d'un enfocament cl\u00e0ssic no cal desplegar-la en un servidor web ja que Spring Boot proveeix d'un (cont\u00e9 un Tomcat incrustat)</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#spring-boot-controller","title":"Spring Boot Controller","text":"<p>Anam a construir un controlador de Demo molt senzill:</p> <p><pre><code>package edu.xaviersastre.demo;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(DemoApplication.class, args);\n    }\n\n}\n</code></pre> Aquest controlador registra la url de / perqu\u00e8 ens retorni \u201cHola M\u00f3n\u201d. \u00c9s moment d'executar la nostra aplicaci\u00f3, directament des d'IntelliJ o amb mvn. Si obrim un navegador i accedim a la url per defecte del tomcat incrustat http://localhost:8080 veurem quelcom semblant a aix\u00f2.</p> <p>Aquesta \u00e9s la manera com estam executant el nostre codi des d'IntelliJ</p> <p>SpringBoot ens ha simplificat tota l'operativa a l'hora de construir l'aplicaci\u00f3 pr\u00e0cticament no hem hagut de seleccionar depend\u00e8ncies de Spring i no ha fet falta definir cap servidor Tomcat en el nostre entorn de desenvolupament ja que Spring Boot en porta un integrat.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#spring-boot-tomcat-i-docker","title":"Spring Boot Tomcat i Docker","text":"<p>Perqu\u00e8 Spring Boot porta integrat Tomcat?. Molt senzill perqu\u00e8 a partir d'ara els desplegaments no es realitzaran a Servidors Web Standard que emmagatzemen desenes d'aplicacions sin\u00f3 que cadascuna de les aplicacions es desplegar\u00e0 en un contenidor Docker completament a\u00efllada de la resta i independent. El contenidor necessita que l'aplicaci\u00f3 sigui completament operativa per si sola.</p>"},{"location":"blog/2025/09/25/spring-boot-qu%C3%A8-%C3%A9s-i-com-funciona.html#spring-boot-war","title":"Spring Boot WAR","text":"<p>Si el teu problema \u00e9s que ara per ara no tens contenidors Docker ni tens Kubernetes entre les teves eines de desplegament, no hi ha problema. Pots seguir usant Spring Boot i desplegar-lo en un entorn de Tomcat o JBoss directament simplement modificant l'inici i fent que la nostra aplicaci\u00f3 en comptes de desplegar-se com a JAR es desplegui com a WAR.</p> <p>En aquest cas s'haur\u00e0 d'afegir una classe que es cuida d'integrar el projecte amb Tomcat de forma transparent:</p> <pre><code>package edu.xaviersastre.demo;\n\nimport org.springframework.boot.builder.SpringApplicationBuilder;\nimport org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n\npublic class ServletInitializer extends SpringBootServletInitializer {\n\n    @Override\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\n        return application.sources(DemoApplication.class);\n    }\n\n}\n</code></pre>"},{"location":"blog/archive/2025.html","title":"2025","text":""},{"location":"blog/archive/2024.html","title":"2024","text":""},{"location":"blog/category/docker.html","title":"Docker","text":""},{"location":"blog/category/daw.html","title":"DAW","text":""},{"location":"blog/category/dwes.html","title":"DWES","text":""},{"location":"blog/category/dwec.html","title":"DWEC","text":""},{"location":"blog/category/java.html","title":"Java","text":""},{"location":"blog/category/springboot.html","title":"SpringBoot","text":""},{"location":"blog/category/js.html","title":"JS","text":""},{"location":"blog/category/php.html","title":"PHP","text":""},{"location":"blog/category/html.html","title":"HTML","text":""},{"location":"blog/category/programaci%C3%B3.html","title":"Programaci\u00f3","text":""},{"location":"blog/category/dam.html","title":"DAM","text":""},{"location":"blog/category/psp.html","title":"PSP","text":""},{"location":"blog/category/programci%C3%B3-multifil.html","title":"Programci\u00f3 multifil","text":""},{"location":"blog/category/matem%C3%A0tiques.html","title":"Matem\u00e0tiques","text":""},{"location":"blog/category/coneixements-generals.html","title":"Coneixements generals","text":""},{"location":"blog/category/amazon.html","title":"Amazon","text":""},{"location":"blog/category/aws.html","title":"AWS","text":""},{"location":"blog/category/dynamodb.html","title":"DynamoDB","text":""},{"location":"blog/category/javascript.html","title":"Javascript","text":""},{"location":"blog/category/general.html","title":"General","text":""}]}